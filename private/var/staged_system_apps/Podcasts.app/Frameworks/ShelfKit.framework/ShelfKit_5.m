uint64_t sub_322228(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64_t v18;
  void *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  void v33[2];
  uint64_t v34;
  uint64_t v35;
  void *v36;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AE650);
  __chkstk_darwin(v5 - 8);
  v7 = (char *)v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_3D7B30();
  v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  v11 = (char *)v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3D6AC0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v17 = sub_3D7AF0();
    v18 = *(void *)(v17 + 16);
    if (v18)
    {
      v33[0] = v11;
      v33[1] = v2;
      v34 = a2;
      v35 = a1;
      v36 = _swiftEmptyArrayStorage;
      sub_1FBECC(0, v18, 0);
      v19 = v36;
      v20 = (uint64_t *)(v17 + 40);
      do
      {
        v21 = *(v20 - 1);
        v22 = *v20;
        swift_bridgeObjectRetain();
        v23 = sub_321F6C(v21, v22);
        v36 = v19;
        v25 = v19[2];
        v24 = v19[3];
        if (v25 >= v24 >> 1)
        {
          sub_1FBECC(v24 > 1, v25 + 1, 1);
          v19 = v36;
        }
        v20 += 2;
        v19[2] = v25 + 1;
        *((unsigned char *)v19 + v25 + 32) = v23;
        --v18;
      }
      while (v18);
      swift_bridgeObjectRelease();
      a2 = v34;
      a1 = v35;
      v11 = (char *)v33[0];
      v26 = v19[2];
      if (v26) {
        goto LABEL_9;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      v19 = _swiftEmptyArrayStorage;
      v26 = _swiftEmptyArrayStorage[2];
      if (v26)
      {
LABEL_9:
        LODWORD(v16) = 0;
        v27 = (unsigned __int8 *)(v19 + 4);
        do
        {
          v29 = *v27++;
          v28 = v29;
          if ((v29 & ~v16) == 0) {
            v28 = 0;
          }
          v16 = v28 | v16;
          --v26;
        }
        while (v26);
        goto LABEL_16;
      }
    }
    v16 = 0;
LABEL_16:
    swift_bridgeObjectRelease();
    v30 = sub_3D6CE0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(a2, v30);
    v31 = sub_3D6B50();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(a1, v31);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v16;
  }
  sub_250FC((uint64_t)v7, &qword_4AE650);
  v12 = sub_3D7B40();
  sub_32294C((unint64_t *)&qword_4A9C88, (void (*)(uint64_t))&type metadata accessor for JSONError);
  swift_allocError();
  *v13 = &type metadata for Link.Presentation;
  v13[1] = _swiftEmptyArrayStorage;
  (*(void (**)(void *, void, uint64_t))(*(void *)(v12 - 8) + 104))(v13, enum case for JSONError.malformedDocument(_:), v12);
  swift_willThrow();
  v14 = sub_3D6CE0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v14 - 8) + 8))(a2, v14);
  v15 = sub_3D6B50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
  return 0;
}

uint64_t sub_32268C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_3226F8()
{
  unint64_t result = qword_4BE318;
  if (!qword_4BE318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BE318);
  }
  return result;
}

unint64_t sub_322750()
{
  unint64_t result = qword_4BE320;
  if (!qword_4BE320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BE320);
  }
  return result;
}

unint64_t sub_3227A8()
{
  unint64_t result = qword_4BE328;
  if (!qword_4BE328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BE328);
  }
  return result;
}

unint64_t sub_322800()
{
  unint64_t result = qword_4BE330;
  if (!qword_4BE330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BE330);
  }
  return result;
}

uint64_t sub_322854()
{
  return sub_32294C(&qword_4BE338, (void (*)(uint64_t))type metadata accessor for Link);
}

uint64_t sub_32289C(uint64_t a1)
{
  uint64_t result = sub_32294C(&qword_4BE338, (void (*)(uint64_t))type metadata accessor for Link);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_3228F4(uint64_t a1)
{
  uint64_t result = sub_32294C(&qword_4BB948, (void (*)(uint64_t))type metadata accessor for Link);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_32294C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for Link(void *a1, void *a2, int *a3)
{
  v3 = a1;
  int v4 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    void *v3 = *a2;
    v3 = (void *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    uint64_t v8 = a3[7];
    v9 = (void *)((char *)a1 + v8);
    v10 = (void *)((char *)a2 + v8);
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v11 = sub_3D3860();
    uint64_t v12 = *(void *)(v11 - 8);
    v13 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
      v15 = a2;
    }
    else
    {
      uint64_t v17 = v10[1];
      void *v9 = *v10;
      v9[1] = v17;
      int v18 = *((unsigned __int8 *)v10 + 32);
      swift_bridgeObjectRetain();
      if (v18 == 255)
      {
        *((_OWORD *)v9 + 1) = *((_OWORD *)v10 + 1);
        *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
      }
      else
      {
        uint64_t v19 = v10[2];
        uint64_t v20 = v10[3];
        sub_4C484(v19, v20, v18);
        v9[2] = v19;
        v9[3] = v20;
        *((unsigned char *)v9 + 32) = v18;
      }
      v21 = (int *)v11;
      *(_OWORD *)(v9 + 5) = *(_OWORD *)(v10 + 5);
      v22 = (id *)(v10 + 7);
      int v23 = *((unsigned __int8 *)v10 + 64);
      v15 = a2;
      if (v23 == 255)
      {
        v9[7] = *v22;
        *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
      }
      else
      {
        id v24 = *v22;
        sub_4C49C(*v22, *((unsigned char *)v10 + 64));
        v9[7] = v24;
        *((unsigned char *)v9 + 64) = v23;
      }
      v25 = (id *)(v10 + 9);
      int v26 = *((unsigned __int8 *)v10 + 80);
      if (v26 == 255)
      {
        v9[9] = *v25;
        *((unsigned char *)v9 + 80) = *((unsigned char *)v10 + 80);
      }
      else
      {
        id v27 = *v25;
        sub_4C49C(*v25, *((unsigned char *)v10 + 80));
        v9[9] = v27;
        *((unsigned char *)v9 + 80) = v26;
      }
      v28 = (id *)(v10 + 11);
      int v29 = *((unsigned __int8 *)v10 + 96);
      if (v29 == 255)
      {
        v9[11] = *v28;
        *((unsigned char *)v9 + 96) = *((unsigned char *)v10 + 96);
      }
      else
      {
        id v30 = *v28;
        sub_4C49C(*v28, *((unsigned char *)v10 + 96));
        v9[11] = v30;
        *((unsigned char *)v9 + 96) = v29;
      }
      v31 = (id *)(v10 + 13);
      int v32 = *((unsigned __int8 *)v10 + 112);
      if (v32 == 255)
      {
        v9[13] = *v31;
        *((unsigned char *)v9 + 112) = *((unsigned char *)v10 + 112);
      }
      else
      {
        id v33 = *v31;
        sub_4C49C(*v31, *((unsigned char *)v10 + 112));
        v9[13] = v33;
        *((unsigned char *)v9 + 112) = v32;
      }
      v34 = (id *)(v10 + 15);
      int v35 = *((unsigned __int8 *)v10 + 128);
      if (v35 == 255)
      {
        v9[15] = *v34;
        *((unsigned char *)v9 + 128) = *((unsigned char *)v10 + 128);
      }
      else
      {
        id v36 = *v34;
        sub_4C49C(*v34, *((unsigned char *)v10 + 128));
        v9[15] = v36;
        *((unsigned char *)v9 + 128) = v35;
      }
      *((unsigned char *)v9 + 129) = *((unsigned char *)v10 + 129);
      uint64_t v37 = v21[11];
      v38 = (char *)v9 + v37;
      v39 = (char *)v10 + v37;
      uint64_t v40 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 16))(v38, v39, v40);
      uint64_t v41 = v21[12];
      v42 = (void *)((char *)v9 + v41);
      v43 = (void *)((char *)v10 + v41);
      uint64_t v44 = v43[1];
      void *v42 = *v43;
      v42[1] = v44;
      *((unsigned char *)v9 + v21[13]) = *((unsigned char *)v10 + v21[13]);
      *((unsigned char *)v9 + v21[14]) = *((unsigned char *)v10 + v21[14]);
      *((unsigned char *)v9 + v21[15]) = *((unsigned char *)v10 + v21[15]);
      uint64_t v45 = v21[16];
      v46 = (void *)((char *)v9 + v45);
      v47 = (void *)((char *)v10 + v45);
      uint64_t v48 = v47[1];
      void *v46 = *v47;
      v46[1] = v48;
      v49 = *(void (**)(void *, void, uint64_t, int *))(v12 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v49(v9, 0, 1, v21);
    }
    uint64_t v50 = a3[9];
    *((unsigned char *)v3 + a3[8]) = *((unsigned char *)v15 + a3[8]);
    v51 = (char *)v3 + v50;
    v52 = (char *)v15 + v50;
    uint64_t v53 = *(void *)((char *)v15 + v50 + 24);
    if (v53)
    {
      uint64_t v54 = *((void *)v52 + 4);
      *((void *)v51 + 3) = v53;
      *((void *)v51 + 4) = v54;
      (**(void (***)(void))(v53 - 8))();
    }
    else
    {
      long long v55 = *((_OWORD *)v52 + 1);
      *(_OWORD *)v51 = *(_OWORD *)v52;
      *((_OWORD *)v51 + 1) = v55;
      *((void *)v51 + 4) = *((void *)v52 + 4);
    }
    uint64_t v56 = a3[10];
    v57 = (char *)v3 + v56;
    v58 = (char *)v15 + v56;
    uint64_t v59 = sub_3D7340();
    uint64_t v60 = *(void *)(v59 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
    {
      uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
      memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v57, v58, v59);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v60 + 56))(v57, 0, 1, v59);
    }
    uint64_t v62 = a3[11];
    v63 = (char *)v3 + v62;
    v64 = (char *)v15 + v62;
    uint64_t v65 = *(void *)((char *)v15 + v62 + 24);
    if (v65)
    {
      uint64_t v66 = *((void *)v64 + 4);
      *((void *)v63 + 3) = v65;
      *((void *)v63 + 4) = v66;
      (**(void (***)(void))(v65 - 8))();
    }
    else
    {
      long long v67 = *((_OWORD *)v64 + 1);
      *(_OWORD *)v63 = *(_OWORD *)v64;
      *((_OWORD *)v63 + 1) = v67;
      *((void *)v63 + 4) = *((void *)v64 + 4);
    }
  }
  return v3;
}

uint64_t destroy for Link(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[7];
  uint64_t v5 = sub_3D3860();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    int v6 = *(unsigned __int8 *)(v4 + 32);
    if (v6 != 255) {
      sub_49E54(*(void *)(v4 + 16), *(void *)(v4 + 24), v6);
    }
    int v7 = *(unsigned __int8 *)(v4 + 64);
    if (v7 != 255) {
      sub_4C6F0(*(id *)(v4 + 56), v7);
    }
    int v8 = *(unsigned __int8 *)(v4 + 80);
    if (v8 != 255) {
      sub_4C6F0(*(id *)(v4 + 72), v8);
    }
    int v9 = *(unsigned __int8 *)(v4 + 96);
    if (v9 != 255) {
      sub_4C6F0(*(id *)(v4 + 88), v9);
    }
    int v10 = *(unsigned __int8 *)(v4 + 112);
    if (v10 != 255) {
      sub_4C6F0(*(id *)(v4 + 104), v10);
    }
    int v11 = *(unsigned __int8 *)(v4 + 128);
    if (v11 != 255) {
      sub_4C6F0(*(id *)(v4 + 120), v11);
    }
    uint64_t v12 = v4 + *(int *)(v5 + 44);
    uint64_t v13 = sub_3D3750();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = a1 + a2[9];
  if (*(void *)(v14 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v14);
  }
  uint64_t v15 = a1 + a2[10];
  uint64_t v16 = sub_3D7340();
  uint64_t v17 = *(void *)(v16 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
  }
  uint64_t result = a1 + a2[11];
  if (*(void *)(result + 24))
  {
    return __swift_destroy_boxed_opaque_existential_1(result);
  }
  return result;
}

void *initializeWithCopy for Link(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  uint64_t v7 = a3[7];
  int v8 = (void *)((char *)a1 + v7);
  int v9 = (void *)((char *)a2 + v7);
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v10 = sub_3D3860();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    uint64_t v14 = a2;
  }
  else
  {
    uint64_t v15 = v9[1];
    *int v8 = *v9;
    v8[1] = v15;
    int v16 = *((unsigned __int8 *)v9 + 32);
    swift_bridgeObjectRetain();
    if (v16 == 255)
    {
      *((_OWORD *)v8 + 1) = *((_OWORD *)v9 + 1);
      *((unsigned char *)v8 + 32) = *((unsigned char *)v9 + 32);
    }
    else
    {
      uint64_t v17 = v9[2];
      uint64_t v18 = v9[3];
      sub_4C484(v17, v18, v16);
      v8[2] = v17;
      v8[3] = v18;
      *((unsigned char *)v8 + 32) = v16;
    }
    uint64_t v19 = (int *)v10;
    *(_OWORD *)(v8 + 5) = *(_OWORD *)(v9 + 5);
    uint64_t v20 = (id *)(v9 + 7);
    int v21 = *((unsigned __int8 *)v9 + 64);
    uint64_t v14 = a2;
    if (v21 == 255)
    {
      v8[7] = *v20;
      *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
    }
    else
    {
      id v22 = *v20;
      sub_4C49C(*v20, *((unsigned char *)v9 + 64));
      v8[7] = v22;
      *((unsigned char *)v8 + 64) = v21;
    }
    int v23 = (id *)(v9 + 9);
    int v24 = *((unsigned __int8 *)v9 + 80);
    if (v24 == 255)
    {
      v8[9] = *v23;
      *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
    }
    else
    {
      id v25 = *v23;
      sub_4C49C(*v23, *((unsigned char *)v9 + 80));
      v8[9] = v25;
      *((unsigned char *)v8 + 80) = v24;
    }
    int v26 = (id *)(v9 + 11);
    int v27 = *((unsigned __int8 *)v9 + 96);
    if (v27 == 255)
    {
      v8[11] = *v26;
      *((unsigned char *)v8 + 96) = *((unsigned char *)v9 + 96);
    }
    else
    {
      id v28 = *v26;
      sub_4C49C(*v26, *((unsigned char *)v9 + 96));
      v8[11] = v28;
      *((unsigned char *)v8 + 96) = v27;
    }
    int v29 = (id *)(v9 + 13);
    int v30 = *((unsigned __int8 *)v9 + 112);
    if (v30 == 255)
    {
      v8[13] = *v29;
      *((unsigned char *)v8 + 112) = *((unsigned char *)v9 + 112);
    }
    else
    {
      id v31 = *v29;
      sub_4C49C(*v29, *((unsigned char *)v9 + 112));
      v8[13] = v31;
      *((unsigned char *)v8 + 112) = v30;
    }
    int v32 = (id *)(v9 + 15);
    int v33 = *((unsigned __int8 *)v9 + 128);
    if (v33 == 255)
    {
      v8[15] = *v32;
      *((unsigned char *)v8 + 128) = *((unsigned char *)v9 + 128);
    }
    else
    {
      id v34 = *v32;
      sub_4C49C(*v32, *((unsigned char *)v9 + 128));
      v8[15] = v34;
      *((unsigned char *)v8 + 128) = v33;
    }
    *((unsigned char *)v8 + 129) = *((unsigned char *)v9 + 129);
    uint64_t v35 = v19[11];
    id v36 = (char *)v8 + v35;
    uint64_t v37 = (char *)v9 + v35;
    uint64_t v38 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
    uint64_t v39 = v19[12];
    uint64_t v40 = (void *)((char *)v8 + v39);
    uint64_t v41 = (void *)((char *)v9 + v39);
    uint64_t v42 = v41[1];
    *uint64_t v40 = *v41;
    v40[1] = v42;
    *((unsigned char *)v8 + v19[13]) = *((unsigned char *)v9 + v19[13]);
    *((unsigned char *)v8 + v19[14]) = *((unsigned char *)v9 + v19[14]);
    *((unsigned char *)v8 + v19[15]) = *((unsigned char *)v9 + v19[15]);
    uint64_t v43 = v19[16];
    uint64_t v44 = (void *)((char *)v8 + v43);
    uint64_t v45 = (void *)((char *)v9 + v43);
    uint64_t v46 = v45[1];
    *uint64_t v44 = *v45;
    v44[1] = v46;
    v47 = *(void (**)(void *, void, uint64_t, int *))(v11 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v47(v8, 0, 1, v19);
  }
  uint64_t v48 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)v14 + a3[8]);
  v49 = (char *)a1 + v48;
  uint64_t v50 = (char *)v14 + v48;
  uint64_t v51 = *(void *)((char *)v14 + v48 + 24);
  if (v51)
  {
    uint64_t v52 = *((void *)v50 + 4);
    *((void *)v49 + 3) = v51;
    *((void *)v49 + 4) = v52;
    (**(void (***)(void))(v51 - 8))();
  }
  else
  {
    long long v53 = *((_OWORD *)v50 + 1);
    *(_OWORD *)v49 = *(_OWORD *)v50;
    *((_OWORD *)v49 + 1) = v53;
    *((void *)v49 + 4) = *((void *)v50 + 4);
  }
  uint64_t v54 = a3[10];
  long long v55 = (char *)a1 + v54;
  uint64_t v56 = (char *)v14 + v54;
  uint64_t v57 = sub_3D7340();
  uint64_t v58 = *(void *)(v57 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
  {
    uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  }
  uint64_t v60 = a3[11];
  uint64_t v61 = (char *)a1 + v60;
  uint64_t v62 = (char *)v14 + v60;
  uint64_t v63 = *(void *)((char *)v14 + v60 + 24);
  if (v63)
  {
    uint64_t v64 = *((void *)v62 + 4);
    *((void *)v61 + 3) = v63;
    *((void *)v61 + 4) = v64;
    (**(void (***)(void))(v63 - 8))();
  }
  else
  {
    long long v65 = *((_OWORD *)v62 + 1);
    *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
    *((_OWORD *)v61 + 1) = v65;
    *((void *)v61 + 4) = *((void *)v62 + 4);
  }
  return a1;
}

void *assignWithCopy for Link(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (uint64_t)a1 + v6;
  int v8 = (char *)a2 + v6;
  int v9 = (int *)sub_3D3860();
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = *((void *)v8 + 1);
      int v14 = v8[32];
      swift_bridgeObjectRetain();
      if (v14 == 255)
      {
        long long v26 = *((_OWORD *)v8 + 1);
        *(unsigned char *)(v7 + 32) = v8[32];
        *(_OWORD *)(v7 + 16) = v26;
      }
      else
      {
        uint64_t v15 = *((void *)v8 + 2);
        uint64_t v16 = *((void *)v8 + 3);
        sub_4C484(v15, v16, v14);
        *(void *)(v7 + 16) = v15;
        *(void *)(v7 + 24) = v16;
        *(unsigned char *)(v7 + 32) = v14;
      }
      *(void *)(v7 + 40) = *((void *)v8 + 5);
      *(void *)(v7 + 48) = *((void *)v8 + 6);
      int v27 = (id *)(v8 + 56);
      int v28 = v8[64];
      if (v28 == 255)
      {
        id v30 = *v27;
        *(unsigned char *)(v7 + 64) = v8[64];
        *(void *)(v7 + 56) = v30;
      }
      else
      {
        id v29 = *v27;
        sub_4C49C(*v27, v8[64]);
        *(void *)(v7 + 56) = v29;
        *(unsigned char *)(v7 + 64) = v28;
      }
      id v31 = (id *)(v8 + 72);
      int v32 = v8[80];
      if (v32 == 255)
      {
        id v34 = *v31;
        *(unsigned char *)(v7 + 80) = v8[80];
        *(void *)(v7 + 72) = v34;
      }
      else
      {
        id v33 = *v31;
        sub_4C49C(*v31, v8[80]);
        *(void *)(v7 + 72) = v33;
        *(unsigned char *)(v7 + 80) = v32;
      }
      uint64_t v35 = (id *)(v8 + 88);
      int v36 = v8[96];
      if (v36 == 255)
      {
        id v38 = *v35;
        *(unsigned char *)(v7 + 96) = v8[96];
        *(void *)(v7 + 88) = v38;
      }
      else
      {
        id v37 = *v35;
        sub_4C49C(*v35, v8[96]);
        *(void *)(v7 + 88) = v37;
        *(unsigned char *)(v7 + 96) = v36;
      }
      uint64_t v39 = (id *)(v8 + 104);
      int v40 = v8[112];
      if (v40 == 255)
      {
        id v42 = *v39;
        *(unsigned char *)(v7 + 112) = v8[112];
        *(void *)(v7 + 104) = v42;
      }
      else
      {
        id v41 = *v39;
        sub_4C49C(*v39, v8[112]);
        *(void *)(v7 + 104) = v41;
        *(unsigned char *)(v7 + 112) = v40;
      }
      uint64_t v43 = (id *)(v8 + 120);
      int v44 = v8[128];
      if (v44 == 255)
      {
        id v46 = *v43;
        *(unsigned char *)(v7 + 128) = v8[128];
        *(void *)(v7 + 120) = v46;
      }
      else
      {
        id v45 = *v43;
        sub_4C49C(*v43, v8[128]);
        *(void *)(v7 + 120) = v45;
        *(unsigned char *)(v7 + 128) = v44;
      }
      *(unsigned char *)(v7 + 129) = v8[129];
      uint64_t v47 = v9[11];
      uint64_t v48 = v7 + v47;
      v49 = &v8[v47];
      uint64_t v50 = sub_3D3750();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
      uint64_t v51 = v9[12];
      uint64_t v52 = (void *)(v7 + v51);
      long long v53 = &v8[v51];
      void *v52 = *(void *)v53;
      v52[1] = *((void *)v53 + 1);
      *(unsigned char *)(v7 + v9[13]) = v8[v9[13]];
      *(unsigned char *)(v7 + v9[14]) = v8[v9[14]];
      *(unsigned char *)(v7 + v9[15]) = v8[v9[15]];
      uint64_t v54 = v9[16];
      long long v55 = (void *)(v7 + v54);
      uint64_t v56 = &v8[v54];
      *long long v55 = *(void *)v56;
      v55[1] = *((void *)v56 + 1);
      uint64_t v57 = *(void (**)(uint64_t, void, uint64_t, int *))(v10 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v57(v7, 0, 1, v9);
      goto LABEL_68;
    }
LABEL_7:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy((void *)v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_68;
  }
  if (v13)
  {
    sub_32418C(v7, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    goto LABEL_7;
  }
  *(void *)uint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *((void *)v8 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v18 = (long long *)(v7 + 16);
  uint64_t v19 = (long long *)(v8 + 16);
  int v20 = v8[32];
  if (*(unsigned __int8 *)(v7 + 32) == 255)
  {
    if (v20 == 255)
    {
      long long v61 = *v19;
      *(unsigned char *)(v7 + 32) = v8[32];
      *uint64_t v18 = v61;
    }
    else
    {
      uint64_t v58 = *((void *)v8 + 2);
      uint64_t v59 = *((void *)v8 + 3);
      sub_4C484(v58, v59, v8[32]);
      *(void *)(v7 + 16) = v58;
      *(void *)(v7 + 24) = v59;
      *(unsigned char *)(v7 + 32) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_4D7B0(v7 + 16);
    char v60 = v8[32];
    *uint64_t v18 = *v19;
    *(unsigned char *)(v7 + 32) = v60;
  }
  else
  {
    uint64_t v21 = *((void *)v8 + 2);
    uint64_t v22 = *((void *)v8 + 3);
    sub_4C484(v21, v22, v8[32]);
    uint64_t v23 = *(void *)(v7 + 16);
    uint64_t v24 = *(void *)(v7 + 24);
    *(void *)(v7 + 16) = v21;
    *(void *)(v7 + 24) = v22;
    unsigned __int8 v25 = *(unsigned char *)(v7 + 32);
    *(unsigned char *)(v7 + 32) = v20;
    sub_49E54(v23, v24, v25);
  }
  *(void *)(v7 + 40) = *((void *)v8 + 5);
  *(void *)(v7 + 48) = *((void *)v8 + 6);
  uint64_t v62 = (id *)(v7 + 56);
  uint64_t v63 = (id *)(v8 + 56);
  int v64 = v8[64];
  if (*(unsigned __int8 *)(v7 + 64) == 255)
  {
    if (v64 == 255)
    {
      id v70 = *v63;
      *(unsigned char *)(v7 + 64) = v8[64];
      *uint64_t v62 = v70;
    }
    else
    {
      id v68 = *v63;
      sub_4C49C(*v63, v8[64]);
      *(void *)(v7 + 56) = v68;
      *(unsigned char *)(v7 + 64) = v64;
    }
  }
  else if (v64 == 255)
  {
    sub_4D804(v7 + 56);
    char v69 = v8[64];
    *uint64_t v62 = *v63;
    *(unsigned char *)(v7 + 64) = v69;
  }
  else
  {
    id v65 = *v63;
    sub_4C49C(*v63, v8[64]);
    uint64_t v66 = *(void **)(v7 + 56);
    *(void *)(v7 + 56) = v65;
    char v67 = *(unsigned char *)(v7 + 64);
    *(unsigned char *)(v7 + 64) = v64;
    sub_4C6F0(v66, v67);
  }
  v71 = (id *)(v7 + 72);
  v72 = (id *)(v8 + 72);
  int v73 = v8[80];
  if (*(unsigned __int8 *)(v7 + 80) == 255)
  {
    if (v73 == 255)
    {
      id v79 = *v72;
      *(unsigned char *)(v7 + 80) = v8[80];
      id *v71 = v79;
    }
    else
    {
      id v77 = *v72;
      sub_4C49C(*v72, v8[80]);
      *(void *)(v7 + 72) = v77;
      *(unsigned char *)(v7 + 80) = v73;
    }
  }
  else if (v73 == 255)
  {
    sub_4D804(v7 + 72);
    char v78 = v8[80];
    id *v71 = *v72;
    *(unsigned char *)(v7 + 80) = v78;
  }
  else
  {
    id v74 = *v72;
    sub_4C49C(*v72, v8[80]);
    v75 = *(void **)(v7 + 72);
    *(void *)(v7 + 72) = v74;
    char v76 = *(unsigned char *)(v7 + 80);
    *(unsigned char *)(v7 + 80) = v73;
    sub_4C6F0(v75, v76);
  }
  v80 = (id *)(v7 + 88);
  v81 = (id *)(v8 + 88);
  int v82 = v8[96];
  if (*(unsigned __int8 *)(v7 + 96) == 255)
  {
    if (v82 == 255)
    {
      id v88 = *v81;
      *(unsigned char *)(v7 + 96) = v8[96];
      id *v80 = v88;
    }
    else
    {
      id v86 = *v81;
      sub_4C49C(*v81, v8[96]);
      *(void *)(v7 + 88) = v86;
      *(unsigned char *)(v7 + 96) = v82;
    }
  }
  else if (v82 == 255)
  {
    sub_4D804(v7 + 88);
    char v87 = v8[96];
    id *v80 = *v81;
    *(unsigned char *)(v7 + 96) = v87;
  }
  else
  {
    id v83 = *v81;
    sub_4C49C(*v81, v8[96]);
    v84 = *(void **)(v7 + 88);
    *(void *)(v7 + 88) = v83;
    char v85 = *(unsigned char *)(v7 + 96);
    *(unsigned char *)(v7 + 96) = v82;
    sub_4C6F0(v84, v85);
  }
  v89 = (id *)(v7 + 104);
  v90 = (id *)(v8 + 104);
  int v91 = v8[112];
  if (*(unsigned __int8 *)(v7 + 112) == 255)
  {
    if (v91 == 255)
    {
      id v97 = *v90;
      *(unsigned char *)(v7 + 112) = v8[112];
      id *v89 = v97;
    }
    else
    {
      id v95 = *v90;
      sub_4C49C(*v90, v8[112]);
      *(void *)(v7 + 104) = v95;
      *(unsigned char *)(v7 + 112) = v91;
    }
  }
  else if (v91 == 255)
  {
    sub_4D804(v7 + 104);
    char v96 = v8[112];
    id *v89 = *v90;
    *(unsigned char *)(v7 + 112) = v96;
  }
  else
  {
    id v92 = *v90;
    sub_4C49C(*v90, v8[112]);
    v93 = *(void **)(v7 + 104);
    *(void *)(v7 + 104) = v92;
    char v94 = *(unsigned char *)(v7 + 112);
    *(unsigned char *)(v7 + 112) = v91;
    sub_4C6F0(v93, v94);
  }
  v98 = (id *)(v7 + 120);
  v99 = (id *)(v8 + 120);
  int v100 = v8[128];
  if (*(unsigned __int8 *)(v7 + 128) == 255)
  {
    if (v100 == 255)
    {
      id v106 = *v99;
      *(unsigned char *)(v7 + 128) = v8[128];
      id *v98 = v106;
    }
    else
    {
      id v104 = *v99;
      sub_4C49C(*v99, v8[128]);
      *(void *)(v7 + 120) = v104;
      *(unsigned char *)(v7 + 128) = v100;
    }
  }
  else if (v100 == 255)
  {
    sub_4D804(v7 + 120);
    char v105 = v8[128];
    id *v98 = *v99;
    *(unsigned char *)(v7 + 128) = v105;
  }
  else
  {
    id v101 = *v99;
    sub_4C49C(*v99, v8[128]);
    v102 = *(void **)(v7 + 120);
    *(void *)(v7 + 120) = v101;
    char v103 = *(unsigned char *)(v7 + 128);
    *(unsigned char *)(v7 + 128) = v100;
    sub_4C6F0(v102, v103);
  }
  *(unsigned char *)(v7 + 129) = v8[129];
  uint64_t v107 = v9[11];
  uint64_t v108 = v7 + v107;
  v109 = &v8[v107];
  uint64_t v110 = sub_3D3750();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v110 - 8) + 24))(v108, v109, v110);
  uint64_t v111 = v9[12];
  v112 = (void *)(v7 + v111);
  v113 = &v8[v111];
  void *v112 = *(void *)v113;
  v112[1] = *((void *)v113 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + v9[13]) = v8[v9[13]];
  *(unsigned char *)(v7 + v9[14]) = v8[v9[14]];
  *(unsigned char *)(v7 + v9[15]) = v8[v9[15]];
  uint64_t v114 = v9[16];
  v115 = (void *)(v7 + v114);
  v116 = &v8[v114];
  void *v115 = *(void *)v116;
  v115[1] = *((void *)v116 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_68:
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v117 = a3[9];
  uint64_t v118 = (uint64_t)a1 + v117;
  v119 = (void *)((char *)a2 + v117);
  uint64_t v120 = *(void *)((char *)a2 + v117 + 24);
  if (*(void *)((char *)a1 + v117 + 24))
  {
    if (v120)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v118, v119);
      goto LABEL_75;
    }
    __swift_destroy_boxed_opaque_existential_1(v118);
  }
  else if (v120)
  {
    *(void *)(v118 + 24) = v120;
    *(void *)(v118 + 32) = v119[4];
    (**(void (***)(uint64_t, char *))(v120 - 8))(v118, (char *)v119);
    goto LABEL_75;
  }
  long long v121 = *(_OWORD *)v119;
  long long v122 = *((_OWORD *)v119 + 1);
  *(void *)(v118 + 32) = v119[4];
  *(_OWORD *)uint64_t v118 = v121;
  *(_OWORD *)(v118 + 16) = v122;
LABEL_75:
  uint64_t v123 = a3[10];
  v124 = (char *)a1 + v123;
  v125 = (char *)a2 + v123;
  uint64_t v126 = sub_3D7340();
  uint64_t v127 = *(void *)(v126 - 8);
  v128 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v127 + 48);
  int v129 = v128(v124, 1, v126);
  int v130 = v128(v125, 1, v126);
  if (v129)
  {
    if (!v130)
    {
      (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v124, v125, v126);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v127 + 56))(v124, 0, 1, v126);
      goto LABEL_81;
    }
    goto LABEL_80;
  }
  if (v130)
  {
    (*(void (**)(char *, uint64_t))(v127 + 8))(v124, v126);
LABEL_80:
    uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(v124, v125, *(void *)(*(void *)(v131 - 8) + 64));
    goto LABEL_81;
  }
  (*(void (**)(char *, char *, uint64_t))(v127 + 24))(v124, v125, v126);
LABEL_81:
  uint64_t v132 = a3[11];
  uint64_t v133 = (uint64_t)a1 + v132;
  v134 = (char *)a2 + v132;
  uint64_t v135 = *((void *)v134 + 3);
  if (!*(void *)((char *)a1 + v132 + 24))
  {
    if (v135)
    {
      *(void *)(v133 + 24) = v135;
      *(void *)(v133 + 32) = *((void *)v134 + 4);
      (**(void (***)(uint64_t, char *))(v135 - 8))(v133, v134);
      return a1;
    }
LABEL_87:
    long long v136 = *(_OWORD *)v134;
    long long v137 = *((_OWORD *)v134 + 1);
    *(void *)(v133 + 32) = *((void *)v134 + 4);
    *(_OWORD *)uint64_t v133 = v136;
    *(_OWORD *)(v133 + 16) = v137;
    return a1;
  }
  if (!v135)
  {
    __swift_destroy_boxed_opaque_existential_1(v133);
    goto LABEL_87;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)v133, (uint64_t *)v134);
  return a1;
}

uint64_t sub_32418C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for Link(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  int v8 = (_OWORD *)((char *)a1 + v7);
  int v9 = (_OWORD *)((char *)a2 + v7);
  uint64_t v10 = (int *)sub_3D3860();
  uint64_t v11 = *((void *)v10 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    long long v13 = v9[1];
    *int v8 = *v9;
    v8[1] = v13;
    *((unsigned char *)v8 + 32) = *((unsigned char *)v9 + 32);
    *(_OWORD *)((char *)v8 + 40) = *(_OWORD *)((char *)v9 + 40);
    *((void *)v8 + 7) = *((void *)v9 + 7);
    *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
    *(_OWORD *)((char *)v8 + 113) = *(_OWORD *)((char *)v9 + 113);
    *(_OWORD *)((char *)v8 + 104) = *(_OWORD *)((char *)v9 + 104);
    *(_OWORD *)((char *)v8 + 88) = *(_OWORD *)((char *)v9 + 88);
    *(_OWORD *)((char *)v8 + 72) = *(_OWORD *)((char *)v9 + 72);
    *((unsigned char *)v8 + 129) = *((unsigned char *)v9 + 129);
    uint64_t v14 = v10[11];
    uint64_t v15 = (char *)v8 + v14;
    uint64_t v16 = (char *)v9 + v14;
    uint64_t v17 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
    *(_OWORD *)((char *)v8 + v10[12]) = *(_OWORD *)((char *)v9 + v10[12]);
    *((unsigned char *)v8 + v10[13]) = *((unsigned char *)v9 + v10[13]);
    *((unsigned char *)v8 + v10[14]) = *((unsigned char *)v9 + v10[14]);
    *((unsigned char *)v8 + v10[15]) = *((unsigned char *)v9 + v10[15]);
    *(_OWORD *)((char *)v8 + v10[16]) = *(_OWORD *)((char *)v9 + v10[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v18 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v19 = (char *)a1 + v18;
  int v20 = (char *)a2 + v18;
  long long v21 = *((_OWORD *)v20 + 1);
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *((_OWORD *)v19 + 1) = v21;
  *((void *)v19 + 4) = *((void *)v20 + 4);
  uint64_t v22 = a3[10];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_3D7340();
  uint64_t v26 = *(void *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  uint64_t v28 = a3[11];
  id v29 = (char *)a1 + v28;
  id v30 = (char *)a2 + v28;
  long long v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)id v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  *((void *)v29 + 4) = *((void *)v30 + 4);
  return a1;
}

void *assignWithTake for Link(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (uint64_t)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = (int *)sub_3D3860();
  uint64_t v13 = *((void *)v12 - 1);
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14((uint64_t)v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      long long v17 = *((_OWORD *)v11 + 1);
      *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
      *(_OWORD *)(v10 + 16) = v17;
      *(unsigned char *)(v10 + 32) = v11[32];
      *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
      *(void *)(v10 + 56) = *((void *)v11 + 7);
      *(unsigned char *)(v10 + 64) = v11[64];
      *(_OWORD *)(v10 + 113) = *(_OWORD *)(v11 + 113);
      *(_OWORD *)(v10 + 104) = *(_OWORD *)(v11 + 104);
      *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
      *(_OWORD *)(v10 + 72) = *(_OWORD *)(v11 + 72);
      *(unsigned char *)(v10 + 129) = v11[129];
      uint64_t v18 = v12[11];
      uint64_t v19 = v10 + v18;
      int v20 = &v11[v18];
      uint64_t v21 = sub_3D3750();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v19, v20, v21);
      *(_OWORD *)(v10 + v12[12]) = *(_OWORD *)&v11[v12[12]];
      *(unsigned char *)(v10 + v12[13]) = v11[v12[13]];
      *(unsigned char *)(v10 + v12[14]) = v11[v12[14]];
      *(unsigned char *)(v10 + v12[15]) = v11[v12[15]];
      *(_OWORD *)(v10 + v12[16]) = *(_OWORD *)&v11[v12[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_32418C(v10, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_6:
    uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy((void *)v10, v11, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v40 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *(void *)(v10 + 8) = v40;
  swift_bridgeObjectRelease();
  id v41 = v11 + 16;
  int v42 = *(unsigned __int8 *)(v10 + 32);
  if (v42 != 255)
  {
    int v43 = v11[32];
    if (v43 != 255)
    {
      uint64_t v44 = *(void *)(v10 + 16);
      uint64_t v45 = *(void *)(v10 + 24);
      *(_OWORD *)(v10 + 16) = *v41;
      *(unsigned char *)(v10 + 32) = v43;
      sub_49E54(v44, v45, v42);
      goto LABEL_24;
    }
    sub_4D7B0(v10 + 16);
  }
  *(_OWORD *)(v10 + 16) = *v41;
  *(unsigned char *)(v10 + 32) = v11[32];
LABEL_24:
  *(_OWORD *)(v10 + 40) = *(_OWORD *)(v11 + 40);
  id v46 = v11 + 56;
  int v47 = *(unsigned __int8 *)(v10 + 64);
  if (v47 != 255)
  {
    int v48 = v11[64];
    if (v48 != 255)
    {
      v49 = *(void **)(v10 + 56);
      *(void *)(v10 + 56) = *v46;
      *(unsigned char *)(v10 + 64) = v48;
      sub_4C6F0(v49, v47);
      goto LABEL_29;
    }
    sub_4D804(v10 + 56);
  }
  *(void *)(v10 + 56) = *v46;
  *(unsigned char *)(v10 + 64) = v11[64];
LABEL_29:
  uint64_t v50 = v11 + 72;
  int v51 = *(unsigned __int8 *)(v10 + 80);
  if (v51 != 255)
  {
    int v52 = v11[80];
    if (v52 != 255)
    {
      long long v53 = *(void **)(v10 + 72);
      *(void *)(v10 + 72) = *v50;
      *(unsigned char *)(v10 + 80) = v52;
      sub_4C6F0(v53, v51);
      goto LABEL_34;
    }
    sub_4D804(v10 + 72);
  }
  *(void *)(v10 + 72) = *v50;
  *(unsigned char *)(v10 + 80) = v11[80];
LABEL_34:
  uint64_t v54 = v11 + 88;
  int v55 = *(unsigned __int8 *)(v10 + 96);
  if (v55 != 255)
  {
    int v56 = v11[96];
    if (v56 != 255)
    {
      uint64_t v57 = *(void **)(v10 + 88);
      *(void *)(v10 + 88) = *v54;
      *(unsigned char *)(v10 + 96) = v56;
      sub_4C6F0(v57, v55);
      goto LABEL_39;
    }
    sub_4D804(v10 + 88);
  }
  *(void *)(v10 + 88) = *v54;
  *(unsigned char *)(v10 + 96) = v11[96];
LABEL_39:
  uint64_t v58 = v11 + 104;
  int v59 = *(unsigned __int8 *)(v10 + 112);
  if (v59 != 255)
  {
    int v60 = v11[112];
    if (v60 != 255)
    {
      long long v61 = *(void **)(v10 + 104);
      *(void *)(v10 + 104) = *v58;
      *(unsigned char *)(v10 + 112) = v60;
      sub_4C6F0(v61, v59);
      goto LABEL_44;
    }
    sub_4D804(v10 + 104);
  }
  *(void *)(v10 + 104) = *v58;
  *(unsigned char *)(v10 + 112) = v11[112];
LABEL_44:
  uint64_t v62 = v11 + 120;
  int v63 = *(unsigned __int8 *)(v10 + 128);
  if (v63 == 255)
  {
LABEL_48:
    *(void *)(v10 + 120) = *v62;
    *(unsigned char *)(v10 + 128) = v11[128];
    goto LABEL_49;
  }
  int v64 = v11[128];
  if (v64 == 255)
  {
    sub_4D804(v10 + 120);
    goto LABEL_48;
  }
  id v65 = *(void **)(v10 + 120);
  *(void *)(v10 + 120) = *v62;
  *(unsigned char *)(v10 + 128) = v64;
  sub_4C6F0(v65, v63);
LABEL_49:
  *(unsigned char *)(v10 + 129) = v11[129];
  uint64_t v66 = v12[11];
  uint64_t v67 = v10 + v66;
  id v68 = &v11[v66];
  uint64_t v69 = sub_3D3750();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v69 - 8) + 40))(v67, v68, v69);
  uint64_t v70 = v12[12];
  v71 = (void *)(v10 + v70);
  v72 = &v11[v70];
  uint64_t v74 = *(void *)v72;
  uint64_t v73 = *((void *)v72 + 1);
  void *v71 = v74;
  v71[1] = v73;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v10 + v12[13]) = v11[v12[13]];
  *(unsigned char *)(v10 + v12[14]) = v11[v12[14]];
  *(unsigned char *)(v10 + v12[15]) = v11[v12[15]];
  uint64_t v75 = v12[16];
  char v76 = (void *)(v10 + v75);
  id v77 = &v11[v75];
  uint64_t v79 = *(void *)v77;
  uint64_t v78 = *((void *)v77 + 1);
  *char v76 = v79;
  v76[1] = v78;
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v23 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  if (*(void *)((char *)a1 + v23 + 24)) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v23);
  }
  long long v26 = *((_OWORD *)v25 + 1);
  *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
  *((_OWORD *)v24 + 1) = v26;
  *((void *)v24 + 4) = *((void *)v25 + 4);
  uint64_t v27 = a3[10];
  uint64_t v28 = (char *)a1 + v27;
  id v29 = (char *)a2 + v27;
  uint64_t v30 = sub_3D7340();
  uint64_t v31 = *(void *)(v30 - 8);
  int v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  int v33 = v32(v28, 1, v30);
  int v34 = v32(v29, 1, v30);
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v28, v29, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v28, v30);
LABEL_14:
    uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(v28, v29, *(void *)(*(void *)(v35 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v28, v29, v30);
LABEL_15:
  uint64_t v36 = a3[11];
  id v37 = (char *)a1 + v36;
  if (*(void *)((char *)a1 + v36 + 24)) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1 + v36);
  }
  long long v38 = *(_OWORD *)((char *)a2 + v36 + 16);
  *(_OWORD *)id v37 = *(_OWORD *)((char *)a2 + v36);
  *((_OWORD *)v37 + 1) = v38;
  *((void *)v37 + 4) = *(void *)((char *)a2 + v36 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for Link(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_324B84);
}

uint64_t sub_324B84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for Link(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_324CCC);
}

uint64_t sub_324CCC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_324E00()
{
  sub_4E580(319, (unint64_t *)&qword_4ABAF0, (void (*)(uint64_t))&type metadata accessor for ArtworkModel);
  if (v0 <= 0x3F)
  {
    sub_4E580(319, (unint64_t *)&qword_4AB420, (void (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

ValueMetadata *type metadata accessor for Link.Presentation()
{
  return &type metadata for Link.Presentation;
}

uint64_t ToggleCellModel.init(id:keyPath:offName:onName:impressionMetrics:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  if (!a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_4AE5A0);
    sub_3D8D40();
    v18._countAndFlagsBits = 45;
    v18._object = (void *)0xE100000000000000;
    sub_3D7E90(v18);
    v19._countAndFlagsBits = a4;
    v19._object = a5;
    sub_3D7E90(v19);
    v20._countAndFlagsBits = 45;
    v20._object = (void *)0xE100000000000000;
    sub_3D7E90(v20);
    v21._countAndFlagsBits = a6;
    v21._object = a7;
    sub_3D7E90(v21);
    a1 = 0;
    a2 = 0xE000000000000000;
  }
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  uint64_t v16 = type metadata accessor for ToggleCellModel();
  return sub_2A728(a8, (uint64_t)a9 + *(int *)(v16 + 32));
}

uint64_t type metadata accessor for ToggleCellModel()
{
  uint64_t result = qword_4BE448;
  if (!qword_4BE448) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ToggleCellModel.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ToggleCellModel() + 32);

  return sub_2A6C0(v3, a1);
}

uint64_t sub_3250D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2A6C0(v2 + *(int *)(a1 + 32), a2);
}

BOOL _s8ShelfKit15ToggleCellModelV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_3D7340();
  uint64_t v30 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE490);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v29 - v14;
  __chkstk_darwin(v16);
  Swift::String v18 = (char *)&v29 - v17;
  if (*a1 == *a2 && a1[1] == a2[1] || (v19 = sub_3D8FE0(), BOOL result = 0, (v19 & 1) != 0))
  {
    sub_3D8A50();
    if ((sub_3D8A40() & 1) == 0) {
      return 0;
    }
    if (a1[3] == a2[3] && a1[4] == a2[4] || (v21 = sub_3D8FE0(), BOOL result = 0, (v21 & 1) != 0))
    {
      if (a1[5] == a2[5] && a1[6] == a2[6] || (v22 = sub_3D8FE0(), BOOL result = 0, (v22 & 1) != 0))
      {
        uint64_t v23 = type metadata accessor for ToggleCellModel();
        sub_2A6C0((uint64_t)a1 + *(int *)(v23 + 32), (uint64_t)v18);
        sub_2A6C0((uint64_t)a2 + *(int *)(v23 + 32), (uint64_t)v15);
        uint64_t v24 = (uint64_t)&v9[*(int *)(v7 + 48)];
        sub_2A6C0((uint64_t)v18, (uint64_t)v9);
        sub_2A6C0((uint64_t)v15, v24);
        uint64_t v25 = v30;
        long long v26 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
        if (v26((uint64_t)v9, 1, v4) == 1)
        {
          sub_250FC((uint64_t)v15, (uint64_t *)&unk_4B9870);
          sub_250FC((uint64_t)v18, (uint64_t *)&unk_4B9870);
          if (v26(v24, 1, v4) == 1)
          {
            sub_250FC((uint64_t)v9, (uint64_t *)&unk_4B9870);
            return 1;
          }
        }
        else
        {
          sub_2A6C0((uint64_t)v9, (uint64_t)v12);
          if (v26(v24, 1, v4) != 1)
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v6, v24, v4);
            sub_3260F0(&qword_4BE498, (void (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
            char v27 = sub_3D7C80();
            uint64_t v28 = *(void (**)(char *, uint64_t))(v25 + 8);
            v28(v6, v4);
            sub_250FC((uint64_t)v15, (uint64_t *)&unk_4B9870);
            sub_250FC((uint64_t)v18, (uint64_t *)&unk_4B9870);
            v28(v12, v4);
            sub_250FC((uint64_t)v9, (uint64_t *)&unk_4B9870);
            return (v27 & 1) != 0;
          }
          sub_250FC((uint64_t)v15, (uint64_t *)&unk_4B9870);
          sub_250FC((uint64_t)v18, (uint64_t *)&unk_4B9870);
          (*(void (**)(char *, uint64_t))(v25 + 8))(v12, v4);
        }
        sub_250FC((uint64_t)v9, &qword_4BE490);
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_32553C(uint64_t a1)
{
  uint64_t result = sub_3260F0(&qword_4BE3E8, (void (*)(uint64_t))type metadata accessor for ToggleCellModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_325594()
{
  return sub_3260F0(&qword_4BE3E8, (void (*)(uint64_t))type metadata accessor for ToggleCellModel);
}

uint64_t *initializeBufferWithCopyOfBuffer for ToggleCellModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    uint64_t v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    uint64_t v7 = a2[5];
    a1[4] = a2[4];
    a1[5] = v7;
    uint64_t v8 = *(int *)(a3 + 32);
    __dst = (char *)a1 + v8;
    uint64_t v9 = (char *)a2 + v8;
    a1[6] = a2[6];
    uint64_t v10 = sub_3D7340();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12(v9, 1, v10))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
      memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
    }
  }
  return v3;
}

uint64_t destroy for ToggleCellModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_3D7340();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for ToggleCellModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  uint64_t v7 = *(int *)(a3 + 32);
  __dst = (char *)a1 + v7;
  uint64_t v8 = (char *)a2 + v7;
  a1[6] = a2[6];
  uint64_t v9 = sub_3D7340();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(__dst, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(__dst, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(__dst, 0, 1, v9);
  }
  return a1;
}

void *assignWithCopy for ToggleCellModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 32);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_3D7340();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for ToggleCellModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v4 = *(int *)(a3 + 32);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_3D7340();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for ToggleCellModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_release();
  uint64_t v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[6];
  a1[5] = a2[5];
  a1[6] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_3D7340();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for ToggleCellModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_325ED4);
}

uint64_t sub_325ED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ToggleCellModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_325F9C);
}

uint64_t sub_325F9C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_326048()
{
  sub_3FBDC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_3260F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static SeparatorStyle.== infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  if (a1 >> 6)
  {
    if (a1 >> 6 == 1)
    {
      if ((a2 & 0xC0) != 0x40) {
        return 0;
      }
      return (((a1 & 1) == 0) ^ a2) & 1;
    }
    if (a1 == 128)
    {
      if (a2 == 128) {
        return 1;
      }
    }
    else if (a2 == 129)
    {
      return 1;
    }
  }
  else if (a2 < 0x40u)
  {
    return (((a1 & 1) == 0) ^ a2) & 1;
  }
  return 0;
}

uint64_t sub_3261A8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  if (!(v2 >> 6))
  {
    if (v3 < 0x40) {
      return (((v2 & 1) == 0) ^ v3) & 1;
    }
    return 0;
  }
  if (v2 >> 6 == 1)
  {
    if ((v3 & 0xC0) != 0x40) {
      return 0;
    }
    return (((v2 & 1) == 0) ^ v3) & 1;
  }
  if (v2 == 128)
  {
    if (v3 != 128) {
      return 0;
    }
  }
  else if (v3 != 129)
  {
    return 0;
  }
  return 1;
}

uint64_t getEnumTagSinglePayload for SeparatorStyle(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7E) {
    goto LABEL_17;
  }
  if (a2 + 130 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 130) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 130;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 130;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 130;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v6 >= 0x7D) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for SeparatorStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 130 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 130) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7D)
  {
    unsigned int v6 = ((a2 - 126) >> 8) + 1;
    *uint64_t result = a2 - 126;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x326390);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_3263B8(unsigned char *a1)
{
  int v1 = (char)*a1;
  if (v1 >= 0) {
    return *a1 >> 6;
  }
  else {
    return v1 & 1 | 2u;
  }
}

unsigned char *sub_3263D4(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    *uint64_t result = *result & 1 | ((_BYTE)a2 << 6);
  }
  else {
    *uint64_t result = a2 & 1 | 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for SeparatorStyle()
{
  return &type metadata for SeparatorStyle;
}

BOOL UITraitCollection.interfaceMode.getter()
{
  return [v0 horizontalSizeClass] == (char *)&dword_0 + 2;
}

BOOL static UITraitCollection.interfaceMode.getter()
{
  id v0 = [self currentTraitCollection];
  int v1 = (char *)[v0 horizontalSizeClass];

  return v1 == (unsigned char *)&dword_0 + 2;
}

uint64_t sub_326498(uint64_t (*a1)(void))
{
  return a1();
}

void *sub_3264C0(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  while (1)
  {
    if (!v2) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t result = (void *)sub_1FBF1C(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0) {
      break;
    }
    uint64_t v4 = 0;
    while (v2 != v4)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v5 = sub_3D8BF0();
      }
      else
      {
        uint64_t v5 = *(void *)(a1 + 8 * v4 + 32);
        swift_retain();
      }
      uint64_t v6 = *(void *)(v5 + OBJC_IVAR____TtC8ShelfKit20LibraryEpisodeLockup_podcastUuid);
      uint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC8ShelfKit20LibraryEpisodeLockup_podcastUuid + 8);
      swift_bridgeObjectRetain();
      swift_release();
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1) {
        sub_1FBF1C(v8 > 1, v9 + 1, 1);
      }
      ++v4;
      _swiftEmptyArrayStorage[2] = v9 + 1;
      uint64_t v10 = &_swiftEmptyArrayStorage[2 * v9];
      v10[4] = v6;
      v10[5] = v7;
      if (v2 == v4) {
        return _swiftEmptyArrayStorage;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_3D8D90();
    swift_bridgeObjectRelease();
  }
  __break(1u);
  return result;
}

uint64_t sub_326638(void *a1, unint64_t a2)
{
  unint64_t v2 = a2;
  if (a2 >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_3D8D90();
    if (v4) {
      goto LABEL_3;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    return (uint64_t)a1;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_30;
  }
LABEL_3:
  unint64_t v28 = v2;
  unint64_t v29 = v2 & 0xC000000000000001;
  uint64_t v5 = 4;
  uint64_t v27 = v4;
  while (1)
  {
    uint64_t v7 = v5 - 4;
    if (v29)
    {
      uint64_t v8 = sub_3D8BF0();
      uint64_t v9 = v5 - 3;
      if (__OFADD__(v7, 1)) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v8 = *(void *)(v2 + 8 * v5);
      swift_retain();
      uint64_t v9 = v5 - 3;
      if (__OFADD__(v7, 1))
      {
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
    }
    uint64_t v11 = *(void *)(v8 + OBJC_IVAR____TtC8ShelfKit20LibraryEpisodeLockup_podcastUuid);
    uint64_t v10 = *(void *)(v8 + OBJC_IVAR____TtC8ShelfKit20LibraryEpisodeLockup_podcastUuid + 8);
    uint64_t v12 = a1[2];
    swift_bridgeObjectRetain();
    if (v12)
    {
      sub_32000(v11, v10);
      if (v13)
      {
        swift_release();
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
    }
    swift_retain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v2 = sub_32000(v11, v10);
    uint64_t v16 = a1[2];
    BOOL v17 = (v15 & 1) == 0;
    uint64_t v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      goto LABEL_27;
    }
    char v19 = v15;
    if (a1[3] < v18) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v15 & 1) == 0) {
        goto LABEL_22;
      }
    }
    else
    {
      sub_2FB670();
      if ((v19 & 1) == 0)
      {
LABEL_22:
        a1[(v2 >> 6) + 8] |= 1 << v2;
        char v22 = (uint64_t *)(a1[6] + 16 * v2);
        uint64_t *v22 = v11;
        v22[1] = v10;
        *(void *)(a1[7] + 8 * v2) = v8;
        uint64_t v23 = a1[2];
        BOOL v24 = __OFADD__(v23, 1);
        uint64_t v25 = v23 + 1;
        if (v24) {
          goto LABEL_28;
        }
        a1[2] = v25;
        swift_bridgeObjectRetain();
        goto LABEL_5;
      }
    }
LABEL_4:
    uint64_t v6 = a1[7];
    swift_release();
    *(void *)(v6 + 8 * v2) = v8;
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = v27;
    unint64_t v2 = v28;
LABEL_6:
    ++v5;
    if (v9 == v4) {
      goto LABEL_30;
    }
  }
  sub_2F7724(v18, isUniquelyReferenced_nonNull_native);
  unint64_t v20 = sub_32000(v11, v10);
  if ((v19 & 1) == (v21 & 1))
  {
    unint64_t v2 = v20;
    if ((v19 & 1) == 0) {
      goto LABEL_22;
    }
    goto LABEL_4;
  }
  uint64_t result = sub_3D9070();
  __break(1u);
  return result;
}

uint64_t sub_3268BC()
{
  uint64_t v1 = v0;
  sub_3D4750();
  swift_beginAccess();
  sub_3D4750();
  swift_endAccess();
  uint64_t v2 = sub_3D3F60();
  uint64_t v4 = v3;
  if (v2 == sub_3D3F60() && v4 == v5)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v7 = sub_3D8FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v7 & 1) == 0)
    {
      sub_2360C8(v1 + 168, (uint64_t)v16);
      swift_beginAccess();
      sub_3D4750();
      swift_endAccess();
      sub_3D3E60();
    }
  }
  uint64_t v8 = sub_3D4710();
  swift_beginAccess();
  uint64_t v9 = sub_3D4710();
  swift_endAccess();
  if (v8 != v9)
  {
    sub_2360C8(v1 + 168, (uint64_t)v15);
    swift_beginAccess();
    sub_3D4710();
    swift_endAccess();
    sub_3D3EA0();
  }
  int v10 = sub_3D4730() & 1;
  swift_beginAccess();
  int v11 = sub_3D4730() & 1;
  uint64_t v12 = swift_endAccess();
  if (v10 != v11)
  {
    sub_2360C8(v1 + 168, (uint64_t)v14);
    swift_beginAccess();
    sub_3D4730();
    swift_endAccess();
    uint64_t v12 = sub_3D3EE0();
  }
  return sub_326AE8(v12);
}

uint64_t sub_326AE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ActionMenu(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (unint64_t *)((char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for HeaderButtonItem();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (uint64_t *)((char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v9);
  int v11 = (char *)&v28 - v10;
  uint64_t v12 = (void (**)(uint64_t))(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_rebuildMenuBar);
  swift_beginAccess();
  char v13 = *v12;
  uint64_t v14 = swift_retain();
  v13(v14);
  swift_release();
  int v15 = *(unsigned __int8 *)(v1 + 232);
  if (v15 == 9)
  {
    if (*(void *)(v1 + 168) == 2)
    {
      int8x16_t v21 = vorrq_s8(*(int8x16_t *)(v1 + 200), *(int8x16_t *)(v1 + 216));
      if (!(*(void *)&vorr_s8(*(int8x8_t *)v21.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v21, v21, 8uLL)) | *(void *)(v1 + 192) | *(void *)(v1 + 184) | *(void *)(v1 + 176)))
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_4A9888);
        uint64_t v22 = swift_allocObject();
        *(_OWORD *)(v22 + 16) = xmmword_3DED90;
        swift_storeEnumTagMultiPayload();
        unint64_t v28 = (void *)v22;
        sub_3D5880();
        return swift_bridgeObjectRelease();
      }
    }
    goto LABEL_8;
  }
  if (v15 != 8 || !*(void *)(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_podcastDetail))
  {
LABEL_8:
    sub_32FAB0(v4);
    if (*(void *)(*(unint64_t *)((char *)v4 + *(int *)(v2 + 32)) + 16))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_4A9888);
      unint64_t v24 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      uint64_t v25 = swift_allocObject();
      *(_OWORD *)(v25 + 16) = xmmword_3DED90;
      uint64_t v26 = v25 + v24;
      uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ABA50) + 48);
      sub_338310((uint64_t)v4, v26, type metadata accessor for ActionMenu);
      *(unsigned char *)(v26 + v27) = 2;
      swift_storeEnumTagMultiPayload();
      unint64_t v28 = (void *)v25;
      sub_3D5880();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v28 = _swiftEmptyArrayStorage;
      sub_3D5880();
    }
    char v19 = type metadata accessor for ActionMenu;
    uint64_t v20 = (uint64_t)v4;
    return sub_338378(v20, v19);
  }
  swift_retain();
  uint64_t v16 = PodcastDetail.lockup.getter();
  v8[3] = type metadata accessor for LibraryShowLockup();
  v8[4] = sub_335608(&qword_4B8F70, (void (*)(uint64_t))type metadata accessor for LibraryShowLockup);
  swift_release();
  *uint64_t v8 = v16;
  swift_storeEnumTagMultiPayload();
  sub_3382A8((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for HeaderButtonItem);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4A9888);
  unint64_t v17 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_3DED90;
  sub_338310((uint64_t)v11, v18 + v17, (uint64_t (*)(void))type metadata accessor for HeaderButtonItem);
  unint64_t v28 = (void *)v18;
  sub_3D5880();
  swift_bridgeObjectRelease();
  char v19 = (uint64_t (*)(void))type metadata accessor for HeaderButtonItem;
  uint64_t v20 = (uint64_t)v11;
  return sub_338378(v20, v19);
}

uint64_t ModernEpisodesPresenter.pageHeader.getter()
{
  return swift_retain();
}

uint64_t ModernEpisodesPresenter.dismiss.getter()
{
  return swift_retain();
}

uint64_t ModernEpisodesPresenter.dismiss.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_dismiss);
  swift_beginAccess();
  void *v3 = a1;
  return swift_release();
}

uint64_t (*ModernEpisodesPresenter.dismiss.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t ModernEpisodesPresenter.headerButtonItems.getter()
{
  return swift_retain();
}

uint64_t sub_327050@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v3 = (uint64_t *)(*a1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_rebuildMenuBar);
  swift_beginAccess();
  uint64_t v5 = *v3;
  uint64_t v4 = v3[1];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v5;
  *(void *)(v6 + 24) = v4;
  *a2 = sub_9181C;
  a2[1] = (uint64_t (*)())v6;
  return swift_retain();
}

uint64_t sub_3270DC(uint64_t *a1, void *a2)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = v3;
  uint64_t v6 = (uint64_t (**)())(*a2 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_rebuildMenuBar);
  swift_beginAccess();
  *uint64_t v6 = sub_336AB0;
  v6[1] = (uint64_t (*)())v5;
  swift_retain();
  return swift_release();
}

uint64_t ModernEpisodesPresenter.rebuildMenuBar.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_rebuildMenuBar);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_retain();
  return v2;
}

uint64_t ModernEpisodesPresenter.rebuildMenuBar.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_rebuildMenuBar);
  swift_beginAccess();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return swift_release();
}

uint64_t (*ModernEpisodesPresenter.rebuildMenuBar.modify())()
{
  return j__swift_endAccess;
}

uint64_t ModernEpisodesPresenter.refreshControls.getter()
{
  uint64_t v1 = OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___refreshControls;
  if (*(void *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___refreshControls))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___refreshControls);
  }
  else
  {
    uint64_t v3 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_4AB9C8);
    swift_allocObject();
    uint64_t v2 = sub_3D58D0();
    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t ModernEpisodesPresenter.refreshControls.setter(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___refreshControls) = a1;
  return swift_release();
}

uint64_t (*ModernEpisodesPresenter.refreshControls.modify(uint64_t *a1))(void *a1)
{
  a1[1] = v1;
  *a1 = ModernEpisodesPresenter.refreshControls.getter();
  return sub_327438;
}

uint64_t sub_327438(void *a1)
{
  *(void *)(a1[1] + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___refreshControls) = *a1;
  return swift_release();
}

uint64_t ModernEpisodesPresenter.pageContent.getter()
{
  return swift_retain();
}

uint64_t ModernEpisodesPresenter.paginatedPublisher.getter()
{
  return swift_retain();
}

uint64_t ModernEpisodesPresenter.paginatedPublisher.setter(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_paginatedPublisher);
  swift_beginAccess();
  void *v3 = a1;
  return swift_release();
}

uint64_t (*ModernEpisodesPresenter.paginatedPublisher.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t ModernEpisodesPresenter.Configuration.episodeListType.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_327568(v1, a1);
}

uint64_t sub_327568(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ModernEpisodesPresenter.Configuration.episodeListType.setter(uint64_t a1)
{
  return sub_3275CC(a1, v1);
}

uint64_t sub_3275CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t ModernEpisodesPresenter.Configuration.showsPageHeader.getter()
{
  return *(unsigned __int8 *)(v0 + 65);
}

uint64_t ModernEpisodesPresenter.Configuration.showsPageHeader.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 65) = result;
  return result;
}

void (__swiftcall *ModernEpisodesPresenter.Configuration.showsPageHeader.modify())()
{
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

double ModernEpisodesPresenter.Configuration.init(episodeListType:showsPageHeader:)@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  sub_2360C8(a1, (uint64_t)v9);
  char v5 = v12;
  long long v6 = v9[1];
  *(_OWORD *)a3 = v9[0];
  *(_OWORD *)(a3 + 16) = v6;
  double result = *(double *)&v10;
  long long v8 = v11;
  *(_OWORD *)(a3 + 32) = v10;
  *(_OWORD *)(a3 + 48) = v8;
  *(unsigned char *)(a3 + 64) = v5;
  *(unsigned char *)(a3 + 65) = a2;
  return result;
}

uint64_t ModernEpisodesPresenter.__allocating_init(asPartOf:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  ModernEpisodesPresenter.init(asPartOf:with:)(a1, a2);
  return v4;
}

uint64_t ModernEpisodesPresenter.init(asPartOf:with:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v126 = type metadata accessor for ModernShelf();
  uint64_t v127 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  v109 = &v97[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v7 - 8);
  uint64_t v108 = &v97[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v107 = &v97[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_3D6F40();
  __chkstk_darwin(v11 - 8);
  id v104 = &v97[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v102 = type metadata accessor for FlowDestination();
  __chkstk_darwin(v102);
  char v103 = (uint64_t *)&v97[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v14 - 8);
  char v105 = &v97[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v101 = sub_3D2460();
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  v99 = &v97[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1FE0);
  __chkstk_darwin(v17 - 8);
  v119 = &v97[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1BE0);
  __chkstk_darwin(v19 - 8);
  id v106 = &v97[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v118 = sub_3D4780();
  uint64_t v117 = *(void *)(v118 - 8);
  __chkstk_darwin(v118);
  v116 = &v97[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AB588);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = &v97[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = type metadata accessor for PageContent();
  __chkstk_darwin(v26);
  unint64_t v28 = &v97[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v114 = *(void *)a2;
  uint64_t v128 = *(void *)(a2 + 8);
  uint64_t v120 = *(void *)(a2 + 16);
  uint64_t v121 = *(void *)(a2 + 24);
  uint64_t v122 = *(void *)(a2 + 32);
  uint64_t v123 = *(void *)(a2 + 40);
  uint64_t v125 = *(void *)(a2 + 48);
  uint64_t v124 = *(void *)(a2 + 56);
  int v115 = *(unsigned __int8 *)(a2 + 64);
  int v98 = *(unsigned __int8 *)(a2 + 65);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_areEpisodesEmpty) = 2;
  uint64_t v29 = OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_pageHeader;
  long long v137 = 0uLL;
  BYTE4(v138) = -96;
  LODWORD(v138) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4B2000);
  swift_allocObject();
  uint64_t v30 = sub_3D58D0();
  uint64_t v111 = v29;
  *(void *)(v3 + v29) = v30;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_hideAllHeaderSeparators) = 1;
  uint64_t v31 = OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_dismiss;
  LOBYTE(v137) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4AB218);
  swift_allocObject();
  *(void *)(v3 + v31) = sub_3D58D0();
  uint64_t v32 = OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_headerButtonItems;
  *(void *)&long long v137 = _swiftEmptyArrayStorage;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4AB9C0);
  swift_allocObject();
  *(void *)(v3 + v32) = sub_3D58D0();
  int v33 = (void (__swiftcall **)())(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_rebuildMenuBar);
  *int v33 = FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
  v33[1] = 0;
  *(void *)(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___refreshControls) = 0;
  uint64_t v34 = OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_pageContent;
  unsigned char *v28 = 0;
  swift_storeEnumTagMultiPayload();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4B1DB0);
  swift_allocObject();
  *(void *)(v3 + v34) = sub_3D58D0();
  *(void *)(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_subscriptions) = _swiftEmptyArrayStorage;
  *(void *)(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_paginatedPublisher) = 0;
  *(void *)(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_podcastDetail) = 0;
  uint64_t v35 = *(void (**)(unsigned char *, void, uint64_t, int *))(v127 + 56);
  v127 += 56;
  v112 = v35;
  v35((unsigned char *)(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___downloadingShelf), 1, 1, (int *)v126);
  *(void *)(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_frozenLockupShelves) = _swiftEmptyArrayStorage;
  uint64_t v36 = v128;
  uint64_t v37 = v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter__episodeOrderingFrozen;
  LOBYTE(v137) = 0;
  sub_3D59A0();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v23 + 32))(v37, v25, v22);
  uint64_t v38 = v114;
  *(void *)(v3 + 16) = a1;
  type metadata accessor for FreezableContentSubject();
  swift_retain();
  sub_3D70B0();
  *(void *)(v3 + 24) = v137;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4AD450);
  sub_3D70B0();
  *(_OWORD *)(v3 + 32) = v137;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4AB9D0);
  sub_3D70B0();
  sub_18F70(&v137, v3 + 48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4AB9D8);
  sub_3D70B0();
  sub_18F70(&v137, v3 + 88);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4B2450);
  uint64_t v113 = a1;
  uint64_t v39 = v120;
  sub_3D70B0();
  sub_18F70(&v137, v3 + 128);
  *(void *)&long long v137 = v38;
  *((void *)&v137 + 1) = v36;
  LOBYTE(v37) = v121;
  uint64_t v138 = v39;
  uint64_t v139 = v121;
  uint64_t v40 = v122;
  uint64_t v41 = v123;
  uint64_t v140 = v122;
  uint64_t v141 = v123;
  uint64_t v42 = v125;
  uint64_t v43 = v124;
  uint64_t v142 = v125;
  uint64_t v143 = v124;
  LODWORD(v23) = v115;
  char v144 = v115;
  uint64_t v110 = v3 + 168;
  sub_2360C8((uint64_t)&v137, v3 + 168);
  uint64_t v44 = v36;
  uint64_t v45 = v40;
  sub_B5744(v38, v44, v39, v37, v40, v41, v42, v43, v23);
  int v46 = v23;
  char v96 = v23;
  uint64_t v47 = v38;
  sub_B5744(v38, v128, v39, v37, v45, v41, v42, v43, v96);
  sub_3D3E50();
  sub_3D3E90();
  sub_3D3ED0();
  int v48 = v116;
  sub_3D4790();
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v117 + 32))(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings, v48, v118);
  uint64_t v49 = EpisodeListType.title.getter();
  if (!v50)
  {
    sub_B2620(v38, v128, v120, v121, v122, v123, v125, v124, v46);
LABEL_8:
    uint64_t v54 = v110;
    uint64_t v133 = 0;
    uint64_t v134 = 0;
    char v136 = -96;
    int v135 = 0;
    sub_3D58B0();
    goto LABEL_9;
  }
  uint64_t v51 = v49;
  uint64_t v52 = v50;
  sub_B2620(v47, v128, v120, v121, v122, v123, v125, v124, v46);
  if ((v98 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v53 = 0x6000000000;
  if (!v46) {
    uint64_t v53 = 0;
  }
  uint64_t v133 = v51;
  uint64_t v134 = v52;
  int v135 = v53;
  char v136 = BYTE4(v53);
  swift_bridgeObjectRetain();
  sub_3D58B0();
  swift_bridgeObjectRelease();
  uint64_t v54 = v110;
LABEL_9:
  sub_2360C8(v54, (uint64_t)&v133);
  uint64_t v55 = sub_3D3EB0();
  if (v56)
  {
    uint64_t v57 = v55;
    uint64_t v58 = v56;
    uint64_t v128 = v3;
    int v59 = (objc_class *)[self mainBundle];
    v95._countAndFlagsBits = 0x8000000000409EB0;
    v145._countAndFlagsBits = 0x6C6C754620656553;
    v145._object = (void *)0xED0000776F685320;
    v146.value._countAndFlagsBits = 0;
    v146.value._object = 0;
    v60.super.isa = v59;
    v147._countAndFlagsBits = 0;
    v147._object = (void *)0xE000000000000000;
    uint64_t v61 = sub_3D2060(v145, v146, v60, v147, v95);
    uint64_t v63 = v62;

    uint64_t v64 = type metadata accessor for Header(0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 56))(v119, 1, 1, v64);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1CC0);
    uint64_t v65 = swift_allocObject();
    *(_OWORD *)(v65 + 16) = xmmword_3DED90;
    uint64_t v66 = v99;
    sub_3D2450();
    uint64_t v125 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
    uint64_t v124 = v67;
    (*(void (**)(unsigned char *, uint64_t))(v100 + 8))(v66, v101);
    uint64_t v68 = sub_3D3860();
    uint64_t v69 = (uint64_t)v105;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56))(v105, 1, 1, v68);
    uint64_t v70 = (uint64_t)v103;
    *char v103 = v57;
    *(void *)(v70 + 8) = v58;
    swift_storeEnumTagMultiPayload();
    LOBYTE(v130) = 0;
    char v129 = 0;
    swift_bridgeObjectRetain();
    uint64_t v71 = (uint64_t)v104;
    sub_3D6F00();
    uint64_t v72 = type metadata accessor for FlowAction(0);
    swift_allocObject();
    uint64_t v73 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v70, 0, 0, v61, v63, (char *)&v130, 0, 48, &v129, v71);
    *((void *)&v131 + 1) = v72;
    uint64_t v132 = sub_335608((unint64_t *)&qword_4B1FA0, (void (*)(uint64_t))type metadata accessor for FlowAction);
    *(void *)&long long v130 = v73;
    uint64_t v74 = (int *)type metadata accessor for Link();
    *(void *)(v65 + 56) = v74;
    *(void *)(v65 + 64) = sub_335608(&qword_4A9C28, (void (*)(uint64_t))type metadata accessor for Link);
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v65 + 32));
    char v76 = (char *)boxed_opaque_existential_2Tm + v74[10];
    uint64_t v77 = sub_3D7340();
    uint64_t v78 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v77 - 8) + 56);
    v78(v76, 1, 1, v77);
    uint64_t v79 = (char *)boxed_opaque_existential_2Tm + v74[11];
    *((void *)v79 + 4) = 0;
    *(_OWORD *)uint64_t v79 = 0u;
    *((_OWORD *)v79 + 1) = 0u;
    uint64_t v80 = v124;
    uint64_t *boxed_opaque_existential_2Tm = v125;
    boxed_opaque_existential_2Tm[1] = v80;
    boxed_opaque_existential_2Tm[2] = v61;
    boxed_opaque_existential_2Tm[3] = v63;
    boxed_opaque_existential_2Tm[4] = 0;
    boxed_opaque_existential_2Tm[5] = 0;
    sub_18F88(v69, (uint64_t)boxed_opaque_existential_2Tm + v74[7], (uint64_t *)&unk_4B1F70);
    *((unsigned char *)boxed_opaque_existential_2Tm + v74[8]) = 48;
    sub_18F88((uint64_t)&v130, (uint64_t)boxed_opaque_existential_2Tm + v74[9], (uint64_t *)&unk_4BC3D0);
    uint64_t v81 = sub_3D2350();
    int v82 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56);
    uint64_t v83 = (uint64_t)v107;
    v82(v107, 1, 1, v81);
    uint64_t v132 = 0;
    long long v131 = 0u;
    long long v130 = 0u;
    uint64_t v84 = (uint64_t)v108;
    v78(v108, 1, 1, v77);
    char v85 = (int *)v126;
    id v86 = v109;
    char v87 = &v109[*(int *)(v126 + 32)];
    *char v87 = 0;
    v87[1] = 0;
    uint64_t v88 = (uint64_t)v86 + v85[9];
    v82((unsigned char *)v88, 1, 1, v81);
    *id v86 = 0x6B6E694C776F6853;
    v86[1] = 0xE800000000000000;
    sub_18F88((uint64_t)v119, (uint64_t)v86 + v85[5], &qword_4B1FE0);
    v89 = (char *)v86 + v85[6];
    *(_WORD *)v89 = 17;
    *((_WORD *)v89 + 3) = 256;
    *(_DWORD *)(v89 + 2) = 0;
    *((void *)v89 + 1) = 1;
    *(void *)((char *)v86 + v85[7]) = v65;
    sub_4B03C(v83, v88, &qword_4AD7B0);
    *((unsigned char *)v86 + v85[10]) = 1;
    *((unsigned char *)v86 + v85[11]) = 0;
    uint64_t v90 = (uint64_t)v86 + v85[12];
    if (*((void *)&v131 + 1))
    {
      sub_18F70(&v130, v90);
    }
    else
    {
      long long v91 = (unint64_t)v131;
      *(_OWORD *)uint64_t v90 = v130;
      *(_OWORD *)(v90 + 16) = v91;
      *(void *)(v90 + 32) = v132;
    }
    id v92 = v112;
    uint64_t v3 = v128;
    sub_18F88(v84, (uint64_t)v86 + v85[13], (uint64_t *)&unk_4B9870);
    swift_bridgeObjectRelease();
    *char v87 = 0;
    v87[1] = 0;
    v93 = v106;
    sub_3382A8((uint64_t)v86, (uint64_t)v106, (uint64_t (*)(void))type metadata accessor for ModernShelf);
    swift_release();
    v92(v93, 0, 1, v85);
    sub_18F88((uint64_t)v93, v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_fullShowLink, &qword_4B1BE0);
  }
  else
  {
    swift_release();
    v112((unsigned char *)(v3 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_fullShowLink), 1, 1, (int *)v126);
  }
  return v3;
}

uint64_t ModernEpisodesPresenter.interactionContextPage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings;
  swift_beginAccess();
  uint64_t v4 = sub_3D4780();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v3, v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  sub_3D2950();
  return swift_storeEnumTagMultiPayload();
}

Swift::Void __swiftcall ModernEpisodesPresenter.viewDidLoad()()
{
  uint64_t v1 = v0;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE4E0);
  uint64_t v34 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  int v33 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE4E8);
  uint64_t v3 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE4F0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3290D8();
  sub_2360C8((uint64_t)(v0 + 21), (uint64_t)v38);
  sub_2360C8((uint64_t)v38, (uint64_t)v39);
  if (v40 == 8)
  {
    uint64_t v10 = v39[0];
    uint64_t v11 = v39[1];
    uint64_t v12 = v1[5];
    uint64_t ObjectType = swift_getObjectType();
    *(void *)((char *)v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_podcastDetail) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 304))(v10, v11, ObjectType, v12);
    swift_release();
  }
  sub_326AE8();
  uint64_t v14 = v1[5];
  uint64_t v15 = swift_getObjectType();
  uint64_t v36 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v14 + 368))(v38, v15, v14);
  uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 376))(v36, 50, v15, v14);
  uint64_t v17 = (void *)((char *)v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_paginatedPublisher);
  swift_beginAccess();
  *uint64_t v17 = v16;
  swift_retain();
  swift_release();
  uint64_t v37 = v16;
  swift_getKeyPath();
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B8DD8);
  uint64_t v31 = sub_3D6E4(&qword_4BD0E8, &qword_4B8DD8);
  sub_3D5B30();
  swift_release();
  sub_3D6E4(&qword_4BE4F8, &qword_4BE4E8);
  uint64_t v18 = v30;
  sub_3D5C80();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  sub_3D6E4(&qword_4BE500, &qword_4BE4F0);
  uint64_t v19 = sub_3D5AC0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v37 = v19;
  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4AD490);
  sub_3D6E4(&qword_4AC8F0, &qword_4AD490);
  sub_3D5CB0();
  swift_release();
  swift_beginAccess();
  uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AB1D8);
  uint64_t v29 = sub_3D6E4(&qword_4AB1E0, &qword_4AB1D8);
  sub_3D57F0();
  swift_endAccess();
  swift_release();
  uint64_t v28 = sub_3293A8((uint64_t)v38, v19);
  uint64_t v27 = sub_329A9C(v36, v19);
  if ([self isRunningOnDesktop]) {
    uint64_t v20 = 3;
  }
  else {
    uint64_t v20 = 4;
  }
  __swift_project_boxed_opaque_existential_1(v1 + 16, v1[19]);
  uint64_t v37 = sub_3D2680();
  *(void *)(swift_allocObject() + 16) = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4ADD28);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BE508);
  sub_3D6E4(&qword_4ADD30, &qword_4ADD28);
  uint64_t v21 = v33;
  sub_3D5B40();
  swift_release();
  swift_release();
  sub_3D6E4(&qword_4BE510, &qword_4BE4E0);
  uint64_t v22 = v35;
  uint64_t v23 = sub_3D5AC0();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v22);
  uint64_t v24 = sub_32A1A4();
  uint64_t v37 = v16;
  uint64_t v25 = sub_3D5AC0();
  sub_32A63C(v28, v23, v24, v25, v27);
  swift_release();
  swift_release();
  uint64_t v37 = ModernEpisodesPresenter.refreshControls.getter();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4AB9C8);
  sub_3D6E4(&qword_4AF480, &qword_4AB9C8);
  sub_3D5CB0();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_3D57F0();
  swift_endAccess();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
}

uint64_t sub_3290D8()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AF488);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6[1] = *(void *)(v0 + 24);
  type metadata accessor for FreezableContentSubject();
  sub_335608(&qword_4AD230, (void (*)(uint64_t))type metadata accessor for FreezableContentSubject);
  sub_91AC4();
  sub_3D5C80();
  swift_allocObject();
  swift_weakInit();
  sub_3D6E4(&qword_4AF490, &qword_4AF488);
  sub_3D5CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4AB1D8);
  sub_3D6E4(&qword_4AB1E0, &qword_4AB1D8);
  sub_3D57F0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_32930C(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    int v3 = *(unsigned __int8 *)(result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_areEpisodesEmpty);
    *(unsigned char *)(result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_areEpisodesEmpty) = v1 == 0;
    if (v3 == 2 || ((v3 & 1) == 0) == (v1 == 0)) {
      sub_326AE8();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_3293A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v40 = a2;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1BE0);
  __chkstk_darwin(v48);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B3C60);
  uint64_t v39 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD460);
  __chkstk_darwin(v10 - 8);
  uint64_t v47 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE830);
  uint64_t v41 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE838);
  uint64_t v43 = *(void *)(v15 - 8);
  uint64_t v44 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE840);
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = a1;
  uint64_t v21 = sub_3D3EB0();
  if (v22)
  {
    uint64_t v23 = v21;
    uint64_t v24 = v22;
    uint64_t v25 = *(void *)(v3 + 40);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 312))(v23, v24, ObjectType, v25);
    swift_bridgeObjectRelease();
    id v50 = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_4BE848);
    sub_3D6E4(&qword_4BE850, &qword_4BE848);
    uint64_t v28 = (void *)sub_3D5A30();
    swift_release();
    uint64_t v49 = v40;
    id v50 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_4BE858);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4AD490);
    sub_3D6E4(&qword_4BE860, &qword_4BE858);
    sub_3D6E4(&qword_4AC8F0, &qword_4AD490);
    sub_3D5B10();
    swift_release();
    uint64_t v29 = swift_allocObject();
    uint64_t v30 = v42;
    sub_2360C8(v42, v29 + 16);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = sub_33824C;
    *(void *)(v31 + 24) = v29;
    sub_3383E0(v30, (void (*)(void, void, void, void, void, void, void, void, char))sub_B5744);
    sub_3D6E4(&qword_4BE868, &qword_4BE830);
    sub_3D5B40();
    swift_release();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v12);
    sub_3D530(0, (unint64_t *)&qword_4AD4D0);
    id v50 = (id)sub_3D8560();
    uint64_t v32 = sub_3D8500();
    uint64_t v33 = (uint64_t)v47;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v47, 1, 1, v32);
    sub_3D6E4(&qword_4BE870, &qword_4BE838);
    sub_54FBC();
    uint64_t v34 = v44;
    sub_3D5C20();
    sub_250FC(v33, &qword_4AD460);

    (*(void (**)(char *, uint64_t))(v43 + 8))(v17, v34);
    sub_3D6E4(&qword_4BE878, &qword_4BE840);
    uint64_t v35 = v46;
    uint64_t v36 = sub_3D5AC0();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v20, v35);
  }
  else
  {
    uint64_t v37 = type metadata accessor for ModernShelf();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v6, 1, 1, v37);
    sub_3D5930();
    sub_3D6E4(&qword_4B3C68, &qword_4B3C60);
    uint64_t v36 = sub_3D5AC0();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v7);
  }
  return v36;
}

uint64_t sub_329A9C(uint64_t a1, uint64_t a2)
{
  uint64_t v35 = a2;
  uint64_t v29 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE7C0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE7D8);
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v38 = v7;
  __chkstk_darwin(v7);
  uint64_t v34 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE7E0);
  uint64_t v39 = *(void *)(v9 - 8);
  uint64_t v40 = v9;
  __chkstk_darwin(v9);
  uint64_t v36 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE7E8);
  uint64_t v30 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE7F0);
  uint64_t v31 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE7F8);
  uint64_t v32 = *(void *)(v17 - 8);
  uint64_t v33 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v29 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2360C8(v2 + 168, (uint64_t)v43);
  if (sub_3D3F10())
  {
    uint64_t v42 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_4BD0D0);
    sub_3D6E4(&qword_4BD0D8, &qword_4BD0D0);
    sub_335608(&qword_4BE800, (void (*)(uint64_t))&type metadata accessor for EpisodeListSettings);
    sub_3D5C80();
    swift_allocObject();
    swift_weakInit();
    __swift_instantiateConcreteTypeFromMangledName(&qword_4AD490);
    sub_3D6E4(&qword_4BE808, &qword_4BE7E8);
    sub_3D5AD0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v11);
    sub_3D6E4(&qword_4BE810, &qword_4BE7F0);
    sub_3D6E4(&qword_4AC8F0, &qword_4AD490);
    sub_3D5C90();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v16, v14);
    sub_3D6E4(&qword_4BE818, &qword_4BE7F8);
    uint64_t v20 = v33;
    uint64_t v21 = sub_3D5A70();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v19, v20);
    uint64_t v42 = v21;
    uint64_t v22 = sub_3D5AC0();
    swift_release();
    uint64_t v23 = v34;
    uint64_t v41 = v35;
    uint64_t v42 = v22;
    sub_3D5B10();
    sub_3D6E4(&qword_4BE820, &qword_4BE7D8);
    uint64_t v24 = v36;
    uint64_t v25 = v38;
    sub_3D5AD0();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v25);
    sub_3D6E4(&qword_4BE828, &qword_4BE7E0);
    uint64_t v26 = v40;
    uint64_t v27 = sub_3D5AC0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v26);
  }
  else
  {
    LOBYTE(v42) = 0;
    sub_3D5930();
    sub_3D6E4(&qword_4BE7C8, &qword_4BE7C0);
    uint64_t v27 = sub_3D5AC0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  return v27;
}

uint64_t sub_32A1A4()
{
  uint64_t v1 = type metadata accessor for ObserverQueue();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AE260);
  uint64_t v27 = *(void *)(v4 - 8);
  uint64_t v28 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AE268);
  uint64_t v29 = *(void *)(v7 - 8);
  uint64_t v30 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE7C0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v0 + 168);
  uint64_t v14 = *(void *)(v0 + 176);
  int v16 = *(unsigned __int8 *)(v0 + 232);
  if (v16 == 1)
  {
    uint64_t v19 = *(void *)(v0 + 40);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 264))(v15, v14, ObjectType, v19);
LABEL_7:
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = sub_AD548((uint64_t)v3);
    sub_338378((uint64_t)v3, (uint64_t (*)(void))type metadata accessor for ObserverQueue);
    uint64_t v31 = v23;
    __swift_instantiateConcreteTypeFromMangledName(&qword_4AE2D0);
    sub_3D6E4(&qword_4AE2D8, &qword_4AE2D0);
    sub_3D5B40();
    swift_release();
    sub_3D6E4(&qword_4AE2E0, &qword_4AE260);
    uint64_t v24 = v28;
    sub_3D5C80();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v6, v24);
    sub_3D6E4(&qword_4AE330, &qword_4AE268);
    uint64_t v25 = v30;
    uint64_t v18 = sub_3D5AC0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v25);
    return v18;
  }
  if (v16 == 9)
  {
    int8x16_t v17 = vorrq_s8(*(int8x16_t *)(v0 + 200), *(int8x16_t *)(v0 + 216));
    if (!(*(void *)&vorr_s8(*(int8x8_t *)v17.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v17, v17, 8uLL)) | *(void *)(v0 + 192) | *(void *)(v0 + 184) | v14 | v15))
    {
      uint64_t v21 = *(void *)(v0 + 40);
      uint64_t v22 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v21 + 256))(v22, v21);
      goto LABEL_7;
    }
  }
  char v32 = 0;
  sub_3D5930();
  sub_3D6E4(&qword_4BE7C8, &qword_4BE7C0);
  uint64_t v18 = sub_3D5AC0();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return v18;
}

uint64_t sub_32A63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v11 = *v5;
  uint64_t v52 = v5 + 21;
  uint64_t v62 = v11;
  uint64_t v63 = v5;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1BE0);
  uint64_t v60 = *(void *)(v12 - 8);
  uint64_t v58 = *(void *)(v60 + 64);
  __chkstk_darwin(v12 - 8);
  uint64_t v54 = (uint64_t)&v44 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ModernShelf();
  uint64_t v57 = *(void *)(v14 - 8);
  uint64_t v55 = *(void *)(v57 + 64);
  __chkstk_darwin(v14 - 8);
  uint64_t v51 = (uint64_t)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v49 = (char **)((char *)&v44 - v17);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD460);
  __chkstk_darwin(v18 - 8);
  uint64_t v47 = (char *)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AB6D8);
  __chkstk_darwin(v45);
  uint64_t v44 = (char *)&v44 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE778);
  uint64_t v48 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE780);
  uint64_t v56 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v64 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE788);
  uint64_t v61 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  id v50 = (char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = a1;
  uint64_t v68 = a3;
  uint64_t v69 = a2;
  uint64_t v66 = a5;
  uint64_t v67 = a4;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4AB588);
  sub_3D59B0();
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4AC9B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BE790);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4AB268);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BD370);
  sub_3D6E4(&qword_4AC9B8, &qword_4AC9B0);
  sub_3D6E4(&qword_4BE798, &qword_4BE790);
  sub_3D6E4(&qword_4AB270, &qword_4AB268);
  sub_3D6E4(&qword_4BD378, &qword_4BD370);
  sub_3D6E4(&qword_4B6AB0, &qword_4AB6D8);
  sub_3D5730();
  sub_3D530(0, (unint64_t *)&qword_4AD4D0);
  v70[0] = (id)sub_3D8560();
  uint64_t v25 = sub_3D8500();
  uint64_t v26 = (uint64_t)v47;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v47, 1, 1, v25);
  sub_3D6E4(&qword_4BE7A0, &qword_4BE778);
  sub_54FBC();
  uint64_t v27 = v46;
  sub_3D5C20();
  sub_250FC(v26, &qword_4AD460);

  (*(void (**)(char *, uint64_t))(v48 + 8))(v22, v27);
  sub_2360C8((uint64_t)v52, (uint64_t)v70);
  uint64_t v28 = (uint64_t)v63 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_fullShowLink;
  sub_3383E0((uint64_t)v70, (void (*)(void, void, void, void, void, void, void, void, char))sub_B5744);
  uint64_t v29 = v49;
  sub_32B058(v49);
  uint64_t v30 = swift_allocObject();
  swift_weakInit();
  uint64_t v31 = v54;
  sub_153B4(v28, v54, &qword_4B1BE0);
  uint64_t v32 = v51;
  sub_3382A8((uint64_t)v29, v51, (uint64_t (*)(void))type metadata accessor for ModernShelf);
  unint64_t v33 = (*(unsigned __int8 *)(v60 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v60 + 80);
  unint64_t v34 = (v58 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (*(unsigned __int8 *)(v57 + 80) + v34 + 65) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  unint64_t v36 = (v55 + v35 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v30;
  sub_18F88(v31, v37 + v33, &qword_4B1BE0);
  sub_2360C8((uint64_t)v70, v37 + v34);
  sub_3382A8(v32, v37 + v35, (uint64_t (*)(void))type metadata accessor for ModernShelf);
  *(void *)(v37 + v36) = v62;
  uint64_t v38 = swift_allocObject();
  *(void *)(v38 + 16) = sub_337ED0;
  *(void *)(v38 + 24) = v37;
  type metadata accessor for PageContent();
  sub_3D6E4(&qword_4BE7A8, &qword_4BE780);
  uint64_t v39 = v50;
  uint64_t v40 = v53;
  uint64_t v41 = v64;
  sub_3D5AD0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v56 + 8))(v41, v40);
  swift_allocObject();
  swift_weakInit();
  sub_3D6E4(&qword_4BE7B0, &qword_4BE788);
  uint64_t v42 = v59;
  sub_3D5CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v39, v42);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4AB1D8);
  sub_3D6E4(&qword_4AB1E0, &qword_4AB1D8);
  sub_3D57F0();
  swift_endAccess();
  return swift_release();
}

Swift::Void __swiftcall ModernEpisodesPresenter.viewDidDisappear()()
{
}

uint64_t sub_32B058@<X0>(void *a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1BE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v8 = &v13[-v7];
  uint64_t v9 = v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___downloadingShelf;
  swift_beginAccess();
  sub_153B4(v9, (uint64_t)v8, &qword_4B1BE0);
  uint64_t v10 = type metadata accessor for ModernShelf();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10) != 1) {
    return sub_3382A8((uint64_t)v8, (uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ModernShelf);
  }
  sub_250FC((uint64_t)v8, &qword_4B1BE0);
  sub_32B26C(a1);
  sub_338310((uint64_t)a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ModernShelf);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
  swift_beginAccess();
  sub_4B03C((uint64_t)v5, v9, &qword_4B1BE0);
  return swift_endAccess();
}

uint64_t sub_32B26C@<X0>(void *a1@<X8>)
{
  uint64_t v72 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v1 - 8);
  uint64_t v71 = (char *)&v56 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_3D7260();
  __chkstk_darwin(v3 - 8);
  uint64_t v70 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_3D6F40();
  __chkstk_darwin(v8 - 8);
  uint64_t v65 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FlowDestination();
  __chkstk_darwin(v10);
  uint64_t v59 = (uint64_t)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = v14;
  uint64_t v15 = sub_3D2460();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1FE0);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v56 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = v21;
  uint64_t v22 = (objc_class *)[self mainBundle];
  v85._countAndFlagsBits = 0xD000000000000014;
  v55._countAndFlagsBits = 0xE000000000000000;
  v85._object = (void *)0x800000000040A070;
  v86.value._countAndFlagsBits = 0;
  v86.value._object = 0;
  v23.super.isa = v22;
  v87._countAndFlagsBits = 0;
  v87._object = (void *)0xE000000000000000;
  uint64_t v64 = sub_3D2060(v85, v86, v23, v87, v55);
  uint64_t v60 = v24;

  uint64_t v25 = type metadata accessor for Header(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v21, 1, 1, v25);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1CC0);
  uint64_t v26 = swift_allocObject();
  long long v58 = xmmword_3DED90;
  uint64_t v74 = v26;
  *(_OWORD *)(v26 + 16) = xmmword_3DED90;
  uint64_t v67 = (uint64_t *)(v26 + 32);
  sub_3D2450();
  uint64_t v69 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  uint64_t v68 = v27;
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  uint64_t v28 = sub_3D3860();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v14, 1, 1, v28);
  swift_storeEnumTagMultiPayload();
  sub_3D40A0();
  sub_3D4420();
  uint64_t v61 = sub_3D2350();
  uint64_t v29 = *(void *)(v61 - 8);
  uint64_t v62 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  uint64_t v63 = v29 + 56;
  uint64_t v30 = (uint64_t)v7;
  v62(v7, 1, 1, v61);
  sub_3D2F90();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9890);
  sub_3D6D80();
  *(_OWORD *)(swift_allocObject() + 16) = v58;
  sub_3D43A0();
  uint64_t v31 = (uint64_t)v71;
  sub_3D6D10();
  swift_bridgeObjectRelease();
  sub_3D7250();
  uint64_t v32 = (uint64_t)v65;
  sub_3D6F10();
  sub_18F88((uint64_t)v78, (uint64_t)v84, (uint64_t *)&unk_4B1F80);
  sub_443B4((uint64_t)v84);
  uint64_t v83 = v79;
  sub_443E0((uint64_t)&v83);
  uint64_t v82 = v80;
  sub_443E0((uint64_t)&v82);
  sub_3D4C4(v81);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v57 = v30;
  sub_250FC(v30, &qword_4AD7B0);
  *(_WORD *)uint64_t v75 = 0;
  uint64_t v33 = type metadata accessor for FlowAction(0);
  swift_allocObject();
  uint64_t v34 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v59, 0, 0, 0, 0, &v75[1], 0, 48, v75, v32);
  *((void *)&v76 + 1) = v33;
  uint64_t v77 = sub_335608((unint64_t *)&qword_4B1FA0, (void (*)(uint64_t))type metadata accessor for FlowAction);
  *(void *)&v75[1] = v34;
  sub_3D4420();
  uint64_t v35 = v60;
  swift_bridgeObjectRetain();
  uint64_t v36 = v64;
  sub_3D72C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_3D7340();
  uint64_t v70 = *(char **)(*(void *)(v37 - 8) + 56);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v70)(v31, 0, 1, v37);
  uint64_t v38 = (int *)type metadata accessor for Link();
  uint64_t v39 = v74;
  *(void *)(v74 + 56) = v38;
  *(void *)(v39 + 64) = sub_335608(&qword_4A9C28, (void (*)(uint64_t))type metadata accessor for Link);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v67);
  uint64_t v41 = (char *)boxed_opaque_existential_2Tm + v38[11];
  *((void *)v41 + 4) = 0;
  *(_OWORD *)uint64_t v41 = 0u;
  *((_OWORD *)v41 + 1) = 0u;
  uint64_t v42 = v68;
  uint64_t *boxed_opaque_existential_2Tm = v69;
  boxed_opaque_existential_2Tm[1] = v42;
  boxed_opaque_existential_2Tm[2] = v36;
  boxed_opaque_existential_2Tm[3] = v35;
  boxed_opaque_existential_2Tm[4] = 0;
  boxed_opaque_existential_2Tm[5] = 0;
  sub_18F88((uint64_t)v66, (uint64_t)boxed_opaque_existential_2Tm + v38[7], (uint64_t *)&unk_4B1F70);
  *((unsigned char *)boxed_opaque_existential_2Tm + v38[8]) = 48;
  sub_18F88((uint64_t)&v75[1], (uint64_t)boxed_opaque_existential_2Tm + v38[9], (uint64_t *)&unk_4BC3D0);
  sub_18F88(v31, (uint64_t)boxed_opaque_existential_2Tm + v38[10], (uint64_t *)&unk_4B9870);
  uint64_t v43 = v61;
  uint64_t v44 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v62;
  v62((char *)v30, 1, 1, v61);
  uint64_t v77 = 0;
  *(_OWORD *)&v75[1] = 0u;
  long long v76 = 0u;
  sub_3D4470();
  sub_3D72A0();
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v70)(v31, 0, 1, v37);
  uint64_t v45 = (int *)type metadata accessor for ModernShelf();
  uint64_t v46 = v72;
  uint64_t v47 = (void *)((char *)v72 + v45[8]);
  void *v47 = 0;
  v47[1] = 0;
  uint64_t v48 = (uint64_t)v46 + v45[9];
  uint64_t v49 = v43;
  id v50 = v46;
  v44(v48, 1, 1, v49);
  *id v50 = 0xD000000000000024;
  v50[1] = 0x800000000040A090;
  sub_18F88((uint64_t)v73, (uint64_t)v50 + v45[5], &qword_4B1FE0);
  uint64_t v51 = (char *)v50 + v45[6];
  *(_WORD *)uint64_t v51 = 17;
  *((_WORD *)v51 + 3) = 256;
  *(_DWORD *)(v51 + 2) = 0;
  *((void *)v51 + 1) = 1;
  *(void *)((char *)v50 + v45[7]) = v74;
  sub_4B03C(v57, v48, &qword_4AD7B0);
  *((unsigned char *)v50 + v45[10]) = 1;
  *((unsigned char *)v50 + v45[11]) = 0;
  uint64_t v52 = (uint64_t)v50 + v45[12];
  if (*((void *)&v76 + 1))
  {
    sub_18F70((long long *)&v75[1], v52);
  }
  else
  {
    long long v53 = (unint64_t)v76;
    *(_OWORD *)uint64_t v52 = *(_OWORD *)&v75[1];
    *(_OWORD *)(v52 + 16) = v53;
    *(void *)(v52 + 32) = v77;
  }
  sub_18F88(v31, (uint64_t)v50 + v45[13], (uint64_t *)&unk_4B9870);
  uint64_t result = swift_bridgeObjectRelease();
  void *v47 = 0;
  v47[1] = 0;
  return result;
}

uint64_t sub_32BCD0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_3D59E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t ModernEpisodesPresenter.deinit()
{
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 48);
  __swift_destroy_boxed_opaque_existential_1(v0 + 88);
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  sub_B2620(*(void *)(v0 + 168), *(void *)(v0 + 176), *(void *)(v0 + 184), *(void *)(v0 + 192), *(void *)(v0 + 200), *(void *)(v0 + 208), *(void *)(v0 + 216), *(void *)(v0 + 224), *(unsigned char *)(v0 + 232));
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings;
  uint64_t v2 = sub_3D4780();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_250FC(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_fullShowLink, &qword_4B1BE0);
  sub_250FC(v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___downloadingShelf, &qword_4B1BE0);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter__episodeOrderingFrozen;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AB588);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t ModernEpisodesPresenter.__deallocating_deinit()
{
  ModernEpisodesPresenter.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_32BF70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings;
  swift_beginAccess();
  uint64_t v4 = sub_3D4780();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, v3, v4);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  sub_3D2950();
  return swift_storeEnumTagMultiPayload();
}

uint64_t ModernEpisodesPresenter.buildMenuBar(with:)(void *a1)
{
  uint64_t v2 = v1;
  id v104 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v3 - 8);
  uint64_t v101 = (char *)&v93 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = type metadata accessor for ActionMenu(0);
  __chkstk_darwin(v102);
  uint64_t v6 = (char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v100 = (unint64_t *)((char *)&v93 - v8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v93 - v10;
  uint64_t v12 = type metadata accessor for ActionMenu.Child(0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v110 = (uint64_t)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v107 = (uint64_t)&v93 - v16;
  uint64_t v97 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AFDA0);
  Class isa = *(Class *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v19 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v93 - v21;
  unint64_t v23 = sub_115C0((uint64_t)_swiftEmptyArrayStorage);
  v112 = _swiftEmptyArrayStorage;
  uint64_t v24 = sub_333B9C();
  sub_28834C((uint64_t)v24);
  uint64_t v25 = sub_330ECC(1);
  sub_28834C((uint64_t)v25);
  uint64_t v26 = v112[2];
  uint64_t v108 = v13;
  uint64_t v109 = v12;
  unint64_t v103 = v23;
  Swift::String v95 = v11;
  if (v26)
  {
    if (qword_4A8E70 != -1) {
      swift_once();
    }
    uint64_t v105 = qword_4B5498;
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v23;
    *(void *)(v27 + 24) = &v112;
    *(void *)(v27 + 32) = v2;
    uint64_t v28 = swift_allocObject();
    int v98 = sub_335748;
    uint64_t v99 = v27;
    *(void *)(v28 + 16) = sub_335748;
    *(void *)(v28 + 24) = v27;
    aBlock[4] = sub_335764;
    aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_4844C;
    aBlock[3] = &block_descriptor_29;
    uint64_t v29 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_release();
    [v104 replaceChildrenOfMenuForIdentifier:v105 fromChildrenBlock:v29];
    _Block_release(v29);
    LOBYTE(v27) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v27)
    {
      __break(1u);
LABEL_37:
      swift_once();
LABEL_26:
      [v104 insertSiblingMenu:isa afterMenuForIdentifier:qword_4B5490];

      goto LABEL_28;
    }
    uint64_t v13 = v108;
    uint64_t v12 = v109;
  }
  else
  {
    int v98 = 0;
    uint64_t v99 = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BE518);
  uint64_t v30 = *((void *)isa + 9);
  unint64_t v31 = (*((unsigned __int8 *)isa + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)isa + 80);
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_3E4970;
  uint64_t v96 = v32;
  uint64_t v33 = v32 + v31;
  sub_330708(v33);
  uint64_t v105 = v33;
  uint64_t v34 = v33 + v30;
  uint64_t v35 = *(void *)(v2 + 168);
  uint64_t v36 = *(void *)(v2 + 176);
  int v37 = *(unsigned __int8 *)(v2 + 232);
  char v94 = v6;
  if (v37 == 1)
  {
    sub_332ECC(v35, v36, v34);
  }
  else if (v37 == 9 {
         && (int8x16_t v38 = vorrq_s8(*(int8x16_t *)(v2 + 200), *(int8x16_t *)(v2 + 216)),
  }
             !(*(void *)&vorr_s8(*(int8x8_t *)v38.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v38, v38, 8uLL)) | *(void *)(v2 + 192) | *(void *)(v2 + 184) | v36 | v35)))
  {
    id v39 = [self currentTraitCollection];
    sub_3D85B0();

    sub_332938(v34);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56))(v34, 1, 1, v12);
  }
  uint64_t v40 = v105;
  uint64_t v106 = v2;
  sub_331F78(v105 + 2 * v30);
  uint64_t v41 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v42 = _swiftEmptyArrayStorage;
  uint64_t v43 = 3;
  uint64_t v44 = v40;
  do
  {
    sub_153B4(v44, (uint64_t)v22, &qword_4AFDA0);
    sub_18F88((uint64_t)v22, (uint64_t)v19, &qword_4AFDA0);
    if ((*v41)(v19, 1, v12) == 1)
    {
      sub_250FC((uint64_t)v19, &qword_4AFDA0);
    }
    else
    {
      uint64_t v45 = v107;
      sub_3382A8((uint64_t)v19, v107, type metadata accessor for ActionMenu.Child);
      sub_3382A8(v45, v110, type metadata accessor for ActionMenu.Child);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v42 = (void *)sub_133B4(0, v42[2] + 1, 1, (unint64_t)v42);
      }
      unint64_t v47 = v42[2];
      unint64_t v46 = v42[3];
      if (v47 >= v46 >> 1) {
        uint64_t v42 = (void *)sub_133B4(v46 > 1, v47 + 1, 1, (unint64_t)v42);
      }
      v42[2] = v47 + 1;
      sub_3382A8(v110, (uint64_t)v42+ ((*(unsigned __int8 *)(v108 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80))+ *(void *)(v108 + 72) * v47, type metadata accessor for ActionMenu.Child);
      uint64_t v12 = v109;
    }
    v44 += v30;
    --v43;
  }
  while (v43);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (v42[2])
  {
    uint64_t v48 = sub_3D3860();
    uint64_t v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56);
    uint64_t v50 = (uint64_t)v101;
    v49(v101, 1, 1, v48);
    unint64_t v51 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    unint64_t v53 = v52;
    uint64_t v54 = v102;
    Swift::String v55 = v100;
    uint64_t v56 = (uint64_t)v100 + *(int *)(v102 + 28);
    v49((char *)v56, 1, 1, v48);
    *Swift::String v55 = v51;
    v55[1] = v53;
    v55[2] = 0;
    v55[3] = 0xE000000000000000;
    v55[4] = 0;
    v55[5] = 0;
    sub_4B03C(v50, v56, (uint64_t *)&unk_4B1F70);
    *(unint64_t *)((char *)v55 + *(int *)(v54 + 32)) = (unint64_t)v42;
    uint64_t v57 = v95;
    sub_3382A8((uint64_t)v55, (uint64_t)v95, type metadata accessor for ActionMenu);
    uint64_t v58 = v57[2];
    unint64_t v59 = v57[3];
    uint64_t v60 = HIBYTE(v59) & 0xF;
    if ((v59 & 0x2000000000000000) == 0) {
      uint64_t v60 = v58 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v109 = *(void *)(v106 + 16);
    uint64_t v110 = v60 == 0;
    sub_3D530(0, (unint64_t *)&qword_4B5A90);
    uint64_t v61 = v57[4];
    uint64_t v62 = (void *)v57[5];
    uint64_t v63 = (uint64_t)v57 + *(int *)(v54 + 28);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v64 = (objc_class *)_s8ShelfKit11SystemGlyphC4load7artworkSo7UIImageCSg18PodcastsFoundation12ArtworkModelVSg_tFZ_0(v63);
    unsigned __int8 v65 = sub_3D7D10();
    aBlock[0] = v103;
    uint64_t v90 = ActionMenuBuilder.buildMenuElements(for:asPartOf:)(*(void *)((char *)v57 + *(int *)(v54 + 32)), v109);
    v115._countAndFlagsBits = v58;
    v115._object = (void *)v59;
    v117.value._countAndFlagsBits = v61;
    v117.value._object = v62;
    v113.value.super.Class isa = v64;
    v113.is_nil = v65;
    v66.value = (UIMenuIdentifier)v110;
    Class isa = sub_3D8730(v115, v117, v113, v66, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v90, v92).super.super.isa;
    sub_338378((uint64_t)v57, type metadata accessor for ActionMenu);
    if (qword_4A8E68 == -1) {
      goto LABEL_26;
    }
    goto LABEL_37;
  }
  swift_bridgeObjectRelease();
LABEL_28:
  uint64_t v67 = sub_333DB0();
  if (v67[2])
  {
    uint64_t v68 = sub_3D3860();
    uint64_t v69 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v68 - 8) + 56);
    uint64_t v70 = (uint64_t)v101;
    v69(v101, 1, 1, v68);
    unint64_t v71 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    unint64_t v73 = v72;
    uint64_t v74 = v102;
    uint64_t v75 = v100;
    uint64_t v76 = (uint64_t)v100 + *(int *)(v102 + 28);
    v69((char *)v76, 1, 1, v68);
    unint64_t *v75 = v71;
    v75[1] = v73;
    v75[2] = 0;
    v75[3] = 0xE000000000000000;
    v75[4] = 0;
    v75[5] = 0;
    sub_4B03C(v70, v76, (uint64_t *)&unk_4B1F70);
    *(unint64_t *)((char *)v75 + *(int *)(v74 + 32)) = (unint64_t)v67;
    uint64_t v77 = v94;
    sub_3382A8((uint64_t)v75, (uint64_t)v94, type metadata accessor for ActionMenu);
    uint64_t v78 = v77[2];
    unint64_t v79 = v77[3];
    uint64_t v80 = HIBYTE(v79) & 0xF;
    if ((v79 & 0x2000000000000000) == 0) {
      uint64_t v80 = v78 & 0xFFFFFFFFFFFFLL;
    }
    uint64_t v109 = *(void *)(v106 + 16);
    uint64_t v110 = v80 == 0;
    uint64_t v108 = sub_3D530(0, (unint64_t *)&qword_4B5A90);
    uint64_t v81 = v77[4];
    uint64_t v82 = (void *)v77[5];
    uint64_t v83 = v74;
    uint64_t v84 = (uint64_t)v77 + *(int *)(v74 + 28);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    Swift::String v85 = (objc_class *)_s8ShelfKit11SystemGlyphC4load7artworkSo7UIImageCSg18PodcastsFoundation12ArtworkModelVSg_tFZ_0(v84);
    unsigned __int8 v86 = sub_3D7D10();
    aBlock[0] = v103;
    long long v91 = ActionMenuBuilder.buildMenuElements(for:asPartOf:)(*(void *)((char *)v77 + *(int *)(v83 + 32)), v109);
    v116._countAndFlagsBits = v78;
    v116._object = (void *)v79;
    v118.value._countAndFlagsBits = v81;
    v118.value._object = v82;
    v114.value.super.Class isa = v85;
    v114.is_nil = v86;
    v87.value = (UIMenuIdentifier)v110;
    v88.super.super.Class isa = sub_3D8730(v116, v118, v114, v87, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v91, v92).super.super.isa;
    sub_338378((uint64_t)v77, type metadata accessor for ActionMenu);
    swift_bridgeObjectRelease();
    if (qword_4A8E68 != -1) {
      swift_once();
    }
    [v104 insertSiblingMenu:v88.super.super.isa afterMenuForIdentifier:qword_4B5490];
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return sub_3D4C4((uint64_t)v98);
}

uint64_t (*sub_32CBA0())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_32CBFC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_paginatedPublisher);
  swift_beginAccess();
  *a1 = *v3;
  return swift_retain();
}

void *sub_32CC58@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

uint64_t sub_32CC6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, unsigned char *a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v185 = a8;
  int v166 = a5;
  int v173 = a3;
  uint64_t v176 = a2;
  uint64_t v183 = a1;
  v190 = a9;
  uint64_t v14 = type metadata accessor for ModernPage();
  __chkstk_darwin(v14 - 8);
  uint64_t v172 = (uint64_t)&v159 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_3D3410();
  uint64_t v186 = *(void *)(v16 - 8);
  uint64_t v187 = v16;
  __chkstk_darwin(v16);
  v167 = (char *)&v159 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  v170 = (char *)&v159 - v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AE108);
  __chkstk_darwin(v20 - 8);
  uint64_t v168 = (uint64_t)&v159 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v171 = (uint64_t)&v159 - v23;
  uint64_t v24 = type metadata accessor for BubbleTip();
  uint64_t v174 = *(void *)(v24 - 8);
  uint64_t v175 = v24;
  __chkstk_darwin(v24);
  v164 = (char *)&v159 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  uint64_t v163 = (uint64_t)&v159 - v27;
  uint64_t v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AC870);
  __chkstk_darwin(v189);
  uint64_t v182 = (uint64_t)&v159 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v169 = (char *)&v159 - v30;
  __chkstk_darwin(v31);
  uint64_t v162 = (uint64_t)&v159 - v32;
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v159 - v34;
  __chkstk_darwin(v36);
  uint64_t v180 = (uint64_t)&v159 - v37;
  __chkstk_darwin(v38);
  uint64_t v178 = (uint64_t)&v159 - v39;
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1BE0);
  __chkstk_darwin(v40 - 8);
  v184 = (char *)&v159 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v42);
  uint64_t v44 = (char *)&v159 - v43;
  uint64_t v45 = type metadata accessor for ModernShelf();
  uint64_t v46 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  v181 = (uint64_t *)((char *)&v159 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v48);
  v161 = (uint64_t *)((char *)&v159 - v49);
  __chkstk_darwin(v50);
  v165 = (uint64_t *)((char *)&v159 - v51);
  __chkstk_darwin(v52);
  uint64_t v179 = (uint64_t)&v159 - v53;
  __chkstk_darwin(v54);
  uint64_t v177 = (uint64_t)&v159 - v55;
  uint64_t v56 = a7 + 16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BD388);
  sub_3D5260();
  uint64_t v191 = v45;
  if (a6)
  {
    swift_beginAccess();
    if (swift_weakLoadStrong())
    {
      uint64_t v160 = a4;
      unint64_t v57 = v194;
      *(void *)&long long v195 = v194;
      swift_allocObject();
      uint64_t v188 = v46;
      swift_weakInit();
      sub_7E22C(v57);
      __swift_instantiateConcreteTypeFromMangledName(&qword_4A99E8);
      __swift_instantiateConcreteTypeFromMangledName(&qword_4A97B8);
      sub_3D51B0();
      uint64_t v46 = v188;
      uint64_t v45 = v191;
      swift_release();
      sub_7E2B4(v57);
      swift_release();
      unint64_t v58 = v198;
      sub_7E2B4(v194);
      unint64_t v194 = v58;
    }
  }
  int v59 = sub_3D5270();
  unint64_t v60 = v194;
  *(void *)&long long v198 = v194;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4A99E8);
  if (sub_3D51F0())
  {
    sub_7E2B4(v60);
    goto LABEL_6;
  }
  LODWORD(v160) = v59;
  uint64_t v65 = a10;
  char v193 = 0;
  sub_153B4(v183, (uint64_t)v44, &qword_4B1BE0);
  UIMenuIdentifier_optional v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v46 + 48);
  int v67 = v66(v44, 1, v45);
  uint64_t v188 = v46;
  if (v67 == 1)
  {
    sub_250FC((uint64_t)v44, &qword_4B1BE0);
    uint64_t v68 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v69 = v177;
    sub_3382A8((uint64_t)v44, v177, (uint64_t (*)(void))type metadata accessor for ModernShelf);
    uint64_t v70 = v69;
    uint64_t v71 = v178;
    sub_338310(v70, v178, (uint64_t (*)(void))type metadata accessor for ModernShelf);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v46 + 56))(v71, 0, 2, v45);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4A97B8);
    sub_3D51B0();
    unint64_t v72 = v198;
    sub_7E22C(v198);
    uint64_t v68 = sub_13594(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v74 = v68[2];
    unint64_t v73 = v68[3];
    if (v74 >= v73 >> 1) {
      uint64_t v68 = sub_13594((void *)(v73 > 1), v74 + 1, 1, v68);
    }
    v68[2] = v74 + 1;
    v68[v74 + 4] = v72;
    sub_7E2B4(v72);
    sub_250FC(v178, &qword_4AC870);
    sub_338378(v177, (uint64_t (*)(void))type metadata accessor for ModernShelf);
    uint64_t v65 = a10;
    uint64_t v45 = v191;
  }
  uint64_t v75 = (uint64_t)v184;
  sub_153B4(v185, (uint64_t)v184, &qword_4B1BE0);
  if (v66((char *)v75, 1, v45) == 1)
  {
    sub_250FC(v75, &qword_4B1BE0);
    uint64_t v76 = v56;
    uint64_t v77 = v186;
  }
  else
  {
    uint64_t v78 = v75;
    uint64_t v79 = v179;
    sub_3382A8(v78, v179, (uint64_t (*)(void))type metadata accessor for ModernShelf);
    uint64_t v80 = v79;
    uint64_t v81 = v180;
    sub_338310(v80, v180, (uint64_t (*)(void))type metadata accessor for ModernShelf);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v188 + 56))(v81, 0, 2, v45);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4A97B8);
    sub_3D51B0();
    unint64_t v82 = v198;
    sub_7E22C(v198);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v76 = v56;
    uint64_t v77 = v186;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v68 = sub_13594(0, v68[2] + 1, 1, v68);
    }
    unint64_t v85 = v68[2];
    unint64_t v84 = v68[3];
    if (v85 >= v84 >> 1) {
      uint64_t v68 = sub_13594((void *)(v84 > 1), v85 + 1, 1, v68);
    }
    v68[2] = v85 + 1;
    v68[v85 + 4] = v82;
    sub_7E2B4(v82);
    sub_250FC(v180, &qword_4AC870);
    sub_338378(v179, (uint64_t (*)(void))type metadata accessor for ModernShelf);
  }
  long long v200 = 0u;
  long long v201 = 0u;
  long long v198 = 0u;
  long long v199 = 0u;
  char v202 = 9;
  char v86 = sub_3D3F00();
  uint64_t v87 = v187;
  if ((v86 & 1) == 0) {
    goto LABEL_62;
  }
  v184 = v35;
  uint64_t v185 = v65;
  UIMenu v88 = *(void (**)(char *, void, uint64_t))(v77 + 104);
  uint64_t v89 = (uint64_t)v170;
  v88(v170, enum case for TipGroup.onlyDownloads(_:), v187);
  uint64_t v90 = v176;
  if (!*(void *)(v176 + 16) || (unint64_t v91 = sub_323F4(v89), (v92 & 1) == 0))
  {
    char v94 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
    v94(v89, v87);
    uint64_t v100 = v87;
    uint64_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v174 + 56);
    uint64_t v95 = v171;
    v97(v171, 1, 1, v175);
    goto LABEL_27;
  }
  uint64_t v183 = v76;
  uint64_t v93 = *(void *)(*(void *)(v90 + 56) + 8 * v91);
  char v94 = *(void (**)(uint64_t, uint64_t))(v77 + 8);
  swift_bridgeObjectRetain();
  v94(v89, v87);
  uint64_t v95 = v171;
  uint64_t v96 = v174;
  if (*(void *)(v93 + 16))
  {
    sub_338310(v93 + ((*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80)), v171, (uint64_t (*)(void))type metadata accessor for BubbleTip);
    uint64_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v96 + 56);
    uint64_t v98 = v95;
    uint64_t v99 = 0;
  }
  else
  {
    uint64_t v97 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v174 + 56);
    uint64_t v98 = v171;
    uint64_t v99 = 1;
  }
  uint64_t v111 = v175;
  v97(v98, v99, 1, v175);
  swift_bridgeObjectRelease();
  int v112 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v96 + 48))(v95, 1, v111);
  uint64_t v100 = v187;
  if (v112 == 1)
  {
LABEL_27:
    sub_250FC(v95, &qword_4AE108);
    uint64_t v101 = (uint64_t)v167;
    v88(v167, enum case for TipGroup.downloads(_:), v100);
    uint64_t v102 = v176;
    if (*(void *)(v176 + 16) && (unint64_t v103 = sub_323F4(v101), (v104 & 1) != 0))
    {
      uint64_t v105 = *(void *)(*(void *)(v102 + 56) + 8 * v103);
      swift_bridgeObjectRetain();
      v94(v101, v187);
      if (*(void *)(v105 + 16))
      {
        uint64_t v106 = v174;
        uint64_t v107 = v168;
        sub_338310(v105 + ((*(unsigned __int8 *)(v174 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v174 + 80)), v168, (uint64_t (*)(void))type metadata accessor for BubbleTip);
        uint64_t v108 = 0;
        uint64_t v65 = v185;
        uint64_t v109 = (uint64_t)v164;
      }
      else
      {
        uint64_t v108 = 1;
        uint64_t v65 = v185;
        uint64_t v109 = (uint64_t)v164;
        uint64_t v107 = v168;
        uint64_t v106 = v174;
      }
      uint64_t v127 = v106;
      uint64_t v128 = v175;
      v97(v107, v108, 1, v175);
      swift_bridgeObjectRelease();
      int v129 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v127 + 48))(v107, 1, v128);
      uint64_t v110 = (uint64_t)v169;
      if (v129 != 1)
      {
        sub_3382A8(v107, v109, (uint64_t (*)(void))type metadata accessor for BubbleTip);
        id v130 = [self currentTraitCollection];
        long long v131 = (char *)[v130 horizontalSizeClass];

        if (v131 == (unsigned char *)&dword_0 + 2)
        {
          char v132 = sub_3D8FE0();
          swift_bridgeObjectRelease();
          uint64_t v120 = v191;
          if ((v132 & 1) == 0)
          {
            uint64_t v133 = v161;
            static ModernShelf.bubbleTipShelf(for:)(v109, v161);
            uint64_t v134 = (uint64_t)v133;
            uint64_t v135 = v162;
            sub_338310(v134, v162, (uint64_t (*)(void))type metadata accessor for ModernShelf);
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v188 + 56))(v135, 0, 2, v120);
            __swift_instantiateConcreteTypeFromMangledName(&qword_4A97B8);
            sub_3D51B0();
            unint64_t v136 = v195;
            sub_7E22C(v195);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v68 = sub_13594(0, v68[2] + 1, 1, v68);
            }
            unint64_t v138 = v68[2];
            unint64_t v137 = v68[3];
            if (v138 >= v137 >> 1) {
              uint64_t v68 = sub_13594((void *)(v137 > 1), v138 + 1, 1, v68);
            }
            v68[2] = v138 + 1;
            v68[v138 + 4] = v136;
            sub_7E2B4(v136);
            sub_250FC(v162, &qword_4AC870);
            sub_338378((uint64_t)v161, (uint64_t (*)(void))type metadata accessor for ModernShelf);
            uint64_t v119 = v109;
            goto LABEL_40;
          }
        }
        else
        {
          swift_bridgeObjectRelease();
          uint64_t v120 = v191;
        }
        sub_338378(v109, (uint64_t (*)(void))type metadata accessor for BubbleTip);
        if (v173) {
          goto LABEL_42;
        }
LABEL_62:
        uint64_t v122 = _swiftEmptyArrayStorage;
        goto LABEL_63;
      }
    }
    else
    {
      v94(v101, v187);
      uint64_t v107 = v168;
      v97(v168, 1, 1, v175);
      uint64_t v65 = v185;
      uint64_t v110 = (uint64_t)v169;
    }
    sub_250FC(v107, &qword_4AE108);
    goto LABEL_41;
  }
  uint64_t v113 = v163;
  sub_3382A8(v95, v163, (uint64_t (*)(void))type metadata accessor for BubbleTip);
  UIImage_optional v114 = v165;
  static ModernShelf.bubbleTipShelf(for:)(v113, v165);
  uint64_t v115 = (uint64_t)v184;
  sub_338310((uint64_t)v114, (uint64_t)v184, (uint64_t (*)(void))type metadata accessor for ModernShelf);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v188 + 56))(v115, 0, 2, v191);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4A97B8);
  sub_3D51B0();
  unint64_t v116 = v195;
  sub_7E22C(v195);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v68 = sub_13594(0, v68[2] + 1, 1, v68);
  }
  uint64_t v65 = v185;
  unint64_t v118 = v68[2];
  unint64_t v117 = v68[3];
  uint64_t v110 = (uint64_t)v169;
  if (v118 >= v117 >> 1) {
    uint64_t v68 = sub_13594((void *)(v117 > 1), v118 + 1, 1, v68);
  }
  v68[2] = v118 + 1;
  v68[v118 + 4] = v116;
  sub_7E2B4(v116);
  sub_250FC(v115, &qword_4AC870);
  sub_338378((uint64_t)v165, (uint64_t (*)(void))type metadata accessor for ModernShelf);
  uint64_t v119 = v113;
LABEL_40:
  sub_338378(v119, (uint64_t (*)(void))type metadata accessor for BubbleTip);
LABEL_41:
  uint64_t v120 = v191;
  if ((v173 & 1) == 0) {
    goto LABEL_62;
  }
LABEL_42:
  sub_338310(a11, v110, (uint64_t (*)(void))type metadata accessor for ModernShelf);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v188 + 56))(v110, 0, 2, v120);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4A97B8);
  sub_3D51B0();
  unint64_t v121 = v195;
  sub_7E22C(v195);
  uint64_t v122 = _swiftEmptyArrayStorage;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v122 = sub_13594(0, _swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
  }
  unint64_t v124 = v122[2];
  unint64_t v123 = v122[3];
  if (v124 >= v123 >> 1) {
    uint64_t v122 = sub_13594((void *)(v123 > 1), v124 + 1, 1, v122);
  }
  v122[2] = v124 + 1;
  v122[v124 + 4] = v121;
  sub_7E22C(v121);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v68 = sub_13594(0, v68[2] + 1, 1, v68);
  }
  unint64_t v126 = v68[2];
  unint64_t v125 = v68[3];
  if (v126 >= v125 >> 1) {
    uint64_t v68 = sub_13594((void *)(v125 > 1), v126 + 1, 1, v68);
  }
  v68[2] = v126 + 1;
  v68[v126 + 4] = v121;
  sub_7E2B4(v121);
  sub_250FC(v110, &qword_4AC870);
LABEL_63:
  unint64_t v139 = v194;
  sub_7E22C(v194);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v122 = sub_13594(0, v122[2] + 1, 1, v122);
  }
  unint64_t v141 = v122[2];
  unint64_t v140 = v122[3];
  if (v141 >= v140 >> 1) {
    uint64_t v122 = sub_13594((void *)(v140 > 1), v141 + 1, 1, v122);
  }
  v122[2] = v141 + 1;
  v122[v141 + 4] = v139;
  sub_7E22C(v139);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v68 = sub_13594(0, v68[2] + 1, 1, v68);
  }
  unint64_t v143 = v68[2];
  unint64_t v142 = v68[3];
  if (v143 >= v142 >> 1) {
    uint64_t v68 = sub_13594((void *)(v142 > 1), v143 + 1, 1, v68);
  }
  v68[2] = v143 + 1;
  v68[v143 + 4] = v139;
  sub_7E2B4(v139);
  if (v160)
  {
    char v144 = v181;
    static ModernShelf.loadingShelf(id:)(0x5365726F4D736168, 0xEC000000666C6568, v181);
    uint64_t v145 = (uint64_t)v144;
    uint64_t v146 = v182;
    sub_338310(v145, v182, (uint64_t (*)(void))type metadata accessor for ModernShelf);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v188 + 56))(v146, 0, 2, v191);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4A97B8);
    sub_3D51B0();
    unint64_t v147 = v195;
    sub_7E22C(v195);
    unint64_t v149 = v68[2];
    unint64_t v148 = v68[3];
    if (v149 >= v148 >> 1) {
      uint64_t v68 = sub_13594((void *)(v148 > 1), v149 + 1, 1, v68);
    }
    v68[2] = v149 + 1;
    v68[v149 + 4] = v147;
    sub_7E2B4(v147);
    sub_250FC(v182, &qword_4AC870);
    sub_338378((uint64_t)v181, (uint64_t (*)(void))type metadata accessor for ModernShelf);
  }
  char v150 = v193;
  LOBYTE(v195) = v193;
  *((void *)&v195 + 1) = v122;
  unint64_t v196 = (unint64_t)v68;
  if (ModernShelfListBuilder.hasImportantContent.getter())
  {
    LOBYTE(v195) = v150;
    *((void *)&v195 + 1) = v122;
    unint64_t v196 = (unint64_t)v68;
    unint64_t v151 = ModernShelfListBuilder.buildList()();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v152 = v172;
    sub_32E31C(v65, v151, v172);
    swift_bridgeObjectRelease();
    uint64_t v153 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4AC878) + 48);
    v154 = v190;
    sub_338310(v152, (uint64_t)v190, (uint64_t (*)(void))type metadata accessor for ModernPage);
    v154[v153] = sub_3D2EA0();
    uint64_t v62 = type metadata accessor for PageContent();
    swift_storeEnumTagMultiPayload();
    sub_338378(v152, (uint64_t (*)(void))type metadata accessor for ModernPage);
    uint64_t v63 = *(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56);
    uint64_t v64 = v154;
    return v63(v64, 0, 1, v62);
  }
  LOBYTE(v195) = v150;
  *((void *)&v195 + 1) = v122;
  unint64_t v196 = (unint64_t)v68;
  char v156 = ModernShelfListBuilder.areAnyImportantShelvesStillLoading.getter();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v156)
  {
    uint64_t v61 = v190;
    unsigned char *v190 = 0;
    goto LABEL_7;
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    sub_32EEC4(v65, v166 & 1, (uint64_t *)&v195);
    swift_release();
    unint64_t v157 = v196;
    if ((~v196 & 0xF000000000000007) != 0)
    {
      uint64_t v61 = v190;
      *(_OWORD *)v190 = v195;
      *((void *)v61 + 2) = v157;
      uint64_t v62 = type metadata accessor for PageContent();
      goto LABEL_8;
    }
  }
  sub_2360C8(v65, (uint64_t)&v195);
  if (v197 == 8 && (v173 & 1) != 0)
  {
LABEL_6:
    uint64_t v61 = v190;
    unsigned char *v190 = 1;
LABEL_7:
    uint64_t v62 = type metadata accessor for PageContent();
LABEL_8:
    swift_storeEnumTagMultiPayload();
    uint64_t v63 = *(uint64_t (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56);
    uint64_t v64 = v61;
    return v63(v64, 0, 1, v62);
  }
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_beginAccess();
    swift_retain();
    swift_release();
    char v192 = 1;
    sub_3D5880();
    swift_release();
  }
  uint64_t v158 = type metadata accessor for PageContent();
  return (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v158 - 8) + 56))(v190, 1, 1, v158);
}

uint64_t sub_32E31C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v84 = a2;
  uint64_t v5 = sub_3D7260();
  uint64_t v83 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v81 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v81 - v9;
  sub_2360C8(a1, (uint64_t)&v96);
  if (v104)
  {
    if (v104 != 5)
    {
      if (v104 == 9)
      {
        uint64_t v11 = v100 | v99 | v98;
        if (!(v102 | v103 | v96 | v101 | v11 | v97))
        {
          uint64_t v45 = sub_3D3FE0();
          uint64_t v47 = v46;
          uint64_t v48 = sub_3D3AB0();
          uint64_t v50 = v49;
          uint64_t v85 = v45;
          uint64_t v86 = v47;
          v114._countAndFlagsBits = 95;
          v114._object = (void *)0xE100000000000000;
          sub_3D7E90(v114);
          v115._countAndFlagsBits = v48;
          v115._object = v50;
          sub_3D7E90(v115);
          swift_bridgeObjectRelease();
          sub_3D7940();
          uint64_t v19 = sub_3D3AB0();
          goto LABEL_15;
        }
        uint64_t v12 = v102 | v103 | v101 | v11 | v97;
        if (v96 == 1 && !v12)
        {
          uint64_t v13 = sub_3D3FE0();
          uint64_t v15 = v14;
          uint64_t v16 = sub_3D3B00();
          uint64_t v18 = v17;
          uint64_t v85 = v13;
          uint64_t v86 = v15;
          v108._countAndFlagsBits = 95;
          v108._object = (void *)0xE100000000000000;
          sub_3D7E90(v108);
          v109._countAndFlagsBits = v16;
          v109._object = v18;
          sub_3D7E90(v109);
          swift_bridgeObjectRelease();
          sub_3D7940();
          uint64_t v19 = sub_3D3B00();
LABEL_15:
          uint64_t v57 = v19;
          uint64_t v58 = v20;
          uint64_t v59 = sub_3D3FE0();
          uint64_t v85 = v57;
          uint64_t v86 = v58;
          uint64_t v87 = v59;
          uint64_t v88 = v60;
          uint64_t v89 = 0;
          char v90 = 0;
          uint64_t v91 = 0;
          sub_3D7250();
          sub_3D2F90();
          uint64_t v32 = type metadata accessor for ModernPage();
          uint64_t v82 = a3 + *(int *)(v32 + 20);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1FD0);
          sub_3D6DF0();
          uint64_t v61 = v83;
          *(_OWORD *)(swift_allocObject() + 16) = xmmword_3DED20;
          sub_3D6DC0();
          sub_3D6DB0();
          MetricsPageFields.metricsFields.getter();
          (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v7, v10, v5);
          sub_3D6E00();
          sub_18F88((uint64_t)v92, (uint64_t)v107, (uint64_t *)&unk_4B1F80);
          sub_443B4((uint64_t)v107);
          uint64_t v106 = v93;
          sub_443E0((uint64_t)&v106);
          uint64_t v105 = v94;
          sub_443E0((uint64_t)&v105);
          sub_3D4C4(v95);
          (*(void (**)(char *, uint64_t))(v61 + 8))(v10, v5);
          goto LABEL_16;
        }
        if (v96 == 3 && !v12)
        {
          uint64_t v51 = sub_3D3FE0();
          uint64_t v53 = v52;
          uint64_t v54 = sub_3D3AF0();
          uint64_t v56 = v55;
          uint64_t v85 = v51;
          uint64_t v86 = v53;
          v116._countAndFlagsBits = 95;
          v116._object = (void *)0xE100000000000000;
          sub_3D7E90(v116);
          v117._countAndFlagsBits = v54;
          v117._object = v56;
          sub_3D7E90(v117);
          swift_bridgeObjectRelease();
          sub_3D7940();
          uint64_t v19 = sub_3D3AF0();
          goto LABEL_15;
        }
        if (v96 == 4 && !v12)
        {
          uint64_t v62 = sub_3D3FE0();
          uint64_t v64 = v63;
          uint64_t v65 = sub_3D3B30();
          int v67 = v66;
          uint64_t v85 = v62;
          uint64_t v86 = v64;
          v118._countAndFlagsBits = 95;
          v118._object = (void *)0xE100000000000000;
          sub_3D7E90(v118);
          v119._countAndFlagsBits = v65;
          v119._object = v67;
          sub_3D7E90(v119);
          swift_bridgeObjectRelease();
          sub_3D7940();
          uint64_t v68 = sub_3D3B30();
          uint64_t v70 = v69;
          uint64_t v71 = sub_3D3FE0();
          uint64_t v85 = v68;
          uint64_t v86 = v70;
          uint64_t v87 = v71;
          uint64_t v88 = v72;
          uint64_t v89 = 0;
          char v90 = 0;
          uint64_t v91 = 0;
          sub_3D7250();
          sub_3D2F90();
          uint64_t v82 = type metadata accessor for ModernPage();
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1FD0);
          sub_3D6DF0();
          *(_OWORD *)(swift_allocObject() + 16) = xmmword_3DED20;
          sub_3D6DC0();
          sub_3D6DB0();
          MetricsPageFields.metricsFields.getter();
          uint64_t v73 = v83;
          (*(void (**)(char *, char *, uint64_t))(v83 + 16))(v7, v10, v5);
          sub_3D6E00();
          sub_18F88((uint64_t)v92, (uint64_t)v107, (uint64_t *)&unk_4B1F80);
          sub_443B4((uint64_t)v107);
          uint64_t v106 = v93;
          sub_443E0((uint64_t)&v106);
          uint64_t v105 = v94;
          sub_443E0((uint64_t)&v105);
          sub_3D4C4(v95);
          (*(void (**)(char *, uint64_t))(v73 + 8))(v10, v5);
          uint64_t v32 = v82;
          goto LABEL_16;
        }
      }
      uint64_t v74 = sub_3D3FE0();
      uint64_t v76 = v75;
      uint64_t v77 = sub_3D3B90();
      uint64_t v79 = v78;
      uint64_t v85 = v74;
      uint64_t v86 = v76;
      v120._countAndFlagsBits = 95;
      v120._object = (void *)0xE100000000000000;
      sub_3D7E90(v120);
      v121._countAndFlagsBits = v77;
      v121._object = v79;
      sub_3D7E90(v121);
      swift_bridgeObjectRelease();
      sub_3D7940();
      uint64_t v32 = type metadata accessor for ModernPage();
      sub_3D6E90();
      goto LABEL_21;
    }
    uint64_t v34 = sub_3D3FE0();
    uint64_t v36 = v35;
    uint64_t v37 = sub_3D3B60();
    uint64_t v39 = v38;
    uint64_t v85 = v34;
    uint64_t v86 = v36;
    v112._countAndFlagsBits = 95;
    v112._object = (void *)0xE100000000000000;
    sub_3D7E90(v112);
    v113._countAndFlagsBits = v37;
    v113._object = v39;
    sub_3D7E90(v113);
    swift_bridgeObjectRelease();
    sub_3D7940();
    uint64_t v40 = sub_3D3B60();
    uint64_t v42 = v41;
    uint64_t v43 = sub_3D3FE0();
    uint64_t v85 = v40;
    uint64_t v86 = v42;
    uint64_t v87 = v43;
    uint64_t v88 = v44;
    uint64_t v89 = 0;
    char v90 = 0;
    uint64_t v91 = 0;
    sub_3D7250();
    sub_3D2F90();
    uint64_t v32 = type metadata accessor for ModernPage();
    v81[1] = a3 + *(int *)(v32 + 20);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1FD0);
    sub_3D6DF0();
    uint64_t v33 = v83;
    uint64_t v82 = a3;
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_3DED20;
    sub_3D6DC0();
    sub_3D6DB0();
    MetricsPageFields.metricsFields.getter();
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v7, v10, v5);
    a3 = v82;
  }
  else
  {
    uint64_t v21 = sub_3D3FE0();
    uint64_t v23 = v22;
    uint64_t v24 = sub_3D3AD0();
    uint64_t v26 = v25;
    uint64_t v85 = v21;
    uint64_t v86 = v23;
    v110._countAndFlagsBits = 95;
    v110._object = (void *)0xE100000000000000;
    sub_3D7E90(v110);
    v111._countAndFlagsBits = v24;
    v111._object = v26;
    sub_3D7E90(v111);
    swift_bridgeObjectRelease();
    sub_3D7940();
    uint64_t v27 = sub_3D3AD0();
    uint64_t v29 = v28;
    uint64_t v30 = sub_3D3FE0();
    uint64_t v85 = v27;
    uint64_t v86 = v29;
    uint64_t v87 = v30;
    uint64_t v88 = v31;
    uint64_t v89 = 0;
    char v90 = 0;
    uint64_t v91 = 0;
    sub_3D7250();
    sub_3D2F90();
    uint64_t v32 = type metadata accessor for ModernPage();
    uint64_t v82 = a3 + *(int *)(v32 + 20);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1FD0);
    sub_3D6DF0();
    uint64_t v33 = v83;
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_3DED20;
    sub_3D6DC0();
    sub_3D6DB0();
    MetricsPageFields.metricsFields.getter();
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v7, v10, v5);
  }
  sub_3D6E00();
  sub_18F88((uint64_t)v92, (uint64_t)v107, (uint64_t *)&unk_4B1F80);
  sub_443B4((uint64_t)v107);
  uint64_t v106 = v93;
  sub_443E0((uint64_t)&v106);
  uint64_t v105 = v94;
  sub_443E0((uint64_t)&v105);
  sub_3D4C4(v95);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v10, v5);
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_21:
  *(void *)(a3 + *(int *)(v32 + 24)) = v84;
  return swift_bridgeObjectRetain();
}

double sub_32EEC4@<D0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  sub_2360C8(a1, (uint64_t)&v10);
  if (v18 < 9u) {
    goto LABEL_5;
  }
  uint64_t v6 = v14 | v13 | v12;
  if (v16 | v17 | v10 | v15 | v6 | v11)
  {
    uint64_t v7 = v16 | v17 | v15 | v6 | v11;
    if ((unint64_t)(v10 - 1) <= 1 && !v7) {
      goto LABEL_5;
    }
    if (v10 != 3 || v7)
    {
      if (v10 != 4 || v7)
      {
LABEL_5:
        *a3 = 0;
        a3[1] = 0;
        a3[2] = 0xF000000000000007;
        return result;
      }
      BOOL v8 = (a2 & 1) == 0;
      uint64_t v9 = 4;
    }
    else
    {
      BOOL v8 = (a2 & 1) == 0;
      uint64_t v9 = 6;
    }
  }
  else
  {
    BOOL v8 = (a2 & 1) == 0;
    uint64_t v9 = 9;
  }
  if (!v8) {
    ++v9;
  }
  *a3 = v9;
  double result = 0.0;
  *(_OWORD *)(a3 + 1) = xmmword_3E3D10;
  return result;
}

uint64_t sub_32EFAC(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, uint64_t, void, void))
{
  uint64_t v4 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_4BE7B8);
  return a2(a1, *(void *)(a1 + v4[12]), *(unsigned __int8 *)(a1 + v4[16]), a1 + v4[20], *(unsigned __int8 *)(a1 + v4[24]), *(unsigned __int8 *)(a1 + v4[28]));
}

uint64_t sub_32F024()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    swift_retain();
    swift_release();
    sub_3D5880();
    return swift_release();
  }
  return result;
}

uint64_t sub_32F0AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v51 = a3;
  uint64_t v52 = a2;
  uint64_t v54 = (void *)a1;
  uint64_t v58 = a4;
  uint64_t v4 = (int *)type metadata accessor for ModernShelf();
  uint64_t v57 = *((void *)v4 - 1);
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v7 - 8);
  uint64_t v53 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1FE0);
  __chkstk_darwin(v9 - 8);
  uint64_t v55 = (uint64_t)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v11 - 8);
  uint64_t v56 = (uint64_t)&v47 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_3D3860();
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for ShowEpisodeCountHeader(0);
  __chkstk_darwin(v16);
  unsigned __int8 v18 = (uint64_t *)((char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE888);
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for ShowEpisodeCountHeaderData(0);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (uint64_t *)((char *)&v47 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_153B4((uint64_t)v54, (uint64_t)v21, &qword_4BE888);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22) == 1)
  {
    sub_250FC((uint64_t)v21, &qword_4BE888);
    uint64_t v26 = 1;
    uint64_t v27 = v58;
  }
  else
  {
    sub_3382A8((uint64_t)v21, (uint64_t)v25, type metadata accessor for ShowEpisodeCountHeaderData);
    uint64_t v28 = *v25;
    uint64_t v29 = v25[1];
    sub_338310((uint64_t)v25 + *(int *)(v22 + 20), (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    uint64_t v30 = *(int *)(v22 + 24);
    uint64_t v50 = v25;
    uint64_t v31 = *(uint64_t *)((char *)v25 + v30);
    sub_2360C8(v51, (uint64_t)v62);
    if (((v63 - 1) & 0xF8) != 0) {
      char v32 = 4;
    }
    else {
      char v32 = 0x4020403040401uLL >> (8 * (v63 - 1));
    }
    LOBYTE(v59) = v32;
    uint64_t v49 = sub_3D7340();
    uint64_t v33 = *(void *)(v49 - 8);
    uint64_t v48 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
    uint64_t v51 = v33 + 56;
    uint64_t v34 = v56;
    v48(v56, 1, 1, v49);
    swift_bridgeObjectRetain();
    swift_retain();
    ShowEpisodeCountHeader.init(id:title:artwork:action:libraryEpisodesCount:style:impressionMetrics:)(0, 0, v28, v29, (uint64_t)v15, v31, v52, (unsigned __int8 *)&v59, v18, v34);
    uint64_t v35 = type metadata accessor for Header(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v55, 1, 1, v35);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1CC0);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_3DED90;
    *(void *)(v36 + 56) = v16;
    *(void *)(v36 + 64) = sub_335608(&qword_4B4CF8, (void (*)(uint64_t))type metadata accessor for ShowEpisodeCountHeader);
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v36 + 32));
    uint64_t v54 = v18;
    sub_338310((uint64_t)v18, (uint64_t)boxed_opaque_existential_2Tm, type metadata accessor for ShowEpisodeCountHeader);
    uint64_t v38 = sub_3D2350();
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56);
    uint64_t v40 = (uint64_t)v53;
    v39(v53, 1, 1, v38);
    uint64_t v61 = 0;
    long long v59 = 0u;
    long long v60 = 0u;
    v48(v34, 1, 1, v49);
    uint64_t v41 = (void *)((char *)v6 + v4[8]);
    *uint64_t v41 = 0;
    v41[1] = 0;
    uint64_t v42 = (uint64_t)v6 + v4[9];
    v39((char *)v42, 1, 1, v38);
    *uint64_t v6 = 0xD000000000000027;
    v6[1] = 0x800000000040A0C0;
    sub_18F88(v55, (uint64_t)v6 + v4[5], &qword_4B1FE0);
    uint64_t v43 = (char *)v6 + v4[6];
    *(_WORD *)uint64_t v43 = 54;
    *((_WORD *)v43 + 3) = 256;
    *(_DWORD *)(v43 + 2) = 0;
    *((void *)v43 + 1) = 1;
    *(void *)((char *)v6 + v4[7]) = v36;
    sub_4B03C(v40, v42, &qword_4AD7B0);
    *((unsigned char *)v6 + v4[10]) = 1;
    *((unsigned char *)v6 + v4[11]) = 0;
    uint64_t v44 = (uint64_t)v6 + v4[12];
    if (*((void *)&v60 + 1))
    {
      sub_18F70(&v59, v44);
    }
    else
    {
      long long v45 = (unint64_t)v60;
      *(_OWORD *)uint64_t v44 = v59;
      *(_OWORD *)(v44 + 16) = v45;
      *(void *)(v44 + 32) = v61;
    }
    uint64_t v27 = v58;
    sub_18F88(v56, (uint64_t)v6 + v4[13], (uint64_t *)&unk_4B9870);
    swift_bridgeObjectRelease();
    *uint64_t v41 = 0;
    v41[1] = 0;
    sub_3382A8((uint64_t)v6, v27, (uint64_t (*)(void))type metadata accessor for ModernShelf);
    sub_338378((uint64_t)v54, type metadata accessor for ShowEpisodeCountHeader);
    sub_338378((uint64_t)v50, type metadata accessor for ShowEpisodeCountHeaderData);
    uint64_t v26 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v57 + 56))(v27, v26, 1, v4);
}

uint64_t sub_32F824@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AFF78);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_3D4780();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_3D4730())
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
    sub_3D4740();
    swift_beginAccess();
    uint64_t Strong = swift_weakLoadStrong();
    uint64_t v13 = Strong;
    if (Strong)
    {
      uint64_t v14 = *(void *)(Strong + 40);
      swift_unknownObjectRetain();
      swift_release();
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 344))(v11, ObjectType, v14);
      swift_unknownObjectRelease();
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    v17[1] = 0;
    sub_3D5930();
    sub_3D6E4(&qword_4AFF80, &qword_4AFF78);
    uint64_t v13 = sub_3D5AC0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  *a2 = v13;
  return result;
}

void *sub_32FA9C@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result[1] < *result;
  return result;
}

uint64_t sub_32FAB0@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  Swift::String v113 = a1;
  uint64_t v112 = type metadata accessor for ActionMenu(0);
  __chkstk_darwin(v112);
  Swift::String v115 = (unint64_t *)((char *)&v105 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v4 - 8);
  uint64_t v116 = (uint64_t)&v105 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v119 = (uint64_t)&v105 - v7;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AFDA0);
  __chkstk_darwin(v8 - 8);
  Swift::String v114 = (char *)&v105 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v105 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v105 - v14;
  uint64_t v16 = type metadata accessor for ActionMenu.Child(0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v111 = (uint64_t)&v105 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v110 = (uint64_t)&v105 - v20;
  __chkstk_darwin(v21);
  uint64_t v106 = (uint64_t)&v105 - v22;
  __chkstk_darwin(v23);
  uint64_t v107 = (uint64_t)&v105 - v24;
  __chkstk_darwin(v25);
  uint64_t v108 = (uint64_t)&v105 - v26;
  __chkstk_darwin(v27);
  uint64_t v109 = (uint64_t)&v105 - v28;
  __chkstk_darwin(v29);
  uint64_t v31 = (char *)&v105 - v30;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v105 - v33;
  Swift::String v120 = _swiftEmptyArrayStorage;
  sub_330708((uint64_t)v15);
  uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
  uint64_t v118 = v16;
  uint64_t v36 = v35;
  if (v35((uint64_t)v15, 1, v16) == 1)
  {
    sub_250FC((uint64_t)v15, &qword_4AFDA0);
  }
  else
  {
    sub_3382A8((uint64_t)v15, (uint64_t)v34, type metadata accessor for ActionMenu.Child);
    sub_338310((uint64_t)v34, (uint64_t)v31, type metadata accessor for ActionMenu.Child);
    unint64_t v37 = sub_133B4(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    unint64_t v39 = *(void *)(v37 + 16);
    unint64_t v38 = *(void *)(v37 + 24);
    if (v39 >= v38 >> 1) {
      unint64_t v37 = sub_133B4(v38 > 1, v39 + 1, 1, v37);
    }
    *(void *)(v37 + 16) = v39 + 1;
    sub_3382A8((uint64_t)v31, v37+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v39, type metadata accessor for ActionMenu.Child);
    Swift::String v120 = (void *)v37;
    sub_338378((uint64_t)v34, type metadata accessor for ActionMenu.Child);
  }
  uint64_t v40 = sub_330ECC(0);
  sub_28834C((uint64_t)v40);
  sub_331F78((uint64_t)v12);
  uint64_t v41 = v36;
  unsigned int v42 = v36((uint64_t)v12, 1, v118);
  uint64_t v43 = (uint64_t)v114;
  if (v42 == 1)
  {
    sub_250FC((uint64_t)v12, &qword_4AFDA0);
  }
  else
  {
    uint64_t v44 = v109;
    sub_3382A8((uint64_t)v12, v109, type metadata accessor for ActionMenu.Child);
    uint64_t v45 = v108;
    sub_338310(v44, v108, type metadata accessor for ActionMenu.Child);
    unint64_t v46 = (unint64_t)v120;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v46 = sub_133B4(0, *(void *)(v46 + 16) + 1, 1, v46);
    }
    unint64_t v48 = *(void *)(v46 + 16);
    unint64_t v47 = *(void *)(v46 + 24);
    if (v48 >= v47 >> 1) {
      unint64_t v46 = sub_133B4(v47 > 1, v48 + 1, 1, v46);
    }
    *(void *)(v46 + 16) = v48 + 1;
    sub_3382A8(v45, v46+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v48, type metadata accessor for ActionMenu.Child);
    Swift::String v120 = (void *)v46;
    sub_338378(v44, type metadata accessor for ActionMenu.Child);
  }
  uint64_t v49 = *((void *)v2 + 21);
  uint64_t v50 = *((void *)v2 + 22);
  int v51 = v2[232];
  if (v51 == 1)
  {
    sub_332ECC(v49, v50, v43);
  }
  else
  {
    if (v51 != 9
      || (int8x16_t v52 = vorrq_s8(*(int8x16_t *)(v2 + 200), *(int8x16_t *)(v2 + 216)),
          *(void *)&vorr_s8(*(int8x8_t *)v52.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v52, v52, 8uLL)) | *((void *)v2 + 24) | *((void *)v2 + 23) | v50 | v49)
      || (id v53 = [self currentTraitCollection],
          char v54 = sub_3D85B0(),
          v53,
          (v54 & 1) != 0))
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 56))(v43, 1, 1, v118);
LABEL_20:
      sub_250FC(v43, &qword_4AFDA0);
      goto LABEL_21;
    }
    sub_332938(v43);
  }
  if (v41(v43, 1, v118) == 1) {
    goto LABEL_20;
  }
  uint64_t v99 = v43;
  uint64_t v100 = v107;
  sub_3382A8(v99, v107, type metadata accessor for ActionMenu.Child);
  uint64_t v101 = v106;
  sub_338310(v100, v106, type metadata accessor for ActionMenu.Child);
  unint64_t v102 = (unint64_t)v120;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v102 = sub_133B4(0, *(void *)(v102 + 16) + 1, 1, v102);
  }
  unint64_t v104 = *(void *)(v102 + 16);
  unint64_t v103 = *(void *)(v102 + 24);
  if (v104 >= v103 >> 1) {
    unint64_t v102 = sub_133B4(v103 > 1, v104 + 1, 1, v102);
  }
  *(void *)(v102 + 16) = v104 + 1;
  sub_3382A8(v101, v102+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v104, type metadata accessor for ActionMenu.Child);
  Swift::String v120 = (void *)v102;
  sub_338378(v100, type metadata accessor for ActionMenu.Child);
LABEL_21:
  uint64_t v55 = sub_333B9C();
  uint64_t v56 = v55[2];
  uint64_t v117 = v17;
  if (v56)
  {
    Swift::String v114 = v2;
    uint64_t v57 = sub_3D3860();
    uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56);
    uint64_t v59 = v119;
    v58(v119, 1, 1, v57);
    unint64_t v60 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    unint64_t v62 = v61;
    uint64_t v63 = v116;
    sub_153B4(v59, v116, (uint64_t *)&unk_4B1F70);
    uint64_t v64 = v112;
    uint64_t v65 = v115;
    uint64_t v66 = (uint64_t)v115 + *(int *)(v112 + 28);
    v58(v66, 1, 1, v57);
    *uint64_t v65 = v60;
    v65[1] = v62;
    v65[2] = 0;
    v65[3] = 0xE000000000000000;
    v65[4] = 0;
    v65[5] = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_4B03C(v63, v66, (uint64_t *)&unk_4B1F70);
    *(unint64_t *)((char *)v65 + *(int *)(v64 + 32)) = (unint64_t)v55;
    uint64_t v67 = v110;
    sub_3382A8((uint64_t)v65, v110, type metadata accessor for ActionMenu);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_250FC(v119, (uint64_t *)&unk_4B1F70);
    unint64_t v68 = (unint64_t)v120;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v68 = sub_133B4(0, *(void *)(v68 + 16) + 1, 1, v68);
    }
    unint64_t v70 = *(void *)(v68 + 16);
    unint64_t v69 = *(void *)(v68 + 24);
    uint64_t v71 = v117;
    if (v70 >= v69 >> 1) {
      unint64_t v68 = sub_133B4(v69 > 1, v70 + 1, 1, v68);
    }
    *(void *)(v68 + 16) = v70 + 1;
    sub_3382A8(v67, v68+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(void *)(v71 + 72) * v70, type metadata accessor for ActionMenu.Child);
    Swift::String v120 = (void *)v68;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v64 = v112;
  }
  uint64_t v72 = sub_333DB0();
  if (v72[2])
  {
    uint64_t v73 = sub_3D3860();
    uint64_t v74 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v73 - 8) + 56);
    uint64_t v75 = v119;
    v74(v119, 1, 1, v73);
    unint64_t v76 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    unint64_t v78 = v77;
    uint64_t v79 = v116;
    sub_153B4(v75, v116, (uint64_t *)&unk_4B1F70);
    uint64_t v80 = *(int *)(v64 + 28);
    uint64_t v81 = v64;
    uint64_t v82 = v115;
    uint64_t v83 = (uint64_t)v115 + v80;
    v74((uint64_t)v115 + v80, 1, 1, v73);
    *uint64_t v82 = v76;
    v82[1] = v78;
    v82[2] = 0;
    v82[3] = 0xE000000000000000;
    v82[4] = 0;
    v82[5] = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_4B03C(v79, v83, (uint64_t *)&unk_4B1F70);
    *(unint64_t *)((char *)v82 + *(int *)(v81 + 32)) = (unint64_t)v72;
    uint64_t v84 = v111;
    sub_3382A8((uint64_t)v82, v111, type metadata accessor for ActionMenu);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_250FC(v119, (uint64_t *)&unk_4B1F70);
    unint64_t v85 = (unint64_t)v120;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v85 = sub_133B4(0, *(void *)(v85 + 16) + 1, 1, v85);
    }
    unint64_t v87 = *(void *)(v85 + 16);
    unint64_t v86 = *(void *)(v85 + 24);
    uint64_t v88 = v113;
    uint64_t v89 = v117;
    uint64_t v64 = v81;
    if (v87 >= v86 >> 1) {
      unint64_t v85 = sub_133B4(v86 > 1, v87 + 1, 1, v85);
    }
    *(void *)(v85 + 16) = v87 + 1;
    sub_3382A8(v84, v85+ ((*(unsigned __int8 *)(v89 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80))+ *(void *)(v89 + 72) * v87, type metadata accessor for ActionMenu.Child);
    Swift::String v120 = (void *)v85;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v88 = v113;
  }
  uint64_t v90 = v119;
  sub_3D3850();
  uint64_t v91 = sub_3D3860();
  char v92 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v91 - 8) + 56);
  v92(v90, 0, 1, v91);
  uint64_t v93 = v120;
  unint64_t v94 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  unint64_t v96 = v95;
  uint64_t v97 = (uint64_t)v88 + *(int *)(v64 + 28);
  v92(v97, 1, 1, v91);
  *uint64_t v88 = v94;
  v88[1] = v96;
  v88[2] = 0;
  v88[3] = 0xE000000000000000;
  v88[4] = 0;
  v88[5] = 0;
  uint64_t result = sub_4B03C(v90, v97, (uint64_t *)&unk_4B1F70);
  *(unint64_t *)((char *)v88 + *(int *)(v64 + 32)) = (unint64_t)v93;
  return result;
}

uint64_t sub_330708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (int *)type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (unint64_t *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_3D6F40();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v38 - v13;
  sub_2360C8(v1 + 168, (uint64_t)v46);
  if (sub_3D3F10())
  {
    uint64_t v42 = a1;
    swift_beginAccess();
    int v43 = sub_3D4730();
    swift_endAccess();
    id v15 = [self currentTraitCollection];
    char v16 = sub_3D85B0();

    if (v16)
    {
      sub_3D3850();
      uint64_t v17 = sub_3D3860();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 0, 1, v17);
    }
    else
    {
      uint64_t v17 = sub_3D3860();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 1, 1, v17);
    }
    uint64_t v39 = v17;
    uint64_t v20 = (objc_class *)[self mainBundle];
    v37._countAndFlagsBits = 0xE000000000000000;
    v47._object = (void *)0x800000000040A010;
    v47._countAndFlagsBits = 0xD000000000000014;
    v48.value._countAndFlagsBits = 0;
    v48.value._object = 0;
    v21.super.Class isa = v20;
    v49._countAndFlagsBits = 0;
    v49._object = (void *)0xE000000000000000;
    uint64_t v41 = sub_3D2060(v47, v48, v21, v49, v37);
    unint64_t v40 = v22;

    uint64_t v23 = swift_allocObject();
    swift_weakInit();
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v23;
    *(unsigned char *)(v24 + 24) = v43 & 1;
    swift_retain();
    sub_3D6F00();
    uint64_t v25 = type metadata accessor for ClosureAction();
    unint64_t v38 = v14;
    uint64_t v26 = v25;
    swift_allocObject();
    uint64_t v27 = sub_2D152C(0, 0, 32, (uint64_t)v8, (uint64_t)sub_336C60, v24);
    swift_release();
    swift_release();
    v45[3] = v26;
    v45[4] = sub_335608((unint64_t *)&qword_4AB9B8, (void (*)(uint64_t))type metadata accessor for ClosureAction);
    v45[0] = v27;
    unint64_t v28 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    unint64_t v30 = v29;
    sub_153B4((uint64_t)v14, (uint64_t)v11, (uint64_t *)&unk_4B1F70);
    sub_153B4((uint64_t)v45, (uint64_t)v44, (uint64_t *)&unk_4BC3D0);
    uint64_t v31 = (uint64_t)v5 + v3[6];
    sub_3D3860();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v31, 1, 1);
    uint64_t v32 = v3[7];
    *((unsigned char *)v5 + v32) = 2;
    uint64_t v33 = (uint64_t)v5 + v3[9];
    *(void *)(v33 + 32) = 0;
    *(_OWORD *)uint64_t v33 = 0u;
    *(_OWORD *)(v33 + 16) = 0u;
    *uint64_t v5 = v28;
    v5[1] = v30;
    unint64_t v34 = v40;
    v5[2] = v41;
    v5[3] = v34;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_4B03C((uint64_t)v11, v31, (uint64_t *)&unk_4B1F70);
    *((unsigned char *)v5 + v32) = 2;
    *((unsigned char *)v5 + v3[8]) = (v43 & 1) == 0;
    sub_4B03C((uint64_t)v44, v33, (uint64_t *)&unk_4BC3D0);
    uint64_t v35 = v42;
    sub_3382A8((uint64_t)v5, v42, type metadata accessor for ActionMenu.Item);
    uint64_t v36 = type metadata accessor for ActionMenu.Child(0);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_250FC((uint64_t)v38, (uint64_t *)&unk_4B1F70);
    sub_250FC((uint64_t)v45, (uint64_t *)&unk_4BC3D0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 0, 1, v36);
  }
  else
  {
    uint64_t v18 = type metadata accessor for ActionMenu.Child(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
}

uint64_t sub_330CDC()
{
  uint64_t v0 = sub_3D4780();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v11 - v5;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings;
    swift_beginAccess();
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
    v9(v6, v8, v0);
    sub_3D4740();
    v9(v3, v8, v0);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v1 + 24))(v8, v6, v0);
    swift_endAccess();
    sub_3268BC();
    uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
    v10(v6, v0);
    v10(v3, v0);
    return swift_release();
  }
  return result;
}

void *sub_330ECC(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = (int *)type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (void *)((char *)v99 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_3D6F40();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v99 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v15 = (char *)v99 - v14;
  __chkstk_darwin(v16);
  uint64_t v115 = (uint64_t)v99 - v17;
  __chkstk_darwin(v18);
  uint64_t v20 = (void (*)(char *, uint64_t, uint64_t, uint64_t))((char *)v99 - v19);
  sub_2360C8(v1 + 168, (uint64_t)v120);
  uint64_t v21 = sub_3D3EC0();
  char v22 = sub_16378(v21, (uint64_t)&off_474730);
  uint64_t v111 = v15;
  if (v22)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v23 = sub_16378(v21, (uint64_t)&off_474758);
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0) {
      return _swiftEmptyArrayStorage;
    }
  }
  uint64_t v108 = v20;
  uint64_t v110 = (uint64_t)v12;
  uint64_t v114 = v2;
  swift_beginAccess();
  sub_3D4750();
  swift_endAccess();
  uint64_t v24 = sub_3D3F60();
  uint64_t v26 = v25;
  int v27 = 1;
  if (v24 != sub_3D3F60() || v26 != v28)
  {
    char v29 = sub_3D8FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v29) {
      goto LABEL_8;
    }
    uint64_t v93 = sub_3D3F60();
    uint64_t v95 = v94;
    if (v93 != sub_3D3F60() || v95 != v96) {
      int v27 = sub_3D8FE0();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_8:
  __swift_instantiateConcreteTypeFromMangledName(&qword_4A97D0);
  uint64_t v30 = type metadata accessor for ActionMenu.Child(0);
  unint64_t v31 = *(void *)(*(void *)(v30 - 8) + 72);
  unint64_t v32 = (*(unsigned __int8 *)(*(void *)(v30 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v30 - 8) + 80);
  uint64_t v113 = v30;
  int v112 = v27;
  if (a1)
  {
    unint64_t v107 = v31;
    uint64_t v33 = swift_allocObject();
    uint64_t v109 = v33;
    *(_OWORD *)(v33 + 16) = xmmword_3DED20;
    uint64_t v105 = v33 + v32;
    id v106 = self;
    unint64_t v34 = (objc_class *)[v106 mainBundle];
    v97._countAndFlagsBits = 0xE000000000000000;
    v121._object = (void *)0x800000000040A050;
    v121._countAndFlagsBits = 0xD000000000000010;
    v124.value._countAndFlagsBits = 0;
    v124.value._object = 0;
    v35.super.Class isa = v34;
    v127._countAndFlagsBits = 0;
    v127._object = (void *)0xE000000000000000;
    unint64_t v103 = (uint64_t (*)(void))sub_3D2060(v121, v124, v35, v127, v97);
    unint64_t v102 = v36;

    uint64_t v37 = sub_3D3860();
    uint64_t v38 = *(void *)(v37 - 8);
    uint64_t v108 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
    uint64_t v39 = v38 + 56;
    uint64_t v40 = (uint64_t)v111;
    uint64_t v100 = v37;
    v108(v111, 1, 1, v37);
    v99[1] = v39;
    uint64_t v41 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    sub_3D6F00();
    uint64_t v42 = type metadata accessor for ClosureAction();
    swift_allocObject();
    uint64_t v43 = sub_2D152C(0, 0, 32, (uint64_t)v9, (uint64_t)sub_336C78, v41);
    swift_release_n();
    uint64_t v118 = v42;
    uint64_t v104 = sub_335608((unint64_t *)&qword_4AB9B8, (void (*)(uint64_t))type metadata accessor for ClosureAction);
    uint64_t v119 = v104;
    v117[0] = v43;
    unint64_t v44 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    unint64_t v46 = v45;
    uint64_t v47 = v40;
    uint64_t v48 = v115;
    sub_153B4(v47, v115, (uint64_t *)&unk_4B1F70);
    sub_153B4((uint64_t)v117, (uint64_t)v116, (uint64_t *)&unk_4BC3D0);
    uint64_t v49 = (uint64_t)v6 + v4[6];
    v108((char *)v49, 1, 1, v37);
    uint64_t v101 = v9;
    uint64_t v50 = v4[7];
    *((unsigned char *)v6 + v50) = 2;
    uint64_t v51 = v48;
    uint64_t v52 = (uint64_t)v6 + v4[9];
    *(void *)(v52 + 32) = 0;
    *(_OWORD *)uint64_t v52 = 0u;
    *(_OWORD *)(v52 + 16) = 0u;
    *uint64_t v6 = v44;
    v6[1] = v46;
    unint64_t v53 = v102;
    v6[2] = (unint64_t)v103;
    v6[3] = v53;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_4B03C(v51, v49, (uint64_t *)&unk_4B1F70);
    *((unsigned char *)v6 + v50) = 2;
    *((unsigned char *)v6 + v4[8]) = v112 & 1;
    sub_4B03C((uint64_t)v116, v52, (uint64_t *)&unk_4BC3D0);
    unint64_t v103 = type metadata accessor for ActionMenu.Item;
    uint64_t v54 = v105;
    sub_3382A8((uint64_t)v6, v105, type metadata accessor for ActionMenu.Item);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_250FC((uint64_t)v111, (uint64_t *)&unk_4B1F70);
    sub_250FC((uint64_t)v117, (uint64_t *)&unk_4BC3D0);
    uint64_t v55 = (objc_class *)[v106 mainBundle];
    v98._countAndFlagsBits = 0xE000000000000000;
    v122._object = (void *)0x800000000040A030;
    v122._countAndFlagsBits = 0xD000000000000010;
    v125.value._countAndFlagsBits = 0;
    v125.value._object = 0;
    v56.super.Class isa = v55;
    v128._countAndFlagsBits = 0;
    v128._object = (void *)0xE000000000000000;
    id v106 = (id)sub_3D2060(v122, v125, v56, v128, v98);
    unint64_t v58 = v57;

    uint64_t v59 = v110;
    uint64_t v60 = v100;
    v108((char *)v110, 1, 1, v100);
    uint64_t v111 = (char *)(v54 + v107);
    uint64_t v61 = swift_allocObject();
    swift_weakInit();
    swift_retain();
    uint64_t v62 = (uint64_t)v101;
    sub_3D6F00();
    swift_allocObject();
    uint64_t v63 = sub_2D152C(0, 0, 32, v62, (uint64_t)sub_336C98, v61);
    swift_release_n();
    uint64_t v118 = v42;
    uint64_t v119 = v104;
    v117[0] = v63;
    unint64_t v64 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    unint64_t v66 = v65;
    uint64_t v67 = v115;
    sub_153B4(v59, v115, (uint64_t *)&unk_4B1F70);
    sub_153B4((uint64_t)v117, (uint64_t)v116, (uint64_t *)&unk_4BC3D0);
    uint64_t v68 = (uint64_t)v6 + v4[6];
    v108((char *)v68, 1, 1, v60);
    uint64_t v69 = v4[7];
    *((unsigned char *)v6 + v69) = 2;
    uint64_t v70 = (uint64_t)v6 + v4[9];
    *(void *)(v70 + 32) = 0;
    *(_OWORD *)uint64_t v70 = 0u;
    *(_OWORD *)(v70 + 16) = 0u;
    *uint64_t v6 = v64;
    v6[1] = v66;
    v6[2] = (unint64_t)v106;
    v6[3] = v58;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_4B03C(v67, v68, (uint64_t *)&unk_4B1F70);
    *((unsigned char *)v6 + v69) = 2;
    *((unsigned char *)v6 + v4[8]) = (v112 & 1) == 0;
    sub_4B03C((uint64_t)v116, v70, (uint64_t *)&unk_4BC3D0);
    sub_3382A8((uint64_t)v6, (uint64_t)v111, v103);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v71 = v110;
  }
  else
  {
    uint64_t v72 = swift_allocObject();
    uint64_t v109 = v72;
    *(_OWORD *)(v72 + 16) = xmmword_3DED90;
    uint64_t v111 = (char *)(v72 + v32);
    uint64_t v73 = (objc_class *)[self mainBundle];
    v97._countAndFlagsBits = 0xE000000000000000;
    v123._object = (void *)0x800000000040A030;
    v123._countAndFlagsBits = 0xD000000000000010;
    v126.value._countAndFlagsBits = 0;
    v126.value._object = 0;
    v74.super.Class isa = v73;
    v129._countAndFlagsBits = 0;
    v129._object = (void *)0xE000000000000000;
    uint64_t v110 = sub_3D2060(v123, v126, v74, v129, v97);
    unint64_t v107 = v75;

    uint64_t v76 = sub_3D3860();
    id v106 = *(id *)(*(void *)(v76 - 8) + 56);
    unint64_t v77 = v108;
    ((void (*)(void, uint64_t, uint64_t, uint64_t))v106)(v108, 1, 1, v76);
    uint64_t v78 = swift_allocObject();
    swift_weakInit();
    uint64_t v79 = swift_allocObject();
    *(void *)(v79 + 16) = v78;
    *(unsigned char *)(v79 + 24) = v27 & 1;
    swift_retain();
    sub_3D6F00();
    uint64_t v80 = type metadata accessor for ClosureAction();
    swift_allocObject();
    uint64_t v81 = sub_2D152C(0, 0, 32, (uint64_t)v9, (uint64_t)sub_336C6C, v79);
    swift_release();
    swift_release();
    uint64_t v118 = v80;
    uint64_t v119 = sub_335608((unint64_t *)&qword_4AB9B8, (void (*)(uint64_t))type metadata accessor for ClosureAction);
    v117[0] = v81;
    unint64_t v82 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    unint64_t v84 = v83;
    uint64_t v85 = (uint64_t)v77;
    uint64_t v86 = (uint64_t)v77;
    uint64_t v87 = v115;
    sub_153B4(v85, v115, (uint64_t *)&unk_4B1F70);
    sub_153B4((uint64_t)v117, (uint64_t)v116, (uint64_t *)&unk_4BC3D0);
    uint64_t v88 = (uint64_t)v6 + v4[6];
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v106)(v88, 1, 1, v76);
    uint64_t v89 = v4[7];
    *((unsigned char *)v6 + v89) = 2;
    uint64_t v90 = (uint64_t)v6 + v4[9];
    *(void *)(v90 + 32) = 0;
    *(_OWORD *)uint64_t v90 = 0u;
    *(_OWORD *)(v90 + 16) = 0u;
    *uint64_t v6 = v82;
    v6[1] = v84;
    unint64_t v91 = v107;
    v6[2] = v110;
    v6[3] = v91;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_4B03C(v87, v88, (uint64_t *)&unk_4B1F70);
    *((unsigned char *)v6 + v89) = 2;
    *((unsigned char *)v6 + v4[8]) = (v112 & 1) == 0;
    sub_4B03C((uint64_t)v116, v90, (uint64_t *)&unk_4BC3D0);
    sub_3382A8((uint64_t)v6, (uint64_t)v111, type metadata accessor for ActionMenu.Item);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v71 = v86;
  }
  sub_250FC(v71, (uint64_t *)&unk_4B1F70);
  sub_250FC((uint64_t)v117, (uint64_t *)&unk_4BC3D0);
  return (void *)v109;
}

uint64_t sub_331B98()
{
  uint64_t v0 = sub_3D4780();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v11 - v5;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings;
    swift_beginAccess();
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
    v9(v6, v8, v0);
    sub_3D4760();
    v9(v3, v8, v0);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v1 + 24))(v8, v6, v0);
    swift_endAccess();
    sub_3268BC();
    uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
    v10(v6, v0);
    v10(v3, v0);
    return swift_release();
  }
  return result;
}

uint64_t sub_331D8C()
{
  uint64_t v0 = sub_3D4780();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v11 - v5;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings;
    swift_beginAccess();
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
    v9(v6, v8, v0);
    sub_3D4760();
    v9(v3, v8, v0);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v1 + 24))(v8, v6, v0);
    swift_endAccess();
    sub_3268BC();
    uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
    v10(v6, v0);
    v10(v3, v0);
    return swift_release();
  }
  return result;
}

uint64_t sub_331F78@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_3D6F40();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v10 - 8);
  __chkstk_darwin(v11);
  if (*(unsigned char *)(v2 + 232) == 6)
  {
    unint64_t v58 = v9;
    uint64_t v59 = v13;
    uint64_t v61 = (int *)v4;
    uint64_t v62 = (uint64_t)&v53 - v12;
    uint64_t v60 = (unint64_t *)v6;
    uint64_t v63 = a1;
    uint64_t v15 = *(void *)(v2 + 168);
    uint64_t v14 = *(void *)(v2 + 176);
    uint64_t v16 = *(void *)(v2 + 184);
    uint64_t v17 = *(void *)(v2 + 192);
    uint64_t v56 = *(void *)(v2 + 200);
    unint64_t v57 = v16;
    uint64_t v18 = *(void *)(v2 + 208);
    uint64_t v19 = *(void *)(v2 + 224);
    uint64_t v54 = *(void *)(v2 + 216);
    uint64_t v55 = v18;
    uint64_t v21 = *(void *)(v2 + 72);
    uint64_t v20 = *(void *)(v2 + 80);
    __swift_project_boxed_opaque_existential_1((void *)(v2 + 48), v21);
    char v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 568);
    swift_bridgeObjectRetain();
    if (v22(v15, v14, v21, v20))
    {
      id v23 = [self currentTraitCollection];
      char v24 = sub_3D85B0();

      uint64_t v25 = v62;
      uint64_t v26 = v15;
      if (v24)
      {
        uint64_t v27 = sub_3D3860();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v25, 1, 1, v27);
      }
      else
      {
        sub_3D3850();
        uint64_t v27 = sub_3D3860();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v25, 0, 1, v27);
      }
      unint64_t v31 = (objc_class *)[self mainBundle];
      v52._countAndFlagsBits = 0xEA00000000006C6CLL;
      v67._countAndFlagsBits = 0x415F455641534E55;
      v67._object = (void *)0xEA00000000004C4CLL;
      v68.value._countAndFlagsBits = 0;
      v68.value._object = 0;
      v32.super.Class isa = v31;
      v69._countAndFlagsBits = 0;
      v69._object = (void *)0xE000000000000000;
      uint64_t v33 = sub_3D2060(v67, v68, v32, v69, v52);
      uint64_t v56 = v34;
      unint64_t v57 = v33;

      uint64_t v35 = swift_allocObject();
      swift_weakInit();
      unint64_t v36 = (void *)swift_allocObject();
      v36[2] = v35;
      v36[3] = v26;
      v36[4] = v14;
      swift_retain();
      uint64_t v37 = (uint64_t)v58;
      sub_3D6F00();
      uint64_t v38 = type metadata accessor for ClosureAction();
      swift_allocObject();
      uint64_t v39 = sub_2D152C(0, 0, 32, v37, (uint64_t)sub_336C1C, (uint64_t)v36);
      swift_release();
      swift_release();
      v65[3] = v38;
      v65[4] = sub_335608((unint64_t *)&qword_4AB9B8, (void (*)(uint64_t))type metadata accessor for ClosureAction);
      v65[0] = v39;
      unint64_t v40 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
      unint64_t v42 = v41;
      uint64_t v43 = v59;
      sub_153B4(v25, v59, (uint64_t *)&unk_4B1F70);
      sub_153B4((uint64_t)v65, (uint64_t)v64, (uint64_t *)&unk_4BC3D0);
      unint64_t v44 = v60;
      unint64_t v45 = v61;
      uint64_t v46 = (uint64_t)v60 + v61[6];
      sub_3D3860();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v46, 1, 1, v27);
      uint64_t v47 = v45[7];
      *((unsigned char *)v44 + v47) = 2;
      uint64_t v48 = (uint64_t)v44 + v45[9];
      *(void *)(v48 + 32) = 0;
      *(_OWORD *)uint64_t v48 = 0u;
      *(_OWORD *)(v48 + 16) = 0u;
      *unint64_t v44 = v40;
      v44[1] = v42;
      uint64_t v49 = v56;
      v44[2] = v57;
      v44[3] = v49;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_4B03C(v43, v46, (uint64_t *)&unk_4B1F70);
      *((unsigned char *)v44 + v47) = 2;
      *((unsigned char *)v44 + v45[8]) = 1;
      sub_4B03C((uint64_t)v64, v48, (uint64_t *)&unk_4BC3D0);
      uint64_t v50 = v63;
      sub_3382A8((uint64_t)v44, v63, type metadata accessor for ActionMenu.Item);
      uint64_t v51 = type metadata accessor for ActionMenu.Child(0);
      swift_storeEnumTagMultiPayload();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_250FC(v62, (uint64_t *)&unk_4B1F70);
      sub_250FC((uint64_t)v65, (uint64_t *)&unk_4BC3D0);
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v51 - 8) + 56))(v50, 0, 1, v51);
    }
    sub_B2620(v15, v14, v57, v17, v56, v55, v54, v19, 6);
    a1 = v63;
  }
  uint64_t v28 = type metadata accessor for ActionMenu.Child(0);
  char v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56);

  return v29(a1, 1, 1, v28);
}

uint64_t sub_3325CC(uint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t v5 = sub_3D5640();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v10 = (void *)result;
    sub_3D5580();
    swift_bridgeObjectRetain_n();
    uint64_t v11 = sub_3D5630();
    os_log_type_t v12 = sub_3D8410();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      v26[0] = v22;
      *(_DWORD *)uint64_t v13 = 136315394;
      uint64_t v23 = v5;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1FB7E8(a2, a3, v26);
      v21[2] = v26;
      sub_3D8930();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v13 + 12) = 2080;
      v21[1] = v13 + 14;
      id v14 = [self callStackSymbols];
      uint64_t v24 = a2;
      sub_3D8020();

      uint64_t v15 = sub_3D8030();
      unint64_t v17 = v16;
      swift_bridgeObjectRelease();
      uint64_t v25 = sub_1FB7E8(v15, v17, v26);
      sub_3D8930();
      a2 = v24;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v11, v12, "ModernEpisodePresenter.buildUnsaveAllMenuItem() - Unsaving all bookmarked episodes for podcast UUID %s %s", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v23);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    uint64_t v18 = v10[14];
    uint64_t v19 = v10[15];
    __swift_project_boxed_opaque_existential_1(v10 + 11, v18);
    uint64_t v20 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v19 + 32))(a2, a3, v18, v19);
    v26[3] = type metadata accessor for ModernEpisodesPresenter();
    v26[0] = (uint64_t)v10;
    swift_retain();
    sub_335F44(v20, (uint64_t)v26, 0);
    swift_release();
    swift_release();
    sub_250FC((uint64_t)v26, (uint64_t *)&unk_4B5A40);
    return swift_release();
  }
  return result;
}

uint64_t sub_332938@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (int *)type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (unint64_t *)((char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_3D6F40();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v14 = (char *)&v41 - v13;
  uint64_t v15 = v1[9];
  uint64_t v16 = v1[10];
  __swift_project_boxed_opaque_existential_1(v1 + 6, v15);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v16 + 528))(v15, v16))
  {
    id v17 = [self currentTraitCollection];
    char v18 = sub_3D85B0();

    if (v18)
    {
      uint64_t v19 = sub_3D3860();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v14, 1, 1, v19);
    }
    else
    {
      sub_3D3850();
      uint64_t v19 = sub_3D3860();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v14, 0, 1, v19);
    }
    uint64_t v23 = (objc_class *)[self mainBundle];
    v40._countAndFlagsBits = 0xE000000000000000;
    v48._object = (void *)0x8000000000409FF0;
    v48._countAndFlagsBits = 0xD000000000000014;
    v49.value._countAndFlagsBits = 0;
    v49.value._object = 0;
    v24.super.Class isa = v23;
    v50._countAndFlagsBits = 0;
    v50._object = (void *)0xE000000000000000;
    uint64_t v25 = sub_3D2060(v48, v49, v24, v50, v40);
    unint64_t v42 = v26;
    uint64_t v43 = v25;

    uint64_t v27 = swift_allocObject();
    uint64_t v44 = a1;
    uint64_t v28 = v27;
    swift_weakInit();
    swift_retain();
    sub_3D6F00();
    uint64_t v29 = type metadata accessor for ClosureAction();
    swift_allocObject();
    uint64_t v30 = sub_2D152C(0, 0, 32, (uint64_t)v8, (uint64_t)sub_336AD8, v28);
    swift_release_n();
    v46[3] = v29;
    v46[4] = sub_335608((unint64_t *)&qword_4AB9B8, (void (*)(uint64_t))type metadata accessor for ClosureAction);
    v46[0] = v30;
    unint64_t v31 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    unint64_t v33 = v32;
    sub_153B4((uint64_t)v14, (uint64_t)v11, (uint64_t *)&unk_4B1F70);
    sub_153B4((uint64_t)v46, (uint64_t)v45, (uint64_t *)&unk_4BC3D0);
    uint64_t v34 = (uint64_t)v5 + v3[6];
    sub_3D3860();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v34, 1, 1, v19);
    uint64_t v35 = v3[7];
    *((unsigned char *)v5 + v35) = 2;
    uint64_t v36 = (uint64_t)v5 + v3[9];
    *(void *)(v36 + 32) = 0;
    *(_OWORD *)uint64_t v36 = 0u;
    *(_OWORD *)(v36 + 16) = 0u;
    *uint64_t v5 = v31;
    v5[1] = v33;
    unint64_t v37 = v42;
    v5[2] = v43;
    v5[3] = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_4B03C((uint64_t)v11, v34, (uint64_t *)&unk_4B1F70);
    *((unsigned char *)v5 + v35) = 1;
    *((unsigned char *)v5 + v3[8]) = 1;
    sub_4B03C((uint64_t)v45, v36, (uint64_t *)&unk_4BC3D0);
    uint64_t v38 = v44;
    sub_3382A8((uint64_t)v5, v44, type metadata accessor for ActionMenu.Item);
    uint64_t v39 = type metadata accessor for ActionMenu.Child(0);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_250FC((uint64_t)v14, (uint64_t *)&unk_4B1F70);
    sub_250FC((uint64_t)v46, (uint64_t *)&unk_4BC3D0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 0, 1, v39);
  }
  else
  {
    uint64_t v20 = type metadata accessor for ActionMenu.Child(0);
    uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    return v21(a1, 1, 1, v20);
  }
}

uint64_t sub_332ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v55 = a3;
  uint64_t v54 = type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v54);
  uint64_t v53 = (unint64_t *)((char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_3D6F40();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v48 - v14;
  uint64_t v16 = v3[9];
  uint64_t v17 = v3[10];
  __swift_project_boxed_opaque_existential_1(v3 + 6, v16);
  if ((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 520))(a1, a2, v16, v17))
  {
    uint64_t v51 = a1;
    Swift::String v52 = v12;
    id v18 = [self currentTraitCollection];
    char v19 = sub_3D85B0();

    uint64_t v21 = v53;
    uint64_t v20 = (int *)v54;
    if (v19)
    {
      uint64_t v22 = sub_3D3860();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v15, 1, 1, v22);
    }
    else
    {
      sub_3D3850();
      uint64_t v22 = sub_3D3860();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v15, 0, 1, v22);
    }
    uint64_t v28 = (objc_class *)[self mainBundle];
    v59._countAndFlagsBits = 0xD00000000000001FLL;
    v47._countAndFlagsBits = 0x80000000004094C0;
    v59._object = (void *)0x8000000000408370;
    v60.value._countAndFlagsBits = 0;
    v60.value._object = 0;
    v29.super.Class isa = v28;
    v61._countAndFlagsBits = 0;
    v61._object = (void *)0xE000000000000000;
    uint64_t v30 = sub_3D2060(v59, v60, v29, v61, v47);
    unint64_t v49 = v31;
    uint64_t v50 = v30;

    uint64_t v32 = swift_allocObject();
    swift_weakInit();
    unint64_t v33 = (void *)swift_allocObject();
    uint64_t v34 = v51;
    v33[2] = v32;
    v33[3] = v34;
    v33[4] = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    sub_3D6F00();
    uint64_t v35 = type metadata accessor for ClosureAction();
    swift_allocObject();
    uint64_t v36 = sub_2D152C(0, 0, 32, (uint64_t)v9, (uint64_t)sub_336B0C, (uint64_t)v33);
    swift_release();
    swift_release();
    v57[3] = v35;
    v57[4] = sub_335608((unint64_t *)&qword_4AB9B8, (void (*)(uint64_t))type metadata accessor for ClosureAction);
    v57[0] = v36;
    unint64_t v37 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    unint64_t v39 = v38;
    uint64_t v40 = (uint64_t)v52;
    sub_153B4((uint64_t)v15, (uint64_t)v52, (uint64_t *)&unk_4B1F70);
    sub_153B4((uint64_t)v57, (uint64_t)v56, (uint64_t *)&unk_4BC3D0);
    uint64_t v41 = (uint64_t)v21 + v20[6];
    sub_3D3860();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v41, 1, 1, v22);
    uint64_t v42 = v20[7];
    *((unsigned char *)v21 + v42) = 2;
    uint64_t v43 = (uint64_t)v21 + v20[9];
    *(void *)(v43 + 32) = 0;
    *(_OWORD *)uint64_t v43 = 0u;
    *(_OWORD *)(v43 + 16) = 0u;
    unint64_t *v21 = v37;
    v21[1] = v39;
    unint64_t v44 = v49;
    v21[2] = v50;
    void v21[3] = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_4B03C(v40, v41, (uint64_t *)&unk_4B1F70);
    *((unsigned char *)v21 + v42) = 1;
    *((unsigned char *)v21 + v20[8]) = 1;
    sub_4B03C((uint64_t)v56, v43, (uint64_t *)&unk_4BC3D0);
    uint64_t v45 = v55;
    sub_3382A8((uint64_t)v21, v55, type metadata accessor for ActionMenu.Item);
    uint64_t v46 = type metadata accessor for ActionMenu.Child(0);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_250FC((uint64_t)v15, (uint64_t *)&unk_4B1F70);
    sub_250FC((uint64_t)v57, (uint64_t *)&unk_4BC3D0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 0, 1, v46);
  }
  else
  {
    uint64_t v23 = type metadata accessor for ActionMenu.Child(0);
    NSBundle v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
    uint64_t v25 = v23;
    uint64_t v26 = v55;
    return v24(v26, 1, 1, v25);
  }
}

void *sub_3334BC()
{
  swift_beginAccess();
  uint64_t result = (void *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = result[14];
    uint64_t v3 = result[15];
    __swift_project_boxed_opaque_existential_1(result + 11, v2);
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 48))(v2, v3);
    v5[3] = type metadata accessor for ModernEpisodesPresenter();
    v5[0] = v1;
    swift_retain();
    sub_335F44(v4, (uint64_t)v5, 0);
    swift_release();
    swift_release();
    sub_250FC((uint64_t)v5, (uint64_t *)&unk_4B5A40);
    return (void *)swift_release();
  }
  return result;
}

void *sub_33359C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = (void *)swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = result[14];
    uint64_t v8 = result[15];
    __swift_project_boxed_opaque_existential_1(result + 11, v7);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 40))(a2, a3, v7, v8);
    v10[3] = type metadata accessor for ModernEpisodesPresenter();
    v10[0] = v6;
    swift_retain();
    sub_335F44(v9, (uint64_t)v10, 0);
    swift_release();
    swift_release();
    sub_250FC((uint64_t)v10, (uint64_t *)&unk_4B5A40);
    return (void *)swift_release();
  }
  return result;
}

uint64_t sub_333698@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v50 = type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v50);
  uint64_t v5 = (unint64_t *)((char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_3D6F40();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v45 - v13;
  id v15 = [self currentTraitCollection];
  char v16 = sub_3D85B0();

  uint64_t v51 = v11;
  uint64_t v52 = a2;
  if (v16)
  {
    EpisodeSortType.imageForSort(with:)((uint64_t)v14);
  }
  else
  {
    uint64_t v17 = sub_3D3860();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 1, 1, v17);
  }
  uint64_t v18 = sub_3D3F60();
  uint64_t v20 = v19;
  if (v18 == sub_3D3F60() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
    int v22 = 0;
  }
  else
  {
    char v23 = sub_3D8FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v22 = 0;
    if ((v23 & 1) == 0) {
      int v22 = sub_3D3F20() ^ 1;
    }
  }
  int v49 = v22;
  uint64_t v24 = EpisodeSortType.displayTitle.getter(a1);
  unint64_t v47 = v25;
  uint64_t v48 = v24;
  uint64_t v26 = swift_allocObject();
  swift_weakInit();
  uint64_t v27 = swift_allocObject();
  *(void *)(v27 + 16) = v26;
  *(unsigned char *)(v27 + 24) = a1;
  swift_retain();
  sub_3D6F00();
  uint64_t v28 = type metadata accessor for ClosureAction();
  swift_allocObject();
  uint64_t v29 = sub_2D152C(0, 0, 32, (uint64_t)v8, (uint64_t)sub_336CB8, v27);
  swift_release();
  swift_release();
  v54[3] = v28;
  v54[4] = sub_335608((unint64_t *)&qword_4AB9B8, (void (*)(uint64_t))type metadata accessor for ClosureAction);
  v54[0] = v29;
  unint64_t v30 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  unint64_t v32 = v31;
  uint64_t v33 = (uint64_t)v51;
  sub_153B4((uint64_t)v14, (uint64_t)v51, (uint64_t *)&unk_4B1F70);
  sub_153B4((uint64_t)v54, (uint64_t)v53, (uint64_t *)&unk_4BC3D0);
  uint64_t v34 = (int *)v50;
  uint64_t v35 = (uint64_t)v5 + *(int *)(v50 + 24);
  uint64_t v36 = sub_3D3860();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v35, 1, 1, v36);
  uint64_t v37 = v34[7];
  *((unsigned char *)v5 + v37) = 2;
  uint64_t v38 = v34[9];
  uint64_t v46 = v14;
  uint64_t v39 = (uint64_t)v5 + v38;
  *(void *)(v39 + 32) = 0;
  *(_OWORD *)uint64_t v39 = 0u;
  *(_OWORD *)(v39 + 16) = 0u;
  *uint64_t v5 = v30;
  v5[1] = v32;
  unint64_t v40 = v47;
  v5[2] = v48;
  v5[3] = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_4B03C(v33, v35, (uint64_t *)&unk_4B1F70);
  *((unsigned char *)v5 + v37) = 2;
  *((unsigned char *)v5 + v34[8]) = v49 & 1;
  sub_4B03C((uint64_t)v53, v39, (uint64_t *)&unk_4BC3D0);
  uint64_t v41 = (uint64_t)v5;
  uint64_t v42 = v52;
  sub_3382A8(v41, v52, type metadata accessor for ActionMenu.Item);
  uint64_t v43 = type metadata accessor for ActionMenu.Child(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_250FC((uint64_t)v46, (uint64_t *)&unk_4B1F70);
  sub_250FC((uint64_t)v54, (uint64_t *)&unk_4BC3D0);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v43 - 8) + 56))(v42, 0, 1, v43);
}

void *sub_333B9C()
{
  sub_2360C8(v0 + 168, (uint64_t)v16);
  uint64_t v1 = sub_3D3EC0();
  if ((sub_16378(v1, (uint64_t)&off_474780) & 1) == 0 && (sub_16378(v1, (uint64_t)&off_4747A8) & 1) == 0)
  {
    swift_beginAccess();
    int v3 = sub_3D4750();
    swift_endAccess();
    int64_t v4 = *(void *)(v1 + 16);
    if (!v4)
    {
LABEL_17:
      swift_bridgeObjectRelease();
      swift_retain();
      uint64_t v2 = sub_33619C((uint64_t)_swiftEmptyArrayStorage, v0, v3);
      swift_bridgeObjectRelease();
      swift_release();
      return v2;
    }
    sub_1FC2EC(0, v4, 0);
    uint64_t v5 = 0;
    while (1)
    {
      char v6 = *(unsigned char *)(v1 + v5 + 32);
      uint64_t v7 = sub_3D3F60();
      uint64_t v9 = v8;
      if (v7 == sub_3D3F60() && v9 == v10)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v12 = sub_3D8FE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v12 & 1) == 0) {
          goto LABEL_14;
        }
      }
      char v6 = sub_3D3F30();
LABEL_14:
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      unint64_t v13 = _swiftEmptyArrayStorage[3];
      if (v14 >= v13 >> 1) {
        sub_1FC2EC(v13 > 1, v14 + 1, 1);
      }
      ++v5;
      _swiftEmptyArrayStorage[2] = v14 + 1;
      *((unsigned char *)&_swiftEmptyArrayStorage[4] + v14) = v6;
      if (v4 == v5) {
        goto LABEL_17;
      }
    }
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *sub_333DB0()
{
  uint64_t v1 = v0;
  uint64_t v2 = (int *)type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v2);
  int64_t v4 = (unint64_t *)((char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = sub_3D6F40();
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v108 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v121 = (unint64_t)&v108 - v12;
  __chkstk_darwin(v13);
  id v15 = (char *)&v108 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v108 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v108 - v20;
  sub_2360C8(v0 + 168, (uint64_t)v136);
  if ((sub_3D3EF0() & 1) == 0) {
    return _swiftEmptyArrayStorage;
  }
  swift_beginAccess();
  uint64_t v22 = sub_3D4710();
  uint64_t v116 = v15;
  uint64_t v23 = v22;
  uint64_t v126 = v22;
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4A97D0);
  uint64_t v131 = type metadata accessor for ActionMenu.Child(0);
  uint64_t v24 = *(void *)(v131 - 8);
  uint64_t v128 = *(void *)(v24 + 72);
  uint64_t v25 = *(unsigned __int8 *)(v24 + 80);
  uint64_t v117 = v10;
  uint64_t v26 = (v25 + 32) & ~v25;
  uint64_t v27 = swift_allocObject();
  uint64_t v114 = v27;
  *(_OWORD *)(v27 + 16) = xmmword_3E2600;
  uint64_t v122 = v27 + v26;
  id v127 = self;
  uint64_t v28 = (objc_class *)[v127 mainBundle];
  v104._countAndFlagsBits = 0xE000000000000000;
  v137._countAndFlagsBits = 0x6B6565572031;
  v137._object = (void *)0xE600000000000000;
  v141.value._countAndFlagsBits = 0;
  v141.value._object = 0;
  v29.super.Class isa = v28;
  v145._countAndFlagsBits = 0;
  v145._object = (void *)0xE000000000000000;
  Swift::String v123 = (uint64_t (*)(void))sub_3D2060(v137, v141, v29, v145, v104);
  uint64_t v125 = v1;
  uint64_t v112 = v30;

  uint64_t v31 = sub_3D3860();
  uint64_t v32 = *(void *)(v31 - 8);
  id v130 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
  uint64_t v129 = v32 + 56;
  uint64_t v110 = v21;
  uint64_t v118 = v31;
  v130(v21, 1, 1, v31);
  BOOL v111 = v23 != 0;
  uint64_t v33 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  Swift::String v120 = v7;
  sub_3D6F00();
  uint64_t v34 = type metadata accessor for ClosureAction();
  swift_allocObject();
  uint64_t v35 = sub_2D152C(0, 0, 32, (uint64_t)v7, (uint64_t)sub_336B18, v33);
  swift_release_n();
  uint64_t v134 = v34;
  uint64_t v124 = sub_335608((unint64_t *)&qword_4AB9B8, (void (*)(uint64_t))type metadata accessor for ClosureAction);
  uint64_t v135 = v124;
  v133[0] = v35;
  unint64_t v36 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  unint64_t v38 = v37;
  sub_153B4((uint64_t)v21, (uint64_t)v18, (uint64_t *)&unk_4B1F70);
  sub_153B4((uint64_t)v133, (uint64_t)v132, (uint64_t *)&unk_4BC3D0);
  uint64_t v39 = v2[6];
  uint64_t v40 = (uint64_t)v18;
  uint64_t v119 = v18;
  uint64_t v41 = (uint64_t)v4 + v39;
  v130((char *)v4 + v39, 1, 1, v31);
  uint64_t v42 = v2[7];
  *((unsigned char *)v4 + v42) = 2;
  uint64_t v43 = (uint64_t)v4 + v2[9];
  *(void *)(v43 + 32) = 0;
  *(_OWORD *)uint64_t v43 = 0u;
  *(_OWORD *)(v43 + 16) = 0u;
  *int64_t v4 = v36;
  v4[1] = v38;
  uint64_t v44 = v112;
  v4[2] = (unint64_t)v123;
  v4[3] = v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_4B03C(v40, v41, (uint64_t *)&unk_4B1F70);
  *((unsigned char *)v4 + v42) = 2;
  *((unsigned char *)v4 + v2[8]) = v111;
  sub_4B03C((uint64_t)v132, v43, (uint64_t *)&unk_4BC3D0);
  Swift::String v123 = type metadata accessor for ActionMenu.Item;
  uint64_t v45 = v122;
  sub_3382A8((uint64_t)v4, v122, type metadata accessor for ActionMenu.Item);
  uint64_t v46 = v45;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_250FC((uint64_t)v110, (uint64_t *)&unk_4B1F70);
  sub_250FC((uint64_t)v133, (uint64_t *)&unk_4BC3D0);
  unint64_t v47 = (objc_class *)[v127 mainBundle];
  v105._countAndFlagsBits = 0xE000000000000000;
  v138._countAndFlagsBits = 0x736B6565572032;
  v138._object = (void *)0xE700000000000000;
  v142.value._countAndFlagsBits = 0;
  v142.value._object = 0;
  v48.super.Class isa = v47;
  v146._countAndFlagsBits = 0;
  v146._object = (void *)0xE000000000000000;
  uint64_t v110 = (char *)sub_3D2060(v138, v142, v48, v146, v105);
  unint64_t v109 = v49;

  uint64_t v50 = (uint64_t)v116;
  uint64_t v51 = v118;
  uint64_t v52 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v130;
  uint64_t v53 = v2;
  v130(v116, 1, 1, v118);
  BOOL v111 = v126 != 1;
  uint64_t v112 = v46 + v128;
  uint64_t v54 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v55 = (uint64_t)v120;
  sub_3D6F00();
  uint64_t v113 = v34;
  swift_allocObject();
  uint64_t v56 = sub_2D152C(0, 0, 32, v55, (uint64_t)sub_336B38, v54);
  swift_release_n();
  uint64_t v134 = v34;
  uint64_t v135 = v124;
  v133[0] = v56;
  unint64_t v57 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  unint64_t v59 = v58;
  uint64_t v60 = (uint64_t)v119;
  sub_153B4(v50, (uint64_t)v119, (uint64_t *)&unk_4B1F70);
  sub_153B4((uint64_t)v133, (uint64_t)v132, (uint64_t *)&unk_4BC3D0);
  uint64_t v61 = (uint64_t)v4 + v53[6];
  v52(v61, 1, 1, v51);
  uint64_t v62 = v53[7];
  *((unsigned char *)v4 + v62) = 2;
  uint64_t v63 = v53[9];
  uint64_t v115 = v53;
  uint64_t v64 = (uint64_t)v4 + v63;
  *(void *)(v64 + 32) = 0;
  *(_OWORD *)uint64_t v64 = 0u;
  *(_OWORD *)(v64 + 16) = 0u;
  *int64_t v4 = v57;
  v4[1] = v59;
  unint64_t v65 = v109;
  v4[2] = (unint64_t)v110;
  v4[3] = v65;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_4B03C(v60, v61, (uint64_t *)&unk_4B1F70);
  *((unsigned char *)v4 + v62) = 2;
  *((unsigned char *)v4 + v53[8]) = v111;
  sub_4B03C((uint64_t)v132, v64, (uint64_t *)&unk_4BC3D0);
  sub_3382A8((uint64_t)v4, v112, v123);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_250FC((uint64_t)v116, (uint64_t *)&unk_4B1F70);
  sub_250FC((uint64_t)v133, (uint64_t *)&unk_4BC3D0);
  unint64_t v66 = (objc_class *)[v127 mainBundle];
  v106._countAndFlagsBits = 0xE000000000000000;
  v139._countAndFlagsBits = 0x68746E6F4D2031;
  v139._object = (void *)0xE700000000000000;
  v143.value._countAndFlagsBits = 0;
  v143.value._object = 0;
  v67.super.Class isa = v66;
  v147._countAndFlagsBits = 0;
  v147._object = (void *)0xE000000000000000;
  uint64_t v110 = (char *)sub_3D2060(v139, v143, v67, v147, v106);
  unint64_t v109 = v68;

  uint64_t v69 = v121;
  uint64_t v70 = v118;
  uint64_t v71 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v130;
  v130((char *)v121, 1, 1, v118);
  BOOL v111 = v126 != 2;
  uint64_t v116 = (char *)(2 * v128);
  uint64_t v112 = v122 + 2 * v128;
  uint64_t v72 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v73 = (uint64_t)v120;
  sub_3D6F00();
  uint64_t v74 = v113;
  swift_allocObject();
  uint64_t v75 = sub_2D152C(0, 0, 32, v73, (uint64_t)sub_336B58, v72);
  swift_release_n();
  uint64_t v134 = v74;
  uint64_t v135 = v124;
  v133[0] = v75;
  unint64_t v76 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  unint64_t v78 = v77;
  uint64_t v79 = (uint64_t)v119;
  sub_153B4(v69, (uint64_t)v119, (uint64_t *)&unk_4B1F70);
  sub_153B4((uint64_t)v133, (uint64_t)v132, (uint64_t *)&unk_4BC3D0);
  uint64_t v80 = v115;
  uint64_t v81 = (uint64_t)v4 + v115[6];
  v71(v81, 1, 1, v70);
  uint64_t v82 = v80[7];
  *((unsigned char *)v4 + v82) = 2;
  uint64_t v83 = (uint64_t)v4 + v80[9];
  *(void *)(v83 + 32) = 0;
  *(_OWORD *)uint64_t v83 = 0u;
  *(_OWORD *)(v83 + 16) = 0u;
  *int64_t v4 = v76;
  v4[1] = v78;
  unint64_t v84 = v109;
  v4[2] = (unint64_t)v110;
  v4[3] = v84;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_4B03C(v79, v81, (uint64_t *)&unk_4B1F70);
  *((unsigned char *)v4 + v82) = 2;
  *((unsigned char *)v4 + v80[8]) = v111;
  sub_4B03C((uint64_t)v132, v83, (uint64_t *)&unk_4BC3D0);
  sub_3382A8((uint64_t)v4, v112, v123);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_250FC(v121, (uint64_t *)&unk_4B1F70);
  sub_250FC((uint64_t)v133, (uint64_t *)&unk_4BC3D0);
  uint64_t v85 = (objc_class *)[v127 mainBundle];
  v107._countAndFlagsBits = 0xE000000000000000;
  v140._countAndFlagsBits = 7105601;
  v140._object = (void *)0xE300000000000000;
  v144.value._countAndFlagsBits = 0;
  v144.value._object = 0;
  v86.super.Class isa = v85;
  v148._countAndFlagsBits = 0;
  v148._object = (void *)0xE000000000000000;
  unint64_t v121 = sub_3D2060(v140, v144, v86, v148, v107);
  uint64_t v112 = v87;

  uint64_t v88 = (uint64_t)v117;
  uint64_t v89 = v118;
  uint64_t v90 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v130;
  v130(v117, 1, 1, v118);
  LODWORD(v127) = v126 != 3;
  v128 += (uint64_t)&v116[v122];
  uint64_t v91 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  uint64_t v92 = (uint64_t)v120;
  sub_3D6F00();
  swift_allocObject();
  uint64_t v93 = sub_2D152C(0, 0, 32, v92, (uint64_t)sub_336B78, v91);
  swift_release_n();
  uint64_t v134 = v74;
  uint64_t v135 = v124;
  v133[0] = v93;
  unint64_t v94 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  unint64_t v96 = v95;
  uint64_t v97 = (uint64_t)v119;
  sub_153B4(v88, (uint64_t)v119, (uint64_t *)&unk_4B1F70);
  sub_153B4((uint64_t)v133, (uint64_t)v132, (uint64_t *)&unk_4BC3D0);
  Swift::String v98 = v115;
  uint64_t v99 = (uint64_t)v4 + v115[6];
  v90(v99, 1, 1, v89);
  uint64_t v100 = v98[7];
  *((unsigned char *)v4 + v100) = 2;
  uint64_t v101 = (uint64_t)v4 + v98[9];
  *(void *)(v101 + 32) = 0;
  *(_OWORD *)uint64_t v101 = 0u;
  *(_OWORD *)(v101 + 16) = 0u;
  *int64_t v4 = v94;
  v4[1] = v96;
  uint64_t v102 = v112;
  v4[2] = v121;
  v4[3] = v102;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_4B03C(v97, v99, (uint64_t *)&unk_4B1F70);
  *((unsigned char *)v4 + v100) = 2;
  *((unsigned char *)v4 + v98[8]) = (_BYTE)v127;
  sub_4B03C((uint64_t)v132, v101, (uint64_t *)&unk_4BC3D0);
  sub_3382A8((uint64_t)v4, v128, v123);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_250FC((uint64_t)v117, (uint64_t *)&unk_4B1F70);
  sub_250FC((uint64_t)v133, (uint64_t *)&unk_4BC3D0);
  return (void *)v114;
}

uint64_t sub_334C30()
{
  uint64_t v0 = sub_3D4780();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v11 - v5;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_episodeListSettings;
    swift_beginAccess();
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 16);
    v9(v6, v8, v0);
    sub_3D4720();
    v9(v3, v8, v0);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v1 + 24))(v8, v6, v0);
    swift_endAccess();
    sub_3268BC();
    uint64_t v10 = *(void (**)(char *, uint64_t))(v1 + 8);
    v10(v6, v0);
    v10(v3, v0);
    return swift_release();
  }
  return result;
}

void *sub_334E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = ActionMenuBuilder.buildMenuElements(for:asPartOf:)(v5, v4);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_334E78()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_2360C8(result + 168, (uint64_t)v2);
    sub_3383E0((uint64_t)v2, (void (*)(void, void, void, void, void, void, void, void, char))sub_B5744);
    char v1 = sub_3D3E70();
    sub_3383E0((uint64_t)v2, (void (*)(void, void, void, void, void, void, void, void, char))sub_B2620);
    if (v1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      return sub_3D59F0();
    }
    else
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_334F74@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_retain();
  uint64_t v6 = sub_33804C(v5, a2);
  swift_release();
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(void *)(result + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_frozenLockupShelves) = v6;
    swift_bridgeObjectRetain();
    swift_release();
    uint64_t result = swift_bridgeObjectRelease();
  }
  *a3 = v6;
  return result;
}

uint64_t sub_335030@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1BE0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ModernShelf();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v38 = (uint64_t)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v37 - v12);
  __chkstk_darwin(v14);
  uint64_t v41 = (uint64_t)&v37 - v15;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
LABEL_15:
    sub_250FC((uint64_t)v7, &qword_4B1BE0);
    return sub_338310((uint64_t)a1, a2, (uint64_t (*)(void))type metadata accessor for ModernShelf);
  }
  uint64_t v39 = v2;
  uint64_t v40 = v8;
  uint64_t v17 = *(void *)(Strong + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter_frozenLockupShelves);
  swift_bridgeObjectRetain();
  swift_release();
  uint64_t v18 = *(void *)(v17 + 16);
  if (v18)
  {
    uint64_t v37 = a2;
    uint64_t v19 = v17 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v20 = *(void *)(v9 + 72);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_338310(v19, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ModernShelf);
      BOOL v21 = *v13 == *a1 && v13[1] == a1[1];
      if (v21 || (sub_3D8FE0() & 1) != 0) {
        break;
      }
      sub_338378((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ModernShelf);
      v19 += v20;
      if (!--v18)
      {
        swift_bridgeObjectRelease();
        uint64_t v22 = 1;
        a2 = v37;
        goto LABEL_14;
      }
    }
    swift_bridgeObjectRelease();
    sub_3382A8((uint64_t)v13, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ModernShelf);
    uint64_t v22 = 0;
    a2 = v37;
  }
  else
  {
    uint64_t v22 = 1;
  }
LABEL_14:
  uint64_t v23 = v40;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, v22, 1, v40);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v23) == 1) {
    goto LABEL_15;
  }
  uint64_t v25 = v41;
  sub_3382A8((uint64_t)v7, v41, (uint64_t (*)(void))type metadata accessor for ModernShelf);
  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_2BEC38(v26);
  swift_bridgeObjectRelease();
  if (!v27)
  {
    sub_338378(v25, (uint64_t (*)(void))type metadata accessor for ModernShelf);
    return sub_338310((uint64_t)a1, a2, (uint64_t (*)(void))type metadata accessor for ModernShelf);
  }
  uint64_t v28 = sub_2BEC38(*(void *)((char *)a1 + *(int *)(v23 + 28)));
  if (!v28)
  {
    sub_338378(v25, (uint64_t (*)(void))type metadata accessor for ModernShelf);
    swift_bridgeObjectRelease();
    return sub_338310((uint64_t)a1, a2, (uint64_t (*)(void))type metadata accessor for ModernShelf);
  }
  unint64_t v29 = (unint64_t)v28;
  uint64_t v30 = v38;
  sub_338310((uint64_t)a1, v38, (uint64_t (*)(void))type metadata accessor for ModernShelf);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_3D59E0();
    swift_release();
    swift_release();
    swift_release();
    if (v42)
    {
      uint64_t v31 = (void *)sub_116EC((uint64_t)_swiftEmptyArrayStorage);
      uint64_t v32 = sub_326638(v31, v29);
      uint64_t v42 = sub_3264C0((unint64_t)v27);
      swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName(&qword_4AAF50);
      sub_3D6E4((unint64_t *)&qword_4ACA08, &qword_4AAF50);
      uint64_t v33 = sub_3D7F80();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v34 = sub_33606C(v33, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      unint64_t v29 = (unint64_t)v34;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    uint64_t v23 = v40;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v35 = sub_1B5618(v29);
  swift_bridgeObjectRelease();
  sub_338378(v41, (uint64_t (*)(void))type metadata accessor for ModernShelf);
  uint64_t v36 = *(int *)(v23 + 28);
  swift_bridgeObjectRelease();
  *(void *)(v30 + v36) = v35;
  return sub_3382A8(v30, a2, (uint64_t (*)(void))type metadata accessor for ModernShelf);
}

uint64_t sub_335608(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_335650@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BD388);
  uint64_t result = sub_3D5230();
  *a1 = result;
  return result;
}

uint64_t sub_335688()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_3356C0(uint64_t *a1)
{
  return sub_32930C(a1);
}

uint64_t sub_3356C8()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_3356D8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_335878(*a1, *(void *)(v2 + 16));
  *a2 = result;
  return result;
}

uint64_t sub_33571C()
{
  return objectdestroy_5Tm_1((void (*)(void))&_swift_bridgeObjectRelease, (void (*)(void))&_swift_release);
}

void *sub_335748(uint64_t a1)
{
  return sub_334E1C(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_335754()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_335764(uint64_t a1)
{
  return sub_48424(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t block_copy_helper_29(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_29()
{
  return swift_release();
}

uint64_t sub_335784@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_3D59E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_335804()
{
  return sub_3D59F0();
}

uint64_t sub_335878(uint64_t a1, uint64_t a2)
{
  uint64_t v77 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AE108);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (void *)((char *)v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v74 = type metadata accessor for BubbleTip();
  uint64_t v6 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v73 = (uint64_t)v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v70 = (uint64_t)v53 - v9;
  uint64_t v10 = sub_3D3410();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v53 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v61 = (char *)v53 - v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BE7D0);
  uint64_t result = sub_3D8DC0();
  uint64_t v17 = result;
  int64_t v18 = 0;
  uint64_t v63 = a1;
  uint64_t v19 = *(void *)(a1 + 64);
  uint64_t v56 = a1 + 64;
  uint64_t v20 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v21 = -1;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  unint64_t v22 = v21 & v19;
  int64_t v57 = (unint64_t)(v20 + 63) >> 6;
  uint64_t v59 = v11 + 16;
  uint64_t v62 = v11;
  uint64_t v71 = v6;
  uint64_t v72 = (void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v23 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v58 = result + 64;
  uint64_t v60 = result;
  uint64_t v55 = v10;
  uint64_t v54 = v13;
  v53[2] = v11 + 32;
  if (!v22) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v65 = (v22 - 1) & v22;
  int64_t v66 = v18;
  for (unint64_t i = __clz(__rbit64(v22)) | (v18 << 6); ; unint64_t i = __clz(__rbit64(v26)) + (v27 << 6))
  {
    uint64_t v30 = v62;
    uint64_t v29 = v63;
    uint64_t v31 = *(void *)(v63 + 48);
    unint64_t v68 = *(void *)(v62 + 72) * i;
    unint64_t v32 = i;
    uint64_t v33 = v61;
    (*(void (**)(char *, unint64_t, uint64_t))(v62 + 16))(v61, v31 + v68, v10);
    uint64_t v34 = *(void *)(v29 + 56);
    unint64_t v69 = v32;
    uint64_t v35 = *(void *)(v34 + 8 * v32);
    NSBundle v67 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
    v67(v13, v33, v10);
    uint64_t v36 = *(void *)(v35 + 16);
    if (v36)
    {
      uint64_t v37 = v35 + 32;
      uint64_t v64 = v35;
      swift_bridgeObjectRetain();
      uint64_t v38 = _swiftEmptyArrayStorage;
      do
      {
        sub_18168(v37, (uint64_t)v75);
        uint64_t v39 = v76;
        uint64_t v40 = __swift_project_boxed_opaque_existential_1(v75, v76);
        __n128 v41 = __chkstk_darwin(v40);
        uint64_t v43 = (char *)v53 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, __n128))(v44 + 16))(v43, v41);
        BubbleTip.init<A>(from:style:)((uint64_t)v43, v39, v5);
        uint64_t v45 = v74;
        (*v72)(v5, 0, 1, v74);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v75);
        if ((*v23)(v5, 1, v45) == 1)
        {
          sub_250FC((uint64_t)v5, &qword_4AE108);
        }
        else
        {
          uint64_t v46 = v70;
          sub_3382A8((uint64_t)v5, v70, (uint64_t (*)(void))type metadata accessor for BubbleTip);
          sub_3382A8(v46, v73, (uint64_t (*)(void))type metadata accessor for BubbleTip);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v38 = (void *)sub_1401C(0, v38[2] + 1, 1, (unint64_t)v38);
          }
          unint64_t v48 = v38[2];
          unint64_t v47 = v38[3];
          if (v48 >= v47 >> 1) {
            uint64_t v38 = (void *)sub_1401C(v47 > 1, v48 + 1, 1, (unint64_t)v38);
          }
          v38[2] = v48 + 1;
          sub_3382A8(v73, (uint64_t)v38+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(void *)(v71 + 72) * v48, (uint64_t (*)(void))type metadata accessor for BubbleTip);
        }
        v37 += 40;
        --v36;
      }
      while (v36);
      swift_bridgeObjectRelease();
      uint64_t v10 = v55;
      uint64_t v13 = v54;
    }
    else
    {
      uint64_t v38 = _swiftEmptyArrayStorage;
    }
    unint64_t v49 = v69;
    *(void *)(v58 + ((v69 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v69;
    uint64_t v17 = v60;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v67)(*(void *)(v60 + 48) + v68, v13, v10);
    *(void *)(*(void *)(v17 + 56) + 8 * v49) = v38;
    uint64_t v50 = *(void *)(v17 + 16);
    BOOL v51 = __OFADD__(v50, 1);
    uint64_t v52 = v50 + 1;
    if (v51)
    {
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    *(void *)(v17 + 16) = v52;
    unint64_t v22 = v65;
    int64_t v18 = v66;
    if (v65) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v25 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      goto LABEL_36;
    }
    if (v25 >= v57) {
      return v17;
    }
    unint64_t v26 = *(void *)(v56 + 8 * v25);
    int64_t v27 = v18 + 1;
    if (!v26)
    {
      int64_t v27 = v18 + 2;
      if (v18 + 2 >= v57) {
        return v17;
      }
      unint64_t v26 = *(void *)(v56 + 8 * v27);
      if (!v26)
      {
        int64_t v27 = v18 + 3;
        if (v18 + 3 >= v57) {
          return v17;
        }
        unint64_t v26 = *(void *)(v56 + 8 * v27);
        if (!v26) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v65 = (v26 - 1) & v26;
    int64_t v66 = v27;
  }
  uint64_t v28 = v18 + 4;
  if (v18 + 4 >= v57) {
    return v17;
  }
  unint64_t v26 = *(void *)(v56 + 8 * v28);
  if (v26)
  {
    int64_t v27 = v18 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v27 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v27 >= v57) {
      return v17;
    }
    unint64_t v26 = *(void *)(v56 + 8 * v27);
    ++v28;
    if (v26) {
      goto LABEL_18;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_335F44(uint64_t a1, uint64_t a2, void *a3)
{
  v13[3] = type metadata accessor for SheetAction();
  v13[4] = sub_335608(&qword_4ABA60, (void (*)(uint64_t))type metadata accessor for SheetAction);
  v13[0] = a1;
  type metadata accessor for ActionRunnerOptions();
  swift_retain();
  swift_retain();
  sub_3D7190();
  sub_153B4(a2, (uint64_t)v10, (uint64_t *)&unk_4B5A40);
  uint64_t v11 = a3;
  id v6 = a3;
  uint64_t v7 = _s8ShelfKit19ActionRunnerOptionsC04withC6OriginyACXDAA0cG0VSgF_0((uint64_t)v10);
  sub_250FC((uint64_t)v10, &qword_4AA9B0);
  swift_release();
  sub_18168((uint64_t)v13, (uint64_t)v10);
  uint64_t v12 = v7;
  uint64_t v8 = ActionPerformer.callAsFunction()();
  sub_2A274((uint64_t)v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  return v8;
}

void *sub_33606C(uint64_t a1, uint64_t a2)
{
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    id v6 = (uint64_t *)(a1 + 40);
    do
    {
      if (*(void *)(a2 + 16))
      {
        uint64_t v7 = *(v6 - 1);
        uint64_t v8 = *v6;
        swift_bridgeObjectRetain_n();
        sub_32000(v7, v8);
        if (v9)
        {
          swift_retain();
          swift_bridgeObjectRelease_n();
          sub_3D8000();
          if (*(void *)((char *)&dword_10 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
            sub_3D8060();
          }
          sub_3D80A0();
          sub_3D8040();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }
      }
      v6 += 2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_33619C(uint64_t a1, uint64_t a2, int a3)
{
  int v25 = a3;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AFDA0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for ActionMenu.Child(0);
  __chkstk_darwin(v24);
  uint64_t v23 = (uint64_t)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13) {
    return _swiftEmptyArrayStorage;
  }
  v20[1] = v3;
  uint64_t v21 = v10;
  uint64_t v14 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  uint64_t v16 = _swiftEmptyArrayStorage;
  uint64_t v22 = a1;
  do
  {
    sub_333698(*(unsigned char *)(a1 + v15 + 32), (uint64_t)v7);
    if ((*v14)(v7, 1, v24) == 1)
    {
      sub_250FC((uint64_t)v7, &qword_4AFDA0);
    }
    else
    {
      sub_3382A8((uint64_t)v7, (uint64_t)v12, type metadata accessor for ActionMenu.Child);
      sub_3382A8((uint64_t)v12, v23, type metadata accessor for ActionMenu.Child);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v16 = (void *)sub_133B4(0, v16[2] + 1, 1, (unint64_t)v16);
      }
      unint64_t v18 = v16[2];
      unint64_t v17 = v16[3];
      if (v18 >= v17 >> 1) {
        uint64_t v16 = (void *)sub_133B4(v17 > 1, v18 + 1, 1, (unint64_t)v16);
      }
      v16[2] = v18 + 1;
      sub_3382A8(v23, (uint64_t)v16+ ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80))+ *(void *)(v21 + 72) * v18, type metadata accessor for ActionMenu.Child);
      a1 = v22;
    }
    ++v15;
  }
  while (v13 != v15);
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_336448(uint64_t a1)
{
  uint64_t result = sub_335608(&qword_4BE5E0, (void (*)(uint64_t))type metadata accessor for ModernEpisodesPresenter);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for ModernEpisodesPresenter()
{
  uint64_t result = qword_4BE640;
  if (!qword_4BE640) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3364EC()
{
  return sub_335608(&qword_4BE610, (void (*)(uint64_t))type metadata accessor for ModernEpisodesPresenter);
}

uint64_t sub_33653C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = ModernEpisodesPresenter.refreshControls.getter();
  *a1 = result;
  return result;
}

uint64_t sub_336568(void *a1, void *a2)
{
  *(void *)(*a2 + OBJC_IVAR____TtC8ShelfKit23ModernEpisodesPresenter____lazy_storage___refreshControls) = *a1;
  swift_retain();

  return swift_release();
}

uint64_t sub_3365B4()
{
  return type metadata accessor for ModernEpisodesPresenter();
}

void sub_3365BC()
{
  sub_3D4780();
  if (v0 <= 0x3F)
  {
    sub_30B240();
    if (v1 <= 0x3F)
    {
      sub_4327C();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for ModernEpisodesPresenter(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ModernEpisodesPresenter);
}

uint64_t dispatch thunk of ModernEpisodesPresenter.__allocating_init(asPartOf:with:)()
{
  return (*(uint64_t (**)(void))(v0 + 264))();
}

void destroy for ModernEpisodesPresenter.Configuration(uint64_t a1)
{
}

uint64_t initializeWithCopy for ModernEpisodesPresenter.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  char v13 = *(unsigned char *)(a2 + 64);
  sub_B5744(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v13);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v13;
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  return a1;
}

uint64_t assignWithCopy for ModernEpisodesPresenter.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  char v22 = *(unsigned char *)(a2 + 64);
  sub_B5744(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v22);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  char v20 = *(unsigned char *)(a1 + 64);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = v22;
  sub_B2620(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  return a1;
}

__n128 __swift_memcpy66_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for ModernEpisodesPresenter.Configuration(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a2 + 64);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  char v13 = *(unsigned char *)(a1 + 64);
  long long v14 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v14;
  long long v15 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v15;
  *(unsigned char *)(a1 + 64) = v4;
  sub_B2620(v5, v6, v7, v8, v9, v10, v11, v12, v13);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  return a1;
}

uint64_t getEnumTagSinglePayload for ModernEpisodesPresenter.Configuration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 66)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 65);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ModernEpisodesPresenter.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 66) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 66) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 65) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ModernEpisodesPresenter.Configuration()
{
  return &type metadata for ModernEpisodesPresenter.Configuration;
}

uint64_t sub_336A78()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_336AB0()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void *sub_336AD8()
{
  return sub_3334BC();
}

uint64_t sub_336AE0()
{
  return objectdestroy_5Tm_1((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

void *sub_336B0C()
{
  return sub_33359C(v0[2], v0[3], v0[4]);
}

uint64_t sub_336B18()
{
  return sub_334C30();
}

uint64_t sub_336B38()
{
  return sub_334C30();
}

uint64_t sub_336B58()
{
  return sub_334C30();
}

uint64_t sub_336B78()
{
  return sub_334C30();
}

uint64_t sub_336B98()
{
  return objectdestroy_5Tm_1((void (*)(void))&_swift_release, (void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t objectdestroy_5Tm_1(void (*a1)(void), void (*a2)(void))
{
  a1(*(void *)(v2 + 16));
  a2(*(void *)(v2 + 32));

  return _swift_deallocObject(v2, 40, 7);
}

uint64_t sub_336C1C()
{
  return sub_3325CC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_336C28()
{
  swift_release();

  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_336C60()
{
  return sub_330CDC();
}

uint64_t sub_336C6C()
{
  return sub_331B98();
}

uint64_t sub_336C78()
{
  return sub_331D8C();
}

uint64_t sub_336C98()
{
  return sub_331D8C();
}

uint64_t sub_336CB8()
{
  return sub_331D8C();
}

uint64_t sub_336CC4()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4B1BE0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 24) & ~v2;
  unint64_t v4 = (*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  int v5 = (int *)type metadata accessor for ModernShelf();
  uint64_t v6 = *((void *)v5 - 1);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + v7 + 65) & ~v7;
  uint64_t v137 = *(void *)(v6 + 64);
  swift_release();
  uint64_t v9 = v0 + v3;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(v6 + 48))(v9, 1, v5))
  {
    uint64_t v135 = (v4 + v7 + 65) & ~v7;
    swift_bridgeObjectRelease();
    uint64_t v10 = v9 + v5[5];
    uint64_t v11 = (int *)type metadata accessor for Header(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v11 - 1) + 48))(v10, 1, v11))
    {
      uint64_t v129 = v2;
      uint64_t v133 = v7;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v12 = v10 + v11[9];
      uint64_t v13 = type metadata accessor for ActionMenu(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v12, 1, v13))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v14 = v12 + *(int *)(v13 + 28);
        uint64_t v15 = sub_3D3860();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15))
        {
          uint64_t v127 = v13;
          swift_bridgeObjectRelease();
          int v16 = *(unsigned __int8 *)(v14 + 32);
          if (v16 != 255) {
            sub_49E54(*(void *)(v14 + 16), *(void *)(v14 + 24), v16);
          }
          int v17 = *(unsigned __int8 *)(v14 + 64);
          if (v17 != 255) {
            sub_4C6F0(*(id *)(v14 + 56), v17);
          }
          int v18 = *(unsigned __int8 *)(v14 + 80);
          if (v18 != 255) {
            sub_4C6F0(*(id *)(v14 + 72), v18);
          }
          int v19 = *(unsigned __int8 *)(v14 + 96);
          if (v19 != 255) {
            sub_4C6F0(*(id *)(v14 + 88), v19);
          }
          int v20 = *(unsigned __int8 *)(v14 + 112);
          if (v20 != 255) {
            sub_4C6F0(*(id *)(v14 + 104), v20);
          }
          int v21 = *(unsigned __int8 *)(v14 + 128);
          if (v21 != 255) {
            sub_4C6F0(*(id *)(v14 + 120), v21);
          }
          uint64_t v22 = v14 + *(int *)(v15 + 44);
          uint64_t v23 = sub_3D3750();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v13 = v127;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v24 = v10 + v11[10];
      uint64_t v25 = type metadata accessor for Header.PrimaryAction(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 48))(v24, 1, v25))
      {
        int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        switch(EnumCaseMultiPayload)
        {
          case 2:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v116 = v24 + *(int *)(v13 + 28);
            uint64_t v117 = sub_3D3860();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 48))(v116, 1, v117))
            {
              swift_bridgeObjectRelease();
              int v118 = *(unsigned __int8 *)(v116 + 32);
              if (v118 != 255) {
                sub_49E54(*(void *)(v116 + 16), *(void *)(v116 + 24), v118);
              }
              int v119 = *(unsigned __int8 *)(v116 + 64);
              if (v119 != 255) {
                sub_4C6F0(*(id *)(v116 + 56), v119);
              }
              int v120 = *(unsigned __int8 *)(v116 + 80);
              if (v120 != 255) {
                sub_4C6F0(*(id *)(v116 + 72), v120);
              }
              int v121 = *(unsigned __int8 *)(v116 + 96);
              if (v121 != 255) {
                sub_4C6F0(*(id *)(v116 + 88), v121);
              }
              int v122 = *(unsigned __int8 *)(v116 + 112);
              if (v122 != 255) {
                sub_4C6F0(*(id *)(v116 + 104), v122);
              }
              int v123 = *(unsigned __int8 *)(v116 + 128);
              if (v123 != 255) {
                sub_4C6F0(*(id *)(v116 + 120), v123);
              }
              uint64_t v124 = v116 + *(int *)(v117 + 44);
              uint64_t v125 = sub_3D3750();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v125 - 8) + 8))(v124, v125);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            break;
          case 1:
            swift_release();
            break;
          case 0:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v93 = (int *)type metadata accessor for ActionButton();
            uint64_t v94 = v24 + v93[6];
            uint64_t v95 = sub_3D3860();
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v95 - 8) + 48))(v94, 1, v95))
            {
              swift_bridgeObjectRelease();
              int v96 = *(unsigned __int8 *)(v94 + 32);
              if (v96 != 255) {
                sub_49E54(*(void *)(v94 + 16), *(void *)(v94 + 24), v96);
              }
              int v97 = *(unsigned __int8 *)(v94 + 64);
              if (v97 != 255) {
                sub_4C6F0(*(id *)(v94 + 56), v97);
              }
              int v98 = *(unsigned __int8 *)(v94 + 80);
              if (v98 != 255) {
                sub_4C6F0(*(id *)(v94 + 72), v98);
              }
              int v99 = *(unsigned __int8 *)(v94 + 96);
              if (v99 != 255) {
                sub_4C6F0(*(id *)(v94 + 88), v99);
              }
              int v100 = *(unsigned __int8 *)(v94 + 112);
              if (v100 != 255) {
                sub_4C6F0(*(id *)(v94 + 104), v100);
              }
              int v101 = *(unsigned __int8 *)(v94 + 128);
              if (v101 != 255) {
                sub_4C6F0(*(id *)(v94 + 120), v101);
              }
              uint64_t v128 = v94 + *(int *)(v95 + 44);
              uint64_t v102 = sub_3D3750();
              (*(void (**)(uint64_t, uint64_t))(*(void *)(v102 - 8) + 8))(v128, v102);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            __swift_destroy_boxed_opaque_existential_1(v24 + v93[8]);
            uint64_t v103 = v24 + v93[9];
            uint64_t v104 = sub_3D7340();
            uint64_t v105 = *(void *)(v104 - 8);
            if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104)) {
              (*(void (**)(uint64_t, uint64_t))(v105 + 8))(v103, v104);
            }
            break;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v26 = v10 + v11[12];
      uint64_t v27 = sub_3D3860();
      uint64_t v2 = v129;
      uint64_t v7 = v133;
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48))(v26, 1, v27))
      {
        swift_bridgeObjectRelease();
        int v28 = *(unsigned __int8 *)(v26 + 32);
        if (v28 != 255) {
          sub_49E54(*(void *)(v26 + 16), *(void *)(v26 + 24), v28);
        }
        int v29 = *(unsigned __int8 *)(v26 + 64);
        if (v29 != 255) {
          sub_4C6F0(*(id *)(v26 + 56), v29);
        }
        int v30 = *(unsigned __int8 *)(v26 + 80);
        if (v30 != 255) {
          sub_4C6F0(*(id *)(v26 + 72), v30);
        }
        int v31 = *(unsigned __int8 *)(v26 + 96);
        if (v31 != 255) {
          sub_4C6F0(*(id *)(v26 + 88), v31);
        }
        int v32 = *(unsigned __int8 *)(v26 + 112);
        if (v32 != 255) {
          sub_4C6F0(*(id *)(v26 + 104), v32);
        }
        int v33 = *(unsigned __int8 *)(v26 + 128);
        if (v33 != 255) {
          sub_4C6F0(*(id *)(v26 + 120), v33);
        }
        uint64_t v34 = v26 + *(int *)(v27 + 44);
        uint64_t v35 = sub_3D3750();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v35 - 8) + 8))(v34, v35);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v36 = v9 + v5[9];
    uint64_t v37 = sub_3D2350();
    uint64_t v38 = *(void *)(v37 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37)) {
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
    }
    uint64_t v39 = v9 + v5[12];
    uint64_t v8 = v135;
    if (*(void *)(v39 + 24)) {
      __swift_destroy_boxed_opaque_existential_1(v39);
    }
    uint64_t v40 = v9 + v5[13];
    uint64_t v41 = sub_3D7340();
    uint64_t v42 = *(void *)(v41 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41)) {
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v40, v41);
    }
  }
  sub_B2620(*(void *)(v0 + v4), *(void *)(v0 + v4 + 8), *(void *)(v0 + v4 + 16), *(void *)(v0 + v4 + 24), *(void *)(v0 + v4 + 32), *(void *)(v0 + v4 + 40), *(void *)(v0 + v4 + 48), *(void *)(v0 + v4 + 56), *(unsigned char *)(v0 + v4 + 64));
  uint64_t v43 = v0 + v8;
  swift_bridgeObjectRelease();
  uint64_t v44 = v0 + v8 + v5[5];
  uint64_t v45 = (int *)type metadata accessor for Header(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, int *))(*((void *)v45 - 1) + 48))(v44, 1, v45))
  {
    uint64_t v134 = v7;
    uint64_t v136 = v8;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v46 = v44 + v45[9];
    uint64_t v47 = type metadata accessor for ActionMenu(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 48))(v46, 1, v47))
    {
      uint64_t v130 = v2;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v48 = v46 + *(int *)(v47 + 28);
      uint64_t v49 = sub_3D3860();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 48))(v48, 1, v49))
      {
        swift_bridgeObjectRelease();
        int v50 = *(unsigned __int8 *)(v48 + 32);
        if (v50 != 255) {
          sub_49E54(*(void *)(v48 + 16), *(void *)(v48 + 24), v50);
        }
        int v51 = *(unsigned __int8 *)(v48 + 64);
        if (v51 != 255) {
          sub_4C6F0(*(id *)(v48 + 56), v51);
        }
        int v52 = *(unsigned __int8 *)(v48 + 80);
        if (v52 != 255) {
          sub_4C6F0(*(id *)(v48 + 72), v52);
        }
        int v53 = *(unsigned __int8 *)(v48 + 96);
        if (v53 != 255) {
          sub_4C6F0(*(id *)(v48 + 88), v53);
        }
        int v54 = *(unsigned __int8 *)(v48 + 112);
        if (v54 != 255) {
          sub_4C6F0(*(id *)(v48 + 104), v54);
        }
        int v55 = *(unsigned __int8 *)(v48 + 128);
        if (v55 != 255) {
          sub_4C6F0(*(id *)(v48 + 120), v55);
        }
        uint64_t v56 = v48 + *(int *)(v49 + 44);
        uint64_t v57 = sub_3D3750();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v57 - 8) + 8))(v56, v57);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v2 = v130;
    }
    uint64_t v58 = v44 + v45[10];
    uint64_t v59 = type metadata accessor for Header.PrimaryAction(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48))(v58, 1, v59))
    {
      int v77 = swift_getEnumCaseMultiPayload();
      switch(v77)
      {
        case 2:
          uint64_t v132 = v2;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v106 = v58 + *(int *)(v47 + 28);
          uint64_t v107 = sub_3D3860();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 48))(v106, 1, v107))
          {
            swift_bridgeObjectRelease();
            int v108 = *(unsigned __int8 *)(v106 + 32);
            if (v108 != 255) {
              sub_49E54(*(void *)(v106 + 16), *(void *)(v106 + 24), v108);
            }
            int v109 = *(unsigned __int8 *)(v106 + 64);
            if (v109 != 255) {
              sub_4C6F0(*(id *)(v106 + 56), v109);
            }
            int v110 = *(unsigned __int8 *)(v106 + 80);
            if (v110 != 255) {
              sub_4C6F0(*(id *)(v106 + 72), v110);
            }
            int v111 = *(unsigned __int8 *)(v106 + 96);
            if (v111 != 255) {
              sub_4C6F0(*(id *)(v106 + 88), v111);
            }
            int v112 = *(unsigned __int8 *)(v106 + 112);
            if (v112 != 255) {
              sub_4C6F0(*(id *)(v106 + 104), v112);
            }
            int v113 = *(unsigned __int8 *)(v106 + 128);
            if (v113 != 255) {
              sub_4C6F0(*(id *)(v106 + 120), v113);
            }
            uint64_t v114 = v106 + *(int *)(v107 + 44);
            uint64_t v115 = sub_3D3750();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v115 - 8) + 8))(v114, v115);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          uint64_t v2 = v132;
          break;
        case 1:
          swift_release();
          break;
        case 0:
          uint64_t v131 = v2;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          unint64_t v78 = (int *)type metadata accessor for ActionButton();
          uint64_t v79 = v58 + v78[6];
          uint64_t v80 = sub_3D3860();
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 48))(v79, 1, v80))
          {
            swift_bridgeObjectRelease();
            int v81 = *(unsigned __int8 *)(v79 + 32);
            if (v81 != 255) {
              sub_49E54(*(void *)(v79 + 16), *(void *)(v79 + 24), v81);
            }
            int v82 = *(unsigned __int8 *)(v79 + 64);
            if (v82 != 255) {
              sub_4C6F0(*(id *)(v79 + 56), v82);
            }
            int v83 = *(unsigned __int8 *)(v79 + 80);
            if (v83 != 255) {
              sub_4C6F0(*(id *)(v79 + 72), v83);
            }
            int v84 = *(unsigned __int8 *)(v79 + 96);
            if (v84 != 255) {
              sub_4C6F0(*(id *)(v79 + 88), v84);
            }
            int v85 = *(unsigned __int8 *)(v79 + 112);
            if (v85 != 255) {
              sub_4C6F0(*(id *)(v79 + 104), v85);
            }
            int v86 = *(unsigned __int8 *)(v79 + 128);
            if (v86 != 255) {
              sub_4C6F0(*(id *)(v79 + 120), v86);
            }
            uint64_t v87 = v79 + *(int *)(v80 + 44);
            uint64_t v88 = sub_3D3750();
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v88 - 8) + 8))(v87, v88);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          __swift_destroy_boxed_opaque_existential_1(v58 + v78[8]);
          uint64_t v89 = v58 + v78[9];
          uint64_t v90 = sub_3D7340();
          uint64_t v91 = *(void *)(v90 - 8);
          uint64_t v2 = v131;
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v89, 1, v90)) {
            (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v89, v90);
          }
          break;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v60 = v44 + v45[12];
    uint64_t v61 = sub_3D3860();
    uint64_t v7 = v134;
    uint64_t v8 = v136;
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 48))(v60, 1, v61))
    {
      swift_bridgeObjectRelease();
      int v62 = *(unsigned __int8 *)(v60 + 32);
      if (v62 != 255) {
        sub_49E54(*(void *)(v60 + 16), *(void *)(v60 + 24), v62);
      }
      int v63 = *(unsigned __int8 *)(v60 + 64);
      if (v63 != 255) {
        sub_4C6F0(*(id *)(v60 + 56), v63);
      }
      int v64 = *(unsigned __int8 *)(v60 + 80);
      if (v64 != 255) {
        sub_4C6F0(*(id *)(v60 + 72), v64);
      }
      int v65 = *(unsigned __int8 *)(v60 + 96);
      if (v65 != 255) {
        sub_4C6F0(*(id *)(v60 + 88), v65);
      }
      int v66 = *(unsigned __int8 *)(v60 + 112);
      if (v66 != 255) {
        sub_4C6F0(*(id *)(v60 + 104), v66);
      }
      int v67 = *(unsigned __int8 *)(v60 + 128);
      if (v67 != 255) {
        sub_4C6F0(*(id *)(v60 + 120), v67);
      }
      uint64_t v68 = v60 + *(int *)(v61 + 44);
      uint64_t v69 = sub_3D3750();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v69 - 8) + 8))(v68, v69);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v70 = v43 + v5[9];
  uint64_t v71 = sub_3D2350();
  uint64_t v72 = *(void *)(v71 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71)) {
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v70, v71);
  }
  uint64_t v73 = v43 + v5[12];
  if (*(void *)(v73 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v73);
  }
  uint64_t v74 = v43 + v5[13];
  uint64_t v75 = sub_3D7340();
  uint64_t v76 = *(void *)(v75 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75)) {
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v74, v75);
  }

  return _swift_deallocObject(v0, ((v137 + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8, v2 | v7 | 7);
}

uint64_t sub_337ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, char a6@<W5>, unsigned char *a7@<X8>)
{
  uint64_t v15 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4B1BE0) - 8);
  unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v17 = (*(void *)(v15 + 64) + v16 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v18 = *(void *)(type metadata accessor for ModernShelf() - 8);
  return sub_32CC6C(a1, a2, a3, a4, a5, a6, *(void *)(v7 + 16), v7 + v16, a7, v7 + v17, v7 + ((v17 + *(unsigned __int8 *)(v18 + 80) + 65) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80)));
}

uint64_t sub_338034(uint64_t a1)
{
  return sub_32EFAC(a1, *(uint64_t (**)(uint64_t, void, void, uint64_t, void, void))(v1 + 16));
}

uint64_t sub_33803C()
{
  return sub_32F024();
}

uint64_t sub_338044@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_334F74(a1, v2, a2);
}

void *sub_33804C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v17[1] = a2;
  uint64_t v5 = type metadata accessor for ModernShelf();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = _swiftEmptyArrayStorage;
  if (v9)
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    sub_1FC048(0, v9, 0);
    uint64_t v10 = v18;
    unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v12 = (void *)(a1 + v11);
    uint64_t v13 = *(void *)(v6 + 72);
    while (1)
    {
      sub_335030(v12, (uint64_t)v8);
      if (v3) {
        break;
      }
      uint64_t v3 = 0;
      uint64_t v18 = v10;
      unint64_t v15 = v10[2];
      unint64_t v14 = v10[3];
      if (v15 >= v14 >> 1)
      {
        sub_1FC048(v14 > 1, v15 + 1, 1);
        uint64_t v10 = v18;
      }
      v10[2] = v15 + 1;
      sub_3382A8((uint64_t)v8, (uint64_t)v10 + v11 + v15 * v13, (uint64_t (*)(void))type metadata accessor for ModernShelf);
      uint64_t v12 = (void *)((char *)v12 + v13);
      if (!--v9) {
        return v10;
      }
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_3381F0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_32F824(a1, a2);
}

uint64_t sub_3381F8()
{
  sub_B2620(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 80));

  return _swift_deallocObject(v0, 81, 7);
}

uint64_t sub_33824C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_32F0AC(a1, a2, v3 + 16, a3);
}

uint64_t sub_338254(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t, void))(v1 + 16);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE880);
  return v3(a1, *(void *)(a1 + *(int *)(v4 + 48)));
}

uint64_t sub_3382A8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_338310(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_338378(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_3383D8()
{
  return sub_334E78();
}

uint64_t sub_3383E0(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 64);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), v4);
  return a1;
}

uint64_t PlayEpisodeActionImplementation.perform(_:asPartOf:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_3D6F60();
  uint64_t v68 = *(void *)(v6 - 8);
  uint64_t v69 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v57 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_3D5640();
  uint64_t v66 = *(void *)(v9 - 8);
  uint64_t v67 = v9;
  __chkstk_darwin(v9);
  unint64_t v11 = (char *)&v57 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a3 + 16);
  uint64_t v64 = *(void *)(v12 - 8);
  __chkstk_darwin(v13);
  uint64_t v61 = v14;
  int v62 = (char *)&v57 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_4ABD88);
  __chkstk_darwin(v15 - 8);
  uint64_t v65 = (uint64_t)&v57 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE890);
  __chkstk_darwin(v17 - 8);
  int v19 = (char *)&v57 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_3D4BA0();
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v57 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3D2A90();
  sub_3D7170();
  sub_3D7970();
  uint64_t v71 = v73[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BE898);
  uint64_t v60 = a2;
  sub_3D7970();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4BC3E0);
  uint64_t v70 = sub_3D7A60();
  uint64_t v63 = a3;
  uint64_t v21 = *(void *)(a3 + 32);
  uint64_t v22 = *(void *)(v21 + 8);
  uint64_t v23 = a1;
  uint64_t v24 = v12;
  uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v12, v22);
  if (v27 != 0xFF)
  {
    uint64_t v28 = v25;
    if ((v27 & 1) == 0)
    {
      uint64_t v69 = v21;
      uint64_t v29 = v71;
      uint64_t v30 = sub_3D2A80();
      if (v30 && (v31 = (void *)v30, uint64_t v32 = sub_3D83B0(), v34 = v33, v31, (v34 & 1) == 0) && v32 == v28)
      {
        uint64_t v35 = v29;
        LODWORD(v68) = 1;
        uint64_t v36 = v60;
        uint64_t v37 = v70;
        uint64_t v38 = v23;
      }
      else
      {
        v72[3] = v12;
        v72[4] = v22;
        boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v72);
        uint64_t v38 = v23;
        (*(void (**)(uint64_t *, uint64_t, uint64_t))(v64 + 16))(boxed_opaque_existential_2Tm, v23, v24);
        sub_338B64(v72, v19);
        uint64_t v45 = v58;
        uint64_t v46 = v59;
        uint64_t v35 = v29;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v19, 1, v59) == 1)
        {
          sub_250FC((uint64_t)v19, &qword_4BE890);
        }
        else
        {
          uint64_t v47 = v57;
          (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v57, v19, v46);
          __swift_project_boxed_opaque_existential_1(v73, v73[3]);
          sub_3D50F0();
          (*(void (**)(char *, uint64_t))(v45 + 8))(v47, v46);
        }
        LODWORD(v68) = 0;
        uint64_t v36 = v60;
        uint64_t v37 = v70;
      }
      uint64_t v48 = sub_3D81A0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v65, 1, 1, v48);
      uint64_t v49 = v64;
      int v50 = v62;
      (*(void (**)(char *, uint64_t, uint64_t))(v64 + 16))(v62, v38, v24);
      sub_3D8160();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v51 = sub_3D8150();
      unint64_t v52 = (*(unsigned __int8 *)(v49 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
      unint64_t v53 = (v61 + v52 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v54 = swift_allocObject();
      *(void *)(v54 + 16) = v51;
      *(void *)(v54 + 24) = &protocol witness table for MainActor;
      uint64_t v55 = *(void *)(v63 + 24);
      *(void *)(v54 + 32) = v24;
      *(void *)(v54 + 40) = v55;
      *(void *)(v54 + 48) = v69;
      *(unsigned char *)(v54 + 56) = v68;
      *(void *)(v54 + 64) = v35;
      *(void *)(v54 + 72) = v37;
      (*(void (**)(unint64_t, char *, uint64_t))(v49 + 32))(v54 + v52, v50, v24);
      *(void *)(v54 + v53) = v36;
      sub_135DC4(v65, (uint64_t)&unk_4BE8A8, v54);
      swift_release();
      swift_release();
      goto LABEL_16;
    }
    sub_8CDB8(v25, v26, v27);
  }
  sub_3D5550();
  uint64_t v39 = sub_3D5630();
  os_log_type_t v40 = sub_3D83F0();
  if (os_log_type_enabled(v39, v40))
  {
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v41 = 0;
    _os_log_impl(&dword_0, v39, v40, "Thin client only supports playing with AdamIDs", v41, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v66 + 8))(v11, v67);
  uint64_t v43 = v68;
  uint64_t v42 = v69;
  (*(void (**)(char *, void, uint64_t))(v68 + 104))(v8, enum case for ActionOutcome.unsupported(_:), v69);
  uint64_t v37 = v70;
  sub_3D7A40();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v8, v42);
LABEL_16:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v73);
  return v37;
}

uint64_t sub_338B64@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE890);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = sub_3D4BA0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v15 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 24))(v14, v15);
  if (v16 == -1) {
    goto LABEL_7;
  }
  uint64_t v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v16)
  {
    sub_3D4B90();
    if ((*v17)(v6, 1, v10)) {
      goto LABEL_6;
    }
    int v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v19(v13, v6, v10);
  }
  else
  {
    sub_3D4B90();
    if ((*v17)(v9, 1, v10))
    {
      uint64_t v6 = v9;
LABEL_6:
      sub_250FC((uint64_t)v6, &qword_4BE890);
LABEL_7:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, 1, 1, v10);
    }
    int v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
    v19(v13, v9, v10);
  }
  v19(a2, v13, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a2, 0, 1, v10);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_338E08(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 200) = v18;
  *(void *)(v8 + 208) = v19;
  *(void *)(v8 + 184) = a8;
  *(void *)(v8 + 192) = v17;
  *(void *)(v8 + 168) = a6;
  *(void *)(v8 + 176) = a7;
  *(void *)(v8 + 160) = a5;
  *(unsigned char *)(v8 + 456) = a4;
  uint64_t v9 = sub_3D5640();
  *(void *)(v8 + 216) = v9;
  *(void *)(v8 + 224) = *(void *)(v9 - 8);
  *(void *)(v8 + 232) = swift_task_alloc();
  *(void *)(v8 + 240) = swift_task_alloc();
  *(void *)(v8 + 248) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BE930);
  *(void *)(v8 + 256) = swift_task_alloc();
  uint64_t v10 = sub_3D3DF0();
  *(void *)(v8 + 264) = v10;
  *(void *)(v8 + 272) = *(void *)(v10 - 8);
  *(void *)(v8 + 280) = swift_task_alloc();
  sub_3D6ED0();
  *(void *)(v8 + 288) = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BE938);
  *(void *)(v8 + 296) = swift_task_alloc();
  sub_3D6F40();
  *(void *)(v8 + 304) = swift_task_alloc();
  uint64_t v11 = sub_3D78A0();
  *(void *)(v8 + 312) = v11;
  *(void *)(v8 + 320) = *(void *)(v11 - 8);
  *(void *)(v8 + 328) = swift_task_alloc();
  *(void *)(v8 + 336) = type metadata accessor for EpisodeOffer();
  *(void *)(v8 + 344) = swift_task_alloc();
  *(void *)(v8 + 352) = *(void *)(v17 - 8);
  *(void *)(v8 + 360) = swift_task_alloc();
  uint64_t v12 = sub_3D6F60();
  *(void *)(v8 + 368) = v12;
  *(void *)(v8 + 376) = *(void *)(v12 - 8);
  *(void *)(v8 + 384) = swift_task_alloc();
  sub_3D8160();
  *(void *)(v8 + 392) = sub_3D8150();
  uint64_t v13 = sub_3D8130();
  *(void *)(v8 + 400) = v13;
  *(void *)(v8 + 408) = v14;
  return _swift_task_switch(sub_3391B4, v13, v14);
}

uint64_t sub_3391B4()
{
  if (*(unsigned char *)(v0 + 456) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_339848;
    return PlaybackController.togglePlayback()();
  }
  uint64_t v3 = *(void *)(v0 + 352);
  uint64_t v2 = *(uint64_t **)(v0 + 360);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 176);
  unsigned __int8 v6 = [self isExplicitContentAllowed];
  uint64_t v7 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v3 + 16);
  v7(v2, v5, v4);
  if (v6) {
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v0 + 336);
  uint64_t v8 = *(void *)(v0 + 344);
  (*(void (**)(void))(*(void *)(v0 + 208) + 16))(*(void *)(v0 + 192));
  if (*(unsigned char *)(v8 + *(int *)(v9 + 56)) == 2)
  {
    sub_23D64(*(void *)(v0 + 344));
LABEL_8:
    (*(void (**)(void, void))(*(void *)(v0 + 352) + 8))(*(void *)(v0 + 360), *(void *)(v0 + 192));
    goto LABEL_9;
  }
  uint64_t v23 = sub_3D3A50();
  uint64_t v25 = v24;
  uint64_t v26 = sub_3D3A50();
  uint64_t v29 = *(void *)(v0 + 352);
  uint64_t v28 = *(void *)(v0 + 360);
  uint64_t v30 = *(void *)(v0 + 344);
  uint64_t v31 = *(void *)(v0 + 192);
  if (v23 == v26 && v25 == v27)
  {
    swift_bridgeObjectRelease_n();
    sub_23D64(v30);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v31);
LABEL_21:
    uint64_t v34 = *(void *)(v0 + 376);
    uint64_t v46 = *(void *)(v0 + 368);
    uint64_t v47 = *(void *)(v0 + 384);
    uint64_t v35 = *(void *)(v0 + 320);
    v43._object = *(void **)(v0 + 328);
    uint64_t v45 = *(void *)(v0 + 312);
    uint64_t v36 = *(void *)(v0 + 296);
    swift_release();
    uint64_t v37 = (objc_class *)[self mainBundle];
    v43._countAndFlagsBits = 0xE000000000000000;
    v49._object = (void *)0x800000000040A0F0;
    v49._countAndFlagsBits = 0x1000000000000047;
    v50.value._countAndFlagsBits = 0;
    v50.value._object = 0;
    v38.super.Class isa = v37;
    v51._countAndFlagsBits = 0;
    v51._object = (void *)0xE000000000000000;
    sub_3D2060(v49, v50, v38, v51, v43);

    sub_3D6F00();
    uint64_t v39 = sub_3D7890();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v36, 1, 1, v39);
    sub_3D6EC0();
    sub_3D7860();
    *(void *)(v0 + 120) = v45;
    *(void *)(v0 + 128) = &protocol witness table for Models.AlertAction;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 96));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(v35 + 16))(boxed_opaque_existential_2Tm, v44, v45);
    sub_33B8DC();
    __swift_destroy_boxed_opaque_existential_1(v0 + 96);
    (*(void (**)(uint64_t, void, uint64_t))(v34 + 104))(v47, enum case for ActionOutcome.unsupported(_:), v46);
    sub_3D7A40();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v47, v46);
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v44, v45);
    goto LABEL_22;
  }
  char v33 = sub_3D8FE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_23D64(v30);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v31);
  if (v33) {
    goto LABEL_21;
  }
LABEL_9:
  uint64_t v10 = *(void *)(v0 + 264);
  uint64_t v11 = *(void *)(v0 + 272);
  uint64_t v12 = *(void *)(v0 + 256);
  uint64_t v13 = *(void *)(v0 + 208);
  uint64_t v14 = *(void *)(v0 + 192);
  uint64_t v15 = *(void *)(v0 + 176);
  *(void *)(v0 + 40) = v14;
  *(void *)(v0 + 48) = *(void *)(v13 + 8);
  uint64_t v16 = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v0 + 16));
  v7(v16, v15, v14);
  sub_33A868((void *)(v0 + 16), v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10) == 1)
  {
    uint64_t v17 = *(void *)(v0 + 384);
    uint64_t v18 = *(void *)(v0 + 368);
    uint64_t v19 = *(void *)(v0 + 376);
    uint64_t v20 = *(void *)(v0 + 256);
    swift_release();
    sub_250FC(v20, &qword_4BE930);
    (*(void (**)(uint64_t, void, uint64_t))(v19 + 104))(v17, enum case for ActionOutcome.unsupported(_:), v18);
    sub_3D7A40();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v17, v18);
LABEL_22:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v41 = *(uint64_t (**)(void))(v0 + 8);
    return v41();
  }
  (*(void (**)(void, void, void))(*(void *)(v0 + 272) + 32))(*(void *)(v0 + 280), *(void *)(v0 + 256), *(void *)(v0 + 264));
  uint64_t v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 432) = v21;
  void *v21 = v0;
  v21[1] = sub_339B30;
  uint64_t v22 = *(void *)(v0 + 280);
  return PlaybackController.performIntent(_:)(v22);
}

uint64_t sub_339848()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 424) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 408);
  uint64_t v4 = *(void *)(v2 + 400);
  if (v0) {
    uint64_t v5 = sub_33A290;
  }
  else {
    uint64_t v5 = sub_3399B0;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_3399B0()
{
  uint64_t v1 = v0[48];
  uint64_t v2 = v0[46];
  uint64_t v3 = v0[47];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for ActionOutcome.performed(_:), v2);
  sub_3D7A40();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_339B30(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 440) = a1;
  *(void *)(v4 + 448) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 408);
  uint64_t v6 = *(void *)(v3 + 400);
  if (v1) {
    uint64_t v7 = sub_33A56C;
  }
  else {
    uint64_t v7 = sub_339CA0;
  }
  return _swift_task_switch(v7, v6, v5);
}

uint64_t sub_339CA0()
{
  uint64_t v1 = v0[55];
  swift_release();
  if (v1)
  {
    uint64_t v2 = (void *)v0[55];
    id v3 = [v2 dialog];
    if (v3)
    {
      uint64_t v4 = v0[47];
      uint64_t v5 = v0[48];
      uint64_t v43 = v0[46];
      uint64_t v44 = v2;
      uint64_t v6 = v0[40];
      uint64_t v7 = v0[41];
      uint64_t v8 = v0[39];
      uint64_t v9 = v0[34];
      uint64_t v45 = v0[33];
      uint64_t v47 = v0[35];
      id v10 = v3;
      sub_33AD74(v10, v7);
      v0[10] = v8;
      v0[11] = &protocol witness table for Models.AlertAction;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v0 + 7);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v6 + 16))(boxed_opaque_existential_2Tm, v7, v8);
      sub_33B8DC();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(v0 + 7));
      (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v5, enum case for ActionOutcome.unsupported(_:), v43);
      sub_3D7A40();

      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v43);
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v47, v45);
    }
    else
    {
      id v22 = [v2 error];
      if (v22)
      {

        sub_3D5550();
        id v23 = v2;
        uint64_t v24 = sub_3D5630();
        os_log_type_t v25 = sub_3D83F0();
        if (os_log_type_enabled(v24, v25))
        {
          uint64_t v26 = (uint8_t *)swift_slowAlloc();
          uint64_t v27 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v26 = 138412290;
          if ([v23 error])
          {
            uint64_t v28 = _swift_stdlib_bridgeErrorToNSError();
            v0[19] = v28;
            sub_3D8930();
          }
          else
          {
            v0[18] = 0;
            sub_3D8930();
            uint64_t v28 = 0;
          }
          *uint64_t v27 = v28;

          _os_log_impl(&dword_0, v24, v25, "Unable to play intent %@", v26, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B24C0);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
        uint64_t v36 = v0[47];
        uint64_t v35 = v0[48];
        uint64_t v37 = v0[46];
        uint64_t v39 = v0[34];
        uint64_t v38 = v0[35];
        uint64_t v40 = v0[33];
        (*(void (**)(void, void))(v0[28] + 8))(v0[30], v0[27]);
        (*(void (**)(uint64_t, void, uint64_t))(v36 + 104))(v35, enum case for ActionOutcome.unsupported(_:), v37);
        sub_3D7A40();

        (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v37);
        (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v38, v40);
      }
      else
      {
        uint64_t v30 = v0[47];
        uint64_t v29 = v0[48];
        uint64_t v31 = v0[46];
        uint64_t v33 = v0[34];
        uint64_t v32 = v0[35];
        uint64_t v34 = v0[33];
        (*(void (**)(uint64_t, void, uint64_t))(v30 + 104))(v29, enum case for ActionOutcome.performed(_:), v31);
        sub_3D7A40();

        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v29, v31);
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
      }
    }
  }
  else
  {
    sub_3D5550();
    uint64_t v12 = sub_3D5630();
    os_log_type_t v13 = sub_3D83F0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v14 = 0;
      _os_log_impl(&dword_0, v12, v13, "Unable to play intent, no status", v14, 2u);
      swift_slowDealloc();
    }
    uint64_t v16 = v0[47];
    uint64_t v15 = v0[48];
    uint64_t v17 = v0[46];
    uint64_t v18 = v0[34];
    uint64_t v46 = v0[33];
    uint64_t v48 = v0[35];
    uint64_t v19 = v0[31];
    uint64_t v21 = v0[27];
    uint64_t v20 = v0[28];

    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(v15, enum case for ActionOutcome.unsupported(_:), v17);
    sub_3D7A40();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v15, v17);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v48, v46);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = (uint64_t (*)(void))v0[1];
  return v41();
}

uint64_t sub_33A290()
{
  swift_release();
  sub_3D5550();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_3D5630();
  os_log_type_t v2 = sub_3D83F0();
  if (os_log_type_enabled(v1, v2))
  {
    id v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)id v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[17] = v5;
    sub_3D8930();
    *uint64_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v1, v2, "Unable to play intent: %@", v3, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B24C0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[47];
  uint64_t v6 = v0[48];
  uint64_t v8 = v0[46];
  uint64_t v10 = v0[28];
  uint64_t v9 = v0[29];
  uint64_t v11 = v0[27];

  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  (*(void (**)(uint64_t, void, uint64_t))(v7 + 104))(v6, enum case for ActionOutcome.unsupported(_:), v8);
  sub_3D7A40();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_33A56C()
{
  uint64_t v2 = v0[34];
  uint64_t v1 = v0[35];
  uint64_t v3 = v0[33];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  sub_3D5550();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = sub_3D5630();
  os_log_type_t v5 = sub_3D83F0();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 138412290;
    swift_errorRetain();
    uint64_t v8 = _swift_stdlib_bridgeErrorToNSError();
    v0[17] = v8;
    sub_3D8930();
    *uint64_t v7 = v8;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v4, v5, "Unable to play intent: %@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B24C0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v10 = v0[47];
  uint64_t v9 = v0[48];
  uint64_t v11 = v0[46];
  uint64_t v13 = v0[28];
  uint64_t v12 = v0[29];
  uint64_t v14 = v0[27];

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
  (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v9, enum case for ActionOutcome.unsupported(_:), v11);
  sub_3D7A40();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = (uint64_t (*)(void))v0[1];
  return v15();
}

uint64_t sub_33A868@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B8DE8);
  __chkstk_darwin(v3 - 8);
  os_log_type_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4A9CA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v39 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_3D3FA0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (uint64_t *)((char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_3D3DF0();
  uint64_t v41 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v15);
  uint64_t v17 = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 24))(v15, v16);
  if (v19 == 0xFF)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    uint64_t v28 = v40;
    uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
    return v29(v28, 1, 1, v12);
  }
  else
  {
    uint64_t v20 = v17;
    unsigned __int8 v21 = v19;
    uint64_t v38 = v12;
    if (v19)
    {
      uint64_t v31 = v18;
      __swift_instantiateConcreteTypeFromMangledName(&qword_4B1CA0);
      uint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_3DED90;
      *(void *)(v32 + 32) = v20;
      *(void *)(v32 + 40) = v31;
      *uint64_t v11 = v32;
      (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, enum case for MediaIdentifier.localEpisodes(_:), v8);
      uint64_t v33 = sub_3D4780();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v39, 1, 1, v33);
      uint64_t v34 = sub_3D3620();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v5, 1, 1, v34);
      sub_887F8(v20, v31, 1);
      sub_3D82A0();
      sub_3D3DC0();
      sub_8CDB8(v20, v31, v21);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_4A9A38);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_3DED90;
      *(void *)(v22 + 32) = v20;
      uint64_t v24 = a1[3];
      uint64_t v23 = a1[4];
      __swift_project_boxed_opaque_existential_1(a1, v24);
      uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 32))(v24, v23);
      uint64_t v42 = v22;
      sub_288534(v25);
      *uint64_t v11 = v42;
      (*(void (**)(uint64_t *, void, uint64_t))(v9 + 104))(v11, enum case for MediaIdentifier.episodes(_:), v8);
      uint64_t v26 = sub_3D4780();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v39, 1, 1, v26);
      uint64_t v27 = sub_3D3620();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v5, 1, 1, v27);
      sub_3D82A0();
      sub_3D3DC0();
    }
    uint64_t v35 = v40;
    uint64_t v36 = v38;
    (*(void (**)(uint64_t, char *, uint64_t))(v41 + 32))(v40, v14, v38);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v41 + 56))(v35, 0, 1, v36);
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
}

void sub_33AD74(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v84 = sub_3D2460();
  uint64_t v4 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  int v83 = (char *)v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v6 - 8);
  int v82 = (char *)v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_3D7880();
  uint64_t v85 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v9 = (char *)v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_3D6ED0();
  __chkstk_darwin(v10 - 8);
  uint64_t v68 = (char *)v60 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE938);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_3D6F40();
  uint64_t v15 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v79 = (char *)v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  unint64_t v78 = (char *)v60 - v18;
  __chkstk_darwin(v19);
  uint64_t v66 = (char *)v60 - v20;
  sub_3D6F00();
  uint64_t v21 = sub_3D7890();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v67 = v14;
  v22(v14, 1, 1, v21);
  id v23 = [a1 localizedTitle];
  if (v23)
  {
    uint64_t v24 = v23;
    uint64_t v65 = sub_3D7D50();
    uint64_t v64 = v25;
  }
  else
  {
    uint64_t v65 = 0;
    uint64_t v64 = 0;
  }
  id v26 = [a1 localizedMessage];
  if (v26)
  {
    uint64_t v27 = v26;
    uint64_t v63 = sub_3D7D50();
    uint64_t v62 = v28;
  }
  else
  {
    uint64_t v63 = 0;
    uint64_t v62 = 0;
  }
  id v29 = [a1 actions];
  sub_33BA90();
  unint64_t v30 = sub_3D8020();

  if (!(v30 >> 62))
  {
    uint64_t v31 = *(void *)((char *)&dword_10 + (v30 & 0xFFFFFFFFFFFFFF8));
    if (v31) {
      goto LABEL_9;
    }
LABEL_24:
    swift_bridgeObjectRelease();
LABEL_25:
    sub_3D6EC0();
    sub_3D7860();

    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_3D8D90();
  swift_bridgeObjectRelease();
  if (!v31) {
    goto LABEL_24;
  }
LABEL_9:
  uint64_t v95 = _swiftEmptyArrayStorage;
  sub_1FC314(0, v31 & ~(v31 >> 63), 0);
  if ((v31 & 0x8000000000000000) == 0)
  {
    v60[1] = a2;
    uint64_t v61 = a1;
    uint64_t v32 = 0;
    unint64_t v74 = v30 & 0xC000000000000001;
    uint64_t v73 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v72 = (void (**)(char *, uint64_t))(v4 + 8);
    uint64_t v71 = (void (**)(uint64_t, char *, uint64_t))(v15 + 32);
    uint64_t v70 = (void (**)(char *, uint64_t))(v15 + 8);
    uint64_t v69 = v85 + 32;
    uint64_t v76 = v9;
    unint64_t v75 = v30;
    uint64_t v77 = v31;
    uint64_t v33 = (uint64_t)v82;
    do
    {
      if (v74) {
        id v34 = (id)sub_3D8BF0();
      }
      else {
        id v34 = *(id *)(v30 + 8 * v32 + 32);
      }
      uint64_t v35 = v34;
      id v36 = [v34 localizedTitle];
      uint64_t v37 = sub_3D7D50();
      uint64_t v89 = v38;
      uint64_t v90 = v37;

      uint64_t v39 = (char *)[v35 type];
      uint64_t v91 = v32;
      if (v39 == (unsigned char *)&dword_0 + 2) {
        uint64_t v40 = sub_3D7840();
      }
      else {
        uint64_t v40 = sub_3D7850();
      }
      uint64_t v87 = v41;
      uint64_t v88 = v40;
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = v35;
      id v86 = v35;
      uint64_t v43 = v78;
      sub_3D6F00();
      uint64_t v44 = type metadata accessor for ClosureAction();
      uint64_t v45 = swift_allocObject();
      uint64_t v46 = (void (**)())(v45 + OBJC_IVAR____TtC8ShelfKit13ClosureAction_closure);
      char *v46 = sub_33BB08;
      v46[1] = (void (*)())v42;
      uint64_t v48 = v79;
      uint64_t v47 = v80;
      (*v73)(v79, v43, v80);
      uint64_t v49 = sub_3D7340();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v33, 1, 1, v49);
      swift_retain();
      Swift::String_optional v50 = v83;
      sub_3D2450();
      uint64_t v51 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
      uint64_t v53 = v52;
      (*v72)(v50, v84);
      *(void *)(v45 + 16) = v51;
      *(void *)(v45 + 24) = v53;
      *(void *)(v45 + 32) = 0;
      *(void *)(v45 + 40) = 0;
      *(unsigned char *)(v45 + 48) = 32;
      (*v71)(v45 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v48, v47);
      sub_2A728(v33, v45 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
      swift_release();
      (*v70)(v43, v47);
      uint64_t v93 = v44;
      unint64_t v94 = sub_33BB10();
      uint64_t v92 = v45;
      uint64_t v54 = v76;
      sub_3D7870();

      uint64_t v55 = v95;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1FC314(0, v55[2] + 1, 1);
        uint64_t v55 = v95;
      }
      uint64_t v56 = v77;
      uint64_t v57 = v91;
      unint64_t v59 = v55[2];
      unint64_t v58 = v55[3];
      if (v59 >= v58 >> 1)
      {
        sub_1FC314(v58 > 1, v59 + 1, 1);
        uint64_t v55 = v95;
      }
      uint64_t v32 = v57 + 1;
      v55[2] = v59 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v85 + 32))((unint64_t)v55+ ((*(unsigned __int8 *)(v85 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v85 + 80))+ *(void *)(v85 + 72) * v59, v54, v81);
      uint64_t v95 = v55;
      unint64_t v30 = v75;
    }
    while (v56 != v32);
    swift_bridgeObjectRelease();
    a1 = v61;
    goto LABEL_25;
  }
  __break(1u);
}

uint64_t sub_33B5E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return PlayEpisodeActionImplementation.perform(_:asPartOf:)(a1, a2, a3);
}

void sub_33B5F8(void *a1)
{
  uint64_t v2 = self;
  id v3 = [a1 commandRequest];
  [v2 performRequest:v3 completion:0];
}

uint64_t sub_33B678()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 80) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_33B768(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 32);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  char v7 = *(unsigned char *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 64);
  uint64_t v9 = *(void *)(v1 + 72);
  uint64_t v10 = v1 + v4;
  uint64_t v11 = *(void *)(v1 + ((*(void *)(*(void *)(v3 - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  *uint64_t v12 = v2;
  v12[1] = sub_4F780;
  return sub_338E08(a1, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t type metadata accessor for PlayEpisodeActionImplementation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_33B8DC()
{
  uint64_t v0 = sub_3D2D80();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4BC3C0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3D70B0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for ActionMetricsBehavior.fromAction(_:), v0);
  sub_3D71F0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_33BA90()
{
  unint64_t result = qword_4BE940;
  if (!qword_4BE940)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_4BE940);
  }
  return result;
}

uint64_t sub_33BAD0()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_33BB08()
{
  sub_33B5F8(*(void **)(v0 + 16));
}

unint64_t sub_33BB10()
{
  unint64_t result = qword_4AB9B8;
  if (!qword_4AB9B8)
  {
    type metadata accessor for ClosureAction();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4AB9B8);
  }
  return result;
}

uint64_t dispatch thunk of PresenterProtocol.view.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PresenterProtocol.view.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PresenterProtocol.view.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PresenterProtocol.didLoad()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of PresenterProtocol.isUpdating.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of PresenterProtocol.update()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t View.frameFillAvailableSpace(alignment:)()
{
  return sub_3D6670();
}

uint64_t sub_33BC40()
{
  return swift_getWitnessTable();
}

uint64_t StoreDataCache.fetchCachedListenNowFooter()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (uint64_t (*)(void))sub_33BF44(v2, a1, a2);
  uint64_t v4 = v3();
  swift_release();
  return v4;
}

uint64_t StoreDataCache.setObject(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(a4 + 24))(a1, 0x6F4E6E657473694CLL, 0xEF7265746F6F4677, a3, a4);
}

uint64_t StoreDataCache.object(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(a3 + 8))(0x6F4E6E657473694CLL, 0xEF7265746F6F4677, a2, a3);
}

uint64_t StoreDataCache.object<A>(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = sub_33BDD0(v5, a2, a3, a4, a5);
  uint64_t v7 = v6(0x6F4E6E657473694CLL, 0xEF7265746F6F4677);
  swift_release();
  return v7;
}

uint64_t (*sub_33BDD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5))(uint64_t a1, uint64_t a2)
{
  uint64_t v9 = *(void *)(a2 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(a1);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v9 + 16))(v11);
  unint64_t v12 = (*(unsigned __int8 *)(v9 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v13 = (char *)swift_allocObject();
  *((void *)v13 + 2) = a2;
  *((void *)v13 + 3) = a3;
  *((void *)v13 + 4) = a4;
  *((void *)v13 + 5) = a5;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v13[v12], v11, a2);
  return sub_33C13C;
}

uint64_t StoreDataCache.removeObject(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(a3 + 32))(0x6F4E6E657473694CLL, 0xEF7265746F6F4677, a2, a3);
}

uint64_t (*sub_33BF44(uint64_t a1, uint64_t a2, uint64_t a3))(uint64_t a1)
{
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(a1);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v5 + 16))(v7);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(void *)(v9 + 24) = a3;
  (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9 + v8, v7, a2);
  return sub_33C2D0;
}

uint64_t dispatch thunk of StoreDataCache.object(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of StoreDataCache.object<A>(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 16))();
}

uint64_t dispatch thunk of StoreDataCache.setObject(_:forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

uint64_t dispatch thunk of StoreDataCache.removeObject(forKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

uint64_t sub_33C0B4()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 48) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_33C13C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, void))(v2[4] + 16))(a1, a2, v2[3], v2[5]);
}

uint64_t sub_33C1AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_4A9AC0);
  unint64_t v8 = sub_16D64();
  uint64_t v9 = sub_33BDD0(a2, a3, v7, a4, v8);
  uint64_t v10 = v9(0x6F4E6E657473694CLL, 0xEF7265746F6F4677);
  swift_release();
  return v10;
}

uint64_t sub_33C248()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_33C2D0(uint64_t a1)
{
  return sub_33C1AC(a1, v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t DependencyBindableView.perform(_:from:in:)(void *a1, uint64_t a2, void *a3)
{
  id v23 = a1;
  uint64_t v5 = sub_3D6F60();
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_3D6BD0();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_3D7AE0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_3D2E10())
  {
    type metadata accessor for ActionRunnerOptions();
    swift_retain();
    sub_3D7190();
    sub_2A1B0(a2, (uint64_t)v24);
    v24[4] = (uint64_t)a3;
    id v13 = a3;
    uint64_t v14 = _s8ShelfKit19ActionRunnerOptionsC04withC6OriginyACXDAA0cG0VSgF_0((uint64_t)v24);
    sub_250FC((uint64_t)v24, &qword_4AA9B0);
    swift_release();
    sub_18168((uint64_t)v23, (uint64_t)v24);
    v24[5] = v14;
    uint64_t v15 = ActionPerformer.callAsFunction()();
    swift_release();
    sub_2A274((uint64_t)v24);
  }
  else
  {
    sub_3D7A90();
    __swift_instantiateConcreteTypeFromMangledName(&qword_4A9AF8);
    sub_3D6BF0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_3DED90;
    sub_3D6BC0();
    v25._object = (void *)0x8000000000409290;
    v25._countAndFlagsBits = 0xD000000000000012;
    sub_3D6BB0(v25);
    uint64_t v16 = v23[3];
    uint64_t v17 = __swift_project_boxed_opaque_existential_1(v23, v16);
    v24[3] = v16;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v24);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(boxed_opaque_existential_2Tm, v17, v16);
    sub_3D6BA0();
    sub_250FC((uint64_t)v24, (uint64_t *)&unk_4B5A40);
    v26._countAndFlagsBits = 0xD000000000000019;
    v26._object = (void *)0x80000000004092B0;
    sub_3D6BB0(v26);
    sub_3D6BE0();
    sub_3D7820();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4BC3E0);
    (*(void (**)(char *, void, uint64_t))(v21 + 104))(v7, enum case for ActionOutcome.unsupported(_:), v22);
    return sub_3D7A10();
  }
  return v15;
}

uint64_t FetchUpNextEpisodesIntentImplementation.perform(_:objectGraph:)(uint64_t *a1)
{
  uint64_t v3 = sub_3D86C0();
  v1[4] = v3;
  v1[5] = *(void *)(v3 - 8);
  v1[6] = swift_task_alloc();
  uint64_t v4 = sub_3D81A0();
  v1[7] = v4;
  v1[8] = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = *a1;
  v1[9] = v5;
  v1[10] = v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AFF70);
  uint64_t v8 = (void *)swift_task_alloc();
  v1[11] = v8;
  *uint64_t v8 = v1;
  v8[1] = sub_33C888;
  return BaseObjectGraph.inject<A>(_:)(v1 + 2, v7, v7);
}

uint64_t sub_33C888()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_33CEB4;
  }
  else {
    uint64_t v2 = sub_33C99C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_33C99C()
{
  v0[13] = v0[2];
  uint64_t ObjectType = swift_getObjectType();
  sub_F1058();
  uint64_t v2 = (void *)swift_task_alloc();
  v0[14] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_33CA64;
  uint64_t v3 = v0[9];
  return NSManagedObjectContextProvider.managedObjectContext(for:)(v3, ObjectType);
}

uint64_t sub_33CA64(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 72);
  uint64_t v3 = *(void *)(*(void *)v1 + 64);
  uint64_t v4 = *(void *)(*(void *)v1 + 56);
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_33CBE0, 0, 0);
}

uint64_t sub_33CBE0()
{
  uint64_t v1 = (void *)v0[15];
  uint64_t v2 = v0[10];
  uint64_t v4 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v5 = v0[4];
  uint64_t v6 = swift_allocObject();
  v0[16] = v6;
  *(void *)(v6 + 16) = v2;
  *(void *)(v6 + 24) = v1;
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v3, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v5);
  id v7 = v1;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[17] = v8;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(qword_4B0F50);
  *uint64_t v8 = v0;
  v8[1] = sub_33CD20;
  uint64_t v10 = v0[6];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 3, v10, sub_33D24C, v6, v9);
}

uint64_t sub_33CD20()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 48);
  uint64_t v3 = *(void *)(*(void *)v1 + 40);
  uint64_t v4 = *(void *)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 144) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_33CF24;
  }
  else {
    uint64_t v5 = sub_1048E4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_33CEB4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_33CF24()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_33CF9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v4 = a2;
    uint64_t v8 = a1;
    uint64_t v3 = a3;
    unint64_t result = sub_33D26C(a1, a2, (SEL *)&selRef_predicateForListenNow, (SEL *)&selRef_sortDescriptorsForListenNow);
    uint64_t v6 = v5;
    if (v5) {
      return result;
    }
    unint64_t v7 = result;
    if (!(result >> 62))
    {
      if (*(void *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFFF8))) {
        goto LABEL_5;
      }
      goto LABEL_21;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = sub_3D8D90();
  swift_bridgeObjectRelease();
  if (v21)
  {
LABEL_5:
    if (!(v7 >> 62)) {
      goto LABEL_6;
    }
    goto LABEL_23;
  }
LABEL_21:
  swift_bridgeObjectRelease();
  unint64_t result = sub_33D26C(v8, v4, (SEL *)&selRef_predicateForListenNowLatestEpisodes, (SEL *)&selRef_sortDescriptorsForListenNowLatestEpisodes);
  if (v6) {
    return result;
  }
  unint64_t v7 = result;
  if (!(result >> 62))
  {
LABEL_6:
    uint64_t v10 = *(void *)((char *)&dword_10 + (v7 & 0xFFFFFFFFFFFFFF8));
    if (v10) {
      goto LABEL_7;
    }
LABEL_24:
    unint64_t result = swift_bridgeObjectRelease();
    void *v3 = _swiftEmptyArrayStorage;
    return result;
  }
LABEL_23:
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_3D8D90();
  swift_bridgeObjectRelease();
  if (!v10) {
    goto LABEL_24;
  }
LABEL_7:
  unint64_t result = sub_1FC0CC(0, v10 & ~(v10 >> 63), 0);
  if (v10 < 0)
  {
    __break(1u);
  }
  else
  {
    if ((v7 & 0xC000000000000001) != 0)
    {
      uint64_t v11 = 0;
      do
      {
        uint64_t v12 = sub_3D8BF0();
        unint64_t v14 = _swiftEmptyArrayStorage[2];
        unint64_t v13 = _swiftEmptyArrayStorage[3];
        if (v14 >= v13 >> 1) {
          sub_1FC0CC(v13 > 1, v14 + 1, 1);
        }
        ++v11;
        _swiftEmptyArrayStorage[2] = v14 + 1;
        uint64_t v15 = &_swiftEmptyArrayStorage[3 * v14];
        v15[4] = v12;
        v15[5] = 0;
        *((unsigned char *)v15 + 48) = 1;
      }
      while (v10 != v11);
    }
    else
    {
      uint64_t v16 = 0;
      do
      {
        unint64_t v17 = _swiftEmptyArrayStorage[2];
        unint64_t v18 = _swiftEmptyArrayStorage[3];
        id v19 = *(id *)(v7 + 8 * v16 + 32);
        if (v17 >= v18 >> 1) {
          sub_1FC0CC(v18 > 1, v17 + 1, 1);
        }
        ++v16;
        _swiftEmptyArrayStorage[2] = v17 + 1;
        uint64_t v20 = &_swiftEmptyArrayStorage[3 * v17];
        v20[4] = v19;
        v20[5] = 0;
        *((unsigned char *)v20 + 48) = 1;
      }
      while (v10 != v16);
    }
    unint64_t result = swift_bridgeObjectRelease();
    void *v3 = _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_33D214()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_33D24C@<X0>(void *a1@<X8>)
{
  return sub_33CF9C(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_33D26C(uint64_t a1, uint64_t a2, SEL *a3, SEL *a4)
{
  sub_3D7D50();
  id v7 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v8 = sub_3D7D10();
  swift_bridgeObjectRelease();
  id v9 = [v7 initWithEntityName:v8];

  uint64_t v10 = self;
  id v11 = [v10 *a3];
  [v9 setPredicate:v11];

  Class isa = (Class)[v10 *a4];
  if (!isa)
  {
    sub_3D530(0, (unint64_t *)&qword_4B85F0);
    sub_3D8020();
    Class isa = sub_3D8010().super.isa;
    swift_bridgeObjectRelease();
  }
  [v9 setSortDescriptors:isa];

  [v9 setFetchLimit:a1];
  [v9 setResultType:1];
  sub_3D530(0, (unint64_t *)&unk_4BE970);
  uint64_t v13 = sub_3D86D0();

  return v13;
}

uint64_t sub_33D428(uint64_t a1, uint64_t *a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_ABBFC;
  return FetchUpNextEpisodesIntentImplementation.perform(_:objectGraph:)(a2);
}

ValueMetadata *type metadata accessor for FetchUpNextEpisodesIntentImplementation()
{
  return &type metadata for FetchUpNextEpisodesIntentImplementation;
}

uint64_t ImageViewProtocol.fetch(artwork:using:checkCacheSynchronously:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  LODWORD(v141) = a3;
  uint64_t v144 = a2;
  uint64_t v145 = a1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD460);
  __chkstk_darwin(v8 - 8);
  uint64_t v125 = (char *)v112 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B30D0);
  uint64_t v122 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  int v121 = (char *)v112 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B30D8);
  uint64_t v130 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v129 = (char *)v112 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B30E0);
  uint64_t v132 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  Swift::String_optional v142 = (char *)v112 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = sub_3D2EE0();
  uint64_t v119 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  int v118 = (char *)v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_3D36A0();
  uint64_t v116 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v115 = (char *)v112 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = sub_3D5640();
  uint64_t v143 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  Swift::String v139 = (char *)v112 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  Swift::String v146 = (char *)v112 - v17;
  uint64_t v153 = sub_3D3D10();
  uint64_t v18 = *(void *)(v153 - 8);
  __chkstk_darwin(v153);
  uint64_t v127 = (char *)v112 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v135 = (char *)v112 - v21;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)v112 - v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)v112 - v26;
  __chkstk_darwin(v28);
  unint64_t v30 = (char *)v112 - v29;
  uint64_t v126 = v31;
  __chkstk_darwin(v32);
  unint64_t v151 = (char *)v112 - v33;
  uint64_t v34 = sub_3D25F0();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)v112 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B3118);
  uint64_t v136 = *(void *)(v137 - 8);
  __chkstk_darwin(v137);
  uint64_t v124 = (char *)v112 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = v38;
  __n128 v40 = __chkstk_darwin(v39);
  Swift::String v147 = (char *)v112 - v41;
  uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a5 + 40);
  uint64_t v149 = v5;
  uint64_t v152 = a5;
  if (v42(a4, a5, v40))
  {
    sub_3D5800();
    swift_release();
  }
  sub_3D25E0();
  uint64_t v43 = v147;
  sub_3D25D0();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B97A0);
  sub_3D70B0();
  uint64_t v44 = v151;
  sub_3D3CF0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v157);
  uint64_t v45 = *(uint64_t (**)(uint64_t))(v152 + 64);
  uint64_t v150 = a4;
  int v46 = v45(a4);
  int v134 = v46 | v141;
  sub_3D55C0();
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v18 + 16);
  uint64_t v48 = v153;
  v47(v30, v44, v153);
  v47(v27, v44, v48);
  uint64_t v141 = v18 + 16;
  Swift::String v140 = v47;
  v47(v24, v44, v48);
  uint64_t v49 = sub_3D5630();
  uint64_t v50 = v18;
  os_log_type_t v51 = sub_3D83E0();
  BOOL v52 = os_log_type_enabled(v49, v51);
  uint64_t v148 = v50;
  if (v52)
  {
    uint64_t v53 = swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    os_log_t v113 = v49;
    uint64_t v55 = (void *)v54;
    v112[1] = v54;
    uint64_t v114 = swift_slowAlloc();
    v157[0] = v114;
    *(_DWORD *)uint64_t v53 = 138412802;
    uint64_t v56 = sub_3D3CA0();
    uint64_t v154 = v56;
    sub_3D8930();
    *uint64_t v55 = v56;
    uint64_t v57 = v24;
    unint64_t v58 = *(void (**)(char *, uint64_t))(v50 + 8);
    v58(v30, v153);
    *(_WORD *)(v53 + 12) = 2080;
    uint64_t v59 = sub_3D3D00();
    uint64_t v154 = sub_1FB7E8(v59, v60, v157);
    sub_3D8930();
    swift_bridgeObjectRelease();
    v58(v27, v153);
    *(_WORD *)(v53 + 22) = 2080;
    uint64_t v61 = v115;
    sub_3D3C80();
    uint64_t v62 = sub_3D3690();
    unint64_t v64 = v63;
    (*(void (**)(char *, uint64_t))(v116 + 8))(v61, v117);
    uint64_t v154 = sub_1FB7E8(v62, v64, v157);
    uint64_t v44 = v151;
    sub_3D8930();
    swift_bridgeObjectRelease();
    v58(v57, v153);
    uint64_t v43 = v147;
    uint64_t v49 = v113;
    _os_log_impl(&dword_0, v113, v51, "Starting ArtworkRequest for image view protocol: %@ | %s.%s", (uint8_t *)v53, 0x20u);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B24C0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v48 = v153;
    swift_slowDealloc();
  }
  else
  {
    uint64_t v65 = v50;
    uint64_t v66 = v24;
    unint64_t v58 = *(void (**)(char *, uint64_t))(v65 + 8);
    v58(v30, v48);
    v58(v27, v48);
    v58(v66, v48);
  }

  uint64_t v67 = *(void (**)(char *, uint64_t))(v143 + 8);
  uint64_t v68 = v138;
  v67(v146, v138);
  uint64_t v69 = v135;
  if ((v134 & 1) == 0) {
    goto LABEL_9;
  }
  uint64_t v70 = v48;
  uint64_t v71 = v58;
  uint64_t v72 = v67;
  uint64_t v73 = (uint64_t)v118;
  sub_3D3C70();
  unint64_t v74 = sub_33EF98(v73, v43);
  uint64_t v75 = v73;
  uint64_t v67 = v72;
  unint64_t v58 = v71;
  uint64_t v48 = v70;
  (*(void (**)(uint64_t, uint64_t))(v119 + 8))(v75, v120);
  if (v74)
  {
    uint64_t v76 = v43;
    uint64_t v77 = v152;
    unint64_t v78 = *(void (**)(char *, uint64_t, uint64_t))(v152 + 24);
    uint64_t v79 = v74;
    v78(v74, v150, v77);

    uint64_t v80 = v137;
    uint64_t v81 = v136;
  }
  else
  {
LABEL_9:
    sub_3D55C0();
    v140(v69, v44, v48);
    int v82 = sub_3D5630();
    os_log_type_t v83 = sub_3D83E0();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = (uint8_t *)swift_slowAlloc();
      uint64_t v85 = swift_slowAlloc();
      Swift::String v146 = (char *)v67;
      id v86 = (void *)v85;
      *(_DWORD *)uint64_t v84 = 138412290;
      uint64_t v87 = sub_3D3CA0();
      v157[0] = v87;
      uint64_t v88 = v150;
      uint64_t v48 = v153;
      sub_3D8930();
      *id v86 = v87;
      v58(v69, v48);
      _os_log_impl(&dword_0, v82, v83, "Fulfilling request asynchronously: %@", v84, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B24C0);
      swift_arrayDestroy();
      uint64_t v67 = (void (*)(char *, uint64_t))v146;
      swift_slowDealloc();
      uint64_t v68 = v138;
      swift_slowDealloc();
    }
    else
    {
      v58(v69, v48);
      uint64_t v88 = v150;
    }
    uint64_t v89 = v151;
    uint64_t v90 = v122;
    uint64_t v91 = v121;

    v67(v139, v68);
    (*(void (**)(void, uint64_t))(v152 + 24))(0, v88);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4B30E8);
    sub_3D70B0();
    __swift_project_boxed_opaque_existential_1(v157, v157[3]);
    uint64_t v154 = sub_3D2790();
    sub_8349C();
    id v156 = (id)sub_3D8560();
    uint64_t v92 = sub_3D8500();
    uint64_t v93 = (uint64_t)v125;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v92 - 8) + 56))(v125, 1, 1, v92);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4AF988);
    sub_3D6E4(&qword_4AF990, &qword_4AF988);
    unint64_t v94 = v89;
    sub_54FBC();
    sub_3D5C20();
    sub_250FC(v93, &qword_4AD460);

    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v157);
    sub_3D2D20();
    sub_3D7160();
    uint64_t v95 = sub_3D6E4(&qword_4B30F0, &qword_4B30D0);
    int v96 = v129;
    uint64_t v97 = v128;
    sub_3D5A10();
    swift_release();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v91, v97);
    sub_3D3CD0();
    uint64_t v154 = v97;
    uint64_t v155 = v95;
    swift_getOpaqueTypeConformance2();
    uint64_t v98 = v131;
    sub_3D3A60();
    sub_3D5A40();
    sub_250FC((uint64_t)v157, &qword_4AF9A0);
    (*(void (**)(char *, uint64_t))(v130 + 8))(v96, v98);
    Swift::String v146 = (char *)swift_allocObject();
    swift_unknownObjectWeakInit();
    int v99 = v127;
    v140(v127, v94, v48);
    uint64_t v81 = v136;
    int v100 = v124;
    uint64_t v76 = v147;
    uint64_t v80 = v137;
    (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v124, v147, v137);
    uint64_t v101 = v148;
    unint64_t v102 = (*(unsigned __int8 *)(v148 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v148 + 80);
    unint64_t v103 = (v126 + *(unsigned __int8 *)(v81 + 80) + v102) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
    unint64_t v104 = (v123 + v103 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v105 = swift_allocObject();
    uint64_t v107 = v152;
    uint64_t v106 = v153;
    *(void *)(v105 + 16) = v150;
    *(void *)(v105 + 24) = v107;
    (*(void (**)(unint64_t, char *, uint64_t))(v101 + 32))(v105 + v102, v99, v106);
    (*(void (**)(unint64_t, char *, uint64_t))(v81 + 32))(v105 + v103, v100, v80);
    *(void *)(v105 + v104) = v146;
    uint64_t v48 = v153;
    sub_3D6E4(&qword_4B30F8, &qword_4B30E0);
    uint64_t v108 = v133;
    int v109 = v142;
    uint64_t v110 = sub_3D5B60();
    swift_release();
    (*(void (**)(char *, uint64_t))(v132 + 8))(v109, v108);
    (*(void (**)(uint64_t, uint64_t))(v152 + 48))(v110, v150);
    unint64_t v58 = *(void (**)(char *, uint64_t))(v101 + 8);
  }
  v58(v151, v48);
  return (*(uint64_t (**)(char *, uint64_t))(v81 + 8))(v76, v80);
}

void sub_33E690(uint64_t *a1)
{
  uint64_t v2 = sub_3D5640();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *a1;
  if (v6)
  {
    swift_errorRetain();
    sub_3D55C0();
    swift_errorRetain();
    swift_errorRetain();
    id v7 = sub_3D5630();
    os_log_type_t v8 = sub_3D83F0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      uint64_t v14 = v6;
      uint64_t v15 = v10;
      *(_DWORD *)uint64_t v9 = 136315138;
      v13[1] = v9 + 4;
      swift_errorRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_4ABD78);
      uint64_t v11 = sub_3D7DC0();
      uint64_t v14 = sub_1FB7E8(v11, v12, &v15);
      sub_3D8930();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v7, v8, "Failed to load artwork for image view: %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_33E8D8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v40 = a3;
  uint64_t v11 = sub_3D2EE0();
  uint64_t v43 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v41 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_3D3D10();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_3D5640();
  uint64_t v37 = *(void *)(v17 - 8);
  uint64_t v38 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *a1;
  uint64_t v39 = a4 + 16;
  sub_3D55C0();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v42 = a2;
  v21(v16, a2, v13);
  uint64_t v22 = sub_3D5630();
  os_log_type_t v23 = sub_3D83E0();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v33 = v22;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v35 = v11;
    uint64_t v25 = (uint8_t *)v24;
    uint64_t v26 = swift_slowAlloc();
    uint64_t v32 = v13;
    uint64_t v27 = (void *)v26;
    uint64_t v36 = a6;
    *(_DWORD *)uint64_t v25 = 138412290;
    uint64_t v34 = v20;
    uint64_t v28 = sub_3D3CA0();
    uint64_t v44 = v28;
    uint64_t v20 = v34;
    a6 = v36;
    sub_3D8930();
    *uint64_t v27 = v28;
    uint64_t v22 = v33;
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v32);
    _os_log_impl(&dword_0, v22, v23, "Received async image for: %@", v25, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B24C0);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v11 = v35;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }

  (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v38);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4B3118);
  sub_3D3790();
  uint64_t v44 = v20;
  uint64_t v29 = v41;
  sub_3D3C70();
  sub_3D4500();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v11);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(a6 + 72))(v20, a5, a6);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_33ECE0()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_33ED18()
{
  uint64_t v1 = sub_3D3D10();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B3118);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = (*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();

  return _swift_deallocObject(v0, v11 + 8, v10);
}

uint64_t sub_33EE80(uint64_t *a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(sub_3D3D10() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = v6 + *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4B3118) - 8);
  unint64_t v9 = (v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = *(void *)(v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_33E8D8(a1, v1 + v6, v1 + v9, v10, v3, v4);
}

char *sub_33EF98(uint64_t a1, char *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BE980);
  uint64_t v61 = *(void *)(v4 - 8);
  uint64_t v62 = v4;
  __chkstk_darwin(v4);
  unint64_t v60 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_3D2EE0();
  uint64_t v67 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v11 = (char *)&v59 - v10;
  __chkstk_darwin(v12);
  uint64_t v66 = (char *)&v59 - v13;
  uint64_t v14 = sub_3D5640();
  uint64_t v64 = *(void *)(v14 - 8);
  uint64_t v65 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v59 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v59 - v21;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B3118);
  sub_3D3790();
  sub_3D44F0();
  swift_release();
  unint64_t v63 = (char *)v68;
  if (v68)
  {
    sub_3D55C0();
    (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v66, a1, v6);
    uint64_t v24 = sub_3D5630();
    os_log_type_t v25 = sub_3D83E0();
    uint64_t v26 = v6;
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 138412290;
      uint64_t v29 = v22;
      uint64_t v31 = v66;
      uint64_t v30 = v67;
      uint64_t v62 = v26;
      uint64_t v32 = sub_3D2ED0();
      uint64_t v68 = v32;
      sub_3D8930();
      void *v28 = v32;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v62);
      uint64_t v22 = v29;
      _os_log_impl(&dword_0, v24, v25, "Found memory-cached value for request: %@", v27, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B24C0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v67 + 8))(v66, v6);
    }
    uint64_t v47 = v64;
    uint64_t v46 = v65;
    uint64_t v35 = v63;

    (*(void (**)(char *, uint64_t))(v47 + 8))(v22, v46);
  }
  else
  {
    unint64_t v63 = v8;
    uint64_t v66 = v19;
    uint64_t v33 = v60;
    sub_3D3780();
    uint64_t v34 = v62;
    sub_3D3770();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v33, v34);
    uint64_t v35 = (char *)v68;
    if (v68)
    {
      unint64_t v60 = a2;
      uint64_t v61 = v23;
      uint64_t v36 = v66;
      sub_3D55C0();
      uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t))(v67 + 16);
      uint64_t v62 = a1;
      uint64_t v38 = v6;
      v37(v11, a1, v6);
      uint64_t v39 = sub_3D5630();
      os_log_type_t v40 = sub_3D83E0();
      if (os_log_type_enabled(v39, v40))
      {
        uint64_t v41 = swift_slowAlloc();
        unint64_t v63 = v35;
        uint64_t v42 = (uint8_t *)v41;
        uint64_t v43 = (void *)swift_slowAlloc();
        uint64_t v44 = v67;
        *(_DWORD *)uint64_t v42 = 138412290;
        uint64_t v45 = sub_3D2ED0();
        uint64_t v68 = v45;
        uint64_t v36 = v66;
        sub_3D8930();
        void *v43 = v45;
        (*(void (**)(char *, uint64_t))(v44 + 8))(v11, v38);
        _os_log_impl(&dword_0, v39, v40, "Found disk-cached value for request: %@", v42, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B24C0);
        swift_arrayDestroy();
        swift_slowDealloc();
        uint64_t v35 = v63;
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v67 + 8))(v11, v6);
      }
      uint64_t v57 = v64;
      uint64_t v56 = v65;

      (*(void (**)(char *, uint64_t))(v57 + 8))(v36, v56);
      sub_3D3790();
      uint64_t v68 = (uint64_t)v35;
      sub_3D4500();
      swift_release();
    }
    else
    {
      uint64_t v48 = v16;
      sub_3D55C0();
      uint64_t v49 = v63;
      uint64_t v50 = v6;
      (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v63, a1, v6);
      os_log_type_t v51 = sub_3D5630();
      uint64_t v52 = sub_3D83E0();
      if (os_log_type_enabled(v51, (os_log_type_t)v52))
      {
        uint64_t v53 = (uint8_t *)swift_slowAlloc();
        uint64_t v54 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v53 = 138412290;
        uint64_t v55 = sub_3D2ED0();
        uint64_t v68 = v55;
        sub_3D8930();
        *uint64_t v54 = v55;
        (*(void (**)(char *, uint64_t))(v67 + 8))(v49, v50);
        _os_log_impl(&dword_0, v51, (os_log_type_t)v52, "Unable to find cached value for request: %@", v53, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B24C0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v67 + 8))(v49, v6);
      }

      (*(void (**)(char *, uint64_t))(v64 + 8))(v48, v65);
      return 0;
    }
  }
  return v35;
}

uint64_t dispatch thunk of ImageViewProtocol.image.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ImageViewProtocol.image.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ImageViewProtocol.image.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ImageViewProtocol.requestCancellable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ImageViewProtocol.requestCancellable.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ImageViewProtocol.requestCancellable.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of static ImageViewProtocol.checkCacheSynchronously()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ImageViewProtocol.animate(toImage:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

unint64_t PopoverTipPresentationState.debugDescription.getter()
{
  sub_2270B8(v0, (uint64_t)&v7);
  unint64_t v1 = 0x7974706D65;
  switch(v8[96])
  {
    case 1:
      unint64_t v5 = 0;
      unint64_t v6 = 0xE000000000000000;
      sub_3D8BC0(17);
      swift_bridgeObjectRelease();
      uint64_t v2 = 0x69746E6573657270;
      goto LABEL_6;
    case 2:
      unint64_t v5 = 0;
      unint64_t v6 = 0xE000000000000000;
      sub_3D8BC0(16);
      swift_bridgeObjectRelease();
      uint64_t v2 = 0x65746E6573657270;
      goto LABEL_8;
    case 3:
      unint64_t v5 = 0;
      unint64_t v6 = 0xE000000000000000;
      sub_3D8BC0(17);
      swift_bridgeObjectRelease();
      uint64_t v2 = 0x697373696D736964;
LABEL_6:
      unint64_t v3 = 0xEE003D64695B676ELL;
      goto LABEL_9;
    case 4:
      unint64_t v5 = 0;
      unint64_t v6 = 0xE000000000000000;
      sub_3D8BC0(16);
      swift_bridgeObjectRelease();
      uint64_t v2 = 0x657373696D736964;
LABEL_8:
      unint64_t v3 = 0xED00003D64695B64;
LABEL_9:
      unint64_t v5 = v2;
      unint64_t v6 = v3;
      sub_17264();
      v13._countAndFlagsBits = sub_3D7F30();
      sub_3D7E90(v13);
      swift_bridgeObjectRelease();
      v14._countAndFlagsBits = 93;
      v14._object = (void *)0xE100000000000000;
      sub_3D7E90(v14);
      unint64_t v1 = v5;
      break;
    case 5:
      return v1;
    default:
      sub_1C1140((uint64_t)v8, (uint64_t)&v5);
      sub_3D8BC0(27);
      swift_bridgeObjectRelease();
      v9._countAndFlagsBits = sub_3D92B0();
      sub_3D7E90(v9);
      swift_bridgeObjectRelease();
      v10._countAndFlagsBits = 0x3D6469202CLL;
      v10._object = (void *)0xE500000000000000;
      sub_3D7E90(v10);
      sub_17264();
      v11._countAndFlagsBits = sub_3D7F30();
      sub_3D7E90(v11);
      swift_bridgeObjectRelease();
      v12._countAndFlagsBits = 93;
      v12._object = (void *)0xE100000000000000;
      sub_3D7E90(v12);
      unint64_t v1 = 0xD000000000000011;
      sub_1A0334((uint64_t)&v5);
      break;
  }
  return v1;
}

uint64_t PopoverTipPresentationState.canPresentNextTip.getter()
{
  sub_2270B8(v0, (uint64_t)v3);
  if (v10 == 4) {
    return 1;
  }
  if (v10 == 5)
  {
    int8x16_t v1 = vorrq_s8(vorrq_s8(vorrq_s8(v6, v8), vorrq_s8(v7, v9)), vorrq_s8(v4, v5));
    if (!(*(void *)&vorr_s8(*(int8x8_t *)v1.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v1, v1, 8uLL)) | v3[1] | v3[0])) {
      return 1;
    }
  }
  sub_227114((uint64_t)v3);
  return 0;
}

uint64_t destroy for PopoverTipPresentationState(uint64_t result)
{
  uint64_t v1 = result;
  unsigned int v2 = *(unsigned __int8 *)(result + 112);
  if (v2 >= 5) {
    unsigned int v2 = *(_DWORD *)result + 5;
  }
  if (!v2)
  {
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v1 + 32);
    uint64_t result = swift_unknownObjectWeakDestroy();
    if (*(void *)(v1 + 80)) {
      uint64_t result = swift_release();
    }
    if (*(void *)(v1 + 96))
    {
      return swift_release();
    }
  }
  return result;
}

uint64_t initializeWithCopy for PopoverTipPresentationState(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 112);
  if (v4 >= 5) {
    unsigned int v4 = *(_DWORD *)a2 + 5;
  }
  switch(v4)
  {
    case 0u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v5;
      long long v6 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 56) = v6;
      uint64_t v7 = v6;
      int8x16_t v8 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
      swift_retain();
      v8(a1 + 32, a2 + 32, v7);
      swift_unknownObjectWeakCopyInit();
      uint64_t v9 = *(void *)(a2 + 80);
      if (v9)
      {
        uint64_t v10 = *(void *)(a2 + 88);
        *(void *)(a1 + 80) = v9;
        *(void *)(a1 + 88) = v10;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      }
      uint64_t v14 = *(void *)(a2 + 96);
      if (v14)
      {
        uint64_t v15 = *(void *)(a2 + 104);
        *(void *)(a1 + 96) = v14;
        *(void *)(a1 + 104) = v15;
        swift_retain();
      }
      else
      {
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      }
      *(unsigned char *)(a1 + 112) = 0;
      break;
    case 1u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 112) = 1;
      break;
    case 2u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 112) = 2;
      break;
    case 3u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 112) = 3;
      break;
    case 4u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 112) = 4;
      break;
    default:
      long long v11 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v11;
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      long long v12 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v12;
      long long v13 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v13;
      break;
  }
  return a1;
}

uint64_t assignWithCopy for PopoverTipPresentationState(uint64_t a1, long long *a2)
{
  if ((long long *)a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 112);
    if (v4 >= 5) {
      unsigned int v4 = *(_DWORD *)a1 + 5;
    }
    if (!v4)
    {
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(a1 + 32);
      swift_unknownObjectWeakDestroy();
      if (*(void *)(a1 + 80)) {
        swift_release();
      }
      if (*(void *)(a1 + 96)) {
        swift_release();
      }
    }
    unsigned int v5 = *((unsigned __int8 *)a2 + 112);
    if (v5 >= 5) {
      unsigned int v5 = *(_DWORD *)a2 + 5;
    }
    switch(v5)
    {
      case 0u:
        *(_OWORD *)a1 = *a2;
        *(void *)(a1 + 16) = *((void *)a2 + 2);
        *(void *)(a1 + 24) = *((void *)a2 + 3);
        uint64_t v6 = *((void *)a2 + 7);
        *(void *)(a1 + 56) = v6;
        *(void *)(a1 + 64) = *((void *)a2 + 8);
        uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v6 - 8);
        swift_retain();
        v7(a1 + 32, (uint64_t)(a2 + 2), v6);
        swift_unknownObjectWeakCopyInit();
        uint64_t v8 = *((void *)a2 + 10);
        if (v8)
        {
          uint64_t v9 = *((void *)a2 + 11);
          *(void *)(a1 + 80) = v8;
          *(void *)(a1 + 88) = v9;
          swift_retain();
        }
        else
        {
          *(_OWORD *)(a1 + 80) = a2[5];
        }
        uint64_t v16 = *((void *)a2 + 12);
        if (v16)
        {
          uint64_t v17 = *((void *)a2 + 13);
          *(void *)(a1 + 96) = v16;
          *(void *)(a1 + 104) = v17;
          swift_retain();
        }
        else
        {
          *(_OWORD *)(a1 + 96) = a2[6];
        }
        *(unsigned char *)(a1 + 112) = 0;
        break;
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 112) = 1;
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 112) = 2;
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 112) = 3;
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 112) = 4;
        break;
      default:
        long long v10 = *a2;
        long long v11 = a2[1];
        long long v12 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v12;
        *(_OWORD *)a1 = v10;
        *(_OWORD *)(a1 + 16) = v11;
        long long v13 = a2[4];
        long long v14 = a2[5];
        long long v15 = a2[6];
        *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
        *(_OWORD *)(a1 + 80) = v14;
        *(_OWORD *)(a1 + 96) = v15;
        *(_OWORD *)(a1 + 64) = v13;
        break;
    }
  }
  return a1;
}

uint64_t initializeWithTake for PopoverTipPresentationState(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(unsigned __int8 *)(a2 + 112);
  if (v4 >= 5) {
    unsigned int v4 = *(_DWORD *)a2 + 5;
  }
  switch(v4)
  {
    case 0u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      uint64_t v5 = *(void *)(a2 + 24);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = v5;
      long long v6 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v6;
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_unknownObjectWeakTakeInit();
      uint64_t v7 = *(void *)(a2 + 80);
      if (v7)
      {
        uint64_t v8 = *(void *)(a2 + 88);
        *(void *)(a1 + 80) = v7;
        *(void *)(a1 + 88) = v8;
      }
      else
      {
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      }
      uint64_t v12 = *(void *)(a2 + 96);
      if (v12)
      {
        uint64_t v13 = *(void *)(a2 + 104);
        *(void *)(a1 + 96) = v12;
        *(void *)(a1 + 104) = v13;
      }
      else
      {
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      }
      *(unsigned char *)(a1 + 112) = 0;
      break;
    case 1u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 112) = 1;
      break;
    case 2u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 112) = 2;
      break;
    case 3u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 112) = 3;
      break;
    case 4u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 112) = 4;
      break;
    default:
      long long v9 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v9;
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      long long v10 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v10;
      long long v11 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v11;
      break;
  }
  return a1;
}

uint64_t assignWithTake for PopoverTipPresentationState(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 112);
    if (v4 >= 5) {
      unsigned int v4 = *(_DWORD *)a1 + 5;
    }
    if (!v4)
    {
      swift_release();
      __swift_destroy_boxed_opaque_existential_1(a1 + 32);
      swift_unknownObjectWeakDestroy();
      if (*(void *)(a1 + 80)) {
        swift_release();
      }
      if (*(void *)(a1 + 96)) {
        swift_release();
      }
    }
    unsigned int v5 = *(unsigned __int8 *)(a2 + 112);
    if (v5 >= 5) {
      unsigned int v5 = *(_DWORD *)a2 + 5;
    }
    switch(v5)
    {
      case 0u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        uint64_t v6 = *(void *)(a2 + 24);
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(void *)(a1 + 24) = v6;
        long long v7 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v7;
        *(void *)(a1 + 64) = *(void *)(a2 + 64);
        swift_unknownObjectWeakTakeInit();
        uint64_t v8 = *(void *)(a2 + 80);
        if (v8)
        {
          uint64_t v9 = *(void *)(a2 + 88);
          *(void *)(a1 + 80) = v8;
          *(void *)(a1 + 88) = v9;
        }
        else
        {
          *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        }
        uint64_t v13 = *(void *)(a2 + 96);
        if (v13)
        {
          uint64_t v14 = *(void *)(a2 + 104);
          *(void *)(a1 + 96) = v13;
          *(void *)(a1 + 104) = v14;
        }
        else
        {
          *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        }
        *(unsigned char *)(a1 + 112) = 0;
        break;
      case 1u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 112) = 1;
        break;
      case 2u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 112) = 2;
        break;
      case 3u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 112) = 3;
        break;
      case 4u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 112) = 4;
        break;
      default:
        long long v10 = *(_OWORD *)(a2 + 80);
        *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 80) = v10;
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
        long long v11 = *(_OWORD *)(a2 + 16);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(_OWORD *)(a1 + 16) = v11;
        long long v12 = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 48) = v12;
        break;
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for PopoverTipPresentationState(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 113)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 112);
  if (v3 >= 6) {
    return (v3 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PopoverTipPresentationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(unsigned char *)(result + 112) = 0;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    *(_DWORD *)uint64_t result = a2 - 251;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 113) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 113) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 112) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_340344(uint64_t a1)
{
  uint64_t result = *(unsigned __int8 *)(a1 + 112);
  if (result >= 5) {
    return (*(_DWORD *)a1 + 5);
  }
  return result;
}

uint64_t sub_340360(uint64_t result, unsigned int a2)
{
  if (a2 > 4)
  {
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    unsigned int v2 = a2 - 5;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)uint64_t result = 0u;
    LOBYTE(a2) = 5;
    *(_DWORD *)uint64_t result = v2;
  }
  *(unsigned char *)(result + 112) = a2;
  return result;
}

ValueMetadata *type metadata accessor for PopoverTipPresentationState()
{
  return &type metadata for PopoverTipPresentationState;
}

uint64_t static String.loadingShelfID.getter()
{
  return 0x53676E6964616F6CLL;
}

unint64_t static String.listenNowHighlightShelfID.getter()
{
  return 0xD000000000000019;
}

unint64_t static String.pageHighlightShelfID.getter()
{
  return 0xD000000000000014;
}

uint64_t MetricsPageEnterGate.__allocating_init(sender:)(uint64_t a1, uint64_t a2)
{
  return sub_340860(a1, a2, sub_340F78);
}

uint64_t MetricsPageEnterGate.hasPageMetrics.setter(char a1)
{
  uint64_t v3 = sub_3D6E80();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = swift_beginAccess();
  char v8 = *(unsigned char *)(v1 + 34);
  *(unsigned char *)(v1 + 34) = a1;
  if (v8 & 1) == 0 && (a1)
  {
    uint64_t result = swift_beginAccess();
    if (*(unsigned char *)(v1 + 32) == 1)
    {
      uint64_t result = swift_unknownObjectWeakLoadStrong();
      if (result)
      {
        uint64_t v9 = *(void *)(v1 + 24);
        uint64_t ObjectType = swift_getObjectType();
        sub_3D6E70();
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 8))(v6, ObjectType, v9);
        swift_unknownObjectRelease();
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
      }
    }
  }
  return result;
}

uint64_t MetricsPageEnterGate.hasAppeared.setter(char a1)
{
  int v3 = a1 & 1;
  uint64_t v4 = sub_3D6E80();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = swift_beginAccess();
  int v9 = *(unsigned __int8 *)(v1 + 32);
  *(unsigned char *)(v1 + 32) = a1;
  if (v9 != v3)
  {
    uint64_t result = swift_beginAccess();
    if (*(unsigned char *)(v1 + 34) == 1 && (a1 & 1) != 0)
    {
      uint64_t result = swift_unknownObjectWeakLoadStrong();
      if (result)
      {
        uint64_t v10 = *(void *)(v1 + 24);
        uint64_t ObjectType = swift_getObjectType();
        sub_3D6E70();
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v10 + 8))(v7, ObjectType, v10);
        swift_unknownObjectRelease();
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
      }
    }
  }
  return result;
}

uint64_t MetricsPageEnterGate.hasExitedWhileAppeared.setter(char a1)
{
  uint64_t v3 = sub_3D6E80();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t result = swift_beginAccess();
  int v8 = *(unsigned __int8 *)(v1 + 33);
  *(unsigned char *)(v1 + 33) = a1;
  if (v8 == 1 && (a1 & 1) == 0)
  {
    uint64_t result = swift_beginAccess();
    if (*(unsigned char *)(v1 + 34))
    {
      uint64_t result = swift_unknownObjectWeakLoadStrong();
      if (result)
      {
        uint64_t v9 = *(void *)(v1 + 24);
        uint64_t ObjectType = swift_getObjectType();
        sub_3D6E50();
        (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 8))(v6, ObjectType, v9);
        swift_unknownObjectRelease();
        return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
      }
    }
  }
  return result;
}

uint64_t MetricsPageEnterGate.init(sender:)(uint64_t a1, uint64_t a2)
{
  return sub_340860(a1, a2, sub_340F20);
}

uint64_t sub_340860(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = a3(a1, v3, ObjectType, a2);
  swift_unknownObjectRelease();
  return v8;
}

void (*MetricsPageEnterGate.hasAppeared.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[6] = v1;
  uint64_t v4 = sub_3D6E80();
  v3[7] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[8] = v5;
  v3[9] = malloc(*(void *)(v5 + 64));
  swift_beginAccess();
  *((unsigned char *)v3 + 80) = *(unsigned char *)(v1 + 32);
  return sub_340984;
}

void sub_340984(uint64_t a1, char a2)
{
  unsigned int v2 = *(void **)a1;
  int v3 = *(unsigned __int8 *)(*(void *)a1 + 80);
  if (a2)
  {
    uint64_t v4 = (void *)v2[9];
    MetricsPageEnterGate.hasAppeared.setter(*(unsigned char *)(*(void *)a1 + 80));
  }
  else
  {
    uint64_t v5 = v2[6];
    int v6 = *(unsigned __int8 *)(v5 + 32);
    *(unsigned char *)(v5 + 32) = v3;
    if (v3 != v6)
    {
      uint64_t v7 = v2[6];
      swift_beginAccess();
      if (v3)
      {
        if ((*(unsigned char *)(v7 + 34) & 1) != 0 && swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v9 = v2[8];
          uint64_t v8 = v2[9];
          uint64_t v10 = v2[7];
          uint64_t v11 = *(void *)(v2[6] + 24);
          uint64_t ObjectType = swift_getObjectType();
          sub_3D6E70();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 8))(v8, ObjectType, v11);
          swift_unknownObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
        }
      }
    }
    uint64_t v4 = (void *)v2[9];
  }
  free(v4);

  free(v2);
}

uint64_t MetricsPageEnterGate.hasExitedWhileAppeared.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 33);
}

void (*MetricsPageEnterGate.hasExitedWhileAppeared.modify(void *a1))(uint64_t a1, char a2)
{
  int v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[6] = v1;
  uint64_t v4 = sub_3D6E80();
  v3[7] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[8] = v5;
  v3[9] = malloc(*(void *)(v5 + 64));
  swift_beginAccess();
  *((unsigned char *)v3 + 80) = *(unsigned char *)(v1 + 33);
  return sub_340B9C;
}

void sub_340B9C(uint64_t a1, char a2)
{
  unsigned int v2 = *(void **)a1;
  char v3 = *(unsigned char *)(*(void *)a1 + 80);
  if (a2)
  {
    uint64_t v4 = (void *)v2[9];
    MetricsPageEnterGate.hasExitedWhileAppeared.setter(v3);
  }
  else
  {
    uint64_t v5 = v2[6];
    int v6 = *(unsigned __int8 *)(v5 + 33);
    *(unsigned char *)(v5 + 33) = v3;
    if (v6 == 1 && (v3 & 1) == 0)
    {
      uint64_t v7 = v2[6];
      swift_beginAccess();
      if (*(unsigned char *)(v7 + 34))
      {
        if (swift_unknownObjectWeakLoadStrong())
        {
          uint64_t v9 = v2[8];
          uint64_t v8 = v2[9];
          uint64_t v10 = v2[7];
          uint64_t v11 = *(void *)(v2[6] + 24);
          uint64_t ObjectType = swift_getObjectType();
          sub_3D6E50();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 8))(v8, ObjectType, v11);
          swift_unknownObjectRelease();
          (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
        }
      }
    }
    uint64_t v4 = (void *)v2[9];
  }
  free(v4);

  free(v2);
}

uint64_t MetricsPageEnterGate.hasPageMetrics.getter()
{
  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 34);
}

void (*MetricsPageEnterGate.hasPageMetrics.modify(void *a1))(uint64_t a1, char a2)
{
  char v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[6] = v1;
  uint64_t v4 = sub_3D6E80();
  v3[7] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[8] = v5;
  v3[9] = malloc(*(void *)(v5 + 64));
  swift_beginAccess();
  *((unsigned char *)v3 + 80) = *(unsigned char *)(v1 + 34);
  return sub_340DB0;
}

void sub_340DB0(uint64_t a1, char a2)
{
  unsigned int v2 = *(void **)a1;
  int v3 = *(unsigned __int8 *)(*(void *)a1 + 80);
  if (a2)
  {
    uint64_t v4 = (void *)v2[9];
    MetricsPageEnterGate.hasPageMetrics.setter(v3);
  }
  else
  {
    uint64_t v5 = v2[6];
    char v6 = *(unsigned char *)(v5 + 34);
    *(unsigned char *)(v5 + 34) = v3;
    if ((v6 & 1) == 0)
    {
      if (v3)
      {
        uint64_t v7 = v2[6];
        swift_beginAccess();
        if (*(unsigned char *)(v7 + 32) == 1)
        {
          if (swift_unknownObjectWeakLoadStrong())
          {
            uint64_t v9 = v2[8];
            uint64_t v8 = v2[9];
            uint64_t v10 = v2[7];
            uint64_t v11 = *(void *)(v2[6] + 24);
            uint64_t ObjectType = swift_getObjectType();
            sub_3D6E70();
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 8))(v8, ObjectType, v11);
            swift_unknownObjectRelease();
            (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
          }
        }
      }
    }
    uint64_t v4 = (void *)v2[9];
  }
  free(v4);

  free(v2);
}

uint64_t MetricsPageEnterGate.deinit()
{
  sub_8CED8(v0 + 16);
  return v0;
}

uint64_t MetricsPageEnterGate.__deallocating_deinit()
{
  sub_8CED8(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t sub_340F20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(a2 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_WORD *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 34) = 0;
  *(void *)(a2 + 24) = a4;
  swift_unknownObjectWeakAssign();
  return a2;
}

uint64_t sub_340F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 24) = 0;
  swift_unknownObjectWeakInit();
  *(_WORD *)(v5 + 32) = 0;
  *(unsigned char *)(v5 + 34) = 0;
  *(void *)(v5 + 24) = a4;
  swift_unknownObjectWeakAssign();
  return v5;
}

uint64_t sub_340FE0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 32);
  return result;
}

uint64_t sub_341028(char *a1)
{
  return MetricsPageEnterGate.hasAppeared.setter(*a1);
}

uint64_t sub_341050@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 33);
  return result;
}

uint64_t sub_341098(char *a1)
{
  return MetricsPageEnterGate.hasExitedWhileAppeared.setter(*a1);
}

uint64_t sub_3410C0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t result = swift_beginAccess();
  *a2 = *(unsigned char *)(v3 + 34);
  return result;
}

uint64_t sub_341108(char *a1)
{
  return MetricsPageEnterGate.hasPageMetrics.setter(*a1);
}

uint64_t type metadata accessor for MetricsPageEnterGate()
{
  return self;
}

uint64_t method lookup function for MetricsPageEnterGate(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for MetricsPageEnterGate);
}

uint64_t dispatch thunk of MetricsPageEnterGate.__allocating_init(sender:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t HighlightResource.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for HighlightResource() + 24);

  return sub_30674(v3, a1);
}

uint64_t type metadata accessor for HighlightResource()
{
  uint64_t result = qword_4BEAB0;
  if (!qword_4BEAB0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t HighlightResource.init(id:adamID:url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  uint64_t v6 = (uint64_t)a5 + *(int *)(type metadata accessor for HighlightResource() + 24);

  return sub_EA1B0(a4, v6);
}

uint64_t sub_341260(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_285588(*a1, *a2);
}

Swift::Int sub_34126C()
{
  return sub_3D9180();
}

uint64_t sub_3412F8()
{
  sub_3D7E60();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_341370()
{
  return sub_3D9180();
}

uint64_t sub_3413F8@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_342798(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_341428(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE200000000000000;
  unint64_t v4 = 0xE600000000000000;
  uint64_t v5 = 0x64496D616461;
  if (v2 != 1)
  {
    uint64_t v5 = 7107189;
    unint64_t v4 = 0xE300000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 25705;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_341470()
{
  uint64_t v1 = 0x64496D616461;
  if (*v0 != 1) {
    uint64_t v1 = 7107189;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 25705;
  }
}

uint64_t sub_3414B4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_342798(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_3414DC(uint64_t a1)
{
  unint64_t v2 = sub_341738();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_341518(uint64_t a1)
{
  unint64_t v2 = sub_341738();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t HighlightResource.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEA40);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_341738();
  sub_3D91F0();
  char v12 = 0;
  sub_3D8F20();
  if (!v2)
  {
    uint64_t v11 = *(void *)(v3 + 16);
    v10[15] = 1;
    sub_169A4();
    sub_3D8F50();
    type metadata accessor for HighlightResource();
    v10[14] = 2;
    sub_3D2350();
    sub_341AAC(&qword_4AE9E8);
    sub_3D8F10();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_341738()
{
  unint64_t result = qword_4BEA48;
  if (!qword_4BEA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BEA48);
  }
  return result;
}

uint64_t HighlightResource.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEA50);
  uint64_t v21 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for HighlightResource();
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t *)((char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_341738();
  sub_3D91D0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  }
  uint64_t v20 = v9;
  uint64_t v12 = (uint64_t)v6;
  uint64_t v13 = v21;
  uint64_t v14 = v22;
  char v27 = 0;
  uint64_t v15 = (uint64_t)v11;
  *uint64_t v11 = sub_3D8E90();
  v11[1] = v16;
  char v26 = 1;
  sub_16C5C();
  sub_3D8ED0();
  v11[2] = v24;
  sub_3D2350();
  char v25 = 2;
  sub_341AAC(&qword_4AEA08);
  uint64_t v17 = v23;
  sub_3D8E80();
  (*(void (**)(char *, uint64_t))(v13 + 8))(v8, v17);
  sub_EA1B0(v12, v15 + *(int *)(v20 + 24));
  sub_341AF0(v15, v14);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return sub_3F8DC(v15);
}

uint64_t sub_341AAC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_3D2350();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_341AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HighlightResource();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_341B54@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HighlightResource.init(from:)(a1, a2);
}

uint64_t sub_341B6C(void *a1)
{
  return HighlightResource.encode(to:)(a1);
}

uint64_t sub_341B84(uint64_t a1, uint64_t a2)
{
  return sub_5950C(a1, a2);
}

uint64_t *initializeBufferWithCopyOfBuffer for HighlightResource(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_3D2350();
    uint64_t v10 = *(void *)(v9 - 8);
    uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    swift_bridgeObjectRetain();
    if (v11(v8, 1, v9))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
      memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for HighlightResource(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_3D2350();
  uint64_t v8 = *(void *)(v5 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v4, 1, v5);
  if (!result)
  {
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8);
    return v7(v4, v5);
  }
  return result;
}

void *initializeWithCopy for HighlightResource(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = sub_3D2350();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
  swift_bridgeObjectRetain();
  if (v10(v7, 1, v8))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    memcpy(v6, v7, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

void *assignWithCopy for HighlightResource(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_3D2350();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  return a1;
}

uint64_t initializeWithTake for HighlightResource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = *(int *)(a3 + 24);
  uint64_t v5 = (void *)(a1 + v4);
  uint64_t v6 = (const void *)(a2 + v4);
  uint64_t v7 = sub_3D2350();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void *assignWithTake for HighlightResource(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_3D2350();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for HighlightResource(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_342374);
}

uint64_t sub_342374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for HighlightResource(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_34243C);
}

uint64_t sub_34243C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_3424E8()
{
  sub_3140C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unsigned char *storeEnumTagSinglePayload for HighlightResource.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x342658);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HighlightResource.CodingKeys()
{
  return &type metadata for HighlightResource.CodingKeys;
}

unint64_t sub_342694()
{
  unint64_t result = qword_4BEAF0;
  if (!qword_4BEAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BEAF0);
  }
  return result;
}

unint64_t sub_3426EC()
{
  unint64_t result = qword_4BEAF8;
  if (!qword_4BEAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BEAF8);
  }
  return result;
}

unint64_t sub_342744()
{
  unint64_t result = qword_4BEB00;
  if (!qword_4BEB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BEB00);
  }
  return result;
}

uint64_t sub_342798(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_4747D0;
  v6._object = a2;
  unint64_t v4 = sub_3D8E10(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

void sub_3427E4()
{
  qword_4ED1D8 = 0x402C000000000000;
}

uint64_t sub_3427F4()
{
  uint64_t v0 = sub_3D60D0();
  __swift_allocate_value_buffer(v0, qword_4BEB08);
  uint64_t v1 = (void *)__swift_project_value_buffer(v0, (uint64_t)qword_4BEB08);
  if (qword_4A8FE0 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_4ED1D8;
  Swift::OpaquePointer v3 = (char *)v1 + *(int *)(v0 + 20);
  uint64_t v4 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v5 = sub_3D62F0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104))(v3, v4, v5);
  *uint64_t v1 = v2;
  v1[1] = v2;
  return result;
}

uint64_t static HeroContainer.cardShape.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_4A8FE8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_3D60D0();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_4BEB08);

  return sub_342950(v3, a1);
}

uint64_t sub_342950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3D60D0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_3429B4()
{
  qword_4BEB20 = 0x4030000000000000;
}

double static HeroContainer.chinPadding.getter()
{
  return sub_342A94(&qword_4A8FF0, (uint64_t)&qword_4BEB20);
}

double static HeroContainer.chinHeightPercentage.getter()
{
  return 0.44;
}

double static HeroContainer.maxChinHeight(for:)(double a1, double a2)
{
  return a2 * 0.44;
}

double static HeroContainer.shelfCellHeight.getter@<D0>(_OWORD *a1@<X8>)
{
  double result = 1.33333333;
  *a1 = xmmword_3F7E40;
  return result;
}

double static HeroContainer.cardRatioHeightToWidth.getter()
{
  return 1.33333333;
}

double static HeroContainer.cardRatioWidthToHeight.getter()
{
  return 0.75;
}

void sub_342A2C()
{
  qword_4BEB28 = 0x402C000000000000;
}

double static HeroContainer.spaceBetweenTextAndButtons.getter()
{
  return sub_342A94(&qword_4A8FF8, (uint64_t)&qword_4BEB28);
}

void sub_342A60()
{
  qword_4BEB30 = 0x4020000000000000;
}

double static HeroContainer.spaceBetweenPlayButtonAndContextMenu.getter()
{
  return sub_342A94(&qword_4A9000, (uint64_t)&qword_4BEB30);
}

double sub_342A94(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *(double *)a2;
}

double sub_342AD0()
{
  if (qword_4A8FF8 != -1) {
    swift_once();
  }
  double v0 = *(double *)&qword_4BEB28;
  if (qword_4A8FF0 != -1) {
    swift_once();
  }
  double v1 = *(double *)&qword_4BEB20;
  if (qword_4A9000 != -1) {
    swift_once();
  }
  double result = -v1;
  *(double *)&qword_4BEB38 = -v0;
  unk_4BEB40 = -v1;
  *(double *)&qword_4BEB48 = -v1;
  unk_4BEB50 = -*(double *)&qword_4BEB30;
  return result;
}

double static HeroContainer.playButtonInsets.getter()
{
  if (qword_4A9008 != -1) {
    swift_once();
  }
  return *(double *)&qword_4BEB38;
}

double sub_342C04()
{
  if (qword_4A8FF8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_4BEB28;
  if (qword_4A8FF0 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_4BEB20;
  qword_4BEB58 = v0;
  unk_4BEB60 = qword_4BEB20;
  qword_4BEB68 = qword_4BEB20;
  unk_4BEB70 = qword_4BEB20;
  return result;
}

double static HeroContainer.buttonAreaOutsets.getter()
{
  if (qword_4A9010 != -1) {
    swift_once();
  }
  return *(double *)&qword_4BEB58;
}

id static HeroContainer.contextMenuPreviewParameters(bounds:)()
{
  id v0 = [objc_allocWithZone((Class)UIPreviewParameters) init];
  if (qword_4A8FE8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_3D60D0();
  __swift_project_value_buffer(v1, (uint64_t)qword_4BEB08);
  sub_3D60C0();
  uint64_t v2 = (void *)sub_3D64D0();
  sub_342E54((uint64_t)v6);
  id v3 = [self bezierPathWithCGPath:v2];

  [v0 setVisiblePath:v3];
  id v4 = [self clearColor];
  [v0 setBackgroundColor:v4];

  return v0;
}

uint64_t sub_342E54(uint64_t a1)
{
  return a1;
}

uint64_t sub_342E8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_release();
  }
  return result;
}

ValueMetadata *type metadata accessor for HeroContainer()
{
  return &type metadata for HeroContainer;
}

uint64_t ObservableObjectAnimator.__allocating_init<A>(_:keyPath:)(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = swift_allocObject();
  ObservableObjectAnimator.init<A>(_:keyPath:)(a1, a2, a3);
  return v6;
}

void *ObservableObjectAnimator.init<A>(_:keyPath:)(uint64_t a1, void *a2, uint64_t a3)
{
  id v4 = v3;
  uint64_t v17 = *v3;
  uint64_t v8 = *(void *)(*a2 + class metadata base offset for KeyPath);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v11 = (char *)&v17 - v10;
  v3[5] = 0;
  void v3[2] = a1;
  int v12 = (void *)swift_allocObject();
  v12[2] = a3;
  v12[3] = a1;
  v12[4] = a2;
  v3[3] = sub_34321C;
  v3[4] = v12;
  swift_unknownObjectRetain_n();
  swift_retain();
  sub_3D5820();
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  int v14 = (void *)swift_allocObject();
  v14[2] = *(void *)(v17 + 80);
  v14[3] = v8;
  v14[4] = a3;
  v14[5] = v13;
  swift_getAssociatedConformanceWitness();
  swift_retain();
  uint64_t v15 = sub_3D5CB0();
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v11, AssociatedTypeWitness);
  swift_release();
  v4[5] = v15;
  swift_release();
  return v4;
}

uint64_t sub_343184()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_3431DC()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_34321C()
{
  return sub_343184();
}

uint64_t sub_343228()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_343260()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    __chkstk_darwin(result);
    sub_3D6900();
    sub_3D5FB0();
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_343338()
{
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_343370()
{
  return sub_343260();
}

uint64_t sub_34337C()
{
  return swift_release();
}

uint64_t ObservableObjectAnimator.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ObservableObjectAnimator.__deallocating_deinit()
{
  ObservableObjectAnimator.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_343468@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ObservableObjectAnimator();
  uint64_t result = sub_3D5830();
  *a1 = result;
  return result;
}

uint64_t sub_3434AC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ObservableObjectAnimator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for ObservableObjectAnimator(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ObservableObjectAnimator);
}

uint64_t dispatch thunk of ObservableObjectAnimator.__allocating_init<A>(_:keyPath:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_343550()
{
  return sub_34337C();
}

uint64_t sub_343570()
{
  return sub_3D6140();
}

uint64_t sub_343594(uint64_t a1)
{
  uint64_t v2 = sub_3D5DB0();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_3D6150();
}

uint64_t HeroContainerModifier.init()@<X0>(uint64_t *a1@<X8>)
{
  *a1 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4B4E48);
  swift_storeEnumTagMultiPayload();
  uint64_t v2 = (char *)a1 + *(int *)(type metadata accessor for HeroContainerModifier() + 20);
  uint64_t result = swift_getKeyPath();
  *(void *)uint64_t v2 = result;
  v2[8] = 0;
  return result;
}

uint64_t sub_3436CC()
{
  return sub_3D6140();
}

uint64_t type metadata accessor for HeroContainerModifier()
{
  uint64_t result = qword_4BECC8;
  if (!qword_4BECC8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t HeroContainerModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a1;
  uint64_t v71 = a2;
  uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEBF8);
  __chkstk_darwin(v67);
  uint64_t v69 = (uint64_t)&v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEC00);
  __chkstk_darwin(v68);
  uint64_t v70 = (uint64_t)&v63 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_3D5DB0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEC08);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEC10);
  __chkstk_darwin(v12);
  int v14 = (char *)&v63 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEC18);
  __chkstk_darwin(v65);
  uint64_t v16 = (char *)&v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEC20);
  __chkstk_darwin(v66);
  uint64_t v64 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_3D60D0();
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v63 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_4A8FE8 != -1) {
    swift_once();
  }
  uint64_t v21 = __swift_project_value_buffer(v18, (uint64_t)qword_4BEB08);
  sub_342950(v21, (uint64_t)v20);
  uint64_t v22 = (uint64_t)&v14[*(int *)(v12 + 36)];
  sub_342950((uint64_t)v20, v22);
  *(unsigned char *)(v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BEC28) + 36)) = 0;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEC30);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(v14, v63, v23);
  sub_34498C(&qword_4B4E48, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t))(v6 + 88))(v8, v5) == enum case for ColorScheme.dark(_:))
  {
    sub_3D6750();
    uint64_t v24 = sub_3D6760();
    swift_release();
  }
  else
  {
    sub_3D6730();
    uint64_t v25 = v6;
    uint64_t v24 = sub_3D6760();
    swift_release();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v5);
  }
  uint64_t v26 = v2 + *(int *)(type metadata accessor for HeroContainerModifier() + 20);
  uint64_t v27 = *(void *)v26;
  char v28 = *(unsigned char *)(v26 + 8);
  sub_D2320(*(void *)v26, v28);
  sub_344704(v27, v28);
  sub_D2388(v27, v28);
  sub_3D5DF0();
  sub_342950((uint64_t)v20, (uint64_t)v11);
  uint64_t v29 = &v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BEC38) + 36)];
  long long v30 = v73;
  *(_OWORD *)uint64_t v29 = v72;
  *((_OWORD *)v29 + 1) = v30;
  *((void *)v29 + 4) = v74;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEC40);
  *(void *)&v11[*(int *)(v31 + 52)] = v24;
  *(_WORD *)&v11[*(int *)(v31 + 56)] = 256;
  uint64_t v32 = sub_3D68B0();
  uint64_t v34 = v33;
  uint64_t v35 = (uint64_t *)&v11[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BEC48) + 36)];
  *uint64_t v35 = v32;
  v35[1] = v34;
  uint64_t v36 = sub_3D68B0();
  uint64_t v38 = v37;
  uint64_t v39 = (uint64_t)&v16[*(int *)(v65 + 36)];
  sub_153B4((uint64_t)v11, v39, &qword_4BEC08);
  os_log_type_t v40 = (uint64_t *)(v39 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BEC50) + 36));
  *os_log_type_t v40 = v36;
  v40[1] = v38;
  sub_153B4((uint64_t)v14, (uint64_t)v16, &qword_4BEC10);
  sub_250FC((uint64_t)v11, &qword_4BEC08);
  sub_250FC((uint64_t)v14, &qword_4BEC10);
  sub_3D6730();
  uint64_t v41 = sub_3D6760();
  swift_release();
  uint64_t v42 = v69;
  sub_342950((uint64_t)v20, v69);
  uint64_t v43 = v42 + *(int *)(v67 + 36);
  *(void *)uint64_t v43 = v41;
  *(_OWORD *)(v43 + 8) = xmmword_3F7F20;
  *(void *)(v43 + 24) = 0x402E000000000000;
  char v44 = sub_3D6450();
  sub_3D5D50();
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  uint64_t v53 = v70;
  sub_153B4(v42, v70, &qword_4BEBF8);
  uint64_t v54 = v53 + *(int *)(v68 + 36);
  *(unsigned char *)uint64_t v54 = v44;
  *(void *)(v54 + 8) = v46;
  *(void *)(v54 + 16) = v48;
  *(void *)(v54 + 24) = v50;
  *(void *)(v54 + 32) = v52;
  *(unsigned char *)(v54 + 40) = 0;
  sub_250FC(v42, &qword_4BEBF8);
  uint64_t v55 = sub_3D68B0();
  uint64_t v57 = v56;
  uint64_t v58 = (uint64_t)v64;
  uint64_t v59 = (uint64_t)&v64[*(int *)(v66 + 36)];
  sub_153B4(v53, v59, &qword_4BEC00);
  unint64_t v60 = (uint64_t *)(v59 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BEC58) + 36));
  *unint64_t v60 = v55;
  v60[1] = v57;
  sub_153B4((uint64_t)v16, v58, &qword_4BEC18);
  sub_250FC(v53, &qword_4BEC00);
  sub_250FC((uint64_t)v16, &qword_4BEC18);
  uint64_t v61 = v71;
  sub_153B4(v58, v71, &qword_4BEC20);
  *(unsigned char *)(v61 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BEC60) + 36)) = 1;
  sub_250FC(v58, &qword_4BEC20);
  return sub_344C70((uint64_t)v20);
}

uint64_t sub_343E9C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_3D6240();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v8 = sub_3D8400();
    uint64_t v9 = sub_3D6430();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = sub_1FB7E8(0x656A624F65736142, 0xEF68706172477463, &v14);
      sub_3D8930();
      _os_log_impl(&dword_0, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_3D6230();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v14;
  }
  return a1;
}

uint64_t sub_3440AC(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = sub_3D6240();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    swift_retain();
    os_log_type_t v10 = sub_3D8400();
    uint64_t v11 = sub_3D6430();
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136315138;
      v15[0] = v13 + 4;
      v15[1] = sub_1FB7E8(0xD000000000000010, 0x800000000040A250, &v16);
      sub_3D8930();
      _os_log_impl(&dword_0, v11, v12, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_3D6230();
    swift_getAtKeyPath();
    sub_D2378(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return v16;
  }
  return a1;
}

uint64_t sub_3442D4(uint64_t a1, char a2)
{
  uint64_t v4 = sub_3D6240();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) == 0)
  {
    swift_retain();
    os_log_type_t v8 = sub_3D8400();
    uint64_t v9 = sub_3D6430();
    os_log_type_t v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136315138;
      uint64_t v13 = sub_1FB7E8(7630409, 0xE300000000000000, &v14);
      sub_3D8930();
      _os_log_impl(&dword_0, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_3D6230();
    swift_getAtKeyPath();
    sub_D2388(a1, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v14;
  }
  return a1;
}

uint64_t sub_3444D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_3D6240();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_153B4(v2, (uint64_t)v16, &qword_4B2F98);
  if (v17 == 1) {
    return sub_18F70(v16, a1);
  }
  os_log_type_t v9 = sub_3D8400();
  os_log_type_t v10 = sub_3D6430();
  os_log_type_t v11 = v9;
  if (os_log_type_enabled(v10, v9))
  {
    os_log_type_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    v14[1] = a1;
    uint64_t v15 = v13;
    *(_DWORD *)os_log_type_t v12 = 136315138;
    v14[2] = sub_1FB7E8(0xD00000000000001CLL, 0x800000000040A270, &v15);
    sub_3D8930();
    _os_log_impl(&dword_0, v10, v11, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_3D6230();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

double sub_344704(uint64_t a1, char a2)
{
  uint64_t v4 = sub_3D6240();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v8 = sub_3D8400();
  os_log_type_t v9 = sub_3D6430();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v11 = 136315138;
    uint64_t v13 = sub_1FB7E8(0x74616F6C464743, 0xE700000000000000, &v14);
    sub_3D8930();
    _os_log_impl(&dword_0, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_3D6230();
  swift_getAtKeyPath();
  sub_D2388(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(double *)&v14;
}

uint64_t sub_344910@<X0>(uint64_t a1@<X8>)
{
  return sub_34498C(&qword_4B4E48, (uint64_t (*)(void))&type metadata accessor for ColorScheme, 0x686353726F6C6F43, 0xEB00000000656D65, a1);
}

uint64_t sub_34494C@<X0>(uint64_t a1@<X8>)
{
  return sub_34498C(&qword_4BB998, (uint64_t (*)(void))&type metadata accessor for LayoutDirection, 0x694474756F79614CLL, 0xEF6E6F6974636572, a1);
}

uint64_t sub_34498C@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_3D6240();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  __chkstk_darwin(v15);
  char v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_153B4(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_3D8400();
    uint64_t v21 = sub_3D6430();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_1FB7E8(v27, v25, &v29);
      sub_3D8930();
      _os_log_impl(&dword_0, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_3D6230();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_344C44@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_3D6160();
  *a1 = v3;
  return result;
}

uint64_t sub_344C70(uint64_t a1)
{
  uint64_t v2 = sub_3D60D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_344CCC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for HeroContainerModifier(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_4B4E48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_3D5DB0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    os_log_type_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    sub_D2320(*(void *)v11, v13);
    *(void *)os_log_type_t v10 = v12;
    v10[8] = v13;
  }
  return a1;
}

uint64_t destroy for HeroContainerModifier(uint64_t a1, uint64_t a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_4B4E48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = sub_3D5DB0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = *(void *)v5;
  char v7 = *(unsigned char *)(v5 + 8);

  return sub_D2388(v6, v7);
}

void *initializeWithCopy for HeroContainerModifier(void *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_4B4E48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_3D5DB0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_D2320(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  return a1;
}

void *assignWithCopy for HeroContainerModifier(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_250FC((uint64_t)a1, &qword_4B4E48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4B4E48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_3D5DB0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_D2320(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_D2388(v12, v13);
  return a1;
}

char *initializeWithTake for HeroContainerModifier(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B4E48);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_3D5DB0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  *(void *)uint64_t v9 = *(void *)v10;
  v9[8] = v10[8];
  return a1;
}

char *assignWithTake for HeroContainerModifier(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_250FC((uint64_t)a1, &qword_4B4E48);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B4E48);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_3D5DB0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void *)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_D2388(v12, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for HeroContainerModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3452BC);
}

uint64_t sub_3452BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEC68);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for HeroContainerModifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_345394);
}

uint64_t sub_345394(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEC68);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  }
  return result;
}

void sub_345458()
{
  sub_189648();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_3454F0()
{
  unint64_t result = qword_4BED00;
  if (!qword_4BED00)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BEC60);
    sub_34556C();
    sub_345770();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BED00);
  }
  return result;
}

unint64_t sub_34556C()
{
  unint64_t result = qword_4BED08;
  if (!qword_4BED08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BEC20);
    sub_34560C();
    sub_3D6E4(&qword_4BED38, &qword_4BEC58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BED08);
  }
  return result;
}

unint64_t sub_34560C()
{
  unint64_t result = qword_4BED10;
  if (!qword_4BED10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BEC18);
    sub_3456AC();
    sub_3D6E4(&qword_4BED30, &qword_4BEC50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BED10);
  }
  return result;
}

unint64_t sub_3456AC()
{
  unint64_t result = qword_4BED18;
  if (!qword_4BED18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BEC10);
    sub_3D6E4(&qword_4BED20, &qword_4BEC30);
    sub_3D6E4(&qword_4BED28, &qword_4BEC28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BED18);
  }
  return result;
}

unint64_t sub_345770()
{
  unint64_t result = qword_4BED40;
  if (!qword_4BED40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BED40);
  }
  return result;
}

uint64_t sub_3457C4(uint64_t TupleTypeMetadata, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = (uint64_t *)TupleTypeMetadata;
  uint64_t v5 = (uint64_t *)(a3 & 0xFFFFFFFFFFFFFFFELL);
  if (a2 == 1)
  {
    uint64_t v6 = *v5;
  }
  else
  {
    __chkstk_darwin(TupleTypeMetadata);
    uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (a2)
    {
      unint64_t v9 = 0;
      if (a2 < 4) {
        goto LABEL_9;
      }
      if ((unint64_t)(v8 - (char *)v5) < 0x20) {
        goto LABEL_9;
      }
      unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      unsigned int v10 = (long long *)(v5 + 2);
      uint64_t v11 = v8 + 16;
      unint64_t v12 = a2 & 0xFFFFFFFFFFFFFFFCLL;
      do
      {
        long long v13 = *v10;
        *(v11 - 1) = *(v10 - 1);
        *uint64_t v11 = v13;
        v10 += 2;
        v11 += 2;
        v12 -= 4;
      }
      while (v12);
      if (v9 != a2)
      {
LABEL_9:
        unint64_t v14 = a2 - v9;
        uint64_t v15 = v9;
        uint64_t v16 = &v8[8 * v9];
        char v17 = &v5[v15];
        do
        {
          uint64_t v18 = *v17++;
          *(void *)uint64_t v16 = v18;
          v16 += 8;
          --v14;
        }
        while (v14);
      }
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    uint64_t v6 = TupleTypeMetadata;
  }
  __chkstk_darwin(TupleTypeMetadata);
  os_log_type_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    uint64_t v21 = (int *)(v6 + 32);
    unint64_t v22 = a2;
    do
    {
      if (a2 == 1) {
        int v23 = 0;
      }
      else {
        int v23 = *v21;
      }
      uint64_t v25 = *v5++;
      uint64_t v24 = v25;
      uint64_t v26 = *v4++;
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 16))(&v20[v23], v26);
      v21 += 4;
      --v22;
    }
    while (v22);
  }
  return sub_3D6920();
}

uint64_t sub_345988@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v18[0] = a6;
  v18[1] = a7;
  uint64_t v13 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v15 = (char *)v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_3D5E20();
  __chkstk_darwin(v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v7, a3);
  sub_3D5E30();
  v18[4] = a3;
  v18[5] = a4;
  v18[6] = a5;
  v18[7] = v18[0];
  v18[8] = a1;
  v18[9] = a2;
  swift_getWitnessTable();
  return sub_3D5FA0();
}

uint64_t sub_345B30()
{
  uint64_t v0 = sub_3D6380();
  __swift_allocate_value_buffer(v0, qword_4BED48);
  __swift_project_value_buffer(v0, (uint64_t)qword_4BED48);
  return sub_3D63F0();
}

uint64_t HeroChin.init(variant:content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_345C1C(a1, a4);
  uint64_t result = type metadata accessor for HeroChin();
  uint64_t v8 = (void *)(a4 + *(int *)(result + 36));
  *uint64_t v8 = a2;
  v8[1] = a3;
  return result;
}

uint64_t sub_345C1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HeroBackgroundVariant();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for HeroChin()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t HeroChin.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v25 = a2;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BED60);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BED68);
  uint64_t v3 = *(void *)(a1 + 16);
  sub_3D6070();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BED70);
  sub_3D6070();
  sub_3D6070();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BED78);
  sub_3D6070();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BED80);
  sub_3D6070();
  swift_getTupleTypeMetadata2();
  sub_3D6910();
  sub_3D6E4(&qword_4BED88, &qword_4BED60);
  uint64_t v4 = sub_3D5F90();
  uint64_t v23 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v22 - v5;
  uint64_t v7 = sub_3D6E4(&qword_4BED90, &qword_4BED60);
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v32 = v7;
  uint64_t v33 = WitnessTable;
  uint64_t v9 = swift_getWitnessTable();
  uint64_t v30 = v4;
  uint64_t v31 = v9;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v11 = *(void *)(OpaqueTypeMetadata2 - 8);
  __chkstk_darwin(OpaqueTypeMetadata2);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v22 - v15;
  uint64_t v17 = *(void *)(a1 + 24);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v3;
  *(void *)(v18 + 24) = v17;
  uint64_t v27 = v3;
  uint64_t v28 = v17;
  uint64_t v29 = v24;
  sub_3460D0((uint64_t)sub_346F80, (uint64_t)v26, (uint64_t)v6);
  swift_release();
  if (qword_4A9018 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_3D6380();
  __swift_project_value_buffer(v19, (uint64_t)qword_4BED48);
  sub_3D6630();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
  uint64_t v30 = v4;
  uint64_t v31 = v9;
  swift_getOpaqueTypeConformance2();
  sub_186390(v13);
  os_log_type_t v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20(v13, OpaqueTypeMetadata2);
  sub_186390(v16);
  return ((uint64_t (*)(char *, uint64_t))v20)(v16, OpaqueTypeMetadata2);
}

uint64_t sub_3460D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BED68);
  sub_3D6070();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BED70);
  sub_3D6070();
  sub_3D6070();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BED78);
  sub_3D6070();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BED80);
  sub_3D6070();
  swift_getTupleTypeMetadata2();
  uint64_t v6 = sub_3D6910();
  unint64_t v7 = sub_34B340();
  uint64_t WitnessTable = swift_getWitnessTable();
  return sub_345988(a1, a2, (uint64_t)&type metadata for HeroChinLayout, v6, v7, WitnessTable, a3);
}

uint64_t sub_346214@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v78 = a3;
  uint64_t v104 = a4;
  uint64_t v103 = type metadata accessor for HeroChinBackground(0);
  __chkstk_darwin(v103);
  unint64_t v102 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for HeroBackgroundVariant();
  __chkstk_darwin(v79);
  uint64_t v94 = (uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unsigned int v10 = (char *)&v78 - v9;
  uint64_t v82 = *(void *)(a2 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_3D6070();
  uint64_t v83 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v78 - v15;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BED70);
  uint64_t v80 = v14;
  uint64_t v17 = sub_3D6070();
  uint64_t v85 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v84 = (char *)&v78 - v18;
  uint64_t v86 = v19;
  uint64_t v20 = sub_3D6070();
  uint64_t v89 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v87 = (char *)&v78 - v21;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BED78);
  uint64_t v93 = v20;
  uint64_t v22 = sub_3D6070();
  uint64_t v97 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  int v96 = (char *)&v78 - v23;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BED80);
  uint64_t v98 = v22;
  uint64_t v90 = sub_3D6070();
  uint64_t v99 = *(void *)(v90 - 8);
  __chkstk_darwin(v90);
  uint64_t v101 = (char *)&v78 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v95 = (char *)&v78 - v26;
  __chkstk_darwin(v27);
  int v100 = (char *)&v78 - v28;
  uint64_t v29 = type metadata accessor for HeroSupplementalArtworkView(0);
  __chkstk_darwin(v29 - 8);
  uint64_t v31 = (char *)&v78 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED68);
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v78 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v37 = (char *)&v78 - v36;
  sub_34B080(a1, (uint64_t)v31, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
  sub_34B080((uint64_t)v31, (uint64_t)v34, type metadata accessor for HeroSupplementalArtworkView);
  uint64_t v88 = v32;
  v34[*(int *)(v32 + 36)] = 0;
  sub_34B2D0((uint64_t)v31, type metadata accessor for HeroSupplementalArtworkView);
  uint64_t v91 = v34;
  uint64_t v92 = v37;
  sub_34B0E8((uint64_t)v34, (uint64_t)v37);
  uint64_t v38 = v78;
  uint64_t v39 = type metadata accessor for HeroChin();
  (*(void (**)(void))(a1 + *(int *)(v39 + 36)))();
  sub_3D68C0();
  uint64_t v81 = v16;
  sub_3D6670();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v13, a2);
  uint64_t v82 = a1;
  sub_34B080(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
      sub_34B2D0((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
      sub_250FC((uint64_t)v10, (uint64_t *)&unk_4B1F70);
    }
  }
  else
  {
    uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
    sub_34B2D0((uint64_t)&v10[*(int *)(v41 + 48)], (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    sub_34B2D0((uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  }
  uint64_t v42 = v87;
  uint64_t v43 = v84;
  uint64_t v112 = v38;
  os_log_t v113 = &protocol witness table for _FlexFrameLayout;
  uint64_t v44 = v80;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v46 = v81;
  sub_3D65E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v46, v44);
  unsigned __int8 v47 = sub_3D6480();
  unsigned __int8 v48 = sub_3D6470();
  unsigned __int8 v49 = sub_3D64A0();
  sub_3D6490();
  sub_3D6490();
  if (sub_3D6490() != v47) {
    sub_3D6490();
  }
  sub_3D6490();
  if (sub_3D6490() != v48) {
    sub_3D6490();
  }
  uint64_t v51 = (uint64_t)v102;
  uint64_t v50 = v103;
  sub_3D6490();
  if (sub_3D6490() != v49) {
    sub_3D6490();
  }
  if (qword_4A8FF0 != -1) {
    swift_once();
  }
  uint64_t v52 = sub_3D6E4(&qword_4BEE58, &qword_4BED70);
  uint64_t v110 = WitnessTable;
  uint64_t v111 = v52;
  uint64_t v53 = v86;
  uint64_t v54 = swift_getWitnessTable();
  sub_3D66C0();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v43, v53);
  uint64_t v55 = v94;
  sub_34B080(v82, v94, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
  if (qword_4A9018 != -1) {
    swift_once();
  }
  uint64_t v56 = sub_3D6380();
  uint64_t v57 = __swift_project_value_buffer(v56, (uint64_t)qword_4BED48);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 16))(v51 + *(int *)(v50 + 20), v57, v56);
  sub_345C1C(v55, v51);
  uint64_t v58 = *(int *)(v50 + 24);
  if (qword_4A9060 != -1) {
    swift_once();
  }
  uint64_t v59 = (uint64_t *)(v51 + v58);
  v107[0] = qword_4BF298;
  sub_3D67E0();
  unint64_t v60 = v109;
  *uint64_t v59 = v108;
  v59[1] = (uint64_t)v60;
  sub_3D68B0();
  v107[6] = v54;
  v107[7] = &protocol witness table for _PaddingLayout;
  uint64_t v61 = v93;
  uint64_t v62 = swift_getWitnessTable();
  sub_34B288(&qword_4BEE60, (void (*)(uint64_t))type metadata accessor for HeroChinBackground);
  uint64_t v63 = v96;
  sub_3D65C0();
  sub_34B2D0(v51, type metadata accessor for HeroChinBackground);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v42, v61);
  LOBYTE(v108) = 1;
  uint64_t v64 = sub_3D6E4(&qword_4BEE68, &qword_4BED78);
  v107[4] = v62;
  v107[5] = v64;
  uint64_t v65 = v98;
  uint64_t v66 = swift_getWitnessTable();
  sub_34B02C();
  uint64_t v67 = v95;
  sub_3D6600();
  (*(void (**)(char *, uint64_t))(v97 + 8))(v63, v65);
  uint64_t v68 = sub_3D6E4(&qword_4BEE70, &qword_4BED80);
  v107[2] = v66;
  v107[3] = v68;
  uint64_t v69 = v90;
  uint64_t v70 = swift_getWitnessTable();
  uint64_t v71 = v100;
  sub_186390(v67);
  uint64_t v72 = v99;
  long long v73 = *(void (**)(char *, uint64_t))(v99 + 8);
  v73(v67, v69);
  uint64_t v74 = (uint64_t)v92;
  uint64_t v75 = (uint64_t)v91;
  sub_34B150((uint64_t)v92, (uint64_t)v91);
  uint64_t v108 = v75;
  uint64_t v76 = v101;
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v101, v71, v69);
  int v109 = v76;
  v107[0] = v88;
  v107[1] = v69;
  unint64_t v105 = sub_34B1B8();
  uint64_t v106 = v70;
  sub_3457C4((uint64_t)&v108, 2uLL, (uint64_t)v107);
  v73(v71, v69);
  sub_250FC(v74, &qword_4BED68);
  v73(v76, v69);
  return sub_250FC(v75, &qword_4BED68);
}

uint64_t sub_346F80@<X0>(uint64_t a1@<X8>)
{
  return sub_346214(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_346F8C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_346FD4()
{
  uint64_t result = type metadata accessor for HeroBackgroundVariant();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_34706C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    type metadata accessor for HeroBackgroundVariant();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = (int *)sub_3D3860();
      uint64_t v14 = *((void *)v13 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v14 + 48))(a2, 1, v13))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v23 = a2[1];
        *a1 = *a2;
        a1[1] = v23;
        int v24 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v24 == 255)
        {
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        }
        else
        {
          uint64_t v25 = a2[2];
          uint64_t v26 = a2[3];
          sub_4C484(v25, v26, v24);
          a1[2] = v25;
          a1[3] = v26;
          *((unsigned char *)a1 + 32) = v24;
        }
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        uint64_t v111 = (id *)(a2 + 7);
        int v112 = *((unsigned __int8 *)a2 + 64);
        if (v112 == 255)
        {
          a1[7] = (uint64_t)*v111;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        }
        else
        {
          id v113 = *v111;
          sub_4C49C(*v111, *((unsigned char *)a2 + 64));
          a1[7] = (uint64_t)v113;
          *((unsigned char *)a1 + 64) = v112;
        }
        uint64_t v114 = (id *)(a2 + 9);
        int v115 = *((unsigned __int8 *)a2 + 80);
        if (v115 == 255)
        {
          a1[9] = (uint64_t)*v114;
          *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
        }
        else
        {
          id v116 = *v114;
          sub_4C49C(*v114, *((unsigned char *)a2 + 80));
          a1[9] = (uint64_t)v116;
          *((unsigned char *)a1 + 80) = v115;
        }
        uint64_t v117 = (id *)(a2 + 11);
        int v118 = *((unsigned __int8 *)a2 + 96);
        if (v118 == 255)
        {
          a1[11] = (uint64_t)*v117;
          *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
        }
        else
        {
          id v119 = *v117;
          sub_4C49C(*v117, *((unsigned char *)a2 + 96));
          a1[11] = (uint64_t)v119;
          *((unsigned char *)a1 + 96) = v118;
        }
        uint64_t v120 = (id *)(a2 + 13);
        int v121 = *((unsigned __int8 *)a2 + 112);
        if (v121 == 255)
        {
          a1[13] = (uint64_t)*v120;
          *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        }
        else
        {
          id v122 = *v120;
          sub_4C49C(*v120, *((unsigned char *)a2 + 112));
          a1[13] = (uint64_t)v122;
          *((unsigned char *)a1 + 112) = v121;
        }
        uint64_t v123 = (id *)(a2 + 15);
        int v124 = *((unsigned __int8 *)a2 + 128);
        if (v124 == 255)
        {
          a1[15] = (uint64_t)*v123;
          *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
        }
        else
        {
          id v125 = *v123;
          sub_4C49C(*v123, *((unsigned char *)a2 + 128));
          a1[15] = (uint64_t)v125;
          *((unsigned char *)a1 + 128) = v124;
        }
        *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
        uint64_t v126 = v13[11];
        uint64_t v127 = (char *)a1 + v126;
        uint64_t v128 = (char *)a2 + v126;
        uint64_t v129 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16))(v127, v128, v129);
        uint64_t v130 = v13[12];
        uint64_t v131 = (uint64_t *)((char *)a1 + v130);
        uint64_t v132 = (uint64_t *)((char *)a2 + v130);
        uint64_t v133 = v132[1];
        *uint64_t v131 = *v132;
        v131[1] = v133;
        *((unsigned char *)a1 + v13[13]) = *((unsigned char *)a2 + v13[13]);
        *((unsigned char *)a1 + v13[14]) = *((unsigned char *)a2 + v13[14]);
        *((unsigned char *)a1 + v13[15]) = *((unsigned char *)a2 + v13[15]);
        uint64_t v134 = v13[16];
        uint64_t v135 = (uint64_t *)((char *)a1 + v134);
        uint64_t v136 = (uint64_t *)((char *)a2 + v134);
        uint64_t v137 = v136[1];
        *uint64_t v135 = *v136;
        v135[1] = v137;
        uint64_t v138 = *(void (**)(uint64_t *, void, uint64_t, int *))(v14 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v138(a1, 0, 1, v13);
      }
      uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
      *(uint64_t *)((char *)a1 + *(int *)(v139 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v139 + 48));
      swift_retain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      int v9 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v9 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v10 = a2[2];
        uint64_t v11 = a2[3];
        sub_4C484(v10, v11, v9);
        a1[2] = v10;
        a1[3] = v11;
        *((unsigned char *)a1 + 32) = v9;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      uint64_t v20 = (id *)(a2 + 7);
      int v21 = *((unsigned __int8 *)a2 + 64);
      if (v21 == 255)
      {
        a1[7] = (uint64_t)*v20;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      }
      else
      {
        id v22 = *v20;
        sub_4C49C(*v20, *((unsigned char *)a2 + 64));
        a1[7] = (uint64_t)v22;
        *((unsigned char *)a1 + 64) = v21;
      }
      uint64_t v30 = (id *)(a2 + 9);
      int v31 = *((unsigned __int8 *)a2 + 80);
      if (v31 == 255)
      {
        a1[9] = (uint64_t)*v30;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      }
      else
      {
        id v32 = *v30;
        sub_4C49C(*v30, *((unsigned char *)a2 + 80));
        a1[9] = (uint64_t)v32;
        *((unsigned char *)a1 + 80) = v31;
      }
      uint64_t v36 = (id *)(a2 + 11);
      int v37 = *((unsigned __int8 *)a2 + 96);
      if (v37 == 255)
      {
        a1[11] = (uint64_t)*v36;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
      }
      else
      {
        id v38 = *v36;
        sub_4C49C(*v36, *((unsigned char *)a2 + 96));
        a1[11] = (uint64_t)v38;
        *((unsigned char *)a1 + 96) = v37;
      }
      uint64_t v42 = (id *)(a2 + 13);
      int v43 = *((unsigned __int8 *)a2 + 112);
      if (v43 == 255)
      {
        a1[13] = (uint64_t)*v42;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      }
      else
      {
        id v44 = *v42;
        sub_4C49C(*v42, *((unsigned char *)a2 + 112));
        a1[13] = (uint64_t)v44;
        *((unsigned char *)a1 + 112) = v43;
      }
      unsigned __int8 v48 = (id *)(a2 + 15);
      int v49 = *((unsigned __int8 *)a2 + 128);
      if (v49 == 255)
      {
        a1[15] = (uint64_t)*v48;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
      }
      else
      {
        id v50 = *v48;
        sub_4C49C(*v48, *((unsigned char *)a2 + 128));
        a1[15] = (uint64_t)v50;
        *((unsigned char *)a1 + 128) = v49;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v54 = (int *)sub_3D3860();
      uint64_t v55 = v54[11];
      uint64_t v56 = (char *)a1 + v55;
      uint64_t v57 = (char *)a2 + v55;
      uint64_t v58 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
      uint64_t v59 = v54[12];
      unint64_t v60 = (uint64_t *)((char *)a1 + v59);
      uint64_t v61 = (uint64_t *)((char *)a2 + v59);
      uint64_t v62 = v61[1];
      *unint64_t v60 = *v61;
      v60[1] = v62;
      *((unsigned char *)a1 + v54[13]) = *((unsigned char *)a2 + v54[13]);
      *((unsigned char *)a1 + v54[14]) = *((unsigned char *)a2 + v54[14]);
      *((unsigned char *)a1 + v54[15]) = *((unsigned char *)a2 + v54[15]);
      uint64_t v63 = v54[16];
      uint64_t v64 = (uint64_t *)((char *)a1 + v63);
      uint64_t v65 = (uint64_t *)((char *)a2 + v63);
      uint64_t v66 = v65[1];
      void *v64 = *v65;
      v64[1] = v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
      *(uint64_t *)((char *)a1 + *(int *)(v67 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v67 + 48));
      swift_retain();
    }
    else
    {
      uint64_t v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      int v17 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v17 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v18 = a2[2];
        uint64_t v19 = a2[3];
        sub_4C484(v18, v19, v17);
        a1[2] = v18;
        a1[3] = v19;
        *((unsigned char *)a1 + 32) = v17;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      uint64_t v27 = (id *)(a2 + 7);
      int v28 = *((unsigned __int8 *)a2 + 64);
      if (v28 == 255)
      {
        a1[7] = (uint64_t)*v27;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      }
      else
      {
        id v29 = *v27;
        sub_4C49C(*v27, *((unsigned char *)a2 + 64));
        a1[7] = (uint64_t)v29;
        *((unsigned char *)a1 + 64) = v28;
      }
      uint64_t v33 = (id *)(a2 + 9);
      int v34 = *((unsigned __int8 *)a2 + 80);
      if (v34 == 255)
      {
        a1[9] = (uint64_t)*v33;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      }
      else
      {
        id v35 = *v33;
        sub_4C49C(*v33, *((unsigned char *)a2 + 80));
        a1[9] = (uint64_t)v35;
        *((unsigned char *)a1 + 80) = v34;
      }
      uint64_t v39 = (id *)(a2 + 11);
      int v40 = *((unsigned __int8 *)a2 + 96);
      if (v40 == 255)
      {
        a1[11] = (uint64_t)*v39;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
      }
      else
      {
        id v41 = *v39;
        sub_4C49C(*v39, *((unsigned char *)a2 + 96));
        a1[11] = (uint64_t)v41;
        *((unsigned char *)a1 + 96) = v40;
      }
      uint64_t v45 = (id *)(a2 + 13);
      int v46 = *((unsigned __int8 *)a2 + 112);
      if (v46 == 255)
      {
        a1[13] = (uint64_t)*v45;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      }
      else
      {
        id v47 = *v45;
        sub_4C49C(*v45, *((unsigned char *)a2 + 112));
        a1[13] = (uint64_t)v47;
        *((unsigned char *)a1 + 112) = v46;
      }
      uint64_t v51 = (id *)(a2 + 15);
      int v52 = *((unsigned __int8 *)a2 + 128);
      if (v52 == 255)
      {
        a1[15] = (uint64_t)*v51;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
      }
      else
      {
        id v53 = *v51;
        sub_4C49C(*v51, *((unsigned char *)a2 + 128));
        a1[15] = (uint64_t)v53;
        *((unsigned char *)a1 + 128) = v52;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v68 = (int *)sub_3D3860();
      uint64_t v69 = v68[11];
      uint64_t v70 = (char *)a1 + v69;
      uint64_t v71 = (char *)a2 + v69;
      uint64_t v72 = sub_3D3750();
      Swift::String v146 = *(void (**)(char *, char *))(*(void *)(v72 - 8) + 16);
      uint64_t v147 = v72;
      v146(v70, v71);
      uint64_t v73 = v68[12];
      uint64_t v74 = (uint64_t *)((char *)a1 + v73);
      uint64_t v75 = (uint64_t *)((char *)a2 + v73);
      uint64_t v76 = v75[1];
      *uint64_t v74 = *v75;
      v74[1] = v76;
      *((unsigned char *)a1 + v68[13]) = *((unsigned char *)a2 + v68[13]);
      *((unsigned char *)a1 + v68[14]) = *((unsigned char *)a2 + v68[14]);
      *((unsigned char *)a1 + v68[15]) = *((unsigned char *)a2 + v68[15]);
      uint64_t v77 = v68[16];
      uint64_t v78 = (uint64_t *)((char *)a1 + v77);
      uint64_t v79 = (uint64_t *)((char *)a2 + v77);
      uint64_t v80 = v79[1];
      *uint64_t v78 = *v79;
      v78[1] = v80;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
      uint64_t v81 = *(int *)(v145 + 48);
      uint64_t v82 = (char *)a1 + v81;
      uint64_t v83 = (char *)a2 + v81;
      uint64_t v84 = *(uint64_t *)((char *)a2 + v81 + 8);
      *(void *)uint64_t v82 = *(uint64_t *)((char *)a2 + v81);
      *((void *)v82 + 1) = v84;
      int v85 = *((unsigned __int8 *)a2 + v81 + 32);
      swift_bridgeObjectRetain();
      if (v85 == 255)
      {
        *((_OWORD *)v82 + 1) = *((_OWORD *)v83 + 1);
        v82[32] = v83[32];
      }
      else
      {
        uint64_t v86 = *((void *)v83 + 2);
        uint64_t v87 = *((void *)v83 + 3);
        sub_4C484(v86, v87, v85);
        *((void *)v82 + 2) = v86;
        *((void *)v82 + 3) = v87;
        v82[32] = v85;
      }
      *(_OWORD *)(v82 + 40) = *(_OWORD *)(v83 + 40);
      uint64_t v88 = (id *)(v83 + 56);
      int v89 = v83[64];
      if (v89 == 255)
      {
        *((void *)v82 + 7) = *v88;
        v82[64] = v83[64];
      }
      else
      {
        id v90 = *v88;
        sub_4C49C(*v88, v83[64]);
        *((void *)v82 + 7) = v90;
        v82[64] = v89;
      }
      uint64_t v91 = (id *)(v83 + 72);
      int v92 = v83[80];
      if (v92 == 255)
      {
        *((void *)v82 + 9) = *v91;
        v82[80] = v83[80];
      }
      else
      {
        id v93 = *v91;
        sub_4C49C(*v91, v83[80]);
        *((void *)v82 + 9) = v93;
        v82[80] = v92;
      }
      uint64_t v94 = (id *)(v83 + 88);
      int v95 = v83[96];
      if (v95 == 255)
      {
        *((void *)v82 + 11) = *v94;
        v82[96] = v83[96];
      }
      else
      {
        id v96 = *v94;
        sub_4C49C(*v94, v83[96]);
        *((void *)v82 + 11) = v96;
        v82[96] = v95;
      }
      uint64_t v97 = (id *)(v83 + 104);
      int v98 = v83[112];
      if (v98 == 255)
      {
        *((void *)v82 + 13) = *v97;
        v82[112] = v83[112];
      }
      else
      {
        id v99 = *v97;
        sub_4C49C(*v97, v83[112]);
        *((void *)v82 + 13) = v99;
        v82[112] = v98;
      }
      int v100 = (id *)(v83 + 120);
      int v101 = v83[128];
      if (v101 == 255)
      {
        *((void *)v82 + 15) = *v100;
        v82[128] = v83[128];
      }
      else
      {
        id v102 = *v100;
        sub_4C49C(*v100, v83[128]);
        *((void *)v82 + 15) = v102;
        v82[128] = v101;
      }
      v82[129] = v83[129];
      ((void (*)(char *, char *, uint64_t))v146)(&v82[v68[11]], &v83[v68[11]], v147);
      uint64_t v103 = v68[12];
      uint64_t v104 = &v82[v103];
      unint64_t v105 = &v83[v103];
      uint64_t v106 = *((void *)v105 + 1);
      *(void *)uint64_t v104 = *(void *)v105;
      *((void *)v104 + 1) = v106;
      v82[v68[13]] = v83[v68[13]];
      v82[v68[14]] = v83[v68[14]];
      v82[v68[15]] = v83[v68[15]];
      uint64_t v107 = v68[16];
      uint64_t v108 = &v82[v107];
      int v109 = &v83[v107];
      uint64_t v110 = *((void *)v109 + 1);
      *(void *)uint64_t v108 = *(void *)v109;
      *((void *)v108 + 1) = v110;
      *(uint64_t *)((char *)a1 + *(int *)(v145 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v145 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v140 = *(int *)(a3 + 36);
    uint64_t v141 = (uint64_t *)((char *)a1 + v140);
    Swift::String_optional v142 = (uint64_t *)((char *)a2 + v140);
    uint64_t v143 = v142[1];
    *uint64_t v141 = *v142;
    v141[1] = v143;
  }
  swift_retain();
  return a1;
}

uint64_t sub_347BB0(uint64_t a1)
{
  type metadata accessor for HeroBackgroundVariant();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v20 = sub_3D3860();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(a1, 1, v20))
    {
      swift_bridgeObjectRelease();
      int v21 = *(unsigned __int8 *)(a1 + 32);
      if (v21 != 255) {
        sub_49E54(*(void *)(a1 + 16), *(void *)(a1 + 24), v21);
      }
      int v22 = *(unsigned __int8 *)(a1 + 64);
      if (v22 != 255) {
        sub_4C6F0(*(id *)(a1 + 56), v22);
      }
      int v23 = *(unsigned __int8 *)(a1 + 80);
      if (v23 != 255) {
        sub_4C6F0(*(id *)(a1 + 72), v23);
      }
      int v24 = *(unsigned __int8 *)(a1 + 96);
      if (v24 != 255) {
        sub_4C6F0(*(id *)(a1 + 88), v24);
      }
      int v25 = *(unsigned __int8 *)(a1 + 112);
      if (v25 != 255) {
        sub_4C6F0(*(id *)(a1 + 104), v25);
      }
      int v26 = *(unsigned __int8 *)(a1 + 128);
      if (v26 != 255) {
        sub_4C6F0(*(id *)(a1 + 120), v26);
      }
      uint64_t v27 = a1 + *(int *)(v20 + 44);
      uint64_t v28 = sub_3D3750();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    id v29 = qword_4BEDA8;
    goto LABEL_57;
  }
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    int v30 = *(unsigned __int8 *)(a1 + 32);
    if (v30 != 255) {
      sub_49E54(*(void *)(a1 + 16), *(void *)(a1 + 24), v30);
    }
    int v31 = *(unsigned __int8 *)(a1 + 64);
    if (v31 != 255) {
      sub_4C6F0(*(id *)(a1 + 56), v31);
    }
    int v32 = *(unsigned __int8 *)(a1 + 80);
    if (v32 != 255) {
      sub_4C6F0(*(id *)(a1 + 72), v32);
    }
    int v33 = *(unsigned __int8 *)(a1 + 96);
    if (v33 != 255) {
      sub_4C6F0(*(id *)(a1 + 88), v33);
    }
    int v34 = *(unsigned __int8 *)(a1 + 112);
    if (v34 != 255) {
      sub_4C6F0(*(id *)(a1 + 104), v34);
    }
    int v35 = *(unsigned __int8 *)(a1 + 128);
    if (v35 != 255) {
      sub_4C6F0(*(id *)(a1 + 120), v35);
    }
    uint64_t v36 = a1 + *(int *)(sub_3D3860() + 44);
    uint64_t v37 = sub_3D3750();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v29 = &qword_4BEDA0;
LABEL_57:
    __swift_instantiateConcreteTypeFromMangledName(v29);
    goto LABEL_58;
  }
  if (EnumCaseMultiPayload) {
    goto LABEL_59;
  }
  swift_bridgeObjectRelease();
  int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 != 255) {
    sub_49E54(*(void *)(a1 + 16), *(void *)(a1 + 24), v3);
  }
  int v4 = *(unsigned __int8 *)(a1 + 64);
  if (v4 != 255) {
    sub_4C6F0(*(id *)(a1 + 56), v4);
  }
  int v5 = *(unsigned __int8 *)(a1 + 80);
  if (v5 != 255) {
    sub_4C6F0(*(id *)(a1 + 72), v5);
  }
  int v6 = *(unsigned __int8 *)(a1 + 96);
  if (v6 != 255) {
    sub_4C6F0(*(id *)(a1 + 88), v6);
  }
  int v7 = *(unsigned __int8 *)(a1 + 112);
  if (v7 != 255) {
    sub_4C6F0(*(id *)(a1 + 104), v7);
  }
  int v8 = *(unsigned __int8 *)(a1 + 128);
  if (v8 != 255) {
    sub_4C6F0(*(id *)(a1 + 120), v8);
  }
  uint64_t v9 = sub_3D3860();
  uint64_t v10 = a1 + *(int *)(v9 + 44);
  uint64_t v11 = sub_3D3750();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BED98) + 48);
  swift_bridgeObjectRelease();
  int v14 = *(unsigned __int8 *)(v13 + 32);
  if (v14 != 255) {
    sub_49E54(*(void *)(v13 + 16), *(void *)(v13 + 24), v14);
  }
  int v15 = *(unsigned __int8 *)(v13 + 64);
  if (v15 != 255) {
    sub_4C6F0(*(id *)(v13 + 56), v15);
  }
  int v16 = *(unsigned __int8 *)(v13 + 80);
  if (v16 != 255) {
    sub_4C6F0(*(id *)(v13 + 72), v16);
  }
  int v17 = *(unsigned __int8 *)(v13 + 96);
  if (v17 != 255) {
    sub_4C6F0(*(id *)(v13 + 88), v17);
  }
  int v18 = *(unsigned __int8 *)(v13 + 112);
  if (v18 != 255) {
    sub_4C6F0(*(id *)(v13 + 104), v18);
  }
  int v19 = *(unsigned __int8 *)(v13 + 128);
  if (v19 != 255) {
    sub_4C6F0(*(id *)(v13 + 120), v19);
  }
  v12(v13 + *(int *)(v9 + 44), v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_58:
  swift_release();
LABEL_59:

  return swift_release();
}

void *sub_348030(void *a1, void *a2, uint64_t a3)
{
  type metadata accessor for HeroBackgroundVariant();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v11 = (int *)sub_3D3860();
    uint64_t v12 = *((void *)v11 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v12 + 48))(a2, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
      memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v21 = a2[1];
      *a1 = *a2;
      a1[1] = v21;
      int v22 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v22 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v23 = a2[2];
        uint64_t v24 = a2[3];
        sub_4C484(v23, v24, v22);
        a1[2] = v23;
        a1[3] = v24;
        *((unsigned char *)a1 + 32) = v22;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      uint64_t v110 = (id *)(a2 + 7);
      int v111 = *((unsigned __int8 *)a2 + 64);
      if (v111 == 255)
      {
        a1[7] = *v110;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      }
      else
      {
        id v112 = *v110;
        sub_4C49C(*v110, *((unsigned char *)a2 + 64));
        a1[7] = v112;
        *((unsigned char *)a1 + 64) = v111;
      }
      id v113 = (id *)(a2 + 9);
      int v114 = *((unsigned __int8 *)a2 + 80);
      if (v114 == 255)
      {
        a1[9] = *v113;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      }
      else
      {
        id v115 = *v113;
        sub_4C49C(*v113, *((unsigned char *)a2 + 80));
        a1[9] = v115;
        *((unsigned char *)a1 + 80) = v114;
      }
      id v116 = (id *)(a2 + 11);
      int v117 = *((unsigned __int8 *)a2 + 96);
      if (v117 == 255)
      {
        a1[11] = *v116;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
      }
      else
      {
        id v118 = *v116;
        sub_4C49C(*v116, *((unsigned char *)a2 + 96));
        a1[11] = v118;
        *((unsigned char *)a1 + 96) = v117;
      }
      id v119 = (id *)(a2 + 13);
      int v120 = *((unsigned __int8 *)a2 + 112);
      if (v120 == 255)
      {
        a1[13] = *v119;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      }
      else
      {
        id v121 = *v119;
        sub_4C49C(*v119, *((unsigned char *)a2 + 112));
        a1[13] = v121;
        *((unsigned char *)a1 + 112) = v120;
      }
      id v122 = (id *)(a2 + 15);
      int v123 = *((unsigned __int8 *)a2 + 128);
      if (v123 == 255)
      {
        a1[15] = *v122;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
      }
      else
      {
        id v124 = *v122;
        sub_4C49C(*v122, *((unsigned char *)a2 + 128));
        a1[15] = v124;
        *((unsigned char *)a1 + 128) = v123;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v125 = v11[11];
      uint64_t v126 = (char *)a1 + v125;
      uint64_t v127 = (char *)a2 + v125;
      uint64_t v128 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16))(v126, v127, v128);
      uint64_t v129 = v11[12];
      uint64_t v130 = (void *)((char *)a1 + v129);
      uint64_t v131 = (void *)((char *)a2 + v129);
      uint64_t v132 = v131[1];
      *uint64_t v130 = *v131;
      v130[1] = v132;
      *((unsigned char *)a1 + v11[13]) = *((unsigned char *)a2 + v11[13]);
      *((unsigned char *)a1 + v11[14]) = *((unsigned char *)a2 + v11[14]);
      *((unsigned char *)a1 + v11[15]) = *((unsigned char *)a2 + v11[15]);
      uint64_t v133 = v11[16];
      uint64_t v134 = (void *)((char *)a1 + v133);
      uint64_t v135 = (void *)((char *)a2 + v133);
      uint64_t v136 = v135[1];
      void *v134 = *v135;
      v134[1] = v136;
      uint64_t v137 = *(void (**)(void *, void, uint64_t, int *))(v12 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v137(a1, 0, 1, v11);
    }
    uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
    *(void *)((char *)a1 + *(int *)(v138 + 48)) = *(void *)((char *)a2 + *(int *)(v138 + 48));
    swift_retain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    int v8 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v8 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    }
    else
    {
      uint64_t v9 = a2[2];
      uint64_t v10 = a2[3];
      sub_4C484(v9, v10, v8);
      a1[2] = v9;
      a1[3] = v10;
      *((unsigned char *)a1 + 32) = v8;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    int v18 = (id *)(a2 + 7);
    int v19 = *((unsigned __int8 *)a2 + 64);
    if (v19 == 255)
    {
      a1[7] = *v18;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    }
    else
    {
      id v20 = *v18;
      sub_4C49C(*v18, *((unsigned char *)a2 + 64));
      a1[7] = v20;
      *((unsigned char *)a1 + 64) = v19;
    }
    uint64_t v28 = (id *)(a2 + 9);
    int v29 = *((unsigned __int8 *)a2 + 80);
    if (v29 == 255)
    {
      a1[9] = *v28;
      *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    }
    else
    {
      id v30 = *v28;
      sub_4C49C(*v28, *((unsigned char *)a2 + 80));
      a1[9] = v30;
      *((unsigned char *)a1 + 80) = v29;
    }
    int v34 = (id *)(a2 + 11);
    int v35 = *((unsigned __int8 *)a2 + 96);
    if (v35 == 255)
    {
      a1[11] = *v34;
      *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
    }
    else
    {
      id v36 = *v34;
      sub_4C49C(*v34, *((unsigned char *)a2 + 96));
      a1[11] = v36;
      *((unsigned char *)a1 + 96) = v35;
    }
    int v40 = (id *)(a2 + 13);
    int v41 = *((unsigned __int8 *)a2 + 112);
    if (v41 == 255)
    {
      a1[13] = *v40;
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
    }
    else
    {
      id v42 = *v40;
      sub_4C49C(*v40, *((unsigned char *)a2 + 112));
      a1[13] = v42;
      *((unsigned char *)a1 + 112) = v41;
    }
    int v46 = (id *)(a2 + 15);
    int v47 = *((unsigned __int8 *)a2 + 128);
    if (v47 == 255)
    {
      a1[15] = *v46;
      *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
    }
    else
    {
      id v48 = *v46;
      sub_4C49C(*v46, *((unsigned char *)a2 + 128));
      a1[15] = v48;
      *((unsigned char *)a1 + 128) = v47;
    }
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    int v52 = (int *)sub_3D3860();
    uint64_t v53 = v52[11];
    uint64_t v54 = (char *)a1 + v53;
    uint64_t v55 = (char *)a2 + v53;
    uint64_t v56 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
    uint64_t v57 = v52[12];
    uint64_t v58 = (void *)((char *)a1 + v57);
    uint64_t v59 = (void *)((char *)a2 + v57);
    uint64_t v60 = v59[1];
    void *v58 = *v59;
    v58[1] = v60;
    *((unsigned char *)a1 + v52[13]) = *((unsigned char *)a2 + v52[13]);
    *((unsigned char *)a1 + v52[14]) = *((unsigned char *)a2 + v52[14]);
    *((unsigned char *)a1 + v52[15]) = *((unsigned char *)a2 + v52[15]);
    uint64_t v61 = v52[16];
    uint64_t v62 = (void *)((char *)a1 + v61);
    uint64_t v63 = (void *)((char *)a2 + v61);
    uint64_t v64 = v63[1];
    *uint64_t v62 = *v63;
    v62[1] = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
    *(void *)((char *)a1 + *(int *)(v65 + 48)) = *(void *)((char *)a2 + *(int *)(v65 + 48));
    swift_retain();
  }
  else
  {
    uint64_t v14 = a2[1];
    *a1 = *a2;
    a1[1] = v14;
    int v15 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v15 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    }
    else
    {
      uint64_t v16 = a2[2];
      uint64_t v17 = a2[3];
      sub_4C484(v16, v17, v15);
      a1[2] = v16;
      a1[3] = v17;
      *((unsigned char *)a1 + 32) = v15;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    int v25 = (id *)(a2 + 7);
    int v26 = *((unsigned __int8 *)a2 + 64);
    if (v26 == 255)
    {
      a1[7] = *v25;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    }
    else
    {
      id v27 = *v25;
      sub_4C49C(*v25, *((unsigned char *)a2 + 64));
      a1[7] = v27;
      *((unsigned char *)a1 + 64) = v26;
    }
    int v31 = (id *)(a2 + 9);
    int v32 = *((unsigned __int8 *)a2 + 80);
    if (v32 == 255)
    {
      a1[9] = *v31;
      *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    }
    else
    {
      id v33 = *v31;
      sub_4C49C(*v31, *((unsigned char *)a2 + 80));
      a1[9] = v33;
      *((unsigned char *)a1 + 80) = v32;
    }
    uint64_t v37 = (id *)(a2 + 11);
    int v38 = *((unsigned __int8 *)a2 + 96);
    if (v38 == 255)
    {
      a1[11] = *v37;
      *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
    }
    else
    {
      id v39 = *v37;
      sub_4C49C(*v37, *((unsigned char *)a2 + 96));
      a1[11] = v39;
      *((unsigned char *)a1 + 96) = v38;
    }
    int v43 = (id *)(a2 + 13);
    int v44 = *((unsigned __int8 *)a2 + 112);
    if (v44 == 255)
    {
      a1[13] = *v43;
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
    }
    else
    {
      id v45 = *v43;
      sub_4C49C(*v43, *((unsigned char *)a2 + 112));
      a1[13] = v45;
      *((unsigned char *)a1 + 112) = v44;
    }
    int v49 = (id *)(a2 + 15);
    int v50 = *((unsigned __int8 *)a2 + 128);
    if (v50 == 255)
    {
      a1[15] = *v49;
      *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
    }
    else
    {
      id v51 = *v49;
      sub_4C49C(*v49, v50);
      a1[15] = v51;
      *((unsigned char *)a1 + 128) = v50;
    }
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v66 = (int *)sub_3D3860();
    uint64_t v67 = v66[11];
    uint64_t v68 = (char *)a1 + v67;
    uint64_t v69 = (char *)a2 + v67;
    uint64_t v70 = sub_3D3750();
    uint64_t v145 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
    v145(v68, v69, v70);
    uint64_t v71 = v66[12];
    uint64_t v72 = (void *)((char *)a1 + v71);
    uint64_t v73 = (void *)((char *)a2 + v71);
    uint64_t v74 = v73[1];
    void *v72 = *v73;
    v72[1] = v74;
    *((unsigned char *)a1 + v66[13]) = *((unsigned char *)a2 + v66[13]);
    *((unsigned char *)a1 + v66[14]) = *((unsigned char *)a2 + v66[14]);
    *((unsigned char *)a1 + v66[15]) = *((unsigned char *)a2 + v66[15]);
    uint64_t v75 = v66[16];
    uint64_t v76 = (void *)((char *)a1 + v75);
    uint64_t v77 = (void *)((char *)a2 + v75);
    uint64_t v78 = v77[1];
    *uint64_t v76 = *v77;
    v76[1] = v78;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
    uint64_t v79 = *(int *)(v144 + 48);
    uint64_t v80 = (char *)a1 + v79;
    uint64_t v81 = (char *)a2 + v79;
    uint64_t v82 = *(void *)((char *)a2 + v79 + 8);
    *(void *)uint64_t v80 = *(void *)((char *)a2 + v79);
    *((void *)v80 + 1) = v82;
    int v83 = *((unsigned __int8 *)a2 + v79 + 32);
    swift_bridgeObjectRetain();
    if (v83 == 255)
    {
      *((_OWORD *)v80 + 1) = *((_OWORD *)v81 + 1);
      v80[32] = v81[32];
    }
    else
    {
      uint64_t v84 = a3;
      uint64_t v85 = *((void *)v81 + 2);
      uint64_t v86 = *((void *)v81 + 3);
      sub_4C484(v85, v86, v83);
      *((void *)v80 + 2) = v85;
      *((void *)v80 + 3) = v86;
      a3 = v84;
      v80[32] = v83;
    }
    *(_OWORD *)(v80 + 40) = *(_OWORD *)(v81 + 40);
    uint64_t v87 = (id *)(v81 + 56);
    int v88 = v81[64];
    if (v88 == 255)
    {
      *((void *)v80 + 7) = *v87;
      v80[64] = v81[64];
    }
    else
    {
      id v89 = *v87;
      sub_4C49C(*v87, v81[64]);
      *((void *)v80 + 7) = v89;
      v80[64] = v88;
    }
    id v90 = (id *)(v81 + 72);
    int v91 = v81[80];
    if (v91 == 255)
    {
      *((void *)v80 + 9) = *v90;
      v80[80] = v81[80];
    }
    else
    {
      id v92 = *v90;
      sub_4C49C(*v90, v81[80]);
      *((void *)v80 + 9) = v92;
      v80[80] = v91;
    }
    id v93 = (id *)(v81 + 88);
    int v94 = v81[96];
    if (v94 == 255)
    {
      *((void *)v80 + 11) = *v93;
      v80[96] = v81[96];
    }
    else
    {
      id v95 = *v93;
      sub_4C49C(*v93, v81[96]);
      *((void *)v80 + 11) = v95;
      v80[96] = v94;
    }
    id v96 = (id *)(v81 + 104);
    int v97 = v81[112];
    if (v97 == 255)
    {
      *((void *)v80 + 13) = *v96;
      v80[112] = v81[112];
    }
    else
    {
      id v98 = *v96;
      sub_4C49C(*v96, v81[112]);
      *((void *)v80 + 13) = v98;
      v80[112] = v97;
    }
    id v99 = (id *)(v81 + 120);
    int v100 = v81[128];
    if (v100 == 255)
    {
      *((void *)v80 + 15) = *v99;
      v80[128] = v81[128];
    }
    else
    {
      id v101 = *v99;
      sub_4C49C(*v99, v81[128]);
      *((void *)v80 + 15) = v101;
      v80[128] = v100;
    }
    v80[129] = v81[129];
    v145(&v80[v66[11]], &v81[v66[11]], v70);
    uint64_t v102 = v66[12];
    uint64_t v103 = &v80[v102];
    uint64_t v104 = &v81[v102];
    uint64_t v105 = *((void *)v104 + 1);
    *(void *)uint64_t v103 = *(void *)v104;
    *((void *)v103 + 1) = v105;
    v80[v66[13]] = v81[v66[13]];
    v80[v66[14]] = v81[v66[14]];
    v80[v66[15]] = v81[v66[15]];
    uint64_t v106 = v66[16];
    uint64_t v107 = &v80[v106];
    uint64_t v108 = &v81[v106];
    uint64_t v109 = *((void *)v108 + 1);
    *(void *)uint64_t v107 = *(void *)v108;
    *((void *)v107 + 1) = v109;
    *(void *)((char *)a1 + *(int *)(v144 + 64)) = *(void *)((char *)a2 + *(int *)(v144 + 64));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v139 = *(int *)(a3 + 36);
  uint64_t v140 = (void *)((char *)a1 + v139);
  uint64_t v141 = (void *)((char *)a2 + v139);
  uint64_t v142 = v141[1];
  *uint64_t v140 = *v141;
  v140[1] = v142;
  swift_retain();
  return a1;
}

void *sub_348B24(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_34B2D0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
    type metadata accessor for HeroBackgroundVariant();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = (int *)sub_3D3860();
      uint64_t v11 = *((void *)v10 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        int v20 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v20 == 255)
        {
          long long v118 = *((_OWORD *)a2 + 1);
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          *((_OWORD *)a1 + 1) = v118;
        }
        else
        {
          uint64_t v21 = a2[2];
          uint64_t v22 = a2[3];
          sub_4C484(v21, v22, v20);
          a1[2] = v21;
          a1[3] = v22;
          *((unsigned char *)a1 + 32) = v20;
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        id v119 = (id *)(a2 + 7);
        int v120 = *((unsigned __int8 *)a2 + 64);
        if (v120 == 255)
        {
          id v122 = *v119;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          a1[7] = v122;
        }
        else
        {
          id v121 = *v119;
          sub_4C49C(*v119, *((unsigned char *)a2 + 64));
          a1[7] = v121;
          *((unsigned char *)a1 + 64) = v120;
        }
        int v123 = (id *)(a2 + 9);
        int v124 = *((unsigned __int8 *)a2 + 80);
        if (v124 == 255)
        {
          id v126 = *v123;
          *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
          a1[9] = v126;
        }
        else
        {
          id v125 = *v123;
          sub_4C49C(*v123, *((unsigned char *)a2 + 80));
          a1[9] = v125;
          *((unsigned char *)a1 + 80) = v124;
        }
        uint64_t v127 = (id *)(a2 + 11);
        int v128 = *((unsigned __int8 *)a2 + 96);
        if (v128 == 255)
        {
          id v130 = *v127;
          *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
          a1[11] = v130;
        }
        else
        {
          id v129 = *v127;
          sub_4C49C(*v127, *((unsigned char *)a2 + 96));
          a1[11] = v129;
          *((unsigned char *)a1 + 96) = v128;
        }
        uint64_t v131 = (id *)(a2 + 13);
        int v132 = *((unsigned __int8 *)a2 + 112);
        if (v132 == 255)
        {
          id v134 = *v131;
          *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
          a1[13] = v134;
        }
        else
        {
          id v133 = *v131;
          sub_4C49C(*v131, *((unsigned char *)a2 + 112));
          a1[13] = v133;
          *((unsigned char *)a1 + 112) = v132;
        }
        uint64_t v135 = (id *)(a2 + 15);
        int v136 = *((unsigned __int8 *)a2 + 128);
        if (v136 == 255)
        {
          id v138 = *v135;
          *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
          a1[15] = v138;
        }
        else
        {
          id v137 = *v135;
          sub_4C49C(*v135, *((unsigned char *)a2 + 128));
          a1[15] = v137;
          *((unsigned char *)a1 + 128) = v136;
        }
        *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
        uint64_t v139 = v10[11];
        uint64_t v140 = (char *)a1 + v139;
        uint64_t v141 = (char *)a2 + v139;
        uint64_t v142 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16))(v140, v141, v142);
        uint64_t v143 = v10[12];
        uint64_t v144 = (void *)((char *)a1 + v143);
        uint64_t v145 = (void *)((char *)a2 + v143);
        *uint64_t v144 = *v145;
        v144[1] = v145[1];
        *((unsigned char *)a1 + v10[13]) = *((unsigned char *)a2 + v10[13]);
        *((unsigned char *)a1 + v10[14]) = *((unsigned char *)a2 + v10[14]);
        *((unsigned char *)a1 + v10[15]) = *((unsigned char *)a2 + v10[15]);
        uint64_t v146 = v10[16];
        uint64_t v147 = (void *)((char *)a1 + v146);
        uint64_t v148 = (void *)((char *)a2 + v146);
        *uint64_t v147 = *v148;
        v147[1] = v148[1];
        uint64_t v149 = *(void (**)(void *, void, uint64_t, int *))(v11 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v149(a1, 0, 1, v10);
      }
      uint64_t v150 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
      *(void *)((char *)a1 + *(int *)(v150 + 48)) = *(void *)((char *)a2 + *(int *)(v150 + 48));
      swift_retain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      int v7 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v7 == 255)
      {
        long long v16 = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        *((_OWORD *)a1 + 1) = v16;
      }
      else
      {
        uint64_t v8 = a2[2];
        uint64_t v9 = a2[3];
        sub_4C484(v8, v9, v7);
        a1[2] = v8;
        a1[3] = v9;
        *((unsigned char *)a1 + 32) = v7;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      uint64_t v17 = (id *)(a2 + 7);
      int v18 = *((unsigned __int8 *)a2 + 64);
      if (v18 == 255)
      {
        id v27 = *v17;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        a1[7] = v27;
      }
      else
      {
        id v19 = *v17;
        sub_4C49C(*v17, *((unsigned char *)a2 + 64));
        a1[7] = v19;
        *((unsigned char *)a1 + 64) = v18;
      }
      uint64_t v28 = (id *)(a2 + 9);
      int v29 = *((unsigned __int8 *)a2 + 80);
      if (v29 == 255)
      {
        id v35 = *v28;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
        a1[9] = v35;
      }
      else
      {
        id v30 = *v28;
        sub_4C49C(*v28, *((unsigned char *)a2 + 80));
        a1[9] = v30;
        *((unsigned char *)a1 + 80) = v29;
      }
      id v36 = (id *)(a2 + 11);
      int v37 = *((unsigned __int8 *)a2 + 96);
      if (v37 == 255)
      {
        id v43 = *v36;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
        a1[11] = v43;
      }
      else
      {
        id v38 = *v36;
        sub_4C49C(*v36, *((unsigned char *)a2 + 96));
        a1[11] = v38;
        *((unsigned char *)a1 + 96) = v37;
      }
      int v44 = (id *)(a2 + 13);
      int v45 = *((unsigned __int8 *)a2 + 112);
      if (v45 == 255)
      {
        id v51 = *v44;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        a1[13] = v51;
      }
      else
      {
        id v46 = *v44;
        sub_4C49C(*v44, *((unsigned char *)a2 + 112));
        a1[13] = v46;
        *((unsigned char *)a1 + 112) = v45;
      }
      int v52 = (id *)(a2 + 15);
      int v53 = *((unsigned __int8 *)a2 + 128);
      if (v53 == 255)
      {
        id v59 = *v52;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
        a1[15] = v59;
      }
      else
      {
        id v54 = *v52;
        sub_4C49C(*v52, *((unsigned char *)a2 + 128));
        a1[15] = v54;
        *((unsigned char *)a1 + 128) = v53;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v60 = (int *)sub_3D3860();
      uint64_t v61 = v60[11];
      uint64_t v62 = (char *)a1 + v61;
      uint64_t v63 = (char *)a2 + v61;
      uint64_t v64 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
      uint64_t v65 = v60[12];
      uint64_t v66 = (void *)((char *)a1 + v65);
      uint64_t v67 = (void *)((char *)a2 + v65);
      *uint64_t v66 = *v67;
      v66[1] = v67[1];
      *((unsigned char *)a1 + v60[13]) = *((unsigned char *)a2 + v60[13]);
      *((unsigned char *)a1 + v60[14]) = *((unsigned char *)a2 + v60[14]);
      *((unsigned char *)a1 + v60[15]) = *((unsigned char *)a2 + v60[15]);
      uint64_t v68 = v60[16];
      uint64_t v69 = (void *)((char *)a1 + v68);
      uint64_t v70 = (void *)((char *)a2 + v68);
      *uint64_t v69 = *v70;
      v69[1] = v70[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
      *(void *)((char *)a1 + *(int *)(v71 + 48)) = *(void *)((char *)a2 + *(int *)(v71 + 48));
      swift_retain();
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      int v13 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v13 == 255)
      {
        long long v23 = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        *((_OWORD *)a1 + 1) = v23;
      }
      else
      {
        uint64_t v14 = a2[2];
        uint64_t v15 = a2[3];
        sub_4C484(v14, v15, v13);
        a1[2] = v14;
        a1[3] = v15;
        *((unsigned char *)a1 + 32) = v13;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      uint64_t v24 = (id *)(a2 + 7);
      int v25 = *((unsigned __int8 *)a2 + 64);
      if (v25 == 255)
      {
        id v31 = *v24;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        a1[7] = v31;
      }
      else
      {
        id v26 = *v24;
        sub_4C49C(*v24, *((unsigned char *)a2 + 64));
        a1[7] = v26;
        *((unsigned char *)a1 + 64) = v25;
      }
      int v32 = (id *)(a2 + 9);
      int v33 = *((unsigned __int8 *)a2 + 80);
      if (v33 == 255)
      {
        id v39 = *v32;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
        a1[9] = v39;
      }
      else
      {
        id v34 = *v32;
        sub_4C49C(*v32, *((unsigned char *)a2 + 80));
        a1[9] = v34;
        *((unsigned char *)a1 + 80) = v33;
      }
      int v40 = (id *)(a2 + 11);
      int v41 = *((unsigned __int8 *)a2 + 96);
      if (v41 == 255)
      {
        id v47 = *v40;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
        a1[11] = v47;
      }
      else
      {
        id v42 = *v40;
        sub_4C49C(*v40, *((unsigned char *)a2 + 96));
        a1[11] = v42;
        *((unsigned char *)a1 + 96) = v41;
      }
      id v48 = (id *)(a2 + 13);
      int v49 = *((unsigned __int8 *)a2 + 112);
      if (v49 == 255)
      {
        id v55 = *v48;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        a1[13] = v55;
      }
      else
      {
        id v50 = *v48;
        sub_4C49C(*v48, *((unsigned char *)a2 + 112));
        a1[13] = v50;
        *((unsigned char *)a1 + 112) = v49;
      }
      uint64_t v56 = (id *)(a2 + 15);
      int v57 = *((unsigned __int8 *)a2 + 128);
      if (v57 == 255)
      {
        id v72 = *v56;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
        a1[15] = v72;
      }
      else
      {
        id v58 = *v56;
        sub_4C49C(*v56, v57);
        a1[15] = v58;
        *((unsigned char *)a1 + 128) = v57;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v73 = (int *)sub_3D3860();
      uint64_t v74 = v73[11];
      uint64_t v75 = (char *)a1 + v74;
      uint64_t v76 = (char *)a2 + v74;
      uint64_t v77 = sub_3D3750();
      unint64_t v157 = *(void (**)(char *, char *, uint64_t))(*(void *)(v77 - 8) + 16);
      v157(v75, v76, v77);
      uint64_t v78 = v73[12];
      uint64_t v79 = (void *)((char *)a1 + v78);
      uint64_t v80 = (void *)((char *)a2 + v78);
      *uint64_t v79 = *v80;
      v79[1] = v80[1];
      *((unsigned char *)a1 + v73[13]) = *((unsigned char *)a2 + v73[13]);
      *((unsigned char *)a1 + v73[14]) = *((unsigned char *)a2 + v73[14]);
      *((unsigned char *)a1 + v73[15]) = *((unsigned char *)a2 + v73[15]);
      uint64_t v81 = v73[16];
      uint64_t v82 = (void *)((char *)a1 + v81);
      int v83 = (void *)((char *)a2 + v81);
      *uint64_t v82 = *v83;
      v82[1] = v83[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
      uint64_t v84 = *(int *)(v156 + 48);
      uint64_t v85 = (char *)a1 + v84;
      uint64_t v86 = (char *)a2 + v84;
      *(void *)uint64_t v85 = *(void *)((char *)a2 + v84);
      *((void *)v85 + 1) = *(void *)((char *)a2 + v84 + 8);
      int v87 = *((unsigned __int8 *)a2 + v84 + 32);
      swift_bridgeObjectRetain();
      if (v87 == 255)
      {
        long long v91 = *((_OWORD *)v86 + 1);
        v85[32] = v86[32];
        *((_OWORD *)v85 + 1) = v91;
      }
      else
      {
        uint64_t v88 = a3;
        uint64_t v89 = *((void *)v86 + 2);
        uint64_t v90 = *((void *)v86 + 3);
        sub_4C484(v89, v90, v87);
        *((void *)v85 + 2) = v89;
        *((void *)v85 + 3) = v90;
        a3 = v88;
        v85[32] = v87;
      }
      *((void *)v85 + 5) = *((void *)v86 + 5);
      *((void *)v85 + 6) = *((void *)v86 + 6);
      id v92 = (id *)(v86 + 56);
      int v93 = v86[64];
      if (v93 == 255)
      {
        id v95 = *v92;
        v85[64] = v86[64];
        *((void *)v85 + 7) = v95;
      }
      else
      {
        id v94 = *v92;
        sub_4C49C(*v92, v86[64]);
        *((void *)v85 + 7) = v94;
        v85[64] = v93;
      }
      id v96 = (id *)(v86 + 72);
      int v97 = v86[80];
      if (v97 == 255)
      {
        id v99 = *v96;
        v85[80] = v86[80];
        *((void *)v85 + 9) = v99;
      }
      else
      {
        id v98 = *v96;
        sub_4C49C(*v96, v86[80]);
        *((void *)v85 + 9) = v98;
        v85[80] = v97;
      }
      int v100 = (id *)(v86 + 88);
      int v101 = v86[96];
      if (v101 == 255)
      {
        id v103 = *v100;
        v85[96] = v86[96];
        *((void *)v85 + 11) = v103;
      }
      else
      {
        id v102 = *v100;
        sub_4C49C(*v100, v86[96]);
        *((void *)v85 + 11) = v102;
        v85[96] = v101;
      }
      uint64_t v104 = (id *)(v86 + 104);
      int v105 = v86[112];
      if (v105 == 255)
      {
        id v107 = *v104;
        v85[112] = v86[112];
        *((void *)v85 + 13) = v107;
      }
      else
      {
        id v106 = *v104;
        sub_4C49C(*v104, v86[112]);
        *((void *)v85 + 13) = v106;
        v85[112] = v105;
      }
      uint64_t v108 = (id *)(v86 + 120);
      int v109 = v86[128];
      if (v109 == 255)
      {
        id v111 = *v108;
        v85[128] = v86[128];
        *((void *)v85 + 15) = v111;
      }
      else
      {
        id v110 = *v108;
        sub_4C49C(*v108, v86[128]);
        *((void *)v85 + 15) = v110;
        v85[128] = v109;
      }
      v85[129] = v86[129];
      v157(&v85[v73[11]], &v86[v73[11]], v77);
      uint64_t v112 = v73[12];
      id v113 = &v85[v112];
      int v114 = &v86[v112];
      *(void *)id v113 = *(void *)v114;
      *((void *)v113 + 1) = *((void *)v114 + 1);
      v85[v73[13]] = v86[v73[13]];
      v85[v73[14]] = v86[v73[14]];
      v85[v73[15]] = v86[v73[15]];
      uint64_t v115 = v73[16];
      id v116 = &v85[v115];
      int v117 = &v86[v115];
      *(void *)id v116 = *(void *)v117;
      *((void *)v116 + 1) = *((void *)v117 + 1);
      *(void *)((char *)a1 + *(int *)(v156 + 64)) = *(void *)((char *)a2 + *(int *)(v156 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v151 = *(int *)(a3 + 36);
  uint64_t v152 = (void *)((char *)a1 + v151);
  uint64_t v153 = (void *)((char *)a2 + v151);
  uint64_t v154 = v153[1];
  *uint64_t v152 = *v153;
  v152[1] = v154;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_3496C8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  type metadata accessor for HeroBackgroundVariant();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v14 = (int *)sub_3D3860();
    uint64_t v15 = *((void *)v14 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v15 + 48))(a2, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
      memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      long long v29 = a2[1];
      *a1 = *a2;
      a1[1] = v29;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v30 = v14[11];
      id v31 = (char *)a1 + v30;
      int v32 = (char *)a2 + v30;
      uint64_t v33 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      *(_OWORD *)((char *)a1 + v14[12]) = *(_OWORD *)((char *)a2 + v14[12]);
      *((unsigned char *)a1 + v14[13]) = *((unsigned char *)a2 + v14[13]);
      *((unsigned char *)a1 + v14[14]) = *((unsigned char *)a2 + v14[14]);
      *((unsigned char *)a1 + v14[15]) = *((unsigned char *)a2 + v14[15]);
      *(_OWORD *)((char *)a1 + v14[16]) = *(_OWORD *)((char *)a2 + v14[16]);
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v15 + 56))(a1, 0, 1, v14);
    }
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
    *(void *)((char *)a1 + *(int *)(v34 + 48)) = *(void *)((char *)a2 + *(int *)(v34 + 48));
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 1)
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((void *)a1 + 7) = *((void *)a2 + 7);
    *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v8 = (int *)sub_3D3860();
    uint64_t v9 = v8[11];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    *(_OWORD *)((char *)a1 + v8[12]) = *(_OWORD *)((char *)a2 + v8[12]);
    *((unsigned char *)a1 + v8[13]) = *((unsigned char *)a2 + v8[13]);
    *((unsigned char *)a1 + v8[14]) = *((unsigned char *)a2 + v8[14]);
    *((unsigned char *)a1 + v8[15]) = *((unsigned char *)a2 + v8[15]);
    *(_OWORD *)((char *)a1 + v8[16]) = *(_OWORD *)((char *)a2 + v8[16]);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
    *(void *)((char *)a1 + *(int *)(v13 + 48)) = *(void *)((char *)a2 + *(int *)(v13 + 48));
LABEL_9:
    swift_storeEnumTagMultiPayload();
    goto LABEL_10;
  }
  uint64_t v36 = a3;
  long long v17 = a2[1];
  *a1 = *a2;
  a1[1] = v17;
  *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
  *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
  *((void *)a1 + 7) = *((void *)a2 + 7);
  *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
  *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
  *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
  *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
  *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
  int v18 = (int *)sub_3D3860();
  uint64_t v19 = v18[11];
  int v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_3D3750();
  long long v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
  v23(v20, v21, v22);
  *(_OWORD *)((char *)a1 + v18[12]) = *(_OWORD *)((char *)a2 + v18[12]);
  *((unsigned char *)a1 + v18[13]) = *((unsigned char *)a2 + v18[13]);
  *((unsigned char *)a1 + v18[14]) = *((unsigned char *)a2 + v18[14]);
  *((unsigned char *)a1 + v18[15]) = *((unsigned char *)a2 + v18[15]);
  *(_OWORD *)((char *)a1 + v18[16]) = *(_OWORD *)((char *)a2 + v18[16]);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
  uint64_t v25 = *(int *)(v24 + 48);
  id v26 = (char *)a1 + v25;
  id v27 = (char *)a2 + v25;
  long long v28 = *(_OWORD *)((char *)a2 + v25 + 16);
  *(_OWORD *)id v26 = *(_OWORD *)((char *)a2 + v25);
  *((_OWORD *)v26 + 1) = v28;
  v26[32] = *((unsigned char *)a2 + v25 + 32);
  *(_OWORD *)(v26 + 40) = *(_OWORD *)((char *)a2 + v25 + 40);
  *((void *)v26 + 7) = *(void *)((char *)a2 + v25 + 56);
  v26[64] = *((unsigned char *)a2 + v25 + 64);
  *(_OWORD *)(v26 + 113) = *(_OWORD *)((char *)a2 + v25 + 113);
  *(_OWORD *)(v26 + 104) = *(_OWORD *)((char *)a2 + v25 + 104);
  *(_OWORD *)(v26 + 88) = *(_OWORD *)((char *)a2 + v25 + 88);
  *(_OWORD *)(v26 + 72) = *(_OWORD *)((char *)a2 + v25 + 72);
  v26[129] = *((unsigned char *)a2 + v25 + 129);
  v23((char *)a1 + v25 + v18[11], (char *)a2 + v25 + v18[11], v22);
  *(_OWORD *)&v26[v18[12]] = *(_OWORD *)&v27[v18[12]];
  v26[v18[13]] = v27[v18[13]];
  v26[v18[14]] = v27[v18[14]];
  v26[v18[15]] = v27[v18[15]];
  *(_OWORD *)&v26[v18[16]] = *(_OWORD *)&v27[v18[16]];
  *(void *)((char *)a1 + *(int *)(v24 + 64)) = *(void *)((char *)a2 + *(int *)(v24 + 64));
  swift_storeEnumTagMultiPayload();
  a3 = v36;
LABEL_10:
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 36)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 36));
  return a1;
}

_OWORD *sub_349BE4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_34B2D0((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
    type metadata accessor for HeroBackgroundVariant();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v14 = (int *)sub_3D3860();
      uint64_t v15 = *((void *)v14 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v15 + 48))(a2, 1, v14))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        long long v29 = a2[1];
        *a1 = *a2;
        a1[1] = v29;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
        *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
        uint64_t v30 = v14[11];
        id v31 = (char *)a1 + v30;
        int v32 = (char *)a2 + v30;
        uint64_t v33 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
        *(_OWORD *)((char *)a1 + v14[12]) = *(_OWORD *)((char *)a2 + v14[12]);
        *((unsigned char *)a1 + v14[13]) = *((unsigned char *)a2 + v14[13]);
        *((unsigned char *)a1 + v14[14]) = *((unsigned char *)a2 + v14[14]);
        *((unsigned char *)a1 + v14[15]) = *((unsigned char *)a2 + v14[15]);
        *(_OWORD *)((char *)a1 + v14[16]) = *(_OWORD *)((char *)a2 + v14[16]);
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v15 + 56))(a1, 0, 1, v14);
      }
      uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
      *(void *)((char *)a1 + *(int *)(v34 + 48)) = *(void *)((char *)a2 + *(int *)(v34 + 48));
      goto LABEL_10;
    }
    if (EnumCaseMultiPayload == 1)
    {
      long long v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v8 = (int *)sub_3D3860();
      uint64_t v9 = v8[11];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      *(_OWORD *)((char *)a1 + v8[12]) = *(_OWORD *)((char *)a2 + v8[12]);
      *((unsigned char *)a1 + v8[13]) = *((unsigned char *)a2 + v8[13]);
      *((unsigned char *)a1 + v8[14]) = *((unsigned char *)a2 + v8[14]);
      *((unsigned char *)a1 + v8[15]) = *((unsigned char *)a2 + v8[15]);
      *(_OWORD *)((char *)a1 + v8[16]) = *(_OWORD *)((char *)a2 + v8[16]);
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
      *(void *)((char *)a1 + *(int *)(v13 + 48)) = *(void *)((char *)a2 + *(int *)(v13 + 48));
LABEL_10:
      swift_storeEnumTagMultiPayload();
      goto LABEL_11;
    }
    uint64_t v36 = a3;
    long long v17 = a2[1];
    *a1 = *a2;
    a1[1] = v17;
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((void *)a1 + 7) = *((void *)a2 + 7);
    *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    int v18 = (int *)sub_3D3860();
    uint64_t v19 = v18[11];
    int v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = sub_3D3750();
    long long v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
    v23(v20, v21, v22);
    *(_OWORD *)((char *)a1 + v18[12]) = *(_OWORD *)((char *)a2 + v18[12]);
    *((unsigned char *)a1 + v18[13]) = *((unsigned char *)a2 + v18[13]);
    *((unsigned char *)a1 + v18[14]) = *((unsigned char *)a2 + v18[14]);
    *((unsigned char *)a1 + v18[15]) = *((unsigned char *)a2 + v18[15]);
    *(_OWORD *)((char *)a1 + v18[16]) = *(_OWORD *)((char *)a2 + v18[16]);
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
    uint64_t v25 = *(int *)(v24 + 48);
    id v26 = (char *)a1 + v25;
    id v27 = (char *)a2 + v25;
    long long v28 = *(_OWORD *)((char *)a2 + v25 + 16);
    *(_OWORD *)id v26 = *(_OWORD *)((char *)a2 + v25);
    *((_OWORD *)v26 + 1) = v28;
    v26[32] = *((unsigned char *)a2 + v25 + 32);
    *(_OWORD *)(v26 + 40) = *(_OWORD *)((char *)a2 + v25 + 40);
    *((void *)v26 + 7) = *(void *)((char *)a2 + v25 + 56);
    v26[64] = *((unsigned char *)a2 + v25 + 64);
    *(_OWORD *)(v26 + 113) = *(_OWORD *)((char *)a2 + v25 + 113);
    *(_OWORD *)(v26 + 104) = *(_OWORD *)((char *)a2 + v25 + 104);
    *(_OWORD *)(v26 + 88) = *(_OWORD *)((char *)a2 + v25 + 88);
    *(_OWORD *)(v26 + 72) = *(_OWORD *)((char *)a2 + v25 + 72);
    v26[129] = *((unsigned char *)a2 + v25 + 129);
    v23((char *)a1 + v25 + v18[11], (char *)a2 + v25 + v18[11], v22);
    *(_OWORD *)&v26[v18[12]] = *(_OWORD *)&v27[v18[12]];
    v26[v18[13]] = v27[v18[13]];
    v26[v18[14]] = v27[v18[14]];
    v26[v18[15]] = v27[v18[15]];
    *(_OWORD *)&v26[v18[16]] = *(_OWORD *)&v27[v18[16]];
    *(void *)((char *)a1 + *(int *)(v24 + 64)) = *(void *)((char *)a2 + *(int *)(v24 + 64));
    swift_storeEnumTagMultiPayload();
    a3 = v36;
  }
LABEL_11:
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 36)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 36));
  swift_release();
  return a1;
}

uint64_t sub_34A130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_34A144);
}

uint64_t sub_34A144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for HeroBackgroundVariant();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_34A204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_34A218);
}

uint64_t sub_34A218(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for HeroBackgroundVariant();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_34A2D4()
{
  return swift_getOpaqueTypeConformance2();
}

unsigned char *storeEnumTagSinglePayload for HeroChinLayout.Piece(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x34A56CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeroChinLayout.Piece()
{
  return &type metadata for HeroChinLayout.Piece;
}

ValueMetadata *type metadata accessor for HeroChinLayout()
{
  return &type metadata for HeroChinLayout;
}

uint64_t sub_34A5B4@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  LODWORD(v38) = a1;
  uint64_t v31 = a2;
  uint64_t v3 = sub_3D5F30();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v42 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4ABE68);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_3D5FE0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEE40);
  uint64_t v14 = v13 - 8;
  __n128 v15 = __chkstk_darwin(v13);
  long long v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v39 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
  uint64_t v40 = v10 + 16;
  v39(v12, v2, v9, v15);
  sub_34B288(&qword_4BEE48, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  int v41 = v12;
  sub_3D7F70();
  int v18 = &v17[*(int *)(v14 + 44)];
  sub_34B288((unint64_t *)&qword_4B1398, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  uint64_t v19 = *(void *)v18;
  sub_3D8330();
  if (v19 == v43[0])
  {
    int v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_3:
    v20(v8, 1, 1, v3);
  }
  else
  {
    int v32 = v38;
    uint64_t v36 = (void (**)(char *, uint64_t))(v10 + 8);
    int v37 = (void (**)(char *))(v4 + 16);
    id v38 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
    uint64_t v34 = (void (**)(char *))(v4 + 32);
    id v35 = (unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48);
    uint64_t v33 = (void (**)(char *, uint64_t))(v4 + 8);
    while (1)
    {
      uint64_t v24 = (void (*)(uint64_t *, void))sub_3D8370();
      (*v37)(v8);
      v24(v43, 0);
      uint64_t v25 = v41;
      ((void (*)(char *, char *, uint64_t))v39)(v41, v17, v9);
      sub_3D8340();
      (*v36)(v25, v9);
      int v20 = *v38;
      (*v38)(v8, 0, 1, v3);
      if ((*v35)(v8, 1, v3) == 1) {
        break;
      }
      id v26 = v8;
      uint64_t v27 = (uint64_t)v17;
      long long v28 = *v34;
      long long v29 = v26;
      (*v34)(v42);
      sub_34B02C();
      sub_3D5F40();
      if (LOBYTE(v43[0]) != 2 && ((LOBYTE(v43[0]) ^ v32) & 1) == 0)
      {
        sub_250FC(v27, &qword_4BEE40);
        uint64_t v30 = v31;
        ((void (*)(uint64_t, char *, uint64_t))v28)(v31, v42, v3);
        return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v20)(v30, 0, 1, v3);
      }
      (*v33)(v42, v3);
      uint64_t v22 = *(void *)v18;
      sub_3D8330();
      BOOL v23 = v22 == v43[0];
      long long v17 = (char *)v27;
      uint64_t v8 = v29;
      if (v23) {
        goto LABEL_3;
      }
    }
  }
  sub_250FC((uint64_t)v17, &qword_4BEE40);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v20)(v31, 1, 1, v3);
}

double sub_34AAB4(uint64_t a1, char a2)
{
  double result = *(double *)&a1;
  if (a2) {
    return 10.0;
  }
  return result;
}

uint64_t sub_34AAD4(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_34ACC4(a9, a1, a2, a3, a4);
}

unint64_t sub_34AAE4()
{
  unint64_t result = qword_4BEE30;
  if (!qword_4BEE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BEE30);
  }
  return result;
}

unint64_t sub_34AB3C()
{
  unint64_t result = qword_4BEE38;
  if (!qword_4BEE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BEE38);
  }
  return result;
}

uint64_t sub_34AB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 - 8);
  uint64_t v6 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (void (*)(void))__chkstk_darwin(v6);
  uint64_t v11 = (char *)&v14 - v10;
  v9();
  sub_186390(v8);
  uint64_t v12 = *(void (**)(char *, uint64_t))(v5 + 8);
  v12(v8, a4);
  sub_186390(v11);
  return ((uint64_t (*)(char *, uint64_t))v12)(v11, a4);
}

uint64_t sub_34ACC4(uint64_t a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_4ABE68);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  __n128 v15 = (char *)&v28 - v14;
  uint64_t v16 = sub_3D5F30();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v28 - v21;
  sub_34A5B4(1, (uint64_t)v15);
  BOOL v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v23(v15, 1, v16) == 1)
  {
    uint64_t v24 = (uint64_t)v15;
    return sub_250FC(v24, &qword_4ABE68);
  }
  uint64_t v30 = v19;
  uint64_t v31 = a1;
  long long v29 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
  v29(v22, v15, v16);
  char v37 = 0;
  char v36 = 0;
  sub_3D5F10();
  v38.origin.x = a2;
  v38.origin.y = a3;
  v38.size.width = a4;
  v38.size.height = a5;
  CGRectGetMinX(v38);
  v39.origin.x = a2;
  v39.origin.y = a3;
  v39.size.width = a4;
  v39.size.height = a5;
  CGRectGetMaxY(v39);
  sub_3D6930();
  char v35 = 0;
  char v34 = 0;
  sub_3D5F20();
  sub_34A5B4(0, (uint64_t)v12);
  if (v23(v12, 1, v16) == 1)
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    uint64_t v24 = (uint64_t)v12;
    return sub_250FC(v24, &qword_4ABE68);
  }
  id v26 = v30;
  v29(v30, v12, v16);
  sub_3D6930();
  char v33 = 0;
  char v32 = 0;
  sub_3D5F20();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v17 + 8);
  v27(v26, v16);
  return ((uint64_t (*)(char *, uint64_t))v27)(v22, v16);
}

unint64_t sub_34B02C()
{
  unint64_t result = qword_4BEE50;
  if (!qword_4BEE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BEE50);
  }
  return result;
}

uint64_t sub_34B080(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_34B0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_34B150(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_34B1B8()
{
  unint64_t result = qword_4BEE78;
  if (!qword_4BEE78)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BED68);
    sub_34B288(&qword_4BEE80, (void (*)(uint64_t))type metadata accessor for HeroSupplementalArtworkView);
    sub_3D6E4(&qword_4BEE70, &qword_4BED80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BEE78);
  }
  return result;
}

uint64_t sub_34B288(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_34B2D0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_34B330()
{
  return _swift_deallocObject(v0, 32, 7);
}

unint64_t sub_34B340()
{
  unint64_t result = qword_4BEE88;
  if (!qword_4BEE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BEE88);
  }
  return result;
}

uint64_t sub_34B394()
{
  return sub_34AB90(v0[6], v0[7], v0[2], v0[3]);
}

uint64_t *initializeBufferWithCopyOfBuffer for HeroBackground(uint64_t *a1, uint64_t *a2)
{
  int v4 = *(_DWORD *)(*(void *)(type metadata accessor for HeroBackgroundVariant() - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v11 = (int *)sub_3D3860();
      uint64_t v12 = *((void *)v11 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v12 + 48))(a2, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        uint64_t v21 = a2[1];
        *a1 = *a2;
        a1[1] = v21;
        int v22 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v22 == 255)
        {
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        }
        else
        {
          uint64_t v23 = a2[2];
          uint64_t v24 = a2[3];
          sub_4C484(v23, v24, v22);
          a1[2] = v23;
          a1[3] = v24;
          *((unsigned char *)a1 + 32) = v22;
        }
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        int v109 = (id *)(a2 + 7);
        int v110 = *((unsigned __int8 *)a2 + 64);
        if (v110 == 255)
        {
          a1[7] = (uint64_t)*v109;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        }
        else
        {
          id v111 = *v109;
          sub_4C49C(*v109, *((unsigned char *)a2 + 64));
          a1[7] = (uint64_t)v111;
          *((unsigned char *)a1 + 64) = v110;
        }
        uint64_t v112 = (id *)(a2 + 9);
        int v113 = *((unsigned __int8 *)a2 + 80);
        if (v113 == 255)
        {
          a1[9] = (uint64_t)*v112;
          *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
        }
        else
        {
          id v114 = *v112;
          sub_4C49C(*v112, *((unsigned char *)a2 + 80));
          a1[9] = (uint64_t)v114;
          *((unsigned char *)a1 + 80) = v113;
        }
        uint64_t v115 = (id *)(a2 + 11);
        int v116 = *((unsigned __int8 *)a2 + 96);
        if (v116 == 255)
        {
          a1[11] = (uint64_t)*v115;
          *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
        }
        else
        {
          id v117 = *v115;
          sub_4C49C(*v115, *((unsigned char *)a2 + 96));
          a1[11] = (uint64_t)v117;
          *((unsigned char *)a1 + 96) = v116;
        }
        long long v118 = (id *)(a2 + 13);
        int v119 = *((unsigned __int8 *)a2 + 112);
        if (v119 == 255)
        {
          a1[13] = (uint64_t)*v118;
          *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        }
        else
        {
          id v120 = *v118;
          sub_4C49C(*v118, *((unsigned char *)a2 + 112));
          a1[13] = (uint64_t)v120;
          *((unsigned char *)a1 + 112) = v119;
        }
        id v121 = (id *)(a2 + 15);
        int v122 = *((unsigned __int8 *)a2 + 128);
        if (v122 == 255)
        {
          a1[15] = (uint64_t)*v121;
          *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
        }
        else
        {
          id v123 = *v121;
          sub_4C49C(*v121, *((unsigned char *)a2 + 128));
          a1[15] = (uint64_t)v123;
          *((unsigned char *)a1 + 128) = v122;
        }
        *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
        uint64_t v124 = v11[11];
        id v125 = (char *)a1 + v124;
        id v126 = (char *)a2 + v124;
        uint64_t v127 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v127 - 8) + 16))(v125, v126, v127);
        uint64_t v128 = v11[12];
        id v129 = (uint64_t *)((char *)a1 + v128);
        id v130 = (uint64_t *)((char *)a2 + v128);
        uint64_t v131 = v130[1];
        *id v129 = *v130;
        v129[1] = v131;
        *((unsigned char *)a1 + v11[13]) = *((unsigned char *)a2 + v11[13]);
        *((unsigned char *)a1 + v11[14]) = *((unsigned char *)a2 + v11[14]);
        *((unsigned char *)a1 + v11[15]) = *((unsigned char *)a2 + v11[15]);
        uint64_t v132 = v11[16];
        id v133 = (uint64_t *)((char *)a1 + v132);
        id v134 = (uint64_t *)((char *)a2 + v132);
        uint64_t v135 = v134[1];
        *id v133 = *v134;
        v133[1] = v135;
        int v136 = *(void (**)(uint64_t *, void, uint64_t, int *))(v12 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v136(a1, 0, 1, v11);
      }
      uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
      *(uint64_t *)((char *)a1 + *(int *)(v137 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v137 + 48));
      swift_retain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      int v7 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v7 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v8 = a2[2];
        uint64_t v9 = a2[3];
        sub_4C484(v8, v9, v7);
        a1[2] = v8;
        a1[3] = v9;
        *((unsigned char *)a1 + 32) = v7;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      uint64_t v18 = (id *)(a2 + 7);
      int v19 = *((unsigned __int8 *)a2 + 64);
      if (v19 == 255)
      {
        a1[7] = (uint64_t)*v18;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      }
      else
      {
        id v20 = *v18;
        sub_4C49C(*v18, *((unsigned char *)a2 + 64));
        a1[7] = (uint64_t)v20;
        *((unsigned char *)a1 + 64) = v19;
      }
      uint64_t v28 = (id *)(a2 + 9);
      int v29 = *((unsigned __int8 *)a2 + 80);
      if (v29 == 255)
      {
        a1[9] = (uint64_t)*v28;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      }
      else
      {
        id v30 = *v28;
        sub_4C49C(*v28, *((unsigned char *)a2 + 80));
        a1[9] = (uint64_t)v30;
        *((unsigned char *)a1 + 80) = v29;
      }
      char v34 = (id *)(a2 + 11);
      int v35 = *((unsigned __int8 *)a2 + 96);
      if (v35 == 255)
      {
        a1[11] = (uint64_t)*v34;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
      }
      else
      {
        id v36 = *v34;
        sub_4C49C(*v34, *((unsigned char *)a2 + 96));
        a1[11] = (uint64_t)v36;
        *((unsigned char *)a1 + 96) = v35;
      }
      uint64_t v40 = (id *)(a2 + 13);
      int v41 = *((unsigned __int8 *)a2 + 112);
      if (v41 == 255)
      {
        a1[13] = (uint64_t)*v40;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      }
      else
      {
        id v42 = *v40;
        sub_4C49C(*v40, *((unsigned char *)a2 + 112));
        a1[13] = (uint64_t)v42;
        *((unsigned char *)a1 + 112) = v41;
      }
      id v46 = (id *)(a2 + 15);
      int v47 = *((unsigned __int8 *)a2 + 128);
      if (v47 == 255)
      {
        a1[15] = (uint64_t)*v46;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
      }
      else
      {
        id v48 = *v46;
        sub_4C49C(*v46, *((unsigned char *)a2 + 128));
        a1[15] = (uint64_t)v48;
        *((unsigned char *)a1 + 128) = v47;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      int v52 = (int *)sub_3D3860();
      uint64_t v53 = v52[11];
      id v54 = (char *)a1 + v53;
      id v55 = (char *)a2 + v53;
      uint64_t v56 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
      uint64_t v57 = v52[12];
      id v58 = (uint64_t *)((char *)a1 + v57);
      id v59 = (uint64_t *)((char *)a2 + v57);
      uint64_t v60 = v59[1];
      void *v58 = *v59;
      v58[1] = v60;
      *((unsigned char *)a1 + v52[13]) = *((unsigned char *)a2 + v52[13]);
      *((unsigned char *)a1 + v52[14]) = *((unsigned char *)a2 + v52[14]);
      *((unsigned char *)a1 + v52[15]) = *((unsigned char *)a2 + v52[15]);
      uint64_t v61 = v52[16];
      uint64_t v62 = (uint64_t *)((char *)a1 + v61);
      uint64_t v63 = (uint64_t *)((char *)a2 + v61);
      uint64_t v64 = v63[1];
      *uint64_t v62 = *v63;
      v62[1] = v64;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
      *(uint64_t *)((char *)a1 + *(int *)(v65 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v65 + 48));
      swift_retain();
    }
    else
    {
      uint64_t v14 = a2[1];
      *a1 = *a2;
      a1[1] = v14;
      int v15 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v15 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v16 = a2[2];
        uint64_t v17 = a2[3];
        sub_4C484(v16, v17, v15);
        a1[2] = v16;
        a1[3] = v17;
        *((unsigned char *)a1 + 32) = v15;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      uint64_t v25 = (id *)(a2 + 7);
      int v26 = *((unsigned __int8 *)a2 + 64);
      if (v26 == 255)
      {
        a1[7] = (uint64_t)*v25;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      }
      else
      {
        id v27 = *v25;
        sub_4C49C(*v25, *((unsigned char *)a2 + 64));
        a1[7] = (uint64_t)v27;
        *((unsigned char *)a1 + 64) = v26;
      }
      uint64_t v31 = (id *)(a2 + 9);
      int v32 = *((unsigned __int8 *)a2 + 80);
      if (v32 == 255)
      {
        a1[9] = (uint64_t)*v31;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      }
      else
      {
        id v33 = *v31;
        sub_4C49C(*v31, *((unsigned char *)a2 + 80));
        a1[9] = (uint64_t)v33;
        *((unsigned char *)a1 + 80) = v32;
      }
      char v37 = (id *)(a2 + 11);
      int v38 = *((unsigned __int8 *)a2 + 96);
      if (v38 == 255)
      {
        a1[11] = (uint64_t)*v37;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
      }
      else
      {
        id v39 = *v37;
        sub_4C49C(*v37, *((unsigned char *)a2 + 96));
        a1[11] = (uint64_t)v39;
        *((unsigned char *)a1 + 96) = v38;
      }
      id v43 = (id *)(a2 + 13);
      int v44 = *((unsigned __int8 *)a2 + 112);
      if (v44 == 255)
      {
        a1[13] = (uint64_t)*v43;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      }
      else
      {
        id v45 = *v43;
        sub_4C49C(*v43, *((unsigned char *)a2 + 112));
        a1[13] = (uint64_t)v45;
        *((unsigned char *)a1 + 112) = v44;
      }
      int v49 = (id *)(a2 + 15);
      int v50 = *((unsigned __int8 *)a2 + 128);
      if (v50 == 255)
      {
        a1[15] = (uint64_t)*v49;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
      }
      else
      {
        id v51 = *v49;
        sub_4C49C(*v49, *((unsigned char *)a2 + 128));
        a1[15] = (uint64_t)v51;
        *((unsigned char *)a1 + 128) = v50;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v66 = (int *)sub_3D3860();
      uint64_t v67 = v66[11];
      uint64_t v68 = (char *)a1 + v67;
      uint64_t v69 = (char *)a2 + v67;
      uint64_t v70 = sub_3D3750();
      uint64_t v140 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
      v140(v68, v69, v70);
      uint64_t v71 = v66[12];
      id v72 = (uint64_t *)((char *)a1 + v71);
      uint64_t v73 = (uint64_t *)((char *)a2 + v71);
      uint64_t v74 = v73[1];
      void *v72 = *v73;
      v72[1] = v74;
      *((unsigned char *)a1 + v66[13]) = *((unsigned char *)a2 + v66[13]);
      *((unsigned char *)a1 + v66[14]) = *((unsigned char *)a2 + v66[14]);
      *((unsigned char *)a1 + v66[15]) = *((unsigned char *)a2 + v66[15]);
      uint64_t v75 = v66[16];
      uint64_t v76 = (uint64_t *)((char *)a1 + v75);
      uint64_t v77 = (uint64_t *)((char *)a2 + v75);
      uint64_t v78 = v77[1];
      *uint64_t v76 = *v77;
      v76[1] = v78;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
      uint64_t v79 = *(int *)(v139 + 48);
      uint64_t v80 = (char *)a1 + v79;
      uint64_t v81 = (char *)a2 + v79;
      uint64_t v82 = *(uint64_t *)((char *)a2 + v79 + 8);
      *(void *)uint64_t v80 = *(uint64_t *)((char *)a2 + v79);
      *((void *)v80 + 1) = v82;
      int v83 = *((unsigned __int8 *)a2 + v79 + 32);
      swift_bridgeObjectRetain();
      if (v83 == 255)
      {
        *((_OWORD *)v80 + 1) = *((_OWORD *)v81 + 1);
        v80[32] = v81[32];
      }
      else
      {
        uint64_t v84 = *((void *)v81 + 2);
        uint64_t v85 = *((void *)v81 + 3);
        sub_4C484(v84, v85, v83);
        *((void *)v80 + 2) = v84;
        *((void *)v80 + 3) = v85;
        v80[32] = v83;
      }
      *(_OWORD *)(v80 + 40) = *(_OWORD *)(v81 + 40);
      uint64_t v86 = (id *)(v81 + 56);
      int v87 = v81[64];
      if (v87 == 255)
      {
        *((void *)v80 + 7) = *v86;
        v80[64] = v81[64];
      }
      else
      {
        id v88 = *v86;
        sub_4C49C(*v86, v81[64]);
        *((void *)v80 + 7) = v88;
        v80[64] = v87;
      }
      uint64_t v89 = (id *)(v81 + 72);
      int v90 = v81[80];
      if (v90 == 255)
      {
        *((void *)v80 + 9) = *v89;
        v80[80] = v81[80];
      }
      else
      {
        id v91 = *v89;
        sub_4C49C(*v89, v81[80]);
        *((void *)v80 + 9) = v91;
        v80[80] = v90;
      }
      id v92 = (id *)(v81 + 88);
      int v93 = v81[96];
      if (v93 == 255)
      {
        *((void *)v80 + 11) = *v92;
        v80[96] = v81[96];
      }
      else
      {
        id v94 = *v92;
        sub_4C49C(*v92, v81[96]);
        *((void *)v80 + 11) = v94;
        v80[96] = v93;
      }
      id v95 = (id *)(v81 + 104);
      int v96 = v81[112];
      if (v96 == 255)
      {
        *((void *)v80 + 13) = *v95;
        v80[112] = v81[112];
      }
      else
      {
        id v97 = *v95;
        sub_4C49C(*v95, v81[112]);
        *((void *)v80 + 13) = v97;
        v80[112] = v96;
      }
      id v98 = (id *)(v81 + 120);
      int v99 = v81[128];
      if (v99 == 255)
      {
        *((void *)v80 + 15) = *v98;
        v80[128] = v81[128];
      }
      else
      {
        id v100 = *v98;
        sub_4C49C(*v98, v81[128]);
        *((void *)v80 + 15) = v100;
        v80[128] = v99;
      }
      v80[129] = v81[129];
      v140(&v80[v66[11]], &v81[v66[11]], v70);
      uint64_t v101 = v66[12];
      id v102 = &v80[v101];
      id v103 = &v81[v101];
      uint64_t v104 = *((void *)v103 + 1);
      *(void *)id v102 = *(void *)v103;
      *((void *)v102 + 1) = v104;
      v80[v66[13]] = v81[v66[13]];
      v80[v66[14]] = v81[v66[14]];
      v80[v66[15]] = v81[v66[15]];
      uint64_t v105 = v66[16];
      id v106 = &v80[v105];
      id v107 = &v81[v105];
      uint64_t v108 = *((void *)v107 + 1);
      *(void *)id v106 = *(void *)v107;
      *((void *)v106 + 1) = v108;
      *(uint64_t *)((char *)a1 + *(int *)(v139 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v139 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for HeroBackground(uint64_t a1)
{
  type metadata accessor for HeroBackgroundVariant();
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v20 = sub_3D3860();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(a1, 1, v20))
    {
      swift_bridgeObjectRelease();
      int v21 = *(unsigned __int8 *)(a1 + 32);
      if (v21 != 255) {
        sub_49E54(*(void *)(a1 + 16), *(void *)(a1 + 24), v21);
      }
      int v22 = *(unsigned __int8 *)(a1 + 64);
      if (v22 != 255) {
        sub_4C6F0(*(id *)(a1 + 56), v22);
      }
      int v23 = *(unsigned __int8 *)(a1 + 80);
      if (v23 != 255) {
        sub_4C6F0(*(id *)(a1 + 72), v23);
      }
      int v24 = *(unsigned __int8 *)(a1 + 96);
      if (v24 != 255) {
        sub_4C6F0(*(id *)(a1 + 88), v24);
      }
      int v25 = *(unsigned __int8 *)(a1 + 112);
      if (v25 != 255) {
        sub_4C6F0(*(id *)(a1 + 104), v25);
      }
      int v26 = *(unsigned __int8 *)(a1 + 128);
      if (v26 != 255) {
        sub_4C6F0(*(id *)(a1 + 120), v26);
      }
      uint64_t v27 = a1 + *(int *)(v20 + 44);
      uint64_t v28 = sub_3D3750();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    int v29 = qword_4BEDA8;
    goto LABEL_57;
  }
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    int v30 = *(unsigned __int8 *)(a1 + 32);
    if (v30 != 255) {
      sub_49E54(*(void *)(a1 + 16), *(void *)(a1 + 24), v30);
    }
    int v31 = *(unsigned __int8 *)(a1 + 64);
    if (v31 != 255) {
      sub_4C6F0(*(id *)(a1 + 56), v31);
    }
    int v32 = *(unsigned __int8 *)(a1 + 80);
    if (v32 != 255) {
      sub_4C6F0(*(id *)(a1 + 72), v32);
    }
    int v33 = *(unsigned __int8 *)(a1 + 96);
    if (v33 != 255) {
      sub_4C6F0(*(id *)(a1 + 88), v33);
    }
    int v34 = *(unsigned __int8 *)(a1 + 112);
    if (v34 != 255) {
      sub_4C6F0(*(id *)(a1 + 104), v34);
    }
    int v35 = *(unsigned __int8 *)(a1 + 128);
    if (v35 != 255) {
      sub_4C6F0(*(id *)(a1 + 120), v35);
    }
    uint64_t v36 = a1 + *(int *)(sub_3D3860() + 44);
    uint64_t v37 = sub_3D3750();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v29 = &qword_4BEDA0;
LABEL_57:
    __swift_instantiateConcreteTypeFromMangledName(v29);
    goto LABEL_58;
  }
  if (result) {
    return result;
  }
  swift_bridgeObjectRelease();
  int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 != 255) {
    sub_49E54(*(void *)(a1 + 16), *(void *)(a1 + 24), v3);
  }
  int v4 = *(unsigned __int8 *)(a1 + 64);
  if (v4 != 255) {
    sub_4C6F0(*(id *)(a1 + 56), v4);
  }
  int v5 = *(unsigned __int8 *)(a1 + 80);
  if (v5 != 255) {
    sub_4C6F0(*(id *)(a1 + 72), v5);
  }
  int v6 = *(unsigned __int8 *)(a1 + 96);
  if (v6 != 255) {
    sub_4C6F0(*(id *)(a1 + 88), v6);
  }
  int v7 = *(unsigned __int8 *)(a1 + 112);
  if (v7 != 255) {
    sub_4C6F0(*(id *)(a1 + 104), v7);
  }
  int v8 = *(unsigned __int8 *)(a1 + 128);
  if (v8 != 255) {
    sub_4C6F0(*(id *)(a1 + 120), v8);
  }
  uint64_t v9 = sub_3D3860();
  uint64_t v10 = a1 + *(int *)(v9 + 44);
  uint64_t v11 = sub_3D3750();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BED98) + 48);
  swift_bridgeObjectRelease();
  int v14 = *(unsigned __int8 *)(v13 + 32);
  if (v14 != 255) {
    sub_49E54(*(void *)(v13 + 16), *(void *)(v13 + 24), v14);
  }
  int v15 = *(unsigned __int8 *)(v13 + 64);
  if (v15 != 255) {
    sub_4C6F0(*(id *)(v13 + 56), v15);
  }
  int v16 = *(unsigned __int8 *)(v13 + 80);
  if (v16 != 255) {
    sub_4C6F0(*(id *)(v13 + 72), v16);
  }
  int v17 = *(unsigned __int8 *)(v13 + 96);
  if (v17 != 255) {
    sub_4C6F0(*(id *)(v13 + 88), v17);
  }
  int v18 = *(unsigned __int8 *)(v13 + 112);
  if (v18 != 255) {
    sub_4C6F0(*(id *)(v13 + 104), v18);
  }
  int v19 = *(unsigned __int8 *)(v13 + 128);
  if (v19 != 255) {
    sub_4C6F0(*(id *)(v13 + 120), v19);
  }
  v12(v13 + *(int *)(v9 + 44), v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_58:

  return swift_release();
}

void *initializeWithCopy for HeroBackground(void *a1, void *a2)
{
  type metadata accessor for HeroBackgroundVariant();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = (int *)sub_3D3860();
    uint64_t v10 = *((void *)v9 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v10 + 48))(a2, 1, v9))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      int v20 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v20 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v21 = a2[2];
        uint64_t v22 = a2[3];
        sub_4C484(v21, v22, v20);
        a1[2] = v21;
        a1[3] = v22;
        *((unsigned char *)a1 + 32) = v20;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      id v107 = (id *)(a2 + 7);
      int v108 = *((unsigned __int8 *)a2 + 64);
      if (v108 == 255)
      {
        a1[7] = *v107;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      }
      else
      {
        id v109 = *v107;
        sub_4C49C(*v107, *((unsigned char *)a2 + 64));
        a1[7] = v109;
        *((unsigned char *)a1 + 64) = v108;
      }
      int v110 = (id *)(a2 + 9);
      int v111 = *((unsigned __int8 *)a2 + 80);
      if (v111 == 255)
      {
        a1[9] = *v110;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      }
      else
      {
        id v112 = *v110;
        sub_4C49C(*v110, *((unsigned char *)a2 + 80));
        a1[9] = v112;
        *((unsigned char *)a1 + 80) = v111;
      }
      int v113 = (id *)(a2 + 11);
      int v114 = *((unsigned __int8 *)a2 + 96);
      if (v114 == 255)
      {
        a1[11] = *v113;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
      }
      else
      {
        id v115 = *v113;
        sub_4C49C(*v113, *((unsigned char *)a2 + 96));
        a1[11] = v115;
        *((unsigned char *)a1 + 96) = v114;
      }
      int v116 = (id *)(a2 + 13);
      int v117 = *((unsigned __int8 *)a2 + 112);
      if (v117 == 255)
      {
        a1[13] = *v116;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      }
      else
      {
        id v118 = *v116;
        sub_4C49C(*v116, *((unsigned char *)a2 + 112));
        a1[13] = v118;
        *((unsigned char *)a1 + 112) = v117;
      }
      int v119 = (id *)(a2 + 15);
      int v120 = *((unsigned __int8 *)a2 + 128);
      if (v120 == 255)
      {
        a1[15] = *v119;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
      }
      else
      {
        id v121 = *v119;
        sub_4C49C(*v119, *((unsigned char *)a2 + 128));
        a1[15] = v121;
        *((unsigned char *)a1 + 128) = v120;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v122 = v9[11];
      id v123 = (char *)a1 + v122;
      uint64_t v124 = (char *)a2 + v122;
      uint64_t v125 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16))(v123, v124, v125);
      uint64_t v126 = v9[12];
      uint64_t v127 = (void *)((char *)a1 + v126);
      uint64_t v128 = (void *)((char *)a2 + v126);
      uint64_t v129 = v128[1];
      *uint64_t v127 = *v128;
      v127[1] = v129;
      *((unsigned char *)a1 + v9[13]) = *((unsigned char *)a2 + v9[13]);
      *((unsigned char *)a1 + v9[14]) = *((unsigned char *)a2 + v9[14]);
      *((unsigned char *)a1 + v9[15]) = *((unsigned char *)a2 + v9[15]);
      uint64_t v130 = v9[16];
      uint64_t v131 = (void *)((char *)a1 + v130);
      uint64_t v132 = (void *)((char *)a2 + v130);
      uint64_t v133 = v132[1];
      *uint64_t v131 = *v132;
      v131[1] = v133;
      id v134 = *(void (**)(void *, void, uint64_t, int *))(v10 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v134(a1, 0, 1, v9);
    }
    uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
    *(void *)((char *)a1 + *(int *)(v135 + 48)) = *(void *)((char *)a2 + *(int *)(v135 + 48));
    swift_retain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    int v6 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v6 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    }
    else
    {
      uint64_t v7 = a2[2];
      uint64_t v8 = a2[3];
      sub_4C484(v7, v8, v6);
      a1[2] = v7;
      a1[3] = v8;
      *((unsigned char *)a1 + 32) = v6;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    int v16 = (id *)(a2 + 7);
    int v17 = *((unsigned __int8 *)a2 + 64);
    if (v17 == 255)
    {
      a1[7] = *v16;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    }
    else
    {
      id v18 = *v16;
      sub_4C49C(*v16, *((unsigned char *)a2 + 64));
      a1[7] = v18;
      *((unsigned char *)a1 + 64) = v17;
    }
    int v26 = (id *)(a2 + 9);
    int v27 = *((unsigned __int8 *)a2 + 80);
    if (v27 == 255)
    {
      a1[9] = *v26;
      *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    }
    else
    {
      id v28 = *v26;
      sub_4C49C(*v26, *((unsigned char *)a2 + 80));
      a1[9] = v28;
      *((unsigned char *)a1 + 80) = v27;
    }
    int v32 = (id *)(a2 + 11);
    int v33 = *((unsigned __int8 *)a2 + 96);
    if (v33 == 255)
    {
      a1[11] = *v32;
      *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
    }
    else
    {
      id v34 = *v32;
      sub_4C49C(*v32, *((unsigned char *)a2 + 96));
      a1[11] = v34;
      *((unsigned char *)a1 + 96) = v33;
    }
    int v38 = (id *)(a2 + 13);
    int v39 = *((unsigned __int8 *)a2 + 112);
    if (v39 == 255)
    {
      a1[13] = *v38;
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
    }
    else
    {
      id v40 = *v38;
      sub_4C49C(*v38, *((unsigned char *)a2 + 112));
      a1[13] = v40;
      *((unsigned char *)a1 + 112) = v39;
    }
    int v44 = (id *)(a2 + 15);
    int v45 = *((unsigned __int8 *)a2 + 128);
    if (v45 == 255)
    {
      a1[15] = *v44;
      *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
    }
    else
    {
      id v46 = *v44;
      sub_4C49C(*v44, *((unsigned char *)a2 + 128));
      a1[15] = v46;
      *((unsigned char *)a1 + 128) = v45;
    }
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    int v50 = (int *)sub_3D3860();
    uint64_t v51 = v50[11];
    int v52 = (char *)a1 + v51;
    uint64_t v53 = (char *)a2 + v51;
    uint64_t v54 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    uint64_t v55 = v50[12];
    uint64_t v56 = (void *)((char *)a1 + v55);
    uint64_t v57 = (void *)((char *)a2 + v55);
    uint64_t v58 = v57[1];
    *uint64_t v56 = *v57;
    v56[1] = v58;
    *((unsigned char *)a1 + v50[13]) = *((unsigned char *)a2 + v50[13]);
    *((unsigned char *)a1 + v50[14]) = *((unsigned char *)a2 + v50[14]);
    *((unsigned char *)a1 + v50[15]) = *((unsigned char *)a2 + v50[15]);
    uint64_t v59 = v50[16];
    uint64_t v60 = (void *)((char *)a1 + v59);
    uint64_t v61 = (void *)((char *)a2 + v59);
    uint64_t v62 = v61[1];
    *uint64_t v60 = *v61;
    v60[1] = v62;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
    *(void *)((char *)a1 + *(int *)(v63 + 48)) = *(void *)((char *)a2 + *(int *)(v63 + 48));
    swift_retain();
  }
  else
  {
    uint64_t v12 = a2[1];
    *a1 = *a2;
    a1[1] = v12;
    int v13 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v13 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    }
    else
    {
      uint64_t v14 = a2[2];
      uint64_t v15 = a2[3];
      sub_4C484(v14, v15, v13);
      a1[2] = v14;
      a1[3] = v15;
      *((unsigned char *)a1 + 32) = v13;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    int v23 = (id *)(a2 + 7);
    int v24 = *((unsigned __int8 *)a2 + 64);
    if (v24 == 255)
    {
      a1[7] = *v23;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    }
    else
    {
      id v25 = *v23;
      sub_4C49C(*v23, *((unsigned char *)a2 + 64));
      a1[7] = v25;
      *((unsigned char *)a1 + 64) = v24;
    }
    int v29 = (id *)(a2 + 9);
    int v30 = *((unsigned __int8 *)a2 + 80);
    if (v30 == 255)
    {
      a1[9] = *v29;
      *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    }
    else
    {
      id v31 = *v29;
      sub_4C49C(*v29, *((unsigned char *)a2 + 80));
      a1[9] = v31;
      *((unsigned char *)a1 + 80) = v30;
    }
    int v35 = (id *)(a2 + 11);
    int v36 = *((unsigned __int8 *)a2 + 96);
    if (v36 == 255)
    {
      a1[11] = *v35;
      *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
    }
    else
    {
      id v37 = *v35;
      sub_4C49C(*v35, *((unsigned char *)a2 + 96));
      a1[11] = v37;
      *((unsigned char *)a1 + 96) = v36;
    }
    int v41 = (id *)(a2 + 13);
    int v42 = *((unsigned __int8 *)a2 + 112);
    if (v42 == 255)
    {
      a1[13] = *v41;
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
    }
    else
    {
      id v43 = *v41;
      sub_4C49C(*v41, *((unsigned char *)a2 + 112));
      a1[13] = v43;
      *((unsigned char *)a1 + 112) = v42;
    }
    int v47 = (id *)(a2 + 15);
    int v48 = *((unsigned __int8 *)a2 + 128);
    if (v48 == 255)
    {
      a1[15] = *v47;
      *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
    }
    else
    {
      id v49 = *v47;
      sub_4C49C(*v47, *((unsigned char *)a2 + 128));
      a1[15] = v49;
      *((unsigned char *)a1 + 128) = v48;
    }
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v64 = (int *)sub_3D3860();
    uint64_t v65 = v64[11];
    uint64_t v66 = (char *)a1 + v65;
    uint64_t v67 = (char *)a2 + v65;
    uint64_t v68 = sub_3D3750();
    id v138 = *(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16);
    v138(v66, v67, v68);
    uint64_t v69 = v64[12];
    uint64_t v70 = (void *)((char *)a1 + v69);
    uint64_t v71 = (void *)((char *)a2 + v69);
    uint64_t v72 = v71[1];
    *uint64_t v70 = *v71;
    v70[1] = v72;
    *((unsigned char *)a1 + v64[13]) = *((unsigned char *)a2 + v64[13]);
    *((unsigned char *)a1 + v64[14]) = *((unsigned char *)a2 + v64[14]);
    *((unsigned char *)a1 + v64[15]) = *((unsigned char *)a2 + v64[15]);
    uint64_t v73 = v64[16];
    uint64_t v74 = (void *)((char *)a1 + v73);
    uint64_t v75 = (void *)((char *)a2 + v73);
    uint64_t v76 = v75[1];
    *uint64_t v74 = *v75;
    v74[1] = v76;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
    uint64_t v77 = *(int *)(v137 + 48);
    uint64_t v78 = (char *)a1 + v77;
    uint64_t v79 = (char *)a2 + v77;
    uint64_t v80 = *(void *)((char *)a2 + v77 + 8);
    *(void *)uint64_t v78 = *(void *)((char *)a2 + v77);
    *((void *)v78 + 1) = v80;
    int v81 = *((unsigned __int8 *)a2 + v77 + 32);
    swift_bridgeObjectRetain();
    if (v81 == 255)
    {
      *((_OWORD *)v78 + 1) = *((_OWORD *)v79 + 1);
      v78[32] = v79[32];
    }
    else
    {
      uint64_t v82 = *((void *)v79 + 2);
      uint64_t v83 = *((void *)v79 + 3);
      sub_4C484(v82, v83, v81);
      *((void *)v78 + 2) = v82;
      *((void *)v78 + 3) = v83;
      v78[32] = v81;
    }
    *(_OWORD *)(v78 + 40) = *(_OWORD *)(v79 + 40);
    uint64_t v84 = (id *)(v79 + 56);
    int v85 = v79[64];
    if (v85 == 255)
    {
      *((void *)v78 + 7) = *v84;
      v78[64] = v79[64];
    }
    else
    {
      id v86 = *v84;
      sub_4C49C(*v84, v79[64]);
      *((void *)v78 + 7) = v86;
      v78[64] = v85;
    }
    int v87 = (id *)(v79 + 72);
    int v88 = v79[80];
    if (v88 == 255)
    {
      *((void *)v78 + 9) = *v87;
      v78[80] = v79[80];
    }
    else
    {
      id v89 = *v87;
      sub_4C49C(*v87, v79[80]);
      *((void *)v78 + 9) = v89;
      v78[80] = v88;
    }
    int v90 = (id *)(v79 + 88);
    int v91 = v79[96];
    if (v91 == 255)
    {
      *((void *)v78 + 11) = *v90;
      v78[96] = v79[96];
    }
    else
    {
      id v92 = *v90;
      sub_4C49C(*v90, v79[96]);
      *((void *)v78 + 11) = v92;
      v78[96] = v91;
    }
    int v93 = (id *)(v79 + 104);
    int v94 = v79[112];
    if (v94 == 255)
    {
      *((void *)v78 + 13) = *v93;
      v78[112] = v79[112];
    }
    else
    {
      id v95 = *v93;
      sub_4C49C(*v93, v79[112]);
      *((void *)v78 + 13) = v95;
      v78[112] = v94;
    }
    int v96 = (id *)(v79 + 120);
    int v97 = v79[128];
    if (v97 == 255)
    {
      *((void *)v78 + 15) = *v96;
      v78[128] = v79[128];
    }
    else
    {
      id v98 = *v96;
      sub_4C49C(*v96, v79[128]);
      *((void *)v78 + 15) = v98;
      v78[128] = v97;
    }
    v78[129] = v79[129];
    v138(&v78[v64[11]], &v79[v64[11]], v68);
    uint64_t v99 = v64[12];
    id v100 = &v78[v99];
    uint64_t v101 = &v79[v99];
    uint64_t v102 = *((void *)v101 + 1);
    *(void *)id v100 = *(void *)v101;
    *((void *)v100 + 1) = v102;
    v78[v64[13]] = v79[v64[13]];
    v78[v64[14]] = v79[v64[14]];
    v78[v64[15]] = v79[v64[15]];
    uint64_t v103 = v64[16];
    uint64_t v104 = &v78[v103];
    uint64_t v105 = &v79[v103];
    uint64_t v106 = *((void *)v105 + 1);
    *(void *)uint64_t v104 = *(void *)v105;
    *((void *)v104 + 1) = v106;
    *(void *)((char *)a1 + *(int *)(v137 + 64)) = *(void *)((char *)a2 + *(int *)(v137 + 64));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_34CE18(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_34EE68((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
    type metadata accessor for HeroBackgroundVariant();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = (int *)sub_3D3860();
      uint64_t v9 = *((void *)v8 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        int v18 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v18 == 255)
        {
          long long v115 = *((_OWORD *)a2 + 1);
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          *((_OWORD *)a1 + 1) = v115;
        }
        else
        {
          uint64_t v19 = a2[2];
          uint64_t v20 = a2[3];
          sub_4C484(v19, v20, v18);
          a1[2] = v19;
          a1[3] = v20;
          *((unsigned char *)a1 + 32) = v18;
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        int v116 = (id *)(a2 + 7);
        int v117 = *((unsigned __int8 *)a2 + 64);
        if (v117 == 255)
        {
          id v119 = *v116;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          a1[7] = v119;
        }
        else
        {
          id v118 = *v116;
          sub_4C49C(*v116, *((unsigned char *)a2 + 64));
          a1[7] = v118;
          *((unsigned char *)a1 + 64) = v117;
        }
        int v120 = (id *)(a2 + 9);
        int v121 = *((unsigned __int8 *)a2 + 80);
        if (v121 == 255)
        {
          id v123 = *v120;
          *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
          a1[9] = v123;
        }
        else
        {
          id v122 = *v120;
          sub_4C49C(*v120, *((unsigned char *)a2 + 80));
          a1[9] = v122;
          *((unsigned char *)a1 + 80) = v121;
        }
        uint64_t v124 = (id *)(a2 + 11);
        int v125 = *((unsigned __int8 *)a2 + 96);
        if (v125 == 255)
        {
          id v127 = *v124;
          *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
          a1[11] = v127;
        }
        else
        {
          id v126 = *v124;
          sub_4C49C(*v124, *((unsigned char *)a2 + 96));
          a1[11] = v126;
          *((unsigned char *)a1 + 96) = v125;
        }
        uint64_t v128 = (id *)(a2 + 13);
        int v129 = *((unsigned __int8 *)a2 + 112);
        if (v129 == 255)
        {
          id v131 = *v128;
          *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
          a1[13] = v131;
        }
        else
        {
          id v130 = *v128;
          sub_4C49C(*v128, *((unsigned char *)a2 + 112));
          a1[13] = v130;
          *((unsigned char *)a1 + 112) = v129;
        }
        uint64_t v132 = (id *)(a2 + 15);
        int v133 = *((unsigned __int8 *)a2 + 128);
        if (v133 == 255)
        {
          id v135 = *v132;
          *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
          a1[15] = v135;
        }
        else
        {
          id v134 = *v132;
          sub_4C49C(*v132, *((unsigned char *)a2 + 128));
          a1[15] = v134;
          *((unsigned char *)a1 + 128) = v133;
        }
        *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
        uint64_t v136 = v8[11];
        uint64_t v137 = (char *)a1 + v136;
        id v138 = (char *)a2 + v136;
        uint64_t v139 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16))(v137, v138, v139);
        uint64_t v140 = v8[12];
        uint64_t v141 = (void *)((char *)a1 + v140);
        uint64_t v142 = (void *)((char *)a2 + v140);
        *uint64_t v141 = *v142;
        v141[1] = v142[1];
        *((unsigned char *)a1 + v8[13]) = *((unsigned char *)a2 + v8[13]);
        *((unsigned char *)a1 + v8[14]) = *((unsigned char *)a2 + v8[14]);
        *((unsigned char *)a1 + v8[15]) = *((unsigned char *)a2 + v8[15]);
        uint64_t v143 = v8[16];
        uint64_t v144 = (void *)((char *)a1 + v143);
        uint64_t v145 = (void *)((char *)a2 + v143);
        *uint64_t v144 = *v145;
        v144[1] = v145[1];
        uint64_t v146 = *(void (**)(void *, void, uint64_t, int *))(v9 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v146(a1, 0, 1, v8);
      }
      uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
      *(void *)((char *)a1 + *(int *)(v147 + 48)) = *(void *)((char *)a2 + *(int *)(v147 + 48));
      swift_retain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      int v5 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v5 == 255)
      {
        long long v14 = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        *((_OWORD *)a1 + 1) = v14;
      }
      else
      {
        uint64_t v6 = a2[2];
        uint64_t v7 = a2[3];
        sub_4C484(v6, v7, v5);
        a1[2] = v6;
        a1[3] = v7;
        *((unsigned char *)a1 + 32) = v5;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      uint64_t v15 = (id *)(a2 + 7);
      int v16 = *((unsigned __int8 *)a2 + 64);
      if (v16 == 255)
      {
        id v25 = *v15;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        a1[7] = v25;
      }
      else
      {
        id v17 = *v15;
        sub_4C49C(*v15, *((unsigned char *)a2 + 64));
        a1[7] = v17;
        *((unsigned char *)a1 + 64) = v16;
      }
      int v26 = (id *)(a2 + 9);
      int v27 = *((unsigned __int8 *)a2 + 80);
      if (v27 == 255)
      {
        id v33 = *v26;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
        a1[9] = v33;
      }
      else
      {
        id v28 = *v26;
        sub_4C49C(*v26, *((unsigned char *)a2 + 80));
        a1[9] = v28;
        *((unsigned char *)a1 + 80) = v27;
      }
      id v34 = (id *)(a2 + 11);
      int v35 = *((unsigned __int8 *)a2 + 96);
      if (v35 == 255)
      {
        id v41 = *v34;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
        a1[11] = v41;
      }
      else
      {
        id v36 = *v34;
        sub_4C49C(*v34, *((unsigned char *)a2 + 96));
        a1[11] = v36;
        *((unsigned char *)a1 + 96) = v35;
      }
      int v42 = (id *)(a2 + 13);
      int v43 = *((unsigned __int8 *)a2 + 112);
      if (v43 == 255)
      {
        id v49 = *v42;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        a1[13] = v49;
      }
      else
      {
        id v44 = *v42;
        sub_4C49C(*v42, *((unsigned char *)a2 + 112));
        a1[13] = v44;
        *((unsigned char *)a1 + 112) = v43;
      }
      int v50 = (id *)(a2 + 15);
      int v51 = *((unsigned __int8 *)a2 + 128);
      if (v51 == 255)
      {
        id v57 = *v50;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
        a1[15] = v57;
      }
      else
      {
        id v52 = *v50;
        sub_4C49C(*v50, *((unsigned char *)a2 + 128));
        a1[15] = v52;
        *((unsigned char *)a1 + 128) = v51;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v58 = (int *)sub_3D3860();
      uint64_t v59 = v58[11];
      uint64_t v60 = (char *)a1 + v59;
      uint64_t v61 = (char *)a2 + v59;
      uint64_t v62 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
      uint64_t v63 = v58[12];
      uint64_t v64 = (void *)((char *)a1 + v63);
      uint64_t v65 = (void *)((char *)a2 + v63);
      void *v64 = *v65;
      v64[1] = v65[1];
      *((unsigned char *)a1 + v58[13]) = *((unsigned char *)a2 + v58[13]);
      *((unsigned char *)a1 + v58[14]) = *((unsigned char *)a2 + v58[14]);
      *((unsigned char *)a1 + v58[15]) = *((unsigned char *)a2 + v58[15]);
      uint64_t v66 = v58[16];
      uint64_t v67 = (void *)((char *)a1 + v66);
      uint64_t v68 = (void *)((char *)a2 + v66);
      *uint64_t v67 = *v68;
      v67[1] = v68[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
      *(void *)((char *)a1 + *(int *)(v69 + 48)) = *(void *)((char *)a2 + *(int *)(v69 + 48));
      swift_retain();
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      int v11 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v11 == 255)
      {
        long long v21 = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        *((_OWORD *)a1 + 1) = v21;
      }
      else
      {
        uint64_t v12 = a2[2];
        uint64_t v13 = a2[3];
        sub_4C484(v12, v13, v11);
        a1[2] = v12;
        a1[3] = v13;
        *((unsigned char *)a1 + 32) = v11;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      uint64_t v22 = (id *)(a2 + 7);
      int v23 = *((unsigned __int8 *)a2 + 64);
      if (v23 == 255)
      {
        id v29 = *v22;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        a1[7] = v29;
      }
      else
      {
        id v24 = *v22;
        sub_4C49C(*v22, *((unsigned char *)a2 + 64));
        a1[7] = v24;
        *((unsigned char *)a1 + 64) = v23;
      }
      int v30 = (id *)(a2 + 9);
      int v31 = *((unsigned __int8 *)a2 + 80);
      if (v31 == 255)
      {
        id v37 = *v30;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
        a1[9] = v37;
      }
      else
      {
        id v32 = *v30;
        sub_4C49C(*v30, *((unsigned char *)a2 + 80));
        a1[9] = v32;
        *((unsigned char *)a1 + 80) = v31;
      }
      int v38 = (id *)(a2 + 11);
      int v39 = *((unsigned __int8 *)a2 + 96);
      if (v39 == 255)
      {
        id v45 = *v38;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
        a1[11] = v45;
      }
      else
      {
        id v40 = *v38;
        sub_4C49C(*v38, *((unsigned char *)a2 + 96));
        a1[11] = v40;
        *((unsigned char *)a1 + 96) = v39;
      }
      id v46 = (id *)(a2 + 13);
      int v47 = *((unsigned __int8 *)a2 + 112);
      if (v47 == 255)
      {
        id v53 = *v46;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        a1[13] = v53;
      }
      else
      {
        id v48 = *v46;
        sub_4C49C(*v46, *((unsigned char *)a2 + 112));
        a1[13] = v48;
        *((unsigned char *)a1 + 112) = v47;
      }
      uint64_t v54 = (id *)(a2 + 15);
      int v55 = *((unsigned __int8 *)a2 + 128);
      if (v55 == 255)
      {
        id v70 = *v54;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
        a1[15] = v70;
      }
      else
      {
        id v56 = *v54;
        sub_4C49C(*v54, *((unsigned char *)a2 + 128));
        a1[15] = v56;
        *((unsigned char *)a1 + 128) = v55;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v71 = (int *)sub_3D3860();
      uint64_t v72 = v71[11];
      uint64_t v73 = (char *)a1 + v72;
      uint64_t v74 = (char *)a2 + v72;
      uint64_t v75 = sub_3D3750();
      uint64_t v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
      v150(v73, v74, v75);
      uint64_t v76 = v71[12];
      uint64_t v77 = (void *)((char *)a1 + v76);
      uint64_t v78 = (void *)((char *)a2 + v76);
      *uint64_t v77 = *v78;
      v77[1] = v78[1];
      *((unsigned char *)a1 + v71[13]) = *((unsigned char *)a2 + v71[13]);
      *((unsigned char *)a1 + v71[14]) = *((unsigned char *)a2 + v71[14]);
      *((unsigned char *)a1 + v71[15]) = *((unsigned char *)a2 + v71[15]);
      uint64_t v79 = v71[16];
      uint64_t v80 = (void *)((char *)a1 + v79);
      int v81 = (void *)((char *)a2 + v79);
      void *v80 = *v81;
      v80[1] = v81[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
      uint64_t v82 = *(int *)(v149 + 48);
      uint64_t v83 = (char *)a1 + v82;
      uint64_t v84 = (char *)a2 + v82;
      *(void *)uint64_t v83 = *(void *)((char *)a2 + v82);
      *((void *)v83 + 1) = *(void *)((char *)a2 + v82 + 8);
      int v85 = *((unsigned __int8 *)a2 + v82 + 32);
      swift_bridgeObjectRetain();
      if (v85 == 255)
      {
        long long v88 = *((_OWORD *)v84 + 1);
        v83[32] = v84[32];
        *((_OWORD *)v83 + 1) = v88;
      }
      else
      {
        uint64_t v86 = *((void *)v84 + 2);
        uint64_t v87 = *((void *)v84 + 3);
        sub_4C484(v86, v87, v85);
        *((void *)v83 + 2) = v86;
        *((void *)v83 + 3) = v87;
        v83[32] = v85;
      }
      *((void *)v83 + 5) = *((void *)v84 + 5);
      *((void *)v83 + 6) = *((void *)v84 + 6);
      id v89 = (id *)(v84 + 56);
      int v90 = v84[64];
      if (v90 == 255)
      {
        id v92 = *v89;
        v83[64] = v84[64];
        *((void *)v83 + 7) = v92;
      }
      else
      {
        id v91 = *v89;
        sub_4C49C(*v89, v84[64]);
        *((void *)v83 + 7) = v91;
        v83[64] = v90;
      }
      int v93 = (id *)(v84 + 72);
      int v94 = v84[80];
      if (v94 == 255)
      {
        id v96 = *v93;
        v83[80] = v84[80];
        *((void *)v83 + 9) = v96;
      }
      else
      {
        id v95 = *v93;
        sub_4C49C(*v93, v84[80]);
        *((void *)v83 + 9) = v95;
        v83[80] = v94;
      }
      int v97 = (id *)(v84 + 88);
      int v98 = v84[96];
      if (v98 == 255)
      {
        id v100 = *v97;
        v83[96] = v84[96];
        *((void *)v83 + 11) = v100;
      }
      else
      {
        id v99 = *v97;
        sub_4C49C(*v97, v84[96]);
        *((void *)v83 + 11) = v99;
        v83[96] = v98;
      }
      uint64_t v101 = (id *)(v84 + 104);
      int v102 = v84[112];
      if (v102 == 255)
      {
        id v104 = *v101;
        v83[112] = v84[112];
        *((void *)v83 + 13) = v104;
      }
      else
      {
        id v103 = *v101;
        sub_4C49C(*v101, v84[112]);
        *((void *)v83 + 13) = v103;
        v83[112] = v102;
      }
      uint64_t v105 = (id *)(v84 + 120);
      int v106 = v84[128];
      if (v106 == 255)
      {
        id v108 = *v105;
        v83[128] = v84[128];
        *((void *)v83 + 15) = v108;
      }
      else
      {
        id v107 = *v105;
        sub_4C49C(*v105, v84[128]);
        *((void *)v83 + 15) = v107;
        v83[128] = v106;
      }
      v83[129] = v84[129];
      v150(&v83[v71[11]], &v84[v71[11]], v75);
      uint64_t v109 = v71[12];
      int v110 = &v83[v109];
      int v111 = &v84[v109];
      *(void *)int v110 = *(void *)v111;
      *((void *)v110 + 1) = *((void *)v111 + 1);
      v83[v71[13]] = v84[v71[13]];
      v83[v71[14]] = v84[v71[14]];
      v83[v71[15]] = v84[v71[15]];
      uint64_t v112 = v71[16];
      int v113 = &v83[v112];
      int v114 = &v84[v112];
      *(void *)int v113 = *(void *)v114;
      *((void *)v113 + 1) = *((void *)v114 + 1);
      *(void *)((char *)a1 + *(int *)(v149 + 64)) = *(void *)((char *)a2 + *(int *)(v149 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for HeroBackground(_OWORD *a1, _OWORD *a2)
{
  type metadata accessor for HeroBackgroundVariant();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v12 = (int *)sub_3D3860();
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(a2, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
      memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      long long v26 = a2[1];
      *a1 = *a2;
      a1[1] = v26;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v27 = v12[11];
      id v28 = (char *)a1 + v27;
      id v29 = (char *)a2 + v27;
      uint64_t v30 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      *(_OWORD *)((char *)a1 + v12[12]) = *(_OWORD *)((char *)a2 + v12[12]);
      *((unsigned char *)a1 + v12[13]) = *((unsigned char *)a2 + v12[13]);
      *((unsigned char *)a1 + v12[14]) = *((unsigned char *)a2 + v12[14]);
      *((unsigned char *)a1 + v12[15]) = *((unsigned char *)a2 + v12[15]);
      *(_OWORD *)((char *)a1 + v12[16]) = *(_OWORD *)((char *)a2 + v12[16]);
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v13 + 56))(a1, 0, 1, v12);
    }
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
    *(void *)((char *)a1 + *(int *)(v31 + 48)) = *(void *)((char *)a2 + *(int *)(v31 + 48));
  }
  else
  {
    long long v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((void *)a1 + 7) = *((void *)a2 + 7);
    *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = (int *)sub_3D3860();
      uint64_t v7 = v6[11];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
      *((unsigned char *)a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
      *((unsigned char *)a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
      *((unsigned char *)a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
      *(_OWORD *)((char *)a1 + v6[16]) = *(_OWORD *)((char *)a2 + v6[16]);
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
      *(void *)((char *)a1 + *(int *)(v11 + 48)) = *(void *)((char *)a2 + *(int *)(v11 + 48));
    }
    else
    {
      uint64_t v15 = (int *)sub_3D3860();
      uint64_t v16 = v15[11];
      id v17 = (char *)a1 + v16;
      int v18 = (char *)a2 + v16;
      uint64_t v19 = sub_3D3750();
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
      v20(v17, v18, v19);
      *(_OWORD *)((char *)a1 + v15[12]) = *(_OWORD *)((char *)a2 + v15[12]);
      *((unsigned char *)a1 + v15[13]) = *((unsigned char *)a2 + v15[13]);
      *((unsigned char *)a1 + v15[14]) = *((unsigned char *)a2 + v15[14]);
      *((unsigned char *)a1 + v15[15]) = *((unsigned char *)a2 + v15[15]);
      *(_OWORD *)((char *)a1 + v15[16]) = *(_OWORD *)((char *)a2 + v15[16]);
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
      uint64_t v22 = *(int *)(v21 + 48);
      int v23 = (char *)a1 + v22;
      id v24 = (char *)a2 + v22;
      long long v25 = *(_OWORD *)((char *)a2 + v22 + 16);
      *(_OWORD *)int v23 = *(_OWORD *)((char *)a2 + v22);
      *((_OWORD *)v23 + 1) = v25;
      v23[32] = *((unsigned char *)a2 + v22 + 32);
      *(_OWORD *)(v23 + 40) = *(_OWORD *)((char *)a2 + v22 + 40);
      *((void *)v23 + 7) = *(void *)((char *)a2 + v22 + 56);
      v23[64] = *((unsigned char *)a2 + v22 + 64);
      *(_OWORD *)(v23 + 113) = *(_OWORD *)((char *)a2 + v22 + 113);
      *(_OWORD *)(v23 + 104) = *(_OWORD *)((char *)a2 + v22 + 104);
      *(_OWORD *)(v23 + 88) = *(_OWORD *)((char *)a2 + v22 + 88);
      *(_OWORD *)(v23 + 72) = *(_OWORD *)((char *)a2 + v22 + 72);
      v23[129] = *((unsigned char *)a2 + v22 + 129);
      v20((char *)a1 + v22 + v15[11], (char *)a2 + v22 + v15[11], v19);
      *(_OWORD *)&v23[v15[12]] = *(_OWORD *)&v24[v15[12]];
      v23[v15[13]] = v24[v15[13]];
      v23[v15[14]] = v24[v15[14]];
      v23[v15[15]] = v24[v15[15]];
      *(_OWORD *)&v23[v15[16]] = *(_OWORD *)&v24[v15[16]];
      *(void *)((char *)a1 + *(int *)(v21 + 64)) = *(void *)((char *)a2 + *(int *)(v21 + 64));
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *sub_34DE88(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_34EE68((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
    type metadata accessor for HeroBackgroundVariant();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v12 = (int *)sub_3D3860();
      uint64_t v13 = *((void *)v12 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(a2, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        long long v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
        *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
        uint64_t v27 = v12[11];
        id v28 = (char *)a1 + v27;
        id v29 = (char *)a2 + v27;
        uint64_t v30 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        *(_OWORD *)((char *)a1 + v12[12]) = *(_OWORD *)((char *)a2 + v12[12]);
        *((unsigned char *)a1 + v12[13]) = *((unsigned char *)a2 + v12[13]);
        *((unsigned char *)a1 + v12[14]) = *((unsigned char *)a2 + v12[14]);
        *((unsigned char *)a1 + v12[15]) = *((unsigned char *)a2 + v12[15]);
        *(_OWORD *)((char *)a1 + v12[16]) = *(_OWORD *)((char *)a2 + v12[16]);
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v13 + 56))(a1, 0, 1, v12);
      }
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
      *(void *)((char *)a1 + *(int *)(v31 + 48)) = *(void *)((char *)a2 + *(int *)(v31 + 48));
    }
    else
    {
      long long v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v6 = (int *)sub_3D3860();
        uint64_t v7 = v6[11];
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
        *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
        *((unsigned char *)a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
        *((unsigned char *)a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
        *((unsigned char *)a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
        *(_OWORD *)((char *)a1 + v6[16]) = *(_OWORD *)((char *)a2 + v6[16]);
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
        *(void *)((char *)a1 + *(int *)(v11 + 48)) = *(void *)((char *)a2 + *(int *)(v11 + 48));
      }
      else
      {
        uint64_t v15 = (int *)sub_3D3860();
        uint64_t v16 = v15[11];
        id v17 = (char *)a1 + v16;
        int v18 = (char *)a2 + v16;
        uint64_t v19 = sub_3D3750();
        uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
        v20(v17, v18, v19);
        *(_OWORD *)((char *)a1 + v15[12]) = *(_OWORD *)((char *)a2 + v15[12]);
        *((unsigned char *)a1 + v15[13]) = *((unsigned char *)a2 + v15[13]);
        *((unsigned char *)a1 + v15[14]) = *((unsigned char *)a2 + v15[14]);
        *((unsigned char *)a1 + v15[15]) = *((unsigned char *)a2 + v15[15]);
        *(_OWORD *)((char *)a1 + v15[16]) = *(_OWORD *)((char *)a2 + v15[16]);
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
        uint64_t v22 = *(int *)(v21 + 48);
        int v23 = (char *)a1 + v22;
        id v24 = (char *)a2 + v22;
        long long v25 = *(_OWORD *)((char *)a2 + v22 + 16);
        *(_OWORD *)int v23 = *(_OWORD *)((char *)a2 + v22);
        *((_OWORD *)v23 + 1) = v25;
        v23[32] = *((unsigned char *)a2 + v22 + 32);
        *(_OWORD *)(v23 + 40) = *(_OWORD *)((char *)a2 + v22 + 40);
        *((void *)v23 + 7) = *(void *)((char *)a2 + v22 + 56);
        v23[64] = *((unsigned char *)a2 + v22 + 64);
        *(_OWORD *)(v23 + 113) = *(_OWORD *)((char *)a2 + v22 + 113);
        *(_OWORD *)(v23 + 104) = *(_OWORD *)((char *)a2 + v22 + 104);
        *(_OWORD *)(v23 + 88) = *(_OWORD *)((char *)a2 + v22 + 88);
        *(_OWORD *)(v23 + 72) = *(_OWORD *)((char *)a2 + v22 + 72);
        v23[129] = *((unsigned char *)a2 + v22 + 129);
        v20((char *)a1 + v22 + v15[11], (char *)a2 + v22 + v15[11], v19);
        *(_OWORD *)&v23[v15[12]] = *(_OWORD *)&v24[v15[12]];
        v23[v15[13]] = v24[v15[13]];
        v23[v15[14]] = v24[v15[14]];
        v23[v15[15]] = v24[v15[15]];
        *(_OWORD *)&v23[v15[16]] = *(_OWORD *)&v24[v15[16]];
        *(void *)((char *)a1 + *(int *)(v21 + 64)) = *(void *)((char *)a2 + *(int *)(v21 + 64));
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_34E3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_34E3B8);
}

uint64_t sub_34E3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
}

uint64_t sub_34E3D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_34E3E4);
}

uint64_t sub_34E3E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
}

uint64_t type metadata accessor for HeroSupplementalArtworkView(uint64_t a1)
{
  return sub_2595C(a1, qword_4BEF78);
}

uint64_t sub_34E41C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_350044(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for HeroBackgroundVariant);
}

uint64_t sub_34E434()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_34E450@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEFB0);
  __chkstk_darwin(v49);
  uint64_t v38 = (uint64_t)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v2 - 8);
  uint64_t v39 = (uint64_t)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v40 = (uint64_t)&v38 - v5;
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEFB8);
  __chkstk_darwin(v45);
  uint64_t v47 = (uint64_t)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEFC0);
  __chkstk_darwin(v42);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEFC8);
  __chkstk_darwin(v46);
  int v43 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for HeroShowArtworkIcon(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEFD0);
  __chkstk_darwin(v41);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v17 = (char *)&v38 - v16;
  uint64_t v18 = sub_3D3860();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  id v24 = (char *)&v38 - v23;
  uint64_t v25 = type metadata accessor for HeroBackgroundVariant();
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_34EEC8(v44, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
      swift_release();
      swift_storeEnumTagMultiPayload();
      sub_34ECAC();
      uint64_t v29 = (uint64_t)v43;
      sub_3D6360();
      sub_153B4(v29, v47, &qword_4BEFC8);
      swift_storeEnumTagMultiPayload();
      sub_34EC30();
      sub_34ED7C();
      sub_3D6360();
      sub_250FC(v29, &qword_4BEFC8);
      return sub_34EE68((uint64_t)v27, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
      swift_release();
      uint64_t v33 = v40;
      sub_18F88((uint64_t)v27, v40, (uint64_t *)&unk_4B1F70);
      uint64_t v34 = v39;
      sub_153B4(v33, v39, (uint64_t *)&unk_4B1F70);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v19 + 48))(v34, 1, v18) == 1)
      {
        sub_250FC(v34, (uint64_t *)&unk_4B1F70);
        uint64_t v35 = type metadata accessor for HeroShowArtworkView(0);
        uint64_t v36 = v38;
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v38, 1, 1, v35);
      }
      else
      {
        sub_F42EC(v34, (uint64_t)v21);
        uint64_t v36 = v38;
        sub_F42EC((uint64_t)v21, v38);
        uint64_t v37 = type metadata accessor for HeroShowArtworkView(0);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 0, 1, v37);
      }
      sub_153B4(v36, v47, &qword_4BEFB0);
      swift_storeEnumTagMultiPayload();
      sub_34EC30();
      sub_34ED7C();
      sub_3D6360();
      sub_250FC(v36, &qword_4BEFB0);
      return sub_250FC(v33, (uint64_t *)&unk_4B1F70);
    }
  }
  else
  {
    uint64_t v31 = (uint64_t)&v27[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BED98) + 48)];
    swift_release();
    sub_F42EC(v31, (uint64_t)v24);
    sub_34EEC8((uint64_t)v24, (uint64_t)v12, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    sub_34EEC8((uint64_t)v12, (uint64_t)v14, type metadata accessor for HeroShowArtworkIcon);
    *(void *)&v14[*(int *)(v41 + 36)] = 0x3FF0000000000000;
    sub_34EE68((uint64_t)v12, type metadata accessor for HeroShowArtworkIcon);
    sub_18F88((uint64_t)v14, (uint64_t)v17, &qword_4BEFD0);
    sub_153B4((uint64_t)v17, (uint64_t)v8, &qword_4BEFD0);
    swift_storeEnumTagMultiPayload();
    sub_34ECAC();
    uint64_t v32 = (uint64_t)v43;
    sub_3D6360();
    sub_153B4(v32, v47, &qword_4BEFC8);
    swift_storeEnumTagMultiPayload();
    sub_34EC30();
    sub_34ED7C();
    sub_3D6360();
    sub_250FC(v32, &qword_4BEFC8);
    sub_250FC((uint64_t)v17, &qword_4BEFD0);
    sub_34EE68((uint64_t)v24, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    return sub_34EE68((uint64_t)v27, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  }
}

uint64_t type metadata accessor for HeroShowArtworkIcon(uint64_t a1)
{
  return sub_2595C(a1, qword_4BF0F8);
}

uint64_t type metadata accessor for HeroShowArtworkView(uint64_t a1)
{
  return sub_2595C(a1, qword_4BF068);
}

unint64_t sub_34EC30()
{
  unint64_t result = qword_4BEFD8;
  if (!qword_4BEFD8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BEFC8);
    sub_34ECAC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BEFD8);
  }
  return result;
}

unint64_t sub_34ECAC()
{
  unint64_t result = qword_4BEFE0;
  if (!qword_4BEFE0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BEFD0);
    sub_34EE20(&qword_4BEFE8, (void (*)(uint64_t))type metadata accessor for HeroShowArtworkIcon);
    sub_3D6E4(&qword_4BEFF0, &qword_4BEFF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BEFE0);
  }
  return result;
}

unint64_t sub_34ED7C()
{
  unint64_t result = qword_4BF000;
  if (!qword_4BF000)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BEFB0);
    sub_34EE20(&qword_4BF008, (void (*)(uint64_t))type metadata accessor for HeroShowArtworkView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF000);
  }
  return result;
}

uint64_t sub_34EE20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_34EE68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_34EEC8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_34EF48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_34EF5C);
}

uint64_t sub_34EF5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
}

uint64_t sub_34EF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_34EF88);
}

uint64_t sub_34EF88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
}

uint64_t sub_34EFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_350044(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkModel);
}

uint64_t sub_34EFB8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_3D3860();
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *(void *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    int v8 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v8 == 255)
    {
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
    }
    else
    {
      uint64_t v9 = a2[2];
      uint64_t v10 = a2[3];
      sub_4C484(v9, v10, v8);
      *(void *)(a1 + 16) = v9;
      *(void *)(a1 + 24) = v10;
      *(unsigned char *)(a1 + 32) = v8;
    }
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 5);
    uint64_t v12 = (id *)(a2 + 7);
    int v13 = *((unsigned __int8 *)a2 + 64);
    if (v13 == 255)
    {
      *(void *)(a1 + 56) = *v12;
      *(unsigned char *)(a1 + 64) = *((unsigned char *)a2 + 64);
    }
    else
    {
      id v14 = *v12;
      sub_4C49C(*v12, *((unsigned char *)a2 + 64));
      *(void *)(a1 + 56) = v14;
      *(unsigned char *)(a1 + 64) = v13;
    }
    uint64_t v15 = (id *)(a2 + 9);
    int v16 = *((unsigned __int8 *)a2 + 80);
    if (v16 == 255)
    {
      *(void *)(a1 + 72) = *v15;
      *(unsigned char *)(a1 + 80) = *((unsigned char *)a2 + 80);
    }
    else
    {
      id v17 = *v15;
      sub_4C49C(*v15, *((unsigned char *)a2 + 80));
      *(void *)(a1 + 72) = v17;
      *(unsigned char *)(a1 + 80) = v16;
    }
    uint64_t v18 = (id *)(a2 + 11);
    int v19 = *((unsigned __int8 *)a2 + 96);
    if (v19 == 255)
    {
      *(void *)(a1 + 88) = *v18;
      *(unsigned char *)(a1 + 96) = *((unsigned char *)a2 + 96);
    }
    else
    {
      id v20 = *v18;
      sub_4C49C(*v18, *((unsigned char *)a2 + 96));
      *(void *)(a1 + 88) = v20;
      *(unsigned char *)(a1 + 96) = v19;
    }
    uint64_t v21 = (id *)(a2 + 13);
    int v22 = *((unsigned __int8 *)a2 + 112);
    if (v22 == 255)
    {
      *(void *)(a1 + 104) = *v21;
      *(unsigned char *)(a1 + 112) = *((unsigned char *)a2 + 112);
    }
    else
    {
      id v23 = *v21;
      sub_4C49C(*v21, *((unsigned char *)a2 + 112));
      *(void *)(a1 + 104) = v23;
      *(unsigned char *)(a1 + 112) = v22;
    }
    id v24 = (id *)(a2 + 15);
    int v25 = *((unsigned __int8 *)a2 + 128);
    if (v25 == 255)
    {
      *(void *)(a1 + 120) = *v24;
      *(unsigned char *)(a1 + 128) = *((unsigned char *)a2 + 128);
    }
    else
    {
      id v26 = *v24;
      sub_4C49C(*v24, *((unsigned char *)a2 + 128));
      *(void *)(a1 + 120) = v26;
      *(unsigned char *)(a1 + 128) = v25;
    }
    *(unsigned char *)(a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v27 = v6[11];
    uint64_t v28 = a1 + v27;
    uint64_t v29 = (uint64_t)a2 + v27;
    uint64_t v30 = sub_3D3750();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    uint64_t v31 = v6[12];
    uint64_t v32 = (void *)(a1 + v31);
    uint64_t v33 = (uint64_t *)((char *)a2 + v31);
    uint64_t v34 = v33[1];
    *uint64_t v32 = *v33;
    v32[1] = v34;
    *(unsigned char *)(a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
    *(unsigned char *)(a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
    *(unsigned char *)(a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
    uint64_t v35 = v6[16];
    uint64_t v36 = (void *)(a1 + v35);
    uint64_t v37 = (uint64_t *)((char *)a2 + v35);
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_34F28C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  int v2 = *(unsigned __int8 *)(a1 + 32);
  if (v2 != 255) {
    sub_49E54(*(void *)(a1 + 16), *(void *)(a1 + 24), v2);
  }
  int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 != 255) {
    sub_4C6F0(*(id *)(a1 + 56), v3);
  }
  int v4 = *(unsigned __int8 *)(a1 + 80);
  if (v4 != 255) {
    sub_4C6F0(*(id *)(a1 + 72), v4);
  }
  int v5 = *(unsigned __int8 *)(a1 + 96);
  if (v5 != 255) {
    sub_4C6F0(*(id *)(a1 + 88), v5);
  }
  int v6 = *(unsigned __int8 *)(a1 + 112);
  if (v6 != 255) {
    sub_4C6F0(*(id *)(a1 + 104), v6);
  }
  int v7 = *(unsigned __int8 *)(a1 + 128);
  if (v7 != 255) {
    sub_4C6F0(*(id *)(a1 + 120), v7);
  }
  uint64_t v8 = a1 + *(int *)(sub_3D3860() + 44);
  uint64_t v9 = sub_3D3750();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_34F3AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  int v5 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  }
  else
  {
    uint64_t v6 = *(void *)(a2 + 16);
    uint64_t v7 = *(void *)(a2 + 24);
    sub_4C484(v6, v7, v5);
    *(void *)(a1 + 16) = v6;
    *(void *)(a1 + 24) = v7;
    *(unsigned char *)(a1 + 32) = v5;
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v8 = (id *)(a2 + 56);
  int v9 = *(unsigned __int8 *)(a2 + 64);
  if (v9 == 255)
  {
    *(void *)(a1 + 56) = *v8;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  }
  else
  {
    id v10 = *v8;
    sub_4C49C(*v8, *(unsigned char *)(a2 + 64));
    *(void *)(a1 + 56) = v10;
    *(unsigned char *)(a1 + 64) = v9;
  }
  uint64_t v11 = (id *)(a2 + 72);
  int v12 = *(unsigned __int8 *)(a2 + 80);
  if (v12 == 255)
  {
    *(void *)(a1 + 72) = *v11;
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  }
  else
  {
    id v13 = *v11;
    sub_4C49C(*v11, *(unsigned char *)(a2 + 80));
    *(void *)(a1 + 72) = v13;
    *(unsigned char *)(a1 + 80) = v12;
  }
  id v14 = (id *)(a2 + 88);
  int v15 = *(unsigned __int8 *)(a2 + 96);
  if (v15 == 255)
  {
    *(void *)(a1 + 88) = *v14;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
  }
  else
  {
    id v16 = *v14;
    sub_4C49C(*v14, *(unsigned char *)(a2 + 96));
    *(void *)(a1 + 88) = v16;
    *(unsigned char *)(a1 + 96) = v15;
  }
  id v17 = (id *)(a2 + 104);
  int v18 = *(unsigned __int8 *)(a2 + 112);
  if (v18 == 255)
  {
    *(void *)(a1 + 104) = *v17;
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
  }
  else
  {
    id v19 = *v17;
    sub_4C49C(*v17, *(unsigned char *)(a2 + 112));
    *(void *)(a1 + 104) = v19;
    *(unsigned char *)(a1 + 112) = v18;
  }
  id v20 = (id *)(a2 + 120);
  int v21 = *(unsigned __int8 *)(a2 + 128);
  if (v21 == 255)
  {
    *(void *)(a1 + 120) = *v20;
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  }
  else
  {
    id v22 = *v20;
    sub_4C49C(*v20, *(unsigned char *)(a2 + 128));
    *(void *)(a1 + 120) = v22;
    *(unsigned char *)(a1 + 128) = v21;
  }
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  id v23 = (int *)sub_3D3860();
  uint64_t v24 = v23[11];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = sub_3D3750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
  uint64_t v28 = v23[12];
  uint64_t v29 = (void *)(a1 + v28);
  uint64_t v30 = (void *)(a2 + v28);
  uint64_t v31 = v30[1];
  *uint64_t v29 = *v30;
  v29[1] = v31;
  *(unsigned char *)(a1 + v23[13]) = *(unsigned char *)(a2 + v23[13]);
  *(unsigned char *)(a1 + v23[14]) = *(unsigned char *)(a2 + v23[14]);
  *(unsigned char *)(a1 + v23[15]) = *(unsigned char *)(a2 + v23[15]);
  uint64_t v32 = v23[16];
  uint64_t v33 = (void *)(a1 + v32);
  uint64_t v34 = (void *)(a2 + v32);
  uint64_t v35 = v34[1];
  *uint64_t v33 = *v34;
  v33[1] = v35;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_34F630(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (long long *)(a1 + 16);
  int v5 = (long long *)(a2 + 16);
  int v6 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v6 == 255)
    {
      long long v15 = *v5;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *uint64_t v4 = v15;
    }
    else
    {
      uint64_t v12 = *(void *)(a2 + 16);
      uint64_t v13 = *(void *)(a2 + 24);
      sub_4C484(v12, v13, *(unsigned char *)(a2 + 32));
      *(void *)(a1 + 16) = v12;
      *(void *)(a1 + 24) = v13;
      *(unsigned char *)(a1 + 32) = v6;
    }
  }
  else if (v6 == 255)
  {
    sub_4D7B0(a1 + 16);
    char v14 = *(unsigned char *)(a2 + 32);
    *uint64_t v4 = *v5;
    *(unsigned char *)(a1 + 32) = v14;
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 16);
    uint64_t v8 = *(void *)(a2 + 24);
    sub_4C484(v7, v8, *(unsigned char *)(a2 + 32));
    uint64_t v9 = *(void *)(a1 + 16);
    uint64_t v10 = *(void *)(a1 + 24);
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v8;
    unsigned __int8 v11 = *(unsigned char *)(a1 + 32);
    *(unsigned char *)(a1 + 32) = v6;
    sub_49E54(v9, v10, v11);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  id v16 = (id *)(a1 + 56);
  id v17 = (id *)(a2 + 56);
  int v18 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v18 == 255)
    {
      id v24 = *v17;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *id v16 = v24;
    }
    else
    {
      id v22 = *v17;
      sub_4C49C(*v17, *(unsigned char *)(a2 + 64));
      *(void *)(a1 + 56) = v22;
      *(unsigned char *)(a1 + 64) = v18;
    }
  }
  else if (v18 == 255)
  {
    sub_4D804(a1 + 56);
    char v23 = *(unsigned char *)(a2 + 64);
    *id v16 = *v17;
    *(unsigned char *)(a1 + 64) = v23;
  }
  else
  {
    id v19 = *v17;
    sub_4C49C(*v17, *(unsigned char *)(a2 + 64));
    id v20 = *(void **)(a1 + 56);
    *(void *)(a1 + 56) = v19;
    char v21 = *(unsigned char *)(a1 + 64);
    *(unsigned char *)(a1 + 64) = v18;
    sub_4C6F0(v20, v21);
  }
  uint64_t v25 = (id *)(a1 + 72);
  uint64_t v26 = (id *)(a2 + 72);
  int v27 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v27 == 255)
    {
      id v33 = *v26;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      id *v25 = v33;
    }
    else
    {
      id v31 = *v26;
      sub_4C49C(*v26, *(unsigned char *)(a2 + 80));
      *(void *)(a1 + 72) = v31;
      *(unsigned char *)(a1 + 80) = v27;
    }
  }
  else if (v27 == 255)
  {
    sub_4D804(a1 + 72);
    char v32 = *(unsigned char *)(a2 + 80);
    id *v25 = *v26;
    *(unsigned char *)(a1 + 80) = v32;
  }
  else
  {
    id v28 = *v26;
    sub_4C49C(*v26, *(unsigned char *)(a2 + 80));
    uint64_t v29 = *(void **)(a1 + 72);
    *(void *)(a1 + 72) = v28;
    char v30 = *(unsigned char *)(a1 + 80);
    *(unsigned char *)(a1 + 80) = v27;
    sub_4C6F0(v29, v30);
  }
  uint64_t v34 = (id *)(a1 + 88);
  uint64_t v35 = (id *)(a2 + 88);
  int v36 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v36 == 255)
    {
      id v42 = *v35;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      id *v34 = v42;
    }
    else
    {
      id v40 = *v35;
      sub_4C49C(*v35, *(unsigned char *)(a2 + 96));
      *(void *)(a1 + 88) = v40;
      *(unsigned char *)(a1 + 96) = v36;
    }
  }
  else if (v36 == 255)
  {
    sub_4D804(a1 + 88);
    char v41 = *(unsigned char *)(a2 + 96);
    id *v34 = *v35;
    *(unsigned char *)(a1 + 96) = v41;
  }
  else
  {
    id v37 = *v35;
    sub_4C49C(*v35, *(unsigned char *)(a2 + 96));
    uint64_t v38 = *(void **)(a1 + 88);
    *(void *)(a1 + 88) = v37;
    char v39 = *(unsigned char *)(a1 + 96);
    *(unsigned char *)(a1 + 96) = v36;
    sub_4C6F0(v38, v39);
  }
  int v43 = (id *)(a1 + 104);
  uint64_t v44 = (id *)(a2 + 104);
  int v45 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v45 == 255)
    {
      id v51 = *v44;
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      id *v43 = v51;
    }
    else
    {
      id v49 = *v44;
      sub_4C49C(*v44, *(unsigned char *)(a2 + 112));
      *(void *)(a1 + 104) = v49;
      *(unsigned char *)(a1 + 112) = v45;
    }
  }
  else if (v45 == 255)
  {
    sub_4D804(a1 + 104);
    char v50 = *(unsigned char *)(a2 + 112);
    id *v43 = *v44;
    *(unsigned char *)(a1 + 112) = v50;
  }
  else
  {
    id v46 = *v44;
    sub_4C49C(*v44, *(unsigned char *)(a2 + 112));
    uint64_t v47 = *(void **)(a1 + 104);
    *(void *)(a1 + 104) = v46;
    char v48 = *(unsigned char *)(a1 + 112);
    *(unsigned char *)(a1 + 112) = v45;
    sub_4C6F0(v47, v48);
  }
  id v52 = (id *)(a1 + 120);
  id v53 = (id *)(a2 + 120);
  int v54 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v54 == 255)
    {
      id v60 = *v53;
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      id *v52 = v60;
    }
    else
    {
      id v58 = *v53;
      sub_4C49C(*v53, *(unsigned char *)(a2 + 128));
      *(void *)(a1 + 120) = v58;
      *(unsigned char *)(a1 + 128) = v54;
    }
  }
  else if (v54 == 255)
  {
    sub_4D804(a1 + 120);
    char v59 = *(unsigned char *)(a2 + 128);
    id *v52 = *v53;
    *(unsigned char *)(a1 + 128) = v59;
  }
  else
  {
    id v55 = *v53;
    sub_4C49C(*v53, *(unsigned char *)(a2 + 128));
    id v56 = *(void **)(a1 + 120);
    *(void *)(a1 + 120) = v55;
    char v57 = *(unsigned char *)(a1 + 128);
    *(unsigned char *)(a1 + 128) = v54;
    sub_4C6F0(v56, v57);
  }
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  uint64_t v61 = (int *)sub_3D3860();
  uint64_t v62 = v61[11];
  uint64_t v63 = a1 + v62;
  uint64_t v64 = a2 + v62;
  uint64_t v65 = sub_3D3750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 24))(v63, v64, v65);
  uint64_t v66 = v61[12];
  uint64_t v67 = (void *)(a1 + v66);
  uint64_t v68 = (void *)(a2 + v66);
  *uint64_t v67 = *v68;
  v67[1] = v68[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v61[13]) = *(unsigned char *)(a2 + v61[13]);
  *(unsigned char *)(a1 + v61[14]) = *(unsigned char *)(a2 + v61[14]);
  *(unsigned char *)(a1 + v61[15]) = *(unsigned char *)(a2 + v61[15]);
  uint64_t v69 = v61[16];
  id v70 = (void *)(a1 + v69);
  uint64_t v71 = (void *)(a2 + v69);
  *id v70 = *v71;
  v70[1] = v71[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_34FB08(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  int v5 = (int *)sub_3D3860();
  uint64_t v6 = v5[11];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_3D3750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)(a1 + v5[12]) = *(_OWORD *)(a2 + v5[12]);
  *(unsigned char *)(a1 + v5[13]) = *(unsigned char *)(a2 + v5[13]);
  *(unsigned char *)(a1 + v5[14]) = *(unsigned char *)(a2 + v5[14]);
  *(unsigned char *)(a1 + v5[15]) = *(unsigned char *)(a2 + v5[15]);
  *(_OWORD *)(a1 + v5[16]) = *(_OWORD *)(a2 + v5[16]);
  return a1;
}

uint64_t sub_34FC20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  int v5 = (_OWORD *)(a2 + 16);
  int v6 = *(unsigned __int8 *)(a1 + 32);
  if (v6 != 255)
  {
    int v7 = *(unsigned __int8 *)(a2 + 32);
    if (v7 != 255)
    {
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      *(_OWORD *)(a1 + 16) = *v5;
      *(unsigned char *)(a1 + 32) = v7;
      sub_49E54(v8, v9, v6);
      goto LABEL_6;
    }
    sub_4D7B0(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *v5;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
LABEL_6:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  uint64_t v10 = (void *)(a2 + 56);
  int v11 = *(unsigned __int8 *)(a1 + 64);
  if (v11 != 255)
  {
    int v12 = *(unsigned __int8 *)(a2 + 64);
    if (v12 != 255)
    {
      uint64_t v13 = *(void **)(a1 + 56);
      *(void *)(a1 + 56) = *v10;
      *(unsigned char *)(a1 + 64) = v12;
      sub_4C6F0(v13, v11);
      goto LABEL_11;
    }
    sub_4D804(a1 + 56);
  }
  *(void *)(a1 + 56) = *v10;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
LABEL_11:
  char v14 = (void *)(a2 + 72);
  int v15 = *(unsigned __int8 *)(a1 + 80);
  if (v15 != 255)
  {
    int v16 = *(unsigned __int8 *)(a2 + 80);
    if (v16 != 255)
    {
      id v17 = *(void **)(a1 + 72);
      *(void *)(a1 + 72) = *v14;
      *(unsigned char *)(a1 + 80) = v16;
      sub_4C6F0(v17, v15);
      goto LABEL_16;
    }
    sub_4D804(a1 + 72);
  }
  *(void *)(a1 + 72) = *v14;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
LABEL_16:
  int v18 = (void *)(a2 + 88);
  int v19 = *(unsigned __int8 *)(a1 + 96);
  if (v19 != 255)
  {
    int v20 = *(unsigned __int8 *)(a2 + 96);
    if (v20 != 255)
    {
      char v21 = *(void **)(a1 + 88);
      *(void *)(a1 + 88) = *v18;
      *(unsigned char *)(a1 + 96) = v20;
      sub_4C6F0(v21, v19);
      goto LABEL_21;
    }
    sub_4D804(a1 + 88);
  }
  *(void *)(a1 + 88) = *v18;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
LABEL_21:
  id v22 = (void *)(a2 + 104);
  int v23 = *(unsigned __int8 *)(a1 + 112);
  if (v23 != 255)
  {
    int v24 = *(unsigned __int8 *)(a2 + 112);
    if (v24 != 255)
    {
      uint64_t v25 = *(void **)(a1 + 104);
      *(void *)(a1 + 104) = *v22;
      *(unsigned char *)(a1 + 112) = v24;
      sub_4C6F0(v25, v23);
      goto LABEL_26;
    }
    sub_4D804(a1 + 104);
  }
  *(void *)(a1 + 104) = *v22;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
LABEL_26:
  uint64_t v26 = (void *)(a2 + 120);
  int v27 = *(unsigned __int8 *)(a1 + 128);
  if (v27 == 255)
  {
LABEL_30:
    *(void *)(a1 + 120) = *v26;
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    goto LABEL_31;
  }
  int v28 = *(unsigned __int8 *)(a2 + 128);
  if (v28 == 255)
  {
    sub_4D804(a1 + 120);
    goto LABEL_30;
  }
  uint64_t v29 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = *v26;
  *(unsigned char *)(a1 + 128) = v28;
  sub_4C6F0(v29, v27);
LABEL_31:
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  char v30 = (int *)sub_3D3860();
  uint64_t v31 = v30[11];
  uint64_t v32 = a1 + v31;
  uint64_t v33 = a2 + v31;
  uint64_t v34 = sub_3D3750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 40))(v32, v33, v34);
  uint64_t v35 = v30[12];
  int v36 = (void *)(a1 + v35);
  id v37 = (uint64_t *)(a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *int v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v30[13]) = *(unsigned char *)(a2 + v30[13]);
  *(unsigned char *)(a1 + v30[14]) = *(unsigned char *)(a2 + v30[14]);
  *(unsigned char *)(a1 + v30[15]) = *(unsigned char *)(a2 + v30[15]);
  uint64_t v40 = v30[16];
  char v41 = (void *)(a1 + v40);
  id v42 = (uint64_t *)(a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *char v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_34FF08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_34FF1C);
}

uint64_t sub_34FF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4(0);
  int v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48);

  return v7(a1, a2, v6);
}

uint64_t sub_34FFA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_34FFB8);
}

uint64_t sub_34FFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v7 = a5(0);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);

  return v8(a1, a2, a2, v7);
}

uint64_t sub_350044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_3500D8()
{
  unint64_t result = qword_4BF130;
  if (!qword_4BF130)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF138);
    sub_34EC30();
    sub_34ED7C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF130);
  }
  return result;
}

uint64_t sub_350154()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_350170@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v41 = a1;
  *(void *)&long long v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF140);
  __chkstk_darwin(v40);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_3D60D0();
  __chkstk_darwin(v37);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Artwork(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF148);
  __chkstk_darwin(v38);
  int v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF150);
  __chkstk_darwin(v39);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_34EEC8(v2, (uint64_t)v9, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  uint64_t v14 = sub_3D3860();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v9, 0, 1, v14);
  if (qword_4A9020 != -1) {
    swift_once();
  }
  long long v15 = xmmword_4BEE90;
  int v16 = (int *)type metadata accessor for Artwork.Configuration(0);
  id v17 = &v9[v16[7]];
  uint64_t v18 = sub_3D5190();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = sub_3D68A0();
  int v20 = &v9[v16[5]];
  *(_OWORD *)int v20 = v15;
  v20[16] = 0;
  char v21 = (uint64_t *)&v9[v16[6]];
  uint64_t *v21 = v19;
  v21[1] = v22;
  v9[v16[8]] = 1;
  *(void *)&v9[v16[9]] = 0;
  int v23 = &v9[*(int *)(v7 + 20)];
  *(void *)int v23 = sub_392FA8;
  *((void *)v23 + 1) = 0;
  v23[16] = 0;
  if (qword_4A9028 != -1) {
    swift_once();
  }
  uint64_t v24 = __swift_project_value_buffer(v37, (uint64_t)qword_4BEEA0);
  sub_34EEC8(v24, (uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_3D6730();
  uint64_t v25 = sub_3D6760();
  swift_release();
  sub_34EEC8((uint64_t)v6, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v26 = v40;
  int v27 = &v4[*(int *)(v40 + 36)];
  *(void *)int v27 = v25;
  *(_OWORD *)(v27 + 8) = xmmword_3F8220;
  *((void *)v27 + 3) = 0x4000000000000000;
  int v28 = (uint64_t *)&v4[*(int *)(v26 + 40)];
  uint64_t *v28 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4B4E48);
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = &v4[*(int *)(v26 + 44)];
  *(void *)uint64_t v29 = swift_getKeyPath();
  v29[8] = 0;
  sub_34EEC8((uint64_t)v9, (uint64_t)v11, type metadata accessor for Artwork);
  sub_18F88((uint64_t)v4, (uint64_t)&v11[*(int *)(v38 + 36)], &qword_4BF140);
  sub_34EE68((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_34EE68((uint64_t)v9, type metadata accessor for Artwork);
  if (qword_4A9030 != -1) {
    swift_once();
  }
  long long v40 = xmmword_4BEEB8;
  long long v30 = xmmword_4BEEC8;
  char v31 = sub_3D6450();
  sub_153B4((uint64_t)v11, (uint64_t)v13, &qword_4BF148);
  uint64_t v32 = &v13[*(int *)(v39 + 36)];
  *uint64_t v32 = v31;
  *(_OWORD *)(v32 + 8) = v40;
  *(_OWORD *)(v32 + 24) = v30;
  v32[40] = 0;
  sub_250FC((uint64_t)v11, &qword_4BF148);
  uint64_t v33 = sub_3D6880();
  sub_3565AC(0.0, 0, 0.0, 1, INFINITY, 0, 0.0, 0, v41, 0.0, 1, INFINITY, 0, v33, v34);
  return sub_250FC((uint64_t)v13, &qword_4BF150);
}

int64x2_t sub_3506D4()
{
  int64x2_t result = vdupq_n_s64(0x4048000000000000uLL);
  xmmword_4BEE90 = (__int128)result;
  return result;
}

double sub_3506EC(uint64_t a1)
{
  *(void *)&double result = sub_350D58(a1, qword_4BEEA0).n128_u64[0];
  return result;
}

double sub_3506F8()
{
  if (qword_4A8FF0 != -1) {
    swift_once();
  }
  *(void *)&xmmword_4BEEB8 = 0;
  *((void *)&xmmword_4BEEB8 + 1) = qword_4BEB20;
  double result = 10.0;
  xmmword_4BEEC8 = xmmword_3F8230;
  return result;
}

uint64_t sub_350764@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v42 = a1;
  uint64_t v3 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_4BF140);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_3D60D0();
  __chkstk_darwin(v38);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Artwork(0);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  int v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF148);
  __chkstk_darwin(v39);
  uint64_t v13 = (char *)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF158);
  __chkstk_darwin(v40);
  long long v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF160);
  __chkstk_darwin(v41);
  id v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_34EEC8(v2, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  uint64_t v18 = sub_3D3860();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 0, 1, v18);
  uint64_t v19 = (int *)type metadata accessor for Artwork.Configuration(0);
  int v20 = &v11[v19[7]];
  uint64_t v21 = sub_3D5190();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  uint64_t v22 = sub_3D68A0();
  int v23 = &v11[v19[5]];
  *(void *)int v23 = 0;
  *((void *)v23 + 1) = 0;
  v23[16] = 2;
  uint64_t v24 = (uint64_t *)&v11[v19[6]];
  *uint64_t v24 = v22;
  v24[1] = v25;
  v11[v19[8]] = 1;
  *(void *)&v11[v19[9]] = 0;
  uint64_t v26 = &v11[*(int *)(v9 + 28)];
  *(void *)uint64_t v26 = sub_392FA8;
  *((void *)v26 + 1) = 0;
  unsigned char v26[16] = 0;
  if (qword_4A9038 != -1) {
    swift_once();
  }
  uint64_t v27 = __swift_project_value_buffer(v38, (uint64_t)qword_4BEED8);
  sub_34EEC8(v27, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_3D6730();
  uint64_t v28 = sub_3D6760();
  swift_release();
  sub_34EEC8((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v29 = &v5[v3[9]];
  *(void *)uint64_t v29 = v28;
  *(_OWORD *)(v29 + 8) = xmmword_3F8220;
  *((void *)v29 + 3) = 0x4000000000000000;
  long long v30 = (uint64_t *)&v5[v3[10]];
  *long long v30 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4B4E48);
  swift_storeEnumTagMultiPayload();
  char v31 = &v5[v3[11]];
  *(void *)char v31 = swift_getKeyPath();
  v31[8] = 0;
  sub_34EEC8((uint64_t)v11, (uint64_t)v13, type metadata accessor for Artwork);
  sub_18F88((uint64_t)v5, (uint64_t)&v13[*(int *)(v39 + 36)], &qword_4BF140);
  sub_34EE68((uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  sub_34EE68((uint64_t)v11, type metadata accessor for Artwork);
  sub_153B4((uint64_t)v13, (uint64_t)v15, &qword_4BF148);
  uint64_t v32 = &v15[*(int *)(v40 + 36)];
  *(void *)uint64_t v32 = 0;
  *((_WORD *)v32 + 4) = 1;
  sub_250FC((uint64_t)v13, &qword_4BF148);
  if (qword_4A9040 != -1) {
    swift_once();
  }
  long long v40 = xmmword_4BEEF0;
  uint64_t v33 = qword_4BEF00;
  uint64_t v34 = qword_4BEF08;
  char v35 = sub_3D6450();
  sub_153B4((uint64_t)v15, (uint64_t)v17, &qword_4BF158);
  uint64_t v36 = &v17[*(int *)(v41 + 36)];
  *uint64_t v36 = v35;
  *(_OWORD *)(v36 + 8) = v40;
  *((void *)v36 + 3) = v33;
  *((void *)v36 + 4) = v34;
  v36[40] = 0;
  sub_250FC((uint64_t)v15, &qword_4BF158);
  if (qword_4A9048 != -1) {
    swift_once();
  }
  sub_3567D8(0.0, 0, 0.0, 1, INFINITY, 0, 0.0, 0, v42, 0.0, 1, INFINITY, 0, qword_4BEF10, *(uint64_t *)algn_4BEF18);
  return sub_250FC((uint64_t)v17, &qword_4BF160);
}

double sub_350D4C(uint64_t a1)
{
  *(void *)&double result = sub_350D58(a1, qword_4BEED8).n128_u64[0];
  return result;
}

__n128 sub_350D58(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_3D60D0();
  __swift_allocate_value_buffer(v3, a2);
  uint64_t v4 = (__n128 *)__swift_project_value_buffer(v3, (uint64_t)a2);
  uint64_t v5 = (char *)v4 + *(int *)(v3 + 20);
  uint64_t v6 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v7 = sub_3D62F0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 104))(v5, v6, v7);
  __asm { FMOV            V0.2D, #5.0 }
  *uint64_t v4 = result;
  return result;
}

double sub_350DFC()
{
  if (qword_4A8FF0 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_4BEB20;
  *(void *)&xmmword_4BEEF0 = 0x403C000000000000;
  *((void *)&xmmword_4BEEF0 + 1) = qword_4BEB20;
  qword_4BEF00 = 0x4032000000000000;
  qword_4BEF08 = qword_4BEB20;
  return result;
}

uint64_t sub_350E68()
{
  uint64_t result = sub_3D68B0();
  qword_4BEF10 = result;
  *(void *)algn_4BEF18 = v1;
  return result;
}

uint64_t sub_350E90()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_350EC0()
{
  unint64_t result = qword_4BF168;
  if (!qword_4BF168)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF170);
    sub_350F3C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF168);
  }
  return result;
}

unint64_t sub_350F3C()
{
  unint64_t result = qword_4BF178;
  if (!qword_4BF178)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF150);
    sub_350FB8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF178);
  }
  return result;
}

unint64_t sub_350FB8()
{
  unint64_t result = qword_4BF180;
  if (!qword_4BF180)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF148);
    sub_34EE20(&qword_4BF188, (void (*)(uint64_t))type metadata accessor for Artwork);
    sub_3D6E4(&qword_4BF190, &qword_4BF140);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF180);
  }
  return result;
}

unint64_t sub_35108C()
{
  unint64_t result = qword_4BF198;
  if (!qword_4BF198)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF1A0);
    sub_351108();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF198);
  }
  return result;
}

unint64_t sub_351108()
{
  unint64_t result = qword_4BF1A8;
  if (!qword_4BF1A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF160);
    sub_351184();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF1A8);
  }
  return result;
}

unint64_t sub_351184()
{
  unint64_t result = qword_4BF1B0;
  if (!qword_4BF1B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF158);
    sub_350FB8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF1B0);
  }
  return result;
}

uint64_t sub_351200()
{
  uint64_t result = sub_3D3390();
  qword_4BF1B8 = result;
  unk_4BF1C0 = v1;
  return result;
}

uint64_t static AddFavoriteCategoriesSearchTip.kind.getter()
{
  if (qword_4A9050 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_4BF1B8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t AddFavoriteCategoriesSearchTip.title.getter()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v5._countAndFlagsBits = 0xD000000000000021;
  v4._countAndFlagsBits = 0x80000000004085C0;
  v5._object = (void *)0x800000000040A290;
  v6.value._countAndFlagsBits = 0;
  v6.value._object = 0;
  v1.super.Class isa = v0;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_3D2060(v5, v6, v1, v7, v4);

  return v2;
}

uint64_t AddFavoriteCategoriesSearchTip.buttons.getter()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AB730);
  __chkstk_darwin(v0 - 8);
  uint64_t v61 = (char *)&v42 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for FlowDestination();
  __chkstk_darwin(v56);
  id v55 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_3D7260();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v4 - 8);
  Swift::String_optional v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_3D6F40();
  uint64_t v47 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  char v59 = (char *)&v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v50 = (char *)&v42 - v9;
  __chkstk_darwin(v10);
  int v45 = (char *)&v42 - v11;
  __chkstk_darwin(v12);
  uint64_t v44 = (char *)&v42 - v13;
  uint64_t v14 = (objc_class *)[self mainBundle];
  v77._countAndFlagsBits = 0xD000000000000020;
  v41._countAndFlagsBits = 0x80000000004085C0;
  v77._object = (void *)0x8000000000408590;
  v78.value._countAndFlagsBits = 0;
  v78.value._object = 0;
  v15.super.Class isa = v14;
  v79._countAndFlagsBits = 0;
  v79._object = (void *)0xE000000000000000;
  uint64_t v57 = sub_3D2060(v77, v78, v15, v79, v41);
  uint64_t v48 = v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_4AB738);
  uint64_t v17 = *(void *)(sub_3D34C0() - 8);
  uint64_t v58 = *(void *)(v17 + 72);
  unint64_t v43 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v62 = swift_allocObject();
  long long v60 = xmmword_3DED20;
  *(_OWORD *)(v62 + 16) = xmmword_3DED20;
  v68[0] = 0;
  v68[1] = 0xE000000000000000;
  sub_3D8BC0(31);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9890);
  uint64_t v18 = *(void *)(sub_3D6D80() - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_3DED90;
  uint64_t v49 = v20 + v19;
  swift_bridgeObjectRetain();
  sub_3D40D0();
  sub_3D44A0();
  sub_3D43A0();
  uint64_t v53 = sub_3D2350();
  uint64_t v21 = *(void *)(v53 - 8);
  id v52 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v54 = v21 + 56;
  v52(v6, 1, 1, v53);
  sub_3D2F90();
  id v46 = v6;
  sub_3D6D10();
  sub_4434C((uint64_t)v64, (uint64_t)v76);
  sub_443B4((uint64_t)v76);
  uint64_t v75 = v65;
  sub_443E0((uint64_t)&v75);
  uint64_t v74 = v66;
  sub_443E0((uint64_t)&v74);
  sub_3D4C4(v67);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_250FC((uint64_t)v6, &qword_4AD7B0);
  sub_3D7250();
  sub_3D6F10();
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B5A70);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = v60;
  int v23 = v45;
  sub_3D6F00();
  id v24 = [self currentTraitCollection];
  id v25 = [v24 userInterfaceIdiom];

  if ((unint64_t)v25 >= 6) {
    char v26 = 0;
  }
  else {
    char v26 = 0x80000000504uLL >> (8 * v25);
  }
  unint64_t v27 = v62 + v43;
  uint64_t v28 = (uint64_t)v55;
  swift_storeEnumTagMultiPayload();
  LOBYTE(v68[0]) = v26;
  uint64_t v29 = v47;
  uint64_t v30 = (uint64_t)v50;
  uint64_t v31 = v51;
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v50, v23, v51);
  LOBYTE(v63[0]) = 0;
  uint64_t v32 = type metadata accessor for FlowAction(0);
  swift_allocObject();
  uint64_t v33 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v28, 0, 0, 0, 0, (char *)v68, 0, 48, (char *)v63, v30);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v31);
  *(void *)(v22 + 56) = v32;
  *(void *)(v22 + 64) = sub_4460C((unint64_t *)&qword_4B1FA0, (void (*)(uint64_t))type metadata accessor for FlowAction);
  *(void *)(v22 + 32) = v33;
  sub_3D6F00();
  uint64_t v56 = sub_3D3100();
  *(void *)(v22 + 96) = v56;
  id v55 = (char *)sub_4460C(&qword_4AB740, (void (*)(uint64_t))&type metadata accessor for RequestTipProviderRefreshAction);
  *(void *)(v22 + 104) = v55;
  __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v22 + 72));
  sub_3D30F0();
  uint64_t v51 = sub_3D7050();
  uint64_t v69 = v51;
  id v70 = &protocol witness table for CompoundAction;
  __swift_allocate_boxed_opaque_existential_2Tm(v68);
  sub_3D7040();
  sub_3D40D0();
  sub_3D44A0();
  uint64_t v34 = v61;
  sub_3D2C30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_3D2C80();
  uint64_t v47 = *(void *)(*(void *)(v35 - 8) + 56);
  ((void (*)(char *, void, uint64_t, uint64_t))v47)(v34, 0, 1, v35);
  sub_3D34A0();
  v58 += v27;
  sub_3D40F0();
  sub_3D4440();
  sub_3D48F0();
  uint64_t v36 = (uint64_t)v46;
  v52(v46, 1, 1, v53);
  sub_3D2F90();
  sub_3D6EF0();
  sub_4434C((uint64_t)v68, (uint64_t)v73);
  sub_443B4((uint64_t)v73);
  uint64_t v72 = v68[2];
  sub_443E0((uint64_t)&v72);
  uint64_t v71 = v69;
  sub_443E0((uint64_t)&v71);
  sub_3D4C4((uint64_t)v70);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_250FC(v36, &qword_4AD7B0);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = v60;
  sub_3D6F00();
  *(void *)(v37 + 56) = sub_3D6F80();
  *(void *)(v37 + 64) = &protocol witness table for ClosureAction;
  __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v37 + 32));
  sub_3D6F70();
  sub_3D6F00();
  uint64_t v38 = v55;
  *(void *)(v37 + 96) = v56;
  *(void *)(v37 + 104) = v38;
  __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)(v37 + 72));
  sub_3D30F0();
  v63[3] = v51;
  v63[4] = (uint64_t)&protocol witness table for CompoundAction;
  __swift_allocate_boxed_opaque_existential_2Tm(v63);
  sub_3D7040();
  sub_3D40F0();
  sub_3D4440();
  uint64_t v39 = (uint64_t)v61;
  sub_3D2C30();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v47)(v39, 0, 1, v35);
  sub_3D34B0();
  sub_250FC(v39, &qword_4AB730);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v63);
  return v62;
}

void sub_351F00()
{
  id v0 = [self _applePodcastsFoundationSharedUserDefaults];
  sub_3D7E20();
  NSString v1 = sub_3D7D10();
  swift_bridgeObjectRelease();
  [v0 setBool:1 forKey:v1];
}

uint64_t AddFavoriteCategoriesSearchTip.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (objc_class *)[self mainBundle];
  v9._countAndFlagsBits = 0xD000000000000021;
  v7._countAndFlagsBits = 0x80000000004085C0;
  v9._object = (void *)0x800000000040A290;
  v10.value._countAndFlagsBits = 0;
  v10.value._object = 0;
  v3.super.Class isa = v2;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  sub_3D2060(v9, v10, v3, v11, v7);

  sub_3D72B0();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_3D7340();
  uint64_t v5 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, 0, 1, v4);
}

uint64_t sub_3520C0()
{
  return AddFavoriteCategoriesSearchTip.buttons.getter();
}

uint64_t sub_3520D8@<X0>(uint64_t a1@<X8>)
{
  return AddFavoriteCategoriesSearchTip.impressionMetrics.getter(a1);
}

unint64_t sub_3520F4()
{
  unint64_t result = qword_4BF1C8;
  if (!qword_4BF1C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF1C8);
  }
  return result;
}

ValueMetadata *type metadata accessor for AddFavoriteCategoriesSearchTip()
{
  return &type metadata for AddFavoriteCategoriesSearchTip;
}

uint64_t ThinClientUnbookmarkEpisodeIntentImplementation.perform(_:objectGraph:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_352178, 0, 0);
}

uint64_t sub_352178()
{
  uint64_t v1 = sub_3D2F40();
  v0[4] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[5] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_298CC;
  uint64_t v3 = v0[3];
  return ThinClientToggleBookmarkEpisodeHelper.toggle(to:episodeIdentifiers:objectGraph:)(0, v1, v3);
}

uint64_t sub_352224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  void v3[2] = a1;
  return _swift_task_switch(sub_352248, 0, 0);
}

uint64_t sub_352248()
{
  uint64_t v1 = sub_3D2F40();
  v0[5] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[6] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_29BB0;
  uint64_t v3 = v0[4];
  return ThinClientToggleBookmarkEpisodeHelper.toggle(to:episodeIdentifiers:objectGraph:)(0, v1, v3);
}

ValueMetadata *type metadata accessor for ThinClientUnbookmarkEpisodeIntentImplementation()
{
  return &type metadata for ThinClientUnbookmarkEpisodeIntentImplementation;
}

uint64_t HeroBackgroundVariant.init(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v63 = a2;
  uint64_t v62 = type metadata accessor for HeroBackgroundVariant();
  __chkstk_darwin(v62);
  uint64_t v61 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_3D6710();
  uint64_t v54 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  __chkstk_darwin(v4);
  uint64_t v56 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_3D29C0();
  uint64_t v64 = *(void *)(v6 - 8);
  uint64_t v65 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v9 - 8);
  uint64_t v60 = (uint64_t)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v52 - v12;
  __chkstk_darwin(v14);
  uint64_t v59 = (uint64_t)&v52 - v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v52 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v52 - v20;
  uint64_t v22 = sub_3D3860();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v57 = (uint64_t)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  unint64_t v27 = (char *)&v52 - v26;
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v52 - v29;
  LegacyEpisodeLockup.dedupedEpisodeArtwork.getter((uint64_t)v21);
  uint64_t v58 = v23;
  uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v31(v21, 1, v22) == 1)
  {
    sub_6E980((uint64_t)v21);
    uint64_t v32 = v63;
    uint64_t v33 = a1;
  }
  else
  {
    uint64_t v53 = v27;
    sub_353340((uint64_t)v21, (uint64_t)v30, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    sub_5AC54(a1 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_icon, (uint64_t)v18);
    uint64_t v33 = a1;
    if (v31(v18, 1, v22) == 1)
    {
      sub_35596C((uint64_t)v30, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      sub_6E980((uint64_t)v18);
    }
    else
    {
      uint64_t v34 = v53;
      sub_353340((uint64_t)v18, (uint64_t)v53, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      if ((*(void *)v30 != *v34 || *((void *)v30 + 1) != v34[1])
        && (sub_3D8FE0() & 1) == 0
        && *((double *)v30 + 5) > 200.0
        && *((double *)v30 + 6) > 200.0)
      {
        uint64_t v35 = v59;
        sub_F25E4((uint64_t)v30, v59);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v35, 0, 1, v22);
        sub_3D29B0();
        uint64_t v36 = sub_353078(v35);
        (*(void (**)(char *, uint64_t))(v64 + 8))(v8, v65);
        sub_6E980(v35);
        if (!v36)
        {
          (*(void (**)(char *, void, uint64_t))(v54 + 104))(v56, enum case for Color.RGBColorSpace.sRGB(_:), v55);
          uint64_t v36 = sub_3D6770();
        }
        swift_release();
        uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
        uint64_t v38 = v63;
        uint64_t v39 = v63 + *(int *)(v37 + 48);
        uint64_t v40 = *(int *)(v37 + 64);
        sub_353340((uint64_t)v30, v63, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
        sub_353340((uint64_t)v34, v39, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
        *(void *)(v38 + v40) = v36;
        return swift_storeEnumTagMultiPayload();
      }
      sub_35596C((uint64_t)v34, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      sub_35596C((uint64_t)v30, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    }
    uint64_t v32 = v63;
  }
  sub_5AC54(v33 + OBJC_IVAR____TtC8ShelfKit19LegacyEpisodeLockup_showUberArtwork, (uint64_t)v13);
  if (v31(v13, 1, v22) == 1)
  {
    sub_6E980((uint64_t)v13);
    uint64_t v42 = (uint64_t)v61;
    uint64_t v44 = v64;
    uint64_t v43 = v65;
  }
  else
  {
    uint64_t v45 = v57;
    sub_353340((uint64_t)v13, v57, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    uint64_t v46 = v59;
    sub_F25E4(v45, v59);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v58 + 56))(v46, 0, 1, v22);
    sub_3D29A0();
    uint64_t v47 = sub_353078(v46);
    uint64_t v44 = v64;
    uint64_t v43 = v65;
    (*(void (**)(char *, uint64_t))(v64 + 8))(v8, v65);
    sub_6E980(v46);
    if (v47)
    {
      swift_release();
      uint64_t v48 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0) + 48);
      sub_353340(v45, v32, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      *(void *)(v32 + v48) = v47;
      return swift_storeEnumTagMultiPayload();
    }
    sub_35596C(v45, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    uint64_t v42 = (uint64_t)v61;
  }
  uint64_t v49 = v60;
  sub_5AC54(v33 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_icon, v60);
  sub_3D29B0();
  uint64_t v50 = sub_353078(v49);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v8, v43);
  uint64_t v51 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8) + 48);
  sub_5AC54(v49, v42);
  if (!v50)
  {
    (*(void (**)(char *, void, uint64_t))(v54 + 104))(v56, enum case for Color.RGBColorSpace.sRGB(_:), v55);
    uint64_t v50 = sub_3D6770();
  }
  swift_release();
  sub_6E980(v49);
  *(void *)(v42 + v51) = v50;
  swift_storeEnumTagMultiPayload();
  return sub_353340(v42, v32, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
}

{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  uint64_t v40 = a2;
  uint64_t v3 = sub_3D6710();
  uint64_t v36 = *(void *)(v3 - 8);
  uint64_t v37 = v3;
  __chkstk_darwin(v3);
  uint64_t v35 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = type metadata accessor for HeroBackgroundVariant();
  __chkstk_darwin(v39);
  uint64_t v38 = (uint64_t)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_3D29C0();
  Swift::String v41 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v35 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v18 = sub_3D3860();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v35 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for ShowHero();
  uint64_t v23 = *(int *)(v22 + 36);
  uint64_t v42 = a1;
  sub_5AC54(a1 + v23, (uint64_t)v17);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_6E980((uint64_t)v17);
    uint64_t v24 = v41;
  }
  else
  {
    sub_353340((uint64_t)v17, (uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    sub_F25E4((uint64_t)v21, (uint64_t)v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
    sub_3D29A0();
    uint64_t v25 = sub_353078((uint64_t)v14);
    uint64_t v24 = v41;
    (*(void (**)(char *, uint64_t))(v41 + 8))(v8, v6);
    sub_6E980((uint64_t)v14);
    if (v25)
    {
      sub_35596C(v42, (uint64_t (*)(void))type metadata accessor for ShowHero);
      uint64_t v26 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0) + 48);
      unint64_t v27 = (uint64_t)v21;
      uint64_t v28 = v40;
      sub_353340(v27, v40, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      *(void *)(v28 + v26) = v25;
      return swift_storeEnumTagMultiPayload();
    }
    sub_35596C((uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  }
  uint64_t v30 = v42;
  sub_5AC54(v42 + *(int *)(v22 + 32), (uint64_t)v11);
  sub_3D29B0();
  uint64_t v31 = sub_353078((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v8, v6);
  uint64_t v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8) + 48);
  uint64_t v33 = v38;
  sub_5AC54((uint64_t)v11, v38);
  if (!v31)
  {
    (*(void (**)(char *, void, uint64_t))(v36 + 104))(v35, enum case for Color.RGBColorSpace.sRGB(_:), v37);
    uint64_t v31 = sub_3D6770();
  }
  sub_35596C(v30, (uint64_t (*)(void))type metadata accessor for ShowHero);
  sub_6E980((uint64_t)v11);
  uint64_t v34 = v40;
  *(void *)(v33 + v32) = v31;
  swift_storeEnumTagMultiPayload();
  return sub_353340(v33, v34, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
}

uint64_t type metadata accessor for HeroBackgroundVariant()
{
  uint64_t result = qword_4BF258;
  if (!qword_4BF258) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_35303C()
{
  id result = [self whiteColor];
  qword_4BF1E0 = (uint64_t)result;
  return result;
}

uint64_t sub_353078(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_3D3860();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5AC54(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_6E980((uint64_t)v4);
    return 0;
  }
  else
  {
    sub_353340((uint64_t)v4, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    if (qword_4A9058 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_3D3110();
    uint64_t v15 = &protocol witness table for JoeColorClampBrightnessAlgorithm;
    __swift_allocate_boxed_opaque_existential_2Tm(v13);
    sub_3D28D0();
    uint64_t v10 = (void *)sub_3D37F0();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    if (v10)
    {
      sub_3D8790();
      sub_3564E8((uint64_t)v16, (uint64_t)v13);
      if (v15)
      {
        sub_35596C((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);

        return 0;
      }
      else
      {
        id v11 = [objc_allocWithZone((Class)UIColor) initWithHue:*(double *)v13 saturation:*(double *)&v13[1] brightness:fmax(*(double *)&v13[2], 0.1) alpha:*(double *)&v14];
        uint64_t v9 = sub_3D6700();

        sub_35596C((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      }
    }
    else
    {
      sub_35596C((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      return 0;
    }
  }
  return v9;
}

uint64_t sub_353340(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t *initializeBufferWithCopyOfBuffer for HeroBackgroundVariant(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v12 = (int *)sub_3D3860();
      uint64_t v13 = *((void *)v12 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v13 + 48))(a2, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        uint64_t v22 = a2[1];
        *a1 = *a2;
        a1[1] = v22;
        int v23 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v23 == 255)
        {
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        }
        else
        {
          uint64_t v24 = a2[2];
          uint64_t v25 = a2[3];
          sub_4C484(v24, v25, v23);
          a1[2] = v24;
          a1[3] = v25;
          *((unsigned char *)a1 + 32) = v23;
        }
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        int v110 = (id *)(a2 + 7);
        int v111 = *((unsigned __int8 *)a2 + 64);
        if (v111 == 255)
        {
          a1[7] = (uint64_t)*v110;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        }
        else
        {
          id v112 = *v110;
          sub_4C49C(*v110, *((unsigned char *)a2 + 64));
          a1[7] = (uint64_t)v112;
          *((unsigned char *)a1 + 64) = v111;
        }
        int v113 = (id *)(a2 + 9);
        int v114 = *((unsigned __int8 *)a2 + 80);
        if (v114 == 255)
        {
          a1[9] = (uint64_t)*v113;
          *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
        }
        else
        {
          id v115 = *v113;
          sub_4C49C(*v113, *((unsigned char *)a2 + 80));
          a1[9] = (uint64_t)v115;
          *((unsigned char *)a1 + 80) = v114;
        }
        int v116 = (id *)(a2 + 11);
        int v117 = *((unsigned __int8 *)a2 + 96);
        if (v117 == 255)
        {
          a1[11] = (uint64_t)*v116;
          *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
        }
        else
        {
          id v118 = *v116;
          sub_4C49C(*v116, *((unsigned char *)a2 + 96));
          a1[11] = (uint64_t)v118;
          *((unsigned char *)a1 + 96) = v117;
        }
        id v119 = (id *)(a2 + 13);
        int v120 = *((unsigned __int8 *)a2 + 112);
        if (v120 == 255)
        {
          a1[13] = (uint64_t)*v119;
          *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        }
        else
        {
          id v121 = *v119;
          sub_4C49C(*v119, *((unsigned char *)a2 + 112));
          a1[13] = (uint64_t)v121;
          *((unsigned char *)a1 + 112) = v120;
        }
        id v122 = (id *)(a2 + 15);
        int v123 = *((unsigned __int8 *)a2 + 128);
        if (v123 == 255)
        {
          a1[15] = (uint64_t)*v122;
          *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
        }
        else
        {
          id v124 = *v122;
          sub_4C49C(*v122, *((unsigned char *)a2 + 128));
          a1[15] = (uint64_t)v124;
          *((unsigned char *)a1 + 128) = v123;
        }
        *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
        uint64_t v125 = v12[11];
        id v126 = (char *)a1 + v125;
        id v127 = (char *)a2 + v125;
        uint64_t v128 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16))(v126, v127, v128);
        uint64_t v129 = v12[12];
        id v130 = (uint64_t *)((char *)a1 + v129);
        id v131 = (uint64_t *)((char *)a2 + v129);
        uint64_t v132 = v131[1];
        *id v130 = *v131;
        v130[1] = v132;
        *((unsigned char *)a1 + v12[13]) = *((unsigned char *)a2 + v12[13]);
        *((unsigned char *)a1 + v12[14]) = *((unsigned char *)a2 + v12[14]);
        *((unsigned char *)a1 + v12[15]) = *((unsigned char *)a2 + v12[15]);
        uint64_t v133 = v12[16];
        id v134 = (uint64_t *)((char *)a1 + v133);
        id v135 = (uint64_t *)((char *)a2 + v133);
        uint64_t v136 = v135[1];
        void *v134 = *v135;
        v134[1] = v136;
        uint64_t v137 = *(void (**)(uint64_t *, void, uint64_t, int *))(v13 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v137(a1, 0, 1, v12);
      }
      uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
      *(uint64_t *)((char *)a1 + *(int *)(v138 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v138 + 48));
      swift_retain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      int v8 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v8 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v9 = a2[2];
        uint64_t v10 = a2[3];
        sub_4C484(v9, v10, v8);
        a1[2] = v9;
        a1[3] = v10;
        *((unsigned char *)a1 + 32) = v8;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      uint64_t v19 = (id *)(a2 + 7);
      int v20 = *((unsigned __int8 *)a2 + 64);
      if (v20 == 255)
      {
        a1[7] = (uint64_t)*v19;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      }
      else
      {
        id v21 = *v19;
        sub_4C49C(*v19, *((unsigned char *)a2 + 64));
        a1[7] = (uint64_t)v21;
        *((unsigned char *)a1 + 64) = v20;
      }
      uint64_t v29 = (id *)(a2 + 9);
      int v30 = *((unsigned __int8 *)a2 + 80);
      if (v30 == 255)
      {
        a1[9] = (uint64_t)*v29;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      }
      else
      {
        id v31 = *v29;
        sub_4C49C(*v29, *((unsigned char *)a2 + 80));
        a1[9] = (uint64_t)v31;
        *((unsigned char *)a1 + 80) = v30;
      }
      uint64_t v35 = (id *)(a2 + 11);
      int v36 = *((unsigned __int8 *)a2 + 96);
      if (v36 == 255)
      {
        a1[11] = (uint64_t)*v35;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
      }
      else
      {
        id v37 = *v35;
        sub_4C49C(*v35, *((unsigned char *)a2 + 96));
        a1[11] = (uint64_t)v37;
        *((unsigned char *)a1 + 96) = v36;
      }
      Swift::String v41 = (id *)(a2 + 13);
      int v42 = *((unsigned __int8 *)a2 + 112);
      if (v42 == 255)
      {
        a1[13] = (uint64_t)*v41;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      }
      else
      {
        id v43 = *v41;
        sub_4C49C(*v41, *((unsigned char *)a2 + 112));
        a1[13] = (uint64_t)v43;
        *((unsigned char *)a1 + 112) = v42;
      }
      uint64_t v47 = (id *)(a2 + 15);
      int v48 = *((unsigned __int8 *)a2 + 128);
      if (v48 == 255)
      {
        a1[15] = (uint64_t)*v47;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
      }
      else
      {
        id v49 = *v47;
        sub_4C49C(*v47, *((unsigned char *)a2 + 128));
        a1[15] = (uint64_t)v49;
        *((unsigned char *)a1 + 128) = v48;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v53 = (int *)sub_3D3860();
      uint64_t v54 = v53[11];
      uint64_t v55 = (char *)a1 + v54;
      uint64_t v56 = (char *)a2 + v54;
      uint64_t v57 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
      uint64_t v58 = v53[12];
      uint64_t v59 = (uint64_t *)((char *)a1 + v58);
      uint64_t v60 = (uint64_t *)((char *)a2 + v58);
      uint64_t v61 = v60[1];
      *uint64_t v59 = *v60;
      v59[1] = v61;
      *((unsigned char *)a1 + v53[13]) = *((unsigned char *)a2 + v53[13]);
      *((unsigned char *)a1 + v53[14]) = *((unsigned char *)a2 + v53[14]);
      *((unsigned char *)a1 + v53[15]) = *((unsigned char *)a2 + v53[15]);
      uint64_t v62 = v53[16];
      uint64_t v63 = (uint64_t *)((char *)a1 + v62);
      uint64_t v64 = (uint64_t *)((char *)a2 + v62);
      uint64_t v65 = v64[1];
      void *v63 = *v64;
      v63[1] = v65;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
      *(uint64_t *)((char *)a1 + *(int *)(v66 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v66 + 48));
      swift_retain();
    }
    else
    {
      uint64_t v15 = a2[1];
      *a1 = *a2;
      a1[1] = v15;
      int v16 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v16 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v17 = a2[2];
        uint64_t v18 = a2[3];
        sub_4C484(v17, v18, v16);
        a1[2] = v17;
        a1[3] = v18;
        *((unsigned char *)a1 + 32) = v16;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      uint64_t v26 = (id *)(a2 + 7);
      int v27 = *((unsigned __int8 *)a2 + 64);
      if (v27 == 255)
      {
        a1[7] = (uint64_t)*v26;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      }
      else
      {
        id v28 = *v26;
        sub_4C49C(*v26, *((unsigned char *)a2 + 64));
        a1[7] = (uint64_t)v28;
        *((unsigned char *)a1 + 64) = v27;
      }
      uint64_t v32 = (id *)(a2 + 9);
      int v33 = *((unsigned __int8 *)a2 + 80);
      if (v33 == 255)
      {
        a1[9] = (uint64_t)*v32;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      }
      else
      {
        id v34 = *v32;
        sub_4C49C(*v32, *((unsigned char *)a2 + 80));
        a1[9] = (uint64_t)v34;
        *((unsigned char *)a1 + 80) = v33;
      }
      uint64_t v38 = (id *)(a2 + 11);
      int v39 = *((unsigned __int8 *)a2 + 96);
      if (v39 == 255)
      {
        a1[11] = (uint64_t)*v38;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
      }
      else
      {
        id v40 = *v38;
        sub_4C49C(*v38, *((unsigned char *)a2 + 96));
        a1[11] = (uint64_t)v40;
        *((unsigned char *)a1 + 96) = v39;
      }
      uint64_t v44 = (id *)(a2 + 13);
      int v45 = *((unsigned __int8 *)a2 + 112);
      if (v45 == 255)
      {
        a1[13] = (uint64_t)*v44;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      }
      else
      {
        id v46 = *v44;
        sub_4C49C(*v44, *((unsigned char *)a2 + 112));
        a1[13] = (uint64_t)v46;
        *((unsigned char *)a1 + 112) = v45;
      }
      uint64_t v50 = (id *)(a2 + 15);
      int v51 = *((unsigned __int8 *)a2 + 128);
      if (v51 == 255)
      {
        a1[15] = (uint64_t)*v50;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
      }
      else
      {
        id v52 = *v50;
        sub_4C49C(*v50, *((unsigned char *)a2 + 128));
        a1[15] = (uint64_t)v52;
        *((unsigned char *)a1 + 128) = v51;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v67 = (int *)sub_3D3860();
      uint64_t v68 = v67[11];
      uint64_t v69 = (char *)a1 + v68;
      id v70 = (char *)a2 + v68;
      uint64_t v71 = sub_3D3750();
      uint64_t v141 = *(void (**)(char *, char *, uint64_t))(*(void *)(v71 - 8) + 16);
      v141(v69, v70, v71);
      uint64_t v72 = v67[12];
      uint64_t v73 = (uint64_t *)((char *)a1 + v72);
      uint64_t v74 = (uint64_t *)((char *)a2 + v72);
      uint64_t v75 = v74[1];
      *uint64_t v73 = *v74;
      v73[1] = v75;
      *((unsigned char *)a1 + v67[13]) = *((unsigned char *)a2 + v67[13]);
      *((unsigned char *)a1 + v67[14]) = *((unsigned char *)a2 + v67[14]);
      *((unsigned char *)a1 + v67[15]) = *((unsigned char *)a2 + v67[15]);
      uint64_t v76 = v67[16];
      Swift::String v77 = (uint64_t *)((char *)a1 + v76);
      Swift::String_optional v78 = (uint64_t *)((char *)a2 + v76);
      uint64_t v79 = v78[1];
      *Swift::String v77 = *v78;
      v77[1] = v79;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
      uint64_t v80 = *(int *)(v140 + 48);
      int v81 = (char *)a1 + v80;
      uint64_t v82 = (char *)a2 + v80;
      uint64_t v83 = *(uint64_t *)((char *)a2 + v80 + 8);
      *(void *)int v81 = *(uint64_t *)((char *)a2 + v80);
      *((void *)v81 + 1) = v83;
      int v84 = *((unsigned __int8 *)a2 + v80 + 32);
      swift_bridgeObjectRetain();
      if (v84 == 255)
      {
        *((_OWORD *)v81 + 1) = *((_OWORD *)v82 + 1);
        v81[32] = v82[32];
      }
      else
      {
        uint64_t v85 = *((void *)v82 + 2);
        uint64_t v86 = *((void *)v82 + 3);
        sub_4C484(v85, v86, v84);
        *((void *)v81 + 2) = v85;
        *((void *)v81 + 3) = v86;
        v81[32] = v84;
      }
      *(_OWORD *)(v81 + 40) = *(_OWORD *)(v82 + 40);
      uint64_t v87 = (id *)(v82 + 56);
      int v88 = v82[64];
      if (v88 == 255)
      {
        *((void *)v81 + 7) = *v87;
        v81[64] = v82[64];
      }
      else
      {
        id v89 = *v87;
        sub_4C49C(*v87, v82[64]);
        *((void *)v81 + 7) = v89;
        v81[64] = v88;
      }
      int v90 = (id *)(v82 + 72);
      int v91 = v82[80];
      if (v91 == 255)
      {
        *((void *)v81 + 9) = *v90;
        v81[80] = v82[80];
      }
      else
      {
        id v92 = *v90;
        sub_4C49C(*v90, v82[80]);
        *((void *)v81 + 9) = v92;
        v81[80] = v91;
      }
      int v93 = (id *)(v82 + 88);
      int v94 = v82[96];
      if (v94 == 255)
      {
        *((void *)v81 + 11) = *v93;
        v81[96] = v82[96];
      }
      else
      {
        id v95 = *v93;
        sub_4C49C(*v93, v82[96]);
        *((void *)v81 + 11) = v95;
        v81[96] = v94;
      }
      id v96 = (id *)(v82 + 104);
      int v97 = v82[112];
      if (v97 == 255)
      {
        *((void *)v81 + 13) = *v96;
        v81[112] = v82[112];
      }
      else
      {
        id v98 = *v96;
        sub_4C49C(*v96, v82[112]);
        *((void *)v81 + 13) = v98;
        v81[112] = v97;
      }
      id v99 = (id *)(v82 + 120);
      int v100 = v82[128];
      if (v100 == 255)
      {
        *((void *)v81 + 15) = *v99;
        v81[128] = v82[128];
      }
      else
      {
        id v101 = *v99;
        sub_4C49C(*v99, v82[128]);
        *((void *)v81 + 15) = v101;
        v81[128] = v100;
      }
      v81[129] = v82[129];
      v141(&v81[v67[11]], &v82[v67[11]], v71);
      uint64_t v102 = v67[12];
      id v103 = &v81[v102];
      id v104 = &v82[v102];
      uint64_t v105 = *((void *)v104 + 1);
      *(void *)id v103 = *(void *)v104;
      *((void *)v103 + 1) = v105;
      v81[v67[13]] = v82[v67[13]];
      v81[v67[14]] = v82[v67[14]];
      v81[v67[15]] = v82[v67[15]];
      uint64_t v106 = v67[16];
      id v107 = &v81[v106];
      id v108 = &v82[v106];
      uint64_t v109 = *((void *)v108 + 1);
      *(void *)id v107 = *(void *)v108;
      *((void *)v107 + 1) = v109;
      *(uint64_t *)((char *)a1 + *(int *)(v140 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v140 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for HeroBackgroundVariant(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
    uint64_t v20 = sub_3D3860();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 48))(a1, 1, v20))
    {
      swift_bridgeObjectRelease();
      int v21 = *(unsigned __int8 *)(a1 + 32);
      if (v21 != 255) {
        sub_49E54(*(void *)(a1 + 16), *(void *)(a1 + 24), v21);
      }
      int v22 = *(unsigned __int8 *)(a1 + 64);
      if (v22 != 255) {
        sub_4C6F0(*(id *)(a1 + 56), v22);
      }
      int v23 = *(unsigned __int8 *)(a1 + 80);
      if (v23 != 255) {
        sub_4C6F0(*(id *)(a1 + 72), v23);
      }
      int v24 = *(unsigned __int8 *)(a1 + 96);
      if (v24 != 255) {
        sub_4C6F0(*(id *)(a1 + 88), v24);
      }
      int v25 = *(unsigned __int8 *)(a1 + 112);
      if (v25 != 255) {
        sub_4C6F0(*(id *)(a1 + 104), v25);
      }
      int v26 = *(unsigned __int8 *)(a1 + 128);
      if (v26 != 255) {
        sub_4C6F0(*(id *)(a1 + 120), v26);
      }
      uint64_t v27 = a1 + *(int *)(v20 + 44);
      uint64_t v28 = sub_3D3750();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v29 = qword_4BEDA8;
    goto LABEL_57;
  }
  if (result == 1)
  {
    swift_bridgeObjectRelease();
    int v30 = *(unsigned __int8 *)(a1 + 32);
    if (v30 != 255) {
      sub_49E54(*(void *)(a1 + 16), *(void *)(a1 + 24), v30);
    }
    int v31 = *(unsigned __int8 *)(a1 + 64);
    if (v31 != 255) {
      sub_4C6F0(*(id *)(a1 + 56), v31);
    }
    int v32 = *(unsigned __int8 *)(a1 + 80);
    if (v32 != 255) {
      sub_4C6F0(*(id *)(a1 + 72), v32);
    }
    int v33 = *(unsigned __int8 *)(a1 + 96);
    if (v33 != 255) {
      sub_4C6F0(*(id *)(a1 + 88), v33);
    }
    int v34 = *(unsigned __int8 *)(a1 + 112);
    if (v34 != 255) {
      sub_4C6F0(*(id *)(a1 + 104), v34);
    }
    int v35 = *(unsigned __int8 *)(a1 + 128);
    if (v35 != 255) {
      sub_4C6F0(*(id *)(a1 + 120), v35);
    }
    uint64_t v36 = a1 + *(int *)(sub_3D3860() + 44);
    uint64_t v37 = sub_3D3750();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v37 - 8) + 8))(v36, v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v29 = &qword_4BEDA0;
LABEL_57:
    __swift_instantiateConcreteTypeFromMangledName(v29);
    goto LABEL_58;
  }
  if (result) {
    return result;
  }
  swift_bridgeObjectRelease();
  int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 != 255) {
    sub_49E54(*(void *)(a1 + 16), *(void *)(a1 + 24), v3);
  }
  int v4 = *(unsigned __int8 *)(a1 + 64);
  if (v4 != 255) {
    sub_4C6F0(*(id *)(a1 + 56), v4);
  }
  int v5 = *(unsigned __int8 *)(a1 + 80);
  if (v5 != 255) {
    sub_4C6F0(*(id *)(a1 + 72), v5);
  }
  int v6 = *(unsigned __int8 *)(a1 + 96);
  if (v6 != 255) {
    sub_4C6F0(*(id *)(a1 + 88), v6);
  }
  int v7 = *(unsigned __int8 *)(a1 + 112);
  if (v7 != 255) {
    sub_4C6F0(*(id *)(a1 + 104), v7);
  }
  int v8 = *(unsigned __int8 *)(a1 + 128);
  if (v8 != 255) {
    sub_4C6F0(*(id *)(a1 + 120), v8);
  }
  uint64_t v9 = sub_3D3860();
  uint64_t v10 = a1 + *(int *)(v9 + 44);
  uint64_t v11 = sub_3D3750();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BED98) + 48);
  swift_bridgeObjectRelease();
  int v14 = *(unsigned __int8 *)(v13 + 32);
  if (v14 != 255) {
    sub_49E54(*(void *)(v13 + 16), *(void *)(v13 + 24), v14);
  }
  int v15 = *(unsigned __int8 *)(v13 + 64);
  if (v15 != 255) {
    sub_4C6F0(*(id *)(v13 + 56), v15);
  }
  int v16 = *(unsigned __int8 *)(v13 + 80);
  if (v16 != 255) {
    sub_4C6F0(*(id *)(v13 + 72), v16);
  }
  int v17 = *(unsigned __int8 *)(v13 + 96);
  if (v17 != 255) {
    sub_4C6F0(*(id *)(v13 + 88), v17);
  }
  int v18 = *(unsigned __int8 *)(v13 + 112);
  if (v18 != 255) {
    sub_4C6F0(*(id *)(v13 + 104), v18);
  }
  int v19 = *(unsigned __int8 *)(v13 + 128);
  if (v19 != 255) {
    sub_4C6F0(*(id *)(v13 + 120), v19);
  }
  v12(v13 + *(int *)(v9 + 44), v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_58:

  return swift_release();
}

void *initializeWithCopy for HeroBackgroundVariant(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v9 = (int *)sub_3D3860();
    uint64_t v10 = *((void *)v9 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v10 + 48))(a2, 1, v9))
    {
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
      memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      uint64_t v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      int v20 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v20 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v21 = a2[2];
        uint64_t v22 = a2[3];
        sub_4C484(v21, v22, v20);
        a1[2] = v21;
        a1[3] = v22;
        *((unsigned char *)a1 + 32) = v20;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      id v107 = (id *)(a2 + 7);
      int v108 = *((unsigned __int8 *)a2 + 64);
      if (v108 == 255)
      {
        a1[7] = *v107;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      }
      else
      {
        id v109 = *v107;
        sub_4C49C(*v107, *((unsigned char *)a2 + 64));
        a1[7] = v109;
        *((unsigned char *)a1 + 64) = v108;
      }
      int v110 = (id *)(a2 + 9);
      int v111 = *((unsigned __int8 *)a2 + 80);
      if (v111 == 255)
      {
        a1[9] = *v110;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      }
      else
      {
        id v112 = *v110;
        sub_4C49C(*v110, *((unsigned char *)a2 + 80));
        a1[9] = v112;
        *((unsigned char *)a1 + 80) = v111;
      }
      int v113 = (id *)(a2 + 11);
      int v114 = *((unsigned __int8 *)a2 + 96);
      if (v114 == 255)
      {
        a1[11] = *v113;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
      }
      else
      {
        id v115 = *v113;
        sub_4C49C(*v113, *((unsigned char *)a2 + 96));
        a1[11] = v115;
        *((unsigned char *)a1 + 96) = v114;
      }
      int v116 = (id *)(a2 + 13);
      int v117 = *((unsigned __int8 *)a2 + 112);
      if (v117 == 255)
      {
        a1[13] = *v116;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      }
      else
      {
        id v118 = *v116;
        sub_4C49C(*v116, *((unsigned char *)a2 + 112));
        a1[13] = v118;
        *((unsigned char *)a1 + 112) = v117;
      }
      id v119 = (id *)(a2 + 15);
      int v120 = *((unsigned __int8 *)a2 + 128);
      if (v120 == 255)
      {
        a1[15] = *v119;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
      }
      else
      {
        id v121 = *v119;
        sub_4C49C(*v119, *((unsigned char *)a2 + 128));
        a1[15] = v121;
        *((unsigned char *)a1 + 128) = v120;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v122 = v9[11];
      int v123 = (char *)a1 + v122;
      id v124 = (char *)a2 + v122;
      uint64_t v125 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v125 - 8) + 16))(v123, v124, v125);
      uint64_t v126 = v9[12];
      id v127 = (void *)((char *)a1 + v126);
      uint64_t v128 = (void *)((char *)a2 + v126);
      uint64_t v129 = v128[1];
      *id v127 = *v128;
      v127[1] = v129;
      *((unsigned char *)a1 + v9[13]) = *((unsigned char *)a2 + v9[13]);
      *((unsigned char *)a1 + v9[14]) = *((unsigned char *)a2 + v9[14]);
      *((unsigned char *)a1 + v9[15]) = *((unsigned char *)a2 + v9[15]);
      uint64_t v130 = v9[16];
      id v131 = (void *)((char *)a1 + v130);
      uint64_t v132 = (void *)((char *)a2 + v130);
      uint64_t v133 = v132[1];
      *id v131 = *v132;
      v131[1] = v133;
      id v134 = *(void (**)(void *, void, uint64_t, int *))(v10 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v134(a1, 0, 1, v9);
    }
    uint64_t v135 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
    *(void *)((char *)a1 + *(int *)(v135 + 48)) = *(void *)((char *)a2 + *(int *)(v135 + 48));
    swift_retain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    int v6 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v6 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    }
    else
    {
      uint64_t v7 = a2[2];
      uint64_t v8 = a2[3];
      sub_4C484(v7, v8, v6);
      a1[2] = v7;
      a1[3] = v8;
      *((unsigned char *)a1 + 32) = v6;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    int v16 = (id *)(a2 + 7);
    int v17 = *((unsigned __int8 *)a2 + 64);
    if (v17 == 255)
    {
      a1[7] = *v16;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    }
    else
    {
      id v18 = *v16;
      sub_4C49C(*v16, *((unsigned char *)a2 + 64));
      a1[7] = v18;
      *((unsigned char *)a1 + 64) = v17;
    }
    int v26 = (id *)(a2 + 9);
    int v27 = *((unsigned __int8 *)a2 + 80);
    if (v27 == 255)
    {
      a1[9] = *v26;
      *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    }
    else
    {
      id v28 = *v26;
      sub_4C49C(*v26, *((unsigned char *)a2 + 80));
      a1[9] = v28;
      *((unsigned char *)a1 + 80) = v27;
    }
    int v32 = (id *)(a2 + 11);
    int v33 = *((unsigned __int8 *)a2 + 96);
    if (v33 == 255)
    {
      a1[11] = *v32;
      *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
    }
    else
    {
      id v34 = *v32;
      sub_4C49C(*v32, *((unsigned char *)a2 + 96));
      a1[11] = v34;
      *((unsigned char *)a1 + 96) = v33;
    }
    uint64_t v38 = (id *)(a2 + 13);
    int v39 = *((unsigned __int8 *)a2 + 112);
    if (v39 == 255)
    {
      a1[13] = *v38;
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
    }
    else
    {
      id v40 = *v38;
      sub_4C49C(*v38, *((unsigned char *)a2 + 112));
      a1[13] = v40;
      *((unsigned char *)a1 + 112) = v39;
    }
    uint64_t v44 = (id *)(a2 + 15);
    int v45 = *((unsigned __int8 *)a2 + 128);
    if (v45 == 255)
    {
      a1[15] = *v44;
      *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
    }
    else
    {
      id v46 = *v44;
      sub_4C49C(*v44, *((unsigned char *)a2 + 128));
      a1[15] = v46;
      *((unsigned char *)a1 + 128) = v45;
    }
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v50 = (int *)sub_3D3860();
    uint64_t v51 = v50[11];
    id v52 = (char *)a1 + v51;
    uint64_t v53 = (char *)a2 + v51;
    uint64_t v54 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
    uint64_t v55 = v50[12];
    uint64_t v56 = (void *)((char *)a1 + v55);
    uint64_t v57 = (void *)((char *)a2 + v55);
    uint64_t v58 = v57[1];
    *uint64_t v56 = *v57;
    v56[1] = v58;
    *((unsigned char *)a1 + v50[13]) = *((unsigned char *)a2 + v50[13]);
    *((unsigned char *)a1 + v50[14]) = *((unsigned char *)a2 + v50[14]);
    *((unsigned char *)a1 + v50[15]) = *((unsigned char *)a2 + v50[15]);
    uint64_t v59 = v50[16];
    uint64_t v60 = (void *)((char *)a1 + v59);
    uint64_t v61 = (void *)((char *)a2 + v59);
    uint64_t v62 = v61[1];
    *uint64_t v60 = *v61;
    v60[1] = v62;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
    *(void *)((char *)a1 + *(int *)(v63 + 48)) = *(void *)((char *)a2 + *(int *)(v63 + 48));
    swift_retain();
  }
  else
  {
    uint64_t v12 = a2[1];
    *a1 = *a2;
    a1[1] = v12;
    int v13 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v13 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    }
    else
    {
      uint64_t v14 = a2[2];
      uint64_t v15 = a2[3];
      sub_4C484(v14, v15, v13);
      a1[2] = v14;
      a1[3] = v15;
      *((unsigned char *)a1 + 32) = v13;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    int v23 = (id *)(a2 + 7);
    int v24 = *((unsigned __int8 *)a2 + 64);
    if (v24 == 255)
    {
      a1[7] = *v23;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    }
    else
    {
      id v25 = *v23;
      sub_4C49C(*v23, *((unsigned char *)a2 + 64));
      a1[7] = v25;
      *((unsigned char *)a1 + 64) = v24;
    }
    uint64_t v29 = (id *)(a2 + 9);
    int v30 = *((unsigned __int8 *)a2 + 80);
    if (v30 == 255)
    {
      a1[9] = *v29;
      *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    }
    else
    {
      id v31 = *v29;
      sub_4C49C(*v29, *((unsigned char *)a2 + 80));
      a1[9] = v31;
      *((unsigned char *)a1 + 80) = v30;
    }
    int v35 = (id *)(a2 + 11);
    int v36 = *((unsigned __int8 *)a2 + 96);
    if (v36 == 255)
    {
      a1[11] = *v35;
      *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
    }
    else
    {
      id v37 = *v35;
      sub_4C49C(*v35, *((unsigned char *)a2 + 96));
      a1[11] = v37;
      *((unsigned char *)a1 + 96) = v36;
    }
    Swift::String v41 = (id *)(a2 + 13);
    int v42 = *((unsigned __int8 *)a2 + 112);
    if (v42 == 255)
    {
      a1[13] = *v41;
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
    }
    else
    {
      id v43 = *v41;
      sub_4C49C(*v41, *((unsigned char *)a2 + 112));
      a1[13] = v43;
      *((unsigned char *)a1 + 112) = v42;
    }
    uint64_t v47 = (id *)(a2 + 15);
    int v48 = *((unsigned __int8 *)a2 + 128);
    if (v48 == 255)
    {
      a1[15] = *v47;
      *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
    }
    else
    {
      id v49 = *v47;
      sub_4C49C(*v47, *((unsigned char *)a2 + 128));
      a1[15] = v49;
      *((unsigned char *)a1 + 128) = v48;
    }
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v64 = (int *)sub_3D3860();
    uint64_t v65 = v64[11];
    uint64_t v66 = (char *)a1 + v65;
    uint64_t v67 = (char *)a2 + v65;
    uint64_t v68 = sub_3D3750();
    uint64_t v138 = *(void (**)(char *, char *, uint64_t))(*(void *)(v68 - 8) + 16);
    v138(v66, v67, v68);
    uint64_t v69 = v64[12];
    id v70 = (void *)((char *)a1 + v69);
    uint64_t v71 = (void *)((char *)a2 + v69);
    uint64_t v72 = v71[1];
    *id v70 = *v71;
    v70[1] = v72;
    *((unsigned char *)a1 + v64[13]) = *((unsigned char *)a2 + v64[13]);
    *((unsigned char *)a1 + v64[14]) = *((unsigned char *)a2 + v64[14]);
    *((unsigned char *)a1 + v64[15]) = *((unsigned char *)a2 + v64[15]);
    uint64_t v73 = v64[16];
    uint64_t v74 = (void *)((char *)a1 + v73);
    uint64_t v75 = (void *)((char *)a2 + v73);
    uint64_t v76 = v75[1];
    *uint64_t v74 = *v75;
    v74[1] = v76;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
    uint64_t v77 = *(int *)(v137 + 48);
    Swift::String_optional v78 = (char *)a1 + v77;
    uint64_t v79 = (char *)a2 + v77;
    uint64_t v80 = *(void *)((char *)a2 + v77 + 8);
    *(void *)Swift::String_optional v78 = *(void *)((char *)a2 + v77);
    *((void *)v78 + 1) = v80;
    int v81 = *((unsigned __int8 *)a2 + v77 + 32);
    swift_bridgeObjectRetain();
    if (v81 == 255)
    {
      *((_OWORD *)v78 + 1) = *((_OWORD *)v79 + 1);
      v78[32] = v79[32];
    }
    else
    {
      uint64_t v82 = *((void *)v79 + 2);
      uint64_t v83 = *((void *)v79 + 3);
      sub_4C484(v82, v83, v81);
      *((void *)v78 + 2) = v82;
      *((void *)v78 + 3) = v83;
      v78[32] = v81;
    }
    *(_OWORD *)(v78 + 40) = *(_OWORD *)(v79 + 40);
    int v84 = (id *)(v79 + 56);
    int v85 = v79[64];
    if (v85 == 255)
    {
      *((void *)v78 + 7) = *v84;
      v78[64] = v79[64];
    }
    else
    {
      id v86 = *v84;
      sub_4C49C(*v84, v79[64]);
      *((void *)v78 + 7) = v86;
      v78[64] = v85;
    }
    uint64_t v87 = (id *)(v79 + 72);
    int v88 = v79[80];
    if (v88 == 255)
    {
      *((void *)v78 + 9) = *v87;
      v78[80] = v79[80];
    }
    else
    {
      id v89 = *v87;
      sub_4C49C(*v87, v79[80]);
      *((void *)v78 + 9) = v89;
      v78[80] = v88;
    }
    int v90 = (id *)(v79 + 88);
    int v91 = v79[96];
    if (v91 == 255)
    {
      *((void *)v78 + 11) = *v90;
      v78[96] = v79[96];
    }
    else
    {
      id v92 = *v90;
      sub_4C49C(*v90, v79[96]);
      *((void *)v78 + 11) = v92;
      v78[96] = v91;
    }
    int v93 = (id *)(v79 + 104);
    int v94 = v79[112];
    if (v94 == 255)
    {
      *((void *)v78 + 13) = *v93;
      v78[112] = v79[112];
    }
    else
    {
      id v95 = *v93;
      sub_4C49C(*v93, v79[112]);
      *((void *)v78 + 13) = v95;
      v78[112] = v94;
    }
    id v96 = (id *)(v79 + 120);
    int v97 = v79[128];
    if (v97 == 255)
    {
      *((void *)v78 + 15) = *v96;
      v78[128] = v79[128];
    }
    else
    {
      id v98 = *v96;
      sub_4C49C(*v96, v79[128]);
      *((void *)v78 + 15) = v98;
      v78[128] = v97;
    }
    v78[129] = v79[129];
    v138(&v78[v64[11]], &v79[v64[11]], v68);
    uint64_t v99 = v64[12];
    int v100 = &v78[v99];
    id v101 = &v79[v99];
    uint64_t v102 = *((void *)v101 + 1);
    *(void *)int v100 = *(void *)v101;
    *((void *)v100 + 1) = v102;
    v78[v64[13]] = v79[v64[13]];
    v78[v64[14]] = v79[v64[14]];
    v78[v64[15]] = v79[v64[15]];
    uint64_t v103 = v64[16];
    id v104 = &v78[v103];
    uint64_t v105 = &v79[v103];
    uint64_t v106 = *((void *)v105 + 1);
    *(void *)id v104 = *(void *)v105;
    *((void *)v104 + 1) = v106;
    *(void *)((char *)a1 + *(int *)(v137 + 64)) = *(void *)((char *)a2 + *(int *)(v137 + 64));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for HeroBackgroundVariant(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_35596C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = (int *)sub_3D3860();
      uint64_t v9 = *((void *)v8 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        int v18 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v18 == 255)
        {
          long long v115 = *((_OWORD *)a2 + 1);
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          *((_OWORD *)a1 + 1) = v115;
        }
        else
        {
          uint64_t v19 = a2[2];
          uint64_t v20 = a2[3];
          sub_4C484(v19, v20, v18);
          a1[2] = v19;
          a1[3] = v20;
          *((unsigned char *)a1 + 32) = v18;
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        int v116 = (id *)(a2 + 7);
        int v117 = *((unsigned __int8 *)a2 + 64);
        if (v117 == 255)
        {
          id v119 = *v116;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          a1[7] = v119;
        }
        else
        {
          id v118 = *v116;
          sub_4C49C(*v116, *((unsigned char *)a2 + 64));
          a1[7] = v118;
          *((unsigned char *)a1 + 64) = v117;
        }
        int v120 = (id *)(a2 + 9);
        int v121 = *((unsigned __int8 *)a2 + 80);
        if (v121 == 255)
        {
          id v123 = *v120;
          *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
          a1[9] = v123;
        }
        else
        {
          id v122 = *v120;
          sub_4C49C(*v120, *((unsigned char *)a2 + 80));
          a1[9] = v122;
          *((unsigned char *)a1 + 80) = v121;
        }
        id v124 = (id *)(a2 + 11);
        int v125 = *((unsigned __int8 *)a2 + 96);
        if (v125 == 255)
        {
          id v127 = *v124;
          *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
          a1[11] = v127;
        }
        else
        {
          id v126 = *v124;
          sub_4C49C(*v124, *((unsigned char *)a2 + 96));
          a1[11] = v126;
          *((unsigned char *)a1 + 96) = v125;
        }
        uint64_t v128 = (id *)(a2 + 13);
        int v129 = *((unsigned __int8 *)a2 + 112);
        if (v129 == 255)
        {
          id v131 = *v128;
          *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
          a1[13] = v131;
        }
        else
        {
          id v130 = *v128;
          sub_4C49C(*v128, *((unsigned char *)a2 + 112));
          a1[13] = v130;
          *((unsigned char *)a1 + 112) = v129;
        }
        uint64_t v132 = (id *)(a2 + 15);
        int v133 = *((unsigned __int8 *)a2 + 128);
        if (v133 == 255)
        {
          id v135 = *v132;
          *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
          a1[15] = v135;
        }
        else
        {
          id v134 = *v132;
          sub_4C49C(*v132, *((unsigned char *)a2 + 128));
          a1[15] = v134;
          *((unsigned char *)a1 + 128) = v133;
        }
        *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
        uint64_t v136 = v8[11];
        uint64_t v137 = (char *)a1 + v136;
        uint64_t v138 = (char *)a2 + v136;
        uint64_t v139 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16))(v137, v138, v139);
        uint64_t v140 = v8[12];
        uint64_t v141 = (void *)((char *)a1 + v140);
        uint64_t v142 = (void *)((char *)a2 + v140);
        *uint64_t v141 = *v142;
        v141[1] = v142[1];
        *((unsigned char *)a1 + v8[13]) = *((unsigned char *)a2 + v8[13]);
        *((unsigned char *)a1 + v8[14]) = *((unsigned char *)a2 + v8[14]);
        *((unsigned char *)a1 + v8[15]) = *((unsigned char *)a2 + v8[15]);
        uint64_t v143 = v8[16];
        uint64_t v144 = (void *)((char *)a1 + v143);
        uint64_t v145 = (void *)((char *)a2 + v143);
        *uint64_t v144 = *v145;
        v144[1] = v145[1];
        uint64_t v146 = *(void (**)(void *, void, uint64_t, int *))(v9 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v146(a1, 0, 1, v8);
      }
      uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
      *(void *)((char *)a1 + *(int *)(v147 + 48)) = *(void *)((char *)a2 + *(int *)(v147 + 48));
      swift_retain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      int v5 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v5 == 255)
      {
        long long v14 = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        *((_OWORD *)a1 + 1) = v14;
      }
      else
      {
        uint64_t v6 = a2[2];
        uint64_t v7 = a2[3];
        sub_4C484(v6, v7, v5);
        a1[2] = v6;
        a1[3] = v7;
        *((unsigned char *)a1 + 32) = v5;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      uint64_t v15 = (id *)(a2 + 7);
      int v16 = *((unsigned __int8 *)a2 + 64);
      if (v16 == 255)
      {
        id v25 = *v15;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        a1[7] = v25;
      }
      else
      {
        id v17 = *v15;
        sub_4C49C(*v15, *((unsigned char *)a2 + 64));
        a1[7] = v17;
        *((unsigned char *)a1 + 64) = v16;
      }
      int v26 = (id *)(a2 + 9);
      int v27 = *((unsigned __int8 *)a2 + 80);
      if (v27 == 255)
      {
        id v33 = *v26;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
        a1[9] = v33;
      }
      else
      {
        id v28 = *v26;
        sub_4C49C(*v26, *((unsigned char *)a2 + 80));
        a1[9] = v28;
        *((unsigned char *)a1 + 80) = v27;
      }
      id v34 = (id *)(a2 + 11);
      int v35 = *((unsigned __int8 *)a2 + 96);
      if (v35 == 255)
      {
        id v41 = *v34;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
        a1[11] = v41;
      }
      else
      {
        id v36 = *v34;
        sub_4C49C(*v34, *((unsigned char *)a2 + 96));
        a1[11] = v36;
        *((unsigned char *)a1 + 96) = v35;
      }
      int v42 = (id *)(a2 + 13);
      int v43 = *((unsigned __int8 *)a2 + 112);
      if (v43 == 255)
      {
        id v49 = *v42;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        a1[13] = v49;
      }
      else
      {
        id v44 = *v42;
        sub_4C49C(*v42, *((unsigned char *)a2 + 112));
        a1[13] = v44;
        *((unsigned char *)a1 + 112) = v43;
      }
      uint64_t v50 = (id *)(a2 + 15);
      int v51 = *((unsigned __int8 *)a2 + 128);
      if (v51 == 255)
      {
        id v57 = *v50;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
        a1[15] = v57;
      }
      else
      {
        id v52 = *v50;
        sub_4C49C(*v50, *((unsigned char *)a2 + 128));
        a1[15] = v52;
        *((unsigned char *)a1 + 128) = v51;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v58 = (int *)sub_3D3860();
      uint64_t v59 = v58[11];
      uint64_t v60 = (char *)a1 + v59;
      uint64_t v61 = (char *)a2 + v59;
      uint64_t v62 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
      uint64_t v63 = v58[12];
      uint64_t v64 = (void *)((char *)a1 + v63);
      uint64_t v65 = (void *)((char *)a2 + v63);
      void *v64 = *v65;
      v64[1] = v65[1];
      *((unsigned char *)a1 + v58[13]) = *((unsigned char *)a2 + v58[13]);
      *((unsigned char *)a1 + v58[14]) = *((unsigned char *)a2 + v58[14]);
      *((unsigned char *)a1 + v58[15]) = *((unsigned char *)a2 + v58[15]);
      uint64_t v66 = v58[16];
      uint64_t v67 = (void *)((char *)a1 + v66);
      uint64_t v68 = (void *)((char *)a2 + v66);
      *uint64_t v67 = *v68;
      v67[1] = v68[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
      *(void *)((char *)a1 + *(int *)(v69 + 48)) = *(void *)((char *)a2 + *(int *)(v69 + 48));
      swift_retain();
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      int v11 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v11 == 255)
      {
        long long v21 = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        *((_OWORD *)a1 + 1) = v21;
      }
      else
      {
        uint64_t v12 = a2[2];
        uint64_t v13 = a2[3];
        sub_4C484(v12, v13, v11);
        a1[2] = v12;
        a1[3] = v13;
        *((unsigned char *)a1 + 32) = v11;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      uint64_t v22 = (id *)(a2 + 7);
      int v23 = *((unsigned __int8 *)a2 + 64);
      if (v23 == 255)
      {
        id v29 = *v22;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        a1[7] = v29;
      }
      else
      {
        id v24 = *v22;
        sub_4C49C(*v22, *((unsigned char *)a2 + 64));
        a1[7] = v24;
        *((unsigned char *)a1 + 64) = v23;
      }
      int v30 = (id *)(a2 + 9);
      int v31 = *((unsigned __int8 *)a2 + 80);
      if (v31 == 255)
      {
        id v37 = *v30;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
        a1[9] = v37;
      }
      else
      {
        id v32 = *v30;
        sub_4C49C(*v30, *((unsigned char *)a2 + 80));
        a1[9] = v32;
        *((unsigned char *)a1 + 80) = v31;
      }
      uint64_t v38 = (id *)(a2 + 11);
      int v39 = *((unsigned __int8 *)a2 + 96);
      if (v39 == 255)
      {
        id v45 = *v38;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
        a1[11] = v45;
      }
      else
      {
        id v40 = *v38;
        sub_4C49C(*v38, *((unsigned char *)a2 + 96));
        a1[11] = v40;
        *((unsigned char *)a1 + 96) = v39;
      }
      id v46 = (id *)(a2 + 13);
      int v47 = *((unsigned __int8 *)a2 + 112);
      if (v47 == 255)
      {
        id v53 = *v46;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        a1[13] = v53;
      }
      else
      {
        id v48 = *v46;
        sub_4C49C(*v46, *((unsigned char *)a2 + 112));
        a1[13] = v48;
        *((unsigned char *)a1 + 112) = v47;
      }
      uint64_t v54 = (id *)(a2 + 15);
      int v55 = *((unsigned __int8 *)a2 + 128);
      if (v55 == 255)
      {
        id v70 = *v54;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
        a1[15] = v70;
      }
      else
      {
        id v56 = *v54;
        sub_4C49C(*v54, *((unsigned char *)a2 + 128));
        a1[15] = v56;
        *((unsigned char *)a1 + 128) = v55;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v71 = (int *)sub_3D3860();
      uint64_t v72 = v71[11];
      uint64_t v73 = (char *)a1 + v72;
      uint64_t v74 = (char *)a2 + v72;
      uint64_t v75 = sub_3D3750();
      uint64_t v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
      v150(v73, v74, v75);
      uint64_t v76 = v71[12];
      uint64_t v77 = (void *)((char *)a1 + v76);
      Swift::String_optional v78 = (void *)((char *)a2 + v76);
      *uint64_t v77 = *v78;
      v77[1] = v78[1];
      *((unsigned char *)a1 + v71[13]) = *((unsigned char *)a2 + v71[13]);
      *((unsigned char *)a1 + v71[14]) = *((unsigned char *)a2 + v71[14]);
      *((unsigned char *)a1 + v71[15]) = *((unsigned char *)a2 + v71[15]);
      uint64_t v79 = v71[16];
      uint64_t v80 = (void *)((char *)a1 + v79);
      int v81 = (void *)((char *)a2 + v79);
      void *v80 = *v81;
      v80[1] = v81[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
      uint64_t v82 = *(int *)(v149 + 48);
      uint64_t v83 = (char *)a1 + v82;
      int v84 = (char *)a2 + v82;
      *(void *)uint64_t v83 = *(void *)((char *)a2 + v82);
      *((void *)v83 + 1) = *(void *)((char *)a2 + v82 + 8);
      int v85 = *((unsigned __int8 *)a2 + v82 + 32);
      swift_bridgeObjectRetain();
      if (v85 == 255)
      {
        long long v88 = *((_OWORD *)v84 + 1);
        v83[32] = v84[32];
        *((_OWORD *)v83 + 1) = v88;
      }
      else
      {
        uint64_t v86 = *((void *)v84 + 2);
        uint64_t v87 = *((void *)v84 + 3);
        sub_4C484(v86, v87, v85);
        *((void *)v83 + 2) = v86;
        *((void *)v83 + 3) = v87;
        v83[32] = v85;
      }
      *((void *)v83 + 5) = *((void *)v84 + 5);
      *((void *)v83 + 6) = *((void *)v84 + 6);
      id v89 = (id *)(v84 + 56);
      int v90 = v84[64];
      if (v90 == 255)
      {
        id v92 = *v89;
        v83[64] = v84[64];
        *((void *)v83 + 7) = v92;
      }
      else
      {
        id v91 = *v89;
        sub_4C49C(*v89, v84[64]);
        *((void *)v83 + 7) = v91;
        v83[64] = v90;
      }
      int v93 = (id *)(v84 + 72);
      int v94 = v84[80];
      if (v94 == 255)
      {
        id v96 = *v93;
        v83[80] = v84[80];
        *((void *)v83 + 9) = v96;
      }
      else
      {
        id v95 = *v93;
        sub_4C49C(*v93, v84[80]);
        *((void *)v83 + 9) = v95;
        v83[80] = v94;
      }
      int v97 = (id *)(v84 + 88);
      int v98 = v84[96];
      if (v98 == 255)
      {
        id v100 = *v97;
        v83[96] = v84[96];
        *((void *)v83 + 11) = v100;
      }
      else
      {
        id v99 = *v97;
        sub_4C49C(*v97, v84[96]);
        *((void *)v83 + 11) = v99;
        v83[96] = v98;
      }
      id v101 = (id *)(v84 + 104);
      int v102 = v84[112];
      if (v102 == 255)
      {
        id v104 = *v101;
        v83[112] = v84[112];
        *((void *)v83 + 13) = v104;
      }
      else
      {
        id v103 = *v101;
        sub_4C49C(*v101, v84[112]);
        *((void *)v83 + 13) = v103;
        v83[112] = v102;
      }
      uint64_t v105 = (id *)(v84 + 120);
      int v106 = v84[128];
      if (v106 == 255)
      {
        id v108 = *v105;
        v83[128] = v84[128];
        *((void *)v83 + 15) = v108;
      }
      else
      {
        id v107 = *v105;
        sub_4C49C(*v105, v84[128]);
        *((void *)v83 + 15) = v107;
        v83[128] = v106;
      }
      v83[129] = v84[129];
      v150(&v83[v71[11]], &v84[v71[11]], v75);
      uint64_t v109 = v71[12];
      int v110 = &v83[v109];
      int v111 = &v84[v109];
      *(void *)int v110 = *(void *)v111;
      *((void *)v110 + 1) = *((void *)v111 + 1);
      v83[v71[13]] = v84[v71[13]];
      v83[v71[14]] = v84[v71[14]];
      v83[v71[15]] = v84[v71[15]];
      uint64_t v112 = v71[16];
      int v113 = &v83[v112];
      int v114 = &v84[v112];
      *(void *)int v113 = *(void *)v114;
      *((void *)v113 + 1) = *((void *)v114 + 1);
      *(void *)((char *)a1 + *(int *)(v149 + 64)) = *(void *)((char *)a2 + *(int *)(v149 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_35596C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for HeroBackgroundVariant(_OWORD *a1, _OWORD *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v12 = (int *)sub_3D3860();
    uint64_t v13 = *((void *)v12 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(a2, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
      memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      long long v26 = a2[1];
      *a1 = *a2;
      a1[1] = v26;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v27 = v12[11];
      id v28 = (char *)a1 + v27;
      id v29 = (char *)a2 + v27;
      uint64_t v30 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
      *(_OWORD *)((char *)a1 + v12[12]) = *(_OWORD *)((char *)a2 + v12[12]);
      *((unsigned char *)a1 + v12[13]) = *((unsigned char *)a2 + v12[13]);
      *((unsigned char *)a1 + v12[14]) = *((unsigned char *)a2 + v12[14]);
      *((unsigned char *)a1 + v12[15]) = *((unsigned char *)a2 + v12[15]);
      *(_OWORD *)((char *)a1 + v12[16]) = *(_OWORD *)((char *)a2 + v12[16]);
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v13 + 56))(a1, 0, 1, v12);
    }
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
    *(void *)((char *)a1 + *(int *)(v31 + 48)) = *(void *)((char *)a2 + *(int *)(v31 + 48));
  }
  else
  {
    long long v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((void *)a1 + 7) = *((void *)a2 + 7);
    *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v6 = (int *)sub_3D3860();
      uint64_t v7 = v6[11];
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
      *((unsigned char *)a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
      *((unsigned char *)a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
      *((unsigned char *)a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
      *(_OWORD *)((char *)a1 + v6[16]) = *(_OWORD *)((char *)a2 + v6[16]);
      uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
      *(void *)((char *)a1 + *(int *)(v11 + 48)) = *(void *)((char *)a2 + *(int *)(v11 + 48));
    }
    else
    {
      uint64_t v15 = (int *)sub_3D3860();
      uint64_t v16 = v15[11];
      id v17 = (char *)a1 + v16;
      int v18 = (char *)a2 + v16;
      uint64_t v19 = sub_3D3750();
      uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
      v20(v17, v18, v19);
      *(_OWORD *)((char *)a1 + v15[12]) = *(_OWORD *)((char *)a2 + v15[12]);
      *((unsigned char *)a1 + v15[13]) = *((unsigned char *)a2 + v15[13]);
      *((unsigned char *)a1 + v15[14]) = *((unsigned char *)a2 + v15[14]);
      *((unsigned char *)a1 + v15[15]) = *((unsigned char *)a2 + v15[15]);
      *(_OWORD *)((char *)a1 + v15[16]) = *(_OWORD *)((char *)a2 + v15[16]);
      uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
      uint64_t v22 = *(int *)(v21 + 48);
      int v23 = (char *)a1 + v22;
      id v24 = (char *)a2 + v22;
      long long v25 = *(_OWORD *)((char *)a2 + v22 + 16);
      *(_OWORD *)int v23 = *(_OWORD *)((char *)a2 + v22);
      *((_OWORD *)v23 + 1) = v25;
      v23[32] = *((unsigned char *)a2 + v22 + 32);
      *(_OWORD *)(v23 + 40) = *(_OWORD *)((char *)a2 + v22 + 40);
      *((void *)v23 + 7) = *(void *)((char *)a2 + v22 + 56);
      v23[64] = *((unsigned char *)a2 + v22 + 64);
      *(_OWORD *)(v23 + 113) = *(_OWORD *)((char *)a2 + v22 + 113);
      *(_OWORD *)(v23 + 104) = *(_OWORD *)((char *)a2 + v22 + 104);
      *(_OWORD *)(v23 + 88) = *(_OWORD *)((char *)a2 + v22 + 88);
      *(_OWORD *)(v23 + 72) = *(_OWORD *)((char *)a2 + v22 + 72);
      v23[129] = *((unsigned char *)a2 + v22 + 129);
      v20((char *)a1 + v22 + v15[11], (char *)a2 + v22 + v15[11], v19);
      *(_OWORD *)&v23[v15[12]] = *(_OWORD *)&v24[v15[12]];
      v23[v15[13]] = v24[v15[13]];
      v23[v15[14]] = v24[v15[14]];
      v23[v15[15]] = v24[v15[15]];
      *(_OWORD *)&v23[v15[16]] = *(_OWORD *)&v24[v15[16]];
      *(void *)((char *)a1 + *(int *)(v21 + 64)) = *(void *)((char *)a2 + *(int *)(v21 + 64));
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *assignWithTake for HeroBackgroundVariant(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_35596C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v12 = (int *)sub_3D3860();
      uint64_t v13 = *((void *)v12 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(a2, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        long long v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
        *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
        uint64_t v27 = v12[11];
        id v28 = (char *)a1 + v27;
        id v29 = (char *)a2 + v27;
        uint64_t v30 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        *(_OWORD *)((char *)a1 + v12[12]) = *(_OWORD *)((char *)a2 + v12[12]);
        *((unsigned char *)a1 + v12[13]) = *((unsigned char *)a2 + v12[13]);
        *((unsigned char *)a1 + v12[14]) = *((unsigned char *)a2 + v12[14]);
        *((unsigned char *)a1 + v12[15]) = *((unsigned char *)a2 + v12[15]);
        *(_OWORD *)((char *)a1 + v12[16]) = *(_OWORD *)((char *)a2 + v12[16]);
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v13 + 56))(a1, 0, 1, v12);
      }
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
      *(void *)((char *)a1 + *(int *)(v31 + 48)) = *(void *)((char *)a2 + *(int *)(v31 + 48));
    }
    else
    {
      long long v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v6 = (int *)sub_3D3860();
        uint64_t v7 = v6[11];
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
        *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
        *((unsigned char *)a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
        *((unsigned char *)a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
        *((unsigned char *)a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
        *(_OWORD *)((char *)a1 + v6[16]) = *(_OWORD *)((char *)a2 + v6[16]);
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
        *(void *)((char *)a1 + *(int *)(v11 + 48)) = *(void *)((char *)a2 + *(int *)(v11 + 48));
      }
      else
      {
        uint64_t v15 = (int *)sub_3D3860();
        uint64_t v16 = v15[11];
        id v17 = (char *)a1 + v16;
        int v18 = (char *)a2 + v16;
        uint64_t v19 = sub_3D3750();
        uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
        v20(v17, v18, v19);
        *(_OWORD *)((char *)a1 + v15[12]) = *(_OWORD *)((char *)a2 + v15[12]);
        *((unsigned char *)a1 + v15[13]) = *((unsigned char *)a2 + v15[13]);
        *((unsigned char *)a1 + v15[14]) = *((unsigned char *)a2 + v15[14]);
        *((unsigned char *)a1 + v15[15]) = *((unsigned char *)a2 + v15[15]);
        *(_OWORD *)((char *)a1 + v15[16]) = *(_OWORD *)((char *)a2 + v15[16]);
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
        uint64_t v22 = *(int *)(v21 + 48);
        int v23 = (char *)a1 + v22;
        id v24 = (char *)a2 + v22;
        long long v25 = *(_OWORD *)((char *)a2 + v22 + 16);
        *(_OWORD *)int v23 = *(_OWORD *)((char *)a2 + v22);
        *((_OWORD *)v23 + 1) = v25;
        v23[32] = *((unsigned char *)a2 + v22 + 32);
        *(_OWORD *)(v23 + 40) = *(_OWORD *)((char *)a2 + v22 + 40);
        *((void *)v23 + 7) = *(void *)((char *)a2 + v22 + 56);
        v23[64] = *((unsigned char *)a2 + v22 + 64);
        *(_OWORD *)(v23 + 113) = *(_OWORD *)((char *)a2 + v22 + 113);
        *(_OWORD *)(v23 + 104) = *(_OWORD *)((char *)a2 + v22 + 104);
        *(_OWORD *)(v23 + 88) = *(_OWORD *)((char *)a2 + v22 + 88);
        *(_OWORD *)(v23 + 72) = *(_OWORD *)((char *)a2 + v22 + 72);
        v23[129] = *((unsigned char *)a2 + v22 + 129);
        v20((char *)a1 + v22 + v15[11], (char *)a2 + v22 + v15[11], v19);
        *(_OWORD *)&v23[v15[12]] = *(_OWORD *)&v24[v15[12]];
        v23[v15[13]] = v24[v15[13]];
        v23[v15[14]] = v24[v15[14]];
        v23[v15[15]] = v24[v15[15]];
        *(_OWORD *)&v23[v15[16]] = *(_OWORD *)&v24[v15[16]];
        *(void *)((char *)a1 + *(int *)(v21 + 64)) = *(void *)((char *)a2 + *(int *)(v21 + 64));
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_3563D0()
{
  sub_3D3860();
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout3();
    long long v5 = &v4;
    swift_getTupleTypeLayout2();
    uint64_t v6 = &v3;
    sub_6F380();
    if (v1 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v7 = &v2;
      swift_initEnumMetadataMultiPayload();
    }
  }
}

uint64_t sub_3564E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

double sub_356550@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_356608(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_4BBFB8, &qword_4BBFC0).n128_u64[0];
  return result;
}

double sub_3565AC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_356608(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_4BF150, &qword_4BF170).n128_u64[0];
  return result;
}

__n128 sub_356608@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_3D8400();
    id v28 = (void *)sub_3D6430();
    sub_3D53A0();

    uint64_t v19 = a17;
  }
  sub_3D60E0();
  sub_153B4(v17, a9, a16);
  id v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *id v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

double sub_3567D8@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_356608(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_4BF160, &qword_4BF1A0).n128_u64[0];
  return result;
}

__n128 sub_356834@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_3D8400();
    int v23 = (void *)sub_3D6430();
    sub_3D53A0();
  }
  sub_3D60E0();
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF738);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16))(a9, v13, v24);
  long long v25 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BF740) + 36));
  v25[4] = v31;
  v25[5] = v32;
  v25[6] = v33;
  _OWORD *v25 = v27;
  v25[1] = v28;
  __n128 result = v30;
  v25[2] = v29;
  v25[3] = v30;
  return result;
}

uint64_t HeroBackground.init(variant:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_357748(a1, a2, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
}

uint64_t HeroBackground.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF2C0);
  __chkstk_darwin(v35);
  uint64_t v37 = (uint64_t)&v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF2C8);
  __chkstk_darwin(v34);
  long long v36 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF2D0);
  __chkstk_darwin(v45);
  int v39 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v4 - 8);
  uint64_t v38 = (uint64_t)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF2D8);
  __chkstk_darwin(v41);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF2E0);
  __chkstk_darwin(v42);
  uint64_t v44 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF2E8);
  __chkstk_darwin(v40);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF2F0);
  __chkstk_darwin(v43);
  uint64_t v12 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF2F8);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v34 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_3D3860();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for HeroBackgroundVariant();
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3572F8((uint64_t)v47, (uint64_t)v22, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      int v47 = *(char **)&v22[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0) + 48)];
      sub_357748((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      sub_3572F8((uint64_t)v19, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      uint64_t v24 = (uint64_t)&v7[*(int *)(v41 + 36)];
      sub_3572F8((uint64_t)v19, v24, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v24, 0, 1, v16);
      sub_153B4((uint64_t)v7, (uint64_t)v10, &qword_4BF2D8);
      swift_storeEnumTagMultiPayload();
      sub_35739C();
      sub_357500();
      sub_3D6360();
      sub_153B4((uint64_t)v12, v44, &qword_4BF2F0);
      swift_storeEnumTagMultiPayload();
      sub_357360();
      sub_3575FC();
      sub_3D6360();
      swift_release();
      sub_250FC((uint64_t)v12, &qword_4BF2F0);
      sub_250FC((uint64_t)v7, &qword_4BF2D8);
      return sub_35FE64((uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    }
    else
    {
      uint64_t v27 = *(void *)&v22[*(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8) + 48)];
      uint64_t v28 = v38;
      sub_18F88((uint64_t)v22, v38, (uint64_t *)&unk_4B1F70);
      if (qword_4A8FE8 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_3D60D0();
      uint64_t v30 = __swift_project_value_buffer(v29, (uint64_t)qword_4BEB08);
      uint64_t v31 = v37;
      sub_3572F8(v30, v37, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
      long long v32 = v36;
      *(_WORD *)(v31 + *(int *)(v35 + 36)) = 256;
      sub_153B4(v31, (uint64_t)v32 + *(int *)(v34 + 36), &qword_4BF2C0);
      *long long v32 = v27;
      swift_retain();
      sub_250FC(v31, &qword_4BF2C0);
      uint64_t v33 = (uint64_t)v39;
      sub_153B4(v28, (uint64_t)&v39[*(int *)(v45 + 36)], (uint64_t *)&unk_4B1F70);
      sub_18F88((uint64_t)v32, v33, &qword_4BF2C8);
      sub_153B4(v33, v44, &qword_4BF2D0);
      swift_storeEnumTagMultiPayload();
      sub_357360();
      sub_3575FC();
      sub_3D6360();
      swift_release();
      sub_250FC(v33, &qword_4BF2D0);
      return sub_250FC(v28, (uint64_t *)&unk_4B1F70);
    }
  }
  else
  {
    int v47 = &v22[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BED98) + 48)];
    sub_357748((uint64_t)v22, (uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    sub_3572F8((uint64_t)v19, (uint64_t)v15, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    uint64_t v26 = (uint64_t)&v15[*(int *)(v13 + 36)];
    sub_3572F8((uint64_t)v19, v26, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56))(v26, 0, 1, v16);
    sub_153B4((uint64_t)v15, (uint64_t)v10, &qword_4BF2F8);
    swift_storeEnumTagMultiPayload();
    sub_35739C();
    sub_357500();
    sub_3D6360();
    sub_153B4((uint64_t)v12, v44, &qword_4BF2F0);
    swift_storeEnumTagMultiPayload();
    sub_357360();
    sub_3575FC();
    sub_3D6360();
    swift_release();
    sub_250FC((uint64_t)v12, &qword_4BF2F0);
    sub_250FC((uint64_t)v15, &qword_4BF2F8);
    sub_35FE64((uint64_t)v19, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    return sub_35FE64((uint64_t)v47, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  }
}

uint64_t sub_3572F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_357360()
{
  return sub_358944(&qword_4BF300, &qword_4BF2F0, (void (*)(void))sub_35739C, (void (*)(void))sub_357500);
}

unint64_t sub_35739C()
{
  unint64_t result = qword_4BF308;
  if (!qword_4BF308)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF2F8);
    sub_357498(&qword_4BF310, (void (*)(uint64_t))type metadata accessor for HeroEpisodeArtworkBackground);
    sub_357498(&qword_4BF318, (void (*)(uint64_t))type metadata accessor for HeroJoeColorDebugView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF308);
  }
  return result;
}

uint64_t type metadata accessor for HeroEpisodeArtworkBackground(uint64_t a1)
{
  return sub_2595C(a1, qword_4BF440);
}

uint64_t sub_357498(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for HeroJoeColorDebugView(uint64_t a1)
{
  return sub_2595C(a1, qword_4BF560);
}

unint64_t sub_357500()
{
  unint64_t result = qword_4BF320;
  if (!qword_4BF320)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF2D8);
    sub_357498(&qword_4BF328, (void (*)(uint64_t))type metadata accessor for HeroShowUberArtworkBackground);
    sub_357498(&qword_4BF318, (void (*)(uint64_t))type metadata accessor for HeroJoeColorDebugView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF320);
  }
  return result;
}

uint64_t type metadata accessor for HeroShowUberArtworkBackground(uint64_t a1)
{
  return sub_2595C(a1, qword_4BF4D0);
}

unint64_t sub_3575FC()
{
  unint64_t result = qword_4BF330;
  if (!qword_4BF330)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF2D0);
    sub_3576A8();
    sub_357498(&qword_4BF318, (void (*)(uint64_t))type metadata accessor for HeroJoeColorDebugView);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF330);
  }
  return result;
}

unint64_t sub_3576A8()
{
  unint64_t result = qword_4BF338;
  if (!qword_4BF338)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF2C8);
    sub_3D6E4(&qword_4BF340, &qword_4BF2C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF338);
  }
  return result;
}

uint64_t sub_357748(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_3577B0()
{
  return swift_getOpaqueTypeConformance2();
}

void *assignWithCopy for HeroBackground(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_35FE64((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
    type metadata accessor for HeroBackgroundVariant();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v8 = (int *)sub_3D3860();
      uint64_t v9 = *((void *)v8 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v9 + 48))(a2, 1, v8))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        int v18 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v18 == 255)
        {
          long long v115 = *((_OWORD *)a2 + 1);
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          *((_OWORD *)a1 + 1) = v115;
        }
        else
        {
          uint64_t v19 = a2[2];
          uint64_t v20 = a2[3];
          sub_4C484(v19, v20, v18);
          a1[2] = v19;
          a1[3] = v20;
          *((unsigned char *)a1 + 32) = v18;
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        int v116 = (id *)(a2 + 7);
        int v117 = *((unsigned __int8 *)a2 + 64);
        if (v117 == 255)
        {
          id v119 = *v116;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          a1[7] = v119;
        }
        else
        {
          id v118 = *v116;
          sub_4C49C(*v116, *((unsigned char *)a2 + 64));
          a1[7] = v118;
          *((unsigned char *)a1 + 64) = v117;
        }
        int v120 = (id *)(a2 + 9);
        int v121 = *((unsigned __int8 *)a2 + 80);
        if (v121 == 255)
        {
          id v123 = *v120;
          *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
          a1[9] = v123;
        }
        else
        {
          id v122 = *v120;
          sub_4C49C(*v120, *((unsigned char *)a2 + 80));
          a1[9] = v122;
          *((unsigned char *)a1 + 80) = v121;
        }
        id v124 = (id *)(a2 + 11);
        int v125 = *((unsigned __int8 *)a2 + 96);
        if (v125 == 255)
        {
          id v127 = *v124;
          *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
          a1[11] = v127;
        }
        else
        {
          id v126 = *v124;
          sub_4C49C(*v124, *((unsigned char *)a2 + 96));
          a1[11] = v126;
          *((unsigned char *)a1 + 96) = v125;
        }
        uint64_t v128 = (id *)(a2 + 13);
        int v129 = *((unsigned __int8 *)a2 + 112);
        if (v129 == 255)
        {
          id v131 = *v128;
          *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
          a1[13] = v131;
        }
        else
        {
          id v130 = *v128;
          sub_4C49C(*v128, *((unsigned char *)a2 + 112));
          a1[13] = v130;
          *((unsigned char *)a1 + 112) = v129;
        }
        uint64_t v132 = (id *)(a2 + 15);
        int v133 = *((unsigned __int8 *)a2 + 128);
        if (v133 == 255)
        {
          id v135 = *v132;
          *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
          a1[15] = v135;
        }
        else
        {
          id v134 = *v132;
          sub_4C49C(*v132, *((unsigned char *)a2 + 128));
          a1[15] = v134;
          *((unsigned char *)a1 + 128) = v133;
        }
        *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
        uint64_t v136 = v8[11];
        uint64_t v137 = (char *)a1 + v136;
        uint64_t v138 = (char *)a2 + v136;
        uint64_t v139 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v139 - 8) + 16))(v137, v138, v139);
        uint64_t v140 = v8[12];
        uint64_t v141 = (void *)((char *)a1 + v140);
        uint64_t v142 = (void *)((char *)a2 + v140);
        *uint64_t v141 = *v142;
        v141[1] = v142[1];
        *((unsigned char *)a1 + v8[13]) = *((unsigned char *)a2 + v8[13]);
        *((unsigned char *)a1 + v8[14]) = *((unsigned char *)a2 + v8[14]);
        *((unsigned char *)a1 + v8[15]) = *((unsigned char *)a2 + v8[15]);
        uint64_t v143 = v8[16];
        uint64_t v144 = (void *)((char *)a1 + v143);
        uint64_t v145 = (void *)((char *)a2 + v143);
        *uint64_t v144 = *v145;
        v144[1] = v145[1];
        uint64_t v146 = *(void (**)(void *, void, uint64_t, int *))(v9 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v146(a1, 0, 1, v8);
      }
      uint64_t v147 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
      *(void *)((char *)a1 + *(int *)(v147 + 48)) = *(void *)((char *)a2 + *(int *)(v147 + 48));
      swift_retain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      int v5 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v5 == 255)
      {
        long long v14 = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        *((_OWORD *)a1 + 1) = v14;
      }
      else
      {
        uint64_t v6 = a2[2];
        uint64_t v7 = a2[3];
        sub_4C484(v6, v7, v5);
        a1[2] = v6;
        a1[3] = v7;
        *((unsigned char *)a1 + 32) = v5;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      uint64_t v15 = (id *)(a2 + 7);
      int v16 = *((unsigned __int8 *)a2 + 64);
      if (v16 == 255)
      {
        id v25 = *v15;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        a1[7] = v25;
      }
      else
      {
        id v17 = *v15;
        sub_4C49C(*v15, *((unsigned char *)a2 + 64));
        a1[7] = v17;
        *((unsigned char *)a1 + 64) = v16;
      }
      uint64_t v26 = (id *)(a2 + 9);
      int v27 = *((unsigned __int8 *)a2 + 80);
      if (v27 == 255)
      {
        id v33 = *v26;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
        a1[9] = v33;
      }
      else
      {
        id v28 = *v26;
        sub_4C49C(*v26, *((unsigned char *)a2 + 80));
        a1[9] = v28;
        *((unsigned char *)a1 + 80) = v27;
      }
      uint64_t v34 = (id *)(a2 + 11);
      int v35 = *((unsigned __int8 *)a2 + 96);
      if (v35 == 255)
      {
        id v41 = *v34;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
        a1[11] = v41;
      }
      else
      {
        id v36 = *v34;
        sub_4C49C(*v34, *((unsigned char *)a2 + 96));
        a1[11] = v36;
        *((unsigned char *)a1 + 96) = v35;
      }
      uint64_t v42 = (id *)(a2 + 13);
      int v43 = *((unsigned __int8 *)a2 + 112);
      if (v43 == 255)
      {
        id v49 = *v42;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        a1[13] = v49;
      }
      else
      {
        id v44 = *v42;
        sub_4C49C(*v42, *((unsigned char *)a2 + 112));
        a1[13] = v44;
        *((unsigned char *)a1 + 112) = v43;
      }
      uint64_t v50 = (id *)(a2 + 15);
      int v51 = *((unsigned __int8 *)a2 + 128);
      if (v51 == 255)
      {
        id v57 = *v50;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
        a1[15] = v57;
      }
      else
      {
        id v52 = *v50;
        sub_4C49C(*v50, *((unsigned char *)a2 + 128));
        a1[15] = v52;
        *((unsigned char *)a1 + 128) = v51;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v58 = (int *)sub_3D3860();
      uint64_t v59 = v58[11];
      uint64_t v60 = (char *)a1 + v59;
      uint64_t v61 = (char *)a2 + v59;
      uint64_t v62 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 16))(v60, v61, v62);
      uint64_t v63 = v58[12];
      uint64_t v64 = (void *)((char *)a1 + v63);
      uint64_t v65 = (void *)((char *)a2 + v63);
      void *v64 = *v65;
      v64[1] = v65[1];
      *((unsigned char *)a1 + v58[13]) = *((unsigned char *)a2 + v58[13]);
      *((unsigned char *)a1 + v58[14]) = *((unsigned char *)a2 + v58[14]);
      *((unsigned char *)a1 + v58[15]) = *((unsigned char *)a2 + v58[15]);
      uint64_t v66 = v58[16];
      uint64_t v67 = (void *)((char *)a1 + v66);
      uint64_t v68 = (void *)((char *)a2 + v66);
      *uint64_t v67 = *v68;
      v67[1] = v68[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
      *(void *)((char *)a1 + *(int *)(v69 + 48)) = *(void *)((char *)a2 + *(int *)(v69 + 48));
      swift_retain();
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      int v11 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v11 == 255)
      {
        long long v21 = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        *((_OWORD *)a1 + 1) = v21;
      }
      else
      {
        uint64_t v12 = a2[2];
        uint64_t v13 = a2[3];
        sub_4C484(v12, v13, v11);
        a1[2] = v12;
        a1[3] = v13;
        *((unsigned char *)a1 + 32) = v11;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      uint64_t v22 = (id *)(a2 + 7);
      int v23 = *((unsigned __int8 *)a2 + 64);
      if (v23 == 255)
      {
        id v29 = *v22;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        a1[7] = v29;
      }
      else
      {
        id v24 = *v22;
        sub_4C49C(*v22, *((unsigned char *)a2 + 64));
        a1[7] = v24;
        *((unsigned char *)a1 + 64) = v23;
      }
      uint64_t v30 = (id *)(a2 + 9);
      int v31 = *((unsigned __int8 *)a2 + 80);
      if (v31 == 255)
      {
        id v37 = *v30;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
        a1[9] = v37;
      }
      else
      {
        id v32 = *v30;
        sub_4C49C(*v30, *((unsigned char *)a2 + 80));
        a1[9] = v32;
        *((unsigned char *)a1 + 80) = v31;
      }
      uint64_t v38 = (id *)(a2 + 11);
      int v39 = *((unsigned __int8 *)a2 + 96);
      if (v39 == 255)
      {
        id v45 = *v38;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
        a1[11] = v45;
      }
      else
      {
        id v40 = *v38;
        sub_4C49C(*v38, *((unsigned char *)a2 + 96));
        a1[11] = v40;
        *((unsigned char *)a1 + 96) = v39;
      }
      uint64_t v46 = (id *)(a2 + 13);
      int v47 = *((unsigned __int8 *)a2 + 112);
      if (v47 == 255)
      {
        id v53 = *v46;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        a1[13] = v53;
      }
      else
      {
        id v48 = *v46;
        sub_4C49C(*v46, *((unsigned char *)a2 + 112));
        a1[13] = v48;
        *((unsigned char *)a1 + 112) = v47;
      }
      uint64_t v54 = (id *)(a2 + 15);
      int v55 = *((unsigned __int8 *)a2 + 128);
      if (v55 == 255)
      {
        id v70 = *v54;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
        a1[15] = v70;
      }
      else
      {
        id v56 = *v54;
        sub_4C49C(*v54, *((unsigned char *)a2 + 128));
        a1[15] = v56;
        *((unsigned char *)a1 + 128) = v55;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v71 = (int *)sub_3D3860();
      uint64_t v72 = v71[11];
      uint64_t v73 = (char *)a1 + v72;
      uint64_t v74 = (char *)a2 + v72;
      uint64_t v75 = sub_3D3750();
      uint64_t v150 = *(void (**)(char *, char *, uint64_t))(*(void *)(v75 - 8) + 16);
      v150(v73, v74, v75);
      uint64_t v76 = v71[12];
      uint64_t v77 = (void *)((char *)a1 + v76);
      Swift::String_optional v78 = (void *)((char *)a2 + v76);
      *uint64_t v77 = *v78;
      v77[1] = v78[1];
      *((unsigned char *)a1 + v71[13]) = *((unsigned char *)a2 + v71[13]);
      *((unsigned char *)a1 + v71[14]) = *((unsigned char *)a2 + v71[14]);
      *((unsigned char *)a1 + v71[15]) = *((unsigned char *)a2 + v71[15]);
      uint64_t v79 = v71[16];
      uint64_t v80 = (void *)((char *)a1 + v79);
      int v81 = (void *)((char *)a2 + v79);
      void *v80 = *v81;
      v80[1] = v81[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
      uint64_t v82 = *(int *)(v149 + 48);
      uint64_t v83 = (char *)a1 + v82;
      int v84 = (char *)a2 + v82;
      *(void *)uint64_t v83 = *(void *)((char *)a2 + v82);
      *((void *)v83 + 1) = *(void *)((char *)a2 + v82 + 8);
      int v85 = *((unsigned __int8 *)a2 + v82 + 32);
      swift_bridgeObjectRetain();
      if (v85 == 255)
      {
        long long v88 = *((_OWORD *)v84 + 1);
        v83[32] = v84[32];
        *((_OWORD *)v83 + 1) = v88;
      }
      else
      {
        uint64_t v86 = *((void *)v84 + 2);
        uint64_t v87 = *((void *)v84 + 3);
        sub_4C484(v86, v87, v85);
        *((void *)v83 + 2) = v86;
        *((void *)v83 + 3) = v87;
        v83[32] = v85;
      }
      *((void *)v83 + 5) = *((void *)v84 + 5);
      *((void *)v83 + 6) = *((void *)v84 + 6);
      id v89 = (id *)(v84 + 56);
      int v90 = v84[64];
      if (v90 == 255)
      {
        id v92 = *v89;
        v83[64] = v84[64];
        *((void *)v83 + 7) = v92;
      }
      else
      {
        id v91 = *v89;
        sub_4C49C(*v89, v84[64]);
        *((void *)v83 + 7) = v91;
        v83[64] = v90;
      }
      int v93 = (id *)(v84 + 72);
      int v94 = v84[80];
      if (v94 == 255)
      {
        id v96 = *v93;
        v83[80] = v84[80];
        *((void *)v83 + 9) = v96;
      }
      else
      {
        id v95 = *v93;
        sub_4C49C(*v93, v84[80]);
        *((void *)v83 + 9) = v95;
        v83[80] = v94;
      }
      int v97 = (id *)(v84 + 88);
      int v98 = v84[96];
      if (v98 == 255)
      {
        id v100 = *v97;
        v83[96] = v84[96];
        *((void *)v83 + 11) = v100;
      }
      else
      {
        id v99 = *v97;
        sub_4C49C(*v97, v84[96]);
        *((void *)v83 + 11) = v99;
        v83[96] = v98;
      }
      id v101 = (id *)(v84 + 104);
      int v102 = v84[112];
      if (v102 == 255)
      {
        id v104 = *v101;
        v83[112] = v84[112];
        *((void *)v83 + 13) = v104;
      }
      else
      {
        id v103 = *v101;
        sub_4C49C(*v101, v84[112]);
        *((void *)v83 + 13) = v103;
        v83[112] = v102;
      }
      uint64_t v105 = (id *)(v84 + 120);
      int v106 = v84[128];
      if (v106 == 255)
      {
        id v108 = *v105;
        v83[128] = v84[128];
        *((void *)v83 + 15) = v108;
      }
      else
      {
        id v107 = *v105;
        sub_4C49C(*v105, v84[128]);
        *((void *)v83 + 15) = v107;
        v83[128] = v106;
      }
      v83[129] = v84[129];
      v150(&v83[v71[11]], &v84[v71[11]], v75);
      uint64_t v109 = v71[12];
      int v110 = &v83[v109];
      int v111 = &v84[v109];
      *(void *)int v110 = *(void *)v111;
      *((void *)v110 + 1) = *((void *)v111 + 1);
      v83[v71[13]] = v84[v71[13]];
      v83[v71[14]] = v84[v71[14]];
      v83[v71[15]] = v84[v71[15]];
      uint64_t v112 = v71[16];
      int v113 = &v83[v112];
      int v114 = &v84[v112];
      *(void *)int v113 = *(void *)v114;
      *((void *)v113 + 1) = *((void *)v114 + 1);
      *(void *)((char *)a1 + *(int *)(v149 + 64)) = *(void *)((char *)a2 + *(int *)(v149 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *assignWithTake for HeroBackground(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_35FE64((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
    type metadata accessor for HeroBackgroundVariant();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v12 = (int *)sub_3D3860();
      uint64_t v13 = *((void *)v12 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v13 + 48))(a2, 1, v12))
      {
        uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
      }
      else
      {
        long long v26 = a2[1];
        *a1 = *a2;
        a1[1] = v26;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
        *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
        uint64_t v27 = v12[11];
        id v28 = (char *)a1 + v27;
        id v29 = (char *)a2 + v27;
        uint64_t v30 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
        *(_OWORD *)((char *)a1 + v12[12]) = *(_OWORD *)((char *)a2 + v12[12]);
        *((unsigned char *)a1 + v12[13]) = *((unsigned char *)a2 + v12[13]);
        *((unsigned char *)a1 + v12[14]) = *((unsigned char *)a2 + v12[14]);
        *((unsigned char *)a1 + v12[15]) = *((unsigned char *)a2 + v12[15]);
        *(_OWORD *)((char *)a1 + v12[16]) = *(_OWORD *)((char *)a2 + v12[16]);
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v13 + 56))(a1, 0, 1, v12);
      }
      uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
      *(void *)((char *)a1 + *(int *)(v31 + 48)) = *(void *)((char *)a2 + *(int *)(v31 + 48));
    }
    else
    {
      long long v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v6 = (int *)sub_3D3860();
        uint64_t v7 = v6[11];
        uint64_t v8 = (char *)a1 + v7;
        uint64_t v9 = (char *)a2 + v7;
        uint64_t v10 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
        *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
        *((unsigned char *)a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
        *((unsigned char *)a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
        *((unsigned char *)a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
        *(_OWORD *)((char *)a1 + v6[16]) = *(_OWORD *)((char *)a2 + v6[16]);
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
        *(void *)((char *)a1 + *(int *)(v11 + 48)) = *(void *)((char *)a2 + *(int *)(v11 + 48));
      }
      else
      {
        uint64_t v15 = (int *)sub_3D3860();
        uint64_t v16 = v15[11];
        id v17 = (char *)a1 + v16;
        int v18 = (char *)a2 + v16;
        uint64_t v19 = sub_3D3750();
        uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32);
        v20(v17, v18, v19);
        *(_OWORD *)((char *)a1 + v15[12]) = *(_OWORD *)((char *)a2 + v15[12]);
        *((unsigned char *)a1 + v15[13]) = *((unsigned char *)a2 + v15[13]);
        *((unsigned char *)a1 + v15[14]) = *((unsigned char *)a2 + v15[14]);
        *((unsigned char *)a1 + v15[15]) = *((unsigned char *)a2 + v15[15]);
        *(_OWORD *)((char *)a1 + v15[16]) = *(_OWORD *)((char *)a2 + v15[16]);
        uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
        uint64_t v22 = *(int *)(v21 + 48);
        int v23 = (char *)a1 + v22;
        id v24 = (char *)a2 + v22;
        long long v25 = *(_OWORD *)((char *)a2 + v22 + 16);
        *(_OWORD *)int v23 = *(_OWORD *)((char *)a2 + v22);
        *((_OWORD *)v23 + 1) = v25;
        v23[32] = *((unsigned char *)a2 + v22 + 32);
        *(_OWORD *)(v23 + 40) = *(_OWORD *)((char *)a2 + v22 + 40);
        *((void *)v23 + 7) = *(void *)((char *)a2 + v22 + 56);
        v23[64] = *((unsigned char *)a2 + v22 + 64);
        *(_OWORD *)(v23 + 113) = *(_OWORD *)((char *)a2 + v22 + 113);
        *(_OWORD *)(v23 + 104) = *(_OWORD *)((char *)a2 + v22 + 104);
        *(_OWORD *)(v23 + 88) = *(_OWORD *)((char *)a2 + v22 + 88);
        *(_OWORD *)(v23 + 72) = *(_OWORD *)((char *)a2 + v22 + 72);
        v23[129] = *((unsigned char *)a2 + v22 + 129);
        v20((char *)a1 + v22 + v15[11], (char *)a2 + v22 + v15[11], v19);
        *(_OWORD *)&v23[v15[12]] = *(_OWORD *)&v24[v15[12]];
        v23[v15[13]] = v24[v15[13]];
        v23[v15[14]] = v24[v15[14]];
        v23[v15[15]] = v24[v15[15]];
        *(_OWORD *)&v23[v15[16]] = *(_OWORD *)&v24[v15[16]];
        *(void *)((char *)a1 + *(int *)(v21 + 64)) = *(void *)((char *)a2 + *(int *)(v21 + 64));
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for HeroBackground(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_358878);
}

uint64_t sub_358878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
}

uint64_t storeEnumTagSinglePayload for HeroBackground(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3588A4);
}

uint64_t sub_3588A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
}

uint64_t type metadata accessor for HeroBackground(uint64_t a1)
{
  return sub_2595C(a1, qword_4BF3A0);
}

uint64_t sub_3588DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_35A2A0(a1, a2, a3, (uint64_t (*)(uint64_t))type metadata accessor for HeroBackgroundVariant);
}

uint64_t sub_3588F4()
{
  return sub_358944(&qword_4BF3D8, &qword_4BF3E0, (void (*)(void))sub_357360, (void (*)(void))sub_3575FC);
}

uint64_t sub_358944(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_3589CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3589E0);
}

uint64_t sub_3589E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
}

uint64_t sub_3589F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_358A0C);
}

uint64_t sub_358A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
}

uint64_t sub_358A24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_35A2A0(a1, a2, a3, (uint64_t (*)(uint64_t))&type metadata accessor for ArtworkModel);
}

uint64_t sub_358A3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_358A50);
}

uint64_t sub_358A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
}

uint64_t sub_358A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_358A7C);
}

uint64_t sub_358A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
}

uint64_t *sub_358A94(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = (int *)sub_3D3860();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      int v11 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v11 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v12 = a2[2];
        uint64_t v13 = a2[3];
        sub_4C484(v12, v13, v11);
        a1[2] = v12;
        a1[3] = v13;
        *((unsigned char *)a1 + 32) = v11;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      uint64_t v14 = (id *)(a2 + 7);
      int v15 = *((unsigned __int8 *)a2 + 64);
      if (v15 == 255)
      {
        a1[7] = (uint64_t)*v14;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      }
      else
      {
        id v16 = *v14;
        sub_4C49C(*v14, *((unsigned char *)a2 + 64));
        a1[7] = (uint64_t)v16;
        *((unsigned char *)a1 + 64) = v15;
      }
      id v17 = (id *)(a2 + 9);
      int v18 = *((unsigned __int8 *)a2 + 80);
      if (v18 == 255)
      {
        a1[9] = (uint64_t)*v17;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      }
      else
      {
        id v19 = *v17;
        sub_4C49C(*v17, *((unsigned char *)a2 + 80));
        a1[9] = (uint64_t)v19;
        *((unsigned char *)a1 + 80) = v18;
      }
      uint64_t v20 = (id *)(a2 + 11);
      int v21 = *((unsigned __int8 *)a2 + 96);
      if (v21 == 255)
      {
        a1[11] = (uint64_t)*v20;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
      }
      else
      {
        id v22 = *v20;
        sub_4C49C(*v20, *((unsigned char *)a2 + 96));
        a1[11] = (uint64_t)v22;
        *((unsigned char *)a1 + 96) = v21;
      }
      int v23 = (id *)(a2 + 13);
      int v24 = *((unsigned __int8 *)a2 + 112);
      if (v24 == 255)
      {
        a1[13] = (uint64_t)*v23;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      }
      else
      {
        id v25 = *v23;
        sub_4C49C(*v23, *((unsigned char *)a2 + 112));
        a1[13] = (uint64_t)v25;
        *((unsigned char *)a1 + 112) = v24;
      }
      long long v26 = (id *)(a2 + 15);
      int v27 = *((unsigned __int8 *)a2 + 128);
      if (v27 == 255)
      {
        a1[15] = (uint64_t)*v26;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
      }
      else
      {
        id v28 = *v26;
        sub_4C49C(*v26, *((unsigned char *)a2 + 128));
        a1[15] = (uint64_t)v28;
        *((unsigned char *)a1 + 128) = v27;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v29 = v7[11];
      uint64_t v30 = (char *)a1 + v29;
      uint64_t v31 = (char *)a2 + v29;
      uint64_t v32 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
      uint64_t v33 = v7[12];
      uint64_t v34 = (uint64_t *)((char *)a1 + v33);
      int v35 = (uint64_t *)((char *)a2 + v33);
      uint64_t v36 = v35[1];
      void *v34 = *v35;
      v34[1] = v36;
      *((unsigned char *)a1 + v7[13]) = *((unsigned char *)a2 + v7[13]);
      *((unsigned char *)a1 + v7[14]) = *((unsigned char *)a2 + v7[14]);
      *((unsigned char *)a1 + v7[15]) = *((unsigned char *)a2 + v7[15]);
      uint64_t v37 = v7[16];
      uint64_t v38 = (uint64_t *)((char *)a1 + v37);
      int v39 = (uint64_t *)((char *)a2 + v37);
      uint64_t v40 = v39[1];
      void *v38 = *v39;
      v38[1] = v40;
      id v41 = *(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v41(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_358E14(uint64_t a1)
{
  uint64_t v2 = sub_3D3860();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    int v4 = *(unsigned __int8 *)(a1 + 32);
    if (v4 != 255) {
      sub_49E54(*(void *)(a1 + 16), *(void *)(a1 + 24), v4);
    }
    int v5 = *(unsigned __int8 *)(a1 + 64);
    if (v5 != 255) {
      sub_4C6F0(*(id *)(a1 + 56), v5);
    }
    int v6 = *(unsigned __int8 *)(a1 + 80);
    if (v6 != 255) {
      sub_4C6F0(*(id *)(a1 + 72), v6);
    }
    int v7 = *(unsigned __int8 *)(a1 + 96);
    if (v7 != 255) {
      sub_4C6F0(*(id *)(a1 + 88), v7);
    }
    int v8 = *(unsigned __int8 *)(a1 + 112);
    if (v8 != 255) {
      sub_4C6F0(*(id *)(a1 + 104), v8);
    }
    int v9 = *(unsigned __int8 *)(a1 + 128);
    if (v9 != 255) {
      sub_4C6F0(*(id *)(a1 + 120), v9);
    }
    uint64_t v10 = a1 + *(int *)(v2 + 44);
    uint64_t v11 = sub_3D3750();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_358F7C(void *a1, void *a2)
{
  int v4 = (int *)sub_3D3860();
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    int v8 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v8 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    }
    else
    {
      uint64_t v9 = a2[2];
      uint64_t v10 = a2[3];
      sub_4C484(v9, v10, v8);
      a1[2] = v9;
      a1[3] = v10;
      *((unsigned char *)a1 + 32) = v8;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    uint64_t v11 = (id *)(a2 + 7);
    int v12 = *((unsigned __int8 *)a2 + 64);
    if (v12 == 255)
    {
      a1[7] = *v11;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    }
    else
    {
      id v13 = *v11;
      sub_4C49C(*v11, *((unsigned char *)a2 + 64));
      a1[7] = v13;
      *((unsigned char *)a1 + 64) = v12;
    }
    uint64_t v14 = (id *)(a2 + 9);
    int v15 = *((unsigned __int8 *)a2 + 80);
    if (v15 == 255)
    {
      a1[9] = *v14;
      *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    }
    else
    {
      id v16 = *v14;
      sub_4C49C(*v14, *((unsigned char *)a2 + 80));
      a1[9] = v16;
      *((unsigned char *)a1 + 80) = v15;
    }
    id v17 = (id *)(a2 + 11);
    int v18 = *((unsigned __int8 *)a2 + 96);
    if (v18 == 255)
    {
      a1[11] = *v17;
      *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
    }
    else
    {
      id v19 = *v17;
      sub_4C49C(*v17, *((unsigned char *)a2 + 96));
      a1[11] = v19;
      *((unsigned char *)a1 + 96) = v18;
    }
    uint64_t v20 = (id *)(a2 + 13);
    int v21 = *((unsigned __int8 *)a2 + 112);
    if (v21 == 255)
    {
      a1[13] = *v20;
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
    }
    else
    {
      id v22 = *v20;
      sub_4C49C(*v20, *((unsigned char *)a2 + 112));
      a1[13] = v22;
      *((unsigned char *)a1 + 112) = v21;
    }
    int v23 = (id *)(a2 + 15);
    int v24 = *((unsigned __int8 *)a2 + 128);
    if (v24 == 255)
    {
      a1[15] = *v23;
      *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
    }
    else
    {
      id v25 = *v23;
      sub_4C49C(*v23, *((unsigned char *)a2 + 128));
      a1[15] = v25;
      *((unsigned char *)a1 + 128) = v24;
    }
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v26 = v4[11];
    int v27 = (char *)a1 + v26;
    id v28 = (char *)a2 + v26;
    uint64_t v29 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    uint64_t v30 = v4[12];
    uint64_t v31 = (void *)((char *)a1 + v30);
    uint64_t v32 = (void *)((char *)a2 + v30);
    uint64_t v33 = v32[1];
    void *v31 = *v32;
    v31[1] = v33;
    *((unsigned char *)a1 + v4[13]) = *((unsigned char *)a2 + v4[13]);
    *((unsigned char *)a1 + v4[14]) = *((unsigned char *)a2 + v4[14]);
    *((unsigned char *)a1 + v4[15]) = *((unsigned char *)a2 + v4[15]);
    uint64_t v34 = v4[16];
    int v35 = (void *)((char *)a1 + v34);
    uint64_t v36 = (void *)((char *)a2 + v34);
    uint64_t v37 = v36[1];
    *int v35 = *v36;
    v35[1] = v37;
    uint64_t v38 = *(void (**)(void *, void, uint64_t, int *))(v5 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38(a1, 0, 1, v4);
  }
  return a1;
}

uint64_t sub_3592BC(uint64_t a1, uint64_t a2)
{
  int v4 = (int *)sub_3D3860();
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      int v9 = *(unsigned __int8 *)(a2 + 32);
      swift_bridgeObjectRetain();
      if (v9 == 255)
      {
        long long v21 = *(_OWORD *)(a2 + 16);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = v21;
      }
      else
      {
        uint64_t v10 = *(void *)(a2 + 16);
        uint64_t v11 = *(void *)(a2 + 24);
        sub_4C484(v10, v11, v9);
        *(void *)(a1 + 16) = v10;
        *(void *)(a1 + 24) = v11;
        *(unsigned char *)(a1 + 32) = v9;
      }
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      id v22 = (id *)(a2 + 56);
      int v23 = *(unsigned __int8 *)(a2 + 64);
      if (v23 == 255)
      {
        id v25 = *v22;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 56) = v25;
      }
      else
      {
        id v24 = *v22;
        sub_4C49C(*v22, *(unsigned char *)(a2 + 64));
        *(void *)(a1 + 56) = v24;
        *(unsigned char *)(a1 + 64) = v23;
      }
      uint64_t v26 = (id *)(a2 + 72);
      int v27 = *(unsigned __int8 *)(a2 + 80);
      if (v27 == 255)
      {
        id v29 = *v26;
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 72) = v29;
      }
      else
      {
        id v28 = *v26;
        sub_4C49C(*v26, *(unsigned char *)(a2 + 80));
        *(void *)(a1 + 72) = v28;
        *(unsigned char *)(a1 + 80) = v27;
      }
      uint64_t v30 = (id *)(a2 + 88);
      int v31 = *(unsigned __int8 *)(a2 + 96);
      if (v31 == 255)
      {
        id v33 = *v30;
        *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        *(void *)(a1 + 88) = v33;
      }
      else
      {
        id v32 = *v30;
        sub_4C49C(*v30, *(unsigned char *)(a2 + 96));
        *(void *)(a1 + 88) = v32;
        *(unsigned char *)(a1 + 96) = v31;
      }
      uint64_t v34 = (id *)(a2 + 104);
      int v35 = *(unsigned __int8 *)(a2 + 112);
      if (v35 == 255)
      {
        id v37 = *v34;
        *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
        *(void *)(a1 + 104) = v37;
      }
      else
      {
        id v36 = *v34;
        sub_4C49C(*v34, *(unsigned char *)(a2 + 112));
        *(void *)(a1 + 104) = v36;
        *(unsigned char *)(a1 + 112) = v35;
      }
      uint64_t v38 = (id *)(a2 + 120);
      int v39 = *(unsigned __int8 *)(a2 + 128);
      if (v39 == 255)
      {
        id v41 = *v38;
        *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
        *(void *)(a1 + 120) = v41;
      }
      else
      {
        id v40 = *v38;
        sub_4C49C(*v38, *(unsigned char *)(a2 + 128));
        *(void *)(a1 + 120) = v40;
        *(unsigned char *)(a1 + 128) = v39;
      }
      *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
      uint64_t v42 = v4[11];
      uint64_t v43 = a1 + v42;
      uint64_t v44 = a2 + v42;
      uint64_t v45 = sub_3D3750();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      uint64_t v46 = v4[12];
      int v47 = (void *)(a1 + v46);
      id v48 = (void *)(a2 + v46);
      void *v47 = *v48;
      v47[1] = v48[1];
      *(unsigned char *)(a1 + v4[13]) = *(unsigned char *)(a2 + v4[13]);
      *(unsigned char *)(a1 + v4[14]) = *(unsigned char *)(a2 + v4[14]);
      *(unsigned char *)(a1 + v4[15]) = *(unsigned char *)(a2 + v4[15]);
      uint64_t v49 = v4[16];
      uint64_t v50 = (void *)(a1 + v49);
      int v51 = (void *)(a2 + v49);
      *uint64_t v50 = *v51;
      v50[1] = v51[1];
      id v52 = *(void (**)(uint64_t, void, uint64_t, int *))(v5 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v52(a1, 0, 1, v4);
      return a1;
    }
LABEL_7:
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v12 - 8) + 64));
    return a1;
  }
  if (v8)
  {
    sub_35FE64(a1, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v13 = (long long *)(a1 + 16);
  uint64_t v14 = (long long *)(a2 + 16);
  int v15 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v15 == 255)
    {
      long long v56 = *v14;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *id v13 = v56;
    }
    else
    {
      uint64_t v53 = *(void *)(a2 + 16);
      uint64_t v54 = *(void *)(a2 + 24);
      sub_4C484(v53, v54, *(unsigned char *)(a2 + 32));
      *(void *)(a1 + 16) = v53;
      *(void *)(a1 + 24) = v54;
      *(unsigned char *)(a1 + 32) = v15;
    }
  }
  else if (v15 == 255)
  {
    sub_4D7B0(a1 + 16);
    char v55 = *(unsigned char *)(a2 + 32);
    *id v13 = *v14;
    *(unsigned char *)(a1 + 32) = v55;
  }
  else
  {
    uint64_t v16 = *(void *)(a2 + 16);
    uint64_t v17 = *(void *)(a2 + 24);
    sub_4C484(v16, v17, *(unsigned char *)(a2 + 32));
    uint64_t v18 = *(void *)(a1 + 16);
    uint64_t v19 = *(void *)(a1 + 24);
    *(void *)(a1 + 16) = v16;
    *(void *)(a1 + 24) = v17;
    unsigned __int8 v20 = *(unsigned char *)(a1 + 32);
    *(unsigned char *)(a1 + 32) = v15;
    sub_49E54(v18, v19, v20);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  id v57 = (id *)(a1 + 56);
  uint64_t v58 = (id *)(a2 + 56);
  int v59 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v59 == 255)
    {
      id v65 = *v58;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      id *v57 = v65;
    }
    else
    {
      id v63 = *v58;
      sub_4C49C(*v58, *(unsigned char *)(a2 + 64));
      *(void *)(a1 + 56) = v63;
      *(unsigned char *)(a1 + 64) = v59;
    }
  }
  else if (v59 == 255)
  {
    sub_4D804(a1 + 56);
    char v64 = *(unsigned char *)(a2 + 64);
    id *v57 = *v58;
    *(unsigned char *)(a1 + 64) = v64;
  }
  else
  {
    id v60 = *v58;
    sub_4C49C(*v58, *(unsigned char *)(a2 + 64));
    uint64_t v61 = *(void **)(a1 + 56);
    *(void *)(a1 + 56) = v60;
    char v62 = *(unsigned char *)(a1 + 64);
    *(unsigned char *)(a1 + 64) = v59;
    sub_4C6F0(v61, v62);
  }
  uint64_t v66 = (id *)(a1 + 72);
  uint64_t v67 = (id *)(a2 + 72);
  int v68 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v68 == 255)
    {
      id v74 = *v67;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *uint64_t v66 = v74;
    }
    else
    {
      id v72 = *v67;
      sub_4C49C(*v67, *(unsigned char *)(a2 + 80));
      *(void *)(a1 + 72) = v72;
      *(unsigned char *)(a1 + 80) = v68;
    }
  }
  else if (v68 == 255)
  {
    sub_4D804(a1 + 72);
    char v73 = *(unsigned char *)(a2 + 80);
    *uint64_t v66 = *v67;
    *(unsigned char *)(a1 + 80) = v73;
  }
  else
  {
    id v69 = *v67;
    sub_4C49C(*v67, *(unsigned char *)(a2 + 80));
    id v70 = *(void **)(a1 + 72);
    *(void *)(a1 + 72) = v69;
    char v71 = *(unsigned char *)(a1 + 80);
    *(unsigned char *)(a1 + 80) = v68;
    sub_4C6F0(v70, v71);
  }
  uint64_t v75 = (id *)(a1 + 88);
  uint64_t v76 = (id *)(a2 + 88);
  int v77 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v77 == 255)
    {
      id v83 = *v76;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      id *v75 = v83;
    }
    else
    {
      id v81 = *v76;
      sub_4C49C(*v76, *(unsigned char *)(a2 + 96));
      *(void *)(a1 + 88) = v81;
      *(unsigned char *)(a1 + 96) = v77;
    }
  }
  else if (v77 == 255)
  {
    sub_4D804(a1 + 88);
    char v82 = *(unsigned char *)(a2 + 96);
    id *v75 = *v76;
    *(unsigned char *)(a1 + 96) = v82;
  }
  else
  {
    id v78 = *v76;
    sub_4C49C(*v76, *(unsigned char *)(a2 + 96));
    uint64_t v79 = *(void **)(a1 + 88);
    *(void *)(a1 + 88) = v78;
    char v80 = *(unsigned char *)(a1 + 96);
    *(unsigned char *)(a1 + 96) = v77;
    sub_4C6F0(v79, v80);
  }
  int v84 = (id *)(a1 + 104);
  int v85 = (id *)(a2 + 104);
  int v86 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v86 == 255)
    {
      id v92 = *v85;
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      id *v84 = v92;
    }
    else
    {
      id v90 = *v85;
      sub_4C49C(*v85, *(unsigned char *)(a2 + 112));
      *(void *)(a1 + 104) = v90;
      *(unsigned char *)(a1 + 112) = v86;
    }
  }
  else if (v86 == 255)
  {
    sub_4D804(a1 + 104);
    char v91 = *(unsigned char *)(a2 + 112);
    id *v84 = *v85;
    *(unsigned char *)(a1 + 112) = v91;
  }
  else
  {
    id v87 = *v85;
    sub_4C49C(*v85, *(unsigned char *)(a2 + 112));
    long long v88 = *(void **)(a1 + 104);
    *(void *)(a1 + 104) = v87;
    char v89 = *(unsigned char *)(a1 + 112);
    *(unsigned char *)(a1 + 112) = v86;
    sub_4C6F0(v88, v89);
  }
  int v93 = (id *)(a1 + 120);
  int v94 = (id *)(a2 + 120);
  int v95 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v95 == 255)
    {
      id v101 = *v94;
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      id *v93 = v101;
    }
    else
    {
      id v99 = *v94;
      sub_4C49C(*v94, *(unsigned char *)(a2 + 128));
      *(void *)(a1 + 120) = v99;
      *(unsigned char *)(a1 + 128) = v95;
    }
  }
  else if (v95 == 255)
  {
    sub_4D804(a1 + 120);
    char v100 = *(unsigned char *)(a2 + 128);
    id *v93 = *v94;
    *(unsigned char *)(a1 + 128) = v100;
  }
  else
  {
    id v96 = *v94;
    sub_4C49C(*v94, *(unsigned char *)(a2 + 128));
    int v97 = *(void **)(a1 + 120);
    *(void *)(a1 + 120) = v96;
    char v98 = *(unsigned char *)(a1 + 128);
    *(unsigned char *)(a1 + 128) = v95;
    sub_4C6F0(v97, v98);
  }
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  uint64_t v102 = v4[11];
  uint64_t v103 = a1 + v102;
  uint64_t v104 = a2 + v102;
  uint64_t v105 = sub_3D3750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 24))(v103, v104, v105);
  uint64_t v106 = v4[12];
  id v107 = (void *)(a1 + v106);
  id v108 = (void *)(a2 + v106);
  *id v107 = *v108;
  v107[1] = v108[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v4[13]) = *(unsigned char *)(a2 + v4[13]);
  *(unsigned char *)(a1 + v4[14]) = *(unsigned char *)(a2 + v4[14]);
  *(unsigned char *)(a1 + v4[15]) = *(unsigned char *)(a2 + v4[15]);
  uint64_t v109 = v4[16];
  int v110 = (void *)(a1 + v109);
  int v111 = (void *)(a2 + v109);
  *int v110 = *v111;
  v110[1] = v111[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_359AF4(_OWORD *a1, _OWORD *a2)
{
  int v4 = (int *)sub_3D3860();
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((void *)a1 + 7) = *((void *)a2 + 7);
    *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v8 = v4[11];
    int v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(_OWORD *)((char *)a1 + v4[12]) = *(_OWORD *)((char *)a2 + v4[12]);
    *((unsigned char *)a1 + v4[13]) = *((unsigned char *)a2 + v4[13]);
    *((unsigned char *)a1 + v4[14]) = *((unsigned char *)a2 + v4[14]);
    *((unsigned char *)a1 + v4[15]) = *((unsigned char *)a2 + v4[15]);
    *(_OWORD *)((char *)a1 + v4[16]) = *(_OWORD *)((char *)a2 + v4[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

uint64_t sub_359CC0(uint64_t a1, uint64_t a2)
{
  int v4 = (int *)sub_3D3860();
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_35FE64(a1, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      goto LABEL_6;
    }
    uint64_t v16 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v16;
    swift_bridgeObjectRelease();
    uint64_t v17 = (_OWORD *)(a2 + 16);
    int v18 = *(unsigned __int8 *)(a1 + 32);
    if (v18 != 255)
    {
      int v19 = *(unsigned __int8 *)(a2 + 32);
      if (v19 != 255)
      {
        uint64_t v20 = *(void *)(a1 + 16);
        uint64_t v21 = *(void *)(a1 + 24);
        *(_OWORD *)(a1 + 16) = *v17;
        *(unsigned char *)(a1 + 32) = v19;
        sub_49E54(v20, v21, v18);
        goto LABEL_13;
      }
      sub_4D7B0(a1 + 16);
    }
    *(_OWORD *)(a1 + 16) = *v17;
    *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
LABEL_13:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    id v22 = (void *)(a2 + 56);
    int v23 = *(unsigned __int8 *)(a1 + 64);
    if (v23 != 255)
    {
      int v24 = *(unsigned __int8 *)(a2 + 64);
      if (v24 != 255)
      {
        id v25 = *(void **)(a1 + 56);
        *(void *)(a1 + 56) = *v22;
        *(unsigned char *)(a1 + 64) = v24;
        sub_4C6F0(v25, v23);
        goto LABEL_18;
      }
      sub_4D804(a1 + 56);
    }
    *(void *)(a1 + 56) = *v22;
    *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
LABEL_18:
    uint64_t v26 = (void *)(a2 + 72);
    int v27 = *(unsigned __int8 *)(a1 + 80);
    if (v27 != 255)
    {
      int v28 = *(unsigned __int8 *)(a2 + 80);
      if (v28 != 255)
      {
        id v29 = *(void **)(a1 + 72);
        *(void *)(a1 + 72) = *v26;
        *(unsigned char *)(a1 + 80) = v28;
        sub_4C6F0(v29, v27);
        goto LABEL_23;
      }
      sub_4D804(a1 + 72);
    }
    *(void *)(a1 + 72) = *v26;
    *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
LABEL_23:
    uint64_t v30 = (void *)(a2 + 88);
    int v31 = *(unsigned __int8 *)(a1 + 96);
    if (v31 != 255)
    {
      int v32 = *(unsigned __int8 *)(a2 + 96);
      if (v32 != 255)
      {
        id v33 = *(void **)(a1 + 88);
        *(void *)(a1 + 88) = *v30;
        *(unsigned char *)(a1 + 96) = v32;
        sub_4C6F0(v33, v31);
        goto LABEL_28;
      }
      sub_4D804(a1 + 88);
    }
    *(void *)(a1 + 88) = *v30;
    *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
LABEL_28:
    uint64_t v34 = (void *)(a2 + 104);
    int v35 = *(unsigned __int8 *)(a1 + 112);
    if (v35 != 255)
    {
      int v36 = *(unsigned __int8 *)(a2 + 112);
      if (v36 != 255)
      {
        id v37 = *(void **)(a1 + 104);
        *(void *)(a1 + 104) = *v34;
        *(unsigned char *)(a1 + 112) = v36;
        sub_4C6F0(v37, v35);
        goto LABEL_33;
      }
      sub_4D804(a1 + 104);
    }
    *(void *)(a1 + 104) = *v34;
    *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
LABEL_33:
    uint64_t v38 = (void *)(a2 + 120);
    int v39 = *(unsigned __int8 *)(a1 + 128);
    if (v39 != 255)
    {
      int v40 = *(unsigned __int8 *)(a2 + 128);
      if (v40 != 255)
      {
        id v41 = *(void **)(a1 + 120);
        *(void *)(a1 + 120) = *v38;
        *(unsigned char *)(a1 + 128) = v40;
        sub_4C6F0(v41, v39);
LABEL_38:
        *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
        uint64_t v42 = v4[11];
        uint64_t v43 = a1 + v42;
        uint64_t v44 = a2 + v42;
        uint64_t v45 = sub_3D3750();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 40))(v43, v44, v45);
        uint64_t v46 = v4[12];
        int v47 = (void *)(a1 + v46);
        id v48 = (uint64_t *)(a2 + v46);
        uint64_t v50 = *v48;
        uint64_t v49 = v48[1];
        void *v47 = v50;
        v47[1] = v49;
        swift_bridgeObjectRelease();
        *(unsigned char *)(a1 + v4[13]) = *(unsigned char *)(a2 + v4[13]);
        *(unsigned char *)(a1 + v4[14]) = *(unsigned char *)(a2 + v4[14]);
        *(unsigned char *)(a1 + v4[15]) = *(unsigned char *)(a2 + v4[15]);
        uint64_t v51 = v4[16];
        id v52 = (void *)(a1 + v51);
        uint64_t v53 = (uint64_t *)(a2 + v51);
        uint64_t v55 = *v53;
        uint64_t v54 = v53[1];
        void *v52 = v55;
        v52[1] = v54;
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_4D804(a1 + 120);
    }
    *(void *)(a1 + 120) = *v38;
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    goto LABEL_38;
  }
  if (v8)
  {
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v14 - 8) + 64));
    return a1;
  }
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v9;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  uint64_t v10 = v4[11];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_3D3750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  *(_OWORD *)(a1 + v4[12]) = *(_OWORD *)(a2 + v4[12]);
  *(unsigned char *)(a1 + v4[13]) = *(unsigned char *)(a2 + v4[13]);
  *(unsigned char *)(a1 + v4[14]) = *(unsigned char *)(a2 + v4[14]);
  *(unsigned char *)(a1 + v4[15]) = *(unsigned char *)(a2 + v4[15]);
  *(_OWORD *)(a1 + v4[16]) = *(_OWORD *)(a2 + v4[16]);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_35A17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_35A190);
}

uint64_t sub_35A190(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_35A200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_35A214);
}

uint64_t sub_35A214(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_35A288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_35A2A0(a1, a2, a3, (uint64_t (*)(uint64_t))sub_6F380);
}

uint64_t sub_35A2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_35A330(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    type metadata accessor for HeroBackgroundVariant();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v13 = (int *)sub_3D3860();
      uint64_t v14 = *((void *)v13 - 1);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v14 + 48))(a2, 1, v13))
      {
        uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
      }
      else
      {
        uint64_t v23 = a2[1];
        *a1 = *a2;
        a1[1] = v23;
        int v24 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v24 == 255)
        {
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        }
        else
        {
          uint64_t v25 = a2[2];
          uint64_t v26 = a2[3];
          sub_4C484(v25, v26, v24);
          a1[2] = v25;
          a1[3] = v26;
          *((unsigned char *)a1 + 32) = v24;
        }
        *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
        int v111 = (id *)(a2 + 7);
        int v112 = *((unsigned __int8 *)a2 + 64);
        if (v112 == 255)
        {
          a1[7] = (uint64_t)*v111;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        }
        else
        {
          id v113 = *v111;
          sub_4C49C(*v111, *((unsigned char *)a2 + 64));
          a1[7] = (uint64_t)v113;
          *((unsigned char *)a1 + 64) = v112;
        }
        int v114 = (id *)(a2 + 9);
        int v115 = *((unsigned __int8 *)a2 + 80);
        if (v115 == 255)
        {
          a1[9] = (uint64_t)*v114;
          *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
        }
        else
        {
          id v116 = *v114;
          sub_4C49C(*v114, *((unsigned char *)a2 + 80));
          a1[9] = (uint64_t)v116;
          *((unsigned char *)a1 + 80) = v115;
        }
        int v117 = (id *)(a2 + 11);
        int v118 = *((unsigned __int8 *)a2 + 96);
        if (v118 == 255)
        {
          a1[11] = (uint64_t)*v117;
          *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
        }
        else
        {
          id v119 = *v117;
          sub_4C49C(*v117, *((unsigned char *)a2 + 96));
          a1[11] = (uint64_t)v119;
          *((unsigned char *)a1 + 96) = v118;
        }
        int v120 = (id *)(a2 + 13);
        int v121 = *((unsigned __int8 *)a2 + 112);
        if (v121 == 255)
        {
          a1[13] = (uint64_t)*v120;
          *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        }
        else
        {
          id v122 = *v120;
          sub_4C49C(*v120, *((unsigned char *)a2 + 112));
          a1[13] = (uint64_t)v122;
          *((unsigned char *)a1 + 112) = v121;
        }
        id v123 = (id *)(a2 + 15);
        int v124 = *((unsigned __int8 *)a2 + 128);
        if (v124 == 255)
        {
          a1[15] = (uint64_t)*v123;
          *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
        }
        else
        {
          id v125 = *v123;
          sub_4C49C(*v123, *((unsigned char *)a2 + 128));
          a1[15] = (uint64_t)v125;
          *((unsigned char *)a1 + 128) = v124;
        }
        *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
        uint64_t v126 = v13[11];
        id v127 = (char *)a1 + v126;
        uint64_t v128 = (char *)a2 + v126;
        uint64_t v129 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v129 - 8) + 16))(v127, v128, v129);
        uint64_t v130 = v13[12];
        id v131 = (uint64_t *)((char *)a1 + v130);
        uint64_t v132 = (uint64_t *)((char *)a2 + v130);
        uint64_t v133 = v132[1];
        *id v131 = *v132;
        v131[1] = v133;
        *((unsigned char *)a1 + v13[13]) = *((unsigned char *)a2 + v13[13]);
        *((unsigned char *)a1 + v13[14]) = *((unsigned char *)a2 + v13[14]);
        *((unsigned char *)a1 + v13[15]) = *((unsigned char *)a2 + v13[15]);
        uint64_t v134 = v13[16];
        id v135 = (uint64_t *)((char *)a1 + v134);
        uint64_t v136 = (uint64_t *)((char *)a2 + v134);
        uint64_t v137 = v136[1];
        *id v135 = *v136;
        v135[1] = v137;
        uint64_t v138 = *(void (**)(uint64_t *, void, uint64_t, int *))(v14 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v138(a1, 0, 1, v13);
      }
      uint64_t v139 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
      *(uint64_t *)((char *)a1 + *(int *)(v139 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v139 + 48));
      swift_retain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v8 = a2[1];
      *a1 = *a2;
      a1[1] = v8;
      int v9 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v9 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v10 = a2[2];
        uint64_t v11 = a2[3];
        sub_4C484(v10, v11, v9);
        a1[2] = v10;
        a1[3] = v11;
        *((unsigned char *)a1 + 32) = v9;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      uint64_t v20 = (id *)(a2 + 7);
      int v21 = *((unsigned __int8 *)a2 + 64);
      if (v21 == 255)
      {
        a1[7] = (uint64_t)*v20;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      }
      else
      {
        id v22 = *v20;
        sub_4C49C(*v20, *((unsigned char *)a2 + 64));
        a1[7] = (uint64_t)v22;
        *((unsigned char *)a1 + 64) = v21;
      }
      uint64_t v30 = (id *)(a2 + 9);
      int v31 = *((unsigned __int8 *)a2 + 80);
      if (v31 == 255)
      {
        a1[9] = (uint64_t)*v30;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      }
      else
      {
        id v32 = *v30;
        sub_4C49C(*v30, *((unsigned char *)a2 + 80));
        a1[9] = (uint64_t)v32;
        *((unsigned char *)a1 + 80) = v31;
      }
      int v36 = (id *)(a2 + 11);
      int v37 = *((unsigned __int8 *)a2 + 96);
      if (v37 == 255)
      {
        a1[11] = (uint64_t)*v36;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
      }
      else
      {
        id v38 = *v36;
        sub_4C49C(*v36, *((unsigned char *)a2 + 96));
        a1[11] = (uint64_t)v38;
        *((unsigned char *)a1 + 96) = v37;
      }
      uint64_t v42 = (id *)(a2 + 13);
      int v43 = *((unsigned __int8 *)a2 + 112);
      if (v43 == 255)
      {
        a1[13] = (uint64_t)*v42;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      }
      else
      {
        id v44 = *v42;
        sub_4C49C(*v42, *((unsigned char *)a2 + 112));
        a1[13] = (uint64_t)v44;
        *((unsigned char *)a1 + 112) = v43;
      }
      id v48 = (id *)(a2 + 15);
      int v49 = *((unsigned __int8 *)a2 + 128);
      if (v49 == 255)
      {
        a1[15] = (uint64_t)*v48;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
      }
      else
      {
        id v50 = *v48;
        sub_4C49C(*v48, *((unsigned char *)a2 + 128));
        a1[15] = (uint64_t)v50;
        *((unsigned char *)a1 + 128) = v49;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v54 = (int *)sub_3D3860();
      uint64_t v55 = v54[11];
      long long v56 = (char *)a1 + v55;
      id v57 = (char *)a2 + v55;
      uint64_t v58 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v58 - 8) + 16))(v56, v57, v58);
      uint64_t v59 = v54[12];
      id v60 = (uint64_t *)((char *)a1 + v59);
      uint64_t v61 = (uint64_t *)((char *)a2 + v59);
      uint64_t v62 = v61[1];
      *id v60 = *v61;
      v60[1] = v62;
      *((unsigned char *)a1 + v54[13]) = *((unsigned char *)a2 + v54[13]);
      *((unsigned char *)a1 + v54[14]) = *((unsigned char *)a2 + v54[14]);
      *((unsigned char *)a1 + v54[15]) = *((unsigned char *)a2 + v54[15]);
      uint64_t v63 = v54[16];
      char v64 = (uint64_t *)((char *)a1 + v63);
      id v65 = (uint64_t *)((char *)a2 + v63);
      uint64_t v66 = v65[1];
      void *v64 = *v65;
      v64[1] = v66;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
      *(uint64_t *)((char *)a1 + *(int *)(v67 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v67 + 48));
      swift_retain();
    }
    else
    {
      uint64_t v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      int v17 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v17 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v18 = a2[2];
        uint64_t v19 = a2[3];
        sub_4C484(v18, v19, v17);
        a1[2] = v18;
        a1[3] = v19;
        *((unsigned char *)a1 + 32) = v17;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      int v27 = (id *)(a2 + 7);
      int v28 = *((unsigned __int8 *)a2 + 64);
      if (v28 == 255)
      {
        a1[7] = (uint64_t)*v27;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      }
      else
      {
        id v29 = *v27;
        sub_4C49C(*v27, *((unsigned char *)a2 + 64));
        a1[7] = (uint64_t)v29;
        *((unsigned char *)a1 + 64) = v28;
      }
      id v33 = (id *)(a2 + 9);
      int v34 = *((unsigned __int8 *)a2 + 80);
      if (v34 == 255)
      {
        a1[9] = (uint64_t)*v33;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      }
      else
      {
        id v35 = *v33;
        sub_4C49C(*v33, *((unsigned char *)a2 + 80));
        a1[9] = (uint64_t)v35;
        *((unsigned char *)a1 + 80) = v34;
      }
      int v39 = (id *)(a2 + 11);
      int v40 = *((unsigned __int8 *)a2 + 96);
      if (v40 == 255)
      {
        a1[11] = (uint64_t)*v39;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
      }
      else
      {
        id v41 = *v39;
        sub_4C49C(*v39, *((unsigned char *)a2 + 96));
        a1[11] = (uint64_t)v41;
        *((unsigned char *)a1 + 96) = v40;
      }
      uint64_t v45 = (id *)(a2 + 13);
      int v46 = *((unsigned __int8 *)a2 + 112);
      if (v46 == 255)
      {
        a1[13] = (uint64_t)*v45;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      }
      else
      {
        id v47 = *v45;
        sub_4C49C(*v45, *((unsigned char *)a2 + 112));
        a1[13] = (uint64_t)v47;
        *((unsigned char *)a1 + 112) = v46;
      }
      uint64_t v51 = (id *)(a2 + 15);
      int v52 = *((unsigned __int8 *)a2 + 128);
      if (v52 == 255)
      {
        a1[15] = (uint64_t)*v51;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
      }
      else
      {
        id v53 = *v51;
        sub_4C49C(*v51, *((unsigned char *)a2 + 128));
        a1[15] = (uint64_t)v53;
        *((unsigned char *)a1 + 128) = v52;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      int v68 = (int *)sub_3D3860();
      uint64_t v69 = v68[11];
      id v70 = (char *)a1 + v69;
      char v71 = (char *)a2 + v69;
      uint64_t v72 = sub_3D3750();
      uint64_t v150 = *(void (**)(char *, char *))(*(void *)(v72 - 8) + 16);
      uint64_t v151 = v72;
      v150(v70, v71);
      uint64_t v73 = v68[12];
      id v74 = (uint64_t *)((char *)a1 + v73);
      uint64_t v75 = (uint64_t *)((char *)a2 + v73);
      uint64_t v76 = v75[1];
      *id v74 = *v75;
      v74[1] = v76;
      *((unsigned char *)a1 + v68[13]) = *((unsigned char *)a2 + v68[13]);
      *((unsigned char *)a1 + v68[14]) = *((unsigned char *)a2 + v68[14]);
      *((unsigned char *)a1 + v68[15]) = *((unsigned char *)a2 + v68[15]);
      uint64_t v77 = v68[16];
      id v78 = (uint64_t *)((char *)a1 + v77);
      uint64_t v79 = (uint64_t *)((char *)a2 + v77);
      uint64_t v80 = v79[1];
      *id v78 = *v79;
      v78[1] = v80;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
      uint64_t v81 = *(int *)(v149 + 48);
      char v82 = (char *)a1 + v81;
      id v83 = (char *)a2 + v81;
      uint64_t v84 = *(uint64_t *)((char *)a2 + v81 + 8);
      *(void *)char v82 = *(uint64_t *)((char *)a2 + v81);
      *((void *)v82 + 1) = v84;
      int v85 = *((unsigned __int8 *)a2 + v81 + 32);
      swift_bridgeObjectRetain();
      if (v85 == 255)
      {
        *((_OWORD *)v82 + 1) = *((_OWORD *)v83 + 1);
        v82[32] = v83[32];
      }
      else
      {
        uint64_t v86 = *((void *)v83 + 2);
        uint64_t v87 = *((void *)v83 + 3);
        sub_4C484(v86, v87, v85);
        *((void *)v82 + 2) = v86;
        *((void *)v82 + 3) = v87;
        v82[32] = v85;
      }
      *(_OWORD *)(v82 + 40) = *(_OWORD *)(v83 + 40);
      long long v88 = (id *)(v83 + 56);
      int v89 = v83[64];
      if (v89 == 255)
      {
        *((void *)v82 + 7) = *v88;
        v82[64] = v83[64];
      }
      else
      {
        id v90 = *v88;
        sub_4C49C(*v88, v83[64]);
        *((void *)v82 + 7) = v90;
        v82[64] = v89;
      }
      char v91 = (id *)(v83 + 72);
      int v92 = v83[80];
      if (v92 == 255)
      {
        *((void *)v82 + 9) = *v91;
        v82[80] = v83[80];
      }
      else
      {
        id v93 = *v91;
        sub_4C49C(*v91, v83[80]);
        *((void *)v82 + 9) = v93;
        v82[80] = v92;
      }
      int v94 = (id *)(v83 + 88);
      int v95 = v83[96];
      if (v95 == 255)
      {
        *((void *)v82 + 11) = *v94;
        v82[96] = v83[96];
      }
      else
      {
        id v96 = *v94;
        sub_4C49C(*v94, v83[96]);
        *((void *)v82 + 11) = v96;
        v82[96] = v95;
      }
      int v97 = (id *)(v83 + 104);
      int v98 = v83[112];
      if (v98 == 255)
      {
        *((void *)v82 + 13) = *v97;
        v82[112] = v83[112];
      }
      else
      {
        id v99 = *v97;
        sub_4C49C(*v97, v83[112]);
        *((void *)v82 + 13) = v99;
        v82[112] = v98;
      }
      char v100 = (id *)(v83 + 120);
      int v101 = v83[128];
      if (v101 == 255)
      {
        *((void *)v82 + 15) = *v100;
        v82[128] = v83[128];
      }
      else
      {
        id v102 = *v100;
        sub_4C49C(*v100, v83[128]);
        *((void *)v82 + 15) = v102;
        v82[128] = v101;
      }
      v82[129] = v83[129];
      ((void (*)(char *, char *, uint64_t))v150)(&v82[v68[11]], &v83[v68[11]], v151);
      uint64_t v103 = v68[12];
      uint64_t v104 = &v82[v103];
      uint64_t v105 = &v83[v103];
      uint64_t v106 = *((void *)v105 + 1);
      *(void *)uint64_t v104 = *(void *)v105;
      *((void *)v104 + 1) = v106;
      v82[v68[13]] = v83[v68[13]];
      v82[v68[14]] = v83[v68[14]];
      v82[v68[15]] = v83[v68[15]];
      uint64_t v107 = v68[16];
      id v108 = &v82[v107];
      uint64_t v109 = &v83[v107];
      uint64_t v110 = *((void *)v109 + 1);
      *(void *)id v108 = *(void *)v109;
      *((void *)v108 + 1) = v110;
      *(uint64_t *)((char *)a1 + *(int *)(v149 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v149 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v140 = *(int *)(a3 + 20);
    uint64_t v141 = (char *)a1 + v140;
    uint64_t v142 = (char *)a2 + v140;
    uint64_t v143 = sub_3D6380();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v143 - 8) + 16))(v141, v142, v143);
    uint64_t v144 = *(int *)(a3 + 24);
    uint64_t v145 = (uint64_t *)((char *)a1 + v144);
    uint64_t v146 = (uint64_t *)((char *)a2 + v144);
    uint64_t v147 = v146[1];
    *uint64_t v145 = *v146;
    v145[1] = v147;
  }
  swift_retain();
  return a1;
}

uint64_t sub_35AEB4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for HeroBackgroundVariant();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v22 = sub_3D3860();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 48))(a1, 1, v22))
    {
      swift_bridgeObjectRelease();
      int v23 = *(unsigned __int8 *)(a1 + 32);
      if (v23 != 255) {
        sub_49E54(*(void *)(a1 + 16), *(void *)(a1 + 24), v23);
      }
      int v24 = *(unsigned __int8 *)(a1 + 64);
      if (v24 != 255) {
        sub_4C6F0(*(id *)(a1 + 56), v24);
      }
      int v25 = *(unsigned __int8 *)(a1 + 80);
      if (v25 != 255) {
        sub_4C6F0(*(id *)(a1 + 72), v25);
      }
      int v26 = *(unsigned __int8 *)(a1 + 96);
      if (v26 != 255) {
        sub_4C6F0(*(id *)(a1 + 88), v26);
      }
      int v27 = *(unsigned __int8 *)(a1 + 112);
      if (v27 != 255) {
        sub_4C6F0(*(id *)(a1 + 104), v27);
      }
      int v28 = *(unsigned __int8 *)(a1 + 128);
      if (v28 != 255) {
        sub_4C6F0(*(id *)(a1 + 120), v28);
      }
      uint64_t v29 = a1 + *(int *)(v22 + 44);
      uint64_t v30 = sub_3D3750();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    int v31 = qword_4BEDA8;
    goto LABEL_57;
  }
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    int v32 = *(unsigned __int8 *)(a1 + 32);
    if (v32 != 255) {
      sub_49E54(*(void *)(a1 + 16), *(void *)(a1 + 24), v32);
    }
    int v33 = *(unsigned __int8 *)(a1 + 64);
    if (v33 != 255) {
      sub_4C6F0(*(id *)(a1 + 56), v33);
    }
    int v34 = *(unsigned __int8 *)(a1 + 80);
    if (v34 != 255) {
      sub_4C6F0(*(id *)(a1 + 72), v34);
    }
    int v35 = *(unsigned __int8 *)(a1 + 96);
    if (v35 != 255) {
      sub_4C6F0(*(id *)(a1 + 88), v35);
    }
    int v36 = *(unsigned __int8 *)(a1 + 112);
    if (v36 != 255) {
      sub_4C6F0(*(id *)(a1 + 104), v36);
    }
    int v37 = *(unsigned __int8 *)(a1 + 128);
    if (v37 != 255) {
      sub_4C6F0(*(id *)(a1 + 120), v37);
    }
    uint64_t v38 = a1 + *(int *)(sub_3D3860() + 44);
    uint64_t v39 = sub_3D3750();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int v31 = &qword_4BEDA0;
LABEL_57:
    __swift_instantiateConcreteTypeFromMangledName(v31);
    goto LABEL_58;
  }
  if (EnumCaseMultiPayload) {
    goto LABEL_59;
  }
  swift_bridgeObjectRelease();
  int v5 = *(unsigned __int8 *)(a1 + 32);
  if (v5 != 255) {
    sub_49E54(*(void *)(a1 + 16), *(void *)(a1 + 24), v5);
  }
  int v6 = *(unsigned __int8 *)(a1 + 64);
  if (v6 != 255) {
    sub_4C6F0(*(id *)(a1 + 56), v6);
  }
  int v7 = *(unsigned __int8 *)(a1 + 80);
  if (v7 != 255) {
    sub_4C6F0(*(id *)(a1 + 72), v7);
  }
  int v8 = *(unsigned __int8 *)(a1 + 96);
  if (v8 != 255) {
    sub_4C6F0(*(id *)(a1 + 88), v8);
  }
  int v9 = *(unsigned __int8 *)(a1 + 112);
  if (v9 != 255) {
    sub_4C6F0(*(id *)(a1 + 104), v9);
  }
  int v10 = *(unsigned __int8 *)(a1 + 128);
  if (v10 != 255) {
    sub_4C6F0(*(id *)(a1 + 120), v10);
  }
  uint64_t v11 = sub_3D3860();
  uint64_t v12 = a1 + *(int *)(v11 + 44);
  uint64_t v13 = sub_3D3750();
  uint64_t v14 = *(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8);
  v14(v12, v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BED98) + 48);
  swift_bridgeObjectRelease();
  int v16 = *(unsigned __int8 *)(v15 + 32);
  if (v16 != 255) {
    sub_49E54(*(void *)(v15 + 16), *(void *)(v15 + 24), v16);
  }
  int v17 = *(unsigned __int8 *)(v15 + 64);
  if (v17 != 255) {
    sub_4C6F0(*(id *)(v15 + 56), v17);
  }
  int v18 = *(unsigned __int8 *)(v15 + 80);
  if (v18 != 255) {
    sub_4C6F0(*(id *)(v15 + 72), v18);
  }
  int v19 = *(unsigned __int8 *)(v15 + 96);
  if (v19 != 255) {
    sub_4C6F0(*(id *)(v15 + 88), v19);
  }
  int v20 = *(unsigned __int8 *)(v15 + 112);
  if (v20 != 255) {
    sub_4C6F0(*(id *)(v15 + 104), v20);
  }
  int v21 = *(unsigned __int8 *)(v15 + 128);
  if (v21 != 255) {
    sub_4C6F0(*(id *)(v15 + 120), v21);
  }
  v14(v15 + *(int *)(v11 + 44), v13);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_58:
  swift_release();
LABEL_59:
  uint64_t v40 = a1 + *(int *)(a2 + 20);
  uint64_t v41 = sub_3D6380();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);

  return swift_release();
}

void *sub_35B374(void *a1, void *a2, uint64_t a3)
{
  type metadata accessor for HeroBackgroundVariant();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v11 = (int *)sub_3D3860();
    uint64_t v12 = *((void *)v11 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v12 + 48))(a2, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
      memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      uint64_t v21 = a2[1];
      *a1 = *a2;
      a1[1] = v21;
      int v22 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v22 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v23 = a2[2];
        uint64_t v24 = a2[3];
        sub_4C484(v23, v24, v22);
        a1[2] = v23;
        a1[3] = v24;
        *((unsigned char *)a1 + 32) = v22;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      uint64_t v110 = (id *)(a2 + 7);
      int v111 = *((unsigned __int8 *)a2 + 64);
      if (v111 == 255)
      {
        a1[7] = *v110;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      }
      else
      {
        id v112 = *v110;
        sub_4C49C(*v110, *((unsigned char *)a2 + 64));
        a1[7] = v112;
        *((unsigned char *)a1 + 64) = v111;
      }
      id v113 = (id *)(a2 + 9);
      int v114 = *((unsigned __int8 *)a2 + 80);
      if (v114 == 255)
      {
        a1[9] = *v113;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      }
      else
      {
        id v115 = *v113;
        sub_4C49C(*v113, *((unsigned char *)a2 + 80));
        a1[9] = v115;
        *((unsigned char *)a1 + 80) = v114;
      }
      id v116 = (id *)(a2 + 11);
      int v117 = *((unsigned __int8 *)a2 + 96);
      if (v117 == 255)
      {
        a1[11] = *v116;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
      }
      else
      {
        id v118 = *v116;
        sub_4C49C(*v116, *((unsigned char *)a2 + 96));
        a1[11] = v118;
        *((unsigned char *)a1 + 96) = v117;
      }
      id v119 = (id *)(a2 + 13);
      int v120 = *((unsigned __int8 *)a2 + 112);
      if (v120 == 255)
      {
        a1[13] = *v119;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      }
      else
      {
        id v121 = *v119;
        sub_4C49C(*v119, *((unsigned char *)a2 + 112));
        a1[13] = v121;
        *((unsigned char *)a1 + 112) = v120;
      }
      id v122 = (id *)(a2 + 15);
      int v123 = *((unsigned __int8 *)a2 + 128);
      if (v123 == 255)
      {
        a1[15] = *v122;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
      }
      else
      {
        id v124 = *v122;
        sub_4C49C(*v122, *((unsigned char *)a2 + 128));
        a1[15] = v124;
        *((unsigned char *)a1 + 128) = v123;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v125 = v11[11];
      uint64_t v126 = (char *)a1 + v125;
      id v127 = (char *)a2 + v125;
      uint64_t v128 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v128 - 8) + 16))(v126, v127, v128);
      uint64_t v129 = v11[12];
      uint64_t v130 = (void *)((char *)a1 + v129);
      id v131 = (void *)((char *)a2 + v129);
      uint64_t v132 = v131[1];
      *uint64_t v130 = *v131;
      v130[1] = v132;
      *((unsigned char *)a1 + v11[13]) = *((unsigned char *)a2 + v11[13]);
      *((unsigned char *)a1 + v11[14]) = *((unsigned char *)a2 + v11[14]);
      *((unsigned char *)a1 + v11[15]) = *((unsigned char *)a2 + v11[15]);
      uint64_t v133 = v11[16];
      uint64_t v134 = (void *)((char *)a1 + v133);
      id v135 = (void *)((char *)a2 + v133);
      uint64_t v136 = v135[1];
      void *v134 = *v135;
      v134[1] = v136;
      uint64_t v137 = *(void (**)(void *, void, uint64_t, int *))(v12 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v137(a1, 0, 1, v11);
    }
    uint64_t v138 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
    *(void *)((char *)a1 + *(int *)(v138 + 48)) = *(void *)((char *)a2 + *(int *)(v138 + 48));
    swift_retain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    int v8 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v8 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    }
    else
    {
      uint64_t v9 = a2[2];
      uint64_t v10 = a2[3];
      sub_4C484(v9, v10, v8);
      a1[2] = v9;
      a1[3] = v10;
      *((unsigned char *)a1 + 32) = v8;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    int v18 = (id *)(a2 + 7);
    int v19 = *((unsigned __int8 *)a2 + 64);
    if (v19 == 255)
    {
      a1[7] = *v18;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    }
    else
    {
      id v20 = *v18;
      sub_4C49C(*v18, *((unsigned char *)a2 + 64));
      a1[7] = v20;
      *((unsigned char *)a1 + 64) = v19;
    }
    int v28 = (id *)(a2 + 9);
    int v29 = *((unsigned __int8 *)a2 + 80);
    if (v29 == 255)
    {
      a1[9] = *v28;
      *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    }
    else
    {
      id v30 = *v28;
      sub_4C49C(*v28, *((unsigned char *)a2 + 80));
      a1[9] = v30;
      *((unsigned char *)a1 + 80) = v29;
    }
    int v34 = (id *)(a2 + 11);
    int v35 = *((unsigned __int8 *)a2 + 96);
    if (v35 == 255)
    {
      a1[11] = *v34;
      *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
    }
    else
    {
      id v36 = *v34;
      sub_4C49C(*v34, *((unsigned char *)a2 + 96));
      a1[11] = v36;
      *((unsigned char *)a1 + 96) = v35;
    }
    uint64_t v40 = (id *)(a2 + 13);
    int v41 = *((unsigned __int8 *)a2 + 112);
    if (v41 == 255)
    {
      a1[13] = *v40;
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
    }
    else
    {
      id v42 = *v40;
      sub_4C49C(*v40, *((unsigned char *)a2 + 112));
      a1[13] = v42;
      *((unsigned char *)a1 + 112) = v41;
    }
    int v46 = (id *)(a2 + 15);
    int v47 = *((unsigned __int8 *)a2 + 128);
    if (v47 == 255)
    {
      a1[15] = *v46;
      *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
    }
    else
    {
      id v48 = *v46;
      sub_4C49C(*v46, *((unsigned char *)a2 + 128));
      a1[15] = v48;
      *((unsigned char *)a1 + 128) = v47;
    }
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    int v52 = (int *)sub_3D3860();
    uint64_t v53 = v52[11];
    uint64_t v54 = (char *)a1 + v53;
    uint64_t v55 = (char *)a2 + v53;
    uint64_t v56 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v56 - 8) + 16))(v54, v55, v56);
    uint64_t v57 = v52[12];
    uint64_t v58 = (void *)((char *)a1 + v57);
    uint64_t v59 = (void *)((char *)a2 + v57);
    uint64_t v60 = v59[1];
    void *v58 = *v59;
    v58[1] = v60;
    *((unsigned char *)a1 + v52[13]) = *((unsigned char *)a2 + v52[13]);
    *((unsigned char *)a1 + v52[14]) = *((unsigned char *)a2 + v52[14]);
    *((unsigned char *)a1 + v52[15]) = *((unsigned char *)a2 + v52[15]);
    uint64_t v61 = v52[16];
    uint64_t v62 = (void *)((char *)a1 + v61);
    uint64_t v63 = (void *)((char *)a2 + v61);
    uint64_t v64 = v63[1];
    *uint64_t v62 = *v63;
    v62[1] = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
    *(void *)((char *)a1 + *(int *)(v65 + 48)) = *(void *)((char *)a2 + *(int *)(v65 + 48));
    swift_retain();
  }
  else
  {
    uint64_t v14 = a2[1];
    *a1 = *a2;
    a1[1] = v14;
    int v15 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v15 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    }
    else
    {
      uint64_t v16 = a2[2];
      uint64_t v17 = a2[3];
      sub_4C484(v16, v17, v15);
      a1[2] = v16;
      a1[3] = v17;
      *((unsigned char *)a1 + 32) = v15;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    int v25 = (id *)(a2 + 7);
    int v26 = *((unsigned __int8 *)a2 + 64);
    if (v26 == 255)
    {
      a1[7] = *v25;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    }
    else
    {
      id v27 = *v25;
      sub_4C49C(*v25, *((unsigned char *)a2 + 64));
      a1[7] = v27;
      *((unsigned char *)a1 + 64) = v26;
    }
    int v31 = (id *)(a2 + 9);
    int v32 = *((unsigned __int8 *)a2 + 80);
    if (v32 == 255)
    {
      a1[9] = *v31;
      *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    }
    else
    {
      id v33 = *v31;
      sub_4C49C(*v31, *((unsigned char *)a2 + 80));
      a1[9] = v33;
      *((unsigned char *)a1 + 80) = v32;
    }
    int v37 = (id *)(a2 + 11);
    int v38 = *((unsigned __int8 *)a2 + 96);
    if (v38 == 255)
    {
      a1[11] = *v37;
      *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
    }
    else
    {
      id v39 = *v37;
      sub_4C49C(*v37, *((unsigned char *)a2 + 96));
      a1[11] = v39;
      *((unsigned char *)a1 + 96) = v38;
    }
    int v43 = (id *)(a2 + 13);
    int v44 = *((unsigned __int8 *)a2 + 112);
    if (v44 == 255)
    {
      a1[13] = *v43;
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
    }
    else
    {
      id v45 = *v43;
      sub_4C49C(*v43, *((unsigned char *)a2 + 112));
      a1[13] = v45;
      *((unsigned char *)a1 + 112) = v44;
    }
    int v49 = (id *)(a2 + 15);
    int v50 = *((unsigned __int8 *)a2 + 128);
    if (v50 == 255)
    {
      a1[15] = *v49;
      *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
    }
    else
    {
      id v51 = *v49;
      sub_4C49C(*v49, v50);
      a1[15] = v51;
      *((unsigned char *)a1 + 128) = v50;
    }
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v66 = (int *)sub_3D3860();
    uint64_t v67 = v66[11];
    int v68 = (char *)a1 + v67;
    uint64_t v69 = (char *)a2 + v67;
    uint64_t v70 = sub_3D3750();
    uint64_t v149 = *(void (**)(char *, char *, uint64_t))(*(void *)(v70 - 8) + 16);
    v149(v68, v69, v70);
    uint64_t v71 = v66[12];
    uint64_t v72 = (void *)((char *)a1 + v71);
    uint64_t v73 = (void *)((char *)a2 + v71);
    uint64_t v74 = v73[1];
    void *v72 = *v73;
    v72[1] = v74;
    *((unsigned char *)a1 + v66[13]) = *((unsigned char *)a2 + v66[13]);
    *((unsigned char *)a1 + v66[14]) = *((unsigned char *)a2 + v66[14]);
    *((unsigned char *)a1 + v66[15]) = *((unsigned char *)a2 + v66[15]);
    uint64_t v75 = v66[16];
    uint64_t v76 = (void *)((char *)a1 + v75);
    uint64_t v77 = (void *)((char *)a2 + v75);
    uint64_t v78 = v77[1];
    *uint64_t v76 = *v77;
    v76[1] = v78;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
    uint64_t v79 = *(int *)(v148 + 48);
    uint64_t v80 = (char *)a1 + v79;
    uint64_t v81 = (char *)a2 + v79;
    uint64_t v82 = *(void *)((char *)a2 + v79 + 8);
    *(void *)uint64_t v80 = *(void *)((char *)a2 + v79);
    *((void *)v80 + 1) = v82;
    int v83 = *((unsigned __int8 *)a2 + v79 + 32);
    swift_bridgeObjectRetain();
    if (v83 == 255)
    {
      *((_OWORD *)v80 + 1) = *((_OWORD *)v81 + 1);
      v80[32] = v81[32];
    }
    else
    {
      uint64_t v84 = a3;
      uint64_t v85 = *((void *)v81 + 2);
      uint64_t v86 = *((void *)v81 + 3);
      sub_4C484(v85, v86, v83);
      *((void *)v80 + 2) = v85;
      *((void *)v80 + 3) = v86;
      a3 = v84;
      v80[32] = v83;
    }
    *(_OWORD *)(v80 + 40) = *(_OWORD *)(v81 + 40);
    uint64_t v87 = (id *)(v81 + 56);
    int v88 = v81[64];
    if (v88 == 255)
    {
      *((void *)v80 + 7) = *v87;
      v80[64] = v81[64];
    }
    else
    {
      id v89 = *v87;
      sub_4C49C(*v87, v81[64]);
      *((void *)v80 + 7) = v89;
      v80[64] = v88;
    }
    id v90 = (id *)(v81 + 72);
    int v91 = v81[80];
    if (v91 == 255)
    {
      *((void *)v80 + 9) = *v90;
      v80[80] = v81[80];
    }
    else
    {
      id v92 = *v90;
      sub_4C49C(*v90, v81[80]);
      *((void *)v80 + 9) = v92;
      v80[80] = v91;
    }
    id v93 = (id *)(v81 + 88);
    int v94 = v81[96];
    if (v94 == 255)
    {
      *((void *)v80 + 11) = *v93;
      v80[96] = v81[96];
    }
    else
    {
      id v95 = *v93;
      sub_4C49C(*v93, v81[96]);
      *((void *)v80 + 11) = v95;
      v80[96] = v94;
    }
    id v96 = (id *)(v81 + 104);
    int v97 = v81[112];
    if (v97 == 255)
    {
      *((void *)v80 + 13) = *v96;
      v80[112] = v81[112];
    }
    else
    {
      id v98 = *v96;
      sub_4C49C(*v96, v81[112]);
      *((void *)v80 + 13) = v98;
      v80[112] = v97;
    }
    id v99 = (id *)(v81 + 120);
    int v100 = v81[128];
    if (v100 == 255)
    {
      *((void *)v80 + 15) = *v99;
      v80[128] = v81[128];
    }
    else
    {
      id v101 = *v99;
      sub_4C49C(*v99, v81[128]);
      *((void *)v80 + 15) = v101;
      v80[128] = v100;
    }
    v80[129] = v81[129];
    v149(&v80[v66[11]], &v81[v66[11]], v70);
    uint64_t v102 = v66[12];
    uint64_t v103 = &v80[v102];
    uint64_t v104 = &v81[v102];
    uint64_t v105 = *((void *)v104 + 1);
    *(void *)uint64_t v103 = *(void *)v104;
    *((void *)v103 + 1) = v105;
    v80[v66[13]] = v81[v66[13]];
    v80[v66[14]] = v81[v66[14]];
    v80[v66[15]] = v81[v66[15]];
    uint64_t v106 = v66[16];
    uint64_t v107 = &v80[v106];
    id v108 = &v81[v106];
    uint64_t v109 = *((void *)v108 + 1);
    *(void *)uint64_t v107 = *(void *)v108;
    *((void *)v107 + 1) = v109;
    *(void *)((char *)a1 + *(int *)(v148 + 64)) = *(void *)((char *)a2 + *(int *)(v148 + 64));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v139 = *(int *)(a3 + 20);
  uint64_t v140 = (char *)a1 + v139;
  uint64_t v141 = (char *)a2 + v139;
  uint64_t v142 = sub_3D6380();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v142 - 8) + 16))(v140, v141, v142);
  uint64_t v143 = *(int *)(a3 + 24);
  uint64_t v144 = (void *)((char *)a1 + v143);
  uint64_t v145 = (void *)((char *)a2 + v143);
  uint64_t v146 = v145[1];
  *uint64_t v144 = *v145;
  v144[1] = v146;
  swift_retain();
  return a1;
}

void *sub_35BEB0(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_35FE64((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
    type metadata accessor for HeroBackgroundVariant();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v10 = (int *)sub_3D3860();
      uint64_t v11 = *((void *)v10 - 1);
      if ((*(unsigned int (**)(void *, uint64_t, int *))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(a1, a2, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        *a1 = *a2;
        a1[1] = a2[1];
        int v20 = *((unsigned __int8 *)a2 + 32);
        swift_bridgeObjectRetain();
        if (v20 == 255)
        {
          long long v117 = *((_OWORD *)a2 + 1);
          *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
          *((_OWORD *)a1 + 1) = v117;
        }
        else
        {
          uint64_t v21 = a2[2];
          uint64_t v22 = a2[3];
          sub_4C484(v21, v22, v20);
          a1[2] = v21;
          a1[3] = v22;
          *((unsigned char *)a1 + 32) = v20;
        }
        a1[5] = a2[5];
        a1[6] = a2[6];
        id v118 = (id *)(a2 + 7);
        int v119 = *((unsigned __int8 *)a2 + 64);
        if (v119 == 255)
        {
          id v121 = *v118;
          *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
          a1[7] = v121;
        }
        else
        {
          id v120 = *v118;
          sub_4C49C(*v118, *((unsigned char *)a2 + 64));
          a1[7] = v120;
          *((unsigned char *)a1 + 64) = v119;
        }
        id v122 = (id *)(a2 + 9);
        int v123 = *((unsigned __int8 *)a2 + 80);
        if (v123 == 255)
        {
          id v125 = *v122;
          *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
          a1[9] = v125;
        }
        else
        {
          id v124 = *v122;
          sub_4C49C(*v122, *((unsigned char *)a2 + 80));
          a1[9] = v124;
          *((unsigned char *)a1 + 80) = v123;
        }
        uint64_t v126 = (id *)(a2 + 11);
        int v127 = *((unsigned __int8 *)a2 + 96);
        if (v127 == 255)
        {
          id v129 = *v126;
          *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
          a1[11] = v129;
        }
        else
        {
          id v128 = *v126;
          sub_4C49C(*v126, *((unsigned char *)a2 + 96));
          a1[11] = v128;
          *((unsigned char *)a1 + 96) = v127;
        }
        uint64_t v130 = (id *)(a2 + 13);
        int v131 = *((unsigned __int8 *)a2 + 112);
        if (v131 == 255)
        {
          id v133 = *v130;
          *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
          a1[13] = v133;
        }
        else
        {
          id v132 = *v130;
          sub_4C49C(*v130, *((unsigned char *)a2 + 112));
          a1[13] = v132;
          *((unsigned char *)a1 + 112) = v131;
        }
        uint64_t v134 = (id *)(a2 + 15);
        int v135 = *((unsigned __int8 *)a2 + 128);
        if (v135 == 255)
        {
          id v137 = *v134;
          *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
          a1[15] = v137;
        }
        else
        {
          id v136 = *v134;
          sub_4C49C(*v134, *((unsigned char *)a2 + 128));
          a1[15] = v136;
          *((unsigned char *)a1 + 128) = v135;
        }
        *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
        uint64_t v138 = v10[11];
        uint64_t v139 = (char *)a1 + v138;
        uint64_t v140 = (char *)a2 + v138;
        uint64_t v141 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v141 - 8) + 16))(v139, v140, v141);
        uint64_t v142 = v10[12];
        uint64_t v143 = (void *)((char *)a1 + v142);
        uint64_t v144 = (void *)((char *)a2 + v142);
        *uint64_t v143 = *v144;
        v143[1] = v144[1];
        *((unsigned char *)a1 + v10[13]) = *((unsigned char *)a2 + v10[13]);
        *((unsigned char *)a1 + v10[14]) = *((unsigned char *)a2 + v10[14]);
        *((unsigned char *)a1 + v10[15]) = *((unsigned char *)a2 + v10[15]);
        uint64_t v145 = v10[16];
        uint64_t v146 = (void *)((char *)a1 + v145);
        uint64_t v147 = (void *)((char *)a2 + v145);
        *uint64_t v146 = *v147;
        v146[1] = v147[1];
        uint64_t v148 = *(void (**)(void *, void, uint64_t, int *))(v11 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v148(a1, 0, 1, v10);
      }
      uint64_t v149 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
      *(void *)((char *)a1 + *(int *)(v149 + 48)) = *(void *)((char *)a2 + *(int *)(v149 + 48));
      swift_retain();
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      int v7 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v7 == 255)
      {
        long long v16 = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        *((_OWORD *)a1 + 1) = v16;
      }
      else
      {
        uint64_t v8 = a2[2];
        uint64_t v9 = a2[3];
        sub_4C484(v8, v9, v7);
        a1[2] = v8;
        a1[3] = v9;
        *((unsigned char *)a1 + 32) = v7;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      uint64_t v17 = (id *)(a2 + 7);
      int v18 = *((unsigned __int8 *)a2 + 64);
      if (v18 == 255)
      {
        id v27 = *v17;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        a1[7] = v27;
      }
      else
      {
        id v19 = *v17;
        sub_4C49C(*v17, *((unsigned char *)a2 + 64));
        a1[7] = v19;
        *((unsigned char *)a1 + 64) = v18;
      }
      int v28 = (id *)(a2 + 9);
      int v29 = *((unsigned __int8 *)a2 + 80);
      if (v29 == 255)
      {
        id v35 = *v28;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
        a1[9] = v35;
      }
      else
      {
        id v30 = *v28;
        sub_4C49C(*v28, *((unsigned char *)a2 + 80));
        a1[9] = v30;
        *((unsigned char *)a1 + 80) = v29;
      }
      id v36 = (id *)(a2 + 11);
      int v37 = *((unsigned __int8 *)a2 + 96);
      if (v37 == 255)
      {
        id v43 = *v36;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
        a1[11] = v43;
      }
      else
      {
        id v38 = *v36;
        sub_4C49C(*v36, *((unsigned char *)a2 + 96));
        a1[11] = v38;
        *((unsigned char *)a1 + 96) = v37;
      }
      int v44 = (id *)(a2 + 13);
      int v45 = *((unsigned __int8 *)a2 + 112);
      if (v45 == 255)
      {
        id v51 = *v44;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        a1[13] = v51;
      }
      else
      {
        id v46 = *v44;
        sub_4C49C(*v44, *((unsigned char *)a2 + 112));
        a1[13] = v46;
        *((unsigned char *)a1 + 112) = v45;
      }
      int v52 = (id *)(a2 + 15);
      int v53 = *((unsigned __int8 *)a2 + 128);
      if (v53 == 255)
      {
        id v59 = *v52;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
        a1[15] = v59;
      }
      else
      {
        id v54 = *v52;
        sub_4C49C(*v52, *((unsigned char *)a2 + 128));
        a1[15] = v54;
        *((unsigned char *)a1 + 128) = v53;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v60 = (int *)sub_3D3860();
      uint64_t v61 = v60[11];
      uint64_t v62 = (char *)a1 + v61;
      uint64_t v63 = (char *)a2 + v61;
      uint64_t v64 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v64 - 8) + 16))(v62, v63, v64);
      uint64_t v65 = v60[12];
      uint64_t v66 = (void *)((char *)a1 + v65);
      uint64_t v67 = (void *)((char *)a2 + v65);
      *uint64_t v66 = *v67;
      v66[1] = v67[1];
      *((unsigned char *)a1 + v60[13]) = *((unsigned char *)a2 + v60[13]);
      *((unsigned char *)a1 + v60[14]) = *((unsigned char *)a2 + v60[14]);
      *((unsigned char *)a1 + v60[15]) = *((unsigned char *)a2 + v60[15]);
      uint64_t v68 = v60[16];
      uint64_t v69 = (void *)((char *)a1 + v68);
      uint64_t v70 = (void *)((char *)a2 + v68);
      *uint64_t v69 = *v70;
      v69[1] = v70[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
      *(void *)((char *)a1 + *(int *)(v71 + 48)) = *(void *)((char *)a2 + *(int *)(v71 + 48));
      swift_retain();
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      int v13 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v13 == 255)
      {
        long long v23 = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        *((_OWORD *)a1 + 1) = v23;
      }
      else
      {
        uint64_t v14 = a2[2];
        uint64_t v15 = a2[3];
        sub_4C484(v14, v15, v13);
        a1[2] = v14;
        a1[3] = v15;
        *((unsigned char *)a1 + 32) = v13;
      }
      a1[5] = a2[5];
      a1[6] = a2[6];
      uint64_t v24 = (id *)(a2 + 7);
      int v25 = *((unsigned __int8 *)a2 + 64);
      if (v25 == 255)
      {
        id v31 = *v24;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        a1[7] = v31;
      }
      else
      {
        id v26 = *v24;
        sub_4C49C(*v24, *((unsigned char *)a2 + 64));
        a1[7] = v26;
        *((unsigned char *)a1 + 64) = v25;
      }
      int v32 = (id *)(a2 + 9);
      int v33 = *((unsigned __int8 *)a2 + 80);
      if (v33 == 255)
      {
        id v39 = *v32;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
        a1[9] = v39;
      }
      else
      {
        id v34 = *v32;
        sub_4C49C(*v32, *((unsigned char *)a2 + 80));
        a1[9] = v34;
        *((unsigned char *)a1 + 80) = v33;
      }
      uint64_t v40 = (id *)(a2 + 11);
      int v41 = *((unsigned __int8 *)a2 + 96);
      if (v41 == 255)
      {
        id v47 = *v40;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
        a1[11] = v47;
      }
      else
      {
        id v42 = *v40;
        sub_4C49C(*v40, *((unsigned char *)a2 + 96));
        a1[11] = v42;
        *((unsigned char *)a1 + 96) = v41;
      }
      id v48 = (id *)(a2 + 13);
      int v49 = *((unsigned __int8 *)a2 + 112);
      if (v49 == 255)
      {
        id v55 = *v48;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
        a1[13] = v55;
      }
      else
      {
        id v50 = *v48;
        sub_4C49C(*v48, *((unsigned char *)a2 + 112));
        a1[13] = v50;
        *((unsigned char *)a1 + 112) = v49;
      }
      uint64_t v56 = (id *)(a2 + 15);
      int v57 = *((unsigned __int8 *)a2 + 128);
      if (v57 == 255)
      {
        id v72 = *v56;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
        a1[15] = v72;
      }
      else
      {
        id v58 = *v56;
        sub_4C49C(*v56, *((unsigned char *)a2 + 128));
        a1[15] = v58;
        *((unsigned char *)a1 + 128) = v57;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v73 = (int *)sub_3D3860();
      uint64_t v74 = v73[11];
      uint64_t v75 = (char *)a1 + v74;
      uint64_t v76 = (char *)a2 + v74;
      uint64_t v77 = sub_3D3750();
      uint64_t v159 = *(void (**)(char *, char *))(*(void *)(v77 - 8) + 16);
      uint64_t v160 = v77;
      v159(v75, v76);
      uint64_t v78 = v73[12];
      uint64_t v79 = (void *)((char *)a1 + v78);
      uint64_t v80 = (void *)((char *)a2 + v78);
      *uint64_t v79 = *v80;
      v79[1] = v80[1];
      *((unsigned char *)a1 + v73[13]) = *((unsigned char *)a2 + v73[13]);
      *((unsigned char *)a1 + v73[14]) = *((unsigned char *)a2 + v73[14]);
      *((unsigned char *)a1 + v73[15]) = *((unsigned char *)a2 + v73[15]);
      uint64_t v81 = v73[16];
      uint64_t v82 = (void *)((char *)a1 + v81);
      int v83 = (void *)((char *)a2 + v81);
      *uint64_t v82 = *v83;
      v82[1] = v83[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
      uint64_t v84 = *(int *)(v158 + 48);
      uint64_t v85 = (char *)a1 + v84;
      uint64_t v86 = (char *)a2 + v84;
      *(void *)uint64_t v85 = *(void *)((char *)a2 + v84);
      *((void *)v85 + 1) = *(void *)((char *)a2 + v84 + 8);
      int v87 = *((unsigned __int8 *)a2 + v84 + 32);
      swift_bridgeObjectRetain();
      if (v87 == 255)
      {
        long long v90 = *((_OWORD *)v86 + 1);
        v85[32] = v86[32];
        *((_OWORD *)v85 + 1) = v90;
      }
      else
      {
        uint64_t v88 = *((void *)v86 + 2);
        uint64_t v89 = *((void *)v86 + 3);
        sub_4C484(v88, v89, v87);
        *((void *)v85 + 2) = v88;
        *((void *)v85 + 3) = v89;
        v85[32] = v87;
      }
      *((void *)v85 + 5) = *((void *)v86 + 5);
      *((void *)v85 + 6) = *((void *)v86 + 6);
      int v91 = (id *)(v86 + 56);
      int v92 = v86[64];
      if (v92 == 255)
      {
        id v94 = *v91;
        v85[64] = v86[64];
        *((void *)v85 + 7) = v94;
      }
      else
      {
        id v93 = *v91;
        sub_4C49C(*v91, v86[64]);
        *((void *)v85 + 7) = v93;
        v85[64] = v92;
      }
      id v95 = (id *)(v86 + 72);
      int v96 = v86[80];
      if (v96 == 255)
      {
        id v98 = *v95;
        v85[80] = v86[80];
        *((void *)v85 + 9) = v98;
      }
      else
      {
        id v97 = *v95;
        sub_4C49C(*v95, v86[80]);
        *((void *)v85 + 9) = v97;
        v85[80] = v96;
      }
      id v99 = (id *)(v86 + 88);
      int v100 = v86[96];
      if (v100 == 255)
      {
        id v102 = *v99;
        v85[96] = v86[96];
        *((void *)v85 + 11) = v102;
      }
      else
      {
        id v101 = *v99;
        sub_4C49C(*v99, v86[96]);
        *((void *)v85 + 11) = v101;
        v85[96] = v100;
      }
      uint64_t v103 = (id *)(v86 + 104);
      int v104 = v86[112];
      if (v104 == 255)
      {
        id v106 = *v103;
        v85[112] = v86[112];
        *((void *)v85 + 13) = v106;
      }
      else
      {
        id v105 = *v103;
        sub_4C49C(*v103, v86[112]);
        *((void *)v85 + 13) = v105;
        v85[112] = v104;
      }
      uint64_t v107 = (id *)(v86 + 120);
      int v108 = v86[128];
      if (v108 == 255)
      {
        id v110 = *v107;
        v85[128] = v86[128];
        *((void *)v85 + 15) = v110;
      }
      else
      {
        id v109 = *v107;
        sub_4C49C(*v107, v86[128]);
        *((void *)v85 + 15) = v109;
        v85[128] = v108;
      }
      v85[129] = v86[129];
      ((void (*)(char *, char *, uint64_t))v159)(&v85[v73[11]], &v86[v73[11]], v160);
      uint64_t v111 = v73[12];
      id v112 = &v85[v111];
      id v113 = &v86[v111];
      *(void *)id v112 = *(void *)v113;
      *((void *)v112 + 1) = *((void *)v113 + 1);
      v85[v73[13]] = v86[v73[13]];
      v85[v73[14]] = v86[v73[14]];
      v85[v73[15]] = v86[v73[15]];
      uint64_t v114 = v73[16];
      id v115 = &v85[v114];
      id v116 = &v86[v114];
      *(void *)id v115 = *(void *)v116;
      *((void *)v115 + 1) = *((void *)v116 + 1);
      *(void *)((char *)a1 + *(int *)(v158 + 64)) = *(void *)((char *)a2 + *(int *)(v158 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v150 = *(int *)(a3 + 20);
  uint64_t v151 = (char *)a1 + v150;
  uint64_t v152 = (char *)a2 + v150;
  uint64_t v153 = sub_3D6380();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v153 - 8) + 24))(v151, v152, v153);
  uint64_t v154 = *(int *)(a3 + 24);
  uint64_t v155 = (void *)((char *)a1 + v154);
  uint64_t v156 = (void *)((char *)a2 + v154);
  *uint64_t v155 = *v156;
  v155[1] = v156[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_35CAA8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  type metadata accessor for HeroBackgroundVariant();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v14 = (int *)sub_3D3860();
    uint64_t v15 = *((void *)v14 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v15 + 48))(a2, 1, v14))
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
      memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      long long v29 = a2[1];
      *a1 = *a2;
      a1[1] = v29;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v30 = v14[11];
      id v31 = (char *)a1 + v30;
      int v32 = (char *)a2 + v30;
      uint64_t v33 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 32))(v31, v32, v33);
      *(_OWORD *)((char *)a1 + v14[12]) = *(_OWORD *)((char *)a2 + v14[12]);
      *((unsigned char *)a1 + v14[13]) = *((unsigned char *)a2 + v14[13]);
      *((unsigned char *)a1 + v14[14]) = *((unsigned char *)a2 + v14[14]);
      *((unsigned char *)a1 + v14[15]) = *((unsigned char *)a2 + v14[15]);
      *(_OWORD *)((char *)a1 + v14[16]) = *(_OWORD *)((char *)a2 + v14[16]);
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v15 + 56))(a1, 0, 1, v14);
    }
    uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
    *(void *)((char *)a1 + *(int *)(v34 + 48)) = *(void *)((char *)a2 + *(int *)(v34 + 48));
    goto LABEL_9;
  }
  if (EnumCaseMultiPayload == 1)
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((void *)a1 + 7) = *((void *)a2 + 7);
    *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v8 = (int *)sub_3D3860();
    uint64_t v9 = v8[11];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
    *(_OWORD *)((char *)a1 + v8[12]) = *(_OWORD *)((char *)a2 + v8[12]);
    *((unsigned char *)a1 + v8[13]) = *((unsigned char *)a2 + v8[13]);
    *((unsigned char *)a1 + v8[14]) = *((unsigned char *)a2 + v8[14]);
    *((unsigned char *)a1 + v8[15]) = *((unsigned char *)a2 + v8[15]);
    *(_OWORD *)((char *)a1 + v8[16]) = *(_OWORD *)((char *)a2 + v8[16]);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
    *(void *)((char *)a1 + *(int *)(v13 + 48)) = *(void *)((char *)a2 + *(int *)(v13 + 48));
LABEL_9:
    swift_storeEnumTagMultiPayload();
    goto LABEL_10;
  }
  uint64_t v40 = a3;
  long long v17 = a2[1];
  *a1 = *a2;
  a1[1] = v17;
  *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
  *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
  *((void *)a1 + 7) = *((void *)a2 + 7);
  *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
  *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
  *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
  *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
  *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
  *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
  int v18 = (int *)sub_3D3860();
  uint64_t v19 = v18[11];
  int v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_3D3750();
  long long v23 = *(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 32);
  v23(v20, v21, v22);
  *(_OWORD *)((char *)a1 + v18[12]) = *(_OWORD *)((char *)a2 + v18[12]);
  *((unsigned char *)a1 + v18[13]) = *((unsigned char *)a2 + v18[13]);
  *((unsigned char *)a1 + v18[14]) = *((unsigned char *)a2 + v18[14]);
  *((unsigned char *)a1 + v18[15]) = *((unsigned char *)a2 + v18[15]);
  *(_OWORD *)((char *)a1 + v18[16]) = *(_OWORD *)((char *)a2 + v18[16]);
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
  uint64_t v25 = *(int *)(v24 + 48);
  id v26 = (char *)a1 + v25;
  id v27 = (char *)a2 + v25;
  long long v28 = *(_OWORD *)((char *)a2 + v25 + 16);
  *(_OWORD *)id v26 = *(_OWORD *)((char *)a2 + v25);
  *((_OWORD *)v26 + 1) = v28;
  v26[32] = *((unsigned char *)a2 + v25 + 32);
  *(_OWORD *)(v26 + 40) = *(_OWORD *)((char *)a2 + v25 + 40);
  *((void *)v26 + 7) = *(void *)((char *)a2 + v25 + 56);
  v26[64] = *((unsigned char *)a2 + v25 + 64);
  *(_OWORD *)(v26 + 113) = *(_OWORD *)((char *)a2 + v25 + 113);
  *(_OWORD *)(v26 + 104) = *(_OWORD *)((char *)a2 + v25 + 104);
  *(_OWORD *)(v26 + 88) = *(_OWORD *)((char *)a2 + v25 + 88);
  *(_OWORD *)(v26 + 72) = *(_OWORD *)((char *)a2 + v25 + 72);
  v26[129] = *((unsigned char *)a2 + v25 + 129);
  v23((char *)a1 + v25 + v18[11], (char *)a2 + v25 + v18[11], v22);
  *(_OWORD *)&v26[v18[12]] = *(_OWORD *)&v27[v18[12]];
  v26[v18[13]] = v27[v18[13]];
  v26[v18[14]] = v27[v18[14]];
  v26[v18[15]] = v27[v18[15]];
  *(_OWORD *)&v26[v18[16]] = *(_OWORD *)&v27[v18[16]];
  *(void *)((char *)a1 + *(int *)(v24 + 64)) = *(void *)((char *)a2 + *(int *)(v24 + 64));
  swift_storeEnumTagMultiPayload();
  a3 = v40;
LABEL_10:
  uint64_t v35 = *(int *)(a3 + 20);
  id v36 = (char *)a1 + v35;
  int v37 = (char *)a2 + v35;
  uint64_t v38 = sub_3D6380();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 32))(v36, v37, v38);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_OWORD *sub_35D00C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_35FE64((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
    type metadata accessor for HeroBackgroundVariant();
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v14 = (int *)sub_3D3860();
      uint64_t v15 = *((void *)v14 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v15 + 48))(a2, 1, v14))
      {
        uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        long long v28 = a2[1];
        *a1 = *a2;
        a1[1] = v28;
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *((void *)a1 + 7) = *((void *)a2 + 7);
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
        *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
        *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
        uint64_t v29 = v14[11];
        uint64_t v30 = (char *)a1 + v29;
        id v31 = (char *)a2 + v29;
        uint64_t v32 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 32))(v30, v31, v32);
        *(_OWORD *)((char *)a1 + v14[12]) = *(_OWORD *)((char *)a2 + v14[12]);
        *((unsigned char *)a1 + v14[13]) = *((unsigned char *)a2 + v14[13]);
        *((unsigned char *)a1 + v14[14]) = *((unsigned char *)a2 + v14[14]);
        *((unsigned char *)a1 + v14[15]) = *((unsigned char *)a2 + v14[15]);
        *(_OWORD *)((char *)a1 + v14[16]) = *(_OWORD *)((char *)a2 + v14[16]);
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v15 + 56))(a1, 0, 1, v14);
      }
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
      *(void *)((char *)a1 + *(int *)(v33 + 48)) = *(void *)((char *)a2 + *(int *)(v33 + 48));
    }
    else
    {
      long long v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *((void *)a1 + 7) = *((void *)a2 + 7);
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v8 = (int *)sub_3D3860();
        uint64_t v9 = v8[11];
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        *(_OWORD *)((char *)a1 + v8[12]) = *(_OWORD *)((char *)a2 + v8[12]);
        *((unsigned char *)a1 + v8[13]) = *((unsigned char *)a2 + v8[13]);
        *((unsigned char *)a1 + v8[14]) = *((unsigned char *)a2 + v8[14]);
        *((unsigned char *)a1 + v8[15]) = *((unsigned char *)a2 + v8[15]);
        *(_OWORD *)((char *)a1 + v8[16]) = *(_OWORD *)((char *)a2 + v8[16]);
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0);
        *(void *)((char *)a1 + *(int *)(v13 + 48)) = *(void *)((char *)a2 + *(int *)(v13 + 48));
      }
      else
      {
        long long v17 = (int *)sub_3D3860();
        uint64_t v18 = v17[11];
        uint64_t v19 = (char *)a1 + v18;
        int v20 = (char *)a2 + v18;
        uint64_t v21 = sub_3D3750();
        uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32);
        v22(v19, v20, v21);
        *(_OWORD *)((char *)a1 + v17[12]) = *(_OWORD *)((char *)a2 + v17[12]);
        *((unsigned char *)a1 + v17[13]) = *((unsigned char *)a2 + v17[13]);
        *((unsigned char *)a1 + v17[14]) = *((unsigned char *)a2 + v17[14]);
        *((unsigned char *)a1 + v17[15]) = *((unsigned char *)a2 + v17[15]);
        *(_OWORD *)((char *)a1 + v17[16]) = *(_OWORD *)((char *)a2 + v17[16]);
        uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
        uint64_t v24 = *(int *)(v23 + 48);
        uint64_t v25 = (char *)a1 + v24;
        id v26 = (char *)a2 + v24;
        long long v27 = *(_OWORD *)((char *)a2 + v24 + 16);
        *(_OWORD *)uint64_t v25 = *(_OWORD *)((char *)a2 + v24);
        *((_OWORD *)v25 + 1) = v27;
        v25[32] = *((unsigned char *)a2 + v24 + 32);
        *(_OWORD *)(v25 + 40) = *(_OWORD *)((char *)a2 + v24 + 40);
        *((void *)v25 + 7) = *(void *)((char *)a2 + v24 + 56);
        v25[64] = *((unsigned char *)a2 + v24 + 64);
        *(_OWORD *)(v25 + 113) = *(_OWORD *)((char *)a2 + v24 + 113);
        *(_OWORD *)(v25 + 104) = *(_OWORD *)((char *)a2 + v24 + 104);
        *(_OWORD *)(v25 + 88) = *(_OWORD *)((char *)a2 + v24 + 88);
        *(_OWORD *)(v25 + 72) = *(_OWORD *)((char *)a2 + v24 + 72);
        v25[129] = *((unsigned char *)a2 + v24 + 129);
        v22((char *)a1 + v24 + v17[11], (char *)a2 + v24 + v17[11], v21);
        *(_OWORD *)&v25[v17[12]] = *(_OWORD *)&v26[v17[12]];
        v25[v17[13]] = v26[v17[13]];
        v25[v17[14]] = v26[v17[14]];
        v25[v17[15]] = v26[v17[15]];
        *(_OWORD *)&v25[v17[16]] = *(_OWORD *)&v26[v17[16]];
        *(void *)((char *)a1 + *(int *)(v23 + 64)) = *(void *)((char *)a2 + *(int *)(v23 + 64));
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v34 = *(int *)(a3 + 20);
  uint64_t v35 = (char *)a1 + v34;
  id v36 = (char *)a2 + v34;
  uint64_t v37 = sub_3D6380();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v37 - 8) + 40))(v35, v36, v37);
  uint64_t v38 = *(int *)(a3 + 24);
  id v39 = (void *)((char *)a1 + v38);
  uint64_t v40 = (void *)((char *)a2 + v38);
  void *v39 = *v40;
  v39[1] = v40[1];
  swift_release();
  return a1;
}

uint64_t sub_35D5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_35D5B8);
}

uint64_t sub_35D5B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for HeroBackgroundVariant();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_3D6380();
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 20);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 24) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t sub_35D6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_35D6F0);
}

uint64_t sub_35D6F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for HeroBackgroundVariant();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = sub_3D6380();
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 24) + 8) = a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 20);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

uint64_t type metadata accessor for HeroChinBackground(uint64_t a1)
{
  return sub_2595C(a1, qword_4BF5F0);
}

uint64_t sub_35D824()
{
  uint64_t result = type metadata accessor for HeroBackgroundVariant();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_3D6380();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_35D8F4()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_35D910()
{
  qword_4BF298 = 0;
}

uint64_t sub_35D91C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF748);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for HeroChinBackground(0);
  uint64_t v34 = *(void *)(v7 - 8);
  uint64_t v8 = *(void *)(v34 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF750);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (double *)((char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF758);
  __chkstk_darwin(v35);
  uint64_t v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for HeroBackgroundVariant();
  __chkstk_darwin(v15);
  long long v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3572F8(v2, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for HeroBackgroundVariant);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload != 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(qword_4BEDA8);
      swift_release();
      swift_storeEnumTagMultiPayload();
      sub_3601C8();
      sub_3D6360();
      uint64_t v29 = (uint64_t *)&unk_4B1F70;
      uint64_t v28 = (uint64_t)v17;
      return sub_250FC(v28, v29);
    }
    uint64_t v19 = *(void *)&v17[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BEDA0) + 48)];
  }
  else
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BED98);
    uint64_t v19 = *(void *)&v17[*(int *)(v20 + 64)];
    sub_35FE64((uint64_t)&v17[*(int *)(v20 + 48)], (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  }
  v31[1] = v4;
  uint64_t v32 = v6;
  uint64_t v33 = a1;
  sub_35FE64((uint64_t)v17, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  if (qword_4A9070 != -1) {
    swift_once();
  }
  double v21 = -*(double *)&qword_4BF2B8;
  *(void *)uint64_t v12 = sub_3D6300();
  v12[1] = v21;
  *((unsigned char *)v12 + 16) = 0;
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF780);
  sub_35DF88(v19, v2, (uint64_t)v12 + *(int *)(v22 + 44));
  sub_3572F8(v2, (uint64_t)v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for HeroChinBackground);
  unint64_t v23 = (*(unsigned __int8 *)(v34 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v24 = swift_allocObject();
  uint64_t v34 = v19;
  uint64_t v25 = v24;
  sub_357748((uint64_t)v9, v24 + v23, type metadata accessor for HeroChinBackground);
  sub_3572F8(v2, (uint64_t)v9, type metadata accessor for HeroChinBackground);
  uint64_t v26 = swift_allocObject();
  sub_357748((uint64_t)v9, v26 + v23, type metadata accessor for HeroChinBackground);
  sub_153B4((uint64_t)v12, (uint64_t)v14, &qword_4BF750);
  long long v27 = (void (**)(double *@<X8>))&v14[*(int *)(v35 + 36)];
  *long long v27 = sub_360290;
  v27[1] = (void (*)(double *@<X8>))v25;
  v27[2] = (void (*)(double *@<X8>))sub_36085C;
  v27[3] = (void (*)(double *@<X8>))v26;
  sub_250FC((uint64_t)v12, &qword_4BF750);
  swift_release();
  sub_153B4((uint64_t)v14, (uint64_t)v32, &qword_4BF758);
  swift_storeEnumTagMultiPayload();
  sub_3601C8();
  sub_3D6360();
  uint64_t v28 = (uint64_t)v14;
  uint64_t v29 = &qword_4BF758;
  return sub_250FC(v28, v29);
}

uint64_t sub_35DE00()
{
  uint64_t v0 = sub_3D62F0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_3D63E0();
  __swift_allocate_value_buffer(v4, qword_4BF2A0);
  uint64_t v5 = (char *)__swift_project_value_buffer(v4, (uint64_t)qword_4BF2A0);
  if (qword_4A8FE0 != -1) {
    swift_once();
  }
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for RoundedCornerStyle.continuous(_:), v0);
  sub_3D6390();
  *(void *)uint64_t v5 = v6;
  *((void *)v5 + 1) = v7;
  *((void *)v5 + 2) = v8;
  *((void *)v5 + 3) = v9;
  return (*(uint64_t (**)(char *, char *, uint64_t))(v1 + 32))(&v5[*(int *)(v4 + 20)], v3, v0);
}

void sub_35DF78()
{
  qword_4BF2B8 = 0x3FF0000000000000;
}

uint64_t sub_35DF88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF788);
  __chkstk_darwin(v39);
  uint64_t v7 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v34 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BF790);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_3DED20;
  *(void *)(v11 + 32) = sub_3D6760();
  uint64_t v38 = a1;
  *(void *)(v11 + 40) = sub_3D6760();
  uint64_t v42 = v11;
  sub_3D8040();
  uint64_t v12 = sub_3D5D90();
  uint64_t v13 = (uint64_t *)(a2 + *(int *)(type metadata accessor for HeroChinBackground(0) + 24));
  uint64_t v14 = *v13;
  uint64_t v15 = v13[1];
  uint64_t v42 = *v13;
  uint64_t v43 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4AEB70);
  sub_3D67F0();
  if (qword_4A9070 != -1) {
    swift_once();
  }
  sub_3D68B0();
  sub_3D5EA0();
  uint64_t v16 = v42;
  char v17 = v43;
  uint64_t v37 = v44;
  int v36 = v45;
  uint64_t v34 = v47;
  uint64_t v35 = v46;
  char v18 = sub_3D6460();
  uint64_t v40 = v14;
  uint64_t v41 = v15;
  sub_3D67F0();
  sub_3D5D50();
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  if (qword_4A9068 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_3D63E0();
  uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)qword_4BF2A0);
  uint64_t v29 = sub_3D6760();
  sub_3572F8(v28, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for UnevenRoundedRectangle);
  uint64_t v30 = v39;
  *(void *)&v10[*(int *)(v39 + 52)] = v29;
  *(_WORD *)&v10[*(int *)(v30 + 56)] = 256;
  sub_153B4((uint64_t)v10, (uint64_t)v7, &qword_4BF788);
  *(void *)a3 = v12;
  *(_WORD *)(a3 + 8) = 256;
  *(void *)(a3 + 16) = v16;
  *(unsigned char *)(a3 + 24) = v17;
  *(void *)(a3 + 32) = v37;
  *(unsigned char *)(a3 + 40) = v36;
  uint64_t v31 = v34;
  *(void *)(a3 + 48) = v35;
  *(void *)(a3 + 56) = v31;
  *(unsigned char *)(a3 + 64) = v18;
  *(void *)(a3 + 72) = v20;
  *(void *)(a3 + 80) = v22;
  *(void *)(a3 + 88) = v24;
  *(void *)(a3 + 96) = v26;
  *(unsigned char *)(a3 + 104) = 0;
  uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF798);
  sub_153B4((uint64_t)v7, a3 + *(int *)(v32 + 48), &qword_4BF788);
  swift_retain();
  sub_250FC((uint64_t)v10, &qword_4BF788);
  sub_250FC((uint64_t)v7, &qword_4BF788);
  return swift_release();
}

void sub_35E30C(double *a1@<X8>)
{
  type metadata accessor for HeroChinBackground(0);
  sub_3D5F00();
  sub_18F88((uint64_t)&v3, (uint64_t)&v4, &qword_4B0CB8);
  double Height = 0.0;
  if ((v5 & 1) == 0) {
    double Height = CGRectGetHeight(v4);
  }
  *a1 = Height;
}

uint64_t sub_35E390(double *a1)
{
  double v1 = *a1;
  type metadata accessor for HeroChinBackground(0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4AEB70);
  uint64_t result = sub_3D67F0();
  if (v1 != v3)
  {
    uint64_t result = sub_3D6800();
    if (qword_4A9060 != -1) {
      uint64_t result = swift_once();
    }
    qword_4BF298 = *(void *)&v1;
  }
  return result;
}

uint64_t sub_35E46C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_35E488@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Artwork(0);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF630);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF638);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3572F8(v2, (uint64_t)v7, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  uint64_t v15 = sub_3D3860();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v7, 0, 1, v15);
  uint64_t v16 = (int *)type metadata accessor for Artwork.Configuration(0);
  char v17 = &v7[v16[7]];
  uint64_t v18 = sub_3D5190();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = sub_3D68A0();
  uint64_t v20 = &v7[v16[5]];
  *(void *)uint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  v20[16] = 2;
  uint64_t v21 = (uint64_t *)&v7[v16[6]];
  uint64_t *v21 = v19;
  v21[1] = v22;
  v7[v16[8]] = 1;
  *(void *)&v7[v16[9]] = 0;
  uint64_t v23 = &v7[*(int *)(v5 + 28)];
  *(void *)uint64_t v23 = sub_392FA8;
  *((void *)v23 + 1) = 0;
  v23[16] = 0;
  sub_3572F8((uint64_t)v7, (uint64_t)v11, type metadata accessor for Artwork);
  uint64_t v24 = &v11[*(int *)(v9 + 44)];
  *(void *)uint64_t v24 = 0x3FF0000000000000;
  *((_WORD *)v24 + 4) = 0;
  sub_35FE64((uint64_t)v7, type metadata accessor for Artwork);
  uint64_t v25 = sub_3D68A0();
  sub_356608(0.0, 0, 0.0, 1, INFINITY, 0, 0.0, 0, (uint64_t)v14, 0.0, 1, INFINITY, 0, v25, v26, &qword_4BF630, &qword_4BF638);
  sub_250FC((uint64_t)v11, &qword_4BF630);
  if (qword_4A8FE8 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_3D60D0();
  uint64_t v28 = __swift_project_value_buffer(v27, (uint64_t)qword_4BEB08);
  uint64_t v29 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BF640) + 36);
  sub_3572F8(v28, v29, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v29 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BF2C0) + 36)) = 256;
  return sub_18F88((uint64_t)v14, a1, &qword_4BF638);
}

uint64_t sub_35E81C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF718);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF720);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (int64x2_t *)&v7[*(int *)(v5 + 52)];
  uint64_t v12 = (uint64_t)v11->i64 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BF728) + 44);
  sub_3572F8(v2, v12, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  uint64_t v13 = sub_3D3860();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
  uint64_t v14 = (int *)type metadata accessor for Artwork.Configuration(0);
  uint64_t v15 = v12 + v14[7];
  uint64_t v16 = sub_3D5190();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
  uint64_t v17 = sub_3D68A0();
  uint64_t v18 = v12 + v14[5];
  *(void *)uint64_t v18 = 0;
  *(void *)(v18 + 8) = 0;
  *(unsigned char *)(v18 + 16) = 2;
  uint64_t v19 = (uint64_t *)(v12 + v14[6]);
  *uint64_t v19 = v17;
  v19[1] = v20;
  *(unsigned char *)(v12 + v14[8]) = 1;
  *(void *)(v12 + v14[9]) = 0;
  uint64_t v21 = v12 + *(int *)(type metadata accessor for Artwork(0) + 20);
  *(void *)uint64_t v21 = sub_392FA8;
  *(void *)(v21 + 8) = 0;
  *(unsigned char *)(v21 + 16) = 0;
  *uint64_t v11 = vdupq_n_s64(0x3FF70A3D70A3D70AuLL);
  *uint64_t v7 = 0;
  *(_OWORD *)(v7 + 8) = xmmword_3F8580;
  uint64_t v22 = sub_3D68A0();
  sub_356608(0.0, 0, 0.0, 1, INFINITY, 0, 0.0, 0, (uint64_t)v10, 0.0, 1, INFINITY, 0, v22, v23, &qword_4BF718, &qword_4BF720);
  sub_250FC((uint64_t)v7, &qword_4BF718);
  if (qword_4A8FE8 != -1) {
    swift_once();
  }
  uint64_t v24 = sub_3D60D0();
  uint64_t v25 = __swift_project_value_buffer(v24, (uint64_t)qword_4BEB08);
  uint64_t v26 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BF730) + 36);
  sub_3572F8(v25, v26, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(_WORD *)(v26 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BF2C0) + 36)) = 256;
  return sub_18F88((uint64_t)v10, a1, &qword_4BF720);
}

uint64_t sub_35EB60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_35EB7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v28 = a2;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF648);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF650);
  __chkstk_darwin(v27);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF658);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF660);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v26 - v15;
  uint64_t v17 = sub_3D3610();
  v29[3] = v17;
  v29[4] = sub_357498((unint64_t *)&qword_4AC678, (void (*)(uint64_t))&type metadata accessor for Podcasts);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v29);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v17 - 8) + 104))(boxed_opaque_existential_2Tm, enum case for Podcasts.heroJoeColorDebugger(_:), v17);
  LOBYTE(v17) = sub_3D3580();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  if (v17)
  {
    sub_35EFA0((uint64_t)v10);
    uint64_t v19 = sub_3D6870();
    uint64_t v21 = v20;
    uint64_t v22 = (uint64_t)&v13[*(int *)(v11 + 36)];
    sub_153B4((uint64_t)v10, v22, &qword_4BF658);
    uint64_t v23 = (uint64_t *)(v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BF680) + 36));
    *uint64_t v23 = v19;
    v23[1] = v21;
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v13, v26, v2);
    sub_250FC((uint64_t)v10, &qword_4BF658);
    sub_18F88((uint64_t)v13, (uint64_t)v16, &qword_4BF660);
    sub_153B4((uint64_t)v16, (uint64_t)v7, &qword_4BF660);
    swift_storeEnumTagMultiPayload();
    sub_35FEC4();
    sub_3D6E4(&qword_4BF670, &qword_4BF648);
    sub_3D6360();
    return sub_250FC((uint64_t)v16, &qword_4BF660);
  }
  else
  {
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v25(v5, v26, v2);
    v25(v7, (uint64_t)v5, v2);
    swift_storeEnumTagMultiPayload();
    sub_35FEC4();
    sub_3D6E4(&qword_4BF670, &qword_4BF648);
    sub_3D6360();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_35EFA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v21 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF688);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF690);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_3D3860();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_153B4(v2, (uint64_t)v12, (uint64_t *)&unk_4B1F70);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_250FC((uint64_t)v12, (uint64_t *)&unk_4B1F70);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v21, 1, 1, v6);
  }
  else
  {
    sub_357748((uint64_t)v12, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    *(void *)uint64_t v5 = sub_3D6300();
    *((void *)v5 + 1) = 0;
    v5[16] = 0;
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF698);
    sub_35F2B0(v16, (uint64_t)&v5[*(int *)(v18 + 44)]);
    sub_153B4((uint64_t)v5, (uint64_t)v9, &qword_4BF688);
    *(_OWORD *)&v9[*(int *)(v6 + 36)] = xmmword_3F8590;
    sub_250FC((uint64_t)v5, &qword_4BF688);
    uint64_t v19 = v21;
    sub_18F88((uint64_t)v9, v21, &qword_4BF690);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
    return sub_35FE64((uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  }
}

uint64_t sub_35F2B0@<X0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF6A0);
  __chkstk_darwin(v3 - 8);
  uint64_t v45 = (uint64_t)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v44 = (uint64_t)&v40 - v6;
  __chkstk_darwin(v7);
  uint64_t v47 = (uint64_t)&v40 - v8;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v40 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v40 - v13;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v40 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v40 - v19;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v40 - v22;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v40 - v25;
  __chkstk_darwin(v27);
  uint64_t v29 = (char *)&v40 - v28;
  sub_35F620(a1[64], (uint64_t)&v40 - v28);
  sub_35F620(a1[80], (uint64_t)v26);
  sub_35F620(a1[96], (uint64_t)v23);
  char v30 = a1[112];
  uint64_t v42 = v20;
  sub_35F620(v30, (uint64_t)v20);
  char v31 = a1[128];
  uint64_t v41 = v17;
  sub_35F620(v31, (uint64_t)v17);
  uint64_t v32 = (uint64_t)v14;
  uint64_t v43 = v14;
  sub_153B4((uint64_t)v29, (uint64_t)v14, &qword_4BF6A0);
  sub_153B4((uint64_t)v26, (uint64_t)v11, &qword_4BF6A0);
  uint64_t v33 = v47;
  sub_153B4((uint64_t)v23, v47, &qword_4BF6A0);
  uint64_t v34 = (uint64_t)v20;
  uint64_t v35 = v44;
  sub_153B4(v34, v44, &qword_4BF6A0);
  uint64_t v36 = v45;
  sub_153B4((uint64_t)v17, v45, &qword_4BF6A0);
  uint64_t v37 = v46;
  sub_153B4(v32, v46, &qword_4BF6A0);
  uint64_t v38 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_4BF6A8);
  sub_153B4((uint64_t)v11, v37 + v38[12], &qword_4BF6A0);
  sub_153B4(v33, v37 + v38[16], &qword_4BF6A0);
  sub_153B4(v35, v37 + v38[20], &qword_4BF6A0);
  sub_153B4(v36, v37 + v38[24], &qword_4BF6A0);
  sub_250FC((uint64_t)v41, &qword_4BF6A0);
  sub_250FC((uint64_t)v42, &qword_4BF6A0);
  sub_250FC((uint64_t)v23, &qword_4BF6A0);
  sub_250FC((uint64_t)v26, &qword_4BF6A0);
  sub_250FC((uint64_t)v29, &qword_4BF6A0);
  sub_250FC(v36, &qword_4BF6A0);
  sub_250FC(v35, &qword_4BF6A0);
  sub_250FC(v47, &qword_4BF6A0);
  sub_250FC((uint64_t)v11, &qword_4BF6A0);
  return sub_250FC((uint64_t)v43, &qword_4BF6A0);
}

uint64_t sub_35F620@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v43 = a2;
  int v2 = ~a1;
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF6B0);
  __chkstk_darwin(v46);
  uint64_t v47 = (uint64_t)&v38 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B36A0);
  __chkstk_darwin(v41);
  uint64_t v5 = (uint64_t *)((char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v42 = sub_3D67C0();
  uint64_t v6 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF6B8);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF6C0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF6C8);
  __chkstk_darwin(v40);
  uint64_t v16 = (uint64_t *)((char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF6D0);
  __chkstk_darwin(v45);
  uint64_t v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v44 = (uint64_t)&v38 - v20;
  if (v2)
  {
    sub_3D5110();
    uint64_t v39 = sub_3D6700();
    sub_3D6790();
    sub_3D6310();
    uint64_t v21 = sub_3D6320();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v14, 0, 1, v21);
    uint64_t v22 = sub_3D67B0();
    swift_release();
    sub_250FC((uint64_t)v14, &qword_4BF6C0);
    uint64_t v23 = sub_3D64B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 1, 1, v23);
    uint64_t v24 = sub_3D64C0();
    sub_250FC((uint64_t)v11, &qword_4BF6B8);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v26 = v42;
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.medium(_:), v42);
    uint64_t v27 = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v5 + *(int *)(v41 + 28), v8, v26);
    *uint64_t v5 = v27;
    sub_153B4((uint64_t)v5, (uint64_t)v16 + *(int *)(v40 + 36), &qword_4B36A0);
    *uint64_t v16 = v22;
    v16[1] = KeyPath;
    long long v16[2] = v24;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_250FC((uint64_t)v5, &qword_4B36A0);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v26);
    swift_release();
    swift_release();
    swift_release();
    sub_153B4((uint64_t)v16, (uint64_t)v18, &qword_4BF6C8);
    *(void *)&v18[*(int *)(v45 + 36)] = v39;
    swift_retain();
    sub_250FC((uint64_t)v16, &qword_4BF6C8);
    uint64_t v28 = v44;
    sub_18F88((uint64_t)v18, v44, &qword_4BF6D0);
    sub_153B4(v28, v47, &qword_4BF6D0);
    swift_storeEnumTagMultiPayload();
    sub_35FFE8();
    sub_3D6360();
    swift_release();
  }
  else
  {
    sub_3D6790();
    sub_3D6310();
    uint64_t v29 = sub_3D6320();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v14, 0, 1, v29);
    uint64_t v30 = sub_3D67B0();
    swift_release();
    sub_250FC((uint64_t)v14, &qword_4BF6C0);
    uint64_t v31 = sub_3D64B0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v11, 1, 1, v31);
    uint64_t v32 = sub_3D64C0();
    sub_250FC((uint64_t)v11, &qword_4BF6B8);
    uint64_t v33 = swift_getKeyPath();
    uint64_t v34 = v42;
    (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.medium(_:), v42);
    uint64_t v35 = swift_getKeyPath();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v5 + *(int *)(v41 + 28), v8, v34);
    *uint64_t v5 = v35;
    sub_153B4((uint64_t)v5, (uint64_t)v16 + *(int *)(v40 + 36), &qword_4B36A0);
    *uint64_t v16 = v30;
    v16[1] = v33;
    long long v16[2] = v32;
    swift_retain();
    swift_retain();
    swift_retain();
    sub_250FC((uint64_t)v5, &qword_4B36A0);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v34);
    swift_release();
    swift_release();
    swift_release();
    sub_3D6750();
    uint64_t v36 = sub_3D6760();
    swift_release();
    sub_153B4((uint64_t)v16, (uint64_t)v18, &qword_4BF6C8);
    *(void *)&v18[*(int *)(v45 + 36)] = v36;
    sub_250FC((uint64_t)v16, &qword_4BF6C8);
    uint64_t v28 = v44;
    sub_18F88((uint64_t)v18, v44, &qword_4BF6D0);
    sub_153B4(v28, v47, &qword_4BF6D0);
    swift_storeEnumTagMultiPayload();
    sub_35FFE8();
    sub_3D6360();
  }
  return sub_250FC(v28, &qword_4BF6D0);
}

uint64_t sub_35FE48()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_35FE64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_35FEC4()
{
  unint64_t result = qword_4BF668;
  if (!qword_4BF668)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF660);
    sub_3D6E4(&qword_4BF670, &qword_4BF648);
    sub_3D6E4(&qword_4BF678, &qword_4BF680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF668);
  }
  return result;
}

uint64_t sub_35FF88@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_3D61D0();
  *a1 = result;
  return result;
}

uint64_t sub_35FFB4()
{
  return sub_3D61E0();
}

unint64_t sub_35FFE8()
{
  unint64_t result = qword_4BF6D8;
  if (!qword_4BF6D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF6D0);
    sub_360088();
    sub_3D6E4(&qword_4BF708, &qword_4BF710);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF6D8);
  }
  return result;
}

unint64_t sub_360088()
{
  unint64_t result = qword_4BF6E0;
  if (!qword_4BF6E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF6C8);
    sub_360128();
    sub_3D6E4(&qword_4B3870, &qword_4B36A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF6E0);
  }
  return result;
}

unint64_t sub_360128()
{
  unint64_t result = qword_4BF6E8;
  if (!qword_4BF6E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF6F0);
    sub_3D6E4(&qword_4BF6F8, &qword_4BF700);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF6E8);
  }
  return result;
}

unint64_t sub_3601C8()
{
  unint64_t result = qword_4BF760;
  if (!qword_4BF760)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF758);
    sub_3D6E4(&qword_4BF768, &qword_4BF750);
    sub_3D6E4(&qword_4BF770, &qword_4BF778);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF760);
  }
  return result;
}

void sub_360290(double *a1@<X8>)
{
  type metadata accessor for HeroChinBackground(0);

  sub_35E30C(a1);
}

uint64_t objectdestroyTm_10()
{
  uint64_t v1 = type metadata accessor for HeroChinBackground(0);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  uint64_t v5 = v0 + v3;
  type metadata accessor for HeroBackgroundVariant();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v24 = sub_3D3860();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v0 + v3, 1, v24))
    {
      swift_bridgeObjectRelease();
      int v25 = *(unsigned __int8 *)(v5 + 32);
      if (v25 != 255) {
        sub_49E54(*(void *)(v5 + 16), *(void *)(v5 + 24), v25);
      }
      int v26 = *(unsigned __int8 *)(v5 + 64);
      if (v26 != 255) {
        sub_4C6F0(*(id *)(v5 + 56), v26);
      }
      int v27 = *(unsigned __int8 *)(v5 + 80);
      if (v27 != 255) {
        sub_4C6F0(*(id *)(v5 + 72), v27);
      }
      int v28 = *(unsigned __int8 *)(v5 + 96);
      if (v28 != 255) {
        sub_4C6F0(*(id *)(v5 + 88), v28);
      }
      int v29 = *(unsigned __int8 *)(v5 + 112);
      if (v29 != 255) {
        sub_4C6F0(*(id *)(v5 + 104), v29);
      }
      int v30 = *(unsigned __int8 *)(v5 + 128);
      if (v30 != 255) {
        sub_4C6F0(*(id *)(v5 + 120), v30);
      }
      uint64_t v31 = v5 + *(int *)(v24 + 44);
      uint64_t v32 = sub_3D3750();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v33 = qword_4BEDA8;
    goto LABEL_57;
  }
  if (EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    int v34 = *(unsigned __int8 *)(v5 + 32);
    if (v34 != 255) {
      sub_49E54(*(void *)(v5 + 16), *(void *)(v5 + 24), v34);
    }
    int v35 = *(unsigned __int8 *)(v5 + 64);
    if (v35 != 255) {
      sub_4C6F0(*(id *)(v5 + 56), v35);
    }
    int v36 = *(unsigned __int8 *)(v5 + 80);
    if (v36 != 255) {
      sub_4C6F0(*(id *)(v5 + 72), v36);
    }
    int v37 = *(unsigned __int8 *)(v5 + 96);
    if (v37 != 255) {
      sub_4C6F0(*(id *)(v5 + 88), v37);
    }
    int v38 = *(unsigned __int8 *)(v5 + 112);
    if (v38 != 255) {
      sub_4C6F0(*(id *)(v5 + 104), v38);
    }
    int v39 = *(unsigned __int8 *)(v5 + 128);
    if (v39 != 255) {
      sub_4C6F0(*(id *)(v5 + 120), v39);
    }
    uint64_t v40 = v5 + *(int *)(sub_3D3860() + 44);
    uint64_t v41 = sub_3D3750();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v41 - 8) + 8))(v40, v41);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v33 = &qword_4BEDA0;
LABEL_57:
    __swift_instantiateConcreteTypeFromMangledName(v33);
    goto LABEL_58;
  }
  if (EnumCaseMultiPayload) {
    goto LABEL_59;
  }
  swift_bridgeObjectRelease();
  int v7 = *(unsigned __int8 *)(v5 + 32);
  if (v7 != 255) {
    sub_49E54(*(void *)(v5 + 16), *(void *)(v5 + 24), v7);
  }
  int v8 = *(unsigned __int8 *)(v5 + 64);
  if (v8 != 255) {
    sub_4C6F0(*(id *)(v5 + 56), v8);
  }
  int v9 = *(unsigned __int8 *)(v5 + 80);
  if (v9 != 255) {
    sub_4C6F0(*(id *)(v5 + 72), v9);
  }
  int v10 = *(unsigned __int8 *)(v5 + 96);
  if (v10 != 255) {
    sub_4C6F0(*(id *)(v5 + 88), v10);
  }
  int v11 = *(unsigned __int8 *)(v5 + 112);
  if (v11 != 255) {
    sub_4C6F0(*(id *)(v5 + 104), v11);
  }
  uint64_t v46 = v4;
  uint64_t v47 = v0;
  int v12 = *(unsigned __int8 *)(v5 + 128);
  if (v12 != 255) {
    sub_4C6F0(*(id *)(v5 + 120), v12);
  }
  uint64_t v13 = sub_3D3860();
  uint64_t v14 = v5 + *(int *)(v13 + 44);
  uint64_t v15 = sub_3D3750();
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
  v16(v14, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = v5 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BED98) + 48);
  swift_bridgeObjectRelease();
  int v18 = *(unsigned __int8 *)(v17 + 32);
  if (v18 != 255) {
    sub_49E54(*(void *)(v17 + 16), *(void *)(v17 + 24), v18);
  }
  int v19 = *(unsigned __int8 *)(v17 + 64);
  if (v19 != 255) {
    sub_4C6F0(*(id *)(v17 + 56), v19);
  }
  int v20 = *(unsigned __int8 *)(v17 + 80);
  if (v20 != 255) {
    sub_4C6F0(*(id *)(v17 + 72), v20);
  }
  int v21 = *(unsigned __int8 *)(v17 + 96);
  if (v21 != 255) {
    sub_4C6F0(*(id *)(v17 + 88), v21);
  }
  int v22 = *(unsigned __int8 *)(v17 + 112);
  if (v22 != 255) {
    sub_4C6F0(*(id *)(v17 + 104), v22);
  }
  int v23 = *(unsigned __int8 *)(v17 + 128);
  if (v23 != 255) {
    sub_4C6F0(*(id *)(v17 + 120), v23);
  }
  v16(v17 + *(int *)(v13 + 44), v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v46;
  uint64_t v0 = v47;
LABEL_58:
  swift_release();
LABEL_59:
  uint64_t v42 = v3 + v4;
  uint64_t v43 = v5 + *(int *)(v1 + 20);
  uint64_t v44 = sub_3D6380();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(v43, v44);
  swift_release();

  return _swift_deallocObject(v0, v42, v2 | 7);
}

uint64_t sub_36085C(double *a1)
{
  type metadata accessor for HeroChinBackground(0);

  return sub_35E390(a1);
}

unint64_t sub_3608D0()
{
  unint64_t result = qword_4BF7A0;
  if (!qword_4BF7A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF640);
    sub_360BAC(&qword_4BF7A8, &qword_4BF638, (void (*)(void))sub_360994);
    sub_3D6E4(&qword_4BF340, &qword_4BF2C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF7A0);
  }
  return result;
}

unint64_t sub_360994()
{
  unint64_t result = qword_4BF7B0;
  if (!qword_4BF7B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF630);
    sub_357498(&qword_4BF188, (void (*)(uint64_t))type metadata accessor for Artwork);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF7B0);
  }
  return result;
}

unint64_t sub_360A44()
{
  unint64_t result = qword_4BF7B8;
  if (!qword_4BF7B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF7C0);
    sub_35FEC4();
    sub_3D6E4(&qword_4BF670, &qword_4BF648);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF7B8);
  }
  return result;
}

unint64_t sub_360AE8()
{
  unint64_t result = qword_4BF7C8;
  if (!qword_4BF7C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF730);
    sub_360BAC(&qword_4BF7D0, &qword_4BF720, (void (*)(void))sub_360C2C);
    sub_3D6E4(&qword_4BF340, &qword_4BF2C0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF7C8);
  }
  return result;
}

uint64_t sub_360BAC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_360C2C()
{
  unint64_t result = qword_4BF7D8;
  if (!qword_4BF7D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF718);
    sub_3D6E4(&qword_4ABE50, &qword_4ABE40);
    sub_360CCC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF7D8);
  }
  return result;
}

unint64_t sub_360CCC()
{
  unint64_t result = qword_4BF7E0;
  if (!qword_4BF7E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF728);
    sub_3D6E4(&qword_4B1388, &qword_4B1378);
    sub_357498(&qword_4BF188, (void (*)(uint64_t))type metadata accessor for Artwork);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF7E0);
  }
  return result;
}

unint64_t sub_360DA0()
{
  unint64_t result = qword_4BF7E8;
  if (!qword_4BF7E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BF7F0);
    sub_3601C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BF7E8);
  }
  return result;
}

uint64_t ActionPerformer.init(_:asPartOf:)@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = sub_18F70(a1, a3);
  *(void *)(a3 + 40) = a2;
  return result;
}

uint64_t ActionPerformer.callAsFunction()()
{
  uint64_t v1 = sub_3D6F60();
  uint64_t v30 = *(void *)(v1 - 8);
  uint64_t v31 = v1;
  __chkstk_darwin(v1);
  uint64_t v32 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_3D6BD0();
  __chkstk_darwin(v3 - 8);
  int v35 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_3D7AE0();
  uint64_t v29 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF7F8);
  __chkstk_darwin(v7 - 8);
  int v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4BC3C0);
  uint64_t v33 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  int v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_3D2D80();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v0[5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_4B58E0);
  sub_3D7080();
  if (v36[0])
  {
    uint64_t v18 = v36[1];
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for ActionMetricsBehavior.fromAction(_:), v13);
    uint64_t v20 = ActionRunner.perform(_:withMetrics:asPartOf:)(v0, (uint64_t)v16, v17, ObjectType, v18);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  else
  {
    int v21 = v6;
    uint64_t v22 = v34;
    sub_3D7080();
    uint64_t v23 = v33;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v9, 1, v10) == 1)
    {
      sub_250FC((uint64_t)v9, &qword_4BF7F8);
      sub_3D7A90();
      __swift_instantiateConcreteTypeFromMangledName(&qword_4A9AF8);
      sub_3D6BF0();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_3DED90;
      sub_3D6BC0();
      v37._object = (void *)0x8000000000409290;
      v37._countAndFlagsBits = 0xD000000000000012;
      sub_3D6BB0(v37);
      uint64_t v24 = v0[3];
      int v25 = __swift_project_boxed_opaque_existential_1(v0, v24);
      v36[3] = v24;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v36);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(boxed_opaque_existential_2Tm, v25, v24);
      sub_3D6BA0();
      sub_250FC((uint64_t)v36, (uint64_t *)&unk_4B5A40);
      v38._countAndFlagsBits = 0xD000000000000028;
      v38._object = (void *)0x800000000040A330;
      sub_3D6BB0(v38);
      sub_3D6BE0();
      sub_3D7820();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v22);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4BC3E0);
      (*(void (**)(char *, void, uint64_t))(v30 + 104))(v32, enum case for ActionOutcome.unsupported(_:), v31);
      return sub_3D7A10();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v12, v9, v10);
      uint64_t v20 = sub_361428();
      (*(void (**)(char *, uint64_t))(v23 + 8))(v12, v10);
    }
  }
  return v20;
}

uint64_t sub_361428()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_3D2D80();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v11[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for ActionMetricsBehavior.fromAction(_:), v2);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4BC3C0);
  uint64_t v6 = sub_3D71F0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_18168(v1, (uint64_t)v13);
  uint64_t v7 = swift_allocObject();
  sub_18F70(v13, v7 + 16);
  sub_18168(v1, (uint64_t)v13);
  sub_18168((uint64_t)v13, (uint64_t)v12);
  uint64_t v8 = swift_allocObject();
  sub_18F70(v12, v8 + 16);
  v11[3] = sub_3D7360();
  v11[4] = (uint64_t)&protocol witness table for SyncTaskScheduler;
  __swift_allocate_boxed_opaque_existential_2Tm(v11);
  sub_3D7350();
  sub_3D79F0();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v11);
  return v6;
}

uint64_t destroy for ActionPerformer(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);

  return swift_release();
}

uint64_t initializeWithCopy for ActionPerformer(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for ActionPerformer(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ActionPerformer(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ActionPerformer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActionPerformer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ActionPerformer()
{
  return &type metadata for ActionPerformer;
}

uint64_t sub_3617FC(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_3D6BD0();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_3D7AE0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_3D6F60();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for ActionOutcome.unsupported(_:), v8);
  char v12 = sub_3D6F50();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
  {
    sub_3D7A90();
    __swift_instantiateConcreteTypeFromMangledName(&qword_4A9AF8);
    sub_3D6BF0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_3DED90;
    sub_3D6BC0();
    v18._object = (void *)0x800000000040A360;
    v18._countAndFlagsBits = 0xD000000000000012;
    sub_3D6BB0(v18);
    uint64_t v14 = a2[3];
    uint64_t v15 = __swift_project_boxed_opaque_existential_1(a2, v14);
    v17[3] = v14;
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v17);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v14 - 8) + 16))(boxed_opaque_existential_2Tm, v15, v14);
    sub_3D6BA0();
    sub_250FC((uint64_t)v17, (uint64_t *)&unk_4B5A40);
    v19._countAndFlagsBits = 0xD000000000000036;
    v19._object = (void *)0x800000000040A380;
    sub_3D6BB0(v19);
    sub_3D6BE0();
    sub_3D7820();
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return result;
}

uint64_t sub_361B5C()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_361B94(uint64_t a1)
{
  return sub_3617FC(a1, (void *)(v1 + 16));
}

uint64_t sub_361B9C(uint64_t a1, void *a2)
{
  uint64_t v3 = sub_3D6BD0();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_3D7AE0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3D7A90();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4A9AF8);
  sub_3D6BF0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_3DED90;
  sub_3D6BC0();
  v19._object = (void *)0x800000000040A360;
  v19._countAndFlagsBits = 0xD000000000000012;
  sub_3D6BB0(v19);
  uint64_t v8 = a2[3];
  uint64_t v9 = __swift_project_boxed_opaque_existential_1(a2, v8);
  uint64_t v18 = v8;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v17);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(boxed_opaque_existential_2Tm, v9, v8);
  sub_3D6BA0();
  sub_250FC((uint64_t)v17, (uint64_t *)&unk_4B5A40);
  v20._countAndFlagsBits = 0x6E6F73616572202CLL;
  v20._object = (void *)0xEA0000000000203ALL;
  sub_3D6BB0(v20);
  swift_getErrorValue();
  uint64_t v11 = v15;
  uint64_t v12 = v16;
  uint64_t v18 = v16;
  uint64_t v13 = __swift_allocate_boxed_opaque_existential_2Tm(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v13, v11, v12);
  sub_3D6B90();
  sub_250FC((uint64_t)v17, (uint64_t *)&unk_4B5A40);
  v21._countAndFlagsBits = 0;
  v21._object = (void *)0xE000000000000000;
  sub_3D6BB0(v21);
  sub_3D6BE0();
  sub_3D7820();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_361E9C(uint64_t a1)
{
  return sub_361B9C(a1, (void *)(v1 + 16));
}

void sub_361EA8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_361F14(uint64_t a1)
{
  return sub_361F5C(a1, qword_4BF800);
}

uint64_t sub_361F38(uint64_t a1)
{
  return sub_361F5C(a1, qword_4BF818);
}

uint64_t sub_361F5C(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_3D2320();
}

void *AccountPresenter.activeAccount.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void *AccountPresenter.profilePicture.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  return v1;
}

void AccountPresenter.profilePicture.setter(uint64_t a1)
{
  swift_beginAccess();
  uint64_t v3 = *(void **)(v1 + 40);
  *(void *)(v1 + 40) = a1;
}

uint64_t (*AccountPresenter.profilePicture.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_3620E4()
{
  uint64_t v1 = *v0;
  uint64_t result = FlowTransitionSource.view.getter();
  if (result)
  {
    (*(void (**)(void, void))(*(void *)(v1 + 200) + 32))(*((unsigned __int8 *)v0 + 64), *(void *)(v1 + 192));
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_362180(char a1)
{
  *(unsigned char *)(v1 + 64) = a1;
  return sub_3620E4();
}

void *AccountPresenter.accountName.getter()
{
  if (!AccountPresenter.signedIn.getter())
  {
    uint64_t v4 = *(void *)(v0 + 72);
    swift_bridgeObjectRetain();
    return (void *)v4;
  }
  swift_beginAccess();
  uint64_t result = *(void **)(v0 + 32);
  if (result)
  {
    id v2 = [result username];
    if (!v2) {
      return 0;
    }
    uint64_t v3 = v2;
    uint64_t v4 = sub_3D7D50();

    return (void *)v4;
  }
  __break(1u);
  return result;
}

uint64_t AccountPresenter.accountName.setter(uint64_t a1, uint64_t a2)
{
  if (AccountPresenter.signedIn.getter() || (*(unsigned char *)(v2 + 64) & 1) != 0)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(v2 + 72) = a1;
    *(void *)(v2 + 80) = a2;
    swift_bridgeObjectRelease();
    return sub_362314();
  }
}

BOOL AccountPresenter.signedIn.getter()
{
  swift_beginAccess();
  uint64_t v1 = *(void **)(v0 + 32);
  BOOL result = 0;
  if (v1)
  {
    id v2 = [v1 ams_DSID];

    if (v2) {
      return 1;
    }
  }
  return result;
}

uint64_t sub_362314()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 192);
  uint64_t v2 = *(void *)(*(void *)v0 + 200);
  type metadata accessor for AccountPresenter.AccountSection();
  sub_3D8110();
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  sub_3D8350();
  uint64_t result = swift_bridgeObjectRelease();
  if ((v5 & 1) == 0)
  {
    uint64_t result = FlowTransitionSource.view.getter();
    if (result)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 56))(v4, v1, v2);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t (*AccountPresenter.accountName.modify(void **a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  *a1 = AccountPresenter.accountName.getter();
  a1[1] = v3;
  return sub_362490;
}

uint64_t sub_362490(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  if ((a2 & 1) == 0) {
    return AccountPresenter.accountName.setter(*a1, v2);
  }
  swift_bridgeObjectRetain();
  AccountPresenter.accountName.setter(v3, v2);

  return swift_bridgeObjectRelease();
}

uint64_t AccountPresenter.passwordInputValue.getter()
{
  uint64_t v0 = sub_366D04();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t AccountPresenter.passwordInputValue.setter(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = a2;
  swift_bridgeObjectRelease();

  return sub_362314();
}

uint64_t (*AccountPresenter.passwordInputValue.modify(void *a1))(uint64_t *a1, char a2)
{
  a1[2] = v1;
  uint64_t v3 = *(void *)(v1 + 96);
  *a1 = *(void *)(v1 + 88);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_3625C0;
}

uint64_t sub_3625C0(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  if (a2)
  {
    *(void *)(v4 + 88) = v2;
    *(void *)(v4 + 96) = v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_362314();
    return swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(v4 + 88) = v2;
    *(void *)(v4 + 96) = v3;
    swift_bridgeObjectRelease();
    return sub_362314();
  }
}

BOOL AccountPresenter.canSignIn.getter()
{
  uint64_t v1 = AccountPresenter.accountName.getter();
  if (v2)
  {
    unint64_t v3 = (unint64_t)v1;
    unint64_t v4 = v2;
    swift_bridgeObjectRelease();
    uint64_t v5 = HIBYTE(v4) & 0xF;
    if ((v4 & 0x2000000000000000) == 0) {
      uint64_t v5 = v3 & 0xFFFFFFFFFFFFLL;
    }
    BOOL v6 = v5 == 0;
    unint64_t v7 = *(void *)(v0 + 96);
    if (v7)
    {
LABEL_5:
      if ((v7 & 0x2000000000000000) != 0) {
        uint64_t v8 = HIBYTE(v7) & 0xF;
      }
      else {
        uint64_t v8 = *(void *)(v0 + 88) & 0xFFFFFFFFFFFFLL;
      }
      BOOL v9 = v8 != 0;
      if (AccountPresenter.signedIn.getter()) {
        return 0;
      }
      goto LABEL_12;
    }
  }
  else
  {
    BOOL v6 = 1;
    unint64_t v7 = *(void *)(v0 + 96);
    if (v7) {
      goto LABEL_5;
    }
  }
  BOOL v9 = 0;
  if (AccountPresenter.signedIn.getter()) {
    return 0;
  }
LABEL_12:
  if ((*(unsigned __int8 *)(v0 + 64) | v6)) {
    return 0;
  }
  return v9;
}

uint64_t sub_3626F0()
{
  uint64_t v49 = *v0;
  uint64_t v1 = sub_3D6F40();
  __chkstk_darwin(v1 - 8);
  id v50 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for FlowDestination();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0570);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  BOOL v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v45);
  uint64_t v11 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v46 = (char *)&v45 - v13;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v45 - v15;
  uint64_t v17 = v0[14];
  if (v17)
  {
    sub_3D7710();
    sub_3D7730();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    uint64_t v18 = sub_3D2350();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
  }
  sub_30674((uint64_t)v16, (uint64_t)v5);
  uint64_t v47 = v3;
  swift_storeEnumTagMultiPayload();
  LOBYTE(v51[0]) = 5;
  char v52 = 0;
  uint64_t v19 = (uint64_t)v50;
  sub_3D6F00();
  type metadata accessor for FlowAction(0);
  swift_allocObject();
  uint64_t v48 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v5, 0, 0, 0, 0, (char *)v51, 0, 48, &v52, v19);
  sub_250FC((uint64_t)v16, &qword_4AD7B0);
  if (v17)
  {
    sub_3D7710();
    sub_3D7730();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v20 = sub_3D2350();
    uint64_t v21 = *(void *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v11, 1, v20) != 1)
    {
      uint64_t v22 = (uint64_t)v46;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v46, v11, v20);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v21 + 56))(v22, 0, 1, v20);
      goto LABEL_11;
    }
  }
  else
  {
    uint64_t v23 = sub_3D2350();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v11, 1, 1, v23);
  }
  uint64_t v22 = (uint64_t)v46;
  if (qword_4A9080 != -1) {
    swift_once();
  }
  uint64_t v24 = __swift_project_value_buffer(v45, (uint64_t)qword_4BF818);
  sub_30674(v24, v22);
  sub_250FC((uint64_t)v11, &qword_4AD7B0);
LABEL_11:
  sub_30674(v22, (uint64_t)v5);
  swift_storeEnumTagMultiPayload();
  LOBYTE(v51[0]) = 5;
  char v52 = 0;
  uint64_t v25 = (uint64_t)v50;
  sub_3D6F00();
  swift_allocObject();
  uint64_t v26 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v5, 0, 0, 0, 0, (char *)v51, 0, 48, &v52, v25);
  sub_250FC(v22, &qword_4AD7B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BF978);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_3E2600;
  *(void *)(v27 + 32) = sub_366BD0;
  *(void *)(v27 + 40) = 0;
  *(void *)(v27 + 48) = v26;
  *(unsigned char *)(v27 + 56) = 1;
  uint64_t v28 = qword_4A9088;
  swift_retain();
  uint64_t v29 = v48;
  if (v28 != -1) {
    swift_once();
  }
  uint64_t v30 = *(void *)algn_4BF838;
  uint64_t v31 = qword_4BF840;
  char v32 = byte_4BF848;
  *(void *)(v27 + 64) = qword_4BF830;
  *(void *)(v27 + 72) = v30;
  *(void *)(v27 + 80) = v31;
  *(unsigned char *)(v27 + 88) = v32;
  uint64_t v33 = qword_4A9090;
  swift_retain();
  swift_retain();
  if (v33 != -1) {
    swift_once();
  }
  uint64_t v34 = *(void *)algn_4BF858;
  uint64_t v35 = qword_4BF860;
  char v36 = byte_4BF868;
  *(void *)(v27 + 96) = qword_4BF850;
  *(void *)(v27 + 104) = v34;
  *(void *)(v27 + 112) = v35;
  *(unsigned char *)(v27 + 120) = v36;
  *(void *)(v27 + 128) = sub_366BB4;
  *(void *)(v27 + 136) = 0;
  *(void *)(v27 + 144) = v29;
  *(unsigned char *)(v27 + 152) = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4A97C8);
  uint64_t v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_3DED90;
  *(unsigned char *)(v37 + 32) = 0;
  uint64_t v38 = sub_3D3610();
  v51[3] = v38;
  v51[4] = sub_367224((unint64_t *)&qword_4AC678, (void (*)(uint64_t))&type metadata accessor for Podcasts);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v51);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v38 - 8) + 104))(boxed_opaque_existential_2Tm, enum case for Podcasts.ponderosa(_:), v38);
  swift_retain();
  swift_retain();
  swift_retain();
  LOBYTE(v34) = sub_3D3580();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
  if (v34)
  {
    unint64_t v41 = *(void *)(v37 + 16);
    unint64_t v40 = *(void *)(v37 + 24);
    if (v41 >= v40 >> 1) {
      uint64_t v37 = (uint64_t)sub_14050((void *)(v40 > 1), v41 + 1, 1, (void *)v37);
    }
    *(void *)(v37 + 16) = v41 + 1;
    *(unsigned char *)(v37 + v41 + 32) = 1;
  }
  type metadata accessor for AccountPresenter.AccountSection();
  sub_3D8FA0();
  swift_allocObject();
  uint64_t v42 = sub_3D8050();
  *(void *)uint64_t v43 = 3;
  *(unsigned char *)(v43 + 8) = 2;
  *(void *)(v43 + 16) = v37;
  *(unsigned char *)(v43 + 24) = 1;
  *(void *)(v43 + 32) = v27;
  *(unsigned char *)(v43 + 40) = 0;
  swift_release();
  swift_release();
  sub_3D8110();
  return v42;
}

uint64_t AccountPresenter.accountViewController.getter()
{
  return swift_unknownObjectWeakLoadStrong();
}

void AccountPresenter.accountViewController.setter(void *a1)
{
}

void (*AccountPresenter.accountViewController.modify(void *a1))(id **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_beginAccess();
  v3[3] = swift_unknownObjectWeakLoadStrong();
  return sub_363020;
}

void sub_363020(id **a1, char a2)
{
  uint64_t v3 = *a1;
  id v4 = (*a1)[3];
  swift_unknownObjectWeakAssign();
  if (a2)
  {

    swift_endAccess();
  }
  else
  {
    swift_endAccess();
  }

  free(v3);
}

uint64_t AccountPresenter.__allocating_init(asPartOf:)()
{
  return AccountPresenter.init(asPartOf:)();
}

uint64_t AccountPresenter.init(asPartOf:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = 0xD000000000000018;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0570);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v7 - 8);
  BOOL v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v0 + 64) = 0;
  *(_OWORD *)(v0 + 32) = 0u;
  *(_OWORD *)(v0 + 48) = 0u;
  *(_OWORD *)(v0 + 72) = 0u;
  *(_OWORD *)(v0 + 88) = 0u;
  type metadata accessor for AccountPresenter.AccountSection();
  sub_3D8FA0();
  swift_allocObject();
  swift_retain();
  uint64_t v10 = sub_3D8050();
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 2;
  *(void *)(v11 + 16) = 1;
  *(unsigned char *)(v11 + 24) = 2;
  *(void *)(v11 + 32) = 2;
  *(unsigned char *)(v11 + 40) = 2;
  sub_3D8110();
  *(void *)(v0 + 104) = v10;
  swift_unknownObjectWeakInit();
  type metadata accessor for ASKBagContract();
  sub_3D7080();
  uint64_t v12 = v19;
  *(void *)(v0 + 112) = v19;
  if (v12)
  {
    sub_3D7710();
    sub_3D7730();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v13 = sub_3D2350();
    uint64_t v14 = *(void *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v9, 1, v13) != 1)
    {
      uint64_t v2 = sub_3D2270();
      unint64_t v15 = v16;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v13);
      goto LABEL_6;
    }
    sub_250FC((uint64_t)v9, &qword_4AD7B0);
  }
  unint64_t v15 = 0x800000000040A3C0;
LABEL_6:
  swift_release();
  *(void *)(v1 + 120) = v2;
  *(void *)(v1 + 128) = v15;
  swift_release();
  return BasePresenter.init()();
}

uint64_t sub_3633E0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v3 = (void *)swift_allocObject();
  void v3[2] = *(void *)(v1 + 192);
  v3[3] = *(void *)(v1 + 200);
  v3[4] = v2;
  swift_retain();
  sub_3637D0((uint64_t)sub_367160, (uint64_t)v3);
  swift_release();

  return swift_release();
}

Swift::Void __swiftcall AccountPresenter.update()()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_3D6950();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_3D69A0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  BOOL v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((HomePageProvider.episodeOrderingFrozen.getter() & 1) == 0 && (v0[8] & 1) == 0)
  {
    sub_3D530(0, (unint64_t *)&qword_4AD4D0);
    uint64_t v10 = (void *)sub_3D8560();
    uint64_t v11 = swift_allocObject();
    swift_weakInit();
    uint64_t v12 = (void *)swift_allocObject();
    long long v12[2] = *(void *)(v1 + 192);
    v12[3] = *(void *)(v1 + 200);
    v12[4] = v11;
    aBlock[4] = sub_366D5C;
    aBlock[5] = v12;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_36F78;
    aBlock[3] = &block_descriptor_30;
    uint64_t v13 = _Block_copy(aBlock);
    swift_release();
    sub_3D6970();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_367224((unint64_t *)&qword_4AD860, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1C90);
    sub_9185C();
    sub_3D8A70();
    sub_3D8580();
    _Block_release(v13);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

void sub_3637D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  id v7 = [self sharedStore];
  uint64_t v8 = swift_allocObject();
  swift_weakInit();
  BOOL v9 = (void *)swift_allocObject();
  _OWORD v9[2] = *(void *)(v6 + 192);
  v9[3] = *(void *)(v6 + 200);
  v9[4] = v8;
  v9[5] = a1;
  v9[6] = a2;
  v11[4] = sub_3672B4;
  uint64_t v11[5] = v9;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_361EA8;
  v11[3] = &block_descriptor_47;
  uint64_t v10 = _Block_copy(v11);
  sub_97E7C(a1);
  swift_release();
  [v7 profilePictureForAccountOwnerWithoutMonogramFallbackWithPictureDiameter:v10 completion:56.0];
  _Block_release(v10);
}

uint64_t sub_363948()
{
  swift_retain();
  sub_3633E0();

  return swift_release();
}

void sub_363984(void *a1, uint64_t a2, void (*a3)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    swift_beginAccess();
    id v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = a1;
    id v8 = a1;
    swift_release();
  }
  if (a3) {
    a3();
  }
}

Swift::Void __swiftcall AccountPresenter.didLoad()()
{
  uint64_t v1 = *v0;
  id v2 = [self defaultCenter];
  [v2 addObserver:v0 selector:"profilePictureStoreDidChange" name:@"ASKProfilePictureStoreDidChange" object:0];

  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v4 = (void *)swift_allocObject();
  v4[2] = *(void *)(v1 + 192);
  v4[3] = *(void *)(v1 + 200);
  v4[4] = v3;
  swift_retain();
  sub_3637D0((uint64_t)sub_36730C, (uint64_t)v4);
  swift_release();

  swift_release();
}

uint64_t sub_363B48()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    AccountPresenter.update()();
    return swift_release();
  }
  return result;
}

uint64_t sub_363BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    swift_retain();
    sub_DCDC(1);
    swift_release();
    id v7 = [self ams_sharedAccountStore];
    id v8 = [v7 ams_activeiTunesAccount];

    swift_beginAccess();
    BOOL v9 = *(void **)(v6 + 32);
    *(void *)(v6 + 32) = v8;

    if (FlowTransitionSource.view.getter())
    {
      (*(void (**)(uint64_t))(*(void *)(a3 + 16) + 16))(a2);
      swift_unknownObjectRelease();
    }
    swift_retain();
    sub_DCDC(0);
    return swift_release_n();
  }
  return result;
}

uint64_t AccountPresenter.sectionCount.getter()
{
  if (AccountPresenter.signedIn.getter())
  {
    sub_3626F0();
    type metadata accessor for AccountPresenter.AccountSection();
    uint64_t v0 = sub_3D80B0();
    swift_bridgeObjectRelease();
    return v0;
  }
  else
  {
    type metadata accessor for AccountPresenter.AccountSection();
    return sub_3D80B0();
  }
}

uint64_t AccountPresenter.accountSection(for:)()
{
  if (AccountPresenter.signedIn.getter())
  {
    sub_3626F0();
    type metadata accessor for AccountPresenter.AccountSection();
    sub_3D8120();
    swift_bridgeObjectRelease();
  }
  else
  {
    type metadata accessor for AccountPresenter.AccountSection();
    sub_3D8120();
  }
  return v1;
}

Swift::Int __swiftcall AccountPresenter.numberOfItems(in:)(Swift::Int in)
{
  uint64_t v1 = AccountPresenter.accountSection(for:)();
  if (v2)
  {
    if (v2 == 1)
    {
      Swift::Int v3 = *(void *)(v1 + 16);
      sub_366D80(v1, 1u);
    }
    else
    {
      return qword_3F89B8[v1];
    }
  }
  else
  {
    Swift::Int v3 = *(void *)(v1 + 16);
    sub_366D80(v1, 0);
  }
  return v3;
}

id AccountPresenter.itemText(at:)()
{
  uint64_t v1 = sub_3D20F0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v5 = sub_3D2520();
  sub_3D2530();
  uint64_t v6 = AccountPresenter.accountSection(for:)();
  uint64_t v8 = v6;
  if (v7)
  {
    if (v7 != 1)
    {
      switch(v6)
      {
        case 1:
          BOOL v19 = AccountPresenter.signedIn.getter();
          uint64_t v10 = (objc_class *)[self mainBundle];
          v29._countAndFlagsBits = 0xE000000000000000;
          if (v19)
          {
            v16._countAndFlagsBits = 0x54554F5F4E474953;
            v16._object = (void *)0xE800000000000000;
          }
          else
          {
            v16._countAndFlagsBits = 0x4E495F4E474953;
            v16._object = (void *)0xE700000000000000;
          }
          goto LABEL_30;
        case 2:
          uint64_t v10 = (objc_class *)[self mainBundle];
          v16._countAndFlagsBits = 0xD000000000000017;
          v29._countAndFlagsBits = 0xE000000000000000;
          uint64_t v17 = "ACCOUNT_CREATE_APPLE_ID";
          goto LABEL_19;
        case 3:
          if (!AccountPresenter.signedIn.getter()) {
            return 0;
          }
          uint64_t v20 = (id *)(v0 + 32);
          swift_beginAccess();
          uint64_t v21 = *(void **)(v0 + 32);
          if (!v21) {
            return 0;
          }
          id v15 = [v21 ams_firstName];
          if (v15)
          {
            sub_3D7D50();

            sub_3D20E0();
            sub_3D20B0();
            if (*v20)
            {
              id v22 = [*v20 ams_lastName];
              if (v22)
              {
                uint64_t v23 = v22;
                sub_3D7D50();

                sub_3D20C0();
              }
            }
            uint64_t v24 = self;
            Class v25 = sub_3D20D0();
            id v26 = [v24 localizedStringFromPersonNameComponents:v25 style:0 options:0];

            id v15 = (id)sub_3D7D50();
            (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
          }
          return v15;
        default:
          if (v5 == 1)
          {
            uint64_t v10 = (objc_class *)[self mainBundle];
            v29._countAndFlagsBits = 0xE000000000000000;
            v16._object = (void *)0x800000000040A450;
            v16._countAndFlagsBits = 0xD000000000000010;
          }
          else
          {
            if (v5) {
              return 0;
            }
            uint64_t v10 = (objc_class *)[self mainBundle];
            v16._countAndFlagsBits = 0xD000000000000011;
            v29._countAndFlagsBits = 0xE000000000000000;
            uint64_t v17 = "ACCOUNT_APPLED_ID";
LABEL_19:
            v16._object = (void *)((unint64_t)(v17 - 32) | 0x8000000000000000);
          }
LABEL_30:
          v32.value._countAndFlagsBits = 0;
          v32.value._object = 0;
          v27.super.Class isa = v10;
          v34._countAndFlagsBits = 0;
          v34._object = (void *)0xE000000000000000;
          id v15 = (id)sub_3D2060(v16, v32, v27, v34, v29);
          break;
      }
      goto LABEL_31;
    }
    if ((v5 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v5 < *(void *)(v6 + 16))
    {
      char v9 = *(unsigned char *)(v6 + v5 + 32);
      uint64_t v10 = (objc_class *)[self mainBundle];
      if (v9)
      {
        v11._countAndFlagsBits = 0xD000000000000021;
        v29._countAndFlagsBits = 0xE000000000000000;
        uint64_t v12 = "ACCOUNT_FAVORITE_CATEGORIES_TITLE";
      }
      else
      {
        v11._countAndFlagsBits = 0xD00000000000001BLL;
        v29._countAndFlagsBits = 0xE000000000000000;
        uint64_t v12 = "ACCOUNT_NOTIFICATIONS_TITLE";
      }
      v11._object = (void *)((unint64_t)(v12 - 32) | 0x8000000000000000);
      v31.value._countAndFlagsBits = 0;
      v31.value._object = 0;
      v18.super.Class isa = v10;
      v33._countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      id v15 = (id)sub_3D2060(v11, v31, v18, v33, v29);
      sub_366D80(v8, 1u);
LABEL_31:

      return v15;
    }
    __break(1u);
    goto LABEL_36;
  }
  if ((v5 & 0x8000000000000000) != 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v5 >= *(void *)(v6 + 16))
  {
LABEL_37:
    __break(1u);
    JUMPOUT(0x364398);
  }
  uint64_t v13 = *(uint64_t (**)(uint64_t))(v6 + 32 * v5 + 32);
  swift_retain();
  uint64_t v14 = swift_retain();
  id v15 = (id)v13(v14);
  sub_366D80(v8, 0);
  swift_release();
  swift_release();
  return v15;
}

uint64_t AccountPresenter.itemSubtitle(at:)()
{
  sub_3D2530();
  uint64_t v1 = AccountPresenter.accountSection(for:)();
  if (v2 != 2 || v1 != 3)
  {
    sub_366D80(v1, v2);
    return 0;
  }
  if (!AccountPresenter.signedIn.getter()) {
    return 0;
  }
  swift_beginAccess();
  uint64_t v4 = *(void **)(v0 + 32);
  if (!v4) {
    return 0;
  }
  id v5 = [v4 username];
  if (!v5) {
    return 0;
  }
  uint64_t v6 = v5;
  uint64_t v7 = sub_3D7D50();

  return v7;
}

uint64_t AccountPresenter.itemDetail(at:)()
{
  return 0;
}

Swift::String_optional __swiftcall AccountPresenter.footerText(in:)(Swift::Int in)
{
  uint64_t v2 = AccountPresenter.accountSection(for:)();
  if (v3 != 2) {
    goto LABEL_11;
  }
  if (v2 == 1)
  {
    if (AccountPresenter.signedIn.getter()) {
      goto LABEL_12;
    }
    uint64_t v20 = (objc_class *)[self mainBundle];
    v21._countAndFlagsBits = 0xD00000000000001BLL;
    v25._countAndFlagsBits = 0xE000000000000000;
    v21._object = (void *)0x800000000040A4B0;
LABEL_17:
    v28.value._countAndFlagsBits = 0;
    v28.value._object = 0;
    v22.super.Class isa = v20;
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    uint64_t v15 = sub_3D2060(v21, v28, v22, v30, v25);
    uint64_t v17 = v23;

    goto LABEL_13;
  }
  if (v2 == 2)
  {
    uint64_t v20 = (objc_class *)[self mainBundle];
    v25._countAndFlagsBits = 0xE000000000000000;
    v21._object = (void *)0x800000000040A490;
    v21._countAndFlagsBits = 0xD000000000000013;
    goto LABEL_17;
  }
  if (v2 != 3)
  {
LABEL_11:
    sub_366D80(v2, v3);
    goto LABEL_12;
  }
  swift_beginAccess();
  uint64_t v4 = *(void **)(v1 + 32);
  if (!v4)
  {
LABEL_12:
    uint64_t v15 = 0;
    uint64_t v17 = 0;
    goto LABEL_13;
  }
  id v5 = v4;
  id v6 = [v5 ams_creditsString];
  if (!v6)
  {

    goto LABEL_12;
  }
  uint64_t v7 = v6;
  uint64_t v8 = sub_3D7D50();
  unint64_t v10 = v9;

  uint64_t v11 = HIBYTE(v10) & 0xF;
  if ((v10 & 0x2000000000000000) == 0) {
    uint64_t v11 = v8 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11)
  {

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  uint64_t v12 = (objc_class *)[self mainBundle];
  v25._countAndFlagsBits = 0xE000000000000000;
  v26._countAndFlagsBits = 0x5F544E554F434341;
  v26._object = (void *)0xEE00544944455243;
  v27.value._countAndFlagsBits = 0;
  v27.value._object = 0;
  v13.super.Class isa = v12;
  v29._countAndFlagsBits = 0;
  v29._object = (void *)0xE000000000000000;
  sub_3D2060(v26, v27, v13, v29, v25);

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B2460);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_3DED90;
  *(void *)(v14 + 56) = &type metadata for String;
  *(void *)(v14 + 64) = sub_296C0();
  *(void *)(v14 + 32) = v8;
  *(void *)(v14 + 40) = v10;
  uint64_t v15 = sub_3D7D80();
  uint64_t v17 = v16;

  swift_bridgeObjectRelease();
LABEL_13:
  uint64_t v18 = v15;
  BOOL v19 = v17;
  result.value._object = v19;
  result.value._countAndFlagsBits = v18;
  return result;
}

uint64_t AccountPresenter.placeholderText(at:)()
{
  sub_3D2530();
  uint64_t v0 = AccountPresenter.accountSection(for:)();
  unsigned __int8 v2 = v1;
  int v3 = v1;
  uint64_t v4 = sub_3D2520();
  if (v3 == 2 && v0 == 0)
  {
    if (v4 == 1)
    {
      id v6 = (objc_class *)[self mainBundle];
      v11._countAndFlagsBits = 0xE000000000000000;
      uint64_t v7 = "ACCOUNT_REQUIRED";
    }
    else
    {
      if (v4) {
        return 0;
      }
      id v6 = (objc_class *)[self mainBundle];
      v11._countAndFlagsBits = 0xE000000000000000;
      uint64_t v7 = "ACCOUNT_APPLE_ID";
    }
    v12._object = (void *)((unint64_t)(v7 - 32) | 0x8000000000000000);
    v12._countAndFlagsBits = 0xD000000000000010;
    v13.value._countAndFlagsBits = 0;
    v13.value._object = 0;
    v9.super.Class isa = v6;
    v14._countAndFlagsBits = 0;
    v14._object = (void *)0xE000000000000000;
    uint64_t v8 = sub_3D2060(v12, v13, v9, v14, v11);

    return v8;
  }
  sub_366D80(v0, v2);
  return 0;
}

uint64_t AccountPresenter.title.getter()
{
  uint64_t v0 = (objc_class *)[self mainBundle];
  v4._countAndFlagsBits = 0xE000000000000000;
  v5._countAndFlagsBits = 0x544E554F434341;
  v5._object = (void *)0xE700000000000000;
  v6.value._countAndFlagsBits = 0;
  v6.value._object = 0;
  v1.super.Class isa = v0;
  v7._countAndFlagsBits = 0;
  v7._object = (void *)0xE000000000000000;
  uint64_t v2 = sub_3D2060(v5, v6, v1, v7, v4);

  return v2;
}

void sub_3648DC(char a1, uint64_t a2)
{
  *(unsigned char *)(v2 + 64) = 0;
  sub_3620E4();
  if (a1)
  {
    *(void *)(v2 + 72) = 0;
    *(void *)(v2 + 80) = 0;
    swift_bridgeObjectRelease();
    *(void *)(v2 + 88) = 0;
    *(void *)(v2 + 96) = 0;
    swift_bridgeObjectRelease();
    AccountPresenter.update()();
  }
  else
  {
    *(void *)(v2 + 88) = 0;
    *(void *)(v2 + 96) = 0;
    swift_bridgeObjectRelease();
    if (!a2) {
      return;
    }
    id v15 = (id)sub_3D2160();
    id v5 = [v15 ams_underlyingError];
    if (v5)
    {
      id v14 = v5;
      id v6 = [v5 domain];
      uint64_t v7 = sub_3D7D50();
      uint64_t v9 = v8;

      if (v7 == sub_3D7D50() && v9 == v10)
      {

        swift_bridgeObjectRelease_n();
        return;
      }
      char v12 = sub_3D8FE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0) {
        sub_364A60();
      }

      Swift::String_optional v13 = v14;
    }
    else
    {
      Swift::String_optional v13 = v15;
    }
  }
}

void sub_364A60()
{
  uint64_t v0 = self;
  NSBundle v1 = (objc_class *)[v0 mainBundle];
  v14._countAndFlagsBits = 0xE000000000000000;
  v17._object = (void *)0x800000000040A710;
  v17._countAndFlagsBits = 0xD000000000000015;
  v20.value._countAndFlagsBits = 0;
  v20.value._object = 0;
  v2.super.Class isa = v1;
  v23._countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  sub_3D2060(v17, v20, v2, v23, v14);

  int v3 = (objc_class *)[v0 mainBundle];
  v18._countAndFlagsBits = 0xD00000000000001BLL;
  v15._countAndFlagsBits = 0xE000000000000000;
  v18._object = (void *)0x800000000040A730;
  v21.value._countAndFlagsBits = 0;
  v21.value._object = 0;
  v4.super.Class isa = v3;
  v24._countAndFlagsBits = 0;
  v24._object = (void *)0xE000000000000000;
  sub_3D2060(v18, v21, v4, v24, v15);

  NSString v5 = sub_3D7D10();
  swift_bridgeObjectRelease();
  NSString v6 = sub_3D7D10();
  swift_bridgeObjectRelease();
  id v7 = [self alertControllerWithTitle:v5 message:v6 preferredStyle:1];

  uint64_t v8 = (objc_class *)[v0 mainBundle];
  v16._countAndFlagsBits = 0xE000000000000000;
  v19._countAndFlagsBits = 0x4F5F4E4F49544341;
  v19._object = (void *)0xE90000000000004BLL;
  v22.value._countAndFlagsBits = 0;
  v22.value._object = 0;
  v9.super.Class isa = v8;
  v25._countAndFlagsBits = 0;
  v25._object = (void *)0xE000000000000000;
  sub_3D2060(v19, v22, v9, v25, v16);

  NSString v10 = sub_3D7D10();
  swift_bridgeObjectRelease();
  id v11 = [self actionWithTitle:v10 style:0 handler:0];

  [v7 addAction:v11];
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String_optional v13 = Strong;
    [Strong presentViewController:v7 animated:1 completion:0];
  }
}

Swift::Void __swiftcall AccountPresenter.signIn()()
{
  AccountPresenter.accountName.getter();
  if (v1)
  {
    if (*(void *)(v0 + 96))
    {
      *(unsigned char *)(v0 + 64) = 1;
      swift_bridgeObjectRetain();
      sub_3620E4();
      id v2 = [objc_allocWithZone((Class)AMSAuthenticateOptions) init];
      [v2 setAuthenticationType:0];
      id v3 = objc_allocWithZone((Class)AMSAuthenticateRequest);
      id v4 = v2;
      NSString v5 = sub_3D7D10();
      swift_bridgeObjectRelease();
      id v6 = [v3 initWithDSID:0 altDSID:0 username:v5 options:v4];

      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v8 = (void *)Strong;
        id v9 = objc_allocWithZone((Class)AMSUIAuthenticateTask);
        id v10 = v6;
        id v11 = [v9 initWithRequest:v10 presentingViewController:v8];
      }
      else
      {
        id v11 = [objc_allocWithZone((Class)AMSAuthenticateTask) initWithRequest:v6];
      }
      NSString v12 = sub_3D7D10();
      swift_bridgeObjectRelease();
      [v11 setRawPassword:v12];

      swift_retain();
      sub_364EFC(v11, (uint64_t)sub_367220, v0);

      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
}

void sub_364EFC(void *a1, uint64_t a2, uint64_t a3)
{
  id v6 = [a1 performAuthentication];
  sub_366C84();
  id v7 = *(void **)(v3 + 48);
  *(void *)(v3 + 48) = v6;

  uint64_t v8 = *(void **)(v3 + 48);
  if (v8)
  {
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a2;
    *(void *)(v9 + 24) = a3;
    v12[4] = sub_3671C4;
    v12[5] = v9;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    long long v12[2] = sub_125FA4;
    v12[3] = &block_descriptor_34_0;
    id v10 = _Block_copy(v12);
    id v11 = v8;
    swift_retain();
    swift_release();
    [v11 addFinishBlock:v10];
    _Block_release(v10);
  }
}

uint64_t sub_365018(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_3D6950();
  uint64_t v20 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_3D69A0();
  uint64_t v11 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  Swift::String_optional v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3D530(0, (unint64_t *)&qword_4AD4D0);
  Swift::String v14 = (void *)sub_3D8560();
  Swift::String v15 = (void *)swift_allocObject();
  void v15[2] = a1;
  v15[3] = a2;
  v15[4] = a3;
  v15[5] = a4;
  aBlock[4] = sub_367214;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_36F78;
  aBlock[3] = &block_descriptor_40;
  Swift::String v16 = _Block_copy(aBlock);
  id v17 = a1;
  swift_errorRetain();
  swift_retain();
  swift_release();
  sub_3D6970();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_367224((unint64_t *)&qword_4AD860, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1C90);
  sub_9185C();
  sub_3D8A70();
  sub_3D8580();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v19);
}

uint64_t sub_3652F8(void *a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (a1 && !a2 && (id v5 = [a1 account], v5, v5))
  {
    uint64_t v6 = 1;
  }
  else
  {
    sub_3D83F0();
    sub_3D530(0, (unint64_t *)&qword_4AD680);
    id v7 = (void *)sub_3D8840();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B2460);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_3DED90;
    __swift_instantiateConcreteTypeFromMangledName(&qword_4BF970);
    uint64_t v9 = sub_3D88E0();
    uint64_t v11 = v10;
    *(void *)(v8 + 56) = &type metadata for String;
    *(void *)(v8 + 64) = sub_296C0();
    *(void *)(v8 + 32) = v9;
    *(void *)(v8 + 40) = v11;
    sub_3D53A0();

    swift_bridgeObjectRelease();
    uint64_t v6 = 0;
  }
  return a3(v6, a2);
}

void sub_36547C()
{
  uint64_t v1 = *v0;
  id v2 = self;
  id v3 = [v2 ams_sharedAccountStore];
  id v12 = [v3 ams_activeiTunesAccount];

  if (v12)
  {
    [v12 setActive:0];
    id v4 = [v2 ams_sharedAccountStore];
    id v5 = [v4 ams_saveAccount:v12];

    [(id)v0[7] cancel];
    uint64_t v6 = (void *)v0[7];
    v0[7] = (uint64_t)v5;

    id v7 = (void *)v0[7];
    if (v7)
    {
      uint64_t v8 = swift_allocObject();
      swift_weakInit();
      uint64_t v9 = (void *)swift_allocObject();
      _OWORD v9[2] = *(void *)(v1 + 192);
      v9[3] = *(void *)(v1 + 200);
      v9[4] = v8;
      aBlock[4] = sub_367180;
      aBlock[5] = v9;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_365810;
      aBlock[3] = &block_descriptor_28;
      uint64_t v10 = _Block_copy(aBlock);
      id v11 = v7;
      swift_release();
      [v11 addFinishBlock:v10];

      _Block_release(v10);
    }
    else
    {
    }
  }
}

uint64_t sub_3656A8(char a1)
{
  if ((a1 & 1) == 0)
  {
    sub_3D83F0();
    sub_3D530(0, (unint64_t *)&qword_4AD680);
    uint64_t v1 = (void *)sub_3D8840();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B2460);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_3DED90;
    __swift_instantiateConcreteTypeFromMangledName(&qword_4BF970);
    uint64_t v3 = sub_3D88E0();
    uint64_t v5 = v4;
    *(void *)(v2 + 56) = &type metadata for String;
    *(void *)(v2 + 64) = sub_296C0();
    *(void *)(v2 + 32) = v3;
    *(void *)(v2 + 40) = v5;
    sub_3D53A0();

    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    AccountPresenter.update()();
    return swift_release();
  }
  return result;
}

void sub_365810(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

BOOL AccountPresenter.shouldSelectItem(at:)()
{
  sub_3D2530();
  uint64_t v0 = AccountPresenter.accountSection(for:)();
  if (v1 != 2 || v0 != 1)
  {
    sub_366D80(v0, v1);
    return 1;
  }
  if (AccountPresenter.signedIn.getter()) {
    return 1;
  }
  if (AccountPresenter.signedIn.getter()) {
    return 0;
  }

  return AccountPresenter.canSignIn.getter();
}

void AccountPresenter.didSelectItem(at:)()
{
  uint64_t v64 = *v0;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0570);
  uint64_t v59 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v59 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v4);
  id v6 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_3D6F40();
  uint64_t v60 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v63 = (char *)&v59 - v11;
  uint64_t v62 = type metadata accessor for FlowDestination();
  __chkstk_darwin(v62);
  Swift::String_optional v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v61 = (uint64_t *)((char *)&v59 - v15);
  sub_3D2530();
  uint64_t v65 = v0;
  uint64_t v17 = AccountPresenter.accountSection(for:)();
  if (!v16)
  {
    unint64_t v28 = sub_3D2520();
    if ((v28 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v28 < *(void *)(v17 + 16))
    {
      uint64_t v29 = *(void *)(v17 + 32 * v28 + 48);
      if (v29)
      {
        Swift::String v30 = v65;
        if (FlowTransitionSource.view.getter())
        {
          uint64_t v69 = type metadata accessor for Action();
          uint64_t v70 = sub_367224((unint64_t *)&qword_4ABB38, (void (*)(uint64_t))type metadata accessor for Action);
          uint64_t v67 = v64;
          *(void *)uint64_t v68 = v29;
          *(void *)uint64_t v66 = v30;
          uint64_t v31 = *(void *)(v64 + 192);
          uint64_t v32 = *(void *)(*(void *)(v64 + 200) + 8);
          Swift::String v33 = *(void (**)(char *, char *, uint64_t, uint64_t))(v32 + 16);
          swift_retain_n();
          swift_retain();
          swift_retain();
          v33(v68, v66, v31, v32);
          swift_release();
          swift_unknownObjectRelease();
          swift_release_n();
          uint64_t v34 = v17;
          unsigned __int8 v35 = 0;
LABEL_29:
          sub_366D80(v34, v35);
LABEL_44:
          sub_250FC((uint64_t)v66, (uint64_t *)&unk_4B5A40);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
          return;
        }
      }
      uint64_t v36 = v17;
      unsigned __int8 v37 = 0;
      goto LABEL_24;
    }
    __break(1u);
    goto LABEL_49;
  }
  if (v16 != 1)
  {
    switch(v17)
    {
      case 1:
        if (AccountPresenter.signedIn.getter() || !AccountPresenter.canSignIn.getter())
        {
          if (AccountPresenter.signedIn.getter())
          {
            sub_36547C();
          }
        }
        else
        {
          AccountPresenter.signIn()();
        }
        return;
      case 2:
        if (qword_4A9078 == -1) {
          goto LABEL_31;
        }
        goto LABEL_51;
      case 3:
        if (v65[14])
        {
          sub_3D7710();
          sub_3D7730();
          (*(void (**)(char *, uint64_t))(v59 + 8))(v3, v1);
          uint64_t v48 = sub_3D2350();
          uint64_t v49 = *(void *)(v48 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v6, 1, v48) != 1)
          {
            (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v13, v6, v48);
            goto LABEL_41;
          }
        }
        else
        {
          uint64_t v50 = sub_3D2350();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v6, 1, 1, v50);
        }
        id v51 = ASKFinanceTypeGetUrl(0);
        sub_3D22E0();

        sub_250FC((uint64_t)v6, &qword_4AD7B0);
LABEL_41:
        uint64_t v52 = sub_3D2350();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v13, 0, 1, v52);
        swift_storeEnumTagMultiPayload();
        v68[0] = 0;
        v66[0] = 0;
        uint64_t v53 = (uint64_t)v63;
        sub_3D6F00();
        uint64_t v46 = type metadata accessor for FlowAction(0);
        swift_allocObject();
        uint64_t v47 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v13, 0, 0, 0, 0, v68, 0, 48, v66, v53);
        break;
      default:
        return;
    }
    goto LABEL_42;
  }
  Swift::String v18 = v65;
  if (FlowTransitionSource.view.getter())
  {
    unint64_t v19 = sub_3D2520();
    if ((v19 & 0x8000000000000000) == 0)
    {
      if (v19 < *(void *)(v17 + 16))
      {
        if (*(unsigned char *)(v17 + v19 + 32))
        {
          sub_3D6F00();
          id v20 = [self currentTraitCollection];
          id v21 = [v20 userInterfaceIdiom];

          if ((unint64_t)v21 >= 6) {
            char v22 = 0;
          }
          else {
            char v22 = 0x80000000504uLL >> (8 * v21);
          }
          Swift::String v23 = v61;
          swift_storeEnumTagMultiPayload();
          v68[0] = v22;
          uint64_t v24 = v60;
          uint64_t v25 = (uint64_t)v63;
          (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v63, v9, v7);
          v66[0] = 0;
          uint64_t v26 = type metadata accessor for FlowAction(0);
          swift_allocObject();
          uint64_t v27 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v23, 0, 0, 0, 0, v68, 0, 48, v66, v25);
          (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v7);
        }
        else
        {
          uint64_t v38 = v61;
          *uint64_t v61 = 0;
          v38[1] = 0;
          swift_storeEnumTagMultiPayload();
          v68[0] = 0;
          v66[0] = 0;
          uint64_t v39 = (uint64_t)v63;
          sub_3D6F00();
          uint64_t v26 = type metadata accessor for FlowAction(0);
          swift_allocObject();
          uint64_t v27 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v38, 0, 0, 0, 0, v68, 0, 48, v66, v39);
        }
        type metadata accessor for FlowAction(0);
        uint64_t v69 = v26;
        uint64_t v70 = sub_367224((unint64_t *)&qword_4B1FA0, (void (*)(uint64_t))type metadata accessor for FlowAction);
        uint64_t v67 = v64;
        *(void *)uint64_t v68 = v27;
        *(void *)uint64_t v66 = v18;
        uint64_t v40 = *(void *)(v64 + 192);
        uint64_t v41 = *(void *)(*(void *)(v64 + 200) + 8);
        uint64_t v42 = *(void (**)(char *, char *, uint64_t, uint64_t))(v41 + 16);
        swift_retain();
        v42(v68, v66, v40, v41);
        swift_unknownObjectRelease();
        uint64_t v34 = v17;
        unsigned __int8 v35 = 1;
        goto LABEL_29;
      }
      goto LABEL_50;
    }
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    swift_once();
LABEL_31:
    uint64_t v43 = __swift_project_value_buffer(v4, (uint64_t)qword_4BF800);
    uint64_t v44 = v61;
    sub_30674(v43, (uint64_t)v61);
    swift_storeEnumTagMultiPayload();
    v68[0] = 0;
    v66[0] = 0;
    uint64_t v45 = (uint64_t)v63;
    sub_3D6F00();
    uint64_t v46 = type metadata accessor for FlowAction(0);
    swift_allocObject();
    uint64_t v47 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v44, 0, 0, 0, 0, v68, 0, 48, v66, v45);
LABEL_42:
    uint64_t v54 = v47;
    id v55 = v65;
    if (!FlowTransitionSource.view.getter())
    {
      swift_release();
      return;
    }
    uint64_t v69 = v46;
    uint64_t v70 = sub_367224((unint64_t *)&qword_4B1FA0, (void (*)(uint64_t))type metadata accessor for FlowAction);
    uint64_t v67 = v64;
    *(void *)uint64_t v68 = v54;
    *(void *)uint64_t v66 = v55;
    uint64_t v56 = *(void *)(v64 + 192);
    uint64_t v57 = *(void *)(*(void *)(v64 + 200) + 8);
    id v58 = *(void (**)(char *, char *, uint64_t, uint64_t))(v57 + 16);
    swift_retain();
    swift_retain();
    v58(v68, v66, v56, v57);
    swift_unknownObjectRelease();
    swift_release();
    goto LABEL_44;
  }
  uint64_t v36 = v17;
  unsigned __int8 v37 = 1;
LABEL_24:

  sub_366D80(v36, v37);
}

uint64_t AccountPresenter.didSelectFooter(at:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t result = sub_3D2500();
  if ((v4 & 1) == 0)
  {
    uint64_t v5 = AccountPresenter.accountSection(for:)();
    if (v6 == 2 && v5 == 1)
    {
      uint64_t v8 = (objc_class *)[self mainBundle];
      v21[0]._countAndFlagsBits = 0xE000000000000000;
      v25._object = (void *)0x800000000040A4B0;
      v25._countAndFlagsBits = 0xD00000000000001BLL;
      v26.value._countAndFlagsBits = 0;
      v26.value._object = 0;
      v9.super.Class isa = v8;
      v27._countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      uint64_t v10 = sub_3D2060(v25, v26, v9, v27, v21[0]);
      uint64_t v12 = v11;

      uint64_t v13 = v1[15];
      uint64_t v14 = v1[16];
      uint64_t v15 = type metadata accessor for ExternalUrlAction();
      swift_allocObject();
      swift_bridgeObjectRetain();
      uint64_t result = (uint64_t)ExternalUrlAction.init(title:urlString:isSensitive:presentationStyle:requiresSignedInUser:)(v10, v12, v13, v14, 0, 0, 0);
      if (result)
      {
        uint64_t v16 = result;
        if (FlowTransitionSource.view.getter())
        {
          v23[3] = v15;
          v23[4] = sub_367224(&qword_4B00D0, (void (*)(uint64_t))type metadata accessor for ExternalUrlAction);
          uint64_t v22 = v2;
          v23[0] = v16;
          v21[0]._object = v1;
          uint64_t v18 = v2 + 192;
          uint64_t v17 = *(void *)(v2 + 192);
          uint64_t v19 = *(void *)(*(void *)(v18 + 8) + 8);
          id v20 = *(void (**)(void *, void **, uint64_t, uint64_t))(v19 + 16);
          swift_retain();
          swift_retain();
          v20(v23, &v21[0]._object, v17, v19);
          swift_unknownObjectRelease();
          swift_release();
          sub_250FC((uint64_t)&v21[0]._object, (uint64_t *)&unk_4B5A40);
          return __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
        }
        else
        {
          return swift_release();
        }
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      return sub_366D80(v5, v6);
    }
  }
  return result;
}

void AccountPresenter.__allocating_init()()
{
}

void AccountPresenter.init()()
{
}

uint64_t sub_36660C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();

  return swift_unknownObjectWeakDestroy();
}

id *AccountPresenter.deinit()
{
  uint64_t v0 = (id *)FlowTransitionSource.deinit();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_unknownObjectWeakDestroy();
  return v0;
}

uint64_t AccountPresenter.__deallocating_deinit()
{
  AccountPresenter.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_366724()
{
  uint64_t v0 = sub_3D6F40();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for FlowDestination();
  __chkstk_darwin(v3);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  NSBundle v9 = ASKFinanceTypeGetUrl(1uLL);
  sub_3D22E0();

  uint64_t v10 = sub_3D2350();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  sub_30674((uint64_t)v8, (uint64_t)v5);
  swift_storeEnumTagMultiPayload();
  char v15 = 5;
  char v14 = 0;
  sub_3D6F00();
  type metadata accessor for FlowAction(0);
  swift_allocObject();
  uint64_t v11 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v5, 0, 0, 0, 0, &v15, 0, 48, &v14, (uint64_t)v2);
  uint64_t result = sub_250FC((uint64_t)v8, &qword_4AD7B0);
  qword_4BF830 = (uint64_t)sub_366950;
  *(void *)algn_4BF838 = 0;
  qword_4BF840 = v11;
  byte_4BF848 = 1;
  return result;
}

uint64_t sub_366950()
{
  return sub_366BEC(0x5F544E554F434341, (void *)0xEE004D4545444552);
}

uint64_t sub_366974()
{
  uint64_t v0 = sub_3D6F40();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = type metadata accessor for FlowDestination();
  __chkstk_darwin(v3);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  NSBundle v9 = ASKFinanceTypeGetUrl(2uLL);
  sub_3D22E0();

  uint64_t v10 = sub_3D2350();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 0, 1, v10);
  sub_30674((uint64_t)v8, (uint64_t)v5);
  swift_storeEnumTagMultiPayload();
  char v15 = 5;
  char v14 = 0;
  sub_3D6F00();
  type metadata accessor for FlowAction(0);
  swift_allocObject();
  uint64_t v11 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v5, 0, 0, 0, 0, &v15, 0, 48, &v14, (uint64_t)v2);
  uint64_t result = sub_250FC((uint64_t)v8, &qword_4AD7B0);
  qword_4BF850 = (uint64_t)sub_366B98;
  *(void *)algn_4BF858 = 0;
  qword_4BF860 = v11;
  byte_4BF868 = 1;
  return result;
}

uint64_t sub_366B98()
{
  return sub_366BEC(0xD000000000000011, (void *)0x800000000040A750);
}

uint64_t sub_366BB4()
{
  return sub_366BEC(0xD000000000000011, (void *)0x800000000040A7E0);
}

uint64_t sub_366BD0()
{
  return sub_366BEC(0xD000000000000015, (void *)0x800000000040A770);
}

uint64_t sub_366BEC(uint64_t a1, void *a2)
{
  uint64_t v4 = (objc_class *)[self mainBundle];
  v8._countAndFlagsBits = 0xE000000000000000;
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  v10.value._countAndFlagsBits = 0;
  v10.value._object = 0;
  v5.super.Class isa = v4;
  v11._countAndFlagsBits = 0;
  v11._object = (void *)0xE000000000000000;
  uint64_t v6 = sub_3D2060(v9, v10, v5, v11, v8);

  return v6;
}

void sub_366C84()
{
  uint64_t v1 = *(void **)(v0 + 48);
  if (v1)
  {
    id v2 = v1;
    if (([v2 isCancelled] & 1) == 0
      && ([v2 isFinished] & 1) == 0)
    {
      [v2 cancel];
    }
  }
}

uint64_t sub_366D04()
{
  return *(void *)(v0 + 88);
}

uint64_t type metadata accessor for AccountPresenter.AccountSection()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_366D24()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_366D5C()
{
  return sub_363BA0(v0[4], v0[2], v0[3]);
}

uint64_t block_copy_helper_30(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_30()
{
  return swift_release();
}

uint64_t sub_366D80(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_366D94@<X0>(void *a1@<X8>)
{
  uint64_t result = AccountPresenter.accountName.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_366DC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, AccountPresenter.accountName.setter);
}

uint64_t sub_366DD8()
{
  return 16;
}

__n128 sub_366DE4(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_366DF0@<X0>(uint64_t *a1@<X8>)
{
  *a1 = sub_366D04();
  a1[1] = v2;

  return swift_bridgeObjectRetain();
}

uint64_t sub_366E30(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, AccountPresenter.passwordInputValue.setter);
}

uint64_t keypath_setTm(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  swift_bridgeObjectRetain();
  return a5(v7, v6);
}

uint64_t sub_366E90()
{
  return 16;
}

__n128 sub_366E9C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_366EA8@<X0>(uint64_t *a1@<X8>)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  *a1 = result;
  return result;
}

uint64_t sub_366EF8()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_366F48()
{
  return 16;
}

__n128 sub_366F54(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_366F60()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AccountPresenter()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for AccountPresenter(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for AccountPresenter);
}

uint64_t dispatch thunk of AccountPresenter.__allocating_init(asPartOf:)()
{
  return (*(uint64_t (**)(void))(v0 + 296))();
}

uint64_t sub_367028(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_367070(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_367070(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 1u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_367084(uint64_t a1)
{
  return sub_366D80(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_367094(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_367070(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_366D80(v5, v6);
  return a1;
}

uint64_t sub_3670E8(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_366D80(v4, v5);
  return a1;
}

uint64_t sub_367128()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_367160()
{
  return sub_363B48();
}

uint64_t sub_367180(char a1)
{
  return sub_3656A8(a1);
}

uint64_t sub_36718C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_3671C4(void *a1, uint64_t a2)
{
  return sub_365018(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_3671CC()
{
  swift_errorRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_367214()
{
  return sub_3652F8(*(void **)(v0 + 16), *(void *)(v0 + 24), *(uint64_t (**)(uint64_t, uint64_t))(v0 + 32));
}

uint64_t sub_367224(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_36726C()
{
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return _swift_deallocObject(v0, 56, 7);
}

void sub_3672B4(void *a1)
{
  sub_363984(a1, *(void *)(v1 + 32), *(void (**)(void))(v1 + 40));
}

BOOL sub_3672C4(uint64_t a1)
{
  return *(void *)a1 == 1 && *(unsigned char *)(a1 + 8) == 2;
}

double sub_367310@<D0>(uint64_t a1@<X8>)
{
  return Paragraph.clickAction.getter(a1);
}

uint64_t ShelfAttributes.pageSize.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ShelfAttributes() + 20);
  uint64_t v4 = sub_3D3400();
  unsigned __int8 v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for ShelfAttributes()
{
  uint64_t result = qword_4BF9D8;
  if (!qword_4BF9D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ShelfAttributes.init(sizeClass:pageSize:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  *a3 = a1;
  uint64_t v4 = &a3[*(int *)(type metadata accessor for ShelfAttributes() + 20)];
  uint64_t v5 = sub_3D3400();
  unsigned __int8 v6 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a2, v5);
}

uint64_t static ShelfAttributes.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_3D3490();
  double v5 = v4;
  sub_3D3490();
  if (v5 != v6) {
    return 0;
  }
  uint64_t v7 = *(int *)(type metadata accessor for ShelfAttributes() + 20);

  return static PageSize.== infix(_:_:)(a1 + v7, a2 + v7);
}

uint64_t sub_3674FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_3D3490();
  double v7 = v6;
  sub_3D3490();
  if (v7 != v8) {
    return 0;
  }
  uint64_t v9 = *(int *)(a3 + 20);

  return static PageSize.== infix(_:_:)(a1 + v9, a2 + v9);
}

uint64_t static TypedShelfUIKitCell.modelType.getter()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return AssociatedTypeWitness;
}

uint64_t sub_3675F4()
{
  uint64_t v0 = sub_3D5640();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = 0;
  unint64_t v13 = 0xE000000000000000;
  sub_3D8BC0(52);
  v14._object = (void *)0x8000000000402500;
  v14._countAndFlagsBits = 0xD00000000000001ALL;
  sub_3D7E90(v14);
  swift_getObjectType();
  v15._countAndFlagsBits = sub_3D92F0();
  sub_3D7E90(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0x7374636570786520;
  v16._object = (void *)0xE900000000000020;
  sub_3D7E90(v16);
  swift_getAssociatedTypeWitness();
  v17._countAndFlagsBits = sub_3D92F0();
  sub_3D7E90(v17);
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = 0x766965636572202CLL;
  v18._object = (void *)0xEB00000000206465;
  sub_3D7E90(v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4A9A00);
  sub_3D8D40();
  uint64_t v5 = v12;
  unint64_t v4 = v13;
  sub_3D55A0();
  swift_bridgeObjectRetain();
  double v6 = sub_3D5630();
  os_log_type_t v7 = sub_3D8400();
  if (os_log_type_enabled(v6, v7))
  {
    double v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    v11[0] = v0;
    uint64_t v12 = v9;
    *(_DWORD *)double v8 = 136315138;
    swift_bridgeObjectRetain();
    v11[1] = sub_1FB7E8(v5, v4, &v12);
    sub_3D8930();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v6, v7, "%s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(char *, void))(v1 + 8))(v3, v11[0]);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
}

uint64_t TypedShelfUIKitCell.apply(model:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = sub_3D8910();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  Swift::String_optional v10 = &v19[-v9 - 8];
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(v12);
  Swift::String v14 = &v19[-v13 - 8];
  sub_18168(a1, (uint64_t)v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4A9A00);
  int v15 = swift_dynamicCast();
  Swift::String v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  if (v15)
  {
    v16(v10, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v14, v10, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t, uint64_t))(a3 + 32))(v14, a2, a3);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, AssociatedTypeWitness);
  }
  else
  {
    v16(v10, 1, 1, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return sub_3675F4();
  }
}

BOOL ShelfUIKitCell.doesCellOverrideClickAction.getter(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void *__return_ptr))(a2 + 72))(v4);
  BOOL v2 = v4[3] != 0;
  sub_250FC((uint64_t)v4, (uint64_t *)&unk_4BC3D0);
  return v2;
}

uint64_t ShelfUIKitCell.perform(_:from:in:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_3D6F60();
  uint64_t v22 = *(void *)(v10 - 8);
  uint64_t v23 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_3D7AE0();
  uint64_t v14 = *(void *)(v13 - 8);
  __n128 v15 = __chkstk_darwin(v13);
  Swift::String v17 = (char *)&v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(uint64_t (**)(uint64_t, uint64_t, __n128))(a5 + 24))(a4, a5, v15))
  {
    type metadata accessor for ActionRunnerOptions();
    swift_retain();
    sub_3D7190();
    sub_2A1B0(a2, (uint64_t)v24);
    Swift::String v25 = a3;
    id v18 = a3;
    uint64_t v19 = _s8ShelfKit19ActionRunnerOptionsC04withC6OriginyACXDAA0cG0VSgF_0((uint64_t)v24);
    sub_250FC((uint64_t)v24, &qword_4AA9B0);
    swift_release();
    sub_18168(a1, (uint64_t)v24);
    uint64_t v26 = v19;
    uint64_t v20 = ActionPerformer.callAsFunction()();
    swift_release();
    sub_2A274((uint64_t)v24);
  }
  else
  {
    sub_3D7A90();
    __swift_instantiateConcreteTypeFromMangledName(&qword_4A9AF8);
    sub_3D6BF0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_3DED90;
    sub_3D6B70();
    sub_3D7820();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v17, v13);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4BC3E0);
    (*(void (**)(char *, void, uint64_t))(v22 + 104))(v12, enum case for ActionOutcome.unsupported(_:), v23);
    return sub_3D7A10();
  }
  return v20;
}

uint64_t dispatch thunk of ShelfUIKitCell.objectGraph.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ShelfUIKitCell.shelfAttributesDidChange(attributes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ShelfUIKitCell.prepareForUse(asPartOf:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of ShelfUIKitCell.apply(model:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ShelfUIKitCell.prepareForDisplay(presentation:cellReloadingHandler:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of ShelfUIKitCell.extraContextMenuElements()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ShelfUIKitCell.clickActionOverride.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of ShelfUIKitCell.isSelectable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of TypedShelfUIKitCell.apply(model:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of DeletableShelfUIKitCell.itemIsDeletable.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DeletableShelfUIKitCell.itemIsDeletable.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of DeletableShelfUIKitCell.itemIsDeletable.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of DeletableShelfUIKitCell.deletionUITriggered.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DeletableShelfUIKitCell.deletionUITriggered.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of DeletableShelfUIKitCell.deletionUITriggered.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of MultiSelectableShelfUIKitCell.shouldDisplayMultiSelectUI.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of MultiSelectableShelfUIKitCell.shouldDisplayMultiSelectUI.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of MultiSelectableShelfUIKitCell.shouldDisplayMultiSelectUI.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t *initializeBufferWithCopyOfBuffer for ShelfAttributes(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v5 = *(int *)(a3 + 20);
    double v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_3D3400();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for ShelfAttributes(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_3D3400();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

unsigned char *initializeWithCopy for ShelfAttributes(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  double v6 = &a2[v4];
  uint64_t v7 = sub_3D3400();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithCopy for ShelfAttributes(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  double v6 = &a2[v4];
  uint64_t v7 = sub_3D3400();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

unsigned char *initializeWithTake for ShelfAttributes(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  double v6 = &a2[v4];
  uint64_t v7 = sub_3D3400();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

unsigned char *assignWithTake for ShelfAttributes(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = &a1[v4];
  double v6 = &a2[v4];
  uint64_t v7 = sub_3D3400();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShelfAttributes(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_368360);
}

uint64_t sub_368360(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 248)
  {
    unsigned int v4 = *a1;
    if (v4 >= 8) {
      return v4 - 7;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_3D3400();
    uint64_t v9 = *(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = &a1[*(int *)(a3 + 20)];
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ShelfAttributes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_36841C);
}

unsigned char *sub_36841C(unsigned char *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 248)
  {
    *uint64_t result = a2 + 7;
  }
  else
  {
    uint64_t v7 = sub_3D3400();
    uint64_t v8 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = &v5[*(int *)(a4 + 20)];
    return (unsigned char *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_3684C0()
{
  uint64_t result = sub_3D3400();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t LocationFields.metricsFields.getter()
{
  uint64_t v2 = *v0;
  uint64_t v1 = v0[1];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  uint64_t v7 = v0[6];
  uint64_t v14 = v0[7];
  unint64_t v8 = v0[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_4A9788);
  uint64_t inited = swift_initStackObject();
  uint64_t v10 = inited;
  *(_OWORD *)(inited + 16) = xmmword_3DED30;
  *(void *)(inited + 32) = 25705;
  *(void *)(inited + 40) = 0xE200000000000000;
  *(void *)(inited + 48) = v2;
  *(void *)(inited + 56) = v1;
  *(void *)(inited + 72) = &type metadata for String;
  *(void *)(inited + 80) = 0x657079546469;
  *(void *)(inited + 88) = 0xE600000000000000;
  *(void *)(inited + 96) = v4;
  *(void *)(inited + 104) = v3;
  *(void *)(inited + 120) = &type metadata for String;
  *(void *)(inited + 128) = 0xD000000000000010;
  *(void *)(inited + 136) = 0x80000000003FEB70;
  *(void *)(inited + 144) = v5;
  *(void *)(inited + 168) = &type metadata for Int;
  strcpy((char *)(inited + 176), "locationType");
  *(unsigned char *)(inited + 189) = 0;
  *(_WORD *)(inited + 190) = -5120;
  *(void *)(inited + 192) = v6;
  *(void *)(inited + 200) = v7;
  *(void *)(inited + 216) = &type metadata for String;
  *(void *)(inited + 224) = 1701667182;
  *(void *)(inited + 264) = &type metadata for String;
  uint64_t v11 = v14;
  if (!v8) {
    uint64_t v11 = 0;
  }
  unint64_t v12 = 0xE000000000000000;
  if (v8) {
    unint64_t v12 = v8;
  }
  *(void *)(inited + 232) = 0xE400000000000000;
  *(void *)(inited + 240) = v11;
  *(void *)(inited + 248) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_11008(v10);
}

uint64_t LocationFields.init(id:idType:locationPosition:locationType:name:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  a9[8] = a10;
  return result;
}

uint64_t LocationFields.locationPosition.getter()
{
  return *(void *)(v0 + 32);
}

double LocationFields.init(from:)@<D0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_3D7330();
  uint64_t v5 = sub_3D39C0();
  uint64_t v7 = sub_195A70(v5, v6, v4);
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  if (v9)
  {
    uint64_t v10 = sub_3D3940();
    uint64_t v11 = sub_195A6C(v10);
    uint64_t v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      uint64_t v14 = sub_3D39F0();
      id v16 = sub_195B7C(v14, v15, v4);
      char v18 = v17;
      swift_bridgeObjectRelease();
      if ((v18 & 1) == 0)
      {
        uint64_t v19 = sub_3D3910();
        uint64_t v33 = sub_195A6C(v19);
        uint64_t v21 = v20;
        swift_bridgeObjectRelease();
        if (v21)
        {
          uint64_t v22 = sub_3D39D0();
          uint64_t v24 = sub_195A70(v22, v23, v4);
          uint64_t v31 = v25;
          uint64_t v32 = v24;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v26 = sub_3D7340();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v26 - 8) + 8))(a1, v26);
          *a2 = v7;
          a2[1] = v9;
          a2[2] = v11;
          a2[3] = v13;
          a2[4] = (uint64_t)v16;
          a2[5] = v33;
          a2[6] = v21;
          a2[7] = v32;
          a2[8] = v31;
          return result;
        }
      }
      uint64_t v29 = sub_3D7340();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v29 - 8) + 8))(a1, v29);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v30 = sub_3D7340();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v30 - 8) + 8))(a1, v30);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v28 = sub_3D7340();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v28 - 8) + 8))(a1, v28);
  }
  swift_bridgeObjectRelease();
  a2[8] = 0;
  double result = 0.0;
  *((_OWORD *)a2 + 2) = 0u;
  *((_OWORD *)a2 + 3) = 0u;
  *(_OWORD *)a2 = 0u;
  *((_OWORD *)a2 + 1) = 0u;
  return result;
}

uint64_t destroy for LocationFields()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LocationFields(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for LocationFields(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for LocationFields(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocationFields(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocationFields(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationFields()
{
  return &type metadata for LocationFields;
}

Swift::Bool __swiftcall NavigationHandlingController.shouldScrollToTop(_:)(Swift::Bool a1)
{
  return !a1;
}

uint64_t dispatch thunk of NavigationHandlingController.shouldScrollToTop(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of NavigationHandlingController.handleNavigationPop(willScrollToTop:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t EpisodeEyebrowView.init(asPartOf:model:wantsCheckmarkWhenPlayed:showBookmarkState:showsSubscriptionBadge:listContextOverride:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AB708);
  __chkstk_darwin(v14 - 8);
  id v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v24 = a3;
  HIBYTE(v23) = *(unsigned char *)(a2 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_isExplicit);
  sub_153B4(a6, (uint64_t)v16, &qword_4AB708);
  swift_retain();
  swift_retain();
  _s8ShelfKit23EpisodeCaptionGeneratorC8asPartOf7episode18trackBookmarkState22showsSubscriptionBadge0m8ExplicitO019listContextOverrideAC9JetEngine15BaseObjectGraphC_AA06LegacyC6LockupCS3b18PodcastsFoundation14EyebrowBuilderC04ListR0OSgtcfC_0(a1, a2, a4, a5, 0, (uint64_t)v16);
  type metadata accessor for EpisodeCaptionGenerator();
  sub_369F34();
  uint64_t v17 = sub_3D6000();
  uint64_t v19 = v18;
  swift_release();
  swift_release();
  uint64_t result = sub_250FC(a6, &qword_4AB708);
  char v21 = v24;
  char v22 = HIBYTE(v23);
  *(void *)a7 = v17;
  *(void *)(a7 + 8) = v19;
  *(unsigned char *)(a7 + 16) = v21;
  *(unsigned char *)(a7 + 17) = v22;
  return result;
}

uint64_t EpisodeEyebrowView.init(asPartOf:model:viewIsRTL:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_3D3D20();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v21 - v11;
  if (*(unsigned char *)(a2 + 72))
  {
    swift_release();
    uint64_t result = swift_release();
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    __int16 v16 = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_4AB5A0);
    uint64_t v21 = a3;
    sub_3D7170();
    swift_retain();
    swift_retain();
    sub_3D7970();
    sub_3D3D60();
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v12, enum case for EyebrowBuilder.ListContext.episodeHeaderSubtitle(_:), v6);
    swift_retain();
    uint64_t v17 = sub_3D4A20();
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
    type metadata accessor for EpisodeCaptionGenerator();
    uint64_t v18 = swift_allocObject();
    sub_4189C(a1, a2, v17, 0, (uint64_t)v9, 1, 0, v18);
    swift_release();
    a3 = v21;
    swift_release();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
    int v19 = *(unsigned __int8 *)(a2 + 200);
    sub_369F34();
    uint64_t v14 = sub_3D6000();
    uint64_t v15 = v20;
    swift_release();
    uint64_t result = swift_release();
    if (v19) {
      __int16 v16 = 256;
    }
    else {
      __int16 v16 = 0;
    }
  }
  *(void *)a3 = v14;
  *(void *)(a3 + 8) = v15;
  *(_WORD *)(a3 + 16) = v16;
  return result;
}

uint64_t sub_368FF0()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_3D59E0();
  swift_release();
  swift_release();
  swift_release();
  if (v61)
  {
    sub_345F8();
    uint64_t v2 = sub_3D6550();
    uint64_t v4 = v3;
    uint64_t v6 = v5;
    uint64_t v8 = v7 & 1;
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v4 = 0;
    uint64_t v8 = 0;
    uint64_t v6 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_3D59E0();
  swift_release();
  swift_release();
  swift_release();
  if (v60 != 2 && (sub_3D4890() & 1) != 0)
  {
    sub_3D6790();
    __swift_instantiateConcreteTypeFromMangledName(&qword_4BFAB0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_3DED20;
    swift_retain();
    *(void *)(inited + 32) = sub_3D6560();
    *(void *)(inited + 40) = v11;
    *(void *)(inited + 48) = v10 & 1;
    *(void *)(inited + 56) = v12;
    *(void *)(inited + 64) = v2;
    *(void *)(inited + 72) = v4;
    *(void *)(inited + 80) = v8;
    *(void *)(inited + 88) = v6;
    uint64_t v58 = v6;
    sub_143E30(v2, v4, v8, v6);
    sub_3D7DE0();
    uint64_t v13 = *(void *)(inited + 32);
    uint64_t v14 = *(void *)(inited + 40);
    uint64_t v15 = *(void *)(inited + 48);
    uint64_t v16 = *(void *)(inited + 56);
    swift_bridgeObjectRetain();
    uint64_t v52 = v13;
    uint64_t v54 = v14;
    sub_143E30(v13, v14, v15, v16);
    uint64_t v17 = *(void *)(inited + 64);
    uint64_t v18 = *(void *)(inited + 72);
    uint64_t v20 = *(void *)(inited + 80);
    uint64_t v19 = *(void *)(inited + 88);
    uint64_t v57 = v2;
    if (v16)
    {
      if (v19)
      {
        char v49 = v15 & 1;
        sub_143E30(v17, v18, v20, v19);
        sub_143E30(v17, v18, v20, v19);
        swift_bridgeObjectRetain();
        uint64_t v44 = sub_3D64F0();
        char v51 = v8;
        uint64_t v8 = v21;
        char v23 = v22;
        swift_bridgeObjectRelease();
        uint64_t v48 = sub_3D64F0();
        sub_3464C(v17, v18, v20 & 1);
        swift_bridgeObjectRelease();
        sub_3464C(v52, v54, v49);
        swift_bridgeObjectRelease();
        uint64_t v24 = v8;
        LOBYTE(v8) = v51;
        sub_3464C(v44, v24, v23 & 1);
        swift_bridgeObjectRelease();
        sub_157820(v17, v18, v20, v19);
        uint64_t v25 = v48;
        uint64_t v26 = v58;
LABEL_18:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_157820(v57, v4, v8, v26);
        uint64_t v36 = v25;
LABEL_21:
        swift_setDeallocating();
        __swift_instantiateConcreteTypeFromMangledName(&qword_4B2D28);
        swift_arrayDestroy();
        return v36;
      }
      uint64_t v25 = v52;
      sub_34778(v52, v54, v15 & 1);
      swift_bridgeObjectRetain();
      sub_3464C(v52, v54, v15 & 1);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v25 = *(void *)(inited + 64);
      sub_143E30(v17, v18, v20, v19);
    }
    uint64_t v26 = v58;
    goto LABEL_18;
  }
  if (v1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_3D59E0();
    swift_release();
    swift_release();
    swift_release();
    if (v60 == 1)
    {
      sub_3D6790();
      __swift_instantiateConcreteTypeFromMangledName(&qword_4BFAB0);
      uint64_t v27 = swift_initStackObject();
      *(_OWORD *)(v27 + 16) = xmmword_3DED20;
      swift_retain();
      uint64_t v28 = sub_3D6560();
      uint64_t v30 = v29;
      uint64_t v32 = v31;
      *(void *)(v27 + 32) = v28;
      uint64_t v34 = v33 & 1;
      *(void *)(v27 + 40) = v29;
      *(void *)(v27 + 48) = v34;
      *(void *)(v27 + 56) = v31;
      *(void *)(v27 + 64) = v2;
      *(void *)(v27 + 72) = v4;
      *(void *)(v27 + 80) = v8;
      *(void *)(v27 + 88) = v6;
      uint64_t v55 = v4;
      uint64_t v59 = v6;
      sub_143E30(v2, v4, v8, v6);
      swift_bridgeObjectRetain();
      uint64_t v56 = v28;
      uint64_t v53 = v30;
      char v35 = v34;
      sub_143E30(v28, v30, v34, v32);
      uint64_t v36 = *(void *)(v27 + 64);
      uint64_t v37 = *(void *)(v27 + 72);
      uint64_t v39 = *(void *)(v27 + 80);
      uint64_t v38 = *(void *)(v27 + 88);
      if (v32)
      {
        if (v38)
        {
          sub_143E30(v36, v37, v39, v38);
          sub_34778(v36, v37, v39 & 1);
          swift_bridgeObjectRetain();
          uint64_t v40 = sub_3D64F0();
          uint64_t v46 = v41;
          uint64_t v47 = v40;
          char v45 = v42 & 1;
          uint64_t v50 = sub_3D64F0();
          sub_3464C(v36, v37, v39 & 1);
          swift_bridgeObjectRelease();
          sub_3464C(v56, v53, v35);
          swift_bridgeObjectRelease();
          sub_3464C(v47, v46, v45);
          swift_bridgeObjectRelease();
          sub_157820(v36, v37, v39, v38);
          uint64_t v36 = v50;
        }
        else
        {
          uint64_t v36 = v56;
          sub_34778(v56, v53, v35);
          swift_bridgeObjectRetain();
          sub_3464C(v56, v53, v35);
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        sub_143E30(*(void *)(v27 + 64), *(void *)(v27 + 72), *(void *)(v27 + 80), *(void *)(v27 + 88));
      }
      swift_bridgeObjectRelease();
      sub_157820(v2, v55, v8, v59);
      swift_release();
      goto LABEL_21;
    }
  }
  return v2;
}

uint64_t EpisodeEyebrowView.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v69 = a1;
  uint64_t v2 = sub_3D6110();
  uint64_t v67 = *(void *)(v2 - 8);
  uint64_t v68 = v2;
  __chkstk_darwin(v2);
  uint64_t v66 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_3D67C0();
  uint64_t v63 = *(void *)(v65 - 8);
  __chkstk_darwin(v65);
  uint64_t v62 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B3680);
  __chkstk_darwin(v54);
  uint64_t v56 = (uint64_t *)((char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B3688);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFA18);
  __chkstk_darwin(v53);
  char v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFA20);
  __chkstk_darwin(v55);
  uint64_t v59 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFA28);
  __chkstk_darwin(v58);
  uint64_t v60 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFA30);
  __chkstk_darwin(v57);
  uint64_t v64 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = v1[1];
  char v15 = *((unsigned char *)v1 + 16);
  int v16 = *((unsigned __int8 *)v1 + 17);
  uint64_t v70 = *v1;
  uint64_t v71 = v14;
  uint64_t v61 = v14;
  char v72 = v15;
  char v73 = v16;
  uint64_t v17 = sub_368FF0();
  uint64_t v19 = v18;
  char v21 = v20;
  uint64_t v23 = v22;
  uint64_t KeyPath = swift_getKeyPath();
  if (v23)
  {
    if (v16) {
      unint64_t v25 = v21 & 1 | 0x4000000000000000;
    }
    else {
      unint64_t v25 = v21 & 1;
    }
  }
  else if (v16)
  {
    uint64_t v17 = 0;
    uint64_t v19 = 0;
    unint64_t v25 = 0x8000000000000000;
  }
  else
  {
    swift_release();
    uint64_t v17 = 0;
    uint64_t v19 = 0;
    uint64_t KeyPath = 0;
    unint64_t v25 = 0x1FFFFFFFELL;
  }
  uint64_t v26 = enum case for Text.Case.uppercase(_:);
  uint64_t v27 = sub_3D6500();
  uint64_t v28 = *(void *)(v27 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 104))(v8, v26, v27);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v28 + 56))(v8, 0, 1, v27);
  uint64_t v29 = swift_getKeyPath();
  uint64_t v30 = v56;
  sub_153B4((uint64_t)v8, (uint64_t)v56 + *(int *)(v54 + 28), &qword_4B3688);
  *uint64_t v30 = v29;
  sub_153B4((uint64_t)v30, (uint64_t)&v10[*(int *)(v53 + 36)], &qword_4B3680);
  *(void *)char v10 = v17;
  *((void *)v10 + 1) = v19;
  *((void *)v10 + 2) = v25;
  *((void *)v10 + 3) = v23;
  *((void *)v10 + 4) = 0;
  *((void *)v10 + 5) = 0;
  *((void *)v10 + 6) = KeyPath;
  v10[56] = 0;
  sub_369F9C(v17, v19, v25, v23, 0, 0);
  sub_250FC((uint64_t)v30, &qword_4B3680);
  sub_250FC((uint64_t)v8, &qword_4B3688);
  sub_369FE4(v17, v19, v25, v23, 0, 0);
  uint64_t v32 = v62;
  uint64_t v31 = v63;
  uint64_t v33 = v65;
  (*(void (**)(char *, void, uint64_t))(v63 + 104))(v62, enum case for Image.Scale.small(_:), v65);
  uint64_t v34 = swift_getKeyPath();
  uint64_t v35 = (uint64_t)v59;
  uint64_t v36 = (uint64_t *)&v59[*(int *)(v55 + 36)];
  uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B36A0);
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))((char *)v36 + *(int *)(v37 + 28), v32, v33);
  *uint64_t v36 = v34;
  sub_153B4((uint64_t)v10, v35, &qword_4BFA18);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v32, v33);
  sub_250FC((uint64_t)v10, &qword_4BFA18);
  uint64_t v38 = swift_getKeyPath();
  uint64_t v39 = v60;
  sub_153B4(v35, v60, &qword_4BFA20);
  uint64_t v40 = v39 + *(int *)(v58 + 36);
  *(void *)uint64_t v40 = v38;
  *(void *)(v40 + 8) = 1;
  *(unsigned char *)(v40 + 16) = 0;
  sub_250FC(v35, &qword_4BFA20);
  uint64_t v41 = v66;
  sub_3D6100();
  uint64_t v42 = swift_getKeyPath();
  uint64_t v43 = (uint64_t)v64;
  uint64_t v44 = (uint64_t *)&v64[*(int *)(v57 + 36)];
  uint64_t v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFA38);
  uint64_t v47 = v67;
  uint64_t v46 = v68;
  (*(void (**)(char *, char *, uint64_t))(v67 + 16))((char *)v44 + *(int *)(v45 + 28), v41, v68);
  *uint64_t v44 = v42;
  sub_153B4(v39, v43, &qword_4BFA28);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v41, v46);
  sub_250FC(v39, &qword_4BFA28);
  uint64_t v48 = sub_3D6900();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_3D59E0();
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v46) = v70;
  uint64_t v49 = v69;
  sub_153B4(v43, v69, &qword_4BFA30);
  uint64_t v50 = v49 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4BFA40) + 36);
  *(void *)uint64_t v50 = v48;
  *(unsigned char *)(v50 + 8) = v46;
  return sub_250FC(v43, &qword_4BFA30);
}

uint64_t sub_369E6C(uint64_t a1)
{
  uint64_t v2 = sub_3D6110();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_3D61C0();
}

unint64_t sub_369F34()
{
  unint64_t result = qword_4BFA10;
  if (!qword_4BFA10)
  {
    type metadata accessor for EpisodeCaptionGenerator();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BFA10);
  }
  return result;
}

uint64_t sub_369F9C(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3 >> 1 != 0xFFFFFFFF)
  {
    sub_346D4(result, a2, a3, a4, a5, a6);
    return swift_retain();
  }
  return result;
}

uint64_t sub_369FE4(uint64_t result, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a3 >> 1 != 0xFFFFFFFF)
  {
    sub_347E4(result, a2, a3, a4, a5, a6);
    return swift_release();
  }
  return result;
}

uint64_t sub_36A034@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_3D6210();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_36A068()
{
  return sub_3D6220();
}

uint64_t sub_36A098()
{
  return sub_3D61B0();
}

uint64_t sub_36A0C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_36A0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for EpisodeEyebrowView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

__n128 __swift_memcpy18_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u16[0] = a2[1].n128_u16[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for EpisodeEyebrowView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  return a1;
}

uint64_t getEnumTagSinglePayload for EpisodeEyebrowView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 18)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EpisodeEyebrowView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 18) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 18) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EpisodeEyebrowView()
{
  return &type metadata for EpisodeEyebrowView;
}

unint64_t sub_36A278()
{
  unint64_t result = qword_4BFA48;
  if (!qword_4BFA48)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BFA40);
    sub_36A318();
    sub_3D6E4(&qword_4BFAA0, &qword_4BFAA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BFA48);
  }
  return result;
}

unint64_t sub_36A318()
{
  unint64_t result = qword_4BFA50;
  if (!qword_4BFA50)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BFA30);
    sub_36A3B8();
    sub_3D6E4(&qword_4BFA98, &qword_4BFA38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BFA50);
  }
  return result;
}

unint64_t sub_36A3B8()
{
  unint64_t result = qword_4BFA58;
  if (!qword_4BFA58)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BFA28);
    sub_36A458();
    sub_3D6E4(&qword_4BFA88, &qword_4BFA90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BFA58);
  }
  return result;
}

unint64_t sub_36A458()
{
  unint64_t result = qword_4BFA60;
  if (!qword_4BFA60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BFA20);
    sub_36A4F8();
    sub_3D6E4(&qword_4B3870, &qword_4B36A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BFA60);
  }
  return result;
}

unint64_t sub_36A4F8()
{
  unint64_t result = qword_4BFA68;
  if (!qword_4BFA68)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BFA18);
    sub_36A598();
    sub_3D6E4(&qword_4B3868, &qword_4B3680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BFA68);
  }
  return result;
}

unint64_t sub_36A598()
{
  unint64_t result = qword_4BFA70;
  if (!qword_4BFA70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4BFA78);
    sub_36A60C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BFA70);
  }
  return result;
}

unint64_t sub_36A60C()
{
  unint64_t result = qword_4BFA80;
  if (!qword_4BFA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BFA80);
  }
  return result;
}

uint64_t static FilterablePresenterStyle.== infix(_:_:)(unsigned char *a1, unsigned char *a2)
{
  if ((*a1 & 1) == 0 && (*a2 & 1) == 0) {
    return 1;
  }
  uint64_t result = sub_3D9020();
  __break(1u);
  return result;
}

void FilterablePresenterStyle.hash(into:)()
{
  if (*v0)
  {
    sub_3D9020();
    __break(1u);
  }
  else
  {
    sub_3D9140(0);
  }
}

Swift::Int FilterablePresenterStyle.hashValue.getter()
{
  char v1 = *v0;
  sub_3D9130();
  if (v1)
  {
    Swift::Int result = sub_3D9020();
    __break(1u);
  }
  else
  {
    sub_3D9140(0);
    return sub_3D9180();
  }
  return result;
}

Swift::Int sub_36A730()
{
  char v1 = *v0;
  sub_3D9130();
  if (v1)
  {
    Swift::Int result = sub_3D9020();
    __break(1u);
  }
  else
  {
    sub_3D9140(0);
    return sub_3D9180();
  }
  return result;
}

void sub_36A780(unsigned char *a1@<X8>)
{
}

uint64_t EpisodeUserFilter.id.getter(uint64_t a1, char a2)
{
  return sub_3D7DC0();
}

uint64_t sub_36A7D0@<X0>(uint64_t *a1@<X8>)
{
  sub_54DC8(*(void *)v1, *(unsigned char *)(v1 + 8));
  uint64_t result = sub_3D7DC0();
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t EpisodeUserFilter.isEmptyFilter.getter()
{
  return sub_3D4280();
}

unint64_t sub_36A838()
{
  unint64_t result = qword_4BFAB8;
  if (!qword_4BFAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BFAB8);
  }
  return result;
}

uint64_t sub_36A88C()
{
  sub_54DC8(*(void *)v0, *(unsigned char *)(v0 + 8));
  return sub_3D7DC0();
}

uint64_t sub_36A8D4()
{
  return sub_3D4290();
}

uint64_t sub_36A8E0()
{
  return sub_3D4280();
}

unint64_t sub_36A8F4(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_36A924();
  unint64_t result = sub_36A978();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_36A924()
{
  unint64_t result = qword_4BFAC0;
  if (!qword_4BFAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BFAC0);
  }
  return result;
}

unint64_t sub_36A978()
{
  unint64_t result = qword_4BFAC8;
  if (!qword_4BFAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BFAC8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FilterablePresenterStyle(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x36AA98);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterablePresenterStyle()
{
  return &type metadata for FilterablePresenterStyle;
}

uint64_t dispatch thunk of FilterablePresenter.filteringEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FilterablePresenter.filters.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FilterablePresenter.selectedFilter.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of FilterablePresenter.style.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of FilterablePresenterFilter.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FilterablePresenterFilter.title.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of FilterablePresenterFilter.isEmptyFilter.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t ResumeOAuthAction.redirectURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8ShelfKit17ResumeOAuthAction_redirectURL;
  uint64_t v4 = sub_3D2350();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ResumeOAuthAction.__allocating_init(redirectURL:)(uint64_t a1)
{
  uint64_t v21 = a1;
  uint64_t v23 = sub_3D2460();
  uint64_t v2 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_3D6F40();
  uint64_t v5 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v8 - 8);
  char v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = v11 + OBJC_IVAR____TtC8ShelfKit17ResumeOAuthAction_redirectURL;
  uint64_t v13 = sub_3D2350();
  uint64_t v14 = *(void *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, a1, v13);
  uint64_t v15 = sub_3D7340();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v10, 1, 1, v15);
  sub_3D6F00();
  sub_3D2450();
  uint64_t v16 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  uint64_t v18 = v17;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v23);
  *(void *)(v11 + 16) = v16;
  *(void *)(v11 + 24) = v18;
  *(void *)(v11 + 32) = 0;
  *(void *)(v11 + 40) = 0;
  *(unsigned char *)(v11 + 48) = 32;
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v11 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v7, v22);
  sub_2A728((uint64_t)v10, v11 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v21, v13);
  return v11;
}

uint64_t ResumeOAuthAction.init(redirectURL:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v22 = a1;
  uint64_t v24 = sub_3D2460();
  uint64_t v4 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_3D6F40();
  uint64_t v7 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v2 + OBJC_IVAR____TtC8ShelfKit17ResumeOAuthAction_redirectURL;
  uint64_t v14 = sub_3D2350();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 16))(v13, a1, v14);
  uint64_t v16 = sub_3D7340();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v12, 1, 1, v16);
  sub_3D6F00();
  sub_3D2450();
  uint64_t v17 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v24);
  *(void *)(v2 + 16) = v17;
  *(void *)(v2 + 24) = v19;
  *(void *)(v2 + 32) = 0;
  *(void *)(v2 + 40) = 0;
  *(unsigned char *)(v2 + 48) = 32;
  (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v2 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v9, v23);
  sub_2A728((uint64_t)v12, v2 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v22, v14);
  return v2;
}

void ResumeOAuthAction.init(deserializing:using:)()
{
}

void ResumeOAuthAction.init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)()
{
}

uint64_t sub_36B20C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ShelfKit17ResumeOAuthAction_redirectURL;
  uint64_t v2 = sub_3D2350();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t ResumeOAuthAction.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  uint64_t v2 = sub_3D6F40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_2A790(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8ShelfKit17ResumeOAuthAction_redirectURL;
  uint64_t v4 = sub_3D2350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t ResumeOAuthAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  uint64_t v2 = sub_3D6F40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_2A790(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8ShelfKit17ResumeOAuthAction_redirectURL;
  uint64_t v4 = sub_3D2350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_36B454()
{
  return type metadata accessor for ResumeOAuthAction();
}

uint64_t type metadata accessor for ResumeOAuthAction()
{
  uint64_t result = qword_4BFAF8;
  if (!qword_4BFAF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_36B4A8()
{
  uint64_t result = sub_3D2350();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ResumeOAuthAction(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ResumeOAuthAction);
}

uint64_t dispatch thunk of ResumeOAuthAction.__allocating_init(redirectURL:)()
{
  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t sub_36B564()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFD00);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFD08);
  uint64_t v6 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFD10);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v23 = v9;
  uint64_t v24 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_libraryActionController + 24);
  uint64_t v14 = *(void *)(v0 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_libraryActionController + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_libraryActionController), v13);
  (*(void (**)(void, void, void, uint64_t, uint64_t))(v14 + 128))(*(void *)(v1 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_podcastUUID), *(void *)(v1 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_podcastUUID + 8), *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_isImplicitlyFollowed) | 0x40u, v13, v14);
  uint64_t v15 = sub_3D7980();
  swift_release();
  uint64_t v25 = v15;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BFD18);
  sub_3D6E4(&qword_4BFD20, &qword_4BFD18);
  sub_3D5AD0();
  swift_release();
  LODWORD(v14) = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_showUpdaterType);
  *(unsigned char *)(swift_allocObject() + 16) = v14;
  sub_3D56E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BFD28);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_3DED90;
  uint64_t v17 = 0x3000000000000007;
  if (v14) {
    uint64_t v17 = 0x7000000000000007;
  }
  *(void *)(v16 + 32) = v17;
  sub_3D6E4(&qword_4BFD30, &qword_4BFD08);
  uint64_t v18 = v22;
  sub_3D5C10();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v18);
  swift_allocObject();
  swift_weakInit();
  sub_3D6E4(&qword_4BFD38, &qword_4BFD10);
  uint64_t v19 = v23;
  uint64_t v20 = sub_3D5CB0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v19);
  *(void *)(v1 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_internalStatusSubscription) = v20;
  return swift_release();
}

unint64_t sub_36B9D4()
{
  if ((*v0 & 0xF000000000000007) == 0xF000000000000007) {
    return 0xD000000000000018;
  }
  else {
    return 0xD000000000000011;
  }
}

uint64_t sub_36BA1C()
{
  unint64_t v1 = *v0;
  int v2 = (*v0 >> 57) & 0x78 | *v0 & 7;
  switch(v2)
  {
    case 31:
      return 0x656873696E69662ELL;
    case 95:
      return 0x656C64692ELL;
    case 63:
      return 0x737365636F72702ELL;
  }
  if ((v1 & 0xF000000000000007) == 0xF000000000000007) {
    uint64_t v4 = 0xD000000000000018;
  }
  else {
    uint64_t v4 = 0xD000000000000011;
  }
  if ((v1 & 0xF000000000000007) == 0xF000000000000007) {
    uint64_t v5 = (void *)0x800000000040A970;
  }
  else {
    uint64_t v5 = (void *)0x800000000040A950;
  }
  sub_36CA44(v1);
  v6._countAndFlagsBits = v4;
  v6._object = v5;
  sub_3D7E90(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  sub_3D7E90(v7);
  sub_36CA58(v1);
  return 0x6572756C6961662ELL;
}

uint64_t sub_36BB60(char *a1, char *a2)
{
  return sub_2860F0(*a1, *a2);
}

Swift::Int sub_36BB6C()
{
  return sub_3D9180();
}

uint64_t sub_36BBF8()
{
  sub_3D7E60();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_36BC70()
{
  return sub_3D9180();
}

uint64_t sub_36BCF8@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_474868;
  v8._object = v3;
  Swift::Int v5 = sub_3D8E10(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_36BD58(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6B636F6C426E6F6ELL;
  if (*v1) {
    uint64_t v2 = 0x676E696B636F6C62;
  }
  unint64_t v3 = 0xEB00000000676E69;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_36BDA0(uint64_t a1)
{
  unint64_t v2 = sub_36C9F0();

  return EnumStringConvertible<>.description.getter(a1, v2);
}

uint64_t sub_36BDDC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_3D59E0();
  swift_release();

  return swift_release();
}

uint64_t sub_36BE54(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_3D5640();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B15D8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v2 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater__status;
  *(void *)&long long v29 = 0xB000000000000007;
  sub_3D59A0();
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v12, v11, v8);
  *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_internalStatusSubscription) = 0;
  uint64_t v13 = swift_retain();
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_showUpdaterType) = sub_36D058(v13) & 1;
  uint64_t v14 = *(void *)(a1 + 40);
  uint64_t v15 = (void *)(v2 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_podcastUUID);
  void *v15 = *(void *)(a1 + 32);
  v15[1] = v14;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_3D44D0();
  uint64_t v18 = v17;
  if (v16 == sub_3D44D0() && v18 == v19) {
    char v21 = 1;
  }
  else {
    char v21 = sub_3D8FE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v2 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_isImplicitlyFollowed) = v21 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4AB9D0);
  sub_3D7170();
  sub_3D7970();
  sub_18F70(&v29, v2 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_libraryActionController);
  if ((*(unsigned char *)(v2 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_isImplicitlyFollowed) & 1) != 0
    && (uint64_t v22 = sub_3D3610(),
        uint64_t v30 = v22,
        unint64_t v31 = sub_111304(),
        boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v29),
        (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v22 - 8) + 104))(boxed_opaque_existential_2Tm, enum case for Podcasts.renderImplicitFollowsAsLocalShows(_:), v22), LOBYTE(v22) = sub_3D3580(), __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29), (v22 & 1) == 0))
  {
    sub_3D5530();
    uint64_t v24 = sub_3D5630();
    os_log_type_t v25 = sub_3D83F0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v26 = 0;
      _os_log_impl(&dword_0, v24, v25, "LocalShowPageFeedUpdater is supposed to be only used for local pages, and Implicit Follows should NOT be rendering in local pages if RenderImplicitFollowsAsLocalShows is OFF.", v26, 2u);
      swift_slowDealloc();
    }
    swift_release();
    swift_release();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    swift_release();
    swift_release();
  }
  return v2;
}

uint64_t sub_36C214()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater__status;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B15D8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_libraryActionController);

  return swift_deallocClassInstance();
}

uint64_t sub_36C2EC()
{
  return type metadata accessor for LocalShowPageFeedUpdater();
}

uint64_t type metadata accessor for LocalShowPageFeedUpdater()
{
  uint64_t result = qword_4BFC28;
  if (!qword_4BFC28) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_36C340()
{
  sub_36C3F8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_36C3F8()
{
  if (!qword_4BFC38)
  {
    unint64_t v0 = sub_3D5A00();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_4BFC38);
    }
  }
}

unsigned char *storeEnumTagSinglePayload for ShowUpdaterType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x36C51CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowUpdaterType()
{
  return &type metadata for ShowUpdaterType;
}

unint64_t sub_36C558(unint64_t result)
{
  if ((result >> 62) <= 1) {
    return swift_errorRetain();
  }
  return result;
}

unint64_t destroy for LocalShowPageFeedUpdaterStatus(unint64_t *a1)
{
  unint64_t result = *a1;
  if (((((result >> 57) >> 5) | (4 * ((result >> 57) & 0x18 | result & 7))) ^ 0x7F) >= 0x7D) {
    return sub_36C5A0(result);
  }
  return result;
}

unint64_t sub_36C5A0(unint64_t result)
{
  if ((result >> 62) <= 1) {
    return swift_errorRelease();
  }
  return result;
}

unint64_t *_s8ShelfKit29LocalShowPageFeedUpdaterErrorOwCP_0(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (((((*a2 >> 57) >> 5) | (4 * ((*a2 >> 57) & 0x18 | *a2 & 7))) ^ 0x7F) >= 0x7D) {
    sub_36C558(*a2);
  }
  *a1 = v3;
  return a1;
}

unint64_t *assignWithCopy for LocalShowPageFeedUpdaterStatus(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a1;
  int v5 = ((v4 >> 57) >> 5) | (4 * ((v4 >> 57) & 0x18 | v4 & 7));
  unsigned int v6 = v5 ^ 0x7F;
  unint64_t v7 = *a2;
  int v8 = ((*a2 >> 57) >> 5) | (4 * ((*a2 >> 57) & 0x18 | *a2 & 7));
  unsigned int v9 = v8 ^ 0x7F;
  BOOL v11 = v8 == 127 || v9 > 0x7C;
  if (v5 != 127 && v6 < 0x7D)
  {
    if (!v11)
    {
LABEL_19:
      *a1 = v7;
      return a1;
    }
LABEL_15:
    if (v9 >= 0x7D) {
      sub_36C558(*a2);
    }
    goto LABEL_19;
  }
  if (!v11)
  {
    if (v6 >= 0x7D)
    {
      sub_36C5A0(v4);
      unint64_t v7 = *a2;
    }
    goto LABEL_19;
  }
  if (v6 < 0x7D) {
    goto LABEL_15;
  }
  if (v9 < 0x7D)
  {
    sub_36C5A0(v4);
    *a1 = *a2;
  }
  else
  {
    sub_36C558(*a2);
    unint64_t v12 = *a1;
    *a1 = v7;
    sub_36C5A0(v12);
  }
  return a1;
}

unint64_t *assignWithTake for LocalShowPageFeedUpdaterStatus(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  int v4 = ((v3 >> 57) >> 5) | (4 * ((v3 >> 57) & 0x18 | v3 & 7));
  unsigned int v5 = v4 ^ 0x7F;
  unint64_t v6 = *a2;
  if (v4 != 127 && v5 < 0x7D) {
    goto LABEL_11;
  }
  int v7 = ((v6 >> 57) >> 5) | (4 * ((v6 >> 57) & 0x18 | v6 & 7));
  unsigned int v8 = v7 ^ 0x7F;
  if (v7 != 127 && v8 < 0x7D)
  {
    if (v5 < 0x7D) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v5 < 0x7D)
  {
LABEL_11:
    *a1 = v6;
    return a1;
  }
  if (v8 < 0x7D)
  {
LABEL_10:
    sub_36C5A0(v3);
    goto LABEL_11;
  }
  *a1 = v6;
  sub_36C5A0(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalShowPageFeedUpdaterStatus(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7A && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 122);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  if (v3 + 1 < 2) {
    unsigned int v3 = 0;
  }
  if (v3 >= 4) {
    return v3 - 3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LocalShowPageFeedUpdaterStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x79)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 122;
    if (a3 >= 0x7A) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7A) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = ((32 * (124 - a2)) | ((124 - a2) >> 2) | ((unint64_t)((32 * (124 - a2)) | ((124 - a2) >> 2)) << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_36C86C(void *a1)
{
  unsigned int v1 = (((*a1 >> 57) >> 5) | (4 * ((*a1 >> 57) & 0x18 | *a1 & 7))) ^ 0x7F;
  if (v1 >= 0x7D) {
    unsigned int v1 = -1;
  }
  if (v1 + 1 >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

unint64_t *sub_36C8A0(unint64_t *result, unsigned int a2)
{
  if (a2 > 0x7C)
  {
    *unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 125;
  }
  else if (a2)
  {
    *unint64_t result = ((32 * (a2 ^ 0x7F)) | ((a2 ^ 0x7F) >> 2) | ((unint64_t)((32 * (a2 ^ 0x7F)) | ((a2 ^ 0x7F) >> 2)) << 57)) & 0xF000000000000007;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocalShowPageFeedUpdaterStatus()
{
  return &type metadata for LocalShowPageFeedUpdaterStatus;
}

unint64_t sub_36C8EC()
{
  unint64_t result = qword_4BFCE0;
  if (!qword_4BFCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BFCE0);
  }
  return result;
}

unint64_t sub_36C944()
{
  unint64_t result = qword_4BFCE8;
  if (!qword_4BFCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BFCE8);
  }
  return result;
}

unint64_t sub_36C99C()
{
  unint64_t result = qword_4BFCF0;
  if (!qword_4BFCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BFCF0);
  }
  return result;
}

unint64_t sub_36C9F0()
{
  unint64_t result = qword_4BFCF8;
  if (!qword_4BFCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4BFCF8);
  }
  return result;
}

unint64_t sub_36CA44(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_36C558(result);
  }
  return result;
}

unint64_t sub_36CA58(unint64_t result)
{
  int v1 = (result >> 57) & 0x78 | result & 7;
  if (v1 != 31 && v1 != 63 && v1 != 95) {
    return sub_36CA84(result);
  }
  return result;
}

unint64_t sub_36CA84(unint64_t result)
{
  if ((~result & 0xF000000000000007) != 0) {
    return sub_36C5A0(result);
  }
  return result;
}

unint64_t sub_36CA98@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v2 = *a1;
  *a2 = v2;
  return sub_36D018(v2);
}

unint64_t *sub_36CAA4@<X0>(unint64_t *result@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = 0x3000000000000007;
  if (a2)
  {
    unint64_t v5 = *result;
    if (((*result >> 57) & 0xF8 | *result & 7 | 0x20) != 0x7F)
    {
      unint64_t result = (unint64_t *)sub_36C558(*result);
      uint64_t v4 = v5;
    }
  }
  *a3 = v4;
  return result;
}

uint64_t sub_36CB00()
{
  return _swift_deallocObject(v0, 17, 7);
}

unint64_t *sub_36CB10@<X0>(unint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_36CAA4(a1, *(unsigned char *)(v2 + 16), a2);
}

uint64_t sub_36CB18()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_36CB50(unint64_t *a1)
{
  uint64_t v2 = sub_3D5640();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    sub_3D5530();
    swift_retain_n();
    sub_36CEE8(v6);
    swift_retain();
    sub_36CEE8(v6);
    unsigned int v9 = sub_3D5630();
    os_log_type_t v10 = sub_3D83F0();
    int v11 = v10;
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      unint64_t v23 = v20;
      *(_DWORD *)uint64_t v12 = 136315650;
      LOBYTE(v22) = *(unsigned char *)(v8 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_showUpdaterType);
      sub_36C8EC();
      uint64_t v21 = v2;
      HIDWORD(v19) = v11;
      uint64_t v13 = sub_3D8F90();
      uint64_t v22 = sub_1FB7E8(v13, v14, (uint64_t *)&v23);
      sub_3D8930();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      uint64_t v22 = v6;
      uint64_t v15 = sub_36BA1C();
      uint64_t v22 = sub_1FB7E8(v15, v16, (uint64_t *)&v23);
      sub_3D8930();
      swift_bridgeObjectRelease();
      sub_36CA58(v6);
      sub_36CA58(v6);
      *(_WORD *)(v12 + 22) = 2080;
      uint64_t v18 = *(void *)(v8 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_podcastUUID);
      unint64_t v17 = *(void *)(v8 + OBJC_IVAR____TtC8ShelfKit24LocalShowPageFeedUpdater_podcastUUID + 8);
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1FB7E8(v18, v17, (uint64_t *)&v23);
      sub_3D8930();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v9, BYTE4(v19), "LocalShowPageFeedUpdater of type: '%s' transitioning to '%s' for podcast with UUID: %s", (uint8_t *)v12, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
    }
    else
    {
      swift_release_n();
      sub_36CA58(v6);
      sub_36CA58(v6);

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    swift_getKeyPath();
    swift_getKeyPath();
    unint64_t v23 = v6;
    sub_36CEE8(v6);
    return sub_3D59F0();
  }
  return result;
}

uint64_t sub_36CEE0(unint64_t *a1)
{
  return sub_36CB50(a1);
}

unint64_t sub_36CEE8(unint64_t result)
{
  int v1 = (result >> 57) & 0x78 | result & 7;
  if (v1 != 31 && v1 != 63 && v1 != 95) {
    return sub_36CA44(result);
  }
  return result;
}

uint64_t sub_36CF14@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_3D59E0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_36CF98(unint64_t *a1)
{
  unint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_36CEE8(v1);
  swift_retain();
  return sub_3D59F0();
}

unint64_t sub_36D018(unint64_t result)
{
  if ((result & 0xF000000000000007) != 0x7000000000000007) {
    return sub_36D034(result);
  }
  return result;
}

unint64_t sub_36D034(unint64_t result)
{
  if (((result >> 57) & 0xF8 | result & 7 | 0x20) != 0x7F) {
    return sub_36C558(result);
  }
  return result;
}

uint64_t sub_36D058(uint64_t a1)
{
  uint64_t v2 = sub_3D5640();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  switch(*(unsigned char *)(a1 + OBJC_IVAR____TtC8ShelfKit13PodcastDetail_podcastState))
  {
    case 2:
      swift_release();
      goto LABEL_7;
    case 3:
      sub_3D5530();
      swift_retain_n();
      int v7 = sub_3D5630();
      os_log_type_t v8 = sub_3D83F0();
      if (os_log_type_enabled(v7, v8))
      {
        unsigned int v9 = (uint8_t *)swift_slowAlloc();
        uint64_t v10 = swift_slowAlloc();
        uint64_t v15 = a1;
        uint64_t v16 = v10;
        *(_DWORD *)unsigned int v9 = 136380675;
        v14[1] = v9 + 4;
        swift_retain();
        uint64_t v11 = sub_3D7DC0();
        uint64_t v15 = sub_1FB7E8(v11, v12, &v16);
        sub_3D8930();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v7, v8, "LocalShowPageFeedUpdater is not supposed to work with store shows!  Offending PodcastDetail: %{private}s", v9, 0xCu);
        uint64_t v6 = 1;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_release();

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      }
      else
      {

        swift_release_n();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
LABEL_7:
        uint64_t v6 = 1;
      }
      break;
    default:
      swift_release();
      uint64_t v6 = 0;
      break;
  }
  return v6;
}

unint64_t destroy for LocalShowPageFeedUpdaterError(unint64_t *a1)
{
  unint64_t result = *a1;
  if (((((result >> 57) >> 5) | (4 * ((result >> 57) & 0x18 | result & 7))) ^ 0x7F) >= 0x7D) {
    return sub_36C5A0(result);
  }
  return result;
}

unint64_t *assignWithCopy for LocalShowPageFeedUpdaterError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  unsigned int v5 = (((*a2 >> 57) >> 5) | (4 * ((*a2 >> 57) & 0x18 | *a2 & 7))) ^ 0x7F;
  if (((((v3 >> 57) >> 5) | (4 * ((v3 >> 57) & 0x18 | v3 & 7))) ^ 0x7F) < 0x7D)
  {
    if (v5 >= 0x7D) {
      sub_36C558(*a2);
    }
    *a1 = v4;
  }
  else if (v5 < 0x7D)
  {
    sub_36C5A0(v3);
    *a1 = *a2;
  }
  else
  {
    sub_36C558(*a2);
    unint64_t v6 = *a1;
    *a1 = v4;
    sub_36C5A0(v6);
  }
  return a1;
}

unint64_t *assignWithTake for LocalShowPageFeedUpdaterError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if (((((v3 >> 57) >> 5) | (4 * ((v3 >> 57) & 0x18 | v3 & 7))) ^ 0x7F) < 0x7D) {
    goto LABEL_5;
  }
  if (((((v4 >> 57) >> 5) | (4 * ((v4 >> 57) & 0x18 | v4 & 7))) ^ 0x7F) < 0x7D)
  {
    sub_36C5A0(v3);
LABEL_5:
    *a1 = v4;
    return a1;
  }
  *a1 = v4;
  sub_36C5A0(v3);
  return a1;
}

uint64_t getEnumTagSinglePayload for LocalShowPageFeedUpdaterError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7D) {
    unsigned int v3 = -1;
  }
  if (v3 + 1 >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for LocalShowPageFeedUpdaterError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = ((32 * (a2 ^ 0x7F)) | ((a2 ^ 0x7F) >> 2) | ((unint64_t)((32 * (a2 ^ 0x7F)) | ((a2 ^ 0x7F) >> 2)) << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_36D528(void *a1)
{
  int v1 = ((*a1 >> 57) >> 5) | (4 * ((*a1 >> 57) & 0x18 | *a1 & 7));
  unsigned int v2 = v1 ^ 0x7F;
  unsigned int v3 = 128 - v1;
  if (v2 >= 0x7D) {
    return 0;
  }
  else {
    return v3;
  }
}

unint64_t *sub_36D558(unint64_t *result, unsigned int a2)
{
  if (a2 > 0x7D)
  {
    unint64_t v3 = a2 - 126;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
    unint64_t v3 = (v2 | (v2 << 57)) & 0xF000000000000007;
  }
  *unint64_t result = v3;
  return result;
}

ValueMetadata *type metadata accessor for LocalShowPageFeedUpdaterError()
{
  return &type metadata for LocalShowPageFeedUpdaterError;
}

uint64_t SearchController.__allocating_init(asPartOf:)()
{
  swift_allocObject();
  uint64_t v0 = sub_371AF0();
  swift_release();
  return v0;
}

void SearchController.dependenciesDidChange(_:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16);
  unint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_A89EC(v2);

  os_unfair_lock_unlock(v3);
}

uint64_t SearchController.publisher(for:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFD58);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unsigned int v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFD60);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unsigned int v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_A989C(a1, (uint64_t)&v23);
  uint64_t v10 = v23;
  unsigned __int8 v11 = v27;
  int v12 = v27 >> 6;
  if (!v12)
  {
    v27 &= 0x3Fu;
    uint64_t v20 = v24;
    if (static SearchTermValidating.isValid(searchString:)(v23, v24)) {
      return sub_36DE90(v10, v20);
    }
    v28[0] = 1;
    memset(&v28[1], 0, 24);
    char v29 = 0x80;
    return SearchController.publisher(for:)(v28);
  }
  if (v12 != 1)
  {
    if (v27 == 128 && !(v25 | v26 | v23 | v24))
    {
      type metadata accessor for SearchContent();
      sub_3D5940();
      sub_3D6E4(&qword_4BFD70, &qword_4BFD60);
      uint64_t v19 = sub_3D5AC0();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      return v19;
    }
    return sub_36E0DC();
  }
  v27 &= 0x3Fu;
  uint64_t v13 = v24;
  uint64_t v14 = v25;
  uint64_t v15 = v26;
  char v16 = v11 & 1;
  uint64_t v17 = swift_allocObject();
  swift_weakInit();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v17;
  *(void *)(v18 + 24) = v10;
  *(void *)(v18 + 32) = v13;
  *(void *)(v18 + 40) = v14;
  *(void *)(v18 + 48) = v15;
  *(unsigned char *)(v18 + 56) = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4ADCF0);
  sub_3D6E4(&qword_4ADD08, &qword_4ADCF0);
  sub_3D49C0();
  sub_3D6E4(&qword_4BFD68, &qword_4BFD58);
  uint64_t v19 = sub_3D5AC0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v19;
}

Swift::Void __swiftcall SearchController.selectHint(at:)(Swift::Int at)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = v2 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v2 + 16);
  uint64_t v4 = (os_unfair_lock_s *)(v2 + ((*(unsigned int *)(*(void *)v2 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v4);
  sub_37204C(v3);
  os_unfair_lock_unlock(v4);
}

uint64_t SearchController.init(asPartOf:)()
{
  uint64_t v0 = sub_371AF0();
  swift_release();
  return v0;
}

uint64_t SearchController.deinit()
{
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_unknownObjectRelease();

  uint64_t v1 = v0 + OBJC_IVAR____TtC8ShelfKit16SearchController_metricsPipeline;
  uint64_t v2 = sub_3D71D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8ShelfKit16SearchController_storeDataProvider);
  return v0;
}

uint64_t SearchController.__deallocating_deinit()
{
  SearchController.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_36DC48(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0CC0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3D7480();
  sub_3D7080();
  return sub_373450((uint64_t)v4, a1);
}

uint64_t SearchController.selectedHintIndex.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = v1 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_36DD90(v2, (uint64_t)&v5);
  os_unfair_lock_unlock(v3);
  return v5;
}

uint64_t sub_36DD90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = type metadata accessor for SearchController.State(0);
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(result + 20));
  uint64_t v6 = *v5;
  LOBYTE(v5) = *((unsigned char *)v5 + 8);
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = (_BYTE)v5;
  return result;
}

uint64_t sub_36DDE4(uint64_t a1, uint64_t a2)
{
  uint64_t result = type metadata accessor for SearchController.State(0);
  uint64_t v5 = a1 + *(int *)(result + 20);
  *(void *)uint64_t v5 = a2;
  *(unsigned char *)(v5 + 8) = 0;
  return result;
}

uint64_t sub_36DE30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = type metadata accessor for SearchController.State(0);
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(result + 20));
  uint64_t v6 = *v5;
  char v7 = *((unsigned char *)v5 + 8);
  *uint64_t v5 = 0;
  *((unsigned char *)v5 + 8) = 1;
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = v7;
  return result;
}

uint64_t sub_36DE90(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFF28);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit16SearchController_storeDataProvider + 24);
  uint64_t v10 = *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit16SearchController_storeDataProvider + 32);
  __swift_project_boxed_opaque_existential_1((void *)(v2 + OBJC_IVAR____TtC8ShelfKit16SearchController_storeDataProvider), v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 168))(a1, a2, v9, v10);
  uint64_t v11 = sub_3D7980();
  swift_release();
  v16[1] = v11;
  uint64_t v12 = swift_allocObject();
  swift_weakInit();
  uint64_t v13 = (void *)swift_allocObject();
  long long v13[2] = v12;
  uint64_t v13[3] = a1;
  v13[4] = a2;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BFF30);
  type metadata accessor for SearchContent();
  sub_3D6E4(&qword_4BFF38, &qword_4BFF30);
  sub_3D5B40();
  swift_release();
  swift_release();
  sub_3D6E4(&qword_4BFF40, &qword_4BFF28);
  uint64_t v14 = sub_3D5AC0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v14;
}

uint64_t sub_36E0DC()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFD60);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFF60);
  uint64_t v22 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFF68);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_3D3610();
  v23[3] = v12;
  v23[4] = sub_372F18((unint64_t *)&qword_4AC678, (void (*)(uint64_t))&type metadata accessor for Podcasts);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v23);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v12 - 8) + 104))(boxed_opaque_existential_2Tm, enum case for Podcasts.recentlySearched(_:), v12);
  LOBYTE(v12) = sub_3D3580();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v23);
  if ((v12 & 1) != 0
    && (uint64_t v21 = v9, *(void *)(v0 + OBJC_IVAR____TtC8ShelfKit16SearchController_recentlySearchedStore))
    && (uint64_t v14 = *(void *)(v0 + 64)) != 0)
  {
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v16 = v0 + 24;
    uint64_t v17 = *(void *)(v0 + OBJC_IVAR____TtC8ShelfKit16SearchController_searchLockupCache);
    swift_retain();
    swift_unknownObjectRetain();
    sub_105CCC(v14, v15, v16, v17, (uint64_t)v7);
    type metadata accessor for SearchContent();
    sub_3D6E4(&qword_4BFF70, &qword_4BFF60);
    sub_3D5B40();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v5);
    sub_3D6E4(&qword_4BFF78, &qword_4BFF68);
    uint64_t v18 = sub_3D5AC0();
    swift_unknownObjectRelease();
    swift_release();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v8);
  }
  else
  {
    type metadata accessor for SearchContent();
    sub_3D5940();
    sub_3D6E4(&qword_4BFD70, &qword_4BFD60);
    uint64_t v18 = sub_3D5AC0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v18;
}

uint64_t sub_36E4F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, int a7@<W7>, uint64_t *a8@<X8>)
{
  int v52 = a7;
  uint64_t v55 = a6;
  uint64_t v54 = a5;
  uint64_t v53 = a4;
  uint64_t v51 = a3;
  uint64_t v56 = a1;
  uint64_t v63 = a8;
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFF80);
  uint64_t v58 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFF88);
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v57 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_3D7260();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v46 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v48 = (char *)&v45 - v16;
  uint64_t v17 = sub_3D2460();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v45 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for SearchContent();
  __chkstk_darwin(v62);
  uint64_t v22 = (char *)&v45 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFF90);
  uint64_t v49 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v47 = (char *)&v45 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    uint64_t v64 = sub_36EE70(v51, v53, v54, v55, v52 & 1);
    uint64_t v24 = swift_allocObject();
    *(void *)(v24 + 16) = v56;
    *(void *)(v24 + 24) = a2;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_4BFFA0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4ADCF0);
    sub_3D6E4(&qword_4BFFA8, &qword_4BFFA0);
    sub_3D6E4(&qword_4ADD08, &qword_4ADCF0);
    sub_3D5B70();
    swift_release();
    swift_release();
    __swift_instantiateConcreteTypeFromMangledName(&qword_4BFFB0);
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_3DED90;
    swift_storeEnumTagMultiPayload();
    sub_3D6E4(&qword_4BFFB8, &qword_4BFF80);
    uint64_t v25 = v57;
    uint64_t v26 = v59;
    sub_3D5C10();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v58 + 8))(v10, v26);
    sub_3D6E4(&qword_4BFFC0, &qword_4BFF88);
    uint64_t v27 = v61;
    uint64_t v28 = sub_3D5AC0();
    swift_release();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v25, v27);
  }
  else
  {
    sub_3D2450();
    _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
    uint64_t v61 = v12;
    uint64_t v30 = v13;
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
    uint64_t v31 = sub_3D7DD0();
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    uint64_t v64 = v31;
    uint64_t v65 = v33;
    v71[0] = 45;
    v71[1] = 0xE100000000000000;
    v74[0] = 0;
    v74[1] = 0xE000000000000000;
    sub_345F8();
    uint64_t v34 = sub_3D89C0();
    uint64_t v36 = v35;
    swift_bridgeObjectRelease();
    uint64_t v64 = sub_3D3FD0();
    uint64_t v65 = v37;
    swift_bridgeObjectRetain();
    v75._countAndFlagsBits = 95;
    v75._object = (void *)0xE100000000000000;
    sub_3D7E90(v75);
    v76._countAndFlagsBits = v34;
    v76._object = v36;
    sub_3D7E90(v76);
    swift_bridgeObjectRelease();
    sub_3D7940();
    uint64_t v38 = sub_3D3FD0();
    uint64_t v64 = v34;
    uint64_t v65 = v36;
    uint64_t v66 = v38;
    uint64_t v67 = v39;
    uint64_t v68 = 0;
    char v69 = 0;
    uint64_t v70 = 0;
    sub_3D2F80();
    uint64_t v40 = v48;
    sub_3D7250();
    uint64_t v41 = type metadata accessor for GroupedSearchResultsPage();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1FD0);
    sub_3D6DF0();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_3DED20;
    sub_3D6DC0();
    sub_3D6DB0();
    MetricsPageFields.metricsFields.getter();
    uint64_t v42 = v61;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v46, v40, v61);
    sub_3D6E00();
    sub_18F88((uint64_t)v71, (uint64_t)v74, (uint64_t *)&unk_4B1F80);
    sub_443B4((uint64_t)v74);
    uint64_t v73 = v71[2];
    sub_443E0((uint64_t)&v73);
    uint64_t v72 = v71[3];
    sub_443E0((uint64_t)&v72);
    sub_3D4C4(v71[4]);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v40, v42);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)&v22[*(int *)(v41 + 20)] = _swiftEmptyArrayStorage;
    swift_storeEnumTagMultiPayload();
    uint64_t v43 = v47;
    sub_3D5930();
    sub_3D6E4(&qword_4BFF98, &qword_4BFF90);
    uint64_t v44 = v50;
    uint64_t v28 = sub_3D5AC0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v43, v44);
  }
  uint64_t *v63 = v28;
  return result;
}

uint64_t sub_36EE70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v52 = a3;
  uint64_t v53 = a4;
  uint64_t v50 = a1;
  uint64_t v51 = *v5;
  int v7 = a5 & 1;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFFC8);
  uint64_t v55 = *(void *)(v8 - 8);
  uint64_t v56 = v8;
  __chkstk_darwin(v8);
  uint64_t v54 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_3D54A0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_3D5400();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v44 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v44 - v19;
  if (qword_4A9098 != -1) {
    swift_once();
  }
  uint64_t v21 = __swift_project_value_buffer(v10, (uint64_t)qword_4BFD40);
  sub_3D5480();
  sub_3D53D0();
  uint64_t v48 = v11;
  uint64_t v49 = v10;
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v21, v10);
  uint64_t v22 = sub_3D5480();
  os_signpost_type_t v23 = sub_3D8600();
  char v24 = sub_3D8820();
  uint64_t v57 = v15;
  int v47 = v7;
  if (v24)
  {
    uint64_t v25 = "StoreSearchProvider";
    if (!v7) {
      uint64_t v25 = "LibrarySearchProvider";
    }
    uint64_t v45 = v25;
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    v26(v18, v20, v14);
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v46 = v20;
    uint64_t v28 = a2;
    uint64_t v29 = v14;
    uint64_t v30 = v27;
    *(_WORD *)uint64_t v27 = 0;
    os_signpost_id_t v31 = sub_3D53E0();
    _os_signpost_emit_with_name_impl(&dword_0, v22, v23, v31, v45, "", v30, 2u);
    uint64_t v14 = v29;
    a2 = v28;
    uint64_t v20 = v46;
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v57 + 8))(v18, v14);
  }
  else
  {

    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
  }
  v26(v18, v20, v14);
  sub_3D54F0();
  swift_allocObject();
  uint64_t v32 = sub_3D54E0();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v13, v49);
  uint64_t v33 = v50;
  char v34 = v47;
  sub_370D4C(v50, a2, v47);
  uint64_t v35 = sub_3D79B0();
  swift_release();
  uint64_t v58 = v35;
  uint64_t v36 = swift_allocObject();
  swift_weakInit();
  uint64_t v37 = swift_allocObject();
  *(unsigned char *)(v37 + 16) = v34;
  *(void *)(v37 + 24) = v32;
  *(void *)(v37 + 32) = v36;
  *(void *)(v37 + 40) = v33;
  *(void *)(v37 + 48) = a2;
  *(void *)(v37 + 56) = v52;
  uint64_t v38 = v51;
  *(void *)(v37 + 64) = v53;
  *(void *)(v37 + 72) = v38;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BFFD0);
  type metadata accessor for SearchContent();
  sub_3D6E4(&qword_4BFFD8, &qword_4BFFD0);
  uint64_t v39 = v20;
  uint64_t v40 = v54;
  sub_3D5B40();
  swift_release();
  swift_release();
  sub_3D6E4(&qword_4BFFE0, &qword_4BFFC8);
  uint64_t v41 = v56;
  uint64_t v42 = sub_3D5AC0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v40, v41);
  (*(void (**)(char *, uint64_t))(v57 + 8))(v39, v14);
  return v42;
}

uint64_t sub_36F404@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = type metadata accessor for SearchContent();
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFF90);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  void *v10 = *a1;
  v10[1] = a2;
  v10[2] = a3;
  swift_storeEnumTagMultiPayload();
  swift_errorRetain();
  swift_retain();
  sub_3D5930();
  sub_3D6E4(&qword_4BFF98, &qword_4BFF90);
  uint64_t v15 = sub_3D5AC0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  *a4 = v15;
  return result;
}

uint64_t sub_36F5B0()
{
  uint64_t v0 = sub_3D54A0();
  __swift_allocate_value_buffer(v0, qword_4BFD40);
  __swift_project_value_buffer(v0, (uint64_t)qword_4BFD40);
  return sub_3D5430();
}

uint64_t sub_36F5FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v52 = a4;
  uint64_t v51 = a3;
  uint64_t v56 = (char *)a2;
  uint64_t v63 = a1;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1BE0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ModernShelf();
  uint64_t v62 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v64 = (uint64_t)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v61 = (uint64_t)&v46 - v12;
  uint64_t v60 = sub_3D6EA0();
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v58 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_3D7950();
  uint64_t v54 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  uint64_t v57 = (char *)&v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for ModernPage();
  __chkstk_darwin(v15);
  uint64_t v53 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v46 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_3D6D80();
  uint64_t v49 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v48 = (char *)&v46 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BFF48);
  __chkstk_darwin(v21 - 8);
  os_signpost_type_t v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for SearchHintsPage();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v27 = (char *)&v46 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_153B4(v63, (uint64_t)v23, &qword_4BFF48);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    sub_250FC((uint64_t)v23, &qword_4BFF48);
    sub_3D7900();
    sub_3D6E90();
    *(void *)(a5 + *(int *)(v15 + 24)) = _swiftEmptyArrayStorage;
LABEL_23:
    type metadata accessor for SearchContent();
    return swift_storeEnumTagMultiPayload();
  }
  uint64_t v47 = a5;
  uint64_t v63 = v15;
  sub_372C28((uint64_t)v23, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for SearchHintsPage);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v56 = (char *)Strong;
    sub_3D4400();
    sub_3D4330();
    uint64_t v29 = sub_3D2350();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v19, 1, 1, v29);
    sub_3D2F90();
    uint64_t v30 = (uint64_t)v48;
    sub_3D6D20();
    sub_18F88((uint64_t)v66, (uint64_t)v72, (uint64_t *)&unk_4B1F80);
    sub_443B4((uint64_t)v72);
    uint64_t v71 = v67;
    sub_443E0((uint64_t)&v71);
    uint64_t v70 = v68;
    sub_443E0((uint64_t)&v70);
    sub_3D4C4(v69);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_250FC((uint64_t)v19, &qword_4AD7B0);
    v65[3] = v24;
    v65[4] = sub_372F18(&qword_4BFF50, (void (*)(uint64_t))type metadata accessor for SearchHintsPage);
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v65);
    sub_372F60((uint64_t)v27, (uint64_t)boxed_opaque_existential_2Tm, (uint64_t (*)(void))type metadata accessor for SearchHintsPage);
    sub_36FFCC(v30, (uint64_t)v65);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v30, v50);
    sub_250FC((uint64_t)v65, &qword_4BFF58);
  }
  sub_3D7900();
  (*(void (**)(char *, char *, uint64_t))(v59 + 16))(v58, &v27[*(int *)(v24 + 24)], v60);
  unint64_t v32 = *((void *)v27 + 1);
  if (v32 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_3D8D90();
    uint64_t v33 = result;
  }
  else
  {
    uint64_t v33 = *(void *)((char *)&dword_10 + (v32 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain_n();
  }
  uint64_t v56 = v27;
  uint64_t v35 = v63;
  if (!v33)
  {
    uint64_t v38 = _swiftEmptyArrayStorage;
LABEL_22:
    swift_bridgeObjectRelease_n();
    sub_372C90((uint64_t)v56, (uint64_t (*)(void))type metadata accessor for SearchHintsPage);
    uint64_t v45 = (uint64_t)v53;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v53, v57, v55);
    (*(void (**)(uint64_t, char *, uint64_t))(v59 + 32))(v45 + *(int *)(v35 + 20), v58, v60);
    *(void *)(v45 + *(int *)(v35 + 24)) = v38;
    sub_372C28(v45, v47, (uint64_t (*)(void))type metadata accessor for ModernPage);
    goto LABEL_23;
  }
  if (v33 >= 1)
  {
    uint64_t v36 = 0;
    uint64_t v37 = (unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48);
    uint64_t v38 = _swiftEmptyArrayStorage;
    uint64_t v39 = v9;
    do
    {
      if ((v32 & 0xC000000000000001) != 0) {
        id v40 = (id)sub_3D8BF0();
      }
      else {
        id v40 = *(id *)(v32 + 8 * v36 + 32);
      }
      uint64_t v41 = v40;
      Shelf.mapToModernShelf()((uint64_t)v8);

      if ((*v37)(v8, 1, v9) == 1)
      {
        sub_250FC((uint64_t)v8, &qword_4B1BE0);
      }
      else
      {
        uint64_t v42 = v61;
        sub_372C28((uint64_t)v8, v61, (uint64_t (*)(void))type metadata accessor for ModernShelf);
        sub_372C28(v42, v64, (uint64_t (*)(void))type metadata accessor for ModernShelf);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v38 = (void *)sub_133FC(0, v38[2] + 1, 1, (unint64_t)v38);
        }
        unint64_t v44 = v38[2];
        unint64_t v43 = v38[3];
        if (v44 >= v43 >> 1) {
          uint64_t v38 = (void *)sub_133FC(v43 > 1, v44 + 1, 1, (unint64_t)v38);
        }
        v38[2] = v44 + 1;
        sub_372C28(v64, (uint64_t)v38+ ((*(unsigned __int8 *)(v62 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v62 + 80))+ *(void *)(v62 + 72) * v44, (uint64_t (*)(void))type metadata accessor for ModernShelf);
        uint64_t v9 = v39;
      }
      ++v36;
      uint64_t v35 = v63;
    }
    while (v33 != v36);
    goto LABEL_22;
  }
  __break(1u);
  return result;
}

uint64_t sub_36FFCC(uint64_t a1, uint64_t a2)
{
  uint64_t v102 = a1;
  uint64_t v88 = sub_3D6950();
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v85 = (char *)&v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_3D69A0();
  uint64_t v84 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  int v83 = (char *)&v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_3D6D80();
  uint64_t v113 = *(void *)(v5 - 8);
  uint64_t v114 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  id v106 = (char *)&v83 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = v7;
  __chkstk_darwin(v6);
  uint64_t v103 = (char *)&v83 - v8;
  uint64_t v9 = sub_3D71D0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v109 = v9;
  uint64_t v110 = v10;
  uint64_t v11 = __chkstk_darwin(v9);
  id v105 = (char *)&v83 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = v12;
  __chkstk_darwin(v11);
  int v108 = (char *)&v83 - v13;
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0CF8);
  uint64_t v92 = *(void *)(v98 - 8);
  __chkstk_darwin(v98);
  id v97 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0D00);
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v89 = (char *)&v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0CC0);
  __chkstk_darwin(v16 - 8);
  uint64_t v94 = (uint64_t)&v83 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for SearchController.State(0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v83 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v115 = sub_3D7480();
  uint64_t v111 = *(void *)(v115 - 8);
  uint64_t v21 = __chkstk_darwin(v115);
  int v104 = (char *)&v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v107 = (char *)&v83 - v24;
  uint64_t v25 = __chkstk_darwin(v23);
  id v93 = (char *)&v83 - v26;
  uint64_t v27 = __chkstk_darwin(v25);
  id v95 = (char *)&v83 - v28;
  uint64_t v96 = v29;
  __chkstk_darwin(v27);
  id v112 = (char *)&v83 - v30;
  uint64_t v31 = type metadata accessor for MetricsActivity.State(0);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v83 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_3D6EA0();
  uint64_t v35 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  uint64_t v37 = (char *)&v83 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_153B4(a2, (uint64_t)aBlock, &qword_4BFF58);
  if (v117)
  {
    __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v117);
    sub_3D7B50();
    uint64_t v38 = sub_3D6DA0();
    (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
    uint64_t v39 = v101;
    if (v38) {
      goto LABEL_6;
    }
  }
  else
  {
    sub_250FC((uint64_t)aBlock, &qword_4BFF58);
    uint64_t v39 = v101;
  }
  sub_3D54C0();
  uint64_t v38 = *(void *)&v33[*(int *)(v31 + 28)];
  swift_bridgeObjectRetain();
  sub_372C90((uint64_t)v33, type metadata accessor for MetricsActivity.State);
  swift_bridgeObjectRelease();
LABEL_6:
  sub_3D54C0();
  uint64_t v40 = v94;
  sub_18F88((uint64_t)v20, v94, &qword_4B0CC0);
  uint64_t v41 = v111;
  uint64_t v42 = v115;
  int v43 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 48))(v40, 1, v115);
  unint64_t v44 = v93;
  uint64_t v45 = v38;
  if (v43 == 1)
  {
    sub_3D7470();
    sub_250FC(v40, &qword_4B0CC0);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 32))(v93, v40, v42);
  }
  uint64_t v46 = v92;
  uint64_t v47 = v91;
  uint64_t v48 = v90;
  uint64_t v49 = v89;
  aBlock[0] = *(void *)&v39[OBJC_IVAR____TtC8ShelfKit16SearchController_pageContextTracker];
  swift_retain();
  sub_3D7420();
  sub_3D4670();
  uint64_t v50 = v95;
  sub_3D7410();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v49, v47);
  swift_release();
  uint64_t v51 = *(void (**)(char *, uint64_t))(v41 + 8);
  v51(v44, v42);
  aBlock[0] = v45;
  uint64_t v52 = v97;
  sub_3D7440();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4A9A50);
  sub_3D73F0();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v52, v98);
  uint64_t v98 = v41 + 8;
  id v97 = (char *)v51;
  v51(v50, v42);
  swift_bridgeObjectRelease();
  uint64_t v53 = v109;
  id v101 = *(char **)(v110 + 16);
  uint64_t v54 = v108;
  ((void (*)(char *, char *, uint64_t))v101)(v108, &v39[OBJC_IVAR____TtC8ShelfKit16SearchController_metricsPipeline], v109);
  uint64_t v55 = v114;
  uint64_t v56 = *(void (**)(char *, uint64_t, uint64_t))(v113 + 16);
  uint64_t v57 = v103;
  v56(v103, v102, v114);
  uint64_t v58 = *(void (**)(char *, char *, uint64_t))(v111 + 16);
  uint64_t v59 = v107;
  v58(v107, v112, v115);
  ((void (*)(char *, char *, uint64_t))v101)(v105, v54, v53);
  v56(v106, (uint64_t)v57, v55);
  v58(v104, v59, v115);
  uint64_t v60 = v115;
  uint64_t v61 = v110;
  uint64_t v62 = v111;
  unint64_t v63 = (*(unsigned __int8 *)(v110 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v110 + 80);
  uint64_t v64 = v113;
  unint64_t v65 = (v99 + *(unsigned __int8 *)(v113 + 80) + v63) & ~(unint64_t)*(unsigned __int8 *)(v113 + 80);
  unint64_t v66 = (v100 + *(unsigned __int8 *)(v111 + 80) + v65) & ~(unint64_t)*(unsigned __int8 *)(v111 + 80);
  uint64_t v67 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v61 + 32))(v67 + v63, v108, v53);
  uint64_t v68 = v64;
  uint64_t v69 = v60;
  (*(void (**)(unint64_t, char *, uint64_t))(v68 + 32))(v67 + v65, v57, v114);
  (*(void (**)(unint64_t, char *, uint64_t))(v62 + 32))(v67 + v66, v107, v60);
  if ([self isMainThread])
  {
    uint64_t v70 = v105;
    uint64_t v71 = v106;
    uint64_t v72 = v104;
    sub_3D71C0();
    swift_release();
    uint64_t v73 = v110;
    uint64_t v74 = v72;
  }
  else
  {
    sub_3D530(0, (unint64_t *)&qword_4AD4D0);
    Swift::String v75 = (void *)sub_3D8560();
    uint64_t v76 = swift_allocObject();
    *(void *)(v76 + 16) = sub_1028C8;
    *(void *)(v76 + 24) = v67;
    id v118 = sub_3D528;
    uint64_t v119 = v76;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_36F78;
    long long v117 = &block_descriptor_31;
    uint64_t v77 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    uint64_t v78 = v83;
    sub_3D6970();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_372F18((unint64_t *)&qword_4AD860, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1C90);
    sub_3D6E4((unint64_t *)&qword_4AD870, (uint64_t *)&unk_4B1C90);
    uint64_t v79 = v85;
    uint64_t v80 = v88;
    sub_3D8A70();
    sub_3D8580();
    _Block_release(v77);

    (*(void (**)(char *, uint64_t))(v87 + 8))(v79, v80);
    (*(void (**)(char *, uint64_t))(v84 + 8))(v78, v86);
    uint64_t v70 = v105;
    uint64_t v71 = v106;
    uint64_t v73 = v110;
    uint64_t v74 = v104;
  }
  uint64_t v81 = (void (*)(char *, uint64_t))v97;
  swift_release();
  (*(void (**)(char *, uint64_t))(v73 + 8))(v70, v109);
  (*(void (**)(char *, uint64_t))(v113 + 8))(v71, v114);
  v81(v74, v69);
  return ((uint64_t (*)(char *, uint64_t))v81)(v112, v69);
}

uint64_t sub_370CEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_372F60(a1, a2, (uint64_t (*)(void))type metadata accessor for ModernPage);
  type metadata accessor for SearchContent();

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_370D4C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v56 = a2;
  LODWORD(v58) = a3;
  uint64_t v4 = sub_3D7260();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v49 - v8;
  uint64_t v10 = sub_3D2460();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for GroupedSearchResultsPage();
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v49 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_3D5640();
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v58)
  {
    uint64_t v27 = *(void *)(v57 + OBJC_IVAR____TtC8ShelfKit16SearchController_storeDataProvider + 24);
    uint64_t v28 = *(void *)(v57 + OBJC_IVAR____TtC8ShelfKit16SearchController_storeDataProvider + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v57 + OBJC_IVAR____TtC8ShelfKit16SearchController_storeDataProvider), v27);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 160))(a1, v56, v27, v28);
  }
  else
  {
    uint64_t v49 = v13;
    uint64_t v50 = v11;
    uint64_t v51 = v10;
    uint64_t v52 = v7;
    uint64_t v54 = v16;
    uint64_t v58 = v9;
    uint64_t v53 = v4;
    if (*(void *)(v57 + 64))
    {
      uint64_t v22 = *(void *)(v57 + 72);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 416);
      swift_unknownObjectRetain();
      uint64_t v25 = v24(a1, v56, ObjectType, v22);
      swift_unknownObjectRelease();
      return v25;
    }
    else
    {
      uint64_t v29 = v19;
      uint64_t v30 = v18;
      sub_3D530(0, (unint64_t *)&qword_4AD680);
      sub_3D88B0();
      uint64_t v31 = sub_3D5630();
      os_log_type_t v32 = sub_3D83F0();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v33 = 0;
        _os_log_impl(&dword_0, v31, v32, "Cannot fetch library search results without library data provider!", v33, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v29 + 8))(v21, v30);
      uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BAA90);
      uint64_t v34 = v49;
      sub_3D2450();
      _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v34, v51);
      uint64_t v35 = sub_3D7DD0();
      uint64_t v37 = v36;
      swift_bridgeObjectRelease();
      uint64_t v59 = v35;
      uint64_t v60 = v37;
      v66[0] = 45;
      v66[1] = 0xE100000000000000;
      v69[0] = 0;
      v69[1] = 0xE000000000000000;
      sub_345F8();
      uint64_t v38 = sub_3D89C0();
      uint64_t v40 = v39;
      swift_bridgeObjectRelease();
      uint64_t v59 = sub_3D3FD0();
      uint64_t v60 = v41;
      swift_bridgeObjectRetain();
      v70._countAndFlagsBits = 95;
      v70._object = (void *)0xE100000000000000;
      sub_3D7E90(v70);
      v71._countAndFlagsBits = v38;
      v71._object = v40;
      sub_3D7E90(v71);
      swift_bridgeObjectRelease();
      uint64_t v42 = v54;
      sub_3D7940();
      uint64_t v43 = sub_3D3FD0();
      uint64_t v59 = v38;
      uint64_t v60 = v40;
      uint64_t v61 = v43;
      uint64_t v62 = v44;
      uint64_t v63 = 0;
      char v64 = 0;
      uint64_t v65 = 0;
      sub_3D2F80();
      uint64_t v45 = v58;
      sub_3D7250();
      uint64_t v46 = v14;
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1FD0);
      sub_3D6DF0();
      *(_OWORD *)(swift_allocObject() + 16) = xmmword_3DED20;
      sub_3D6DC0();
      sub_3D6DB0();
      MetricsPageFields.metricsFields.getter();
      uint64_t v47 = v55;
      uint64_t v48 = v53;
      (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v52, v45, v53);
      sub_3D6E00();
      sub_18F88((uint64_t)v66, (uint64_t)v69, (uint64_t *)&unk_4B1F80);
      sub_443B4((uint64_t)v69);
      uint64_t v68 = v66[2];
      sub_443E0((uint64_t)&v68);
      uint64_t v67 = v66[3];
      sub_443E0((uint64_t)&v67);
      sub_3D4C4(v66[4]);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v45, v48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)&v42[*(int *)(v46 + 20)] = _swiftEmptyArrayStorage;
      return sub_3D7A10();
    }
  }
}

uint64_t sub_371404@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, void *a8@<X8>)
{
  uint64_t v33 = a7;
  uint64_t v32 = a6;
  uint64_t v39 = a4;
  uint64_t v37 = a3;
  uint64_t v35 = sub_3D6D80();
  uint64_t v34 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for GroupedSearchResultsPage();
  uint64_t v38 = a1;
  uint64_t v17 = sub_3D6DA0();
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v19 = sub_3D3990();
    sub_195CAC(v19, v20, v18, (uint64_t)v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = sub_3D2350();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v16, 1, 1, v21);
  }
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    goto LABEL_6;
  }
  uint64_t v23 = *(void *)(Strong + 16);
  uint64_t v24 = v23 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v23 + 16);
  uint64_t v25 = (os_unfair_lock_s *)(v23 + ((*(unsigned int *)(*(void *)v23 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v25);
  sub_36DE30(v24, (uint64_t)&v42);
  os_unfair_lock_unlock(v25);
  uint64_t v26 = v42;
  int v27 = BYTE8(v42);
  swift_release();
  if (v27 != 1)
  {
    swift_beginAccess();
    if (!swift_weakLoadStrong()) {
      goto LABEL_11;
    }
    sub_3718FC(v39, a5, v32, v33, v26);
    uint64_t v44 = 0;
    long long v42 = 0u;
    long long v43 = 0u;
    sub_36FFCC((uint64_t)v13, (uint64_t)&v42);
    swift_release();
    uint64_t v28 = &v42;
  }
  else
  {
LABEL_6:
    swift_beginAccess();
    if (!swift_weakLoadStrong()) {
      goto LABEL_11;
    }
    sub_3D4440();
    sub_3D4360();
    sub_3D2F90();
    sub_3D6D20();
    sub_18F88((uint64_t)&v42, (uint64_t)v47, (uint64_t *)&unk_4B1F80);
    sub_443B4((uint64_t)v47);
    uint64_t v46 = v43;
    sub_443E0((uint64_t)&v46);
    uint64_t v45 = *((void *)&v43 + 1);
    sub_443E0((uint64_t)&v45);
    sub_3D4C4(v44);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v41 = 0;
    memset(v40, 0, sizeof(v40));
    sub_36FFCC((uint64_t)v13, (uint64_t)v40);
    swift_release();
    uint64_t v28 = v40;
  }
  sub_250FC((uint64_t)v28, &qword_4BFF58);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v13, v35);
LABEL_11:
  uint64_t v29 = v38;
  uint64_t v30 = *(void *)(*(void *)(v38 + *(int *)(v36 + 20)) + 16);
  sub_250FC((uint64_t)v16, &qword_4AD7B0);
  if (v30)
  {
    sub_372F60(v29, (uint64_t)a8, (uint64_t (*)(void))type metadata accessor for GroupedSearchResultsPage);
    type metadata accessor for SearchContent();
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    *a8 = v39;
    a8[1] = a5;
    type metadata accessor for SearchContent();
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
  }
  return sub_373058(a2 & 1);
}

uint64_t sub_3718FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_3D4490();
  sub_3D4300();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4A9788);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_3DED20;
  *(void *)(inited + 32) = 0x6E6F697461636F6CLL;
  *(void *)(inited + 40) = 0xE800000000000000;
  uint64_t v7 = swift_initStackObject();
  *(_OWORD *)(v7 + 16) = xmmword_3DED20;
  *(void *)(v7 + 32) = 0xD000000000000010;
  *(void *)(v7 + 40) = 0x80000000003FEB70;
  *(void *)(v7 + 48) = a5;
  *(void *)(v7 + 72) = &type metadata for Int;
  strcpy((char *)(v7 + 80), "locationType");
  *(void *)(v7 + 120) = &type metadata for String;
  *(unsigned char *)(v7 + 93) = 0;
  *(_WORD *)(v7 + 94) = -5120;
  *(void *)(v7 + 96) = 0x7473694C746E6948;
  *(void *)(v7 + 104) = 0xE800000000000000;
  unint64_t v8 = sub_11008(v7);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_4A9A50);
  *(void *)(inited + 48) = v8;
  *(void *)(inited + 72) = v9;
  *(void *)(inited + 80) = 0x6449746567726174;
  *(void *)(inited + 120) = &type metadata for Int;
  *(void *)(inited + 88) = 0xE800000000000000;
  *(void *)(inited + 96) = a5;
  sub_11008(inited);
  sub_3D2F90();
  sub_3D6D20();
  sub_18F88((uint64_t)v11, (uint64_t)v17, (uint64_t *)&unk_4B1F80);
  sub_443B4((uint64_t)v17);
  uint64_t v16 = v12;
  sub_443E0((uint64_t)&v16);
  uint64_t v15 = v13;
  sub_443E0((uint64_t)&v15);
  sub_3D4C4(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_371AF0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_3D71D0();
  uint64_t v25 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0CC0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for SearchController.State(0);
  uint64_t v9 = v8 - 8;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v15 = sub_3D7480();
  sub_3D7080();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v12, 1, 1, v15);
  uint64_t v16 = &v12[*(int *)(v9 + 28)];
  *(void *)uint64_t v16 = 0;
  v16[8] = 1;
  sub_373450((uint64_t)v7, (uint64_t)v12);
  *(void *)uint64_t v16 = 0;
  v16[8] = 1;
  sub_372C28((uint64_t)v12, (uint64_t)v14, type metadata accessor for SearchController.State);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BFFE8);
  uint64_t v17 = swift_allocObject();
  *(_DWORD *)(v17 + ((*(unsigned int *)(*(void *)v17 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_372F60((uint64_t)v14, v17 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v17 + 16), type metadata accessor for SearchController.State);
  sub_372C90((uint64_t)v14, type metadata accessor for SearchController.State);
  *(void *)(v1 + 16) = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4B22A0);
  sub_3D70B0();
  sub_18F70(v26, v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4AD450);
  sub_3D7080();
  *(_OWORD *)(v1 + 64) = v26[0];
  type metadata accessor for MetricsActivity();
  sub_3D7080();
  id v18 = *(id *)&v26[0];
  if (!*(void *)&v26[0])
  {
    if (qword_4A8E40 != -1) {
      swift_once();
    }
    id v18 = (id)qword_4B5050;
  }
  *(void *)(v1 + 80) = v18;
  sub_3D70B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v25 + 32))(v1 + OBJC_IVAR____TtC8ShelfKit16SearchController_metricsPipeline, v4, v2);
  sub_3D4670();
  sub_3D7080();
  uint64_t v19 = *(void *)&v26[0];
  if (!*(void *)&v26[0]) {
    uint64_t v19 = sub_3D4660();
  }
  *(void *)(v1 + OBJC_IVAR____TtC8ShelfKit16SearchController_pageContextTracker) = v19;
  type metadata accessor for RecentlySearchedStorage();
  sub_3D7080();
  *(void *)(v1 + OBJC_IVAR____TtC8ShelfKit16SearchController_recentlySearchedStore) = *(void *)&v26[0];
  type metadata accessor for SearchLockupCache();
  uint64_t v20 = swift_allocObject();
  unint64_t v21 = sub_11734((uint64_t)_swiftEmptyArrayStorage);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BFFF0);
  uint64_t v22 = swift_allocObject();
  *(_DWORD *)(v22 + 24) = 0;
  *(void *)(v22 + 16) = v21;
  *(void *)(v20 + 16) = v22;
  *(void *)(v1 + OBJC_IVAR____TtC8ShelfKit16SearchController_searchLockupCache) = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4B8740);
  sub_3D70B0();
  sub_18F70(v26, v1 + OBJC_IVAR____TtC8ShelfKit16SearchController_storeDataProvider);
  [self supportsLocalLibrary];
  return v1;
}

uint64_t sub_371FB8()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_371FF0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_372038@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  return sub_36E4F0(a1, a2, *(void *)(v3 + 24), *(void *)(v3 + 32), *(void *)(v3 + 40), *(void *)(v3 + 48), *(unsigned __int8 *)(v3 + 56), a3);
}

uint64_t sub_37204C(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t result = type metadata accessor for SearchController.State(0);
  uint64_t v5 = a1 + *(int *)(result + 20);
  *(void *)uint64_t v5 = v3;
  *(unsigned char *)(v5 + 8) = 0;
  return result;
}

uint64_t sub_372098()
{
  return type metadata accessor for SearchController(0);
}

uint64_t type metadata accessor for SearchController(uint64_t a1)
{
  return sub_2595C(a1, qword_4BFDC8);
}

uint64_t sub_3720C0()
{
  uint64_t result = sub_3D71D0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SearchController(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for SearchController);
}

uint64_t dispatch thunk of SearchController.__allocating_init(asPartOf:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t *sub_3721C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_3D7480();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0CC0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    *(void *)uint64_t v12 = *(void *)v13;
    v12[8] = v13[8];
  }
  return a1;
}

uint64_t sub_37234C(uint64_t a1)
{
  uint64_t v2 = sub_3D7480();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

char *sub_37241C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_3D7480();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0CC0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  return a1;
}

char *sub_372554(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_3D7480();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0CC0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void *)v14;
  v13[8] = v14[8];
  *(void *)uint64_t v13 = v15;
  return a1;
}

char *sub_3726F0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_3D7480();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0CC0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  int v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  *(void *)int v10 = *(void *)v11;
  v10[8] = v11[8];
  return a1;
}

char *sub_372828(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_3D7480();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0CC0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  return a1;
}

uint64_t sub_3729C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3729D8);
}

uint64_t sub_3729D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0CC0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_372A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_372A5C);
}

uint64_t sub_372A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0CC0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SearchController.State(uint64_t a1)
{
  return sub_2595C(a1, (uint64_t *)&unk_4BFEE8);
}

void sub_372AF0()
{
  sub_372B84();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_372B84()
{
  if (!qword_4BFEF8)
  {
    sub_3D7480();
    unint64_t v0 = sub_3D8910();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_4BFEF8);
    }
  }
}

uint64_t sub_372BDC()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_372C1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_36F5FC(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_372C28(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_372C90(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_372CF0()
{
  uint64_t v17 = sub_3D71D0();
  uint64_t v1 = *(void *)(v17 - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v16 = sub_3D6D80();
  uint64_t v5 = *(void *)(v16 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v3 + v4 + v6) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = sub_3D7480();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = (v7 + v8 + v11) & ~v11;
  uint64_t v15 = v12 + *(void *)(v10 + 64);
  uint64_t v13 = v2 | v6 | v11 | 7;
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0 + v3, v17);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v0 + v7, v16);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v0 + v12, v9);

  return _swift_deallocObject(v0, v15, v13);
}

uint64_t sub_372EC8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t block_copy_helper_31(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_31()
{
  return swift_release();
}

uint64_t sub_372F18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_372F60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_372FC8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_36F404(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_372FD0()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_373020@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_371404(a1, *(unsigned char *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), a2);
}

uint64_t sub_373058(int a1)
{
  LODWORD(v27) = a1;
  uint64_t v1 = (const char *)sub_3D54B0();
  uint64_t v28 = *((void *)v1 - 1);
  uint64_t v29 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = &v25[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_3D5400();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v30 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v6);
  uint64_t v9 = &v25[-v8];
  uint64_t v10 = sub_3D54A0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (qword_4A9098 != -1) {
    swift_once();
  }
  uint64_t v14 = __swift_project_value_buffer(v10, (uint64_t)qword_4BFD40);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v11 + 16))(v13, v14, v10);
  uint64_t v15 = sub_3D5480();
  sub_3D54D0();
  int v26 = sub_3D85F0();
  if (sub_3D8820())
  {
    uint64_t v16 = "StoreSearchProvider";
    if ((v27 & 1) == 0) {
      uint64_t v16 = "LibrarySearchProvider";
    }
    int v27 = v16;
    swift_retain();
    sub_3D5500();
    swift_release();
    uint64_t v18 = v28;
    uint64_t v17 = v29;
    if ((*(unsigned int (**)(unsigned char *, const char *))(v28 + 88))(v3, v29) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v19 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(unsigned char *, const char *))(v18 + 8))(v3, v17);
      uint64_t v19 = "";
    }
    uint64_t v29 = v19;
    unint64_t v21 = v30;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 16))(v30, v9, v4);
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    os_signpost_id_t v23 = sub_3D53E0();
    _os_signpost_emit_with_name_impl(&dword_0, v15, (os_signpost_type_t)v26, v23, v27, v29, v22, 2u);
    swift_slowDealloc();

    uint64_t v24 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
    v24(v9, v4);
    (*(void (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
    return ((uint64_t (*)(unsigned char *, uint64_t))v24)(v21, v4);
  }
  else
  {

    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v9, v4);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_373450(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0CC0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t FollowShowAction.adamID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for FollowShowAction() + 20));
}

uint64_t type metadata accessor for FollowShowAction()
{
  uint64_t result = qword_4C0050;
  if (!qword_4C0050) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t FollowShowAction.location.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FollowShowAction() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FollowShowAction.contentRating.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FollowShowAction() + 28));
}

uint64_t FollowShowAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FollowShowAction() + 32);
  uint64_t v4 = sub_3D6F40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t FollowShowAction.notice.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FollowShowAction() + 36);

  return sub_1701C8(v3, a1);
}

uint64_t FollowShowAction.notice.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for FollowShowAction() + 36);

  return sub_170270(a1, v3);
}

void (__swiftcall *FollowShowAction.notice.modify())()
{
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t FollowShowAction.intent.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v1 - 8);
  sub_30674(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for FollowShowAction();
  swift_bridgeObjectRetain();
  return sub_3D28A0();
}

uint64_t FollowShowAction.init(feedURL:adamID:location:contentRating:notice:actionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  char v16 = a6 & 1;
  sub_EA1B0(a1, a9);
  uint64_t v17 = (int *)type metadata accessor for FollowShowAction();
  uint64_t v18 = a9 + v17[5];
  *(void *)uint64_t v18 = a2;
  *(unsigned char *)(v18 + 8) = a3 & 1;
  uint64_t v19 = (void *)(a9 + v17[6]);
  *uint64_t v19 = a4;
  v19[1] = a5;
  *(unsigned char *)(a9 + v17[7]) = v16;
  uint64_t v20 = a9 + v17[8];
  uint64_t v21 = sub_3D6F40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(v20, a8, v21);
  uint64_t v22 = a9 + v17[9];

  return sub_170428(a7, v22);
}

uint64_t sub_3738B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = sub_3D6F40();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_373928()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_373944()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v1 - 8);
  sub_30674(v0, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  return sub_3D28A0();
}

uint64_t *initializeBufferWithCopyOfBuffer for FollowShowAction(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_3D2350();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = a3[5];
    uint64_t v12 = a3[6];
    uint64_t v13 = (char *)a1 + v11;
    uint64_t v14 = (char *)a2 + v11;
    *(void *)uint64_t v13 = *(void *)v14;
    v13[8] = v14[8];
    uint64_t v15 = (uint64_t *)((char *)a1 + v12);
    char v16 = (uint64_t *)((char *)a2 + v12);
    uint64_t v17 = v16[1];
    void *v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = a3[8];
    *((unsigned char *)a1 + a3[7]) = *((unsigned char *)a2 + a3[7]);
    uint64_t v19 = (char *)a1 + v18;
    uint64_t v20 = (char *)a2 + v18;
    uint64_t v21 = sub_3D6F40();
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 16);
    swift_bridgeObjectRetain();
    v22(v19, v20, v21);
    uint64_t v23 = a3[9];
    uint64_t v24 = (uint64_t *)((char *)a1 + v23);
    uint64_t v25 = (char *)a2 + v23;
    uint64_t v26 = *(uint64_t *)((char *)a2 + v23 + 8);
    *uint64_t v24 = *(uint64_t *)((char *)a2 + v23);
    v24[1] = v26;
    uint64_t v27 = *(uint64_t *)((char *)a2 + v23 + 24);
    v24[2] = *(uint64_t *)((char *)a2 + v23 + 16);
    v24[3] = v27;
    uint64_t v28 = type metadata accessor for NoticeModel();
    uint64_t v29 = *(int *)(v28 + 24);
    uint64_t v30 = (char *)v24 + v29;
    uint64_t v31 = &v25[v29];
    uint64_t v32 = *(void *)&v25[v29 + 8];
    *(void *)uint64_t v30 = *(void *)&v25[v29];
    *((void *)v30 + 1) = v32;
    int v33 = v25[v29 + 32];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v33 == 255)
    {
      *((_OWORD *)v30 + 1) = *((_OWORD *)v31 + 1);
      v30[32] = v31[32];
    }
    else
    {
      uint64_t v34 = *((void *)v31 + 2);
      uint64_t v35 = *((void *)v31 + 3);
      sub_4C484(v34, v35, v33);
      *((void *)v30 + 2) = v34;
      *((void *)v30 + 3) = v35;
      v30[32] = v33;
    }
    *(_OWORD *)(v30 + 40) = *(_OWORD *)(v31 + 40);
    uint64_t v36 = (id *)(v31 + 56);
    int v37 = v31[64];
    if (v37 == 255)
    {
      *((void *)v30 + 7) = *v36;
      v30[64] = v31[64];
    }
    else
    {
      id v38 = *v36;
      sub_4C49C(*v36, v31[64]);
      *((void *)v30 + 7) = v38;
      v30[64] = v37;
    }
    uint64_t v39 = (id *)(v31 + 72);
    int v40 = v31[80];
    if (v40 == 255)
    {
      *((void *)v30 + 9) = *v39;
      v30[80] = v31[80];
    }
    else
    {
      id v41 = *v39;
      sub_4C49C(*v39, v31[80]);
      *((void *)v30 + 9) = v41;
      v30[80] = v40;
    }
    long long v42 = (id *)(v31 + 88);
    int v43 = v31[96];
    if (v43 == 255)
    {
      *((void *)v30 + 11) = *v42;
      v30[96] = v31[96];
    }
    else
    {
      id v44 = *v42;
      sub_4C49C(*v42, v31[96]);
      *((void *)v30 + 11) = v44;
      v30[96] = v43;
    }
    uint64_t v45 = (id *)(v31 + 104);
    int v46 = v31[112];
    if (v46 == 255)
    {
      *((void *)v30 + 13) = *v45;
      v30[112] = v31[112];
    }
    else
    {
      id v47 = *v45;
      sub_4C49C(*v45, v31[112]);
      *((void *)v30 + 13) = v47;
      v30[112] = v46;
    }
    uint64_t v48 = (id *)(v31 + 120);
    int v49 = v31[128];
    if (v49 == 255)
    {
      *((void *)v30 + 15) = *v48;
      v30[128] = v31[128];
    }
    else
    {
      id v50 = *v48;
      sub_4C49C(*v48, v31[128]);
      *((void *)v30 + 15) = v50;
      v30[128] = v49;
    }
    v30[129] = v31[129];
    uint64_t v51 = (int *)sub_3D3860();
    uint64_t v52 = v51[11];
    uint64_t v53 = &v30[v52];
    uint64_t v54 = &v31[v52];
    uint64_t v55 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v55 - 8) + 16))(v53, v54, v55);
    uint64_t v56 = v51[12];
    uint64_t v57 = &v30[v56];
    uint64_t v58 = &v31[v56];
    uint64_t v59 = *((void *)v58 + 1);
    *(void *)uint64_t v57 = *(void *)v58;
    *((void *)v57 + 1) = v59;
    v30[v51[13]] = v31[v51[13]];
    v30[v51[14]] = v31[v51[14]];
    v30[v51[15]] = v31[v51[15]];
    uint64_t v60 = v51[16];
    uint64_t v61 = &v30[v60];
    uint64_t v62 = &v31[v60];
    uint64_t v63 = *((void *)v62 + 1);
    *(void *)uint64_t v61 = *(void *)v62;
    *((void *)v61 + 1) = v63;
    *(void *)((char *)v24 + *(int *)(v28 + 28)) = *(void *)&v25[*(int *)(v28 + 28)];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for FollowShowAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3D2350();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 32);
  uint64_t v7 = sub_3D6F40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  uint64_t v8 = a1 + *(int *)(a2 + 36);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v9 = v8 + *(int *)(type metadata accessor for NoticeModel() + 24);
  swift_bridgeObjectRelease();
  int v10 = *(unsigned __int8 *)(v9 + 32);
  if (v10 != 255) {
    sub_49E54(*(void *)(v9 + 16), *(void *)(v9 + 24), v10);
  }
  int v11 = *(unsigned __int8 *)(v9 + 64);
  if (v11 != 255) {
    sub_4C6F0(*(id *)(v9 + 56), v11);
  }
  int v12 = *(unsigned __int8 *)(v9 + 80);
  if (v12 != 255) {
    sub_4C6F0(*(id *)(v9 + 72), v12);
  }
  int v13 = *(unsigned __int8 *)(v9 + 96);
  if (v13 != 255) {
    sub_4C6F0(*(id *)(v9 + 88), v13);
  }
  int v14 = *(unsigned __int8 *)(v9 + 112);
  if (v14 != 255) {
    sub_4C6F0(*(id *)(v9 + 104), v14);
  }
  int v15 = *(unsigned __int8 *)(v9 + 128);
  if (v15 != 255) {
    sub_4C6F0(*(id *)(v9 + 120), v15);
  }
  uint64_t v16 = v9 + *(int *)(sub_3D3860() + 44);
  uint64_t v17 = sub_3D3750();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for FollowShowAction(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_3D2350();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  int v11 = &a1[v9];
  int v12 = &a2[v9];
  *(void *)int v11 = *(void *)v12;
  v11[8] = v12[8];
  int v13 = &a1[v10];
  int v14 = &a2[v10];
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)int v13 = *(void *)v14;
  *((void *)v13 + 1) = v15;
  uint64_t v16 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  uint64_t v19 = sub_3D6F40();
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
  swift_bridgeObjectRetain();
  v20(v17, v18, v19);
  uint64_t v21 = a3[9];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  uint64_t v24 = *(void *)&a2[v21 + 8];
  *(void *)uint64_t v22 = *(void *)&a2[v21];
  *((void *)v22 + 1) = v24;
  uint64_t v25 = *(void *)&a2[v21 + 24];
  *((void *)v22 + 2) = *(void *)&a2[v21 + 16];
  *((void *)v22 + 3) = v25;
  uint64_t v26 = type metadata accessor for NoticeModel();
  uint64_t v27 = *(int *)(v26 + 24);
  uint64_t v28 = &v22[v27];
  uint64_t v29 = &v23[v27];
  uint64_t v30 = *(void *)&v23[v27 + 8];
  *(void *)uint64_t v28 = *(void *)&v23[v27];
  *((void *)v28 + 1) = v30;
  int v31 = v23[v27 + 32];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v31 == 255)
  {
    *((_OWORD *)v28 + 1) = *((_OWORD *)v29 + 1);
    v28[32] = v29[32];
  }
  else
  {
    uint64_t v32 = *((void *)v29 + 2);
    uint64_t v33 = *((void *)v29 + 3);
    sub_4C484(v32, v33, v31);
    *((void *)v28 + 2) = v32;
    *((void *)v28 + 3) = v33;
    v28[32] = v31;
  }
  *(_OWORD *)(v28 + 40) = *(_OWORD *)(v29 + 40);
  uint64_t v34 = (id *)(v29 + 56);
  int v35 = v29[64];
  if (v35 == 255)
  {
    *((void *)v28 + 7) = *v34;
    v28[64] = v29[64];
  }
  else
  {
    id v36 = *v34;
    sub_4C49C(*v34, v29[64]);
    *((void *)v28 + 7) = v36;
    v28[64] = v35;
  }
  int v37 = (id *)(v29 + 72);
  int v38 = v29[80];
  if (v38 == 255)
  {
    *((void *)v28 + 9) = *v37;
    v28[80] = v29[80];
  }
  else
  {
    id v39 = *v37;
    sub_4C49C(*v37, v29[80]);
    *((void *)v28 + 9) = v39;
    v28[80] = v38;
  }
  int v40 = (id *)(v29 + 88);
  int v41 = v29[96];
  if (v41 == 255)
  {
    *((void *)v28 + 11) = *v40;
    v28[96] = v29[96];
  }
  else
  {
    id v42 = *v40;
    sub_4C49C(*v40, v29[96]);
    *((void *)v28 + 11) = v42;
    v28[96] = v41;
  }
  int v43 = (id *)(v29 + 104);
  int v44 = v29[112];
  if (v44 == 255)
  {
    *((void *)v28 + 13) = *v43;
    v28[112] = v29[112];
  }
  else
  {
    id v45 = *v43;
    sub_4C49C(*v43, v29[112]);
    *((void *)v28 + 13) = v45;
    v28[112] = v44;
  }
  int v46 = (id *)(v29 + 120);
  int v47 = v29[128];
  if (v47 == 255)
  {
    *((void *)v28 + 15) = *v46;
    v28[128] = v29[128];
  }
  else
  {
    id v48 = *v46;
    sub_4C49C(*v46, v29[128]);
    *((void *)v28 + 15) = v48;
    v28[128] = v47;
  }
  v28[129] = v29[129];
  int v49 = (int *)sub_3D3860();
  uint64_t v50 = v49[11];
  uint64_t v51 = &v28[v50];
  uint64_t v52 = &v29[v50];
  uint64_t v53 = sub_3D3750();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v53 - 8) + 16))(v51, v52, v53);
  uint64_t v54 = v49[12];
  uint64_t v55 = &v28[v54];
  uint64_t v56 = &v29[v54];
  uint64_t v57 = *((void *)v56 + 1);
  *(void *)uint64_t v55 = *(void *)v56;
  *((void *)v55 + 1) = v57;
  v28[v49[13]] = v29[v49[13]];
  v28[v49[14]] = v29[v49[14]];
  v28[v49[15]] = v29[v49[15]];
  uint64_t v58 = v49[16];
  uint64_t v59 = &v28[v58];
  uint64_t v60 = &v29[v58];
  uint64_t v61 = *((void *)v60 + 1);
  *(void *)uint64_t v59 = *(void *)v60;
  *((void *)v59 + 1) = v61;
  *(void *)&v22[*(int *)(v26 + 28)] = *(void *)&v23[*(int *)(v26 + 28)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for FollowShowAction(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_3D2350();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  int v13 = &a1[v12];
  int v14 = &a2[v12];
  uint64_t v15 = *(void *)v14;
  v13[8] = v14[8];
  *(void *)int v13 = v15;
  uint64_t v16 = a3[6];
  uint64_t v17 = &a1[v16];
  uint64_t v18 = &a2[v16];
  *(void *)uint64_t v17 = *(void *)v18;
  *((void *)v17 + 1) = *((void *)v18 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[7]] = a2[a3[7]];
  uint64_t v19 = a3[8];
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  uint64_t v22 = sub_3D6F40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = &a1[v23];
  uint64_t v25 = &a2[v23];
  *(void *)uint64_t v24 = *(void *)&a2[v23];
  *((void *)v24 + 1) = *(void *)&a2[v23 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v24 + 2) = *((void *)v25 + 2);
  *((void *)v24 + 3) = *((void *)v25 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v26 = type metadata accessor for NoticeModel();
  uint64_t v27 = *(int *)(v26 + 24);
  uint64_t v28 = &v24[v27];
  uint64_t v29 = &v25[v27];
  *(void *)uint64_t v28 = *(void *)&v25[v27];
  *((void *)v28 + 1) = *(void *)&v25[v27 + 8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v30 = (long long *)(v28 + 16);
  int v31 = (long long *)(v29 + 16);
  int v32 = v29[32];
  if (v28[32] == 255)
  {
    if (v32 == 255)
    {
      long long v41 = *v31;
      v28[32] = v29[32];
      *uint64_t v30 = v41;
    }
    else
    {
      uint64_t v38 = *((void *)v29 + 2);
      uint64_t v39 = *((void *)v29 + 3);
      sub_4C484(v38, v39, v29[32]);
      *((void *)v28 + 2) = v38;
      *((void *)v28 + 3) = v39;
      v28[32] = v32;
    }
  }
  else if (v32 == 255)
  {
    sub_4D7B0((uint64_t)(v28 + 16));
    char v40 = v29[32];
    *uint64_t v30 = *v31;
    v28[32] = v40;
  }
  else
  {
    uint64_t v33 = *((void *)v29 + 2);
    uint64_t v34 = *((void *)v29 + 3);
    sub_4C484(v33, v34, v29[32]);
    uint64_t v35 = *((void *)v28 + 2);
    uint64_t v36 = *((void *)v28 + 3);
    *((void *)v28 + 2) = v33;
    *((void *)v28 + 3) = v34;
    unsigned __int8 v37 = v28[32];
    v28[32] = v32;
    sub_49E54(v35, v36, v37);
  }
  *((void *)v28 + 5) = *((void *)v29 + 5);
  *((void *)v28 + 6) = *((void *)v29 + 6);
  id v42 = (id *)(v28 + 56);
  int v43 = (id *)(v29 + 56);
  int v44 = v29[64];
  if (v28[64] == 255)
  {
    if (v44 == 255)
    {
      id v50 = *v43;
      v28[64] = v29[64];
      id *v42 = v50;
    }
    else
    {
      id v48 = *v43;
      sub_4C49C(*v43, v29[64]);
      *((void *)v28 + 7) = v48;
      v28[64] = v44;
    }
  }
  else if (v44 == 255)
  {
    sub_4D804((uint64_t)(v28 + 56));
    char v49 = v29[64];
    id *v42 = *v43;
    v28[64] = v49;
  }
  else
  {
    id v45 = *v43;
    sub_4C49C(*v43, v29[64]);
    int v46 = (void *)*((void *)v28 + 7);
    *((void *)v28 + 7) = v45;
    char v47 = v28[64];
    v28[64] = v44;
    sub_4C6F0(v46, v47);
  }
  uint64_t v51 = (id *)(v28 + 72);
  uint64_t v52 = (id *)(v29 + 72);
  int v53 = v29[80];
  if (v28[80] == 255)
  {
    if (v53 == 255)
    {
      id v59 = *v52;
      v28[80] = v29[80];
      id *v51 = v59;
    }
    else
    {
      id v57 = *v52;
      sub_4C49C(*v52, v29[80]);
      *((void *)v28 + 9) = v57;
      v28[80] = v53;
    }
  }
  else if (v53 == 255)
  {
    sub_4D804((uint64_t)(v28 + 72));
    char v58 = v29[80];
    id *v51 = *v52;
    v28[80] = v58;
  }
  else
  {
    id v54 = *v52;
    sub_4C49C(*v52, v29[80]);
    uint64_t v55 = (void *)*((void *)v28 + 9);
    *((void *)v28 + 9) = v54;
    char v56 = v28[80];
    v28[80] = v53;
    sub_4C6F0(v55, v56);
  }
  uint64_t v60 = (id *)(v28 + 88);
  uint64_t v61 = (id *)(v29 + 88);
  int v62 = v29[96];
  if (v28[96] == 255)
  {
    if (v62 == 255)
    {
      id v68 = *v61;
      v28[96] = v29[96];
      *uint64_t v60 = v68;
    }
    else
    {
      id v66 = *v61;
      sub_4C49C(*v61, v29[96]);
      *((void *)v28 + 11) = v66;
      v28[96] = v62;
    }
  }
  else if (v62 == 255)
  {
    sub_4D804((uint64_t)(v28 + 88));
    char v67 = v29[96];
    *uint64_t v60 = *v61;
    v28[96] = v67;
  }
  else
  {
    id v63 = *v61;
    sub_4C49C(*v61, v29[96]);
    char v64 = (void *)*((void *)v28 + 11);
    *((void *)v28 + 11) = v63;
    char v65 = v28[96];
    v28[96] = v62;
    sub_4C6F0(v64, v65);
  }
  uint64_t v69 = (id *)(v28 + 104);
  Swift::String v70 = (id *)(v29 + 104);
  int v71 = v29[112];
  if (v28[112] == 255)
  {
    if (v71 == 255)
    {
      id v77 = *v70;
      v28[112] = v29[112];
      *uint64_t v69 = v77;
    }
    else
    {
      id v75 = *v70;
      sub_4C49C(*v70, v29[112]);
      *((void *)v28 + 13) = v75;
      v28[112] = v71;
    }
  }
  else if (v71 == 255)
  {
    sub_4D804((uint64_t)(v28 + 104));
    char v76 = v29[112];
    *uint64_t v69 = *v70;
    v28[112] = v76;
  }
  else
  {
    id v72 = *v70;
    sub_4C49C(*v70, v29[112]);
    uint64_t v73 = (void *)*((void *)v28 + 13);
    *((void *)v28 + 13) = v72;
    char v74 = v28[112];
    v28[112] = v71;
    sub_4C6F0(v73, v74);
  }
  uint64_t v78 = (id *)(v28 + 120);
  uint64_t v79 = (id *)(v29 + 120);
  int v80 = v29[128];
  if (v28[128] == 255)
  {
    if (v80 == 255)
    {
      id v86 = *v79;
      v28[128] = v29[128];
      *uint64_t v78 = v86;
    }
    else
    {
      id v84 = *v79;
      sub_4C49C(*v79, v29[128]);
      *((void *)v28 + 15) = v84;
      v28[128] = v80;
    }
  }
  else if (v80 == 255)
  {
    sub_4D804((uint64_t)(v28 + 120));
    char v85 = v29[128];
    *uint64_t v78 = *v79;
    v28[128] = v85;
  }
  else
  {
    id v81 = *v79;
    sub_4C49C(*v79, v29[128]);
    uint64_t v82 = (void *)*((void *)v28 + 15);
    *((void *)v28 + 15) = v81;
    char v83 = v28[128];
    v28[128] = v80;
    sub_4C6F0(v82, v83);
  }
  v28[129] = v29[129];
  uint64_t v87 = (int *)sub_3D3860();
  uint64_t v88 = v87[11];
  uint64_t v89 = &v28[v88];
  uint64_t v90 = &v29[v88];
  uint64_t v91 = sub_3D3750();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v91 - 8) + 24))(v89, v90, v91);
  uint64_t v92 = v87[12];
  id v93 = &v28[v92];
  uint64_t v94 = &v29[v92];
  *(void *)id v93 = *(void *)v94;
  *((void *)v93 + 1) = *((void *)v94 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v28[v87[13]] = v29[v87[13]];
  v28[v87[14]] = v29[v87[14]];
  v28[v87[15]] = v29[v87[15]];
  uint64_t v95 = v87[16];
  uint64_t v96 = &v28[v95];
  id v97 = &v29[v95];
  *(void *)uint64_t v96 = *(void *)v97;
  *((void *)v96 + 1) = *((void *)v97 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v24[*(int *)(v26 + 28)] = *(void *)&v25[*(int *)(v26 + 28)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for FollowShowAction(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_3D2350();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = a3[5];
  uint64_t v10 = a3[6];
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  *(void *)uint64_t v11 = *(void *)v12;
  v11[8] = v12[8];
  *(_OWORD *)&a1[v10] = *(_OWORD *)&a2[v10];
  uint64_t v13 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  int v14 = &a1[v13];
  uint64_t v15 = &a2[v13];
  uint64_t v16 = sub_3D6F40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
  uint64_t v17 = a3[9];
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  long long v20 = *(_OWORD *)&a2[v17 + 16];
  *(_OWORD *)uint64_t v18 = *(_OWORD *)&a2[v17];
  *((_OWORD *)v18 + 1) = v20;
  uint64_t v21 = type metadata accessor for NoticeModel();
  uint64_t v22 = *(int *)(v21 + 24);
  uint64_t v23 = &v18[v22];
  uint64_t v24 = &v19[v22];
  long long v25 = *(_OWORD *)&v19[v22 + 16];
  *(_OWORD *)uint64_t v23 = *(_OWORD *)&v19[v22];
  *((_OWORD *)v23 + 1) = v25;
  v23[32] = v19[v22 + 32];
  *(_OWORD *)(v23 + 40) = *(_OWORD *)&v19[v22 + 40];
  *((void *)v23 + 7) = *(void *)&v19[v22 + 56];
  v23[64] = v19[v22 + 64];
  *(_OWORD *)(v23 + 113) = *(_OWORD *)&v19[v22 + 113];
  *(_OWORD *)(v23 + 104) = *(_OWORD *)&v19[v22 + 104];
  *(_OWORD *)(v23 + 88) = *(_OWORD *)&v19[v22 + 88];
  *(_OWORD *)(v23 + 72) = *(_OWORD *)&v19[v22 + 72];
  v23[129] = v19[v22 + 129];
  uint64_t v26 = (int *)sub_3D3860();
  uint64_t v27 = v26[11];
  uint64_t v28 = &v23[v27];
  uint64_t v29 = &v24[v27];
  uint64_t v30 = sub_3D3750();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v28, v29, v30);
  *(_OWORD *)&v23[v26[12]] = *(_OWORD *)&v24[v26[12]];
  v23[v26[13]] = v24[v26[13]];
  v23[v26[14]] = v24[v26[14]];
  v23[v26[15]] = v24[v26[15]];
  *(_OWORD *)&v23[v26[16]] = *(_OWORD *)&v24[v26[16]];
  *(void *)&v18[*(int *)(v21 + 28)] = *(void *)&v19[*(int *)(v21 + 28)];
  return a1;
}

char *assignWithTake for FollowShowAction(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_3D2350();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = a3[5];
  uint64_t v13 = a3[6];
  int v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  *(void *)int v14 = *(void *)v15;
  v14[8] = v15[8];
  uint64_t v16 = &a1[v13];
  uint64_t v17 = &a2[v13];
  uint64_t v19 = *(void *)v17;
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = v19;
  *((void *)v16 + 1) = v18;
  swift_bridgeObjectRelease();
  uint64_t v20 = a3[8];
  a1[a3[7]] = a2[a3[7]];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = sub_3D6F40();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 40))(v21, v22, v23);
  uint64_t v24 = a3[9];
  long long v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  uint64_t v27 = *(void *)&a2[v24 + 8];
  *(void *)long long v25 = *(void *)&a2[v24];
  *((void *)v25 + 1) = v27;
  swift_bridgeObjectRelease();
  uint64_t v28 = *((void *)v26 + 3);
  *((void *)v25 + 2) = *((void *)v26 + 2);
  *((void *)v25 + 3) = v28;
  swift_bridgeObjectRelease();
  uint64_t v29 = type metadata accessor for NoticeModel();
  uint64_t v30 = *(int *)(v29 + 24);
  int v31 = &v25[v30];
  int v32 = &v26[v30];
  uint64_t v33 = *(void *)&v26[v30 + 8];
  *(void *)int v31 = *(void *)&v26[v30];
  *((void *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  uint64_t v34 = v32 + 16;
  int v35 = v31[32];
  if (v35 != 255)
  {
    int v36 = v32[32];
    if (v36 != 255)
    {
      uint64_t v37 = *((void *)v31 + 2);
      uint64_t v38 = *((void *)v31 + 3);
      *((_OWORD *)v31 + 1) = *v34;
      v31[32] = v36;
      sub_49E54(v37, v38, v35);
      goto LABEL_12;
    }
    sub_4D7B0((uint64_t)(v31 + 16));
  }
  *((_OWORD *)v31 + 1) = *v34;
  v31[32] = v32[32];
LABEL_12:
  *(_OWORD *)(v31 + 40) = *(_OWORD *)(v32 + 40);
  uint64_t v39 = v32 + 56;
  int v40 = v31[64];
  if (v40 != 255)
  {
    int v41 = v32[64];
    if (v41 != 255)
    {
      id v42 = (void *)*((void *)v31 + 7);
      *((void *)v31 + 7) = *v39;
      v31[64] = v41;
      sub_4C6F0(v42, v40);
      goto LABEL_17;
    }
    sub_4D804((uint64_t)(v31 + 56));
  }
  *((void *)v31 + 7) = *v39;
  v31[64] = v32[64];
LABEL_17:
  int v43 = v32 + 72;
  int v44 = v31[80];
  if (v44 != 255)
  {
    int v45 = v32[80];
    if (v45 != 255)
    {
      int v46 = (void *)*((void *)v31 + 9);
      *((void *)v31 + 9) = *v43;
      v31[80] = v45;
      sub_4C6F0(v46, v44);
      goto LABEL_22;
    }
    sub_4D804((uint64_t)(v31 + 72));
  }
  *((void *)v31 + 9) = *v43;
  v31[80] = v32[80];
LABEL_22:
  char v47 = v32 + 88;
  int v48 = v31[96];
  if (v48 != 255)
  {
    int v49 = v32[96];
    if (v49 != 255)
    {
      id v50 = (void *)*((void *)v31 + 11);
      *((void *)v31 + 11) = *v47;
      v31[96] = v49;
      sub_4C6F0(v50, v48);
      goto LABEL_27;
    }
    sub_4D804((uint64_t)(v31 + 88));
  }
  *((void *)v31 + 11) = *v47;
  v31[96] = v32[96];
LABEL_27:
  uint64_t v51 = v32 + 104;
  int v52 = v31[112];
  if (v52 != 255)
  {
    int v53 = v32[112];
    if (v53 != 255)
    {
      id v54 = (void *)*((void *)v31 + 13);
      *((void *)v31 + 13) = *v51;
      v31[112] = v53;
      sub_4C6F0(v54, v52);
      goto LABEL_32;
    }
    sub_4D804((uint64_t)(v31 + 104));
  }
  *((void *)v31 + 13) = *v51;
  v31[112] = v32[112];
LABEL_32:
  uint64_t v55 = v32 + 120;
  int v56 = v31[128];
  if (v56 == 255)
  {
LABEL_36:
    *((void *)v31 + 15) = *v55;
    v31[128] = v32[128];
    goto LABEL_37;
  }
  int v57 = v32[128];
  if (v57 == 255)
  {
    sub_4D804((uint64_t)(v31 + 120));
    goto LABEL_36;
  }
  char v58 = (void *)*((void *)v31 + 15);
  *((void *)v31 + 15) = *v55;
  v31[128] = v57;
  sub_4C6F0(v58, v56);
LABEL_37:
  v31[129] = v32[129];
  id v59 = (int *)sub_3D3860();
  uint64_t v60 = v59[11];
  uint64_t v61 = &v31[v60];
  int v62 = &v32[v60];
  uint64_t v63 = sub_3D3750();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v63 - 8) + 40))(v61, v62, v63);
  uint64_t v64 = v59[12];
  char v65 = &v31[v64];
  id v66 = &v32[v64];
  uint64_t v68 = *(void *)v66;
  uint64_t v67 = *((void *)v66 + 1);
  *(void *)char v65 = v68;
  *((void *)v65 + 1) = v67;
  swift_bridgeObjectRelease();
  v31[v59[13]] = v32[v59[13]];
  v31[v59[14]] = v32[v59[14]];
  v31[v59[15]] = v32[v59[15]];
  uint64_t v69 = v59[16];
  Swift::String v70 = &v31[v69];
  int v71 = &v32[v69];
  uint64_t v73 = *(void *)v71;
  uint64_t v72 = *((void *)v71 + 1);
  *(void *)Swift::String v70 = v73;
  *((void *)v70 + 1) = v72;
  swift_bridgeObjectRelease();
  *(void *)&v25[*(int *)(v29 + 28)] = *(void *)&v26[*(int *)(v29 + 28)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FollowShowAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_375488);
}

uint64_t sub_375488(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_11:
    return v9(v10, a2, v8);
  }
  if (a2 == 2147483646)
  {
    unint64_t v11 = *(void *)(a1 + a3[6] + 8);
    if (v11 >= 0xFFFFFFFF) {
      LODWORD(v11) = -1;
    }
    int v12 = v11 - 1;
    if (v12 < 0) {
      int v12 = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v14 = sub_3D6F40();
    uint64_t v15 = *(void *)(v14 - 8);
    if (*(_DWORD *)(v15 + 84) == a2)
    {
      uint64_t v8 = v14;
      uint64_t v10 = a1 + a3[8];
      int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
      goto LABEL_11;
    }
    uint64_t v16 = type metadata accessor for NoticeModel();
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
    uint64_t v18 = v16;
    uint64_t v19 = a1 + a3[9];
    return v17(v19, a2, v18);
  }
}

uint64_t storeEnumTagSinglePayload for FollowShowAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_375630);
}

uint64_t sub_375630(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
LABEL_7:
    return v11(v12, a2, a2, v10);
  }
  if (a3 == 2147483646)
  {
    *(void *)(a1 + a4[6] + 8) = a2;
    return result;
  }
  uint64_t v13 = sub_3D6F40();
  uint64_t v14 = *(void *)(v13 - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    uint64_t v10 = v13;
    uint64_t v12 = a1 + a4[8];
    unint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    goto LABEL_7;
  }
  uint64_t v15 = type metadata accessor for NoticeModel();
  uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56);
  uint64_t v17 = v15;
  uint64_t v18 = a1 + a4[9];

  return v16(v18, a2, a2, v17);
}

void sub_3757B8()
{
  sub_3140C();
  if (v0 <= 0x3F)
  {
    sub_3D6F40();
    if (v1 <= 0x3F)
    {
      type metadata accessor for NoticeModel();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t OAuthSession.__allocating_init(authorizationURL:oAuthAdamId:hudViewHandler:endpointSubscriber:window:workQueue:uiQueue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, void *a8)
{
  swift_allocObject();
  uint64_t v16 = sub_37C9FC(a1, a2, a3, a4, a5, a6, a7, a8);

  return v16;
}

uint64_t OAuthSession.init(authorizationURL:oAuthAdamId:hudViewHandler:endpointSubscriber:window:workQueue:uiQueue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, void *a8)
{
  uint64_t v11 = sub_37C9FC(a1, a2, a3, a4, a5, a6, a7, a8);

  return v11;
}

uint64_t sub_3759CC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v25 = a1;
  uint64_t v3 = sub_3D5640();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v29 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_3D6950();
  uint64_t v28 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_3D69A0();
  uint64_t v26 = *(void *)(v9 - 8);
  uint64_t v27 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_3D2350();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  if (*(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_webAuthenticationSession))
  {
    uint64_t v29 = *(char **)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_uiQueue);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v25, v12);
    unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v2;
    (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v16 + v15, (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
    aBlock[4] = (uint64_t)sub_37CCEC;
    aBlock[5] = v16;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_36F78;
    void aBlock[3] = (uint64_t)&block_descriptor_32;
    uint64_t v17 = _Block_copy(aBlock);
    swift_retain();
    sub_3D6970();
    uint64_t v31 = (uint64_t)_swiftEmptyArrayStorage;
    sub_37D474((unint64_t *)&qword_4AD860, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1C90);
    sub_3D6E4((unint64_t *)&qword_4AD870, (uint64_t *)&unk_4B1C90);
    sub_3D8A70();
    sub_3D8580();
    _Block_release(v17);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v11, v27);
    return swift_release();
  }
  else
  {
    uint64_t v28 = v4;
    sub_3D5620();
    swift_retain();
    uint64_t v19 = sub_3D5630();
    os_log_type_t v20 = sub_3D8410();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = v3;
      uint64_t v22 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 141558275;
      uint64_t v31 = 1752392040;
      sub_3D8930();
      *(_WORD *)(v22 + 12) = 2081;
      uint64_t v23 = *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
      unint64_t v24 = *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId + 8);
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1FB7E8(v23, v24, aBlock);
      sub_3D8930();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v19, v20, "%{private,mask.hash}s: Resume OAuth called but there is no web authentication session to resume in OAuthSession", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v29, v21);
    }
    else
    {

      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v28 + 8))(v29, v3);
    }
  }
}

void sub_375F70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_webAuthenticationSession);
  if (v2)
  {
    id v4 = v2;
    sub_97680(a2);
  }
}

uint64_t sub_375FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v76 = a1;
  uint64_t v77 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C00B0);
  uint64_t v66 = *(void *)(v4 - 8);
  uint64_t v67 = v4;
  __chkstk_darwin(v4);
  uint64_t v65 = (uint64_t)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C00B8);
  uint64_t v69 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v68 = (char *)&v59 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C00C0);
  uint64_t v71 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  Swift::String v70 = (char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C00C8);
  uint64_t v73 = *(void *)(v10 - 8);
  uint64_t v74 = v10;
  __chkstk_darwin(v10);
  uint64_t v72 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C00D0);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v75 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_3D5640();
  uint64_t v63 = *(void *)(v15 - 8);
  uint64_t v64 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v59 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_3D69B0();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (uint64_t *)((char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v22 = *(void **)(v3 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_workQueue);
  void *v21 = v22;
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, enum case for DispatchPredicate.onQueue(_:), v18);
  id v23 = v22;
  LOBYTE(v22) = sub_3D69C0();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if (v22)
  {
    uint64_t v59 = v6;
    uint64_t v60 = v8;
    uint64_t v61 = v13;
    uint64_t v62 = v12;
    sub_3D5620();
    swift_retain();
    uint64_t v25 = sub_3D5630();
    os_log_type_t v26 = sub_3D8410();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 141558787;
      uint64_t v78 = 1752392040;
      v79[0] = v28;
      sub_3D8930();
      *(_WORD *)(v27 + 12) = 2081;
      uint64_t v30 = *(void *)(v3 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
      unint64_t v29 = *(void *)(v3 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId + 8);
      swift_bridgeObjectRetain();
      uint64_t v78 = sub_1FB7E8(v30, v29, v79);
      sub_3D8930();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2160;
      uint64_t v78 = 1752392040;
      sub_3D8930();
      *(_WORD *)(v27 + 32) = 2081;
      uint64_t v31 = *(void *)(v3 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_oAuthAdamId);
      unint64_t v32 = *(void *)(v3 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_oAuthAdamId + 8);
      swift_bridgeObjectRetain();
      uint64_t v78 = sub_1FB7E8(v31, v32, v79);
      sub_3D8930();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v25, v26, "%{private,mask.hash}s: Starting OAuth flow for oauth adamId: %{private,mask.hash}s", (uint8_t *)v27, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v63 + 8))(v17, v64);
    uint64_t v33 = v65;
    sub_37845C(v65);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = sub_37CD68;
    *(void *)(v34 + 24) = v3;
    sub_3D6E4(&qword_4C00E0, &qword_4C00B0);
    swift_retain();
    uint64_t v35 = v67;
    int v36 = v68;
    sub_3D5BD0();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v33, v35);
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_37CDEC;
    *(void *)(v37 + 24) = v3;
    swift_retain();
    sub_3D57C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_4C00E8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4C00F0);
    sub_3D6E4(&qword_4C00F8, &qword_4C00B8);
    sub_3D6E4(&qword_4C0100, &qword_4C00F0);
    uint64_t v38 = v70;
    uint64_t v39 = v59;
    sub_3D5C00();
    swift_release();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v36, v39);
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = sub_37CE20;
    *(void *)(v40 + 24) = v3;
    sub_3D2350();
    sub_3D6E4(&qword_4C0108, &qword_4C00C0);
    swift_retain();
    int v41 = v72;
    uint64_t v42 = v60;
    sub_3D5BD0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v38, v42);
    uint64_t v44 = *(void *)(v3 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
    uint64_t v43 = *(void *)(v3 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId + 8);
    uint64_t v45 = swift_allocObject();
    *(void *)(v45 + 16) = v44;
    *(void *)(v45 + 24) = v43;
    swift_bridgeObjectRetain();
    sub_3D57C0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_4C0110);
    sub_3D6E4(&qword_4C0118, &qword_4C00C8);
    sub_3D6E4(&qword_4C0120, &qword_4C0110);
    uint64_t v46 = v74;
    char v47 = v75;
    sub_3D5C00();
    swift_release();
    (*(void (**)(char *, uint64_t))(v73 + 8))(v41, v46);
    uint64_t v48 = swift_allocObject();
    swift_weakInit();
    int v49 = *(void **)(v3 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_uiQueue);
    id v50 = (void *)swift_allocObject();
    uint64_t v51 = v76;
    uint64_t v52 = v77;
    v50[2] = v76;
    v50[3] = v52;
    v50[4] = v49;
    v50[5] = v48;
    uint64_t v53 = swift_allocObject();
    swift_weakInit();
    id v54 = (void *)swift_allocObject();
    v54[2] = v49;
    v54[3] = v53;
    v54[4] = v51;
    void v54[5] = v52;
    sub_3D6E4(&qword_4C0128, &qword_4C00D0);
    id v55 = v49;
    swift_retain_n();
    id v56 = v55;
    uint64_t v57 = v62;
    uint64_t v58 = sub_3D5B60();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v47, v57);
    *(void *)(v3 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_oauthSession) = v58;
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_376AE8(uint64_t *a1, void (*a2)(void, void), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v42 = a5;
  uint64_t v45 = a2;
  uint64_t v8 = sub_3D6950();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_3D69A0();
  uint64_t v43 = *(void *)(v12 - 8);
  uint64_t v44 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_3D5640();
  uint64_t v41 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C02E8);
  uint64_t result = __chkstk_darwin(v18 - 8);
  uint64_t v21 = (char *)v38 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *a1;
  if (v22)
  {
    v38[1] = a4;
    uint64_t v39 = v9;
    uint64_t v40 = v8;
    aBlock[0] = v22;
    swift_errorRetain();
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_4ABD78);
    uint64_t v23 = sub_3D44B0();
    int v24 = swift_dynamicCast();
    uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56);
    if (!v24)
    {
      v25(v21, 1, 1, v23);
      sub_250FC((uint64_t)v21, &qword_4C02E8);
LABEL_9:
      uint64_t v33 = swift_allocObject();
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      uint64_t v34 = (void *)swift_allocObject();
      uint64_t v35 = v45;
      v34[2] = v33;
      v34[3] = v35;
      v34[4] = a3;
      v34[5] = v22;
      aBlock[4] = sub_37D468;
      aBlock[5] = v34;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_36F78;
      void aBlock[3] = &block_descriptor_71;
      int v36 = _Block_copy(aBlock);
      swift_errorRetain();
      swift_retain();
      swift_retain();
      sub_3D6970();
      uint64_t v46 = _swiftEmptyArrayStorage;
      sub_37D474((unint64_t *)&qword_4AD860, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1C90);
      sub_3D6E4((unint64_t *)&qword_4AD870, (uint64_t *)&unk_4B1C90);
      uint64_t v37 = v40;
      sub_3D8A70();
      sub_3D8580();
      _Block_release(v36);
      swift_errorRelease();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v11, v37);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v14, v44);
      swift_release();
      return swift_release();
    }
    uint64_t v26 = *(void *)(v23 - 8);
    v25(v21, 0, 1, v23);
    int v27 = (*(uint64_t (**)(char *, uint64_t))(v26 + 88))(v21, v23);
    v38[0] = a3;
    int v28 = enum case for OAuthSessionError.userCancelledLogin(_:);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v23);
    BOOL v29 = v27 == v28;
    a3 = v38[0];
    if (!v29) {
      goto LABEL_9;
    }
    sub_3D5620();
    uint64_t v30 = sub_3D5630();
    os_log_type_t v31 = sub_3D8410();
    if (os_log_type_enabled(v30, v31))
    {
      unint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v32 = 0;
      _os_log_impl(&dword_0, v30, v31, "User cancelled OAuth login.", v32, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v15);
    v45(0, 0);
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_3770D8(uint64_t a1, void (*a2)(void, uint64_t), uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_3D5640();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = (char *)&v31 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v31 - v14;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v32 = a4;
    uint64_t v33 = a2;
    uint64_t v17 = (void *)(Strong + OBJC_IVAR____TtC8ShelfKit12OAuthSession_hudViewHandler);
    __swift_project_boxed_opaque_existential_1((void *)(Strong + OBJC_IVAR____TtC8ShelfKit12OAuthSession_hudViewHandler), *(void *)(Strong + OBJC_IVAR____TtC8ShelfKit12OAuthSession_hudViewHandler + 24));
    if (sub_3D4F50())
    {
      sub_3D5620();
      uint64_t v18 = sub_3D5630();
      os_log_type_t v19 = sub_3D8410();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v20 = 0;
        _os_log_impl(&dword_0, v18, v19, "Dismissing the spinner and displaying an error alert.", v20, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
      __swift_project_boxed_opaque_existential_1(v17, v17[3]);
      sub_3D4F70();
      __swift_project_boxed_opaque_existential_1(v17, v17[3]);
      uint64_t v21 = (objc_class *)[self mainBundle];
      v30._countAndFlagsBits = 0xE000000000000000;
      v34._object = (void *)0x800000000040AB20;
      v34._countAndFlagsBits = 0xD000000000000013;
      v35.value._countAndFlagsBits = 0;
      v35.value._object = 0;
      v22.super.Class isa = v21;
      v36._countAndFlagsBits = 0;
      v36._object = (void *)0xE000000000000000;
      sub_3D2060(v34, v35, v22, v36, v30);

      sub_3D4F40();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_3D5620();
      int v27 = sub_3D5630();
      os_log_type_t v28 = sub_3D8410();
      if (os_log_type_enabled(v27, v28))
      {
        BOOL v29 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)BOOL v29 = 0;
        _os_log_impl(&dword_0, v27, v28, "Spinner is not active.", v29, 2u);
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    v33(0, v32);
    return swift_release();
  }
  else
  {
    sub_3D5620();
    uint64_t v23 = sub_3D5630();
    os_log_type_t v24 = sub_3D83F0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl(&dword_0, v23, v24, "Unable to unwrap self in OAuth promise completion!.", v25, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v7 + 8))(v15, v6);
    return ((uint64_t (*)(void, void))a2)(0, 0);
  }
}

uint64_t sub_3774F0(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v28 = a4;
  uint64_t v29 = a3;
  uint64_t v33 = a2;
  uint64_t v7 = sub_3D6950();
  uint64_t v32 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_3D69A0();
  uint64_t v30 = *(void *)(v10 - 8);
  uint64_t v31 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_3D5640();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v17 = *a1;
  sub_3D5620();
  uint64_t v18 = sub_3D5630();
  os_log_type_t v19 = sub_3D8410();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = v7;
    uint64_t v21 = a5;
    NSBundle v22 = v20;
    *(_DWORD *)uint64_t v20 = 67109120;
    LODWORD(aBlock[0]) = v17;
    sub_3D8930();
    _os_log_impl(&dword_0, v18, v19, "User is subscribed to content: %{BOOL}d", v22, 8u);
    a5 = v21;
    uint64_t v7 = v27;
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v28;
  *(void *)(v23 + 16) = v29;
  *(void *)(v23 + 24) = v24;
  *(void *)(v23 + 32) = a5;
  *(unsigned char *)(v23 + 40) = v17;
  aBlock[4] = sub_37D410;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_36F78;
  void aBlock[3] = &block_descriptor_64;
  uint64_t v25 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_3D6970();
  Swift::String v34 = _swiftEmptyArrayStorage;
  sub_37D474((unint64_t *)&qword_4AD860, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1C90);
  sub_3D6E4((unint64_t *)&qword_4AD870, (uint64_t *)&unk_4B1C90);
  sub_3D8A70();
  sub_3D8580();
  _Block_release(v25);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v7);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v31);
  return swift_release();
}

uint64_t sub_377908(uint64_t a1, void (*a2)(void, void), uint64_t a3, char a4)
{
  uint64_t v7 = sub_3D5640();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (void *)(Strong + OBJC_IVAR____TtC8ShelfKit12OAuthSession_hudViewHandler);
    __swift_project_boxed_opaque_existential_1((void *)(Strong + OBJC_IVAR____TtC8ShelfKit12OAuthSession_hudViewHandler), *(void *)(Strong + OBJC_IVAR____TtC8ShelfKit12OAuthSession_hudViewHandler + 24));
    sub_3D4F70();
    if ((a4 & 1) == 0)
    {
      uint64_t v17 = v12[3];
      v27[1] = v12[4];
      v27[0] = __swift_project_boxed_opaque_existential_1(v12, v17);
      uint64_t v18 = self;
      os_log_type_t v19 = (objc_class *)[v18 mainBundle];
      v27[2] = a3;
      uint64_t v20 = a2;
      uint64_t v21 = v19;
      v25._countAndFlagsBits = 0xE000000000000000;
      v28._object = (void *)0x800000000040AAD0;
      v28._countAndFlagsBits = 0xD00000000000001FLL;
      v30.value._countAndFlagsBits = 0;
      v30.value._object = 0;
      v22.super.Class isa = v21;
      v32._countAndFlagsBits = 0;
      v32._object = (void *)0xE000000000000000;
      sub_3D2060(v28, v30, v22, v32, v25);

      uint64_t v23 = (objc_class *)[v18 mainBundle];
      v29._countAndFlagsBits = 0xD000000000000025;
      v26._countAndFlagsBits = 0xE000000000000000;
      v29._object = (void *)0x800000000040AAF0;
      v31.value._countAndFlagsBits = 0;
      v31.value._object = 0;
      v24.super.Class isa = v23;
      v33._countAndFlagsBits = 0;
      v33._object = (void *)0xE000000000000000;
      sub_3D2060(v29, v31, v24, v33, v26);

      a2 = v20;
      sub_3D4F40();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    a2(a4 & 1, 0);
    return swift_release();
  }
  else
  {
    sub_3D5620();
    uint64_t v13 = sub_3D5630();
    os_log_type_t v14 = sub_3D83F0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl(&dword_0, v13, v14, "Unable to unwrap self in OAuth promise completion.", v15, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    return ((uint64_t (*)(void, void))a2)(a4 & 1, 0);
  }
}

uint64_t sub_377C30(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_3D6950();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_3D69A0();
  uint64_t v10 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[1] = *(void *)(v3 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_uiQueue);
  uint64_t v13 = swift_allocObject();
  swift_weakInit();
  os_log_type_t v14 = (void *)swift_allocObject();
  void v14[2] = v13;
  void v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_37CFCC;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_36F78;
  void aBlock[3] = &block_descriptor_29;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  sub_3D6970();
  os_log_type_t v19 = _swiftEmptyArrayStorage;
  sub_37D474((unint64_t *)&qword_4AD860, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1C90);
  sub_3D6E4((unint64_t *)&qword_4AD870, (uint64_t *)&unk_4B1C90);
  sub_3D8A70();
  sub_3D8580();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v18);
  swift_release();
  return swift_release();
}

uint64_t sub_377F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v41 = a2;
  uint64_t v42 = a3;
  uint64_t v3 = sub_3D6950();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_3D69A0();
  uint64_t v43 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_3D5640();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  os_log_type_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v36 - v15;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v18 = Strong;
    uint64_t v38 = v7;
    uint64_t v39 = v4;
    uint64_t v19 = OBJC_IVAR____TtC8ShelfKit12OAuthSession_webAuthenticationSession;
    uint64_t v20 = *(char **)(Strong + OBJC_IVAR____TtC8ShelfKit12OAuthSession_webAuthenticationSession);
    uint64_t v40 = v3;
    if (v20)
    {
      uint64_t v21 = *(void **)&v20[OBJC_IVAR____TtC8ShelfKit24WebAuthenticationSession_authenticationSession];
      NSBundle v22 = v20;
      [v21 cancel];
      sub_3D5620();
      uint64_t v23 = sub_3D5630();
      os_log_type_t v24 = sub_3D8410();
      if (os_log_type_enabled(v23, v24))
      {
        Swift::String v25 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = v22;
        *(_WORD *)Swift::String v25 = 0;
        _os_log_impl(&dword_0, v23, v24, "Canceled ASWebAuthenticationSession.", v25, 2u);
        NSBundle v22 = v37;
        swift_slowDealloc();
      }

      (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
      uint64_t v20 = *(char **)(v18 + v19);
    }
    uint64_t v26 = v42;
    uint64_t v27 = v43;
    uint64_t v28 = v41;
    *(void *)(v18 + v19) = 0;

    Swift::String v29 = (void *)swift_allocObject();
    v29[2] = v18;
    v29[3] = v28;
    v29[4] = v26;
    aBlock[4] = sub_37D358;
    aBlock[5] = v29;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_36F78;
    void aBlock[3] = &block_descriptor_58;
    Swift::String_optional v30 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    sub_3D6970();
    uint64_t v44 = _swiftEmptyArrayStorage;
    sub_37D474((unint64_t *)&qword_4AD860, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1C90);
    sub_3D6E4((unint64_t *)&qword_4AD870, (uint64_t *)&unk_4B1C90);
    uint64_t v31 = v40;
    sub_3D8A70();
    sub_3D8580();
    _Block_release(v30);
    (*(void (**)(char *, uint64_t))(v39 + 8))(v6, v31);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v9, v38);
    swift_release();
    return swift_release();
  }
  else
  {
    sub_3D5620();
    Swift::String v33 = sub_3D5630();
    os_log_type_t v34 = sub_3D83F0();
    if (os_log_type_enabled(v33, v34))
    {
      Swift::String_optional v35 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String_optional v35 = 0;
      _os_log_impl(&dword_0, v33, v34, "Unable to unwrap self in cancelSession completion in OAuthSession.", v35, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
}

uint64_t sub_37845C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v89 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD460);
  __chkstk_darwin(v3 - 8);
  uint64_t v88 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C02F0);
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  uint64_t v76 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C02F8);
  uint64_t v80 = *(void *)(v6 - 8);
  uint64_t v81 = v6;
  __chkstk_darwin(v6);
  uint64_t v79 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0300);
  uint64_t v83 = *(void *)(v8 - 8);
  uint64_t v84 = v8;
  __chkstk_darwin(v8);
  uint64_t v82 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0308);
  uint64_t v86 = *(void *)(v10 - 8);
  uint64_t v87 = v10;
  __chkstk_darwin(v10);
  char v85 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_3D2350();
  uint64_t v12 = *(void *)(v94 - 8);
  uint64_t v13 = __chkstk_darwin(v94);
  uint64_t v74 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v92 = (char *)&v72 - v15;
  uint64_t v16 = sub_3D5640();
  uint64_t v17 = *(void **)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v90 = (char *)&v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v72 - v20;
  sub_3D5620();
  swift_retain();
  NSBundle v22 = sub_3D5630();
  os_log_type_t v23 = sub_3D8410();
  BOOL v24 = os_log_type_enabled(v22, v23);
  id v75 = (void (*)(void, void, void, void))v16;
  uint64_t v91 = v17;
  if (v24)
  {
    uint64_t v25 = swift_slowAlloc();
    uint64_t v26 = (void *)swift_slowAlloc();
    uint64_t v93 = v12;
    *(_DWORD *)uint64_t v25 = 141558275;
    uint64_t v95 = 1752392040;
    id v96 = v26;
    sub_3D8930();
    *(_WORD *)(v25 + 12) = 2081;
    uint64_t v27 = v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId;
    uint64_t v28 = v2;
    uint64_t v29 = *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
    unint64_t v30 = *(void *)(v27 + 8);
    swift_bridgeObjectRetain();
    uint64_t v31 = v29;
    uint64_t v2 = v28;
    uint64_t v95 = sub_1FB7E8(v31, v30, (uint64_t *)&v96);
    uint64_t v16 = (uint64_t)v75;
    sub_3D8930();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v22, v23, "%{private,mask.hash}s: Retrieving short lived token from provider.", (uint8_t *)v25, 0x16u);
    swift_arrayDestroy();
    uint64_t v12 = v93;
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v72 = (void (*)(char *, uint64_t))v91[1];
  }
  else
  {

    swift_release();
    uint64_t v72 = (void (*)(char *, uint64_t))v17[1];
  }
  v72(v21, v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4A9880);
  sub_3D1FA0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_3DED90;
  _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  sub_3D1F70();
  swift_bridgeObjectRelease();
  Swift::String v32 = v92;
  sub_3D2330();
  swift_bridgeObjectRelease();
  Swift::String v33 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
  os_log_type_t v34 = v74;
  Swift::String_optional v35 = v32;
  uint64_t v36 = v94;
  v33(v74, v35, v94);
  uint64_t v37 = *(void **)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_window);
  uint64_t v38 = (objc_class *)type metadata accessor for WebAuthenticationSession();
  uint64_t v39 = (char *)objc_allocWithZone(v38);
  *(void *)&v39[OBJC_IVAR____TtC8ShelfKit24WebAuthenticationSession_authenticationSession] = 0;
  uint64_t v40 = &v39[OBJC_IVAR____TtC8ShelfKit24WebAuthenticationSession_startCompletion];
  *(void *)uint64_t v40 = 0;
  *((void *)v40 + 1) = 0;
  uint64_t v41 = &v39[OBJC_IVAR____TtC8ShelfKit24WebAuthenticationSession_callbackURLScheme];
  *(void *)uint64_t v41 = 0x7374736163646F70;
  *((void *)v41 + 1) = 0xE800000000000000;
  v33(&v39[OBJC_IVAR____TtC8ShelfKit24WebAuthenticationSession_authorizationURL], v34, v36);
  *(void *)&v39[OBJC_IVAR____TtC8ShelfKit24WebAuthenticationSession_window] = v37;
  v97.receiver = v39;
  v97.super_class = v38;
  unint64_t v73 = (unint64_t)v38;
  id v42 = v37;
  id v43 = [super init];
  uint64_t v44 = *(char **)(v12 + 8);
  uint64_t v93 = v12 + 8;
  uint64_t v74 = v44;
  ((void (*)(char *, uint64_t))v44)(v34, v36);
  uint64_t v45 = *(void **)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_webAuthenticationSession);
  *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_webAuthenticationSession) = v43;
  id v46 = v43;

  char v47 = v90;
  sub_3D5620();
  swift_retain();
  uint64_t v48 = sub_3D5630();
  os_log_type_t v49 = sub_3D8410();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = swift_slowAlloc();
    uint64_t v51 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 141558275;
    uint64_t v95 = 1752392040;
    id v96 = v51;
    sub_3D8930();
    *(_WORD *)(v50 + 12) = 2081;
    uint64_t v52 = *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
    unint64_t v53 = *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId + 8);
    swift_bridgeObjectRetain();
    uint64_t v95 = sub_1FB7E8(v52, v53, (uint64_t *)&v96);
    sub_3D8930();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v48, v49, "%{private,mask.hash}s: Created Web Authentication Session.", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    id v54 = v90;
    id v55 = v75;
  }
  else
  {

    swift_release();
    id v54 = v47;
    id v55 = (void (*)(void, void, void, void))v16;
  }
  v72(v54, (uint64_t)v55);
  id v96 = v46;
  uint64_t v91 = v46;
  id v56 = v76;
  sub_3D5930();
  id v96 = *(id *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_uiQueue);
  id v57 = v96;
  uint64_t v58 = sub_3D8500();
  uint64_t v59 = *(void *)(v58 - 8);
  id v75 = *(void (**)(void, void, void, void))(v59 + 56);
  uint64_t v90 = (char *)(v59 + 56);
  uint64_t v60 = (uint64_t)v88;
  v75(v88, 1, 1, v58);
  unint64_t v73 = sub_8349C();
  sub_3D6E4(&qword_4C0310, &qword_4C02F0);
  uint64_t v72 = (void (*)(char *, uint64_t))sub_37D474((unint64_t *)&qword_4AD4E0, (void (*)(uint64_t))sub_8349C);
  id v61 = v57;
  uint64_t v62 = v78;
  uint64_t v63 = v79;
  sub_3D5C20();
  sub_250FC(v60, &qword_4AD460);

  (*(void (**)(char *, uint64_t))(v77 + 8))(v56, v62);
  sub_3D57C0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4C0318);
  sub_3D6E4(&qword_4C0320, &qword_4C02F8);
  sub_3D6E4(&qword_4C0328, &qword_4C0318);
  uint64_t v64 = v81;
  uint64_t v65 = v82;
  sub_3D5CD0();
  (*(void (**)(char *, uint64_t))(v80 + 8))(v63, v64);
  id v96 = *(id *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_workQueue);
  id v66 = v96;
  v75(v60, 1, 1, v58);
  sub_3D6E4(&qword_4C0330, &qword_4C0300);
  id v67 = v66;
  uint64_t v69 = v84;
  uint64_t v68 = v85;
  sub_3D5C20();
  sub_250FC(v60, &qword_4AD460);

  (*(void (**)(char *, uint64_t))(v83 + 8))(v65, v69);
  sub_3D6E4(&qword_4C0338, &qword_4C0308);
  swift_retain_n();
  uint64_t v70 = v87;
  sub_3D5AE0();

  swift_release_n();
  (*(void (**)(char *, uint64_t))(v86 + 8))(v68, v70);
  return ((uint64_t (*)(char *, uint64_t))v74)(v92, v94);
}

uint64_t sub_379160@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  *(void *)(swift_allocObject() + 16) = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4C0340);
  swift_allocObject();
  id v4 = v3;
  sub_3D5970();
  sub_3D6E4(&qword_4C0348, &qword_4C0340);
  uint64_t v5 = sub_3D5AC0();
  uint64_t result = swift_release();
  *a2 = v5;
  return result;
}

uint64_t sub_37924C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3D2350();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v24[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_3D5640();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v24[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_3D5620();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  swift_retain();
  uint64_t v12 = sub_3D5630();
  os_log_type_t v13 = sub_3D8410();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v29 = v8;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v28 = v17;
    *(_DWORD *)uint64_t v16 = 141558531;
    uint64_t v30 = 1752392040;
    uint64_t v31 = v17;
    os_log_t v26 = v12;
    sub_3D8930();
    *(_WORD *)(v16 + 12) = 2081;
    int v25 = v14;
    uint64_t v27 = v9;
    uint64_t v19 = *(void *)(a2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
    unint64_t v18 = *(void *)(a2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId + 8);
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1FB7E8(v19, v18, &v31);
    sub_3D8930();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 2080;
    uint64_t v20 = sub_3D2270();
    uint64_t v30 = sub_1FB7E8(v20, v21, &v31);
    sub_3D8930();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    os_log_t v22 = v26;
    _os_log_impl(&dword_0, v26, (os_log_type_t)v25, "%{private,mask.hash}s: Redirect URL acquired: %s", (uint8_t *)v16, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v27 + 8))(v11, v29);
  }
  else
  {
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);

    return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_3795B8(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_3D5640();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t result = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
  {
    swift_errorRetain();
    sub_3D5620();
    swift_errorRetain();
    swift_retain();
    uint64_t v9 = sub_3D5630();
    os_log_type_t v10 = sub_3D83F0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = swift_slowAlloc();
      os_log_t v19 = v9;
      uint64_t v12 = v11;
      unint64_t v18 = (void *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v20 = v13;
      *(_DWORD *)uint64_t v12 = 141558531;
      uint64_t v22 = 1752392040;
      uint64_t v23 = v13;
      sub_3D8930();
      *(_WORD *)(v12 + 12) = 2081;
      uint64_t v21 = v4;
      uint64_t v15 = *(void *)(a2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
      unint64_t v14 = *(void *)(a2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId + 8);
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_1FB7E8(v15, v14, &v23);
      sub_3D8930();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 22) = 2112;
      uint64_t v16 = sub_3D2160();
      uint64_t v22 = v16;
      sub_3D8930();
      *unint64_t v18 = v16;
      swift_errorRelease();
      os_log_t v17 = v19;
      _os_log_impl(&dword_0, v19, v10, "%{private,mask.hash}s: OAuth Authentication failed with error: %@", (uint8_t *)v12, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B24C0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v21);
    }
    else
    {
      swift_release();
      swift_errorRelease();
      swift_errorRelease();

      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    }
  }
  return result;
}

uint64_t sub_3798B0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C02E0);
  __chkstk_darwin(v4 - 8);
  id v118 = &v106[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v114 = sub_3D50C0();
  uint64_t v119 = *(void (***)(unsigned char *, uint64_t, uint64_t))(v114 - 8);
  __chkstk_darwin(v114);
  uint64_t v113 = &v106[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_3D2350();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  os_log_type_t v10 = &v106[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_3D5640();
  uint64_t v120 = *(void *)(v11 - 8);
  uint64_t v12 = __chkstk_darwin(v11);
  id v116 = &v106[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v111 = &v106[-v15];
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v109 = &v106[-v17];
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = &v106[-v19];
  __chkstk_darwin(v18);
  uint64_t v22 = &v106[-v21];
  sub_3D5620();
  uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v117 = v7;
  v23(v10, a1, v7);
  swift_retain();
  BOOL v24 = sub_3D5630();
  os_log_type_t v25 = sub_3D8410();
  int v26 = v25;
  BOOL v27 = os_log_type_enabled(v24, v25);
  uint64_t v110 = v20;
  if (v27)
  {
    uint64_t v28 = swift_slowAlloc();
    uint64_t v108 = swift_slowAlloc();
    id v122 = (void *)v108;
    *(_DWORD *)uint64_t v28 = 141558531;
    uint64_t v121 = 1752392040;
    uint64_t v112 = a1;
    sub_3D8930();
    *(_WORD *)(v28 + 12) = 2081;
    int v107 = v26;
    uint64_t v115 = v11;
    uint64_t v29 = *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
    unint64_t v30 = *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId + 8);
    swift_bridgeObjectRetain();
    uint64_t v121 = sub_1FB7E8(v29, v30, (uint64_t *)&v122);
    sub_3D8930();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 22) = 2080;
    uint64_t v31 = sub_3D2270();
    uint64_t v121 = sub_1FB7E8(v31, v32, (uint64_t *)&v122);
    a1 = v112;
    uint64_t v11 = v115;
    sub_3D8930();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v117);
    _os_log_impl(&dword_0, v24, (os_log_type_t)v107, "%{private,mask.hash}s: Validating redirectUrl parameters: %s.", (uint8_t *)v28, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release();
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v117);
  }

  Swift::String v33 = *(void (***)(unsigned char *, uint64_t, uint64_t))(v120 + 8);
  ((void (*)(unsigned char *, uint64_t))v33)(v22, v11);
  uint64_t v34 = sub_37A97C();
  uint64_t v36 = (uint64_t)v118;
  Swift::String_optional v35 = v119;
  if (!v34)
  {
LABEL_14:
    os_log_type_t v49 = v116;
    sub_3D5620();
    swift_retain();
    uint64_t v50 = sub_3D5630();
    os_log_type_t v51 = sub_3D83F0();
    uint64_t v47 = v51;
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      id v122 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v52 = 141558275;
      uint64_t v121 = 1752392040;
      sub_3D8930();
      *(_WORD *)(v52 + 12) = 2081;
      uint64_t v115 = v11;
      uint64_t v119 = v33;
      uint64_t v53 = *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
      unint64_t v54 = *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId + 8);
      swift_bridgeObjectRetain();
      uint64_t v121 = sub_1FB7E8(v53, v54, (uint64_t *)&v122);
      sub_3D8930();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v50, (os_log_type_t)v47, "%{private,mask.hash}s: State UUIDs do not match.", (uint8_t *)v52, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(unsigned char *, uint64_t))v119)(v116, v115);
    }
    else
    {

      swift_release();
      ((void (*)(unsigned char *, uint64_t))v33)(v49, v11);
    }
    uint64_t v55 = sub_3D44B0();
    sub_37D474((unint64_t *)&qword_4AD7B8, (void (*)(uint64_t))&type metadata accessor for OAuthSessionError);
    swift_allocError();
    uint64_t v57 = v56;
    uint64_t v58 = (unsigned int *)&enum case for OAuthSessionError.stateMismatch(_:);
    goto LABEL_18;
  }
  uint64_t v37 = v34;
  swift_bridgeObjectRetain();
  sub_3D50B0();
  uint64_t v38 = v114;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v35[6])(v36, 1, v114) != 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = v36;
    id v46 = v113;
    v35[4](v113, v45, v38);
    sub_3D44B0();
    sub_37D474((unint64_t *)&qword_4AD7B8, (void (*)(uint64_t))&type metadata accessor for OAuthSessionError);
    swift_allocError();
    sub_3D50A0();
    swift_willThrow();
    uint64_t v48 = v35[1];
    uint64_t v47 = (uint64_t)(v35 + 1);
    ((void (*)(unsigned char *, uint64_t))v48)(v46, v38);
    return v47;
  }
  sub_250FC(v36, &qword_4C02E0);
  if (!*(void *)(v37 + 16))
  {
LABEL_13:
    swift_bridgeObjectRelease();
    goto LABEL_14;
  }
  swift_bridgeObjectRetain();
  unint64_t v39 = sub_32000(0x6574617473, 0xE500000000000000);
  if ((v40 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  uint64_t v112 = a1;
  uint64_t v41 = (uint64_t *)(*(void *)(v37 + 56) + 16 * v39);
  uint64_t v43 = *v41;
  uint64_t v42 = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v43 == _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0() && v42 == v44)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  char v60 = sub_3D8FE0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v60 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_21:
  if (!*(void *)(v37 + 16) || (unint64_t v61 = sub_32000(1701080931, 0xE400000000000000), (v62 & 1) == 0))
  {
    swift_bridgeObjectRelease();
    uint64_t v74 = v111;
    sub_3D5620();
    swift_retain();
    id v75 = sub_3D5630();
    os_log_type_t v76 = sub_3D83F0();
    uint64_t v47 = v76;
    if (os_log_type_enabled(v75, v76))
    {
      uint64_t v77 = swift_slowAlloc();
      id v122 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v77 = 141558275;
      uint64_t v121 = 1752392040;
      sub_3D8930();
      *(_WORD *)(v77 + 12) = 2081;
      uint64_t v115 = v11;
      uint64_t v119 = v33;
      uint64_t v78 = *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
      unint64_t v79 = *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId + 8);
      swift_bridgeObjectRetain();
      uint64_t v121 = sub_1FB7E8(v78, v79, (uint64_t *)&v122);
      sub_3D8930();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v75, (os_log_type_t)v47, "%{private,mask.hash}s: Missing short-lived token from response.", (uint8_t *)v77, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      ((void (*)(unsigned char *, uint64_t))v119)(v111, v115);
    }
    else
    {

      swift_release();
      ((void (*)(unsigned char *, uint64_t))v33)(v74, v11);
    }
    uint64_t v55 = sub_3D44B0();
    sub_37D474((unint64_t *)&qword_4AD7B8, (void (*)(uint64_t))&type metadata accessor for OAuthSessionError);
    swift_allocError();
    uint64_t v57 = v80;
    uint64_t v58 = (unsigned int *)&enum case for OAuthSessionError.missingShortLivedToken(_:);
    goto LABEL_18;
  }
  uint64_t v119 = v33;
  uint64_t v63 = (uint64_t *)(*(void *)(v37 + 56) + 16 * v61);
  uint64_t v47 = *v63;
  unint64_t v64 = v63[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v65 = v110;
  sub_3D5620();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  id v66 = sub_3D5630();
  os_log_type_t v67 = sub_3D8410();
  int v68 = v67;
  BOOL v69 = os_log_type_enabled(v66, v67);
  uint64_t v115 = v11;
  if (v69)
  {
    uint64_t v70 = swift_slowAlloc();
    LODWORD(v118) = v68;
    uint64_t v71 = v70;
    uint64_t v117 = swift_slowAlloc();
    id v122 = (void *)v117;
    *(_DWORD *)uint64_t v71 = 141558531;
    uint64_t v121 = 1752392040;
    sub_3D8930();
    *(_WORD *)(v71 + 12) = 2081;
    uint64_t v72 = *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
    unint64_t v73 = *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId + 8);
    swift_bridgeObjectRetain();
    uint64_t v121 = sub_1FB7E8(v72, v73, (uint64_t *)&v122);
    sub_3D8930();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v71 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v121 = sub_1FB7E8(v47, v64, (uint64_t *)&v122);
    uint64_t v11 = v115;
    sub_3D8930();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v66, (os_log_type_t)v118, "%{private,mask.hash}s: short-lived token acquired: %s.", (uint8_t *)v71, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  ((void (*)(unsigned char *, uint64_t))v119)(v65, v11);
  uint64_t v81 = sub_3D2280();
  uint64_t v82 = *(void *)(v81 + 16);
  id v118 = (unsigned char *)v81;
  if (v82)
  {
    uint64_t v83 = (uint64_t *)(v81 + 40);
    uint64_t v84 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v89 = *(v83 - 1);
      uint64_t v90 = *v83;
      BOOL v91 = v89 == 47 && v90 == 0xE100000000000000;
      if (!v91 && (sub_3D8FE0() & 1) == 0)
      {
        BOOL v92 = v89 == 0x687475616FLL && v90 == 0xE500000000000000;
        if (!v92 && (sub_3D8FE0() & 1) == 0)
        {
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          id v122 = v84;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_1FBF1C(0, v84[2] + 1, 1);
            uint64_t v84 = v122;
          }
          unint64_t v86 = v84[2];
          unint64_t v85 = v84[3];
          uint64_t v87 = v86 + 1;
          if (v86 >= v85 >> 1)
          {
            uint64_t v117 = v86 + 1;
            sub_1FBF1C(v85 > 1, v86 + 1, 1);
            uint64_t v87 = v117;
            uint64_t v84 = v122;
          }
          v84[2] = v87;
          uint64_t v88 = &v84[2 * v86];
          v88[4] = v89;
          v88[5] = v90;
          uint64_t v11 = v115;
        }
      }
      v83 += 2;
      --v82;
    }
    while (v82);
  }
  else
  {
    uint64_t v84 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  if (!v84[2])
  {
    swift_bridgeObjectRelease();
    swift_release();
    goto LABEL_57;
  }
  uint64_t v95 = v84[4];
  uint64_t v94 = v84[5];
  swift_bridgeObjectRetain();
  swift_release();
  if (v95 == *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_oAuthAdamId)
    && v94 == *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_oAuthAdamId + 8))
  {
    swift_bridgeObjectRelease();
    return v47;
  }
  char v97 = sub_3D8FE0();
  swift_bridgeObjectRelease();
  if ((v97 & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_57:
    uint64_t v98 = v109;
    sub_3D5620();
    swift_retain();
    uint64_t v99 = sub_3D5630();
    os_log_type_t v100 = sub_3D83F0();
    uint64_t v47 = v100;
    if (os_log_type_enabled(v99, v100))
    {
      uint64_t v101 = swift_slowAlloc();
      id v122 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v101 = 141558275;
      uint64_t v121 = 1752392040;
      sub_3D8930();
      *(_WORD *)(v101 + 12) = 2081;
      uint64_t v102 = *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
      unint64_t v103 = *(void *)(v2 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId + 8);
      swift_bridgeObjectRetain();
      uint64_t v121 = sub_1FB7E8(v102, v103, (uint64_t *)&v122);
      sub_3D8930();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v99, (os_log_type_t)v47, "%{private,mask.hash}s: oAuthAdamId's do not match.", (uint8_t *)v101, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      int v104 = v109;
    }
    else
    {

      swift_release();
      int v104 = v98;
    }
    ((void (*)(unsigned char *, uint64_t))v119)(v104, v11);
    uint64_t v55 = sub_3D44B0();
    sub_37D474((unint64_t *)&qword_4AD7B8, (void (*)(uint64_t))&type metadata accessor for OAuthSessionError);
    swift_allocError();
    uint64_t v57 = v105;
    uint64_t v58 = (unsigned int *)&enum case for OAuthSessionError.oAuthAdamIdMismatch(_:);
LABEL_18:
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v55 - 8) + 104))(v57, *v58, v55);
    swift_willThrow();
  }
  return v47;
}

uint64_t sub_37A97C()
{
  uint64_t v0 = sub_3D1FA0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v50 = (char *)&v45 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_4A9C90);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_3D2000();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3D1FD0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_250FC((uint64_t)v5, &qword_4A9C90);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  uint64_t v10 = sub_3D1FB0();
  if (!v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  id v46 = v9;
  uint64_t v47 = v7;
  uint64_t v48 = v6;
  uint64_t v11 = *(void *)(v10 + 16);
  uint64_t v45 = v10;
  if (!v11)
  {
    uint64_t v15 = &_swiftEmptyDictionarySingleton;
LABEL_30:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v46, v48);
    swift_bridgeObjectRelease();
    return (uint64_t)v15;
  }
  uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
  uint64_t v12 = v1 + 16;
  unint64_t v14 = v10 + ((*(unsigned __int8 *)(v12 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 64));
  uint64_t v52 = (void (**)(char *, uint64_t))(v12 - 8);
  uint64_t v53 = v13;
  uint64_t v54 = v12;
  uint64_t v51 = *(void *)(v12 + 56);
  uint64_t v15 = &_swiftEmptyDictionarySingleton;
  uint64_t v16 = v50;
  uint64_t v49 = v0;
  v13(v50, v14, v0);
  while (1)
  {
    uint64_t v18 = sub_3D1F80();
    uint64_t v20 = v19;
    uint64_t v21 = sub_3D1F90();
    if (v22) {
      break;
    }
    swift_bridgeObjectRetain();
    unint64_t v35 = sub_32000(v18, v20);
    char v37 = v36;
    swift_bridgeObjectRelease();
    if (v37)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v56 = v15;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_2FC75C();
        uint64_t v15 = v56;
      }
      swift_bridgeObjectRelease();
      sub_2FAF14(v35, (uint64_t)v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
LABEL_8:
    (*v52)(v16, v0);
    v14 += v51;
    if (!--v11) {
      goto LABEL_30;
    }
    v53(v16, v14, v0);
  }
  uint64_t v23 = v22;
  uint64_t v55 = v11;
  uint64_t v24 = v21;
  char v25 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v56 = v15;
  uint64_t v26 = v20;
  unint64_t v28 = sub_32000(v18, v20);
  uint64_t v29 = v15[2];
  BOOL v30 = (v27 & 1) == 0;
  uint64_t v31 = v29 + v30;
  if (!__OFADD__(v29, v30))
  {
    char v32 = v27;
    if (v15[3] < v31)
    {
      sub_2F9480(v31, v25);
      unint64_t v33 = sub_32000(v18, v26);
      if ((v32 & 1) != (v34 & 1)) {
        goto LABEL_34;
      }
      unint64_t v28 = v33;
      uint64_t v15 = v56;
      if ((v32 & 1) == 0) {
        goto LABEL_22;
      }
LABEL_6:
      uint64_t v17 = (uint64_t *)(v15[7] + 16 * v28);
      swift_bridgeObjectRelease();
      *uint64_t v17 = v24;
      v17[1] = v23;
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v0 = v49;
      uint64_t v16 = v50;
      uint64_t v11 = v55;
      goto LABEL_8;
    }
    if (v25)
    {
      uint64_t v15 = v56;
      if (v27) {
        goto LABEL_6;
      }
    }
    else
    {
      sub_2FC75C();
      uint64_t v15 = v56;
      if (v32) {
        goto LABEL_6;
      }
    }
LABEL_22:
    v15[(v28 >> 6) + 8] |= 1 << v28;
    unint64_t v39 = (uint64_t *)(v15[6] + 16 * v28);
    uint64_t *v39 = v18;
    v39[1] = v26;
    char v40 = (uint64_t *)(v15[7] + 16 * v28);
    *char v40 = v24;
    v40[1] = v23;
    uint64_t v41 = v15[2];
    BOOL v42 = __OFADD__(v41, 1);
    uint64_t v43 = v41 + 1;
    if (v42) {
      goto LABEL_33;
    }
    void v15[2] = v43;
    swift_bridgeObjectRetain();
    goto LABEL_7;
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  uint64_t result = sub_3D9070();
  __break(1u);
  return result;
}

uint64_t sub_37AE5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v31 = a2;
  uint64_t v38 = a1;
  char v36 = a3;
  uint64_t v5 = sub_3D6950();
  uint64_t v37 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v35 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_3D69A0();
  uint64_t v33 = *(void *)(v7 - 8);
  uint64_t v34 = v7;
  __chkstk_darwin(v7);
  char v32 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_3D5640();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3D5620();
  swift_retain();
  uint64_t v13 = sub_3D5630();
  os_log_type_t v14 = sub_3D8410();
  int v15 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v16 = swift_slowAlloc();
    int v28 = v15;
    uint64_t v17 = v16;
    uint64_t v18 = swift_slowAlloc();
    uint64_t v29 = v18;
    *(_DWORD *)uint64_t v17 = 141558275;
    uint64_t v39 = 1752392040;
    aBlock[0] = v18;
    sub_3D8930();
    *(_WORD *)(v17 + 12) = 2081;
    uint64_t v27 = v17 + 14;
    uint64_t v30 = v9;
    uint64_t v19 = *(void *)(v4 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
    unint64_t v20 = *(void *)(v4 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId + 8);
    swift_bridgeObjectRetain();
    uint64_t v39 = sub_1FB7E8(v19, v20, aBlock);
    sub_3D8930();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v13, (os_log_type_t)v28, "%{private,mask.hash}s: Getting commerce verification url from bag. Starting UI spinner.", (uint8_t *)v17, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v30);
  }
  else
  {

    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  aBlock[4] = (uint64_t)sub_37D1CC;
  aBlock[5] = v4;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_36F78;
  void aBlock[3] = (uint64_t)&block_descriptor_40_0;
  uint64_t v21 = _Block_copy(aBlock);
  swift_retain();
  uint64_t v22 = v32;
  sub_3D6970();
  uint64_t v39 = (uint64_t)_swiftEmptyArrayStorage;
  sub_37D474((unint64_t *)&qword_4AD860, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1C90);
  sub_3D6E4((unint64_t *)&qword_4AD870, (uint64_t *)&unk_4B1C90);
  uint64_t v23 = v35;
  sub_3D8A70();
  sub_3D8580();
  _Block_release(v21);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v23, v5);
  (*(void (**)(char *, uint64_t))(v33 + 8))(v22, v34);
  swift_release();
  uint64_t v24 = (void *)swift_allocObject();
  uint64_t v25 = v38;
  v24[2] = v4;
  v24[3] = v25;
  v24[4] = v31;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4C00F0);
  swift_allocObject();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_3D5970();
  *char v36 = result;
  return result;
}

void sub_37B398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  *(void *)(v10 + 24) = a2;
  uint64_t v11 = self;
  swift_retain();
  id v12 = [v11 sharedInstance];
  id v13 = [v12 commerceOAuthVerificationUrl];

  id v14 = [v13 asyncValuePromiseOnQueue:*(void *)(a3 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_workQueue)];
  int v15 = (void *)swift_allocObject();
  void v15[2] = a3;
  v15[3] = sub_37D240;
  v15[4] = v10;
  v15[5] = a4;
  v15[6] = a5;
  uint64_t v17[4] = sub_37D2C4;
  v17[5] = v15;
  v17[0] = _NSConcreteStackBlock;
  v17[1] = 1107296256;
  void v17[2] = sub_125FA4;
  uint64_t v17[3] = &block_descriptor_52;
  uint64_t v16 = _Block_copy(v17);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  [v14 addFinishBlock:v16];
  _Block_release(v16);
}

void sub_37B548(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void), uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v59 = a6;
  uint64_t v60 = a7;
  uint64_t v61 = sub_3D5640();
  uint64_t v12 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  id v14 = &v53[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v17 = &v53[-v16];
  __chkstk_darwin(v18);
  unint64_t v20 = &v53[-v19];
  if (a1 && (v63 = 0, v64 = 0, sub_3D7D40(), (unint64_t v21 = v64) != 0))
  {
    uint64_t v22 = v63;
    sub_3D5620();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_3D5630();
    os_log_type_t v24 = sub_3D8410();
    int v25 = v24;
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v26 = swift_slowAlloc();
      os_log_t v55 = v23;
      uint64_t v27 = v26;
      uint64_t v28 = swift_slowAlloc();
      uint64_t v56 = (void *)v28;
      *(_DWORD *)uint64_t v27 = 141558531;
      uint64_t v62 = 1752392040;
      uint64_t v63 = v28;
      uint64_t v57 = a4;
      sub_3D8930();
      *(_WORD *)(v27 + 12) = 2081;
      uint64_t v58 = v12;
      int v54 = v25;
      uint64_t v29 = v22;
      uint64_t v31 = *(void *)(a3 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
      unint64_t v30 = *(void *)(a3 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId + 8);
      swift_bridgeObjectRetain();
      uint64_t v32 = v31;
      uint64_t v22 = v29;
      uint64_t v62 = sub_1FB7E8(v32, v30, &v63);
      sub_3D8930();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_1FB7E8(v29, v21, &v63);
      a4 = v57;
      sub_3D8930();
      swift_bridgeObjectRelease_n();
      os_log_t v33 = v55;
      _os_log_impl(&dword_0, v55, (os_log_type_t)v54, "%{private,mask.hash}s: Acquired OAuth commerce verification endpoint from bag: %s.", (uint8_t *)v27, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v58 + 8))(v20, v61);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v20, v61);
    }
    uint64_t v63 = v22;
    unint64_t v64 = v21;
    uint64_t v65 = v59;
    uint64_t v66 = v60;
    char v67 = 0;
    swift_bridgeObjectRetain();
    a4(&v63);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else if (a2)
  {
    uint64_t v58 = v12;
    uint64_t v60 = a5;
    uint64_t v34 = (void *)sub_3D2160();
    sub_3D5620();
    swift_retain_n();
    id v35 = v34;
    char v36 = sub_3D5630();
    os_log_type_t v37 = sub_3D83F0();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v56 = (void *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      uint64_t v59 = v39;
      *(_DWORD *)uint64_t v38 = 141558531;
      uint64_t v62 = 1752392040;
      uint64_t v63 = v39;
      uint64_t v57 = a4;
      sub_3D8930();
      *(_WORD *)(v38 + 12) = 2081;
      uint64_t v41 = *(void *)(a3 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
      unint64_t v40 = *(void *)(a3 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId + 8);
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_1FB7E8(v41, v40, &v63);
      sub_3D8930();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 22) = 2112;
      uint64_t v62 = (uint64_t)v35;
      id v42 = v35;
      a4 = v57;
      sub_3D8930();
      *uint64_t v56 = v35;

      _os_log_impl(&dword_0, v36, v37, "%{private,mask.hash}s Could not get commerce OAuth verification endpoint from bag with error: %@", (uint8_t *)v38, 0x20u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B24C0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(unsigned char *, uint64_t))(v58 + 8))(v14, v61);
    uint64_t v63 = (uint64_t)v35;
    unint64_t v64 = 0;
    uint64_t v65 = 0;
    uint64_t v66 = 0;
    char v67 = 1;
    id v49 = v35;
    a4(&v63);
  }
  else
  {
    sub_3D5620();
    swift_retain();
    uint64_t v43 = sub_3D5630();
    os_log_type_t v44 = sub_3D83F0();
    if (os_log_type_enabled(v43, v44))
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = swift_slowAlloc();
      uint64_t v60 = v46;
      *(_DWORD *)uint64_t v45 = 141558275;
      uint64_t v62 = 1752392040;
      uint64_t v63 = v46;
      uint64_t v57 = a4;
      sub_3D8930();
      *(_WORD *)(v45 + 12) = 2081;
      uint64_t v58 = v12;
      uint64_t v47 = *(void *)(a3 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
      unint64_t v48 = *(void *)(a3 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId + 8);
      swift_bridgeObjectRetain();
      uint64_t v62 = sub_1FB7E8(v47, v48, &v63);
      a4 = v57;
      sub_3D8930();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v43, v44, "%{private,mask.hash}s Could not get commerce OAuth verification endpoint from bag.", (uint8_t *)v45, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(unsigned char *, uint64_t))(v58 + 8))(v17, v61);
    }
    else
    {

      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v17, v61);
    }
    uint64_t v50 = sub_3D44B0();
    sub_37D474((unint64_t *)&qword_4AD7B8, (void (*)(uint64_t))&type metadata accessor for OAuthSessionError);
    uint64_t v51 = swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v50 - 8) + 104))(v52, enum case for OAuthSessionError.unableToGetCommerceVerificationEndpointFromBag(_:), v50);
    uint64_t v63 = v51;
    unint64_t v64 = 0;
    uint64_t v65 = 0;
    uint64_t v66 = 0;
    char v67 = 1;
    a4(&v63);
    swift_errorRelease();
  }
}

uint64_t sub_37BD98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v45 = a5;
  uint64_t v6 = v5;
  os_log_t v43 = a3;
  uint64_t v44 = a4;
  uint64_t v52 = sub_3D5640();
  uint64_t v46 = *(void *)(v52 - 8);
  uint64_t v9 = __chkstk_darwin(v52);
  uint64_t v11 = &v41[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v13 = &v41[-v12];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = &v41[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v17 = sub_3D2350();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  unint64_t v20 = &v41[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v49[0] = a1;
  v49[1] = a2;
  uint64_t v47 = 0x612D687475616F7BLL;
  unint64_t v48 = 0xEF7D64692D6D6164;
  uint64_t v21 = *(void *)(v6 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_oAuthAdamId + 8);
  uint64_t v50 = *(void *)(v6 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_oAuthAdamId);
  uint64_t v51 = v21;
  sub_345F8();
  sub_3D89C0();
  sub_3D2320();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17) == 1)
  {
    sub_250FC((uint64_t)v16, &qword_4AD7B0);
    sub_3D5620();
    swift_retain();
    uint64_t v22 = sub_3D5630();
    os_log_type_t v23 = sub_3D83F0();
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v24 = swift_slowAlloc();
      v49[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v24 = 141558275;
      uint64_t v47 = 1752392040;
      sub_3D8930();
      *(_WORD *)(v24 + 12) = 2081;
      uint64_t v25 = *(void *)(v6 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
      unint64_t v26 = *(void *)(v6 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId + 8);
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1FB7E8(v25, v26, v49);
      sub_3D8930();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v22, v23, "%{private,mask.hash}s Could not form verification endpoint with oauth id.", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v11, v52);
    uint64_t v38 = sub_3D44B0();
    sub_37D474((unint64_t *)&qword_4AD7B8, (void (*)(uint64_t))&type metadata accessor for OAuthSessionError);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v38 - 8) + 104))(v39, enum case for OAuthSessionError.cannotReformCommerceVerificationUrl(_:), v38);
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v18 + 32))(v20, v16, v17);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4A9880);
    sub_3D1FA0();
    uint64_t v27 = (_OWORD *)swift_allocObject();
    v27[1] = xmmword_3DED90;
    sub_3D1F70();
    v28._rawValue = v27;
    sub_3D2310(v28);
    swift_bridgeObjectRelease();
    sub_3D5620();
    swift_retain();
    uint64_t v29 = sub_3D5630();
    os_log_type_t v30 = sub_3D8410();
    int v31 = v30;
    if (os_log_type_enabled(v29, v30))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      v49[0] = v44;
      *(_DWORD *)uint64_t v32 = 141558531;
      uint64_t v47 = 1752392040;
      os_log_t v43 = v29;
      sub_3D8930();
      *(_WORD *)(v32 + 12) = 2081;
      int v42 = v31;
      uint64_t v33 = *(void *)(v6 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
      unint64_t v34 = *(void *)(v6 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId + 8);
      swift_bridgeObjectRetain();
      uint64_t v47 = sub_1FB7E8(v33, v34, v49);
      sub_3D8930();
      swift_release();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 22) = 2080;
      swift_beginAccess();
      sub_37D474(&qword_4C02D0, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v35 = sub_3D8F90();
      uint64_t v50 = sub_1FB7E8(v35, v36, v49);
      sub_3D8930();
      swift_bridgeObjectRelease();
      os_log_t v37 = v43;
      _os_log_impl(&dword_0, v43, (os_log_type_t)v42, "%{private,mask.hash}s Got commerce verification endpoint from the bag and appended short-lived token: %s", (uint8_t *)v32, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release();
    }
    (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v13, v52);
    swift_beginAccess();
    (*(void (**)(uint64_t, unsigned char *, uint64_t))(v18 + 16))(v45, v20, v17);
    return (*(uint64_t (**)(unsigned char *, uint64_t))(v18 + 8))(v20, v17);
  }
}

uint64_t OAuthSession.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_authorizationURL;
  uint64_t v2 = sub_3D2350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_state;
  uint64_t v4 = sub_3D2460();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_hudViewHandler);

  return v0;
}

uint64_t OAuthSession.__deallocating_deinit()
{
  OAuthSession.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_37C6E8(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *))
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0350);
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_3D2350();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_30674(a1, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_250FC((uint64_t)v11, &qword_4AD7B0);
    if (a2)
    {
      *uint64_t v8 = a2;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
    }
    else
    {
      uint64_t v17 = sub_3D44B0();
      sub_37D474((unint64_t *)&qword_4AD7B8, (void (*)(uint64_t))&type metadata accessor for OAuthSessionError);
      uint64_t v18 = swift_allocError();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, enum case for OAuthSessionError.missingRedirectUrlFromWebAuthenticationSession(_:), v17);
      *uint64_t v8 = v18;
      swift_storeEnumTagMultiPayload();
    }
    a3(v8);
    return sub_250FC((uint64_t)v8, &qword_4C0350);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    (*(void (**)(uint64_t *, char *, uint64_t))(v13 + 16))(v8, v15, v12);
    swift_storeEnumTagMultiPayload();
    a3(v8);
    sub_250FC((uint64_t)v8, &qword_4C0350);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
}

uint64_t sub_37C9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, void *a8)
{
  uint64_t v9 = v8;
  uint64_t v33 = a3;
  uint64_t v34 = a4;
  uint64_t v32 = a2;
  uint64_t v35 = sub_3D2460();
  uint64_t v14 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v16 = (char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v9 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_oauthSession) = 0;
  *(void *)(v9 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_webAuthenticationSession) = 0;
  uint64_t v17 = v9 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_authorizationURL;
  uint64_t v18 = sub_3D2350();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, a1, v18);
  uint64_t v20 = (void *)(v9 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_oAuthAdamId);
  uint64_t v21 = v33;
  uint64_t v22 = v34;
  *uint64_t v20 = v32;
  v20[1] = v21;
  sub_18168(v22, v9 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_hudViewHandler);
  *(void *)(v9 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_window) = a6;
  *(void *)(v9 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_workQueue) = a7;
  *(void *)(v9 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_uiQueue) = a8;
  id v23 = a6;
  id v24 = a7;
  id v25 = a8;
  uint64_t v26 = sub_3D22F0();
  if (v27) {
    uint64_t v28 = v26;
  }
  else {
    uint64_t v28 = 0;
  }
  unint64_t v29 = 0xE000000000000000;
  if (v27) {
    unint64_t v29 = v27;
  }
  os_log_type_t v30 = (uint64_t *)(v9 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_sessionId);
  *os_log_type_t v30 = v28;
  v30[1] = v29;
  sub_3D2450();
  __swift_destroy_boxed_opaque_existential_1(v22);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a1, v18);
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v9 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_state, v16, v35);
  return v9;
}

uint64_t sub_37CC20()
{
  uint64_t v1 = sub_3D2350();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_37CCEC()
{
  uint64_t v1 = *(void *)(sub_3D2350() - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_375F70(v2, v3);
}

uint64_t block_copy_helper_32(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_32()
{
  return swift_release();
}

uint64_t sub_37CD68(uint64_t a1)
{
  return sub_3798B0(a1);
}

uint64_t sub_37CD80()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_37CDB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
  {
    *a1 = result;
    a1[1] = v5;
  }
  return result;
}

uint64_t sub_37CDF0(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_37CE20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, NSObject *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_37BD98(a1, a2, a3, a4, a5);
}

uint64_t sub_37CE38(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void))(v1 + 16))(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_37CE6C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_37CEA4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = AMSOAuthEndpointSubscriber.subscribe(to:for:)(a1, *(void *)(v2 + 16), *(void *)(v2 + 24));
  *a2 = result;
  return result;
}

uint64_t sub_37CED0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_37CF08()
{
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_37CF50(uint64_t *a1)
{
  return sub_376AE8(a1, *(void (**)(void, void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_37CF5C()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_37CFA4(unsigned __int8 *a1)
{
  return sub_3774F0(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_37CFB0()
{
  return objectdestroy_25Tm((void (*)(void))&_swift_release, 40);
}

uint64_t sub_37CFCC()
{
  return sub_377F3C(v0[2], v0[3], v0[4]);
}

uint64_t sub_37CFD8()
{
  return type metadata accessor for OAuthSession();
}

uint64_t type metadata accessor for OAuthSession()
{
  uint64_t result = qword_4C0188;
  if (!qword_4C0188) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_37D02C()
{
  uint64_t result = sub_3D2350();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_3D2460();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t method lookup function for OAuthSession(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for OAuthSession);
}

uint64_t dispatch thunk of OAuthSession.__allocating_init(authorizationURL:oAuthAdamId:hudViewHandler:endpointSubscriber:window:workQueue:uiQueue:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of OAuthSession.resumeOAuthSession(redirectURL:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of OAuthSession.startOAuthFlow(completionHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of OAuthSession.cancelSession(completionHandler:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t sub_37D1CC()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_hudViewHandler), *(void *)(v0 + OBJC_IVAR____TtC8ShelfKit12OAuthSession_hudViewHandler + 24));
  return sub_3D4F60();
}

uint64_t sub_37D218()
{
  return objectdestroy_25Tm((void (*)(void))&_swift_bridgeObjectRelease, 40);
}

void sub_37D234(uint64_t a1, uint64_t a2)
{
  sub_37B398(a1, a2, v2[2], v2[3], v2[4]);
}

uint64_t sub_37D240(uint64_t a1)
{
  unint64_t v2 = *(uint64_t (**)(unsigned char *))(v1 + 16);
  sub_37D2D4(a1, (uint64_t)v4);
  return v2(v4);
}

uint64_t sub_37D27C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 56, 7);
}

void sub_37D2C4(uint64_t a1, uint64_t a2)
{
  sub_37B548(a1, a2, *(void *)(v2 + 16), *(void (**)(void))(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
}

uint64_t sub_37D2D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C02D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_37D33C()
{
  return objectdestroy_25Tm((void (*)(void))&_swift_release, 40);
}

uint64_t sub_37D358()
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 24);
  *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC8ShelfKit12OAuthSession_oauthSession) = 0;
  uint64_t v2 = swift_release();
  return v1(v2);
}

uint64_t sub_37D398()
{
  return objectdestroy_25Tm((void (*)(void))&_swift_release, 41);
}

uint64_t objectdestroy_25Tm(void (*a1)(void), uint64_t a2)
{
  swift_release();
  a1(*(void *)(v2 + 32));

  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_37D410()
{
  return sub_377908(*(void *)(v0 + 16), *(void (**)(void, void))(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_37D420()
{
  swift_release();
  swift_release();
  swift_errorRelease();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_37D468()
{
  return sub_3770D8(*(void *)(v0 + 16), *(void (**)(void, uint64_t))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_37D474(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_37D4BC(uint64_t a1)
{
  return sub_37924C(a1, v1);
}

uint64_t sub_37D4C4(void *a1)
{
  return sub_3795B8(a1, v1);
}

uint64_t sub_37D4CC()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_37D504(void (*a1)(uint64_t *), uint64_t a2)
{
  uint64_t v5 = *(char **)(v2 + 16);
  swift_retain();
  sub_97E8C(v5, a1, a2);

  return swift_release();
}

uint64_t ShowEpisodesShelvesProvider.shelvesPublisher(showUUID:showPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v48 = a2;
  uint64_t v47 = a1;
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0358);
  uint64_t v53 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v50 = (char *)v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0360);
  uint64_t v55 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  id v49 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0368);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v58 = v6;
  uint64_t v59 = v7;
  __chkstk_darwin(v6);
  uint64_t v51 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0370);
  uint64_t v62 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  uint64_t v56 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0378);
  uint64_t v63 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v57 = (char *)v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0380);
  uint64_t v68 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v44 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v67 = (char *)v43 - v13;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0388);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0390);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v69[0] = a3;
  swift_getKeyPath();
  v43[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1670);
  unint64_t v64 = &protocol conformance descriptor for AnyPublisher<A, B>;
  v43[1] = sub_3D6E4(&qword_4B1678, &qword_4B1670);
  sub_3D5B30();
  swift_release();
  sub_3D6E4(&qword_4C0398, &qword_4C0388);
  sub_37E0DC();
  sub_3D5C80();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v45 = &protocol conformance descriptor for Publishers.RemoveDuplicates<A>;
  sub_3D6E4(&qword_4C03B0, &qword_4C0390);
  uint64_t v65 = sub_3D5A60();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  *(void *)&v69[0] = a3;
  uint64_t v22 = v67;
  sub_3D5B40();
  (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v44, v22, v66);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4C03B8);
  swift_allocObject();
  sub_3D6E4(&qword_4C03C0, &qword_4C0380);
  uint64_t v44 = (char *)sub_3D4880();
  uint64_t v23 = v46;
  uint64_t v24 = *(void *)(v46 + 48);
  uint64_t ObjectType = swift_getObjectType();
  *(void *)&v69[0] = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 328))(v47, v48, ObjectType, v24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4C03C8);
  swift_allocObject();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BD098);
  sub_3D6E4(&qword_4BD0A0, &qword_4BD098);
  uint64_t v26 = sub_3D4880();
  *(void *)&v69[0] = a3;
  uint64_t v71 = v65;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4C03D0);
  sub_3D6E4(&qword_4C03D8, &qword_4C03D0);
  unint64_t v27 = v50;
  sub_3D5B10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4C03E0);
  sub_3D6E4(&qword_4C03E8, &qword_4C0358);
  uint64_t v28 = v49;
  uint64_t v29 = v52;
  sub_3D5B40();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v27, v29);
  sub_3D6E4(&qword_4C03F0, &qword_4C0360);
  os_log_type_t v30 = v51;
  uint64_t v31 = v54;
  sub_3D5B20();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v28, v31);
  sub_37EBE8(v23, (uint64_t)v69);
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = v44;
  *(void *)(v32 + 24) = v26;
  long long v33 = v69[1];
  *(_OWORD *)(v32 + 32) = v69[0];
  *(_OWORD *)(v32 + 48) = v33;
  *(_OWORD *)(v32 + 64) = v69[2];
  *(void *)(v32 + 80) = v70;
  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_37EC70;
  *(void *)(v34 + 24) = v32;
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4C03F8);
  sub_3D6E4(&qword_4C0400, &qword_4C0368);
  uint64_t v35 = v56;
  uint64_t v36 = v58;
  sub_3D5B40();
  swift_release();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v30, v36);
  sub_3D6E4(&qword_4C0408, &qword_4C0370);
  sub_3D6E4(&qword_4C0410, &qword_4C03F8);
  os_log_t v37 = v57;
  uint64_t v38 = v60;
  sub_3D5C90();
  (*(void (**)(char *, uint64_t))(v62 + 8))(v35, v38);
  sub_3D6E4(&qword_4C0418, &qword_4C0378);
  uint64_t v39 = v61;
  uint64_t v40 = sub_3D5A70();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v37, v39);
  *(void *)&v69[0] = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_4B16A8);
  sub_3D6E4(&qword_4B16B0, &qword_4B16A8);
  uint64_t v41 = sub_3D5AC0();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v66);
  return v41;
}

unint64_t sub_37E0DC()
{
  unint64_t result = qword_4C03A0;
  if (!qword_4C03A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4C03A8);
    sub_2EAB5C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C03A0);
  }
  return result;
}

double ShowEpisodesShelvesProvider.init(asPartOf:)@<D0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_4AB9D0);
  sub_3D7170();
  sub_3D7970();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4AD450);
  sub_3D7970();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)(a1 + 40) = v3;
  return result;
}

uint64_t sub_37E1E8(uint64_t a1)
{
  return EpisodeUserFilter.shouldResetOnNewVisit.getter(*(void *)a1, *(unsigned __int8 *)(a1 + 8));
}

void *sub_37E1F8@<X0>(void *result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = *(unsigned char *)(*result + OBJC_IVAR____TtC8ShelfKit13PodcastDetail_sort);
  return result;
}

uint64_t sub_37E214@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, char a3@<W3>, uint64_t a4@<X8>)
{
  int v8 = ~a3;
  swift_beginAccess();
  int v9 = MTPodcastHidesPlayedEpisodesResolved();
  uint64_t v10 = a2;
  char v11 = a3;
  if (!v8)
  {
    uint64_t v10 = sub_3D4200();
    char v11 = v12;
  }
  sub_1E6F84(a2, a3);
  if (v9) {
    sub_3D4270();
  }
  uint64_t v13 = sub_3D4220(v9);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  sub_54DC8(v10, v11);
  sub_3D4790();
  char v18 = *(unsigned char *)(a1 + OBJC_IVAR____TtC8ShelfKit13PodcastDetail_isSerialShowTypeInFeed);
  uint64_t v19 = *(void *)(a1 + 16);
  char v20 = *(unsigned char *)(a1 + 24);
  uint64_t result = swift_bridgeObjectRetain();
  *(void *)a4 = v16;
  *(void *)(a4 + 8) = v17;
  *(void *)(a4 + 16) = v19;
  *(unsigned char *)(a4 + 24) = v20;
  *(void *)(a4 + 32) = v10;
  *(unsigned char *)(a4 + 40) = v11;
  *(void *)(a4 + 48) = v13;
  *(void *)(a4 + 56) = v15;
  *(unsigned char *)(a4 + 64) = v18;
  return result;
}

double sub_37E3C0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(void *)(a1 + 8);
  char v5 = *(unsigned char *)(a1 + 16);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C03E0);
  uint64_t v7 = (void *)(a2 + *(int *)(v6 + 96));
  uint64_t v8 = *(int *)(v6 + 112);
  sub_37E214(v3, v4, v5, (uint64_t)&v17);
  double result = *(double *)&v17;
  uint64_t v10 = v18;
  char v11 = v19;
  uint64_t v12 = v20;
  char v13 = v21;
  uint64_t v14 = v22;
  uint64_t v15 = v23;
  char v16 = v24;
  *(_OWORD *)a2 = v17;
  *(void *)(a2 + 16) = v10;
  *(unsigned char *)(a2 + 24) = v11;
  *(void *)(a2 + 32) = v12;
  *(unsigned char *)(a2 + 40) = v13;
  *uint64_t v7 = v14;
  v7[1] = v15;
  *(unsigned char *)(a2 + v8) = v16;
  return result;
}

uint64_t sub_37E470(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, unsigned __int8 a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned __int8 a20)
{
  uint64_t v63 = a7;
  int v62 = a20;
  uint64_t v61 = a19;
  int v71 = a16;
  uint64_t v69 = a13;
  uint64_t v70 = a8;
  uint64_t v58 = a12;
  uint64_t v59 = a15;
  uint64_t v56 = a1;
  uint64_t v57 = a11;
  int v25 = a4 & 1;
  int v67 = a14 & 1;
  int v68 = a10;
  uint64_t v66 = a18;
  uint64_t v60 = a17;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C03E0);
  unint64_t v27 = (int *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v52 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v52 - v31;
  *(void *)uint64_t v32 = a1;
  *((void *)v32 + 1) = a2;
  uint64_t v55 = a3;
  *((void *)v32 + 2) = a3;
  int v54 = v25;
  v32[24] = v25;
  uint64_t v64 = a5;
  *((void *)v32 + 4) = a5;
  int v65 = a6;
  v32[40] = a6;
  long long v33 = (char *)&v52 + v27[22] - v31;
  uint64_t v34 = sub_3D4780();
  uint64_t v35 = *(void (**)(void))(*(void *)(v34 - 8) + 16);
  uint64_t v53 = v33;
  ((void (*)(char *, uint64_t, uint64_t))v35)(v33, v63, v34);
  uint64_t v36 = &v32[v27[26]];
  *(void *)uint64_t v36 = v70;
  *((void *)v36 + 1) = a9;
  uint64_t v63 = a9;
  uint64_t v38 = v58;
  uint64_t v37 = v59;
  v32[v27[30]] = v68;
  uint64_t v39 = v57;
  *(void *)uint64_t v29 = v57;
  *((void *)v29 + 1) = v38;
  *((void *)v29 + 2) = v69;
  v29[24] = v67;
  *((void *)v29 + 4) = v37;
  v29[40] = v71;
  uint64_t v52 = &v29[v27[22]];
  v35();
  uint64_t v40 = v56;
  char v41 = v62;
  uint64_t v42 = v61;
  os_log_t v43 = &v29[v27[26]];
  *(void *)os_log_t v43 = v66;
  *((void *)v43 + 1) = v42;
  v29[v27[30]] = v41;
  if (v40 == v39 && a2 == v38 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = v64;
    int v45 = v65;
    sub_54DC8(v64, v65);
    uint64_t v46 = v63;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v47 = v37;
    uint64_t v48 = v37;
    unsigned __int8 v49 = v71;
    sub_54DC8(v47, v71);
    swift_bridgeObjectRetain();
    char v50 = sub_3867EC(v55, v54, v44, v45, (uint64_t)v53, v70, v46, v68 & 1, v69, v67, v48, v49, (uint64_t)v52, v66, v42, v41 & 1);
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_54DC8(v64, v65);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_54DC8(v37, v71);
    swift_bridgeObjectRetain();
    char v50 = 0;
  }
  sub_250FC((uint64_t)v29, &qword_4C03E0);
  sub_250FC((uint64_t)v32, &qword_4C03E0);
  return v50 & 1;
}

uint64_t sub_37E7D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  int v9 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_4C03E0);
  uint64_t v11 = v10[24];
  return sub_37E470(v4, v5, v6, v7, v8, v9, a1 + v10[20], *(void *)(a1 + v11), *(void *)(a1 + v11 + 8), *(unsigned char *)(a1 + v10[28]), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16), *(unsigned char *)(a2 + 24), *(void *)(a2 + 32), *(unsigned char *)(a2 + 40), a2 + v10[20], *(void *)(a2 + v11), *(void *)(a2 + v11 + 8),
           *(unsigned char *)(a2 + v10[28])) & 1;
}

uint64_t sub_37E8BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  uint64_t v41 = a7;
  int v45 = a6;
  uint64_t v37 = a1;
  uint64_t v38 = a3;
  uint64_t v50 = a9;
  uint64_t v46 = a13;
  *(void *)&long long v47 = a8;
  uint64_t v43 = a5;
  uint64_t v44 = a12;
  int v42 = a11;
  uint64_t v17 = sub_3D4780();
  uint64_t v39 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v48 = *(void *)(v18 + 64);
  __chkstk_darwin(v17);
  unsigned __int8 v49 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for ShowEpisodesShelvesProvider.Info(0);
  char v21 = (int *)(v20 - 8);
  __n128 v22 = __chkstk_darwin(v20);
  char v24 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v25 = &v24[v21[9]];
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v18 + 16);
  v40(v25, a7, v17, v22);
  sub_18168(a14, (uint64_t)&v24[v21[14]]);
  *(void *)char v24 = v37;
  *((void *)v24 + 1) = a2;
  *((void *)v24 + 2) = v38;
  v24[24] = a4 & 1;
  uint64_t v27 = v43;
  uint64_t v26 = v44;
  *((void *)v24 + 4) = v43;
  LOBYTE(v17) = v45;
  v24[40] = v45;
  uint64_t v28 = &v24[v21[10]];
  uint64_t v29 = v46;
  *(void *)uint64_t v28 = v47;
  *((void *)v28 + 1) = a10;
  v24[v21[11]] = v42;
  *(void *)&v24[v21[12]] = v26;
  *(void *)&v24[v21[13]] = v29;
  uint64_t v30 = v21[15];
  long long v47 = *(_OWORD *)(a14 + 40);
  *(_OWORD *)&v24[v30] = v47;
  swift_bridgeObjectRetain();
  sub_54DC8(v27, v17);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v31 = sub_37ECB4();
  sub_386724((uint64_t)v24, type metadata accessor for ShowEpisodesShelvesProvider.Info);
  uint64_t v51 = v31;
  uint64_t v32 = v49;
  uint64_t v33 = v39;
  ((void (*)(char *, uint64_t, uint64_t))v40)(v49, v41, v39);
  unint64_t v34 = (*(unsigned __int8 *)(v18 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v35 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v18 + 32))(v35 + v34, v32, v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4ABBE0);
  type metadata accessor for ShowEpisodesShelvesProvider.Result(0);
  sub_3D6E4(&qword_4ABBE8, &qword_4ABBE0);
  sub_3D5B40();
  swift_release();
  return swift_release();
}

uint64_t sub_37EBE8(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_37EC20()
{
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_37EC70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, unsigned __int8 a11)
{
  return sub_37E8BC(a1, a2, a3, a4 & 1, a5, a6, a7, a8, a9, a10, a11, *(void *)(v11 + 16), *(void *)(v11 + 24), v11 + 32);
}

uint64_t sub_37ECB4()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0560);
  uint64_t v40 = *(void *)(v1 - 8);
  uint64_t v41 = v1;
  __chkstk_darwin(v1);
  uint64_t v39 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ShowEpisodesShelvesProvider.Info(0);
  uint64_t v4 = v3 - 8;
  uint64_t v49 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v50 = v5;
  uint64_t v52 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0568);
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v43 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0570);
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v48 = v7;
  __chkstk_darwin(v7);
  int v45 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_3D4780();
  uint64_t v53 = *(void *)(v9 - 8);
  uint64_t v54 = v9;
  __chkstk_darwin(v9);
  int v42 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0578);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v0 + *(int *)(v4 + 60);
  uint64_t v16 = *(void *)(v15 + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v18 = *(int *)(v4 + 36);
  uint64_t v51 = v0;
  uint64_t v19 = v0 + v18;
  uint64_t v56 = LibraryDataProviderProtocol.episodeListPublisher(settings:pageSize:)(v0 + v18, 12, ObjectType, v16);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9820);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4C0580);
  sub_3D6E4(&qword_4B9830, (uint64_t *)&unk_4B9820);
  sub_3D5B40();
  swift_release();
  sub_3D6E4(&qword_4C0588, &qword_4C0578);
  uint64_t v20 = sub_3D5AC0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (sub_3D4730())
  {
    char v21 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v42, v19, v54);
    sub_3D4740();
    uint64_t v22 = *(void *)(v15 + 8);
    uint64_t v23 = swift_getObjectType();
    uint64_t v55 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 344))(v21, v23, v22);
    uint64_t v56 = v20;
    __swift_instantiateConcreteTypeFromMangledName(&qword_4C0590);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4AD490);
    sub_3D6E4(&qword_4C0598, &qword_4C0590);
    sub_3D6E4(&qword_4AC8F0, &qword_4AD490);
    char v24 = v43;
    sub_3D5B10();
    uint64_t v25 = v52;
    sub_3866BC(v51, v52, type metadata accessor for ShowEpisodesShelvesProvider.Info);
    unint64_t v26 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
    uint64_t v27 = swift_allocObject();
    sub_386784(v25, v27 + v26, type metadata accessor for ShowEpisodesShelvesProvider.Info);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = sub_38133C;
    *(void *)(v28 + 24) = v27;
    __swift_instantiateConcreteTypeFromMangledName(&qword_4A97B8);
    sub_3D6E4(&qword_4C05A8, &qword_4C0568);
    uint64_t v30 = v45;
    uint64_t v29 = v46;
    sub_3D5B40();
    swift_release();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v24, v29);
    sub_3D6E4(&qword_4C05B0, &qword_4C0570);
    uint64_t v31 = v48;
    uint64_t v32 = sub_3D5AC0();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v30, v31);
    (*(void (**)(char *, uint64_t))(v53 + 8))(v21, v54);
  }
  else
  {
    uint64_t v56 = v20;
    uint64_t v33 = v52;
    sub_3866BC(v51, v52, type metadata accessor for ShowEpisodesShelvesProvider.Info);
    unint64_t v34 = (*(unsigned __int8 *)(v49 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
    uint64_t v35 = swift_allocObject();
    sub_386784(v33, v35 + v34, type metadata accessor for ShowEpisodesShelvesProvider.Info);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4C0590);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4A97B8);
    sub_3D6E4(&qword_4C0598, &qword_4C0590);
    uint64_t v36 = v39;
    sub_3D5B40();
    swift_release();
    sub_3D6E4(&qword_4C05A0, &qword_4C0560);
    uint64_t v37 = v41;
    uint64_t v32 = sub_3D5AC0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v36, v37);
  }
  return v32;
}

uint64_t sub_37F4F0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = (char *)a3 + *(int *)(type metadata accessor for ShowEpisodesShelvesProvider.Result(0) + 20);
  uint64_t v7 = sub_3D4780();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v6, a2, v7);
  *a3 = v5;

  return swift_bridgeObjectRetain();
}

uint64_t sub_37F584(uint64_t *a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, void, void, char))
{
  uint64_t v4 = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = a1[2];
  uint64_t v7 = *((unsigned __int8 *)a1 + 24);
  uint64_t v8 = a1[4];
  uint64_t v9 = *((unsigned __int8 *)a1 + 40);
  uint64_t v10 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_4C03E0);
  char v12 = *((unsigned char *)a1 + v10[28]);
  return a2(v4, v5, v6, v7, v8, v9, (char *)a1 + v10[20], *(uint64_t *)((char *)a1 + v10[24]), *(uint64_t *)((char *)a1 + v10[24] + 8), v12);
}

uint64_t sub_37F640()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_37F678(uint64_t *a1)
{
  return sub_37F584(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, void, void, char))(v1 + 16));
}

uint64_t destroy for ShowEpisodesShelvesProvider(uint64_t a1)
{
  __swift_destroy_boxed_opaque_existential_1(a1);

  return swift_unknownObjectRelease();
}

uint64_t initializeWithCopy for ShowEpisodesShelvesProvider(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for ShowEpisodesShelvesProvider(uint64_t *a1, uint64_t *a2)
{
  __swift_assign_boxed_opaque_existential_1(a1, a2);
  uint64_t v4 = a2[6];
  a1[5] = a2[5];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  a1[6] = v4;
  return a1;
}

uint64_t assignWithTake for ShowEpisodesShelvesProvider(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_1(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  uint64_t v7 = *(void *)(a2 + 48);
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  swift_unknownObjectRelease();
  *(void *)(a1 + 48) = v7;
  return a1;
}

ValueMetadata *type metadata accessor for ShowEpisodesShelvesProvider()
{
  return &type metadata for ShowEpisodesShelvesProvider;
}

uint64_t *initializeBufferWithCopyOfBuffer for ShowEpisodesShelvesProvider.Result(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_3D4780();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t destroy for ShowEpisodesShelvesProvider.Result(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_3D4780();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

void *initializeWithCopy for ShowEpisodesShelvesProvider.Result(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_3D4780();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

void *assignWithCopy for ShowEpisodesShelvesProvider.Result(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_3D4780();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

void *initializeWithTake for ShowEpisodesShelvesProvider.Result(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_3D4780();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for ShowEpisodesShelvesProvider.Result(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_3D4780();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for ShowEpisodesShelvesProvider.Result(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_37FB74);
}

uint64_t sub_37FB74(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_3D4780();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for ShowEpisodesShelvesProvider.Result(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_37FC38);
}

void *sub_37FC38(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *double result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_3D4780();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ShowEpisodesShelvesProvider.Result(uint64_t a1)
{
  return sub_2595C(a1, qword_4C0478);
}

uint64_t sub_37FD00()
{
  uint64_t result = sub_3D4780();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_37FD9C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v26 = *a2;
    *(void *)a1 = *a2;
    a1 = v26 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v7;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v8 = a2[4];
    char v9 = *((unsigned char *)a2 + 40);
    swift_bridgeObjectRetain();
    sub_54DC8(v8, v9);
    *(void *)(a1 + 32) = v8;
    *(unsigned char *)(a1 + 40) = v9;
    uint64_t v10 = a3[7];
    uint64_t v11 = a1 + v10;
    uint64_t v12 = (uint64_t)a2 + v10;
    uint64_t v13 = sub_3D4780();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    uint64_t v14 = a3[8];
    uint64_t v15 = a3[9];
    uint64_t v16 = (void *)(a1 + v14);
    uint64_t v17 = (uint64_t *)((char *)a2 + v14);
    uint64_t v18 = v17[1];
    *uint64_t v16 = *v17;
    v16[1] = v18;
    *(unsigned char *)(a1 + v15) = *((unsigned char *)a2 + v15);
    uint64_t v19 = a3[11];
    *(void *)(a1 + a3[10]) = *(uint64_t *)((char *)a2 + a3[10]);
    *(void *)(a1 + v19) = *(uint64_t *)((char *)a2 + v19);
    uint64_t v20 = a3[12];
    uint64_t v21 = a1 + v20;
    uint64_t v22 = (uint64_t)a2 + v20;
    long long v23 = *(_OWORD *)((char *)a2 + v20 + 24);
    *(_OWORD *)(a1 + v20 + 24) = v23;
    uint64_t v24 = v23;
    uint64_t v25 = **(void (***)(uint64_t, uint64_t, uint64_t))(v23 - 8);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    v25(v21, v22, v24);
    *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
    swift_unknownObjectRetain();
  }
  return a1;
}

uint64_t sub_37FF70(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  sub_54DDC(*(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = sub_3D4780();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1 + *(int *)(a2 + 48));

  return swift_unknownObjectRelease();
}

uint64_t sub_38003C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  sub_54DC8(v7, v8);
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 40) = v8;
  uint64_t v9 = a3[7];
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_3D4780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = a3[9];
  uint64_t v15 = (void *)(a1 + v13);
  uint64_t v16 = (void *)(a2 + v13);
  uint64_t v17 = v16[1];
  void *v15 = *v16;
  v15[1] = v17;
  *(unsigned char *)(a1 + v14) = *(unsigned char *)(a2 + v14);
  uint64_t v18 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  uint64_t v19 = a3[12];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  long long v22 = *(_OWORD *)(a2 + v19 + 24);
  *(_OWORD *)(a1 + v19 + 24) = v22;
  uint64_t v23 = v22;
  uint64_t v24 = **(void (***)(uint64_t, uint64_t, uint64_t))(v22 - 8);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v24(v20, v21, v23);
  *(_OWORD *)(a1 + a3[13]) = *(_OWORD *)(a2 + a3[13]);
  swift_unknownObjectRetain();
  return a1;
}

uint64_t sub_3801C0(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  char v8 = *(unsigned char *)(a2 + 40);
  sub_54DC8(v7, v8);
  uint64_t v9 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = v7;
  char v10 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v8;
  sub_54DDC(v9, v10);
  uint64_t v11 = a3[7];
  uint64_t v12 = a1 + v11;
  uint64_t v13 = a2 + v11;
  uint64_t v14 = sub_3D4780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v12, v13, v14);
  uint64_t v15 = a3[8];
  uint64_t v16 = (void *)(a1 + v15);
  uint64_t v17 = (void *)(a2 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  swift_retain();
  swift_release();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_retain();
  swift_release();
  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + a3[12]), (uint64_t *)(a2 + a3[12]));
  uint64_t v18 = a3[13];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  uint64_t v21 = v20[1];
  *uint64_t v19 = *v20;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  v19[1] = v21;
  return a1;
}

uint64_t sub_380344(uint64_t a1, uint64_t a2, int *a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v6 = a3[7];
  uint64_t v7 = a1 + v6;
  uint64_t v8 = a2 + v6;
  uint64_t v9 = sub_3D4780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v10) = *(unsigned char *)(a2 + v10);
  uint64_t v11 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  uint64_t v12 = a3[12];
  uint64_t v13 = a3[13];
  uint64_t v14 = a1 + v12;
  uint64_t v15 = a2 + v12;
  long long v16 = *(_OWORD *)(v15 + 16);
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  *(_OWORD *)(v14 + 16) = v16;
  *(void *)(v14 + 32) = *(void *)(v15 + 32);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  return a1;
}

uint64_t sub_38043C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 40);
  uint64_t v8 = *(void *)(a1 + 32);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  char v9 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a1 + 40) = v7;
  sub_54DDC(v8, v9);
  uint64_t v10 = a3[7];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_3D4780();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  uint64_t v14 = a3[8];
  uint64_t v15 = (void *)(a1 + v14);
  long long v16 = (uint64_t *)(a2 + v14);
  uint64_t v18 = *v16;
  uint64_t v17 = v16[1];
  void *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  swift_release();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_release();
  uint64_t v20 = a3[12];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = a2 + v20;
  __swift_destroy_boxed_opaque_existential_1(a1 + v20);
  long long v23 = *(_OWORD *)(v22 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
  *(_OWORD *)(v21 + 16) = v23;
  *(void *)(v21 + 32) = *(void *)(v22 + 32);
  uint64_t v24 = a3[13];
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  uint64_t v27 = v26[1];
  void *v25 = *v26;
  swift_unknownObjectRelease();
  v25[1] = v27;
  return a1;
}

uint64_t sub_38058C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3805A0);
}

uint64_t sub_3805A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_3D4780();
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_380650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_380664);
}

uint64_t sub_380664(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_3D4780();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for ShowEpisodesShelvesProvider.Info(uint64_t a1)
{
  return sub_2595C(a1, qword_4C0508);
}

uint64_t sub_38072C()
{
  uint64_t result = sub_3D4780();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ShowEpisodesShelvesProvider.Info.DropDownOptionsInfo(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ShowEpisodesShelvesProvider.Info.DropDownOptionsInfo(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *uint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x38095CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ShowEpisodesShelvesProvider.Info.DropDownOptionsInfo()
{
  return &type metadata for ShowEpisodesShelvesProvider.Info.DropDownOptionsInfo;
}

uint64_t sub_380994()
{
  uint64_t v1 = sub_3D4780();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_380A24@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_3D4780() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_37F4F0(a1, v6, a2);
}

uint64_t sub_380AA4@<X0>(uint64_t a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9860);
  sub_3D5260();
  uint64_t result = sub_3D5230();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_380AF4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *(unsigned int (**)(char *, uint64_t, uint64_t))(a1 + 8);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_380BCC(v4, v3, (uint64_t)v3);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5;
  return result;
}

uint64_t sub_380B4C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  type metadata accessor for ShowEpisodesShelvesProvider.Info(0);

  return sub_380AF4(a1, a2);
}

uint64_t sub_380BCC(uint64_t a1, unsigned int (*a2)(char *, uint64_t, uint64_t), uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C05B8);
  __chkstk_darwin(v6 - 8);
  int v8 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C05C0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v51 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = a1;
  uint64_t v56 = v8;
  uint64_t v57 = a2;
  uint64_t v54 = v12;
  if (a3 < 13)
  {
    swift_bridgeObjectRetain();
    unint64_t v21 = a1;
    goto LABEL_22;
  }
  uint64_t v13 = v9;
  uint64_t v14 = (unint64_t)a1 >> 62;
  if (!((unint64_t)a1 >> 62))
  {
    if (*(uint64_t *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8)) >= 8) {
      uint64_t v15 = 8;
    }
    else {
      uint64_t v15 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    }
    swift_bridgeObjectRetain();
    if ((a1 & 0xC000000000000001) == 0) {
      goto LABEL_10;
    }
    goto LABEL_7;
  }
  if (a1 < 0) {
    uint64_t v18 = a1;
  }
  else {
    uint64_t v18 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  int64_t v20 = sub_3D8D90();
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_3D8D90();
  swift_bridgeObjectRelease();
  if (v19 < 0)
  {
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v20 >= 8) {
    uint64_t v49 = 8;
  }
  else {
    uint64_t v49 = v20;
  }
  if (v20 >= 0) {
    uint64_t v15 = v49;
  }
  else {
    uint64_t v15 = 8;
  }
  swift_bridgeObjectRetain();
  uint64_t v50 = sub_3D8D90();
  swift_bridgeObjectRelease();
  if (v50 < v15) {
    __break(1u);
  }
  a1 = v55;
  if ((v55 & 0xC000000000000001) != 0)
  {
LABEL_7:
    if (v15)
    {
      type metadata accessor for LibraryEpisodeLockup();
      Swift::Int v16 = 0;
      do
      {
        Swift::Int v17 = v16 + 1;
        sub_3D8BE0(v16);
        Swift::Int v16 = v17;
      }
      while (v15 != v17);
    }
  }
LABEL_10:
  if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_3D8DA0();
    uint64_t v19 = v22;
    uint64_t v18 = v23;
    int64_t v20 = v24;
    swift_bridgeObjectRelease_n();
    if (v20) {
      goto LABEL_16;
    }
LABEL_15:
    unint64_t v21 = (unint64_t)sub_2A77DC(v14, v19, v18, v20);
    swift_unknownObjectRelease();
    uint64_t v9 = v13;
    goto LABEL_22;
  }
  uint64_t v18 = 0;
  uint64_t v14 = a1 & 0xFFFFFFFFFFFFFF8;
  uint64_t v19 = (a1 & 0xFFFFFFFFFFFFFF8) + 32;
  int64_t v20 = (2 * v15) | 1;
  if ((v20 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_16:
  sub_3D9000();
  swift_unknownObjectRetain_n();
  uint64_t v25 = (void *)swift_dynamicCastClass();
  if (!v25)
  {
    swift_unknownObjectRelease();
    uint64_t v25 = _swiftEmptyArrayStorage;
  }
  uint64_t v26 = v25[2];
  swift_release();
  if (__OFSUB__((unint64_t)v20 >> 1, v18)) {
    goto LABEL_33;
  }
  if (v26 != ((unint64_t)v20 >> 1) - v18)
  {
LABEL_34:
    swift_unknownObjectRelease();
    a2 = v57;
    goto LABEL_15;
  }
  unint64_t v21 = swift_dynamicCastClass();
  swift_unknownObjectRelease();
  a2 = v57;
  uint64_t v9 = v13;
  if (!v21)
  {
    swift_unknownObjectRelease();
    unint64_t v21 = (unint64_t)_swiftEmptyArrayStorage;
  }
LABEL_22:
  uint64_t v27 = v9;
  uint64_t v28 = (uint64_t *)&v11[*(int *)(v9 + 48)];
  uint64_t v53 = v11;
  uint64_t v29 = sub_381408((uint64_t)v11, (uint64_t)a2);
  uint64_t v31 = v30;
  uint64_t *v28 = v29;
  v28[1] = v30;
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v44 = sub_3D8D90();
    swift_bridgeObjectRelease();
    if (v44) {
      goto LABEL_24;
    }
LABEL_26:
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_4A99F8);
    uint64_t v45 = *(void *)(type metadata accessor for ModernShelf() - 8);
    unint64_t v46 = (*(unsigned __int8 *)(v45 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_3DED90;
    uint64_t v43 = v35 + v46;
    uint64_t v38 = (uint64_t)v56;
    uint64_t v47 = (uint64_t *)&v56[*(int *)(v27 + 48)];
    uint64_t v40 = (uint64_t)v53;
    sub_153B4((uint64_t)v53, (uint64_t)v56, &qword_4B1FE0);
    uint64_t *v47 = v29;
    v47[1] = v31;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v38, 0, 1, v27);
    goto LABEL_27;
  }
  uint64_t v32 = *(void *)((char *)&dword_10 + (v21 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v32) {
    goto LABEL_26;
  }
LABEL_24:
  __swift_instantiateConcreteTypeFromMangledName(&qword_4A99F8);
  uint64_t v33 = *(void *)(type metadata accessor for ModernShelf() - 8);
  uint64_t v51 = *(void *)(v33 + 72);
  unint64_t v34 = (*(unsigned __int8 *)(v33 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_3DED20;
  uint64_t v36 = (uint64_t *)(v35 + v34);
  uint64_t v37 = *(int *)(v27 + 48);
  uint64_t v52 = a3;
  uint64_t v38 = (uint64_t)v56;
  uint64_t v39 = (uint64_t *)&v56[v37];
  uint64_t v40 = (uint64_t)v53;
  sub_153B4((uint64_t)v53, (uint64_t)v56, &qword_4B1FE0);
  uint64_t *v39 = v29;
  v39[1] = v31;
  uint64_t v41 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v54 + 56);
  v41(v38, 0, 1, v27);
  uint64_t v42 = sub_1B5618(v21);
  swift_bridgeObjectRelease();
  sub_381FE8(v38, v42, v36);
  swift_bridgeObjectRelease();
  sub_250FC(v38, &qword_4C05B8);
  uint64_t v43 = (uint64_t)v36 + v51;
  v41(v38, 1, 1, v27);
  a3 = v52;
LABEL_27:
  sub_381754(v38, v55, v57, a3, v43);
  sub_250FC(v38, &qword_4C05B8);
  sub_250FC(v40, &qword_4C05C0);
  return v35;
}

uint64_t objectdestroy_16Tm()
{
  uint64_t v1 = (int *)(type metadata accessor for ShowEpisodesShelvesProvider.Info(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v3 + *(void *)(*(void *)v1 + 64);
  uint64_t v5 = v2 | 7;
  uint64_t v6 = v0 + v3;
  swift_bridgeObjectRelease();
  sub_54DDC(*(void *)(v6 + 32), *(unsigned char *)(v6 + 40));
  uint64_t v7 = v6 + v1[9];
  uint64_t v8 = sub_3D4780();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v6 + v1[14]);
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, v4, v5);
}

uint64_t sub_38133C(uint64_t a1, uint64_t a2, unsigned int (*a3)(char *, uint64_t, uint64_t))
{
  type metadata accessor for ShowEpisodesShelvesProvider.Info(0);
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = sub_380BCC(v5, a3, a2);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_3813CC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void, void))(v2 + 16))(*a1, a1[1], a1[2]);
  *a2 = result;
  return result;
}

uint64_t sub_381408(uint64_t a1, uint64_t a2)
{
  uint64_t v26 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v4 - 8);
  uint64_t v25 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9880);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AC9F0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (unint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a2)
  {
    uint64_t v12 = *(void *)(v2 + 32);
    char v13 = *(unsigned char *)(v2 + 40);
    sub_54DC8(v12, v13);
  }
  else
  {
    uint64_t v12 = 0;
    char v13 = 2;
  }
  uint64_t v24 = sub_3826A0(v12, v13);
  uint64_t v27 = 0;
  unint64_t v28 = 0xE000000000000000;
  sub_3D8BC0(21);
  swift_bridgeObjectRelease();
  uint64_t v27 = 0x7365646F73697045;
  unint64_t v28 = 0xE90000000000003ALL;
  uint64_t v14 = (uint64_t *)(v2 + *(int *)(type metadata accessor for ShowEpisodesShelvesProvider.Info(0) + 32));
  uint64_t v15 = *v14;
  Swift::Int v16 = (void *)v14[1];
  swift_bridgeObjectRetain();
  v29._countAndFlagsBits = v15;
  v29._object = v16;
  sub_3D7E90(v29);
  swift_bridgeObjectRelease();
  v30._countAndFlagsBits = 0x3A6C6C416565732BLL;
  v30._object = (void *)0xE800000000000000;
  sub_3D7E90(v30);
  v31._countAndFlagsBits = sub_3D4290();
  sub_3D7E90(v31);
  swift_bridgeObjectRelease();
  uint64_t v17 = v27;
  swift_bridgeObjectRetain();
  sub_382B1C(v11);
  uint64_t v18 = type metadata accessor for ActionMenu(0);
  (*(void (**)(unint64_t *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v11, 0, 1, v18);
  *uint64_t v8 = v24;
  uint64_t v19 = type metadata accessor for Header.PrimaryAction(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 0, 1, v19);
  uint64_t v20 = sub_3D3860();
  uint64_t v21 = (uint64_t)v25;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  Header.init(title:subtitle:subtitleSymbolName:displaySubtitleAsEyebrow:hasColoredBackground:titleContextMenu:primaryAction:secondaryButtons:artwork:)(v15, (uint64_t)v16, 0, 0, 0, 0, 0, 0, v26, (uint64_t)v11, (uint64_t)v8, (uint64_t)_swiftEmptyArrayStorage, v21);
  sub_54DDC(v12, v13);
  return v17;
}

uint64_t sub_381754@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unsigned int (*a3)(char *, uint64_t, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v60 = a3;
  uint64_t v61 = a4;
  uint64_t v59 = a5;
  uint64_t v7 = (int *)type metadata accessor for ModernShelf();
  __chkstk_darwin(v7);
  uint64_t v9 = (uint64_t *)((char *)v54 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v10 - 8);
  uint64_t v58 = (char *)v54 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v12 - 8);
  uint64_t v64 = (uint64_t)v54 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1FE0);
  __chkstk_darwin(v14 - 8);
  v54[0] = (uint64_t)v54 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v62 = (uint64_t)v54 - v17;
  uint64_t v18 = &qword_4C05B8;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C05B8);
  __chkstk_darwin(v19 - 8);
  uint64_t v56 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)v54 - v22;
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)v54 - v25;
  uint64_t v27 = type metadata accessor for ShowEpisodesShelvesProvider.Info.Footer(0);
  __chkstk_darwin(v27);
  Swift::String v29 = (char *)v54 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)v54 - v31;
  sub_38484C(a2, (uint64_t)v60, v61, (uint64_t *)((char *)v54 - v31));
  uint64_t v63 = v32;
  sub_3866BC((uint64_t)v32, (uint64_t)v29, type metadata accessor for ShowEpisodesShelvesProvider.Info.Footer);
  unsigned int v33 = 0x12100Fu >> (8 * swift_getEnumCaseMultiPayload());
  sub_386724((uint64_t)v29, type metadata accessor for ShowEpisodesShelvesProvider.Info.Footer);
  sub_3D2800();
  unsigned int v57 = v33;
  ModernShelf.ItemKind.rawValue.getter(v33);
  sub_3D27E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v61 = a1;
  sub_153B4(a1, (uint64_t)v26, &qword_4C05B8);
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C05C0);
  uint64_t v60 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48);
  if (v60(v26, 1, v34) != 1) {
    uint64_t v18 = &qword_4B1FE0;
  }
  sub_250FC((uint64_t)v26, v18);
  sub_3D27E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v55 = sub_3D27F0();
  uint64_t v36 = v35;
  swift_bridgeObjectRelease();
  sub_153B4(v61, (uint64_t)v23, &qword_4C05B8);
  if (v60(v23, 1, v34) == 1)
  {
    sub_250FC((uint64_t)v23, &qword_4C05B8);
    uint64_t v37 = type metadata accessor for Header(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v62, 1, 1, v37);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_18F88((uint64_t)v23, v62, &qword_4B1FE0);
  }
  uint64_t v38 = (uint64_t)v56;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1CC0);
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_3DED90;
  sub_384384((uint64_t *)(v39 + 32));
  uint64_t v40 = sub_3D2350();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 56);
  v54[1] = v41 + 56;
  v56(v64, 1, 1, v40);
  uint64_t v67 = 0;
  long long v65 = 0u;
  long long v66 = 0u;
  swift_bridgeObjectRetain();
  sub_3D4470();
  sub_153B4(v61, v38, &qword_4C05B8);
  if (v60((char *)v38, 1, v34) == 1)
  {
    uint64_t v42 = &qword_4C05B8;
LABEL_10:
    sub_250FC(v38, v42);
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  uint64_t v43 = v38;
  uint64_t v38 = v54[0];
  sub_18F88(v43, v54[0], &qword_4B1FE0);
  uint64_t v44 = type metadata accessor for Header(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 48))(v38, 1, v44) == 1)
  {
    uint64_t v42 = &qword_4B1FE0;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  sub_386724(v38, type metadata accessor for Header);
LABEL_12:
  uint64_t v45 = (uint64_t)v58;
  uint64_t v46 = v55;
  sub_3D72A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v47 = sub_3D7340();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v45, 0, 1, v47);
  uint64_t v48 = (uint64_t *)((char *)v9 + v7[8]);
  *uint64_t v48 = 0;
  v48[1] = 0;
  uint64_t v49 = (uint64_t)v9 + v7[9];
  v56(v49, 1, 1, v40);
  uint64_t *v9 = v46;
  v9[1] = v36;
  sub_18F88(v62, (uint64_t)v9 + v7[5], &qword_4B1FE0);
  uint64_t v50 = (char *)v9 + v7[6];
  *uint64_t v50 = v57;
  v50[1] = 0;
  *((_WORD *)v50 + 3) = 256;
  *(_DWORD *)(v50 + 2) = 0;
  *((void *)v50 + 1) = 1;
  *(uint64_t *)((char *)v9 + v7[7]) = v39;
  sub_4B03C(v64, v49, &qword_4AD7B0);
  *((unsigned char *)v9 + v7[10]) = 1;
  *((unsigned char *)v9 + v7[11]) = 0;
  uint64_t v51 = (uint64_t)v9 + v7[12];
  if (*((void *)&v66 + 1))
  {
    sub_18F70(&v65, v51);
  }
  else
  {
    long long v52 = (unint64_t)v66;
    *(_OWORD *)uint64_t v51 = v65;
    *(_OWORD *)(v51 + 16) = v52;
    *(void *)(v51 + 32) = v67;
  }
  sub_18F88(v45, (uint64_t)v9 + v7[13], (uint64_t *)&unk_4B9870);
  swift_bridgeObjectRelease();
  *uint64_t v48 = 0;
  v48[1] = 0;
  sub_386784((uint64_t)v9, v59, (uint64_t (*)(void))type metadata accessor for ModernShelf);
  return sub_386724((uint64_t)v63, type metadata accessor for ShowEpisodesShelvesProvider.Info.Footer);
}

uint64_t sub_381FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v5 - 8);
  uint64_t v50 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v7 - 8);
  uint64_t v53 = (uint64_t)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1FE0);
  __chkstk_darwin(v9 - 8);
  uint64_t v45 = (char *)&v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v52 = (uint64_t)&v44 - v12;
  uint64_t v13 = &qword_4C05B8;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C05B8);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v44 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v44 - v18;
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v44 - v21;
  sub_3D2800();
  uint64_t v51 = a1;
  sub_153B4(a1, (uint64_t)v22, &qword_4C05B8);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C05C0);
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  uint64_t v26 = v25;
  uint64_t v46 = v24 + 48;
  if (v25(v22, 1, v23) != 1) {
    uint64_t v13 = &qword_4B1FE0;
  }
  sub_250FC((uint64_t)v22, v13);
  sub_3D27E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v48 = sub_3D27F0();
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  sub_153B4(v51, (uint64_t)v19, &qword_4C05B8);
  if (v26(v19, 1, v23) == 1)
  {
    sub_250FC((uint64_t)v19, &qword_4C05B8);
    uint64_t v29 = type metadata accessor for Header(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v52, 1, 1, v29);
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_18F88((uint64_t)v19, v52, &qword_4B1FE0);
  }
  uint64_t v30 = sub_3D2350();
  uint64_t v47 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
  v47(v53, 1, 1, v30);
  uint64_t v56 = 0;
  long long v54 = 0u;
  long long v55 = 0u;
  swift_bridgeObjectRetain();
  sub_3D4470();
  sub_153B4(v51, (uint64_t)v16, &qword_4C05B8);
  if (v26(v16, 1, v23) == 1)
  {
    uint64_t v31 = &qword_4C05B8;
LABEL_10:
    sub_250FC((uint64_t)v16, v31);
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  uint64_t v32 = (uint64_t)v16;
  uint64_t v16 = v45;
  sub_18F88(v32, (uint64_t)v45, &qword_4B1FE0);
  uint64_t v33 = type metadata accessor for Header(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 48))(v16, 1, v33) == 1)
  {
    uint64_t v31 = &qword_4B1FE0;
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  sub_386724((uint64_t)v16, type metadata accessor for Header);
LABEL_12:
  uint64_t v34 = (uint64_t)v50;
  uint64_t v35 = v48;
  sub_3D72A0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v36 = sub_3D7340();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v34, 0, 1, v36);
  uint64_t v37 = (int *)type metadata accessor for ModernShelf();
  uint64_t v38 = (uint64_t *)((char *)a3 + v37[8]);
  void *v38 = 0;
  v38[1] = 0;
  uint64_t v39 = (uint64_t)a3 + v37[9];
  v47(v39, 1, 1, v30);
  *a3 = v35;
  a3[1] = v28;
  sub_18F88(v52, (uint64_t)a3 + v37[5], &qword_4B1FE0);
  uint64_t v40 = (char *)a3 + v37[6];
  *(_WORD *)uint64_t v40 = 9;
  *((_WORD *)v40 + 3) = 256;
  *(_DWORD *)(v40 + 2) = 0;
  *((void *)v40 + 1) = 1;
  *(uint64_t *)((char *)a3 + v37[7]) = v49;
  swift_bridgeObjectRetain();
  sub_4B03C(v53, v39, &qword_4AD7B0);
  *((unsigned char *)a3 + v37[10]) = 1;
  *((unsigned char *)a3 + v37[11]) = 0;
  uint64_t v41 = (uint64_t)a3 + v37[12];
  if (*((void *)&v55 + 1))
  {
    sub_18F70(&v54, v41);
  }
  else
  {
    long long v42 = (unint64_t)v55;
    *(_OWORD *)uint64_t v41 = v54;
    *(_OWORD *)(v41 + 16) = v42;
    *(void *)(v41 + 32) = v56;
  }
  sub_18F88(v34, (uint64_t)a3 + v37[13], (uint64_t *)&unk_4B9870);
  uint64_t result = swift_bridgeObjectRelease();
  void *v38 = 0;
  v38[1] = 0;
  return result;
}

uint64_t sub_3826A0(uint64_t a1, char a2)
{
  uint64_t v5 = sub_3D7260();
  __chkstk_darwin(v5 - 8);
  uint64_t v31 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_3D6F40();
  __chkstk_darwin(v10 - 8);
  uint64_t v29 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for FlowDestination();
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (objc_class *)[self mainBundle];
  v26._countAndFlagsBits = 0xE000000000000000;
  v41._countAndFlagsBits = 0x535F4E4F49544341;
  v41._object = (void *)0xEE004C4C415F4545;
  v44.value._countAndFlagsBits = 0;
  v44.value._object = 0;
  v16.super.Class isa = v15;
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  uint64_t v17 = sub_3D2060(v41, v44, v16, v45, v26);
  uint64_t v30 = v17;
  uint64_t v19 = v18;

  uint64_t v20 = *(void *)(v2 + 8);
  uint64_t v21 = *(void *)(v2 + 16);
  char v22 = *(unsigned char *)(v2 + 24);
  *(void *)uint64_t v14 = *(void *)v2;
  *((void *)v14 + 1) = v20;
  *((void *)v14 + 2) = v21;
  v14[24] = v22;
  *((void *)v14 + 4) = a1;
  v14[40] = a2;
  swift_storeEnumTagMultiPayload();
  uint64_t v33 = v17;
  uint64_t v34 = v19;
  swift_bridgeObjectRetain();
  sub_54DC8(a1, a2);
  swift_bridgeObjectRetain();
  v42._countAndFlagsBits = 43;
  v42._object = (void *)0xE100000000000000;
  sub_3D7E90(v42);
  v43._countAndFlagsBits = sub_3D4290();
  sub_3D7E90(v43);
  swift_bridgeObjectRelease();
  uint64_t v27 = v34;
  uint64_t v28 = v33;
  sub_3D4140();
  sub_3D4440();
  uint64_t v23 = sub_3D2350();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v9, 1, 1, v23);
  sub_3D2F90();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9890);
  sub_3D6D80();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_3DED90;
  sub_3D43A0();
  sub_3D6D10();
  swift_bridgeObjectRelease();
  sub_3D7250();
  uint64_t v24 = (uint64_t)v29;
  sub_3D6F10();
  sub_18F88((uint64_t)&v33, (uint64_t)v40, (uint64_t *)&unk_4B1F80);
  sub_443B4((uint64_t)v40);
  uint64_t v39 = v35;
  sub_443E0((uint64_t)&v39);
  uint64_t v38 = v36;
  sub_443E0((uint64_t)&v38);
  sub_3D4C4(v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_250FC((uint64_t)v9, &qword_4AD7B0);
  __int16 v32 = 0;
  type metadata accessor for FlowAction(0);
  swift_allocObject();
  return FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v14, v28, v27, v30, v19, (char *)&v32 + 1, 0, 48, (char *)&v32, v24);
}

uint64_t sub_382B1C@<X0>(unint64_t *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ShowEpisodesShelvesProvider.Info(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = v10;
  uint64_t v32 = sub_3D3860();
  uint64_t v11 = *(void *)(v32 - 8);
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  uint64_t v33 = v11 + 56;
  v31(v10, 1, 1, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4A97D0);
  uint64_t v12 = *(void *)(type metadata accessor for ActionMenu.Child(0) - 8);
  uint64_t v29 = *(void *)(v12 + 72);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  uint64_t v30 = v14;
  *(_OWORD *)(v14 + 16) = xmmword_3DED20;
  uint64_t v15 = (unint64_t *)(v14 + v13);
  sub_3866BC(v2, (uint64_t)v7, type metadata accessor for ShowEpisodesShelvesProvider.Info);
  unint64_t v16 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v17 = swift_allocObject();
  sub_386784((uint64_t)v7, v17 + v16, type metadata accessor for ShowEpisodesShelvesProvider.Info);
  unint64_t *v15 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  v15[1] = v18;
  void v15[2] = (unint64_t)sub_386F3C;
  v15[3] = v17;
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = (unint64_t *)((char *)v15 + v29);
  sub_3866BC(v28[1], (uint64_t)v7, type metadata accessor for ShowEpisodesShelvesProvider.Info);
  uint64_t v20 = swift_allocObject();
  sub_386784((uint64_t)v7, v20 + v16, type metadata accessor for ShowEpisodesShelvesProvider.Info);
  *uint64_t v19 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  v19[1] = v21;
  v19[2] = (unint64_t)sub_386FB0;
  v19[3] = v20;
  swift_storeEnumTagMultiPayload();
  unint64_t v22 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  unint64_t v24 = v23;
  uint64_t v25 = type metadata accessor for ActionMenu(0);
  uint64_t v26 = (uint64_t)a1 + *(int *)(v25 + 28);
  v31((char *)v26, 1, 1, v32);
  *a1 = v22;
  a1[1] = v24;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0;
  uint64_t result = sub_4B03C((uint64_t)v34, v26, (uint64_t *)&unk_4B1F70);
  *(unint64_t *)((char *)a1 + *(int *)(v25 + 32)) = v30;
  return result;
}

void *sub_382E80(uint64_t a1)
{
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_3871F0(v2);
  swift_bridgeObjectRelease();
  if (*(void *)(v3 + 16) < 6uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    return _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v4 = *(void *)(a1 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain();
      uint64_t v5 = (char *)(a1 + 40);
      do
      {
        uint64_t v6 = *((void *)v5 - 1);
        char v7 = *v5;
        sub_54DC8(v6, *v5);
        if (sub_3D4210())
        {
          sub_54DDC(v6, v7);
        }
        else
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_1FC350(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v9 = _swiftEmptyArrayStorage[2];
          unint64_t v8 = _swiftEmptyArrayStorage[3];
          if (v9 >= v8 >> 1) {
            sub_1FC350(v8 > 1, v9 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v9 + 1;
          uint64_t v10 = &_swiftEmptyArrayStorage[2 * v9];
          void v10[4] = v6;
          *((unsigned char *)v10 + 40) = v7;
        }
        v5 += 16;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
    }
  }
  return (void *)v3;
}

uint64_t sub_382FF4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v42 = a3;
  uint64_t v46 = a4;
  uint64_t v45 = type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v45);
  unint64_t v9 = (unint64_t *)((char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = sub_3D6F40();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v13 - 8);
  uint64_t v43 = (uint64_t)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v39 - v16;
  sub_3D4230();
  Swift::String_optional v44 = v17;
  if (v18)
  {
    swift_bridgeObjectRetain();
    sub_3D3850();
    uint64_t v19 = sub_3D3860();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 0, 1, v19);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v19 = sub_3D3860();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
  }
  uint64_t v20 = sub_3D4290();
  unint64_t v40 = v21;
  uint64_t v41 = v20;
  LODWORD(v42) = sub_3D4280();
  uint64_t v22 = type metadata accessor for ShowEpisodesShelvesProvider.Info(0);
  sub_18168((uint64_t)v5 + *(int *)(v22 + 48), (uint64_t)v48);
  uint64_t v24 = *v5;
  uint64_t v23 = v5[1];
  sub_18168((uint64_t)v48, (uint64_t)v47);
  uint64_t v25 = swift_allocObject();
  sub_18F70(v47, v25 + 16);
  *(void *)(v25 + 56) = v24;
  *(void *)(v25 + 64) = v23;
  *(void *)(v25 + 72) = a1;
  *(unsigned char *)(v25 + 80) = a2;
  swift_bridgeObjectRetain();
  sub_54DC8(a1, a2);
  sub_3D6F00();
  uint64_t v26 = type metadata accessor for ClosureAction();
  swift_allocObject();
  uint64_t v27 = sub_2D152C(0, 0, 32, (uint64_t)v12, (uint64_t)sub_387174, v25);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
  v48[3] = v26;
  v48[4] = sub_387340((unint64_t *)&qword_4AB9B8, (void (*)(uint64_t))type metadata accessor for ClosureAction);
  v48[0] = v27;
  unint64_t v28 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  unint64_t v30 = v29;
  uint64_t v32 = v43;
  uint64_t v31 = (uint64_t)v44;
  sub_153B4((uint64_t)v44, v43, (uint64_t *)&unk_4B1F70);
  sub_153B4((uint64_t)v48, (uint64_t)v47, (uint64_t *)&unk_4BC3D0);
  uint64_t v33 = (int *)v45;
  uint64_t v34 = (uint64_t)v9 + *(int *)(v45 + 24);
  sub_3D3860();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v34, 1, 1, v19);
  uint64_t v35 = v33[7];
  *((unsigned char *)v9 + v35) = 2;
  uint64_t v36 = (uint64_t)v9 + v33[9];
  *(void *)(v36 + 32) = 0;
  *(_OWORD *)uint64_t v36 = 0u;
  *(_OWORD *)(v36 + 16) = 0u;
  unint64_t *v9 = v28;
  v9[1] = v30;
  unint64_t v37 = v40;
  _OWORD v9[2] = v41;
  v9[3] = v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_4B03C(v32, v34, (uint64_t *)&unk_4B1F70);
  *((unsigned char *)v9 + v35) = 2;
  *((unsigned char *)v9 + v33[8]) = (v42 & 1) == 0;
  sub_4B03C((uint64_t)v47, v36, (uint64_t *)&unk_4BC3D0);
  sub_386784((uint64_t)v9, v46, type metadata accessor for ActionMenu.Item);
  type metadata accessor for ActionMenu.Child(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_250FC(v31, (uint64_t *)&unk_4B1F70);
  return sub_250FC((uint64_t)v48, (uint64_t *)&unk_4BC3D0);
}

uint64_t sub_3834C4@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  id v75 = a2;
  uint64_t v4 = type metadata accessor for ActionMenu(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (unint64_t *)((char *)&v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v7 - 8);
  uint64_t v71 = (uint64_t)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v77 = (uint64_t)&v61 - v10;
  uint64_t v72 = type metadata accessor for ActionMenu.Child(0);
  uint64_t v11 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v2 + 32);
  int v15 = *(unsigned __int8 *)(v2 + 40);
  uint64_t v16 = sub_382E80(a1);
  uint64_t v18 = v17;
  uint64_t v78 = _swiftEmptyArrayStorage;
  if (v16[2])
  {
    uint64_t v67 = v11;
    uint64_t v76 = 0;
    char v19 = sub_3D4210();
    uint64_t v73 = v2;
    uint64_t v74 = v4;
    uint64_t v70 = v18;
    long long v66 = v13;
    if (v19)
    {
      uint64_t v64 = sub_3D4290();
      unint64_t v65 = v20;
    }
    else
    {
      uint64_t v22 = (objc_class *)[self mainBundle];
      v60._countAndFlagsBits = 0xE000000000000000;
      v79._countAndFlagsBits = 0x534145535F4C4C41;
      v79._object = (void *)0xEB00000000534E4FLL;
      v81.value._countAndFlagsBits = 0;
      v81.value._object = 0;
      v23.super.Class isa = v22;
      v83._countAndFlagsBits = 0;
      v83._object = (void *)0xE000000000000000;
      uint64_t v64 = sub_3D2060(v79, v81, v23, v83, v60);
      unint64_t v65 = v24;
    }
    uint64_t v25 = v14;
    uint64_t v26 = (objc_class *)[self mainBundle];
    v60._countAndFlagsBits = 0xE000000000000000;
    v80._countAndFlagsBits = 0x545F4E4F53414553;
    v80._object = (void *)0xEC000000454C5449;
    v82.value._countAndFlagsBits = 0;
    v82.value._object = 0;
    v27.super.Class isa = v26;
    v84._countAndFlagsBits = 0;
    v84._object = (void *)0xE000000000000000;
    uint64_t v28 = sub_3D2060(v80, v82, v27, v84, v60);
    unint64_t v62 = v29;
    uint64_t v63 = v28;

    uint64_t v30 = sub_3D3860();
    uint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
    uint64_t v32 = v77;
    uint64_t v33 = v31(v77, 1, 1, v30);
    __chkstk_darwin(v33);
    *(&v61 - 4) = v73;
    *(&v61 - 3) = v25;
    uint64_t v69 = v25;
    int v68 = v15;
    LOBYTE(v60._countAndFlagsBits) = v15;
    uint64_t v34 = v76;
    uint64_t v35 = sub_4FEC0((uint64_t)sub_3870D0, (uint64_t)(&v61 - 6), (uint64_t)v16);
    uint64_t v76 = v34;
    swift_bridgeObjectRelease();
    unint64_t v36 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    unint64_t v38 = v37;
    uint64_t v39 = v32;
    uint64_t v40 = v71;
    sub_153B4(v39, v71, (uint64_t *)&unk_4B1F70);
    uint64_t v41 = v74;
    uint64_t v42 = (uint64_t)v6 + *(int *)(v74 + 28);
    v31(v42, 1, 1, v30);
    *uint64_t v6 = v36;
    v6[1] = v38;
    unint64_t v43 = v62;
    v6[2] = v63;
    v6[3] = v43;
    unint64_t v44 = v65;
    void v6[4] = v64;
    v6[5] = v44;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_4B03C(v40, v42, (uint64_t *)&unk_4B1F70);
    *(unint64_t *)((char *)v6 + *(int *)(v41 + 32)) = (unint64_t)v35;
    uint64_t v45 = (uint64_t)v66;
    sub_386784((uint64_t)v6, (uint64_t)v66, type metadata accessor for ActionMenu);
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_250FC(v77, (uint64_t *)&unk_4B1F70);
    unint64_t v46 = (unint64_t)v78;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v46 = sub_133B4(0, *(void *)(v46 + 16) + 1, 1, v46);
    }
    unint64_t v48 = *(void *)(v46 + 16);
    unint64_t v47 = *(void *)(v46 + 24);
    uint64_t v2 = v73;
    uint64_t v4 = v74;
    LOBYTE(v15) = v68;
    if (v48 >= v47 >> 1) {
      unint64_t v46 = sub_133B4(v47 > 1, v48 + 1, 1, v46);
    }
    *(void *)(v46 + 16) = v48 + 1;
    uint64_t v21 = sub_386784(v45, v46+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(void *)(v67 + 72) * v48, type metadata accessor for ActionMenu.Child);
    uint64_t v78 = (void *)v46;
    uint64_t v14 = v69;
    uint64_t v18 = v70;
  }
  else
  {
    uint64_t v21 = swift_bridgeObjectRelease();
  }
  __chkstk_darwin(v21);
  *(&v61 - 4) = v2;
  *(&v61 - 3) = v14;
  LOBYTE(v60._countAndFlagsBits) = v15;
  uint64_t v49 = sub_4FEC0((uint64_t)sub_3870D0, (uint64_t)(&v61 - 6), v18);
  swift_bridgeObjectRelease();
  sub_28834C((uint64_t)v49);
  uint64_t v50 = sub_3D3860();
  uint64_t v51 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56);
  uint64_t v52 = v77;
  v51(v77, 1, 1, v50);
  uint64_t v53 = v78;
  unint64_t v54 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  unint64_t v56 = v55;
  unsigned int v57 = v75;
  uint64_t v58 = (uint64_t)v75 + *(int *)(v4 + 28);
  v51(v58, 1, 1, v50);
  unint64_t *v57 = v54;
  v57[1] = v56;
  v57[2] = 0;
  v57[3] = 0xE000000000000000;
  v57[4] = 0;
  void v57[5] = 0;
  uint64_t result = sub_4B03C(v52, v58, (uint64_t *)&unk_4B1F70);
  *(unint64_t *)((char *)v57 + *(int *)(v4 + 32)) = (unint64_t)v53;
  return result;
}

uint64_t sub_383B14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v47 = type metadata accessor for ActionMenu.Item(0);
  __chkstk_darwin(v47);
  uint64_t v3 = (unint64_t *)&v42[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_3D6F40();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v42[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v7 - 8);
  unint64_t v46 = &v42[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v42[-v10];
  uint64_t v12 = sub_3D3F60();
  uint64_t v14 = v13;
  int v15 = 1;
  if (v12 != sub_3D3F60() || v14 != v16) {
    int v15 = sub_3D8FE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = (objc_class *)[self mainBundle];
  v51._countAndFlagsBits = 0xD00000000000001CLL;
  v41._countAndFlagsBits = 0xE000000000000000;
  v51._object = (void *)0x800000000040AED0;
  v52.value._countAndFlagsBits = 0;
  v52.value._object = 0;
  v18.super.Class isa = v17;
  v53._countAndFlagsBits = 0;
  v53._object = (void *)0xE000000000000000;
  uint64_t v19 = sub_3D2060(v51, v52, v18, v53, v41);
  unint64_t v44 = v20;
  uint64_t v45 = v19;

  sub_3D3850();
  uint64_t v21 = sub_3D3860();
  uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  v22(v11, 0, 1, v21);
  uint64_t v23 = type metadata accessor for ShowEpisodesShelvesProvider.Info(0);
  sub_18168((uint64_t)v1 + *(int *)(v23 + 48), (uint64_t)v50);
  char v24 = v15;
  int v43 = v15;
  uint64_t v26 = *v1;
  uint64_t v25 = v1[1];
  sub_18168((uint64_t)v50, (uint64_t)v49);
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 16) = v24 & 1;
  sub_18F70(v49, v27 + 24);
  *(void *)(v27 + 64) = v26;
  *(void *)(v27 + 72) = v25;
  swift_bridgeObjectRetain();
  sub_3D6F00();
  uint64_t v28 = type metadata accessor for ClosureAction();
  swift_allocObject();
  uint64_t v29 = sub_2D152C(0, 0, 32, (uint64_t)v6, (uint64_t)sub_387054, v27);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v50);
  v50[3] = v28;
  v50[4] = sub_387340((unint64_t *)&qword_4AB9B8, (void (*)(uint64_t))type metadata accessor for ClosureAction);
  v50[0] = v29;
  unint64_t v30 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
  unint64_t v32 = v31;
  uint64_t v33 = (uint64_t)v11;
  uint64_t v34 = v46;
  sub_153B4((uint64_t)v11, (uint64_t)v46, (uint64_t *)&unk_4B1F70);
  sub_153B4((uint64_t)v50, (uint64_t)v49, (uint64_t *)&unk_4BC3D0);
  uint64_t v35 = (int *)v47;
  uint64_t v36 = (uint64_t)v3 + *(int *)(v47 + 24);
  v22((unsigned char *)v36, 1, 1, v21);
  uint64_t v37 = v35[7];
  *((unsigned char *)v3 + v37) = 2;
  uint64_t v38 = (uint64_t)v3 + v35[9];
  *(void *)(v38 + 32) = 0;
  *(_OWORD *)uint64_t v38 = 0u;
  *(_OWORD *)(v38 + 16) = 0u;
  unint64_t *v3 = v30;
  v3[1] = v32;
  unint64_t v39 = v44;
  void v3[2] = v45;
  v3[3] = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_4B03C((uint64_t)v34, v36, (uint64_t *)&unk_4B1F70);
  *((unsigned char *)v3 + v37) = 2;
  *((unsigned char *)v3 + v35[8]) = (v43 & 1) == 0;
  sub_4B03C((uint64_t)v49, v38, (uint64_t *)&unk_4BC3D0);
  sub_386784((uint64_t)v3, v48, type metadata accessor for ActionMenu.Item);
  type metadata accessor for ActionMenu.Child(0);
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_250FC(v33, (uint64_t *)&unk_4B1F70);
  return sub_250FC((uint64_t)v50, (uint64_t *)&unk_4BC3D0);
}

uint64_t sub_383FFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ActionMenu(0);
  __chkstk_darwin(v3);
  uint64_t v5 = (unint64_t *)((char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v1 + *(int *)(type metadata accessor for ShowEpisodesShelvesProvider.Info(0) + 36)) & 1) != 0
    || (sub_3D4870(), v29 == 17))
  {
    uint64_t v9 = sub_3D3860();
    uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    uint64_t v28 = a1;
    v10(v8, 1, 1, v9);
    unint64_t v11 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    unint64_t v13 = v12;
    uint64_t v14 = v5 + 4;
    uint64_t v15 = (uint64_t)v5 + *(int *)(v3 + 28);
    v10((char *)v15, 1, 1, v9);
    a1 = v28;
    uint64_t v16 = (uint64_t)v8;
    uint64_t v17 = v3;
    unint64_t v18 = v11;
    uint64_t v19 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v20 = sub_3D3860();
    uint64_t v21 = *(void *)(v20 - 8);
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    uint64_t v28 = v21 + 56;
    v27(v8, 1, 1, v20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4A97D0);
    uint64_t v22 = *(void *)(type metadata accessor for ActionMenu.Child(0) - 8);
    uint64_t v16 = (uint64_t)v8;
    uint64_t v17 = v3;
    unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
    uint64_t v19 = (void *)swift_allocObject();
    *((_OWORD *)v19 + 1) = xmmword_3DED90;
    sub_383B14((uint64_t)v19 + v23);
    unint64_t v18 = _s8ShelfKit10ActionMenuV2IDVAEycfC_0();
    unint64_t v13 = v24;
    uint64_t v14 = v5 + 4;
    uint64_t v15 = (uint64_t)v5 + *(int *)(v17 + 28);
    v27((char *)v15, 1, 1, v20);
  }
  *uint64_t v5 = v18;
  v5[1] = v13;
  v5[2] = 0;
  v5[3] = 0xE000000000000000;
  *uint64_t v14 = 0;
  v14[1] = 0;
  sub_4B03C(v16, v15, (uint64_t *)&unk_4B1F70);
  *(unint64_t *)((char *)v5 + *(int *)(v17 + 32)) = (unint64_t)v19;
  return sub_386784((uint64_t)v5, a1, type metadata accessor for ActionMenu);
}

uint64_t sub_38430C@<X0>(unint64_t *a1@<X8>)
{
  type metadata accessor for ShowEpisodesShelvesProvider.Info(0);
  sub_3D4870();
  if (v4) {
    uint64_t v2 = v4;
  }
  else {
    uint64_t v2 = _swiftEmptyArrayStorage;
  }
  sub_3834C4((uint64_t)v2, a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_384384@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = type metadata accessor for Information();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ShowEpisodesShelvesProvider.Info.Footer(0);
  __chkstk_darwin(v9);
  unint64_t v11 = (uint64_t *)((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_3866BC(v1, (uint64_t)v11, type metadata accessor for ShowEpisodesShelvesProvider.Info.Footer);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v14 = *v11;
      uint64_t v13 = v11[1];
      uint64_t v15 = v11[2];
      *(void *)&long long v31 = v14;
      *((void *)&v31 + 1) = v13;
      swift_bridgeObjectRetain();
      v34._countAndFlagsBits = 43;
      v34._object = (void *)0xE100000000000000;
      sub_3D7E90(v34);
      uint64_t v16 = *(void *)(v15 + 16);
      uint64_t v17 = *(void **)(v15 + 24);
      swift_bridgeObjectRetain();
      v35._countAndFlagsBits = v16;
      v35._object = v17;
      sub_3D7E90(v35);
      swift_bridgeObjectRelease();
      long long v18 = v31;
      *((void *)&v32 + 1) = type metadata accessor for Action();
      uint64_t v33 = sub_387340((unint64_t *)&qword_4ABB38, (void (*)(uint64_t))type metadata accessor for Action);
      *(void *)&long long v31 = v15;
      uint64_t v19 = sub_3D7340();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 1, 1, v19);
      a1[3] = v3;
      a1[4] = sub_387340(&qword_4AE5B8, (void (*)(uint64_t))type metadata accessor for Information);
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(a1);
      *(_OWORD *)uint64_t v5 = v18;
      *((void *)v5 + 2) = v14;
      *((void *)v5 + 3) = v13;
      *((_OWORD *)v5 + 2) = 0u;
      *((_OWORD *)v5 + 3) = 0u;
      sub_153B4((uint64_t)&v31, (uint64_t)(v5 + 64), (uint64_t *)&unk_4BC3D0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_4AE5B0);
      uint64_t v21 = swift_allocObject();
      *(_DWORD *)(v21 + 20) = 0;
      *(unsigned char *)(v21 + 16) = 1;
      swift_retain();
      sub_250FC((uint64_t)&v31, (uint64_t *)&unk_4BC3D0);
      *((void *)v5 + 13) = v21;
      sub_18F88((uint64_t)v8, (uint64_t)&v5[*(int *)(v3 + 40)], (uint64_t *)&unk_4B9870);
      sub_386784((uint64_t)v5, (uint64_t)boxed_opaque_existential_2Tm, (uint64_t (*)(void))type metadata accessor for Information);
      return swift_release();
    }
    a1[3] = type metadata accessor for Link();
    a1[4] = sub_387340(&qword_4A9C28, (void (*)(uint64_t))type metadata accessor for Link);
    unint64_t v30 = __swift_allocate_boxed_opaque_existential_2Tm(a1);
    uint64_t v28 = type metadata accessor for Link;
    uint64_t v29 = (uint64_t)v11;
  }
  else
  {
    uint64_t v24 = *v11;
    uint64_t v23 = v11[1];
    uint64_t v25 = sub_3D7340();
    long long v31 = 0u;
    long long v32 = 0u;
    uint64_t v33 = 0;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v8, 1, 1, v25);
    a1[3] = v3;
    a1[4] = sub_387340(&qword_4AE5B8, (void (*)(uint64_t))type metadata accessor for Information);
    uint64_t v26 = __swift_allocate_boxed_opaque_existential_2Tm(a1);
    *(void *)uint64_t v5 = v24;
    *((void *)v5 + 1) = v23;
    *((void *)v5 + 2) = v24;
    *((void *)v5 + 3) = v23;
    *((void *)v5 + 4) = 0;
    *((void *)v5 + 5) = 0;
    *((void *)v5 + 6) = 0;
    *((void *)v5 + 7) = 0xE000000000000000;
    sub_153B4((uint64_t)&v31, (uint64_t)(v5 + 64), (uint64_t *)&unk_4BC3D0);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4AE5B0);
    uint64_t v27 = swift_allocObject();
    *(_DWORD *)(v27 + 20) = 0;
    *(unsigned char *)(v27 + 16) = 0;
    swift_bridgeObjectRetain();
    sub_250FC((uint64_t)&v31, (uint64_t *)&unk_4BC3D0);
    *((void *)v5 + 13) = v27;
    sub_18F88((uint64_t)v8, (uint64_t)&v5[*(int *)(v3 + 40)], (uint64_t *)&unk_4B9870);
    uint64_t v28 = type metadata accessor for Information;
    uint64_t v29 = (uint64_t)v5;
    unint64_t v30 = v26;
  }
  return sub_386784(v29, (uint64_t)v30, (uint64_t (*)(void))v28);
}

uint64_t sub_38484C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a3 >= a2)
  {
    if (a2 >= 13)
    {
      sub_384E6C(a2, a4);
      type metadata accessor for ShowEpisodesShelvesProvider.Info.Footer(0);
      goto LABEL_12;
    }
    if (a2 < 1) {
      uint64_t v14 = sub_3D4240();
    }
    else {
      uint64_t v14 = sub_385534(a1, a2);
    }
    *a4 = v14;
    a4[1] = v15;
  }
  else
  {
    uint64_t v7 = (objc_class *)[self mainBundle];
    if (a3)
    {
      v23._countAndFlagsBits = 0xD000000000000015;
      v21._countAndFlagsBits = 0xE000000000000000;
      v23._object = (void *)0x800000000040AB40;
      v25.value._countAndFlagsBits = 0;
      v25.value._object = 0;
      v8.super.Class isa = v7;
      v27._countAndFlagsBits = 0;
      v27._object = (void *)0xE000000000000000;
      sub_3D2060(v23, v25, v8, v27, v21);

      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B2460);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_3DED90;
      *(void *)(v9 + 56) = &type metadata for Int;
      *(void *)(v9 + 64) = &protocol witness table for Int;
      *(void *)(v9 + 32) = a3;
      uint64_t v10 = sub_3D7D80();
      uint64_t v12 = v11;
      swift_bridgeObjectRelease();
      uint64_t v13 = sub_384A5C(a2);
      *a4 = v10;
      a4[1] = v12;
      a4[2] = v13;
      type metadata accessor for ShowEpisodesShelvesProvider.Info.Footer(0);
      goto LABEL_12;
    }
    v21._countAndFlagsBits = 0xE000000000000000;
    v24._object = (void *)0x800000000040AB60;
    v24._countAndFlagsBits = 0xD000000000000014;
    v26.value._countAndFlagsBits = 0;
    v26.value._object = 0;
    v16.super.Class isa = v7;
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    uint64_t v17 = sub_3D2060(v24, v26, v16, v28, v21);
    uint64_t v19 = v18;

    *a4 = v17;
    a4[1] = v19;
  }
  type metadata accessor for ShowEpisodesShelvesProvider.Info.Footer(0);
LABEL_12:

  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_384A5C(uint64_t a1)
{
  uint64_t v3 = sub_3D7260();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_3D6F40();
  __chkstk_darwin(v7 - 8);
  Swift::String_optional v25 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for FlowDestination();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_3860EC(a1);
  uint64_t v27 = v12;
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v1 + 8);
  uint64_t v16 = *(void *)(v1 + 16);
  char v17 = *(unsigned char *)(v1 + 24);
  uint64_t v18 = *(void *)(v1 + 32);
  *(void *)uint64_t v11 = *(void *)v1;
  *((void *)v11 + 1) = v15;
  *((void *)v11 + 2) = v16;
  unsigned char v11[24] = v17;
  *((void *)v11 + 4) = v18;
  char v19 = *(unsigned char *)(v1 + 40);
  v11[40] = v19;
  swift_storeEnumTagMultiPayload();
  uint64_t v29 = v12;
  uint64_t v30 = v14;
  uint64_t v26 = v14;
  swift_bridgeObjectRetain();
  sub_54DC8(v18, v19);
  swift_bridgeObjectRetain();
  v37._countAndFlagsBits = 43;
  v37._object = (void *)0xE100000000000000;
  sub_3D7E90(v37);
  v38._countAndFlagsBits = sub_3D4290();
  sub_3D7E90(v38);
  swift_bridgeObjectRelease();
  uint64_t v23 = v30;
  uint64_t v24 = v29;
  sub_3D4140();
  sub_3D4440();
  uint64_t v20 = sub_3D2350();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v6, 1, 1, v20);
  sub_3D2F90();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9890);
  sub_3D6D80();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_3DED90;
  sub_3D43A0();
  sub_3D6D10();
  swift_bridgeObjectRelease();
  sub_3D7250();
  uint64_t v21 = (uint64_t)v25;
  sub_3D6F10();
  sub_18F88((uint64_t)&v29, (uint64_t)v36, (uint64_t *)&unk_4B1F80);
  sub_443B4((uint64_t)v36);
  uint64_t v35 = v31;
  sub_443E0((uint64_t)&v35);
  uint64_t v34 = v32;
  sub_443E0((uint64_t)&v34);
  sub_3D4C4(v33);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_250FC((uint64_t)v6, &qword_4AD7B0);
  __int16 v28 = 0;
  type metadata accessor for FlowAction(0);
  swift_allocObject();
  return FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v11, v24, v23, v27, v26, (char *)&v28 + 1, 0, 48, (char *)&v28, v21);
}

uint64_t sub_384E6C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_3D7260();
  __chkstk_darwin(v6 - 8);
  unint64_t v44 = (char *)v40 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_3D6F40();
  __chkstk_darwin(v11 - 8);
  Swift::String v41 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for FlowDestination();
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v40 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = v18;
  uint64_t v19 = sub_3860EC(a1);
  uint64_t v45 = v20;
  uint64_t v46 = v19;
  uint64_t v21 = v20;
  uint64_t v52 = 0;
  unint64_t v53 = 0xE000000000000000;
  sub_3D8BC0(52);
  v60._object = (void *)0x800000000040AD20;
  v60._countAndFlagsBits = 0xD000000000000026;
  sub_3D7E90(v60);
  v61._countAndFlagsBits = v19;
  v61._object = v21;
  sub_3D7E90(v61);
  v62._countAndFlagsBits = 0x7265746C69665B5DLL;
  v62._object = (void *)0xE90000000000003DLL;
  sub_3D7E90(v62);
  LOBYTE(v21) = *(unsigned char *)(v3 + 40);
  *(void *)&v48[1] = *(void *)(v3 + 32);
  uint64_t v22 = *(void *)&v48[1];
  char v49 = (char)v21;
  sub_3D8D40();
  v63._countAndFlagsBits = 93;
  v63._object = (void *)0xE100000000000000;
  sub_3D7E90(v63);
  uint64_t v43 = v52;
  unint64_t v42 = v53;
  uint64_t v23 = sub_3D3860();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v18, 1, 1, v23);
  uint64_t v24 = *(void *)(v3 + 8);
  uint64_t v25 = *(void *)(v3 + 16);
  char v26 = *(unsigned char *)(v3 + 24);
  *(void *)uint64_t v15 = *(void *)v3;
  *((void *)v15 + 1) = v24;
  *((void *)v15 + 2) = v25;
  v15[24] = v26;
  *((void *)v15 + 4) = v22;
  v15[40] = (char)v21;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_54DC8(v22, (char)v21);
  v40[1] = sub_3D4140();
  sub_3D4440();
  uint64_t v27 = sub_3D2350();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v10, 1, 1, v27);
  sub_3D2F90();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9890);
  sub_3D6D80();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_3DED90;
  sub_3D43A0();
  sub_3D6D10();
  swift_bridgeObjectRelease();
  sub_3D7250();
  uint64_t v28 = (uint64_t)v41;
  sub_3D6F10();
  sub_18F88((uint64_t)&v52, (uint64_t)v59, (uint64_t *)&unk_4B1F80);
  sub_443B4((uint64_t)v59);
  uint64_t v58 = v54;
  sub_443E0((uint64_t)&v58);
  uint64_t v57 = v55;
  sub_443E0((uint64_t)&v57);
  sub_3D4C4(v56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_250FC((uint64_t)v10, &qword_4AD7B0);
  *(_WORD *)uint64_t v48 = 0;
  uint64_t v29 = type metadata accessor for FlowAction(0);
  swift_allocObject();
  uint64_t v30 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v15, 0, 0, 0, 0, &v48[1], 0, 48, v48, v28);
  uint64_t v50 = v29;
  uint64_t v51 = sub_387340((unint64_t *)&qword_4B1FA0, (void (*)(uint64_t))type metadata accessor for FlowAction);
  *(void *)&v48[1] = v30;
  uint64_t v31 = (int *)type metadata accessor for Link();
  uint64_t v32 = (char *)a2 + v31[10];
  sub_3864C0();
  unint64_t v33 = v42;
  swift_bridgeObjectRetain();
  sub_3D4420();
  uint64_t v34 = v45;
  swift_bridgeObjectRetain();
  uint64_t v35 = v46;
  uint64_t v36 = v43;
  sub_3D72C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_3D7340();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v32, 0, 1, v37);
  Swift::String v38 = (char *)a2 + v31[11];
  *((void *)v38 + 4) = 0;
  *(_OWORD *)Swift::String v38 = 0u;
  *((_OWORD *)v38 + 1) = 0u;
  *a2 = v36;
  a2[1] = v33;
  a2[2] = v35;
  a2[3] = v34;
  a2[4] = 0;
  a2[5] = 0;
  sub_18F88((uint64_t)v47, (uint64_t)a2 + v31[7], (uint64_t *)&unk_4B1F70);
  *((unsigned char *)a2 + v31[8]) = 48;
  return sub_18F88((uint64_t)&v48[1], (uint64_t)a2 + v31[9], (uint64_t *)&unk_4BC3D0);
}

uint64_t sub_385534(unint64_t a1, uint64_t a2)
{
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C05C8);
  uint64_t v72 = *(void *)(v9 - 8);
  uint64_t v73 = v9;
  __chkstk_darwin(v9);
  uint64_t v69 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C05D0);
  uint64_t v67 = *(void *)(v11 - 8);
  uint64_t v68 = v11;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C05D8);
  uint64_t v70 = *(void *)(v14 - 8);
  uint64_t v71 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v76 = (unint64_t)_swiftEmptyArrayStorage;
  if (!(a1 >> 62))
  {
    uint64_t v17 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    unint64_t v74 = a2;
    if (v17) {
      goto LABEL_3;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    unint64_t v33 = v76;
    if ((v76 & 0x8000000000000000) != 0) {
      goto LABEL_54;
    }
    goto LABEL_30;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_3D8D90();
  unint64_t v74 = a2;
  if (!v17) {
    goto LABEL_29;
  }
LABEL_3:
  if (v17 < 1)
  {
    __break(1u);
LABEL_56:
    uint64_t v2 = sub_12B64((void *)(v18 > 1), v5, 1, v2);
LABEL_34:
    v2[2] = v5;
    Swift::String v38 = &v2[2 * v4];
    v38[4] = a2;
    v38[5] = v3;
    unint64_t v39 = v74;
    uint64_t v40 = v74 - v17;
    if (__OFSUB__(v74, v17))
    {
      __break(1u);
    }
    else
    {
      if (v40 < 1)
      {
        uint64_t v46 = v72;
        uint64_t v45 = v73;
        uint64_t v47 = v71;
        goto LABEL_41;
      }
      Swift::String v41 = (objc_class *)[v6 mainBundle];
      v65._countAndFlagsBits = 0xE000000000000000;
      v78._object = (void *)0x8000000000404DF0;
      v78._countAndFlagsBits = 0xD000000000000015;
      v81.value._countAndFlagsBits = 0;
      v81.value._object = 0;
      v42.super.Class isa = v41;
      v85._countAndFlagsBits = 0;
      v85._object = (void *)0xE000000000000000;
      sub_3D2060(v78, v81, v42, v85, v65);

      uint64_t v43 = swift_allocObject();
      *(_OWORD *)(v43 + 16) = v66;
      *(void *)(v43 + 56) = &type metadata for Int;
      *(void *)(v43 + 64) = &protocol witness table for Int;
      *(void *)(v43 + 32) = v40;
      uint64_t v17 = sub_3D7D20();
      a2 = v44;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v40 = v2[2];
      unint64_t v39 = v2[3];
      int64_t v3 = v40 + 1;
      if (v40 < v39 >> 1)
      {
LABEL_37:
        uint64_t v46 = v72;
        uint64_t v45 = v73;
        uint64_t v47 = v71;
        v2[2] = v3;
        uint64_t v48 = &v2[2 * v40];
        v48[4] = v17;
        void v48[5] = a2;
LABEL_41:
        id v75 = v2;
        uint64_t v57 = v67;
        uint64_t v56 = v68;
        (*(void (**)(char *, void, uint64_t))(v67 + 104))(v13, enum case for ListFormatStyle.ListType.and<A, B>(_:), v68);
        uint64_t v58 = v69;
        (*(void (**)(char *, void, uint64_t))(v46 + 104))(v69, enum case for ListFormatStyle.Width.narrow<A, B>(_:), v45);
        __swift_instantiateConcreteTypeFromMangledName(&qword_4AAF50);
        sub_3D6E4((unint64_t *)&qword_4ACA08, &qword_4AAF50);
        sub_3D1E20();
        (*(void (**)(char *, uint64_t))(v46 + 8))(v58, v45);
        (*(void (**)(char *, uint64_t))(v57 + 8))(v13, v56);
        sub_3D6E4(&qword_4C05E0, &qword_4C05D8);
        sub_3D7F60();
        (*(void (**)(char *, uint64_t))(v70 + 8))(v16, v47);
        swift_bridgeObjectRelease();
        return v76;
      }
    }
    uint64_t v2 = sub_12B64((void *)(v39 > 1), v3, 1, v2);
    goto LABEL_37;
  }
  *(void *)&long long v66 = v2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v19 = 0;
    while (1)
    {
      sub_3D8BF0();
      uint64_t v20 = sub_3D37A0();
      uint64_t v22 = v21;
      if (v20 == sub_3D37A0() && v22 == v23)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v25 = sub_3D8FE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v25 & 1) == 0)
        {
          swift_unknownObjectRelease();
          goto LABEL_8;
        }
      }
      sub_3D8C70();
      sub_3D8CB0();
      sub_3D8CC0();
      sub_3D8C80();
LABEL_8:
      if (v17 == ++v19) {
        goto LABEL_26;
      }
    }
  }
  for (uint64_t i = 0; i != v17; ++i)
  {
    swift_retain();
    uint64_t v27 = sub_3D37A0();
    uint64_t v29 = v28;
    if (v27 == sub_3D37A0() && v29 == v30)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v32 = sub_3D8FE0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0)
      {
        swift_release();
        continue;
      }
    }
    sub_3D8C70();
    sub_3D8CB0();
    sub_3D8CC0();
    sub_3D8C80();
  }
LABEL_26:
  swift_bridgeObjectRelease();
  unint64_t v33 = v76;
  if ((v76 & 0x8000000000000000) != 0)
  {
LABEL_54:
    swift_bridgeObjectRetain();
    uint64_t v17 = sub_3D8D90();
    swift_release();
    goto LABEL_32;
  }
LABEL_30:
  if ((v33 & 0x4000000000000000) != 0) {
    goto LABEL_54;
  }
  uint64_t v17 = *(void *)(v33 + 16);
LABEL_32:
  swift_release();
  if (v17 > 0)
  {
    uint64_t v6 = self;
    uint64_t v34 = (objc_class *)[v6 mainBundle];
    v65._countAndFlagsBits = 0xE000000000000000;
    v77._object = (void *)0x800000000040AEB0;
    v77._countAndFlagsBits = 0xD000000000000015;
    v80.value._countAndFlagsBits = 0;
    v80.value._object = 0;
    v35.super.Class isa = v34;
    v84._countAndFlagsBits = 0;
    v84._object = (void *)0xE000000000000000;
    sub_3D2060(v77, v80, v35, v84, v65);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B2460);
    uint64_t v36 = swift_allocObject();
    long long v66 = xmmword_3DED90;
    *(_OWORD *)(v36 + 16) = xmmword_3DED90;
    *(void *)(v36 + 56) = &type metadata for Int;
    *(void *)(v36 + 64) = &protocol witness table for Int;
    *(void *)(v36 + 32) = v17;
    a2 = sub_3D7D20();
    int64_t v3 = v37;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_12B64(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v4 = v2[2];
    unint64_t v18 = v2[3];
    int64_t v5 = v4 + 1;
    if (v4 < v18 >> 1) {
      goto LABEL_34;
    }
    goto LABEL_56;
  }
  uint64_t v49 = sub_3D42A0();
  uint64_t v51 = v49;
  if (v50)
  {
    if (v50 != 2)
    {
      sub_54DDC(v49, 1);
      sub_3D8D60();
      __break(1u);
      JUMPOUT(0x3860D4);
    }
    switch(v49)
    {
      case 1:
        uint64_t v59 = (objc_class *)[self mainBundle];
        v60._countAndFlagsBits = 0xD000000000000024;
        v65._countAndFlagsBits = 0xE000000000000000;
        Swift::String v61 = "EPISODE_FILTER_COUNT_UNPLAYED_FORMAT";
        goto LABEL_50;
      case 2:
        uint64_t v59 = (objc_class *)[self mainBundle];
        v60._countAndFlagsBits = 0xD000000000000026;
        v65._countAndFlagsBits = 0xE000000000000000;
        Swift::String v61 = "EPISODE_FILTER_COUNT_DOWNLOADED_FORMAT";
        goto LABEL_50;
      case 3:
        uint64_t v59 = (objc_class *)[self mainBundle];
        v60._countAndFlagsBits = 0xD000000000000026;
        v65._countAndFlagsBits = 0xE000000000000000;
        Swift::String v61 = "EPISODE_FILTER_COUNT_BOOKMARKED_FORMAT";
        goto LABEL_50;
      case 4:
        uint64_t v59 = (objc_class *)[self mainBundle];
        v60._countAndFlagsBits = 0xD000000000000022;
        v65._countAndFlagsBits = 0xE000000000000000;
        Swift::String v61 = "EPISODE_FILTER_COUNT_PLAYED_FORMAT";
        goto LABEL_50;
      case 5:
        uint64_t v59 = (objc_class *)[self mainBundle];
        v60._countAndFlagsBits = 0xD000000000000026;
        v65._countAndFlagsBits = 0xE000000000000000;
        Swift::String v61 = "EPISODE_FILTER_COUNT_SUBSCRIBER_FORMAT";
LABEL_50:
        v60._object = (void *)((unint64_t)(v61 - 32) | 0x8000000000000000);
        break;
      default:
        uint64_t v59 = (objc_class *)[self mainBundle];
        v65._countAndFlagsBits = 0xE000000000000000;
        v60._object = (void *)0x8000000000404DF0;
        v60._countAndFlagsBits = 0xD000000000000015;
        break;
    }
    v83.value._countAndFlagsBits = 0;
    v83.value._object = 0;
    v62.super.Class isa = v59;
    v87._countAndFlagsBits = 0;
    v87._object = (void *)0xE000000000000000;
    sub_3D2060(v60, v83, v62, v87, v65);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B2460);
    uint64_t v63 = swift_allocObject();
    *(_OWORD *)(v63 + 16) = xmmword_3DED90;
    *(void *)(v63 + 56) = &type metadata for Int;
    *(void *)(v63 + 64) = &protocol witness table for Int;
    *(void *)(v63 + 32) = v74;
    uint64_t v55 = sub_3D7D80();
  }
  else
  {
    uint64_t v52 = (objc_class *)[self mainBundle];
    v79._countAndFlagsBits = 0xD000000000000022;
    v65._countAndFlagsBits = 0xE000000000000000;
    v79._object = (void *)0x800000000040AE80;
    v82.value._countAndFlagsBits = 0;
    v82.value._object = 0;
    v53.super.Class isa = v52;
    v86._countAndFlagsBits = 0;
    v86._object = (void *)0xE000000000000000;
    sub_3D2060(v79, v82, v53, v86, v65);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B2460);
    uint64_t v54 = swift_allocObject();
    *(_OWORD *)(v54 + 16) = xmmword_3DED20;
    *(void *)(v54 + 56) = &type metadata for Int;
    *(void *)(v54 + 64) = &protocol witness table for Int;
    *(void *)(v54 + 32) = v74;
    *(void *)(v54 + 96) = &type metadata for Int64;
    *(void *)(v54 + 104) = &protocol witness table for Int64;
    *(void *)(v54 + 72) = v51;
    uint64_t v55 = sub_3D7D80();
  }
  swift_bridgeObjectRelease();
  return v55;
}

uint64_t sub_3860EC(uint64_t a1)
{
  uint64_t v2 = sub_3D42A0();
  uint64_t v4 = v2;
  if (v3)
  {
    if (v3 != 2)
    {
      sub_54DDC(v2, 1);
      sub_3D8D60();
      __break(1u);
      JUMPOUT(0x3864A8);
    }
    switch(v2)
    {
      case 1:
        uint64_t v8 = (objc_class *)[self mainBundle];
        v9._countAndFlagsBits = 0xD000000000000026;
        v16._countAndFlagsBits = 0xE000000000000000;
        uint64_t v10 = "EPISODE_FILTER_SEE_ALL_UNPLAYED_FORMAT";
        goto LABEL_10;
      case 2:
        uint64_t v8 = (objc_class *)[self mainBundle];
        v16._countAndFlagsBits = 0xE000000000000000;
        uint64_t v11 = "EPISODE_FILTER_SEE_ALL_DOWNLOADED_FORMAT";
        goto LABEL_12;
      case 3:
        uint64_t v8 = (objc_class *)[self mainBundle];
        v16._countAndFlagsBits = 0xE000000000000000;
        uint64_t v11 = "EPISODE_FILTER_SEE_ALL_BOOKMARKED_FORMAT";
        goto LABEL_12;
      case 4:
        uint64_t v8 = (objc_class *)[self mainBundle];
        v9._countAndFlagsBits = 0xD000000000000024;
        v16._countAndFlagsBits = 0xE000000000000000;
        uint64_t v10 = "EPISODE_FILTER_SEE_ALL_PLAYED_FORMAT";
        goto LABEL_10;
      case 5:
        uint64_t v8 = (objc_class *)[self mainBundle];
        v16._countAndFlagsBits = 0xE000000000000000;
        uint64_t v11 = "EPISODE_FILTER_SEE_ALL_SUBSCRIBER_FORMAT";
LABEL_12:
        v9._object = (void *)((unint64_t)(v11 - 32) | 0x8000000000000000);
        v9._countAndFlagsBits = 0xD000000000000028;
        break;
      default:
        uint64_t v8 = (objc_class *)[self mainBundle];
        v9._countAndFlagsBits = 0xD000000000000026;
        v16._countAndFlagsBits = 0xE000000000000000;
        uint64_t v10 = "EPISODE_FILTER_SEE_ALL_EPISODES_FORMAT";
LABEL_10:
        v9._object = (void *)((unint64_t)(v10 - 32) | 0x8000000000000000);
        break;
    }
    v19.value._countAndFlagsBits = 0;
    v19.value._object = 0;
    v12.super.Class isa = v8;
    v21._countAndFlagsBits = 0;
    v21._object = (void *)0xE000000000000000;
    sub_3D2060(v9, v19, v12, v21, v16);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B2460);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_3DED90;
    *(void *)(v13 + 56) = &type metadata for Int;
    *(void *)(v13 + 64) = &protocol witness table for Int;
    *(void *)(v13 + 32) = a1;
  }
  else
  {
    int64_t v5 = (objc_class *)[self mainBundle];
    v17._countAndFlagsBits = 0xD000000000000024;
    v16._countAndFlagsBits = 0xE000000000000000;
    v17._object = (void *)0x800000000040ACF0;
    v18.value._countAndFlagsBits = 0;
    v18.value._object = 0;
    v6.super.Class isa = v5;
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    sub_3D2060(v17, v18, v6, v20, v16);

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B2460);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_3DED20;
    *(void *)(v7 + 56) = &type metadata for Int64;
    *(void *)(v7 + 64) = &protocol witness table for Int64;
    *(void *)(v7 + 32) = v4;
    *(void *)(v7 + 96) = &type metadata for Int;
    *(void *)(v7 + 104) = &protocol witness table for Int;
    *(void *)(v7 + 72) = a1;
  }
  uint64_t v14 = sub_3D7D80();
  swift_bridgeObjectRelease();
  return v14;
}

unint64_t sub_3864C0()
{
  uint64_t v0 = sub_3D42A0();
  uint64_t v2 = v0;
  if (v1)
  {
    if (v1 != 2)
    {
      sub_54DDC(v0, 1);
      sub_3D8D60();
      __break(1u);
      JUMPOUT(0x386684);
    }
    unint64_t result = 0x6C6C41656553;
    switch(v2)
    {
      case 1:
        unint64_t result = 0x6E556C6C41656553;
        break;
      case 2:
        unint64_t result = 0xD000000000000010;
        break;
      case 3:
        unint64_t result = 0x61536C6C41656553;
        break;
      case 4:
        unint64_t result = 0x6C506C6C41656553;
        break;
      case 5:
        unint64_t result = 0xD000000000000018;
        break;
      default:
        return result;
    }
  }
  else
  {
    strcpy((char *)v4, "SeeAllSeason");
    BYTE5(v4[1]) = 0;
    HIWORD(v4[1]) = -5120;
    v5._countAndFlagsBits = sub_3D8F90();
    sub_3D7E90(v5);
    swift_bridgeObjectRelease();
    return v4[0];
  }
  return result;
}

uint64_t type metadata accessor for ShowEpisodesShelvesProvider.Info.Footer(uint64_t a1)
{
  return sub_2595C(a1, qword_4C0670);
}

uint64_t sub_3866BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_386724(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_386784(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_3867EC(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, char a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 a16)
{
  int v55 = a8;
  uint64_t v56 = a6;
  uint64_t v57 = a7;
  int v51 = a2;
  int v53 = a16;
  uint64_t v52 = a15;
  int v58 = a12;
  char v19 = a2 & 1;
  uint64_t v54 = a14;
  uint64_t v49 = a5;
  uint64_t v50 = a13;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C05E8);
  Swift::String v21 = (int *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v44 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  char v26 = (char *)&v44 - v25;
  uint64_t v46 = a1;
  uint64_t v47 = a3;
  *(void *)char v26 = a1;
  v26[8] = v19;
  *((void *)v26 + 2) = a3;
  int v48 = a4;
  v26[24] = a4;
  uint64_t v27 = (char *)&v44 + v21[18] - v25;
  uint64_t v28 = sub_3D4780();
  uint64_t v29 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16);
  uint64_t v45 = v27;
  v29(v27, v49, v28);
  uint64_t v30 = &v26[v21[22]];
  uint64_t v31 = v57;
  *(void *)uint64_t v30 = v56;
  *((void *)v30 + 1) = v31;
  v26[v21[26]] = v55;
  uint64_t v44 = a9;
  *(void *)uint64_t v23 = a9;
  v23[8] = a10 & 1;
  uint64_t v49 = a11;
  *((void *)v23 + 2) = a11;
  v23[24] = v58;
  uint64_t v32 = (uint64_t)&v23[v21[18]];
  uint64_t v33 = v28;
  uint64_t v34 = v52;
  v29((char *)v32, v50, v33);
  char v35 = v53;
  uint64_t v36 = &v23[v21[22]];
  *(void *)uint64_t v36 = v54;
  *((void *)v36 + 1) = v34;
  v23[v21[26]] = v35;
  if (v51)
  {
    if ((a10 & 1) == 0)
    {
LABEL_7:
      sub_54DC8(v47, v48);
      swift_bridgeObjectRetain();
      sub_54DC8(v49, v58);
      swift_bridgeObjectRetain();
      char v42 = 0;
      goto LABEL_8;
    }
  }
  else if ((a10 & 1) != 0 || v46 != v44)
  {
    goto LABEL_7;
  }
  uint64_t v37 = v47;
  int v38 = v48;
  sub_54DC8(v47, v48);
  uint64_t v39 = v57;
  swift_bridgeObjectRetain();
  uint64_t v40 = v49;
  int v41 = v58;
  sub_54DC8(v49, v58);
  swift_bridgeObjectRetain();
  char v42 = sub_386AD0(v37, v38, (uint64_t)v45, v56, v39, v55 & 1, v40, v41, v32, v54, v34, v35 & 1);
LABEL_8:
  sub_250FC((uint64_t)v23, &qword_4C05E8);
  sub_250FC((uint64_t)v26, &qword_4C05E8);
  return v42 & 1;
}

uint64_t sub_386AD0(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  uint64_t v42 = a3;
  uint64_t v43 = a5;
  char v14 = a2;
  int v41 = a2;
  int v48 = a8;
  int v49 = a12;
  uint64_t v46 = a7;
  uint64_t v47 = a11;
  uint64_t v44 = a9;
  uint64_t v45 = a10;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C05F0);
  Swift::String v17 = (int *)(v16 - 8);
  __chkstk_darwin(v16);
  char v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v38 - v21;
  *(void *)uint64_t v22 = a1;
  v22[8] = v14;
  uint64_t v23 = (char *)&v38 + v17[14] - v21;
  uint64_t v24 = sub_3D4780();
  uint64_t v25 = *(void (**)(void))(*(void *)(v24 - 8) + 16);
  uint64_t v39 = v23;
  ((void (*)(char *, uint64_t, uint64_t))v25)(v23, v42, v24);
  char v26 = (uint64_t *)&v22[v17[18]];
  uint64_t v42 = a4;
  uint64_t v27 = v43;
  *char v26 = a4;
  v26[1] = v27;
  uint64_t v28 = v17[22];
  int v40 = a6;
  v22[v28] = a6;
  uint64_t v29 = v46;
  *(void *)char v19 = v46;
  LOBYTE(a6) = v48;
  v19[8] = v48;
  int v38 = &v19[v17[14]];
  uint64_t v30 = v27;
  v25();
  uint64_t v31 = v45;
  uint64_t v32 = v47;
  uint64_t v33 = &v19[v17[18]];
  *(void *)uint64_t v33 = v45;
  *((void *)v33 + 1) = v32;
  uint64_t v34 = v17[22];
  char v35 = v49;
  v19[v34] = v49;
  sub_54DC8(a1, v41);
  swift_bridgeObjectRetain();
  sub_54DC8(v29, a6);
  swift_bridgeObjectRetain();
  if (sub_3D4280()) {
    char v36 = sub_386D10((uint64_t)v39, v42, v30, v40 & 1, (uint64_t)v38, v31, v32, v35 & 1);
  }
  else {
    char v36 = 0;
  }
  sub_250FC((uint64_t)v19, &qword_4C05F0);
  sub_250FC((uint64_t)v22, &qword_4C05F0);
  return v36 & 1;
}

uint64_t sub_386D10(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v36 = a8;
  uint64_t v33 = a7;
  uint64_t v34 = a5;
  uint64_t v35 = a6;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C05F8);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v31 - v17;
  uint64_t v19 = sub_3D4780();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16);
  v20(v18, a1, v19);
  uint64_t v21 = &v18[*(int *)(v13 + 56)];
  uint64_t v31 = a2;
  *(void *)uint64_t v21 = a2;
  *((void *)v21 + 1) = a3;
  uint64_t v23 = v33;
  uint64_t v22 = v34;
  uint64_t v24 = *(int *)(v13 + 72);
  int v32 = a4;
  v18[v24] = a4;
  v20(v15, v22, v19);
  uint64_t v25 = v35;
  char v26 = v36;
  uint64_t v27 = &v15[*(int *)(v13 + 56)];
  *(void *)uint64_t v27 = v35;
  *((void *)v27 + 1) = v23;
  v15[*(int *)(v13 + 72)] = v26;
  sub_387340(&qword_4BE800, (void (*)(uint64_t))&type metadata accessor for EpisodeListSettings);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (sub_3D7C80())
  {
    char v28 = v32;
    if (v31 == v25 && a3 == v23 || (char v29 = 0, (sub_3D8FE0() & 1) != 0)) {
      char v29 = v28 ^ v26 ^ 1;
    }
  }
  else
  {
    char v29 = 0;
  }
  sub_250FC((uint64_t)v15, &qword_4C05F8);
  sub_250FC((uint64_t)v18, &qword_4C05F8);
  return v29 & 1;
}

uint64_t sub_386F3C@<X0>(unint64_t *a1@<X8>)
{
  type metadata accessor for ShowEpisodesShelvesProvider.Info(0);

  return sub_38430C(a1);
}

uint64_t sub_386FB0@<X0>(uint64_t a1@<X8>)
{
  return sub_383FFC(a1);
}

uint64_t sub_387014()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_387054()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  if (*(unsigned char *)(v0 + 16)) {
    uint64_t v3 = 1;
  }
  else {
    uint64_t v3 = 4;
  }
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 24), v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 224))(v1, v2, v3, v4, v5);
}

uint64_t sub_3870D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_3870E8(a1, a2);
}

uint64_t sub_3870E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_382FF4(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)(v2 + 24), a2);
}

uint64_t sub_387128()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  sub_54DDC(*(void *)(v0 + 72), *(unsigned char *)(v0 + 80));

  return _swift_deallocObject(v0, 81, 7);
}

uint64_t sub_387174()
{
  uint64_t v1 = (void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v7 = *(unsigned __int8 *)(v0 + 80);
  __swift_project_boxed_opaque_existential_1(v1, v5);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 216))(v2, v3, v4, v7, v5, v6);
}

uint64_t sub_3871F0(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    unint64_t v2 = 0;
    uint64_t v3 = result + 40;
    do
    {
      if (v2 <= v1) {
        unint64_t v4 = v1;
      }
      else {
        unint64_t v4 = v2;
      }
      uint64_t v5 = -(uint64_t)v4;
      for (uint64_t i = (char *)(v3 + 16 * v2++); ; i += 16)
      {
        if (v5 + v2 == 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v7 = *((void *)i - 1);
        char v8 = *i;
        sub_54DC8(v7, *i);
        if (sub_3D4210()) {
          break;
        }
        unint64_t result = sub_54DDC(v7, v8);
        if (++v2 - v1 == 1) {
          return (uint64_t)_swiftEmptyArrayStorage;
        }
      }
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        unint64_t result = sub_1FC350(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        unint64_t result = sub_1FC350(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v11 = &_swiftEmptyArrayStorage[2 * v10];
      v11[4] = v7;
      *((unsigned char *)v11 + 40) = v8;
    }
    while (v2 != v1);
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t sub_387340(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_387388(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      uint64_t v10 = a2[3];
      a1[2] = a2[2];
      a1[3] = v10;
      uint64_t v11 = a2[5];
      a1[4] = a2[4];
      a1[5] = v11;
      uint64_t v71 = (int *)type metadata accessor for Link();
      uint64_t v12 = v71[7];
      __dst = (void *)((char *)a1 + v12);
      uint64_t v13 = (void *)((char *)a2 + v12);
      uint64_t v14 = (int *)sub_3D3860();
      uint64_t v15 = *((void *)v14 - 1);
      uint64_t v16 = *(unsigned int (**)(void *, uint64_t, int *))(v15 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16(v13, 1, v14))
      {
        uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(__dst, v13, *(void *)(*(void *)(v17 - 8) + 64));
      }
      else
      {
        uint64_t v19 = v13[1];
        void *__dst = *v13;
        __dst[1] = v19;
        int v20 = *((unsigned __int8 *)v13 + 32);
        swift_bridgeObjectRetain();
        if (v20 == 255)
        {
          *((_OWORD *)__dst + 1) = *((_OWORD *)v13 + 1);
          *((unsigned char *)__dst + 32) = *((unsigned char *)v13 + 32);
        }
        else
        {
          uint64_t v21 = v13[2];
          uint64_t v22 = v13[3];
          sub_4C484(v21, v22, v20);
          __dst[2] = v21;
          __dst[3] = v22;
          *((unsigned char *)__dst + 32) = v20;
        }
        *(_OWORD *)(__dst + 5) = *(_OWORD *)(v13 + 5);
        uint64_t v23 = (id *)(v13 + 7);
        int v24 = *((unsigned __int8 *)v13 + 64);
        if (v24 == 255)
        {
          __dst[7] = *v23;
          *((unsigned char *)__dst + 64) = *((unsigned char *)v13 + 64);
        }
        else
        {
          id v25 = *v23;
          sub_4C49C(*v23, *((unsigned char *)v13 + 64));
          __dst[7] = v25;
          *((unsigned char *)__dst + 64) = v24;
        }
        char v26 = (id *)(v13 + 9);
        int v27 = *((unsigned __int8 *)v13 + 80);
        if (v27 == 255)
        {
          __dst[9] = *v26;
          *((unsigned char *)__dst + 80) = *((unsigned char *)v13 + 80);
        }
        else
        {
          id v28 = *v26;
          sub_4C49C(*v26, *((unsigned char *)v13 + 80));
          __dst[9] = v28;
          *((unsigned char *)__dst + 80) = v27;
        }
        char v29 = (id *)(v13 + 11);
        int v30 = *((unsigned __int8 *)v13 + 96);
        if (v30 == 255)
        {
          __dst[11] = *v29;
          *((unsigned char *)__dst + 96) = *((unsigned char *)v13 + 96);
        }
        else
        {
          id v31 = *v29;
          sub_4C49C(*v29, *((unsigned char *)v13 + 96));
          __dst[11] = v31;
          *((unsigned char *)__dst + 96) = v30;
        }
        int v32 = (id *)(v13 + 13);
        int v33 = *((unsigned __int8 *)v13 + 112);
        if (v33 == 255)
        {
          __dst[13] = *v32;
          *((unsigned char *)__dst + 112) = *((unsigned char *)v13 + 112);
        }
        else
        {
          id v34 = *v32;
          sub_4C49C(*v32, *((unsigned char *)v13 + 112));
          __dst[13] = v34;
          *((unsigned char *)__dst + 112) = v33;
        }
        uint64_t v35 = (id *)(v13 + 15);
        int v36 = *((unsigned __int8 *)v13 + 128);
        if (v36 == 255)
        {
          __dst[15] = *v35;
          *((unsigned char *)__dst + 128) = *((unsigned char *)v13 + 128);
        }
        else
        {
          id v37 = *v35;
          sub_4C49C(*v35, *((unsigned char *)v13 + 128));
          __dst[15] = v37;
          *((unsigned char *)__dst + 128) = v36;
        }
        *((unsigned char *)__dst + 129) = *((unsigned char *)v13 + 129);
        uint64_t v38 = v14[11];
        uint64_t v39 = (char *)__dst + v38;
        int v40 = (char *)v13 + v38;
        uint64_t v41 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16))(v39, v40, v41);
        uint64_t v42 = v14[12];
        uint64_t v43 = (void *)((char *)__dst + v42);
        uint64_t v44 = (void *)((char *)v13 + v42);
        uint64_t v45 = v44[1];
        void *v43 = *v44;
        v43[1] = v45;
        *((unsigned char *)__dst + v14[13]) = *((unsigned char *)v13 + v14[13]);
        *((unsigned char *)__dst + v14[14]) = *((unsigned char *)v13 + v14[14]);
        *((unsigned char *)__dst + v14[15]) = *((unsigned char *)v13 + v14[15]);
        uint64_t v46 = v14[16];
        uint64_t v47 = (void *)((char *)__dst + v46);
        int v48 = (void *)((char *)v13 + v46);
        uint64_t v49 = v48[1];
        void *v47 = *v48;
        v47[1] = v49;
        uint64_t v50 = *(void (**)(void *, void, uint64_t, int *))(v15 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v50(__dst, 0, 1, v14);
      }
      *((unsigned char *)a1 + v71[8]) = *((unsigned char *)a2 + v71[8]);
      uint64_t v51 = v71[9];
      uint64_t v52 = (char *)a1 + v51;
      int v53 = (char *)a2 + v51;
      uint64_t v54 = *(void *)((char *)a2 + v51 + 24);
      if (v54)
      {
        uint64_t v55 = *((void *)v53 + 4);
        *((void *)v52 + 3) = v54;
        *((void *)v52 + 4) = v55;
        (**(void (***)(void))(v54 - 8))();
      }
      else
      {
        long long v56 = *((_OWORD *)v53 + 1);
        *(_OWORD *)uint64_t v52 = *(_OWORD *)v53;
        *((_OWORD *)v52 + 1) = v56;
        *((void *)v52 + 4) = *((void *)v53 + 4);
      }
      uint64_t v57 = v71[10];
      int v58 = (char *)a1 + v57;
      uint64_t v59 = (char *)a2 + v57;
      uint64_t v60 = sub_3D7340();
      uint64_t v61 = *(void *)(v60 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
      {
        uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
        memcpy(v58, v59, *(void *)(*(void *)(v62 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v58, v59, v60);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v58, 0, 1, v60);
      }
      uint64_t v63 = v71[11];
      uint64_t v64 = (char *)a1 + v63;
      Swift::String v65 = (char *)a2 + v63;
      uint64_t v66 = *(void *)((char *)a2 + v63 + 24);
      if (v66)
      {
        uint64_t v67 = *((void *)v65 + 4);
        *((void *)v64 + 3) = v66;
        *((void *)v64 + 4) = v67;
        (**(void (***)(void))(v66 - 8))();
      }
      else
      {
        long long v68 = *((_OWORD *)v65 + 1);
        *(_OWORD *)uint64_t v64 = *(_OWORD *)v65;
        *((_OWORD *)v64 + 1) = v68;
        *((void *)v64 + 4) = *((void *)v65 + 4);
      }
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      uint64_t v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_387990(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v3 = (int *)type metadata accessor for Link();
      uint64_t v4 = a1 + v3[7];
      uint64_t v5 = sub_3D3860();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
      {
        swift_bridgeObjectRelease();
        int v6 = *(unsigned __int8 *)(v4 + 32);
        if (v6 != 255) {
          sub_49E54(*(void *)(v4 + 16), *(void *)(v4 + 24), v6);
        }
        int v7 = *(unsigned __int8 *)(v4 + 64);
        if (v7 != 255) {
          sub_4C6F0(*(id *)(v4 + 56), v7);
        }
        int v8 = *(unsigned __int8 *)(v4 + 80);
        if (v8 != 255) {
          sub_4C6F0(*(id *)(v4 + 72), v8);
        }
        int v9 = *(unsigned __int8 *)(v4 + 96);
        if (v9 != 255) {
          sub_4C6F0(*(id *)(v4 + 88), v9);
        }
        int v10 = *(unsigned __int8 *)(v4 + 112);
        if (v10 != 255) {
          sub_4C6F0(*(id *)(v4 + 104), v10);
        }
        int v11 = *(unsigned __int8 *)(v4 + 128);
        if (v11 != 255) {
          sub_4C6F0(*(id *)(v4 + 120), v11);
        }
        uint64_t v12 = v4 + *(int *)(v5 + 44);
        uint64_t v13 = sub_3D3750();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      uint64_t v14 = a1 + v3[9];
      if (*(void *)(v14 + 24)) {
        __swift_destroy_boxed_opaque_existential_1(v14);
      }
      uint64_t v15 = a1 + v3[10];
      uint64_t v16 = sub_3D7340();
      uint64_t v17 = *(void *)(v16 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v15, v16);
      }
      uint64_t result = a1 + v3[11];
      if (*(void *)(result + 24))
      {
        return __swift_destroy_boxed_opaque_existential_1(result);
      }
      break;
    case 1:
      swift_bridgeObjectRelease();
      return swift_release();
    case 0:
      return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_387C58(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    long long v68 = (int *)type metadata accessor for Link();
    uint64_t v9 = v68[7];
    __dst = (void *)((char *)a1 + v9);
    int v10 = (void *)((char *)a2 + v9);
    int v11 = (int *)sub_3D3860();
    uint64_t v12 = *((void *)v11 - 1);
    uint64_t v13 = *(unsigned int (**)(void *, uint64_t, int *))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      uint64_t v16 = v10[1];
      void *__dst = *v10;
      __dst[1] = v16;
      int v17 = *((unsigned __int8 *)v10 + 32);
      swift_bridgeObjectRetain();
      if (v17 == 255)
      {
        *((_OWORD *)__dst + 1) = *((_OWORD *)v10 + 1);
        *((unsigned char *)__dst + 32) = *((unsigned char *)v10 + 32);
      }
      else
      {
        uint64_t v18 = v10[2];
        uint64_t v19 = v10[3];
        sub_4C484(v18, v19, v17);
        __dst[2] = v18;
        __dst[3] = v19;
        *((unsigned char *)__dst + 32) = v17;
      }
      *(_OWORD *)(__dst + 5) = *(_OWORD *)(v10 + 5);
      int v20 = (id *)(v10 + 7);
      int v21 = *((unsigned __int8 *)v10 + 64);
      if (v21 == 255)
      {
        __dst[7] = *v20;
        *((unsigned char *)__dst + 64) = *((unsigned char *)v10 + 64);
      }
      else
      {
        id v22 = *v20;
        sub_4C49C(*v20, *((unsigned char *)v10 + 64));
        __dst[7] = v22;
        *((unsigned char *)__dst + 64) = v21;
      }
      uint64_t v23 = (id *)(v10 + 9);
      int v24 = *((unsigned __int8 *)v10 + 80);
      if (v24 == 255)
      {
        __dst[9] = *v23;
        *((unsigned char *)__dst + 80) = *((unsigned char *)v10 + 80);
      }
      else
      {
        id v25 = *v23;
        sub_4C49C(*v23, *((unsigned char *)v10 + 80));
        __dst[9] = v25;
        *((unsigned char *)__dst + 80) = v24;
      }
      char v26 = (id *)(v10 + 11);
      int v27 = *((unsigned __int8 *)v10 + 96);
      if (v27 == 255)
      {
        __dst[11] = *v26;
        *((unsigned char *)__dst + 96) = *((unsigned char *)v10 + 96);
      }
      else
      {
        id v28 = *v26;
        sub_4C49C(*v26, *((unsigned char *)v10 + 96));
        __dst[11] = v28;
        *((unsigned char *)__dst + 96) = v27;
      }
      char v29 = (id *)(v10 + 13);
      int v30 = *((unsigned __int8 *)v10 + 112);
      if (v30 == 255)
      {
        __dst[13] = *v29;
        *((unsigned char *)__dst + 112) = *((unsigned char *)v10 + 112);
      }
      else
      {
        id v31 = *v29;
        sub_4C49C(*v29, *((unsigned char *)v10 + 112));
        __dst[13] = v31;
        *((unsigned char *)__dst + 112) = v30;
      }
      int v32 = (id *)(v10 + 15);
      int v33 = *((unsigned __int8 *)v10 + 128);
      if (v33 == 255)
      {
        __dst[15] = *v32;
        *((unsigned char *)__dst + 128) = *((unsigned char *)v10 + 128);
      }
      else
      {
        id v34 = *v32;
        sub_4C49C(*v32, *((unsigned char *)v10 + 128));
        __dst[15] = v34;
        *((unsigned char *)__dst + 128) = v33;
      }
      *((unsigned char *)__dst + 129) = *((unsigned char *)v10 + 129);
      uint64_t v35 = v11[11];
      int v36 = (char *)__dst + v35;
      id v37 = (char *)v10 + v35;
      uint64_t v38 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 16))(v36, v37, v38);
      uint64_t v39 = v11[12];
      int v40 = (void *)((char *)__dst + v39);
      uint64_t v41 = (void *)((char *)v10 + v39);
      uint64_t v42 = v41[1];
      *int v40 = *v41;
      v40[1] = v42;
      *((unsigned char *)__dst + v11[13]) = *((unsigned char *)v10 + v11[13]);
      *((unsigned char *)__dst + v11[14]) = *((unsigned char *)v10 + v11[14]);
      *((unsigned char *)__dst + v11[15]) = *((unsigned char *)v10 + v11[15]);
      uint64_t v43 = v11[16];
      uint64_t v44 = (void *)((char *)__dst + v43);
      uint64_t v45 = (void *)((char *)v10 + v43);
      uint64_t v46 = v45[1];
      *uint64_t v44 = *v45;
      v44[1] = v46;
      uint64_t v47 = *(void (**)(void *, void, uint64_t, int *))(v12 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v47(__dst, 0, 1, v11);
    }
    *((unsigned char *)a1 + v68[8]) = *((unsigned char *)a2 + v68[8]);
    uint64_t v48 = v68[9];
    uint64_t v49 = (char *)a1 + v48;
    uint64_t v50 = (char *)a2 + v48;
    uint64_t v51 = *(void *)((char *)a2 + v48 + 24);
    if (v51)
    {
      uint64_t v52 = *((void *)v50 + 4);
      *((void *)v49 + 3) = v51;
      *((void *)v49 + 4) = v52;
      (**(void (***)(void))(v51 - 8))();
    }
    else
    {
      long long v53 = *((_OWORD *)v50 + 1);
      *(_OWORD *)uint64_t v49 = *(_OWORD *)v50;
      *((_OWORD *)v49 + 1) = v53;
      *((void *)v49 + 4) = *((void *)v50 + 4);
    }
    uint64_t v54 = v68[10];
    uint64_t v55 = (char *)a1 + v54;
    long long v56 = (char *)a2 + v54;
    uint64_t v57 = sub_3D7340();
    uint64_t v58 = *(void *)(v57 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48))(v56, 1, v57))
    {
      uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
      memcpy(v55, v56, *(void *)(*(void *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    }
    uint64_t v60 = v68[11];
    uint64_t v61 = (char *)a1 + v60;
    uint64_t v62 = (char *)a2 + v60;
    uint64_t v63 = *(void *)((char *)a2 + v60 + 24);
    if (v63)
    {
      uint64_t v64 = *((void *)v62 + 4);
      *((void *)v61 + 3) = v63;
      *((void *)v61 + 4) = v64;
      (**(void (***)(void))(v63 - 8))();
    }
    else
    {
      long long v65 = *((_OWORD *)v62 + 1);
      *(_OWORD *)uint64_t v61 = *(_OWORD *)v62;
      *((_OWORD *)v61 + 1) = v65;
      *((void *)v61 + 4) = *((void *)v62 + 4);
    }
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    uint64_t v15 = a2[1];
    *a1 = *a2;
    a1[1] = v15;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_38820C(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_386724((uint64_t)a1, type metadata accessor for ShowEpisodesShelvesProvider.Info.Footer);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      uint64_t v5 = type metadata accessor for Link();
      uint64_t v6 = *(int *)(v5 + 28);
      uint64_t v66 = (int *)v5;
      __dst = (void *)((char *)a1 + v6);
      uint64_t v7 = (void *)((char *)a2 + v6);
      uint64_t v8 = (int *)sub_3D3860();
      uint64_t v9 = *((void *)v8 - 1);
      int v10 = *(unsigned int (**)(void *, uint64_t, int *))(v9 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10(v7, 1, v8))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(__dst, v7, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        void *__dst = *v7;
        __dst[1] = v7[1];
        int v12 = *((unsigned __int8 *)v7 + 32);
        swift_bridgeObjectRetain();
        if (v12 == 255)
        {
          long long v15 = *((_OWORD *)v7 + 1);
          *((unsigned char *)__dst + 32) = *((unsigned char *)v7 + 32);
          *((_OWORD *)__dst + 1) = v15;
        }
        else
        {
          uint64_t v13 = v7[2];
          uint64_t v14 = v7[3];
          sub_4C484(v13, v14, v12);
          __dst[2] = v13;
          __dst[3] = v14;
          *((unsigned char *)__dst + 32) = v12;
        }
        __dst[5] = v7[5];
        __dst[6] = v7[6];
        uint64_t v16 = (id *)(v7 + 7);
        int v17 = *((unsigned __int8 *)v7 + 64);
        if (v17 == 255)
        {
          id v19 = *v16;
          *((unsigned char *)__dst + 64) = *((unsigned char *)v7 + 64);
          __dst[7] = v19;
        }
        else
        {
          id v18 = *v16;
          sub_4C49C(*v16, *((unsigned char *)v7 + 64));
          __dst[7] = v18;
          *((unsigned char *)__dst + 64) = v17;
        }
        int v20 = (id *)(v7 + 9);
        int v21 = *((unsigned __int8 *)v7 + 80);
        if (v21 == 255)
        {
          id v23 = *v20;
          *((unsigned char *)__dst + 80) = *((unsigned char *)v7 + 80);
          __dst[9] = v23;
        }
        else
        {
          id v22 = *v20;
          sub_4C49C(*v20, *((unsigned char *)v7 + 80));
          __dst[9] = v22;
          *((unsigned char *)__dst + 80) = v21;
        }
        int v24 = (id *)(v7 + 11);
        int v25 = *((unsigned __int8 *)v7 + 96);
        if (v25 == 255)
        {
          id v27 = *v24;
          *((unsigned char *)__dst + 96) = *((unsigned char *)v7 + 96);
          __dst[11] = v27;
        }
        else
        {
          id v26 = *v24;
          sub_4C49C(*v24, *((unsigned char *)v7 + 96));
          __dst[11] = v26;
          *((unsigned char *)__dst + 96) = v25;
        }
        id v28 = (id *)(v7 + 13);
        int v29 = *((unsigned __int8 *)v7 + 112);
        if (v29 == 255)
        {
          id v31 = *v28;
          *((unsigned char *)__dst + 112) = *((unsigned char *)v7 + 112);
          __dst[13] = v31;
        }
        else
        {
          id v30 = *v28;
          sub_4C49C(*v28, *((unsigned char *)v7 + 112));
          __dst[13] = v30;
          *((unsigned char *)__dst + 112) = v29;
        }
        int v32 = (id *)(v7 + 15);
        int v33 = *((unsigned __int8 *)v7 + 128);
        if (v33 == 255)
        {
          id v35 = *v32;
          *((unsigned char *)__dst + 128) = *((unsigned char *)v7 + 128);
          __dst[15] = v35;
        }
        else
        {
          id v34 = *v32;
          sub_4C49C(*v32, *((unsigned char *)v7 + 128));
          __dst[15] = v34;
          *((unsigned char *)__dst + 128) = v33;
        }
        *((unsigned char *)__dst + 129) = *((unsigned char *)v7 + 129);
        uint64_t v36 = v8[11];
        id v37 = (char *)__dst + v36;
        uint64_t v38 = (char *)v7 + v36;
        uint64_t v39 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v39 - 8) + 16))(v37, v38, v39);
        uint64_t v40 = v8[12];
        uint64_t v41 = (void *)((char *)__dst + v40);
        uint64_t v42 = (void *)((char *)v7 + v40);
        *uint64_t v41 = *v42;
        v41[1] = v42[1];
        *((unsigned char *)__dst + v8[13]) = *((unsigned char *)v7 + v8[13]);
        *((unsigned char *)__dst + v8[14]) = *((unsigned char *)v7 + v8[14]);
        *((unsigned char *)__dst + v8[15]) = *((unsigned char *)v7 + v8[15]);
        uint64_t v43 = v8[16];
        uint64_t v44 = (void *)((char *)__dst + v43);
        uint64_t v45 = (void *)((char *)v7 + v43);
        *uint64_t v44 = *v45;
        v44[1] = v45[1];
        uint64_t v46 = *(void (**)(void *, void, uint64_t, int *))(v9 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v46(__dst, 0, 1, v8);
      }
      *((unsigned char *)a1 + v66[8]) = *((unsigned char *)a2 + v66[8]);
      uint64_t v47 = v66[9];
      uint64_t v48 = (char *)a1 + v47;
      uint64_t v49 = (char *)a2 + v47;
      uint64_t v50 = *(void *)((char *)a2 + v47 + 24);
      if (v50)
      {
        *((void *)v48 + 3) = v50;
        *((void *)v48 + 4) = *((void *)v49 + 4);
        (**(void (***)(void))(v50 - 8))();
      }
      else
      {
        long long v51 = *(_OWORD *)v49;
        long long v52 = *((_OWORD *)v49 + 1);
        *((void *)v48 + 4) = *((void *)v49 + 4);
        *(_OWORD *)uint64_t v48 = v51;
        *((_OWORD *)v48 + 1) = v52;
      }
      uint64_t v53 = v66[10];
      uint64_t v54 = (char *)a1 + v53;
      uint64_t v55 = (char *)a2 + v53;
      uint64_t v56 = sub_3D7340();
      uint64_t v57 = *(void *)(v56 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
      {
        uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
        memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v54, v55, v56);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v57 + 56))(v54, 0, 1, v56);
      }
      uint64_t v59 = v66[11];
      uint64_t v60 = (char *)a1 + v59;
      uint64_t v61 = (char *)a2 + v59;
      uint64_t v62 = *(void *)((char *)a2 + v59 + 24);
      if (v62)
      {
        *((void *)v60 + 3) = v62;
        *((void *)v60 + 4) = *((void *)v61 + 4);
        (**(void (***)(void))(v62 - 8))();
      }
      else
      {
        long long v63 = *(_OWORD *)v61;
        long long v64 = *((_OWORD *)v61 + 1);
        *((void *)v60 + 4) = *((void *)v61 + 4);
        *(_OWORD *)uint64_t v60 = v63;
        *((_OWORD *)v60 + 1) = v64;
      }
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      if (EnumCaseMultiPayload == 1)
      {
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        swift_retain();
      }
      else
      {
        swift_bridgeObjectRetain();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *sub_388860(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    long long v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    uint64_t v7 = (int *)type metadata accessor for Link();
    uint64_t v8 = v7[7];
    uint64_t v9 = (_OWORD *)((char *)a1 + v8);
    int v10 = (_OWORD *)((char *)a2 + v8);
    uint64_t v11 = (int *)sub_3D3860();
    uint64_t v12 = *((void *)v11 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
      memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      long long v14 = v10[1];
      _OWORD *v9 = *v10;
      v9[1] = v14;
      *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
      *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
      *((void *)v9 + 7) = *((void *)v10 + 7);
      *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
      *(_OWORD *)((char *)v9 + 113) = *(_OWORD *)((char *)v10 + 113);
      *(_OWORD *)((char *)v9 + 104) = *(_OWORD *)((char *)v10 + 104);
      *(_OWORD *)((char *)v9 + 88) = *(_OWORD *)((char *)v10 + 88);
      *(_OWORD *)((char *)v9 + 72) = *(_OWORD *)((char *)v10 + 72);
      *((unsigned char *)v9 + 129) = *((unsigned char *)v10 + 129);
      uint64_t v15 = v11[11];
      uint64_t v16 = (char *)v9 + v15;
      int v17 = (char *)v10 + v15;
      uint64_t v18 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      *(_OWORD *)((char *)v9 + v11[12]) = *(_OWORD *)((char *)v10 + v11[12]);
      *((unsigned char *)v9 + v11[13]) = *((unsigned char *)v10 + v11[13]);
      *((unsigned char *)v9 + v11[14]) = *((unsigned char *)v10 + v11[14]);
      *((unsigned char *)v9 + v11[15]) = *((unsigned char *)v10 + v11[15]);
      *(_OWORD *)((char *)v9 + v11[16]) = *(_OWORD *)((char *)v10 + v11[16]);
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
    }
    *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
    uint64_t v19 = v7[9];
    int v20 = (char *)a1 + v19;
    int v21 = (char *)a2 + v19;
    long long v22 = *((_OWORD *)v21 + 1);
    *(_OWORD *)int v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v22;
    *((void *)v20 + 4) = *((void *)v21 + 4);
    uint64_t v23 = v7[10];
    int v24 = (char *)a1 + v23;
    int v25 = (char *)a2 + v23;
    uint64_t v26 = sub_3D7340();
    uint64_t v27 = *(void *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
      memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    uint64_t v29 = v7[11];
    id v30 = (char *)a1 + v29;
    id v31 = (char *)a2 + v29;
    long long v32 = *((_OWORD *)v31 + 1);
    *(_OWORD *)id v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v32;
    *((void *)v30 + 4) = *((void *)v31 + 4);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_388BB8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_386724((uint64_t)a1, type metadata accessor for ShowEpisodesShelvesProvider.Info.Footer);
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      long long v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      a1[2] = a2[2];
      uint64_t v7 = (int *)type metadata accessor for Link();
      uint64_t v8 = v7[7];
      uint64_t v9 = (_OWORD *)((char *)a1 + v8);
      int v10 = (_OWORD *)((char *)a2 + v8);
      uint64_t v11 = (int *)sub_3D3860();
      uint64_t v12 = *((void *)v11 - 1);
      if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v12 + 48))(v10, 1, v11))
      {
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        long long v14 = v10[1];
        _OWORD *v9 = *v10;
        v9[1] = v14;
        *((unsigned char *)v9 + 32) = *((unsigned char *)v10 + 32);
        *(_OWORD *)((char *)v9 + 40) = *(_OWORD *)((char *)v10 + 40);
        *((void *)v9 + 7) = *((void *)v10 + 7);
        *((unsigned char *)v9 + 64) = *((unsigned char *)v10 + 64);
        *(_OWORD *)((char *)v9 + 113) = *(_OWORD *)((char *)v10 + 113);
        *(_OWORD *)((char *)v9 + 104) = *(_OWORD *)((char *)v10 + 104);
        *(_OWORD *)((char *)v9 + 88) = *(_OWORD *)((char *)v10 + 88);
        *(_OWORD *)((char *)v9 + 72) = *(_OWORD *)((char *)v10 + 72);
        *((unsigned char *)v9 + 129) = *((unsigned char *)v10 + 129);
        uint64_t v15 = v11[11];
        uint64_t v16 = (char *)v9 + v15;
        int v17 = (char *)v10 + v15;
        uint64_t v18 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
        *(_OWORD *)((char *)v9 + v11[12]) = *(_OWORD *)((char *)v10 + v11[12]);
        *((unsigned char *)v9 + v11[13]) = *((unsigned char *)v10 + v11[13]);
        *((unsigned char *)v9 + v11[14]) = *((unsigned char *)v10 + v11[14]);
        *((unsigned char *)v9 + v11[15]) = *((unsigned char *)v10 + v11[15]);
        *(_OWORD *)((char *)v9 + v11[16]) = *(_OWORD *)((char *)v10 + v11[16]);
        (*(void (**)(_OWORD *, void, uint64_t, int *))(v12 + 56))(v9, 0, 1, v11);
      }
      *((unsigned char *)a1 + v7[8]) = *((unsigned char *)a2 + v7[8]);
      uint64_t v19 = v7[9];
      int v20 = (char *)a1 + v19;
      int v21 = (char *)a2 + v19;
      long long v22 = *((_OWORD *)v21 + 1);
      *(_OWORD *)int v20 = *(_OWORD *)v21;
      *((_OWORD *)v20 + 1) = v22;
      *((void *)v20 + 4) = *((void *)v21 + 4);
      uint64_t v23 = v7[10];
      int v24 = (char *)a1 + v23;
      int v25 = (char *)a2 + v23;
      uint64_t v26 = sub_3D7340();
      uint64_t v27 = *(void *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
        memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      uint64_t v29 = v7[11];
      id v30 = (char *)a1 + v29;
      id v31 = (char *)a2 + v29;
      long long v32 = *((_OWORD *)v31 + 1);
      *(_OWORD *)id v30 = *(_OWORD *)v31;
      *((_OWORD *)v30 + 1) = v32;
      *((void *)v30 + 4) = *((void *)v31 + 4);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_388F34()
{
  uint64_t result = type metadata accessor for Link();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t FlowAction.__allocating_init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, int a7, int a8, char *a9, uint64_t a10)
{
  uint64_t v17 = swift_allocObject();
  FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  return v17;
}

uint64_t static FlowAction.manageCategoriesPage(actionMetrics:)(uint64_t a1)
{
  uint64_t v2 = sub_3D6F40();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v14[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for FlowDestination();
  __chkstk_darwin(v6);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v9 = [self currentTraitCollection];
  id v10 = [v9 userInterfaceIdiom];

  if ((unint64_t)v10 >= 6) {
    char v11 = 0;
  }
  else {
    char v11 = 0x80000000504uLL >> (8 * v10);
  }
  swift_storeEnumTagMultiPayload();
  char v16 = v11;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  char v15 = 0;
  type metadata accessor for FlowAction(0);
  uint64_t v12 = swift_allocObject();
  FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v8, 0, 0, 0, 0, &v16, 0, 48, &v15, (uint64_t)v5);
  return v12;
}

ShelfKit::FlowPresentationContext_optional __swiftcall FlowPresentationContext.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_4748B8;
  v8._object = object;
  unint64_t v5 = sub_3D8E10(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 15;
  if (v5 < 0xF) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t FlowPresentationContext.rawValue.getter()
{
  uint64_t result = 0x7265666E69;
  switch(*v0)
  {
    case 1:
      unsigned int v2 = 2003789939;
      goto LABEL_5;
    case 2:
      uint64_t result = 1752397168;
      break;
    case 3:
      unsigned int v2 = 1752397168;
LABEL_5:
      uint64_t result = v2 | 0x6174654400000000;
      break;
    case 4:
      uint64_t result = 0x4D746E6573657270;
      break;
    case 5:
    case 6:
      uint64_t result = 0xD000000000000015;
      break;
    case 7:
      uint64_t result = 0xD000000000000010;
      break;
    case 8:
      uint64_t result = 0x43746E6573657270;
      break;
    case 9:
      uint64_t result = 0x53746E6573657270;
      break;
    case 0xA:
      uint64_t result = 0x50746E6573657270;
      break;
    case 0xB:
      uint64_t result = 0xD00000000000001ALL;
      break;
    case 0xC:
      uint64_t result = 0x7463656C6573;
      break;
    case 0xD:
      uint64_t result = 0x6563616C706572;
      break;
    case 0xE:
      uint64_t result = 0x546563616C706572;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_38948C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_284BAC(*a1, *a2);
}

Swift::Int sub_389498()
{
  return sub_3D9180();
}

uint64_t sub_389500()
{
  FlowPresentationContext.rawValue.getter();
  sub_3D7E60();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_389564()
{
  return sub_3D9180();
}

ShelfKit::FlowPresentationContext_optional sub_3895C8(Swift::String *a1)
{
  return FlowPresentationContext.init(rawValue:)(*a1);
}

uint64_t sub_3895D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = FlowPresentationContext.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t FlowAnimationBehavior.rawValue.getter(char a1)
{
  if (!a1) {
    return 0x7265666E69;
  }
  if (a1 == 1) {
    return 0x726576656ELL;
  }
  return 0x737961776C61;
}

uint64_t sub_38964C(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x726576656ELL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x737961776C61;
    unint64_t v4 = 0xE600000000000000;
  }
  if (*a1) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0x7265666E69;
  }
  if (v2) {
    unint64_t v7 = v4;
  }
  else {
    unint64_t v7 = 0xE500000000000000;
  }
  uint64_t v8 = 0x726576656ELL;
  if (*a2 != 1)
  {
    uint64_t v8 = 0x737961776C61;
    unint64_t v3 = 0xE600000000000000;
  }
  if (*a2) {
    uint64_t v9 = v8;
  }
  else {
    uint64_t v9 = 0x7265666E69;
  }
  if (*a2) {
    unint64_t v10 = v3;
  }
  else {
    unint64_t v10 = 0xE500000000000000;
  }
  if (v6 == v9 && v7 == v10) {
    char v11 = 1;
  }
  else {
    char v11 = sub_3D8FE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

Swift::Int sub_38973C()
{
  return sub_3D9180();
}

uint64_t sub_3897D4()
{
  sub_3D7E60();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_389858()
{
  return sub_3D9180();
}

uint64_t sub_3898EC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = _s8ShelfKit21FlowAnimationBehaviorO8rawValueACSgSS_tcfC_0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_38991C(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x726576656ELL;
  if (v2 != 1)
  {
    uint64_t v5 = 0x737961776C61;
    unint64_t v4 = 0xE600000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7265666E69;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t FlowOrigin.rawValue.getter()
{
  if (*v0) {
    return 0x6C616E7265747865;
  }
  else {
    return 0x7070616E69;
  }
}

ShelfKit::FlowOrigin_optional __swiftcall FlowOrigin.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  unint64_t v3 = v1;
  v4._rawValue = &off_474AA8;
  v8._object = object;
  Swift::Int v5 = sub_3D8E10(v4, v8);
  result.value = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  char *v3 = v7;
  return result;
}

Swift::Int sub_389A10()
{
  return sub_3D9180();
}

uint64_t sub_389A90()
{
  sub_3D7E60();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_389AFC()
{
  return sub_3D9180();
}

ShelfKit::FlowOrigin_optional sub_389B78(Swift::String *a1)
{
  return FlowOrigin.init(rawValue:)(*a1);
}

void sub_389B84(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7070616E69;
  if (*v1) {
    uint64_t v2 = 0x6C616E7265747865;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

ShelfKit::FlowDestinationPageHeader_optional __swiftcall FlowDestinationPageHeader.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  unint64_t v3 = v1;
  v4._rawValue = &off_474AF8;
  v8._object = object;
  unint64_t v5 = sub_3D8E10(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  char *v3 = v7;
  return result;
}

uint64_t FlowDestinationPageHeader.rawValue.getter()
{
  uint64_t v1 = 1919246965;
  if (*v0 != 1) {
    uint64_t v1 = 0x746954656772616CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x647261646E617473;
  }
}

uint64_t sub_389C74(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_284984(*a1, *a2);
}

Swift::Int sub_389C80()
{
  return sub_3D9180();
}

uint64_t sub_389D20()
{
  sub_3D7E60();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_389DAC()
{
  return sub_3D9180();
}

ShelfKit::FlowDestinationPageHeader_optional sub_389E48(Swift::String *a1)
{
  return FlowDestinationPageHeader.init(rawValue:)(*a1);
}

void sub_389E54(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE800000000000000;
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1919246965;
  if (v2 != 1)
  {
    uint64_t v5 = 0x746954656772616CLL;
    unint64_t v4 = 0xEA0000000000656CLL;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x647261646E617473;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, int a7, int a8, char *a9, uint64_t a10)
{
  uint64_t v11 = v10;
  int v42 = a8;
  int v39 = a7;
  uint64_t v40 = a4;
  uint64_t v41 = a5;
  uint64_t v36 = a2;
  uint64_t v37 = a10;
  uint64_t v38 = a3;
  uint64_t v14 = sub_3D2460();
  uint64_t v34 = *(void *)(v14 - 8);
  uint64_t v35 = v14;
  __chkstk_darwin(v14);
  char v16 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_3D6F40();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v34 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v24 = *a6;
  char v25 = *a9;
  uint64_t v43 = a1;
  sub_38BFE4(a1, v11 + OBJC_IVAR____TtC8ShelfKit10FlowAction_destinationType, (uint64_t (*)(void))type metadata accessor for FlowDestination);
  type metadata accessor for FlowAction.DestinationType(0);
  uint64_t v26 = v37;
  swift_storeEnumTagMultiPayload();
  uint64_t v27 = (void *)(v11 + OBJC_IVAR____TtC8ShelfKit10FlowAction_referrerUrl);
  *uint64_t v27 = 0;
  v27[1] = 0;
  *(unsigned char *)(v11 + OBJC_IVAR____TtC8ShelfKit10FlowAction_presentationContext) = v24;
  *(unsigned char *)(v11 + OBJC_IVAR____TtC8ShelfKit10FlowAction_animationBehavior) = v39;
  *(unsigned char *)(v11 + OBJC_IVAR____TtC8ShelfKit10FlowAction_destinationPageHeader) = v25;
  uint64_t v28 = v38;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, v26, v20);
  uint64_t v29 = sub_3D7340();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v19, 1, 1, v29);
  if (v28)
  {
    uint64_t v30 = v36;
  }
  else
  {
    sub_3D2450();
    uint64_t v30 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
    uint64_t v28 = v31;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v16, v35);
  }
  *(void *)(v11 + 16) = v30;
  *(void *)(v11 + 24) = v28;
  uint64_t v32 = v41;
  *(void *)(v11 + 32) = v40;
  *(void *)(v11 + 40) = v32;
  *(unsigned char *)(v11 + 48) = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v11 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v23, v20);
  sub_18F88((uint64_t)v19, v11 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_4B9870);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v26, v20);
  sub_38C0A0(v43, (uint64_t (*)(void))type metadata accessor for FlowDestination);
  return v11;
}

uint64_t type metadata accessor for FlowAction(uint64_t a1)
{
  return sub_2595C(a1, qword_4C0710);
}

uint64_t FlowAction.__allocating_init(deserializing:using:)(uint64_t a1, uint64_t a2)
{
  return sub_38B348(a1, a2, (uint64_t (*)(uint64_t, uint64_t))FlowAction.init(deserializing:using:));
}

char *FlowAction.init(deserializing:using:)(uint64_t a1, uint64_t a2)
{
  uint64_t v81 = a2;
  uint64_t v3 = sub_3D6CE0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v73 = (char *)&v62 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  Swift::String v8 = (char *)&v62 - v7;
  uint64_t v9 = sub_3D6B50();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v72 = (char *)&v62 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v71 = (char *)&v62 - v13;
  __chkstk_darwin(v14);
  uint64_t v70 = (char *)&v62 - v15;
  __chkstk_darwin(v16);
  uint64_t v69 = (char *)&v62 - v17;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v62 - v19;
  uint64_t v21 = type metadata accessor for LazyJSFlowDestination(0);
  __n128 v22 = __chkstk_darwin(v21 - 8);
  char v24 = (char *)&v62 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = v10;
  uint64_t v75 = v9;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v25 = v10 + 16;
  uint64_t v26 = v27;
  uint64_t v80 = a1;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v27)(v20, a1, v9, v22);
  uint64_t v76 = v3;
  uint64_t v77 = v4;
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v29 = v4 + 16;
  uint64_t v28 = v30;
  uint64_t v31 = v81;
  ((void (*)(char *))v30)(v8);
  uint64_t v32 = v78;
  swift_retain();
  int v33 = v79;
  sub_3B5EDC((uint64_t)v20, (uint64_t)v8, v24);
  if (v33)
  {
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v31, v76);
    (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v80, v75);
    type metadata accessor for FlowAction(0);
    swift_deallocPartialClassInstance();
    return v8;
  }
  long long v64 = v28;
  uint64_t v65 = v29;
  uint64_t v66 = v26;
  uint64_t v67 = v25;
  uint64_t v34 = v69;
  sub_3D6B60();
  uint64_t v35 = sub_3D6B20();
  uint64_t v37 = v74;
  uint64_t v38 = v75;
  int v39 = v32;
  long long v63 = v24;
  uint64_t v40 = v70;
  uint64_t v68 = 0;
  if (!v36) {
    goto LABEL_9;
  }
  if (v35 != 0xD00000000000001BLL || v36 != 0x800000000040AF50)
  {
    char v41 = sub_3D8FE0();
    swift_bridgeObjectRelease();
    if (v41) {
      goto LABEL_8;
    }
LABEL_9:
    sub_38BF3C();
    sub_3D6A60();
    Swift::String v79 = *(void (**)(void, void))(v37 + 8);
    v79(v34, v38);
    char v42 = v84;
    if (v84 == 15) {
      char v42 = 0;
    }
    goto LABEL_11;
  }
  swift_bridgeObjectRelease();
LABEL_8:
  Swift::String v79 = *(void (**)(void, void))(v37 + 8);
  v79(v34, v38);
  char v42 = 13;
LABEL_11:
  v32[OBJC_IVAR____TtC8ShelfKit10FlowAction_presentationContext] = v42;
  uint64_t v43 = v80;
  sub_3D6B60();
  sub_38BF90();
  sub_3D6A30();
  uint64_t v44 = v38;
  uint64_t v45 = (void (*)(char *, uint64_t))v79;
  v79(v40, v38);
  v39[OBJC_IVAR____TtC8ShelfKit10FlowAction_animationBehavior] = v83;
  uint64_t v46 = (uint64_t)v63;
  sub_38BFE4((uint64_t)v63, (uint64_t)&v39[OBJC_IVAR____TtC8ShelfKit10FlowAction_destinationType], type metadata accessor for LazyJSFlowDestination);
  type metadata accessor for FlowAction.DestinationType(0);
  swift_storeEnumTagMultiPayload();
  sub_3D6B60();
  uint64_t v47 = sub_3D6B20();
  uint64_t v49 = v48;
  v45(v40, v44);
  uint64_t v50 = (uint64_t *)&v39[OBJC_IVAR____TtC8ShelfKit10FlowAction_referrerUrl];
  *uint64_t v50 = v47;
  v50[1] = v49;
  long long v51 = v71;
  sub_3D6B60();
  sub_38C04C();
  sub_3D6A60();
  v45(v51, v44);
  uint64_t v52 = v44;
  char v53 = v82;
  if (v82 == 3) {
    char v53 = 0;
  }
  v39[OBJC_IVAR____TtC8ShelfKit10FlowAction_destinationPageHeader] = v53;
  swift_release();
  uint64_t v54 = v72;
  v66(v72, v43, v52);
  uint64_t v55 = v73;
  uint64_t v56 = v81;
  uint64_t v57 = v76;
  v64(v73, v81, v76);
  uint64_t v58 = (uint64_t)v55;
  Swift::String v8 = v39;
  uint64_t v59 = v68;
  uint64_t v60 = Action.init(deserializing:using:)(v54, v58);
  if (!v59) {
    Swift::String v8 = (char *)v60;
  }
  (*(void (**)(uint64_t, uint64_t))(v77 + 8))(v56, v57);
  v79(v43, v52);
  sub_38C0A0(v46, type metadata accessor for LazyJSFlowDestination);
  return v8;
}

uint64_t sub_38A95C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v15[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = (int *)type metadata accessor for LazyJSFlowDestination(0);
  __chkstk_darwin(v6);
  Swift::String v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for FlowAction.DestinationType(0);
  __chkstk_darwin(v9);
  uint64_t v11 = &v15[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_38BFE4(v1 + OBJC_IVAR____TtC8ShelfKit10FlowAction_destinationType, (uint64_t)v11, type metadata accessor for FlowAction.DestinationType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_38C100((uint64_t)v11, (uint64_t)v8, type metadata accessor for LazyJSFlowDestination);
    uint64_t v12 = (uint64_t *)*v8;
    sub_153B4((uint64_t)&v8[v6[5]], (uint64_t)v5, &qword_4AD7B0);
    sub_153B4((uint64_t)&v8[v6[6]], (uint64_t)v17, (uint64_t *)&unk_4B5A40);
    unsigned __int8 v16 = v8[v6[7]];
    sub_3B704C(v12, (uint64_t)v5, (uint64_t)v17, (char *)&v16, a1);
    return sub_38C0A0((uint64_t)v8, type metadata accessor for LazyJSFlowDestination);
  }
  else
  {
    sub_38C100((uint64_t)v11, a1, (uint64_t (*)(void))type metadata accessor for FlowDestination);
    uint64_t v14 = type metadata accessor for FlowDestination();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a1, 0, 1, v14);
  }
}

uint64_t FlowAction.referrerUrl.getter()
{
  return sub_221A4(&OBJC_IVAR____TtC8ShelfKit10FlowAction_referrerUrl);
}

uint64_t sub_38ABBC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8ShelfKit10FlowAction_presentationContext);
  uint64_t result = swift_beginAccess();
  *a1 = *v3;
  return result;
}

uint64_t sub_38AC0C(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8ShelfKit10FlowAction_presentationContext);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = v2;
  return result;
}

uint64_t (*sub_38AC60())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_38ACBC()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit10FlowAction_animationBehavior);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_38AD04(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8ShelfKit10FlowAction_animationBehavior);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*sub_38AD50())()
{
  return j__swift_endAccess;
}

void FlowAction.destinationPageHeader.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + OBJC_IVAR____TtC8ShelfKit10FlowAction_destinationPageHeader);
}

unint64_t sub_38ADC0()
{
  uint64_t v1 = type metadata accessor for LazyJSFlowDestination(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for FlowAction.DestinationType(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_38BFE4(v0 + OBJC_IVAR____TtC8ShelfKit10FlowAction_destinationType, (uint64_t)v6, type metadata accessor for FlowAction.DestinationType);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_38C100((uint64_t)v6, (uint64_t)v3, type metadata accessor for LazyJSFlowDestination);
    unint64_t v7 = (unint64_t)LazyJSFlowDestination.appEntityAnnotation()();
    sub_38C0A0((uint64_t)v3, type metadata accessor for LazyJSFlowDestination);
  }
  else
  {
    sub_38C0A0((uint64_t)v6, type metadata accessor for FlowAction.DestinationType);
    return 0;
  }
  return v7;
}

void FlowAction.init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)()
{
}

uint64_t sub_38AF54()
{
  sub_38C0A0(v0 + OBJC_IVAR____TtC8ShelfKit10FlowAction_destinationType, type metadata accessor for FlowAction.DestinationType);

  return swift_bridgeObjectRelease();
}

uint64_t FlowAction.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  uint64_t v2 = sub_3D6F40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_250FC(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_4B9870);
  sub_38C0A0(v0 + OBJC_IVAR____TtC8ShelfKit10FlowAction_destinationType, type metadata accessor for FlowAction.DestinationType);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t FlowAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  uint64_t v2 = sub_3D6F40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_250FC(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_4B9870);
  sub_38C0A0(v0 + OBJC_IVAR____TtC8ShelfKit10FlowAction_destinationType, type metadata accessor for FlowAction.DestinationType);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t FlowAction.generateClickEventWithItemLevelFields(sender:interactionView:)(uint64_t a1, char a2)
{
  uint64_t v4 = _s8ShelfKit10FlowActionC9metricsId6senderSSypSg_tF_0(a1);
  uint64_t v6 = v5;
  uint64_t v7 = sub_38BDD4(a1, a2);
  uint64_t v9 = v8;
  uint64_t v10 = sub_3D43A0();
  uint64_t v12 = v11;
  sub_25B7C(v16);
  sub_18F88((uint64_t)v16, (uint64_t)v15, &qword_4AA8D8);
  uint64_t v13 = sub_E7AA4(v4, v6, v10, v12, v7, v9, 0, 0, (Swift::String)0, 0, 0, 0, (uint64_t)v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t FlowAction.generateItemLevelLocationFields(locationPosition:sender:interactionView:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = _s8ShelfKit10FlowActionC9metricsId6senderSSypSg_tF_0(a2);
  uint64_t v10 = v9;
  uint64_t v11 = sub_3D3A90();
  uint64_t v13 = v12;
  uint64_t v14 = sub_38BDD4(a2, a3);
  uint64_t v16 = v15;
  uint64_t result = _s8ShelfKit10FlowActionC11metricsName6senderSSypSg_tF_0(a2);
  *a4 = v8;
  a4[1] = v10;
  a4[2] = v11;
  a4[3] = v13;
  a4[4] = a1;
  a4[5] = v14;
  a4[6] = v16;
  a4[7] = result;
  a4[8] = v18;
  return result;
}

uint64_t ChannelPowerSwooshAction.channelAdamId.getter()
{
  return sub_221A4(&OBJC_IVAR____TtC8ShelfKit24ChannelPowerSwooshAction_channelAdamId);
}

uint64_t ChannelPowerSwooshAction.channelName.getter()
{
  return sub_221A4(&OBJC_IVAR____TtC8ShelfKit24ChannelPowerSwooshAction_channelName);
}

uint64_t ChannelPowerSwooshAction.__allocating_init(deserializing:using:)(uint64_t a1, uint64_t a2)
{
  return sub_38B348(a1, a2, (uint64_t (*)(uint64_t, uint64_t))ChannelPowerSwooshAction.init(deserializing:using:));
}

uint64_t sub_38B348(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  return a3(a1, a2);
}

char *ChannelPowerSwooshAction.init(deserializing:using:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v35 = a2;
  uint64_t v31 = sub_3D6CE0();
  uint64_t v34 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  int v33 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_3D6B50();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v30 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v30 - v10;
  swift_retain();
  sub_3D6B60();
  uint64_t v12 = sub_3D6B20();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v11, v6);
  uint64_t v16 = (uint64_t *)(v3 + OBJC_IVAR____TtC8ShelfKit24ChannelPowerSwooshAction_channelAdamId);
  *uint64_t v16 = v12;
  v16[1] = v14;
  sub_3D6B60();
  uint64_t v17 = sub_3D6B20();
  uint64_t v19 = v18;
  uint64_t v32 = (void (*)(uint64_t, uint64_t))v15;
  v15(v11, v6);
  uint64_t v20 = (uint64_t *)(v3 + OBJC_IVAR____TtC8ShelfKit24ChannelPowerSwooshAction_channelName);
  *uint64_t v20 = v17;
  v20[1] = v19;
  uint64_t v21 = a1;
  uint64_t v22 = v6;
  swift_release();
  uint64_t v23 = (uint64_t)v30;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v30, v21, v6);
  uint64_t v24 = v35;
  uint64_t v25 = v34;
  uint64_t v26 = (uint64_t)v33;
  uint64_t v27 = v31;
  (*(void (**)(char *, uint64_t))(v34 + 16))(v33, v35);
  uint64_t v28 = FlowAction.init(deserializing:using:)(v23, v26);
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v27);
  v32(v21, v22);
  return v28;
}

void ChannelPowerSwooshAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)()
{
}

uint64_t sub_38B6C8()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t ChannelPowerSwooshAction.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  uint64_t v2 = sub_3D6F40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_250FC(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_4B9870);
  sub_38C0A0(v0 + OBJC_IVAR____TtC8ShelfKit10FlowAction_destinationType, type metadata accessor for FlowAction.DestinationType);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ChannelPowerSwooshAction.__deallocating_deinit()
{
  ChannelPowerSwooshAction.deinit();

  return swift_deallocClassInstance();
}

uint64_t _s8ShelfKit10FlowOriginO2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  BOOL v2 = *a1 == 0;
  if (*a1) {
    uint64_t v3 = 0x6C616E7265747865;
  }
  else {
    uint64_t v3 = 0x7070616E69;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE800000000000000;
  }
  if (*a2) {
    uint64_t v5 = 0x6C616E7265747865;
  }
  else {
    uint64_t v5 = 0x7070616E69;
  }
  if (*a2) {
    unint64_t v6 = 0xE800000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_3D8FE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t _s8ShelfKit10FlowActionC6seeAllyAcA0C11DestinationOFZ_0(uint64_t a1)
{
  uint64_t v2 = sub_3D7260();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_3D6F40();
  __chkstk_darwin(v6 - 8);
  uint64_t v20 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for FlowDestination();
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_38BFE4(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for FlowDestination);
  uint64_t v11 = (objc_class *)[self mainBundle];
  v19._countAndFlagsBits = 0xE000000000000000;
  v31._countAndFlagsBits = 0x535F4E4F49544341;
  v31._object = (void *)0xEE004C4C415F4545;
  v32.value._countAndFlagsBits = 0;
  v32.value._object = 0;
  v12.super.Class isa = v11;
  v33._countAndFlagsBits = 0;
  v33._object = (void *)0xE000000000000000;
  uint64_t v13 = sub_3D2060(v31, v32, v12, v33, v19);
  uint64_t v21 = v14;
  uint64_t v22 = v13;

  sub_3D4140();
  sub_3D4440();
  uint64_t v15 = sub_3D2350();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v5, 1, 1, v15);
  sub_3D2F90();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9890);
  sub_3D6D80();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_3DED90;
  sub_3D43A0();
  sub_3D6D10();
  swift_bridgeObjectRelease();
  sub_3D7250();
  uint64_t v16 = (uint64_t)v20;
  sub_3D6F10();
  sub_18F88((uint64_t)v24, (uint64_t)v30, (uint64_t *)&unk_4B1F80);
  sub_443B4((uint64_t)v30);
  uint64_t v29 = v25;
  sub_443E0((uint64_t)&v29);
  uint64_t v28 = v26;
  sub_443E0((uint64_t)&v28);
  sub_3D4C4(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_250FC((uint64_t)v5, &qword_4AD7B0);
  __int16 v23 = 0;
  type metadata accessor for FlowAction(0);
  uint64_t v17 = swift_allocObject();
  FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)((uint64_t)v10, 0, 0, v22, v21, (char *)&v23 + 1, 0, 48, (char *)&v23, v16);
  return v17;
}

uint64_t _s8ShelfKit10FlowActionC9metricsId6senderSSypSg_tF_0(uint64_t a1)
{
  sub_153B4(a1, (uint64_t)v4, (uint64_t *)&unk_4B5A40);
  if (!v4[3])
  {
    sub_250FC((uint64_t)v4, (uint64_t *)&unk_4B5A40);
    return 0;
  }
  type metadata accessor for LegacyLockup();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  v4[0] = *(void *)(v3 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId);
  sub_17264();
  uint64_t v1 = sub_3D8A20();
  swift_release();
  return v1;
}

uint64_t sub_38BDD4(uint64_t a1, char a2)
{
  switch(a2)
  {
    case 2:
    case 3:
    case 4:
      uint64_t result = sub_3D4460();
      break;
    case 6:
      uint64_t result = sub_3D4440();
      break;
    case 7:
      uint64_t v7 = v2;
      uint64_t v8 = v3;
      sub_153B4(a1, (uint64_t)v5, (uint64_t *)&unk_4B5A40);
      if (v6)
      {
        type metadata accessor for LegacyLockup();
        if (swift_dynamicCast())
        {
          swift_release();
          return sub_3D4460();
        }
      }
      else
      {
        sub_250FC((uint64_t)v5, (uint64_t *)&unk_4B5A40);
      }
      uint64_t result = sub_3D4440();
      break;
    default:
      uint64_t result = sub_3D43F0();
      break;
  }
  return result;
}

uint64_t _s8ShelfKit21FlowAnimationBehaviorO8rawValueACSgSS_tcfC_0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_474A40;
  v6._object = a2;
  unint64_t v4 = sub_3D8E10(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 3) {
    return 3;
  }
  else {
    return v4;
  }
}

uint64_t type metadata accessor for FlowAction.DestinationType(uint64_t a1)
{
  return sub_2595C(a1, qword_4C0A28);
}

unint64_t sub_38BF3C()
{
  unint64_t result = qword_4C06B0;
  if (!qword_4C06B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C06B0);
  }
  return result;
}

unint64_t sub_38BF90()
{
  unint64_t result = qword_4C06B8;
  if (!qword_4C06B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C06B8);
  }
  return result;
}

uint64_t sub_38BFE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_38C04C()
{
  unint64_t result = qword_4C06C0;
  if (!qword_4C06C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C06C0);
  }
  return result;
}

uint64_t sub_38C0A0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_38C100(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t _s8ShelfKit10FlowActionC11metricsName6senderSSypSg_tF_0(uint64_t a1)
{
  sub_153B4(a1, (uint64_t)v4, (uint64_t *)&unk_4B5A40);
  if (!v5)
  {
    sub_250FC((uint64_t)v4, (uint64_t *)&unk_4B5A40);
    return 0;
  }
  type metadata accessor for LegacyLockup();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  if (!*(void *)(v3 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_title + 8))
  {
    swift_release();
    return 0;
  }
  uint64_t v1 = *(void *)(v3 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_title);
  swift_bridgeObjectRetain();
  swift_release();
  return v1;
}

unint64_t sub_38C23C()
{
  unint64_t result = qword_4C06C8;
  if (!qword_4C06C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C06C8);
  }
  return result;
}

unint64_t sub_38C294()
{
  unint64_t result = qword_4C06D0;
  if (!qword_4C06D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C06D0);
  }
  return result;
}

unint64_t sub_38C2EC()
{
  unint64_t result = qword_4C06D8;
  if (!qword_4C06D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C06D8);
  }
  return result;
}

unint64_t sub_38C344()
{
  unint64_t result = qword_4C06E0;
  if (!qword_4C06E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C06E0);
  }
  return result;
}

uint64_t sub_38C398@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtC8ShelfKit10FlowAction_presentationContext, a2);
}

uint64_t sub_38C3A4(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, &OBJC_IVAR____TtC8ShelfKit10FlowAction_presentationContext);
}

uint64_t sub_38C3B0@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return keypath_getTm_1(a1, &OBJC_IVAR____TtC8ShelfKit10FlowAction_animationBehavior, a2);
}

uint64_t keypath_getTm_1@<X0>(void *a1@<X0>, void *a2@<X3>, unsigned char *a3@<X8>)
{
  unint64_t v4 = (unsigned char *)(*a1 + *a2);
  uint64_t result = swift_beginAccess();
  *a3 = *v4;
  return result;
}

uint64_t sub_38C40C(char *a1, void *a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_0(a1, a2, a3, a4, &OBJC_IVAR____TtC8ShelfKit10FlowAction_animationBehavior);
}

uint64_t keypath_setTm_0(char *a1, void *a2, uint64_t a3, uint64_t a4, void *a5)
{
  char v5 = *a1;
  Swift::String v6 = (unsigned char *)(*a2 + *a5);
  uint64_t result = swift_beginAccess();
  *Swift::String v6 = v5;
  return result;
}

uint64_t getEnumTagSinglePayload for FlowPresentationContext(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF2) {
    goto LABEL_17;
  }
  if (a2 + 14 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 14) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 14;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 14;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xF;
  int v8 = v6 - 15;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FlowPresentationContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 14 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 14) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF2) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF1)
  {
    unsigned int v6 = ((a2 - 242) >> 8) + 1;
    *uint64_t result = a2 + 14;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x38C5C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 14;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowPresentationContext()
{
  return &type metadata for FlowPresentationContext;
}

ValueMetadata *type metadata accessor for FlowAnimationBehavior()
{
  return &type metadata for FlowAnimationBehavior;
}

unsigned char *storeEnumTagSinglePayload for FlowOrigin(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x38C6D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowOrigin()
{
  return &type metadata for FlowOrigin;
}

unsigned char *_s8ShelfKit21FlowAnimationBehaviorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x38C7DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowDestinationPageHeader()
{
  return &type metadata for FlowDestinationPageHeader;
}

uint64_t sub_38C814()
{
  return type metadata accessor for FlowAction(0);
}

uint64_t sub_38C81C()
{
  uint64_t result = type metadata accessor for FlowAction.DestinationType(319);
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for FlowAction(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for FlowAction);
}

uint64_t dispatch thunk of FlowAction.__allocating_init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of FlowAction.destination.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 208))();
}

uint64_t dispatch thunk of FlowAction.presentationContext.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 216))();
}

uint64_t dispatch thunk of FlowAction.presentationContext.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 224))();
}

uint64_t dispatch thunk of FlowAction.presentationContext.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 232))();
}

uint64_t dispatch thunk of FlowAction.animationBehavior.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 240))();
}

uint64_t dispatch thunk of FlowAction.animationBehavior.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of FlowAction.animationBehavior.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 256))();
}

uint64_t dispatch thunk of FlowAction.appEntityAnnotation()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t sub_38CA30()
{
  return type metadata accessor for ChannelPowerSwooshAction(0);
}

uint64_t type metadata accessor for ChannelPowerSwooshAction(uint64_t a1)
{
  return sub_2595C(a1, qword_4C0870);
}

uint64_t sub_38CA58()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_38CA9C(uint64_t *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      unsigned int v6 = (int *)type metadata accessor for LazyJSFlowDestination(0);
      uint64_t v7 = v6[5];
      int v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      uint64_t v10 = sub_3D2350();
      uint64_t v11 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
        memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      uint64_t v17 = v6[6];
      uint64_t v18 = (char *)a1 + v17;
      Swift::String v19 = (_OWORD *)((char *)a2 + v17);
      uint64_t v20 = *(void *)((char *)a2 + v17 + 24);
      if (v20)
      {
        *((void *)v18 + 3) = v20;
        (**(void (***)(void))(v20 - 8))();
      }
      else
      {
        long long v21 = v19[1];
        *(_OWORD *)uint64_t v18 = *v19;
        *((_OWORD *)v18 + 1) = v21;
      }
      *((unsigned char *)a1 + v6[7]) = *((unsigned char *)a2 + v6[7]);
    }
    else
    {
      uint64_t v14 = type metadata accessor for FlowDestination();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v15 = sub_3D2350();
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(a1, a2, v15);
          uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0470);
          *((unsigned char *)a1 + *(int *)(v16 + 48)) = *((unsigned char *)a2 + *(int *)(v16 + 48));
          goto LABEL_86;
        case 1u:
          uint64_t v22 = sub_3D2350();
          uint64_t v23 = *(void *)(v22 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v23 + 48))(a2, 1, v22)) {
            goto LABEL_33;
          }
          goto LABEL_45;
        case 2u:
          uint64_t v24 = sub_3D2350();
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v24 - 8) + 16))(a1, a2, v24);
          uint64_t v25 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4B0458) + 48);
          uint64_t v26 = (uint64_t *)((char *)a1 + v25);
          uint64_t v27 = (void *)((char *)a2 + v25);
          uint64_t v28 = (int *)sub_3D3860();
          uint64_t v29 = *((void *)v28 - 1);
          if ((*(unsigned int (**)(void *, uint64_t, int *))(v29 + 48))(v27, 1, v28))
          {
            uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
            memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
          }
          else
          {
            uint64_t v70 = v27[1];
            *uint64_t v26 = *v27;
            v26[1] = v70;
            int v71 = *((unsigned __int8 *)v27 + 32);
            swift_bridgeObjectRetain();
            if (v71 == 255)
            {
              *((_OWORD *)v26 + 1) = *((_OWORD *)v27 + 1);
              *((unsigned char *)v26 + 32) = *((unsigned char *)v27 + 32);
            }
            else
            {
              uint64_t v72 = v27[2];
              uint64_t v73 = v27[3];
              sub_4C484(v72, v73, v71);
              v26[2] = v72;
              long long v26[3] = v73;
              *((unsigned char *)v26 + 32) = v71;
            }
            *(_OWORD *)(v26 + 5) = *(_OWORD *)(v27 + 5);
            uint64_t v88 = (id *)(v27 + 7);
            int v89 = *((unsigned __int8 *)v27 + 64);
            if (v89 == 255)
            {
              v26[7] = *v88;
              *((unsigned char *)v26 + 64) = *((unsigned char *)v27 + 64);
            }
            else
            {
              id v90 = *v88;
              sub_4C49C(*v88, *((unsigned char *)v27 + 64));
              v26[7] = v90;
              *((unsigned char *)v26 + 64) = v89;
            }
            uint64_t v94 = (id *)(v27 + 9);
            int v95 = *((unsigned __int8 *)v27 + 80);
            if (v95 == 255)
            {
              v26[9] = *v94;
              *((unsigned char *)v26 + 80) = *((unsigned char *)v27 + 80);
            }
            else
            {
              id v96 = *v94;
              sub_4C49C(*v94, *((unsigned char *)v27 + 80));
              v26[9] = v96;
              *((unsigned char *)v26 + 80) = v95;
            }
            os_log_type_t v100 = (id *)(v27 + 11);
            int v101 = *((unsigned __int8 *)v27 + 96);
            if (v101 == 255)
            {
              v26[11] = *v100;
              *((unsigned char *)v26 + 96) = *((unsigned char *)v27 + 96);
            }
            else
            {
              id v102 = *v100;
              sub_4C49C(*v100, *((unsigned char *)v27 + 96));
              v26[11] = v102;
              *((unsigned char *)v26 + 96) = v101;
            }
            id v106 = (id *)(v27 + 13);
            int v107 = *((unsigned __int8 *)v27 + 112);
            if (v107 == 255)
            {
              v26[13] = *v106;
              *((unsigned char *)v26 + 112) = *((unsigned char *)v27 + 112);
            }
            else
            {
              id v108 = *v106;
              sub_4C49C(*v106, *((unsigned char *)v27 + 112));
              v26[13] = v108;
              *((unsigned char *)v26 + 112) = v107;
            }
            uint64_t v112 = (id *)(v27 + 15);
            int v113 = *((unsigned __int8 *)v27 + 128);
            if (v113 == 255)
            {
              v26[15] = *v112;
              *((unsigned char *)v26 + 128) = *((unsigned char *)v27 + 128);
            }
            else
            {
              id v114 = *v112;
              sub_4C49C(*v112, *((unsigned char *)v27 + 128));
              v26[15] = v114;
              *((unsigned char *)v26 + 128) = v113;
            }
            *((unsigned char *)v26 + 129) = *((unsigned char *)v27 + 129);
            uint64_t v118 = v28[11];
            uint64_t v119 = (char *)v26 + v118;
            uint64_t v120 = (char *)v27 + v118;
            uint64_t v121 = sub_3D3750();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v121 - 8) + 16))(v119, v120, v121);
            uint64_t v122 = v28[12];
            int v123 = (void *)((char *)v26 + v122);
            id v124 = (void *)((char *)v27 + v122);
            uint64_t v125 = v124[1];
            *int v123 = *v124;
            v123[1] = v125;
            *((unsigned char *)v26 + v28[13]) = *((unsigned char *)v27 + v28[13]);
            *((unsigned char *)v26 + v28[14]) = *((unsigned char *)v27 + v28[14]);
            *((unsigned char *)v26 + v28[15]) = *((unsigned char *)v27 + v28[15]);
            uint64_t v126 = v28[16];
            int v127 = (void *)((char *)v26 + v126);
            id v128 = (void *)((char *)v27 + v126);
            uint64_t v129 = v128[1];
            *int v127 = *v128;
            v127[1] = v129;
            uint64_t v130 = *(void (**)(void *, void, uint64_t, int *))(v29 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v130(v26, 0, 1, v28);
          }
          goto LABEL_86;
        case 3u:
          *a1 = *a2;
          swift_retain();
          uint64_t v31 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACBD8) + 48);
          Swift::String_optional v32 = (char *)a1 + v31;
          Swift::String v33 = (char *)a2 + v31;
          uint64_t v34 = sub_3D2350();
          uint64_t v35 = *(void *)(v34 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34)) {
            goto LABEL_22;
          }
          goto LABEL_44;
        case 4u:
          *a1 = *a2;
          swift_retain();
          uint64_t v36 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACBD8) + 48);
          Swift::String_optional v32 = (char *)a1 + v36;
          Swift::String v33 = (char *)a2 + v36;
          uint64_t v34 = sub_3D2350();
          uint64_t v35 = *(void *)(v34 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34)) {
            goto LABEL_22;
          }
          goto LABEL_44;
        case 5u:
          *a1 = *a2;
          swift_retain();
          uint64_t v37 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACBD8) + 48);
          Swift::String_optional v32 = (char *)a1 + v37;
          Swift::String v33 = (char *)a2 + v37;
          uint64_t v34 = sub_3D2350();
          uint64_t v35 = *(void *)(v34 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
          {
LABEL_22:
            uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
            memcpy(v32, v33, *(void *)(*(void *)(v38 - 8) + 64));
          }
          else
          {
LABEL_44:
            (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
          }
          goto LABEL_86;
        case 6u:
        case 0x16u:
        case 0x1Bu:
          uint64_t v60 = (void *)*a2;
          *a1 = *a2;
          id v61 = v60;
          goto LABEL_86;
        case 7u:
          uint64_t v39 = a2[1];
          *a1 = *a2;
          a1[1] = v39;
          a1[2] = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          uint64_t v40 = a2[4];
          char v41 = *((unsigned char *)a2 + 40);
          swift_bridgeObjectRetain();
          sub_54DC8(v40, v41);
          a1[4] = v40;
          *((unsigned char *)a1 + 40) = v41;
          goto LABEL_86;
        case 8u:
          uint64_t v42 = *a2;
          uint64_t v43 = a2[1];
          uint64_t v44 = a2[2];
          uint64_t v45 = a2[3];
          uint64_t v46 = a2[4];
          uint64_t v47 = a2[5];
          uint64_t v48 = a2[7];
          __dstb = (void *)v48;
          uint64_t v151 = a2[6];
          char v49 = *((unsigned char *)a2 + 64);
          sub_B5744(v42, v43, v44, v45, v46, v47, v151, v48, v49);
          *a1 = v42;
          a1[1] = v43;
          a1[2] = v44;
          a1[3] = v45;
          a1[4] = v46;
          a1[5] = v47;
          a1[6] = v151;
          a1[7] = (uint64_t)__dstb;
          *((unsigned char *)a1 + 64) = v49;
          goto LABEL_86;
        case 9u:
          uint64_t v50 = a2[1];
          *a1 = *a2;
          a1[1] = v50;
          uint64_t v51 = a2[3];
          a1[2] = a2[2];
          a1[3] = v51;
          a1[4] = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          a1[6] = a2[6];
          *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_86;
        case 0xAu:
        case 0xDu:
        case 0x10u:
        case 0x15u:
        case 0x17u:
        case 0x1Au:
          *a1 = *a2;
          swift_retain();
          goto LABEL_86;
        case 0xBu:
        case 0xCu:
        case 0xEu:
        case 0x11u:
        case 0x13u:
          uint64_t v58 = a2[1];
          *a1 = *a2;
          a1[1] = v58;
          swift_bridgeObjectRetain();
          goto LABEL_86;
        case 0xFu:
          uint64_t v52 = a2[1];
          *a1 = *a2;
          a1[1] = v52;
          uint64_t v53 = a2[3];
          a1[2] = a2[2];
          a1[3] = v53;
          uint64_t v54 = a2[5];
          a1[4] = a2[4];
          a1[5] = v54;
          uint64_t v55 = a2[6];
          uint64_t v56 = a2[7];
          a1[6] = v55;
          a1[7] = v56;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_86;
        case 0x12u:
          uint64_t v57 = sub_3D2350();
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v57 - 8) + 16))(a1, a2, v57);
          goto LABEL_86;
        case 0x18u:
          uint64_t v22 = sub_3D2350();
          uint64_t v23 = *(void *)(v22 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v23 + 48))(a2, 1, v22)) {
            goto LABEL_33;
          }
          goto LABEL_45;
        case 0x19u:
          uint64_t v22 = sub_3D2350();
          uint64_t v23 = *(void *)(v22 - 8);
          if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v23 + 48))(a2, 1, v22))
          {
LABEL_33:
            uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
            memcpy(a1, a2, *(void *)(*(void *)(v59 - 8) + 64));
          }
          else
          {
LABEL_45:
            (*(void (**)(uint64_t *, void *, uint64_t))(v23 + 16))(a1, a2, v22);
            (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v23 + 56))(a1, 0, 1, v22);
          }
          goto LABEL_86;
        case 0x1Cu:
          *a1 = *a2;
          swift_bridgeObjectRetain();
          goto LABEL_86;
        case 0x1Du:
          uint64_t v62 = sub_3D5000();
          (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v62 - 8) + 16))(a1, a2, v62);
          goto LABEL_86;
        case 0x1Eu:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[2] = a2[2];
          swift_bridgeObjectRetain();
          goto LABEL_86;
        case 0x1Fu:
          *(_OWORD *)a1 = *(_OWORD *)a2;
          a1[2] = a2[2];
          uint64_t v63 = type metadata accessor for Category();
          uint64_t v64 = *(int *)(v63 + 24);
          __dst = (char *)a1 + v64;
          uint64_t v152 = v63;
          uint64_t v65 = (char *)a2 + v64;
          uint64_t v66 = sub_3D2350();
          uint64_t v67 = *(void *)(v66 - 8);
          uint64_t v68 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v67 + 48);
          swift_bridgeObjectRetain();
          if (v68(v65, 1, v66))
          {
            uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
            memcpy(__dst, v65, *(void *)(*(void *)(v69 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v67 + 16))(__dst, v65, v66);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v67 + 56))(__dst, 0, 1, v66);
          }
          uint64_t v74 = v152;
          uint64_t v75 = *(int *)(v152 + 28);
          uint64_t v76 = (char *)a1 + v75;
          uint64_t v77 = (char *)a2 + v75;
          *(_DWORD *)uint64_t v76 = *(_DWORD *)v77;
          v76[4] = v77[4];
          uint64_t v78 = *(int *)(v152 + 32);
          Swift::String v79 = (uint64_t *)((char *)a1 + v78);
          uint64_t v80 = (void *)((char *)a2 + v78);
          uint64_t v81 = (int *)sub_3D3860();
          char v82 = (unsigned int (**)(void *, uint64_t, int *))*((void *)v81 - 1);
          if (v82[6](v80, 1, v81))
          {
            uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
            memcpy(v79, v80, *(void *)(*(void *)(v83 - 8) + 64));
          }
          else
          {
            __dsta = v82;
            uint64_t v84 = v80[1];
            *Swift::String v79 = *v80;
            v79[1] = v84;
            int v85 = *((unsigned __int8 *)v80 + 32);
            swift_bridgeObjectRetain();
            if (v85 == 255)
            {
              *((_OWORD *)v79 + 1) = *((_OWORD *)v80 + 1);
              *((unsigned char *)v79 + 32) = *((unsigned char *)v80 + 32);
            }
            else
            {
              uint64_t v87 = v80[2];
              uint64_t v86 = v80[3];
              sub_4C484(v87, v86, v85);
              uint64_t v79[2] = v87;
              v79[3] = v86;
              *((unsigned char *)v79 + 32) = v85;
            }
            *(_OWORD *)(v79 + 5) = *(_OWORD *)(v80 + 5);
            BOOL v91 = (id *)(v80 + 7);
            int v92 = *((unsigned __int8 *)v80 + 64);
            if (v92 == 255)
            {
              v79[7] = *v91;
              *((unsigned char *)v79 + 64) = *((unsigned char *)v80 + 64);
            }
            else
            {
              id v93 = *v91;
              sub_4C49C(*v91, *((unsigned char *)v80 + 64));
              v79[7] = v93;
              *((unsigned char *)v79 + 64) = v92;
            }
            char v97 = (id *)(v80 + 9);
            int v98 = *((unsigned __int8 *)v80 + 80);
            if (v98 == 255)
            {
              v79[9] = *v97;
              *((unsigned char *)v79 + 80) = *((unsigned char *)v80 + 80);
            }
            else
            {
              id v99 = *v97;
              sub_4C49C(*v97, *((unsigned char *)v80 + 80));
              v79[9] = v99;
              *((unsigned char *)v79 + 80) = v98;
            }
            unint64_t v103 = (id *)(v80 + 11);
            int v104 = *((unsigned __int8 *)v80 + 96);
            if (v104 == 255)
            {
              v79[11] = *v103;
              *((unsigned char *)v79 + 96) = *((unsigned char *)v80 + 96);
            }
            else
            {
              id v105 = *v103;
              sub_4C49C(*v103, *((unsigned char *)v80 + 96));
              v79[11] = v105;
              *((unsigned char *)v79 + 96) = v104;
            }
            uint64_t v109 = (id *)(v80 + 13);
            int v110 = *((unsigned __int8 *)v80 + 112);
            if (v110 == 255)
            {
              v79[13] = *v109;
              *((unsigned char *)v79 + 112) = *((unsigned char *)v80 + 112);
            }
            else
            {
              id v111 = *v109;
              sub_4C49C(*v109, *((unsigned char *)v80 + 112));
              v79[13] = v111;
              *((unsigned char *)v79 + 112) = v110;
            }
            uint64_t v115 = (id *)(v80 + 15);
            int v116 = *((unsigned __int8 *)v80 + 128);
            if (v116 == 255)
            {
              v79[15] = *v115;
              *((unsigned char *)v79 + 128) = *((unsigned char *)v80 + 128);
            }
            else
            {
              id v117 = *v115;
              sub_4C49C(*v115, *((unsigned char *)v80 + 128));
              v79[15] = v117;
              *((unsigned char *)v79 + 128) = v116;
            }
            *((unsigned char *)v79 + 129) = *((unsigned char *)v80 + 129);
            uint64_t v131 = v81[11];
            id v132 = (char *)v79 + v131;
            id v133 = (char *)v80 + v131;
            uint64_t v134 = sub_3D3750();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16))(v132, v133, v134);
            uint64_t v135 = v81[12];
            id v136 = (void *)((char *)v79 + v135);
            id v137 = (void *)((char *)v80 + v135);
            uint64_t v138 = v137[1];
            *id v136 = *v137;
            v136[1] = v138;
            *((unsigned char *)v79 + v81[13]) = *((unsigned char *)v80 + v81[13]);
            *((unsigned char *)v79 + v81[14]) = *((unsigned char *)v80 + v81[14]);
            *((unsigned char *)v79 + v81[15]) = *((unsigned char *)v80 + v81[15]);
            uint64_t v139 = v81[16];
            uint64_t v140 = (void *)((char *)v79 + v139);
            uint64_t v141 = (void *)((char *)v80 + v139);
            uint64_t v142 = v141[1];
            *uint64_t v140 = *v141;
            v140[1] = v142;
            uint64_t v143 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v143(v79, 0, 1, v81);
            uint64_t v74 = v152;
          }
          uint64_t v144 = *(int *)(v74 + 36);
          uint64_t v145 = (char *)a1 + v144;
          uint64_t v146 = (char *)a2 + v144;
          *(void *)uint64_t v145 = *(void *)v146;
          v145[8] = v146[8];
          *(uint64_t *)((char *)a1 + *(int *)(v74 + 40)) = *(void *)((char *)a2 + *(int *)(v74 + 40));
          swift_bridgeObjectRetain();
LABEL_86:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v14 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_38DF2C(uint64_t a1)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = type metadata accessor for LazyJSFlowDestination(0);
    uint64_t v3 = a1 + *(int *)(v2 + 20);
    uint64_t v4 = sub_3D2350();
    uint64_t v5 = *(void *)(v4 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
    }
    uint64_t v6 = a1 + *(int *)(v2 + 24);
    if (*(void *)(v6 + 24))
    {
      __swift_destroy_boxed_opaque_existential_1(v6);
    }
  }
  else
  {
    type metadata accessor for FlowDestination();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 0x12u:
        uint64_t v12 = sub_3D2350();
        goto LABEL_45;
      case 1u:
      case 0x18u:
      case 0x19u:
        uint64_t v7 = sub_3D2350();
        uint64_t v40 = *(void *)(v7 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(a1, 1, v7)) {
          goto LABEL_18;
        }
        return;
      case 2u:
        uint64_t v13 = sub_3D2350();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
        uint64_t v14 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4B0458) + 48);
        uint64_t v15 = sub_3D3860();
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 48))(v14, 1, v15)) {
          return;
        }
        swift_bridgeObjectRelease();
        int v16 = *(unsigned __int8 *)(v14 + 32);
        if (v16 != 255) {
          sub_49E54(*(void *)(v14 + 16), *(void *)(v14 + 24), v16);
        }
        int v17 = *(unsigned __int8 *)(v14 + 64);
        if (v17 != 255) {
          sub_4C6F0(*(id *)(v14 + 56), v17);
        }
        int v18 = *(unsigned __int8 *)(v14 + 80);
        if (v18 != 255) {
          sub_4C6F0(*(id *)(v14 + 72), v18);
        }
        int v19 = *(unsigned __int8 *)(v14 + 96);
        if (v19 != 255) {
          sub_4C6F0(*(id *)(v14 + 88), v19);
        }
        int v20 = *(unsigned __int8 *)(v14 + 112);
        if (v20 != 255) {
          sub_4C6F0(*(id *)(v14 + 104), v20);
        }
        int v21 = *(unsigned __int8 *)(v14 + 128);
        if (v21 != 255) {
          sub_4C6F0(*(id *)(v14 + 120), v21);
        }
        uint64_t v22 = v14 + *(int *)(v15 + 44);
        uint64_t v23 = sub_3D3750();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v23 - 8) + 8))(v22, v23);
        swift_bridgeObjectRelease();
        goto LABEL_12;
      case 3u:
      case 4u:
      case 5u:
        swift_release();
        a1 += *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACBD8) + 48);
        uint64_t v7 = sub_3D2350();
        uint64_t v40 = *(void *)(v7 - 8);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(a1, 1, v7)) {
          return;
        }
LABEL_18:
        int v8 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
        uint64_t v9 = a1;
        uint64_t v10 = v7;
LABEL_46:
        v8(v9, v10);
        break;
      case 6u:
      case 0x16u:
      case 0x1Bu:
        uint64_t v11 = *(void **)a1;

        return;
      case 7u:
        swift_bridgeObjectRelease();
        uint64_t v24 = *(void *)(a1 + 32);
        char v25 = *(unsigned char *)(a1 + 40);
        sub_54DDC(v24, v25);
        return;
      case 8u:
        sub_B2620(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
        return;
      case 9u:
        swift_bridgeObjectRelease();
        goto LABEL_12;
      case 0xAu:
      case 0xDu:
      case 0x10u:
      case 0x15u:
      case 0x17u:
      case 0x1Au:
        swift_release();
        return;
      case 0xBu:
      case 0xCu:
      case 0xEu:
      case 0x11u:
      case 0x13u:
      case 0x1Cu:
      case 0x1Eu:
        goto LABEL_12;
      case 0xFu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_12;
      case 0x1Du:
        uint64_t v12 = sub_3D5000();
LABEL_45:
        int v8 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
        uint64_t v10 = v12;
        uint64_t v9 = a1;
        goto LABEL_46;
      case 0x1Fu:
        swift_bridgeObjectRelease();
        uint64_t v26 = type metadata accessor for Category();
        uint64_t v27 = a1 + *(int *)(v26 + 24);
        uint64_t v28 = sub_3D2350();
        uint64_t v29 = *(void *)(v28 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28)) {
          (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v27, v28);
        }
        uint64_t v30 = a1 + *(int *)(v26 + 32);
        uint64_t v31 = sub_3D3860();
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 48))(v30, 1, v31))
        {
          swift_bridgeObjectRelease();
          int v32 = *(unsigned __int8 *)(v30 + 32);
          if (v32 != 255) {
            sub_49E54(*(void *)(v30 + 16), *(void *)(v30 + 24), v32);
          }
          int v33 = *(unsigned __int8 *)(v30 + 64);
          if (v33 != 255) {
            sub_4C6F0(*(id *)(v30 + 56), v33);
          }
          int v34 = *(unsigned __int8 *)(v30 + 80);
          if (v34 != 255) {
            sub_4C6F0(*(id *)(v30 + 72), v34);
          }
          int v35 = *(unsigned __int8 *)(v30 + 96);
          if (v35 != 255) {
            sub_4C6F0(*(id *)(v30 + 88), v35);
          }
          int v36 = *(unsigned __int8 *)(v30 + 112);
          if (v36 != 255) {
            sub_4C6F0(*(id *)(v30 + 104), v36);
          }
          int v37 = *(unsigned __int8 *)(v30 + 128);
          if (v37 != 255) {
            sub_4C6F0(*(id *)(v30 + 120), v37);
          }
          uint64_t v38 = v30 + *(int *)(v31 + 44);
          uint64_t v39 = sub_3D3750();
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v38, v39);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
LABEL_12:
        swift_bridgeObjectRelease();
        break;
      default:
        return;
    }
  }
}

uint64_t *sub_38E6B4(uint64_t *a1, void *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v4 = (int *)type metadata accessor for LazyJSFlowDestination(0);
    uint64_t v5 = v4[5];
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_3D2350();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    uint64_t v14 = v4[6];
    uint64_t v15 = (char *)a1 + v14;
    int v16 = (_OWORD *)((char *)a2 + v14);
    uint64_t v17 = *(void *)((char *)a2 + v14 + 24);
    if (v17)
    {
      *((void *)v15 + 3) = v17;
      (**(void (***)(void))(v17 - 8))();
    }
    else
    {
      long long v18 = v16[1];
      *(_OWORD *)uint64_t v15 = *v16;
      *((_OWORD *)v15 + 1) = v18;
    }
    *((unsigned char *)a1 + v4[7]) = *((unsigned char *)a2 + v4[7]);
  }
  else
  {
    uint64_t v11 = type metadata accessor for FlowDestination();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v12 = sub_3D2350();
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0470);
        *((unsigned char *)a1 + *(int *)(v13 + 48)) = *((unsigned char *)a2 + *(int *)(v13 + 48));
        goto LABEL_84;
      case 1u:
        uint64_t v19 = sub_3D2350();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19)) {
          goto LABEL_31;
        }
        goto LABEL_43;
      case 2u:
        uint64_t v21 = sub_3D2350();
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        uint64_t v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4B0458) + 48);
        uint64_t v23 = (uint64_t *)((char *)a1 + v22);
        uint64_t v24 = (void *)((char *)a2 + v22);
        char v25 = (int *)sub_3D3860();
        uint64_t v26 = *((void *)v25 - 1);
        if ((*(unsigned int (**)(void *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
        {
          uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
          memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
        }
        else
        {
          uint64_t v67 = v24[1];
          *uint64_t v23 = *v24;
          v23[1] = v67;
          int v68 = *((unsigned __int8 *)v24 + 32);
          swift_bridgeObjectRetain();
          if (v68 == 255)
          {
            *((_OWORD *)v23 + 1) = *((_OWORD *)v24 + 1);
            *((unsigned char *)v23 + 32) = *((unsigned char *)v24 + 32);
          }
          else
          {
            uint64_t v69 = v24[2];
            uint64_t v70 = v24[3];
            sub_4C484(v69, v70, v68);
            v23[2] = v69;
            v23[3] = v70;
            *((unsigned char *)v23 + 32) = v68;
          }
          *(_OWORD *)(v23 + 5) = *(_OWORD *)(v24 + 5);
          int v85 = (id *)(v24 + 7);
          int v86 = *((unsigned __int8 *)v24 + 64);
          if (v86 == 255)
          {
            v23[7] = *v85;
            *((unsigned char *)v23 + 64) = *((unsigned char *)v24 + 64);
          }
          else
          {
            id v87 = *v85;
            sub_4C49C(*v85, *((unsigned char *)v24 + 64));
            v23[7] = v87;
            *((unsigned char *)v23 + 64) = v86;
          }
          BOOL v91 = (id *)(v24 + 9);
          int v92 = *((unsigned __int8 *)v24 + 80);
          if (v92 == 255)
          {
            v23[9] = *v91;
            *((unsigned char *)v23 + 80) = *((unsigned char *)v24 + 80);
          }
          else
          {
            id v93 = *v91;
            sub_4C49C(*v91, *((unsigned char *)v24 + 80));
            v23[9] = v93;
            *((unsigned char *)v23 + 80) = v92;
          }
          char v97 = (id *)(v24 + 11);
          int v98 = *((unsigned __int8 *)v24 + 96);
          if (v98 == 255)
          {
            v23[11] = *v97;
            *((unsigned char *)v23 + 96) = *((unsigned char *)v24 + 96);
          }
          else
          {
            id v99 = *v97;
            sub_4C49C(*v97, *((unsigned char *)v24 + 96));
            v23[11] = v99;
            *((unsigned char *)v23 + 96) = v98;
          }
          unint64_t v103 = (id *)(v24 + 13);
          int v104 = *((unsigned __int8 *)v24 + 112);
          if (v104 == 255)
          {
            v23[13] = *v103;
            *((unsigned char *)v23 + 112) = *((unsigned char *)v24 + 112);
          }
          else
          {
            id v105 = *v103;
            sub_4C49C(*v103, *((unsigned char *)v24 + 112));
            v23[13] = v105;
            *((unsigned char *)v23 + 112) = v104;
          }
          uint64_t v109 = (id *)(v24 + 15);
          int v110 = *((unsigned __int8 *)v24 + 128);
          if (v110 == 255)
          {
            v23[15] = *v109;
            *((unsigned char *)v23 + 128) = *((unsigned char *)v24 + 128);
          }
          else
          {
            id v111 = *v109;
            sub_4C49C(*v109, *((unsigned char *)v24 + 128));
            v23[15] = v111;
            *((unsigned char *)v23 + 128) = v110;
          }
          *((unsigned char *)v23 + 129) = *((unsigned char *)v24 + 129);
          uint64_t v115 = v25[11];
          int v116 = (char *)v23 + v115;
          id v117 = (char *)v24 + v115;
          uint64_t v118 = sub_3D3750();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v118 - 8) + 16))(v116, v117, v118);
          uint64_t v119 = v25[12];
          uint64_t v120 = (void *)((char *)v23 + v119);
          uint64_t v121 = (void *)((char *)v24 + v119);
          uint64_t v122 = v121[1];
          *uint64_t v120 = *v121;
          v120[1] = v122;
          *((unsigned char *)v23 + v25[13]) = *((unsigned char *)v24 + v25[13]);
          *((unsigned char *)v23 + v25[14]) = *((unsigned char *)v24 + v25[14]);
          *((unsigned char *)v23 + v25[15]) = *((unsigned char *)v24 + v25[15]);
          uint64_t v123 = v25[16];
          id v124 = (void *)((char *)v23 + v123);
          uint64_t v125 = (void *)((char *)v24 + v123);
          uint64_t v126 = v125[1];
          void *v124 = *v125;
          v124[1] = v126;
          int v127 = *(void (**)(void *, void, uint64_t, int *))(v26 + 56);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v127(v23, 0, 1, v25);
        }
        goto LABEL_84;
      case 3u:
        *a1 = *a2;
        swift_retain();
        uint64_t v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACBD8) + 48);
        uint64_t v29 = (char *)a1 + v28;
        uint64_t v30 = (char *)a2 + v28;
        uint64_t v31 = sub_3D2350();
        uint64_t v32 = *(void *)(v31 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
          goto LABEL_20;
        }
        goto LABEL_42;
      case 4u:
        *a1 = *a2;
        swift_retain();
        uint64_t v33 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACBD8) + 48);
        uint64_t v29 = (char *)a1 + v33;
        uint64_t v30 = (char *)a2 + v33;
        uint64_t v31 = sub_3D2350();
        uint64_t v32 = *(void *)(v31 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
          goto LABEL_20;
        }
        goto LABEL_42;
      case 5u:
        *a1 = *a2;
        swift_retain();
        uint64_t v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACBD8) + 48);
        uint64_t v29 = (char *)a1 + v34;
        uint64_t v30 = (char *)a2 + v34;
        uint64_t v31 = sub_3D2350();
        uint64_t v32 = *(void *)(v31 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
        {
LABEL_20:
          uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
          memcpy(v29, v30, *(void *)(*(void *)(v35 - 8) + 64));
        }
        else
        {
LABEL_42:
          (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
        }
        goto LABEL_84;
      case 6u:
      case 0x16u:
      case 0x1Bu:
        uint64_t v57 = (void *)*a2;
        *a1 = *a2;
        id v58 = v57;
        goto LABEL_84;
      case 7u:
        uint64_t v36 = a2[1];
        *a1 = *a2;
        a1[1] = v36;
        a1[2] = a2[2];
        *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
        uint64_t v37 = a2[4];
        char v38 = *((unsigned char *)a2 + 40);
        swift_bridgeObjectRetain();
        sub_54DC8(v37, v38);
        a1[4] = v37;
        *((unsigned char *)a1 + 40) = v38;
        goto LABEL_84;
      case 8u:
        uint64_t v39 = *a2;
        uint64_t v40 = a2[1];
        uint64_t v41 = a2[2];
        uint64_t v42 = a2[3];
        uint64_t v43 = a2[4];
        uint64_t v44 = a2[5];
        uint64_t v45 = a2[7];
        __dstb = (void *)v45;
        uint64_t v148 = a2[6];
        char v46 = *((unsigned char *)a2 + 64);
        sub_B5744(v39, v40, v41, v42, v43, v44, v148, v45, v46);
        *a1 = v39;
        a1[1] = v40;
        a1[2] = v41;
        a1[3] = v42;
        a1[4] = v43;
        a1[5] = v44;
        a1[6] = v148;
        a1[7] = (uint64_t)__dstb;
        *((unsigned char *)a1 + 64) = v46;
        goto LABEL_84;
      case 9u:
        uint64_t v47 = a2[1];
        *a1 = *a2;
        a1[1] = v47;
        uint64_t v48 = a2[3];
        a1[2] = a2[2];
        a1[3] = v48;
        a1[4] = a2[4];
        *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
        a1[6] = a2[6];
        *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_84;
      case 0xAu:
      case 0xDu:
      case 0x10u:
      case 0x15u:
      case 0x17u:
      case 0x1Au:
        *a1 = *a2;
        swift_retain();
        goto LABEL_84;
      case 0xBu:
      case 0xCu:
      case 0xEu:
      case 0x11u:
      case 0x13u:
        uint64_t v55 = a2[1];
        *a1 = *a2;
        a1[1] = v55;
        swift_bridgeObjectRetain();
        goto LABEL_84;
      case 0xFu:
        uint64_t v49 = a2[1];
        *a1 = *a2;
        a1[1] = v49;
        uint64_t v50 = a2[3];
        a1[2] = a2[2];
        a1[3] = v50;
        uint64_t v51 = a2[5];
        a1[4] = a2[4];
        a1[5] = v51;
        uint64_t v52 = a2[6];
        uint64_t v53 = a2[7];
        a1[6] = v52;
        a1[7] = v53;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_84;
      case 0x12u:
        uint64_t v54 = sub_3D2350();
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v54 - 8) + 16))(a1, a2, v54);
        goto LABEL_84;
      case 0x18u:
        uint64_t v19 = sub_3D2350();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19)) {
          goto LABEL_31;
        }
        goto LABEL_43;
      case 0x19u:
        uint64_t v19 = sub_3D2350();
        uint64_t v20 = *(void *)(v19 - 8);
        if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19))
        {
LABEL_31:
          uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
          memcpy(a1, a2, *(void *)(*(void *)(v56 - 8) + 64));
        }
        else
        {
LABEL_43:
          (*(void (**)(uint64_t *, void *, uint64_t))(v20 + 16))(a1, a2, v19);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
        }
        goto LABEL_84;
      case 0x1Cu:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_84;
      case 0x1Du:
        uint64_t v59 = sub_3D5000();
        (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v59 - 8) + 16))(a1, a2, v59);
        goto LABEL_84;
      case 0x1Eu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        swift_bridgeObjectRetain();
        goto LABEL_84;
      case 0x1Fu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        uint64_t v60 = type metadata accessor for Category();
        uint64_t v61 = *(int *)(v60 + 24);
        __dst = (char *)a1 + v61;
        uint64_t v149 = v60;
        uint64_t v62 = (char *)a2 + v61;
        uint64_t v63 = sub_3D2350();
        uint64_t v64 = *(void *)(v63 - 8);
        uint64_t v65 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48);
        swift_bridgeObjectRetain();
        if (v65(v62, 1, v63))
        {
          uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
          memcpy(__dst, v62, *(void *)(*(void *)(v66 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 16))(__dst, v62, v63);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(__dst, 0, 1, v63);
        }
        uint64_t v71 = v149;
        uint64_t v72 = *(int *)(v149 + 28);
        uint64_t v73 = (char *)a1 + v72;
        uint64_t v74 = (char *)a2 + v72;
        *(_DWORD *)uint64_t v73 = *(_DWORD *)v74;
        void v73[4] = v74[4];
        uint64_t v75 = *(int *)(v149 + 32);
        uint64_t v76 = (uint64_t *)((char *)a1 + v75);
        uint64_t v77 = (void *)((char *)a2 + v75);
        uint64_t v78 = (int *)sub_3D3860();
        Swift::String v79 = (unsigned int (**)(void *, uint64_t, int *))*((void *)v78 - 1);
        if (v79[6](v77, 1, v78))
        {
          uint64_t v80 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
          memcpy(v76, v77, *(void *)(*(void *)(v80 - 8) + 64));
        }
        else
        {
          __dsta = v79;
          uint64_t v81 = v77[1];
          *uint64_t v76 = *v77;
          v76[1] = v81;
          int v82 = *((unsigned __int8 *)v77 + 32);
          swift_bridgeObjectRetain();
          if (v82 == 255)
          {
            *((_OWORD *)v76 + 1) = *((_OWORD *)v77 + 1);
            *((unsigned char *)v76 + 32) = *((unsigned char *)v77 + 32);
          }
          else
          {
            uint64_t v84 = v77[2];
            uint64_t v83 = v77[3];
            sub_4C484(v84, v83, v82);
            v76[2] = v84;
            v76[3] = v83;
            *((unsigned char *)v76 + 32) = v82;
          }
          *(_OWORD *)(v76 + 5) = *(_OWORD *)(v77 + 5);
          uint64_t v88 = (id *)(v77 + 7);
          int v89 = *((unsigned __int8 *)v77 + 64);
          if (v89 == 255)
          {
            v76[7] = *v88;
            *((unsigned char *)v76 + 64) = *((unsigned char *)v77 + 64);
          }
          else
          {
            id v90 = *v88;
            sub_4C49C(*v88, *((unsigned char *)v77 + 64));
            v76[7] = v90;
            *((unsigned char *)v76 + 64) = v89;
          }
          uint64_t v94 = (id *)(v77 + 9);
          int v95 = *((unsigned __int8 *)v77 + 80);
          if (v95 == 255)
          {
            v76[9] = *v94;
            *((unsigned char *)v76 + 80) = *((unsigned char *)v77 + 80);
          }
          else
          {
            id v96 = *v94;
            sub_4C49C(*v94, *((unsigned char *)v77 + 80));
            v76[9] = v96;
            *((unsigned char *)v76 + 80) = v95;
          }
          os_log_type_t v100 = (id *)(v77 + 11);
          int v101 = *((unsigned __int8 *)v77 + 96);
          if (v101 == 255)
          {
            v76[11] = *v100;
            *((unsigned char *)v76 + 96) = *((unsigned char *)v77 + 96);
          }
          else
          {
            id v102 = *v100;
            sub_4C49C(*v100, *((unsigned char *)v77 + 96));
            v76[11] = v102;
            *((unsigned char *)v76 + 96) = v101;
          }
          id v106 = (id *)(v77 + 13);
          int v107 = *((unsigned __int8 *)v77 + 112);
          if (v107 == 255)
          {
            v76[13] = *v106;
            *((unsigned char *)v76 + 112) = *((unsigned char *)v77 + 112);
          }
          else
          {
            id v108 = *v106;
            sub_4C49C(*v106, *((unsigned char *)v77 + 112));
            v76[13] = v108;
            *((unsigned char *)v76 + 112) = v107;
          }
          uint64_t v112 = (id *)(v77 + 15);
          int v113 = *((unsigned __int8 *)v77 + 128);
          if (v113 == 255)
          {
            v76[15] = *v112;
            *((unsigned char *)v76 + 128) = *((unsigned char *)v77 + 128);
          }
          else
          {
            id v114 = *v112;
            sub_4C49C(*v112, *((unsigned char *)v77 + 128));
            v76[15] = v114;
            *((unsigned char *)v76 + 128) = v113;
          }
          *((unsigned char *)v76 + 129) = *((unsigned char *)v77 + 129);
          uint64_t v128 = v78[11];
          uint64_t v129 = (char *)v76 + v128;
          uint64_t v130 = (char *)v77 + v128;
          uint64_t v131 = sub_3D3750();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v131 - 8) + 16))(v129, v130, v131);
          uint64_t v132 = v78[12];
          id v133 = (void *)((char *)v76 + v132);
          uint64_t v134 = (void *)((char *)v77 + v132);
          uint64_t v135 = v134[1];
          *id v133 = *v134;
          v133[1] = v135;
          *((unsigned char *)v76 + v78[13]) = *((unsigned char *)v77 + v78[13]);
          *((unsigned char *)v76 + v78[14]) = *((unsigned char *)v77 + v78[14]);
          *((unsigned char *)v76 + v78[15]) = *((unsigned char *)v77 + v78[15]);
          uint64_t v136 = v78[16];
          id v137 = (void *)((char *)v76 + v136);
          uint64_t v138 = (void *)((char *)v77 + v136);
          uint64_t v139 = v138[1];
          *id v137 = *v138;
          v137[1] = v139;
          uint64_t v140 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v140(v76, 0, 1, v78);
          uint64_t v71 = v149;
        }
        uint64_t v141 = *(int *)(v71 + 36);
        uint64_t v142 = (char *)a1 + v141;
        uint64_t v143 = (char *)a2 + v141;
        *(void *)uint64_t v142 = *(void *)v143;
        v142[8] = v143[8];
        *(uint64_t *)((char *)a1 + *(int *)(v71 + 40)) = *(void *)((char *)a2 + *(int *)(v71 + 40));
        swift_bridgeObjectRetain();
LABEL_84:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_38FAF4(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_38C0A0((uint64_t)a1, type metadata accessor for FlowAction.DestinationType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(unsigned char *)a1 = *(unsigned char *)a2;
      uint64_t v4 = (int *)type metadata accessor for LazyJSFlowDestination(0);
      uint64_t v5 = v4[5];
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_3D2350();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
        memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      }
      uint64_t v14 = v4[6];
      uint64_t v15 = (char *)a1 + v14;
      int v16 = (_OWORD *)((char *)a2 + v14);
      uint64_t v17 = *(uint64_t *)((char *)a2 + v14 + 24);
      if (v17)
      {
        *((void *)v15 + 3) = v17;
        (**(void (***)(void))(v17 - 8))();
      }
      else
      {
        long long v18 = v16[1];
        *(_OWORD *)uint64_t v15 = *v16;
        *((_OWORD *)v15 + 1) = v18;
      }
      *((unsigned char *)a1 + v4[7]) = *((unsigned char *)a2 + v4[7]);
    }
    else
    {
      uint64_t v11 = type metadata accessor for FlowDestination();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v12 = sub_3D2350();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
          uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0470);
          *((unsigned char *)a1 + *(int *)(v13 + 48)) = *((unsigned char *)a2 + *(int *)(v13 + 48));
          goto LABEL_85;
        case 1u:
          uint64_t v19 = sub_3D2350();
          uint64_t v20 = *(void *)(v19 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19)) {
            goto LABEL_32;
          }
          goto LABEL_44;
        case 2u:
          uint64_t v21 = sub_3D2350();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
          uint64_t v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4B0458) + 48);
          uint64_t v23 = (uint64_t *)((char *)a1 + v22);
          uint64_t v24 = (uint64_t *)((char *)a2 + v22);
          char v25 = (int *)sub_3D3860();
          uint64_t v26 = *((void *)v25 - 1);
          if ((*(unsigned int (**)(void *, uint64_t, int *))(v26 + 48))(v24, 1, v25))
          {
            uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
            memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
          }
          else
          {
            *uint64_t v23 = *v24;
            v23[1] = v24[1];
            int v61 = *((unsigned __int8 *)v24 + 32);
            swift_bridgeObjectRetain();
            if (v61 == 255)
            {
              long long v78 = *((_OWORD *)v24 + 1);
              *((unsigned char *)v23 + 32) = *((unsigned char *)v24 + 32);
              *((_OWORD *)v23 + 1) = v78;
            }
            else
            {
              uint64_t v62 = v24[2];
              uint64_t v63 = v24[3];
              sub_4C484(v62, v63, v61);
              v23[2] = v62;
              v23[3] = v63;
              *((unsigned char *)v23 + 32) = v61;
            }
            uint64_t v23[5] = v24[5];
            v23[6] = v24[6];
            Swift::String v79 = (id *)(v24 + 7);
            int v80 = *((unsigned __int8 *)v24 + 64);
            if (v80 == 255)
            {
              id v86 = *v79;
              *((unsigned char *)v23 + 64) = *((unsigned char *)v24 + 64);
              v23[7] = v86;
            }
            else
            {
              id v81 = *v79;
              sub_4C49C(*v79, *((unsigned char *)v24 + 64));
              v23[7] = v81;
              *((unsigned char *)v23 + 64) = v80;
            }
            id v87 = (id *)(v24 + 9);
            int v88 = *((unsigned __int8 *)v24 + 80);
            if (v88 == 255)
            {
              id v94 = *v87;
              *((unsigned char *)v23 + 80) = *((unsigned char *)v24 + 80);
              v23[9] = v94;
            }
            else
            {
              id v89 = *v87;
              sub_4C49C(*v87, *((unsigned char *)v24 + 80));
              v23[9] = v89;
              *((unsigned char *)v23 + 80) = v88;
            }
            int v95 = (id *)(v24 + 11);
            int v96 = *((unsigned __int8 *)v24 + 96);
            if (v96 == 255)
            {
              id v102 = *v95;
              *((unsigned char *)v23 + 96) = *((unsigned char *)v24 + 96);
              v23[11] = v102;
            }
            else
            {
              id v97 = *v95;
              sub_4C49C(*v95, *((unsigned char *)v24 + 96));
              v23[11] = v97;
              *((unsigned char *)v23 + 96) = v96;
            }
            unint64_t v103 = (id *)(v24 + 13);
            int v104 = *((unsigned __int8 *)v24 + 112);
            if (v104 == 255)
            {
              id v110 = *v103;
              *((unsigned char *)v23 + 112) = *((unsigned char *)v24 + 112);
              v23[13] = v110;
            }
            else
            {
              id v105 = *v103;
              sub_4C49C(*v103, *((unsigned char *)v24 + 112));
              v23[13] = v105;
              *((unsigned char *)v23 + 112) = v104;
            }
            id v111 = (id *)(v24 + 15);
            int v112 = *((unsigned __int8 *)v24 + 128);
            if (v112 == 255)
            {
              id v118 = *v111;
              *((unsigned char *)v23 + 128) = *((unsigned char *)v24 + 128);
              v23[15] = v118;
            }
            else
            {
              id v113 = *v111;
              sub_4C49C(*v111, *((unsigned char *)v24 + 128));
              v23[15] = v113;
              *((unsigned char *)v23 + 128) = v112;
            }
            *((unsigned char *)v23 + 129) = *((unsigned char *)v24 + 129);
            uint64_t v119 = v25[11];
            uint64_t v120 = (char *)v23 + v119;
            uint64_t v121 = (char *)v24 + v119;
            uint64_t v122 = sub_3D3750();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v122 - 8) + 16))(v120, v121, v122);
            uint64_t v123 = v25[12];
            id v124 = (void *)((char *)v23 + v123);
            uint64_t v125 = (void *)((char *)v24 + v123);
            void *v124 = *v125;
            v124[1] = v125[1];
            *((unsigned char *)v23 + v25[13]) = *((unsigned char *)v24 + v25[13]);
            *((unsigned char *)v23 + v25[14]) = *((unsigned char *)v24 + v25[14]);
            *((unsigned char *)v23 + v25[15]) = *((unsigned char *)v24 + v25[15]);
            uint64_t v126 = v25[16];
            int v127 = (void *)((char *)v23 + v126);
            uint64_t v128 = (void *)((char *)v24 + v126);
            *int v127 = *v128;
            v127[1] = v128[1];
            uint64_t v129 = *(void (**)(void *, void, uint64_t, int *))(v26 + 56);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v129(v23, 0, 1, v25);
          }
          goto LABEL_85;
        case 3u:
          *a1 = *a2;
          swift_retain();
          uint64_t v28 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACBD8) + 48);
          uint64_t v29 = (char *)a1 + v28;
          uint64_t v30 = (char *)a2 + v28;
          uint64_t v31 = sub_3D2350();
          uint64_t v32 = *(void *)(v31 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
            goto LABEL_21;
          }
          goto LABEL_43;
        case 4u:
          *a1 = *a2;
          swift_retain();
          uint64_t v33 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACBD8) + 48);
          uint64_t v29 = (char *)a1 + v33;
          uint64_t v30 = (char *)a2 + v33;
          uint64_t v31 = sub_3D2350();
          uint64_t v32 = *(void *)(v31 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31)) {
            goto LABEL_21;
          }
          goto LABEL_43;
        case 5u:
          *a1 = *a2;
          swift_retain();
          uint64_t v34 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACBD8) + 48);
          uint64_t v29 = (char *)a1 + v34;
          uint64_t v30 = (char *)a2 + v34;
          uint64_t v31 = sub_3D2350();
          uint64_t v32 = *(void *)(v31 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
          {
LABEL_21:
            uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
            memcpy(v29, v30, *(void *)(*(void *)(v35 - 8) + 64));
          }
          else
          {
LABEL_43:
            (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
          }
          goto LABEL_85;
        case 6u:
        case 0x16u:
        case 0x1Bu:
          uint64_t v51 = (void *)*a2;
          *a1 = *a2;
          id v52 = v51;
          goto LABEL_85;
        case 7u:
          *a1 = *a2;
          a1[1] = a2[1];
          uint64_t v36 = a2[2];
          *((unsigned char *)a1 + 24) = *((unsigned char *)a2 + 24);
          a1[2] = v36;
          uint64_t v37 = a2[4];
          char v38 = *((unsigned char *)a2 + 40);
          swift_bridgeObjectRetain();
          sub_54DC8(v37, v38);
          a1[4] = v37;
          *((unsigned char *)a1 + 40) = v38;
          goto LABEL_85;
        case 8u:
          uint64_t v39 = *a2;
          uint64_t v40 = a2[1];
          uint64_t v41 = a2[2];
          uint64_t v42 = a2[3];
          uint64_t v43 = a2[4];
          uint64_t v44 = a2[5];
          uint64_t v45 = a2[7];
          __dstb = (void *)v45;
          uint64_t v150 = a2[6];
          char v46 = *((unsigned char *)a2 + 64);
          sub_B5744(v39, v40, v41, v42, v43, v44, v150, v45, v46);
          *a1 = v39;
          a1[1] = v40;
          a1[2] = v41;
          a1[3] = v42;
          a1[4] = v43;
          a1[5] = v44;
          a1[6] = v150;
          a1[7] = (uint64_t)__dstb;
          *((unsigned char *)a1 + 64) = v46;
          goto LABEL_85;
        case 9u:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          a1[3] = a2[3];
          uint64_t v47 = a2[4];
          *((unsigned char *)a1 + 40) = *((unsigned char *)a2 + 40);
          a1[4] = v47;
          uint64_t v48 = a2[6];
          *((unsigned char *)a1 + 56) = *((unsigned char *)a2 + 56);
          a1[6] = v48;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_85;
        case 0xAu:
        case 0xDu:
        case 0x10u:
        case 0x15u:
        case 0x17u:
        case 0x1Au:
          *a1 = *a2;
          swift_retain();
          goto LABEL_85;
        case 0xBu:
        case 0xCu:
        case 0xEu:
        case 0x11u:
        case 0x13u:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
          goto LABEL_85;
        case 0xFu:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          a1[3] = a2[3];
          a1[4] = a2[4];
          a1[5] = a2[5];
          a1[6] = a2[6];
          a1[7] = a2[7];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_85;
        case 0x12u:
          uint64_t v49 = sub_3D2350();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v49 - 8) + 16))(a1, a2, v49);
          goto LABEL_85;
        case 0x18u:
          uint64_t v19 = sub_3D2350();
          uint64_t v20 = *(void *)(v19 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19)) {
            goto LABEL_32;
          }
          goto LABEL_44;
        case 0x19u:
          uint64_t v19 = sub_3D2350();
          uint64_t v20 = *(void *)(v19 - 8);
          if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v20 + 48))(a2, 1, v19))
          {
LABEL_32:
            uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
            memcpy(a1, a2, *(void *)(*(void *)(v50 - 8) + 64));
          }
          else
          {
LABEL_44:
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v20 + 16))(a1, a2, v19);
            (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v19);
          }
          goto LABEL_85;
        case 0x1Cu:
          *a1 = *a2;
          swift_bridgeObjectRetain();
          goto LABEL_85;
        case 0x1Du:
          uint64_t v53 = sub_3D5000();
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v53 - 8) + 16))(a1, a2, v53);
          goto LABEL_85;
        case 0x1Eu:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          swift_bridgeObjectRetain();
          goto LABEL_85;
        case 0x1Fu:
          *a1 = *a2;
          a1[1] = a2[1];
          a1[2] = a2[2];
          uint64_t v54 = type metadata accessor for Category();
          uint64_t v55 = *(int *)(v54 + 24);
          __dst = (char *)a1 + v55;
          uint64_t v151 = v54;
          uint64_t v56 = (char *)a2 + v55;
          uint64_t v57 = sub_3D2350();
          uint64_t v58 = *(void *)(v57 - 8);
          uint64_t v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
          swift_bridgeObjectRetain();
          if (v59(v56, 1, v57))
          {
            uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
            memcpy(__dst, v56, *(void *)(*(void *)(v60 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v58 + 16))(__dst, v56, v57);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(__dst, 0, 1, v57);
          }
          uint64_t v64 = v151;
          uint64_t v65 = *(int *)(v151 + 28);
          uint64_t v66 = (char *)a1 + v65;
          uint64_t v67 = (char *)a2 + v65;
          int v68 = *(_DWORD *)v67;
          v66[4] = v67[4];
          *(_DWORD *)uint64_t v66 = v68;
          uint64_t v69 = *(int *)(v151 + 32);
          uint64_t v70 = (uint64_t *)((char *)a1 + v69);
          uint64_t v71 = (uint64_t *)((char *)a2 + v69);
          uint64_t v72 = (int *)sub_3D3860();
          uint64_t v73 = (unsigned int (**)(void *, uint64_t, int *))*((void *)v72 - 1);
          if (v73[6](v71, 1, v72))
          {
            uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
            memcpy(v70, v71, *(void *)(*(void *)(v74 - 8) + 64));
          }
          else
          {
            __dsta = v73;
            *uint64_t v70 = *v71;
            v70[1] = v71[1];
            int v75 = *((unsigned __int8 *)v71 + 32);
            swift_bridgeObjectRetain();
            if (v75 == 255)
            {
              long long v82 = *((_OWORD *)v71 + 1);
              *((unsigned char *)v70 + 32) = *((unsigned char *)v71 + 32);
              *((_OWORD *)v70 + 1) = v82;
            }
            else
            {
              uint64_t v77 = v71[2];
              uint64_t v76 = v71[3];
              sub_4C484(v77, v76, v75);
              v70[2] = v77;
              v70[3] = v76;
              *((unsigned char *)v70 + 32) = v75;
            }
            v70[5] = v71[5];
            v70[6] = v71[6];
            uint64_t v83 = (id *)(v71 + 7);
            int v84 = *((unsigned __int8 *)v71 + 64);
            if (v84 == 255)
            {
              id v90 = *v83;
              *((unsigned char *)v70 + 64) = *((unsigned char *)v71 + 64);
              v70[7] = v90;
            }
            else
            {
              id v85 = *v83;
              sub_4C49C(*v83, *((unsigned char *)v71 + 64));
              v70[7] = v85;
              *((unsigned char *)v70 + 64) = v84;
            }
            BOOL v91 = (id *)(v71 + 9);
            int v92 = *((unsigned __int8 *)v71 + 80);
            if (v92 == 255)
            {
              id v98 = *v91;
              *((unsigned char *)v70 + 80) = *((unsigned char *)v71 + 80);
              v70[9] = v98;
            }
            else
            {
              id v93 = *v91;
              sub_4C49C(*v91, *((unsigned char *)v71 + 80));
              v70[9] = v93;
              *((unsigned char *)v70 + 80) = v92;
            }
            id v99 = (id *)(v71 + 11);
            int v100 = *((unsigned __int8 *)v71 + 96);
            if (v100 == 255)
            {
              id v106 = *v99;
              *((unsigned char *)v70 + 96) = *((unsigned char *)v71 + 96);
              v70[11] = v106;
            }
            else
            {
              id v101 = *v99;
              sub_4C49C(*v99, *((unsigned char *)v71 + 96));
              v70[11] = v101;
              *((unsigned char *)v70 + 96) = v100;
            }
            int v107 = (id *)(v71 + 13);
            int v108 = *((unsigned __int8 *)v71 + 112);
            if (v108 == 255)
            {
              id v114 = *v107;
              *((unsigned char *)v70 + 112) = *((unsigned char *)v71 + 112);
              v70[13] = v114;
            }
            else
            {
              id v109 = *v107;
              sub_4C49C(*v107, *((unsigned char *)v71 + 112));
              v70[13] = v109;
              *((unsigned char *)v70 + 112) = v108;
            }
            uint64_t v115 = (id *)(v71 + 15);
            int v116 = *((unsigned __int8 *)v71 + 128);
            if (v116 == 255)
            {
              id v130 = *v115;
              *((unsigned char *)v70 + 128) = *((unsigned char *)v71 + 128);
              v70[15] = v130;
            }
            else
            {
              id v117 = *v115;
              sub_4C49C(*v115, *((unsigned char *)v71 + 128));
              v70[15] = v117;
              *((unsigned char *)v70 + 128) = v116;
            }
            *((unsigned char *)v70 + 129) = *((unsigned char *)v71 + 129);
            uint64_t v131 = v72[11];
            uint64_t v132 = (char *)v70 + v131;
            id v133 = (char *)v71 + v131;
            uint64_t v134 = sub_3D3750();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v134 - 8) + 16))(v132, v133, v134);
            uint64_t v135 = v72[12];
            uint64_t v136 = (void *)((char *)v70 + v135);
            id v137 = (void *)((char *)v71 + v135);
            *uint64_t v136 = *v137;
            v136[1] = v137[1];
            *((unsigned char *)v70 + v72[13]) = *((unsigned char *)v71 + v72[13]);
            *((unsigned char *)v70 + v72[14]) = *((unsigned char *)v71 + v72[14]);
            *((unsigned char *)v70 + v72[15]) = *((unsigned char *)v71 + v72[15]);
            uint64_t v138 = v72[16];
            uint64_t v139 = (void *)((char *)v70 + v138);
            uint64_t v140 = (void *)((char *)v71 + v138);
            *uint64_t v139 = *v140;
            v139[1] = v140[1];
            uint64_t v141 = (void (*)(void *, void, uint64_t, int *))__dsta[7];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v141(v70, 0, 1, v72);
            uint64_t v64 = v151;
          }
          uint64_t v142 = *(int *)(v64 + 36);
          uint64_t v143 = (char *)a1 + v142;
          uint64_t v144 = (char *)a2 + v142;
          uint64_t v145 = *(void *)v144;
          v143[8] = v144[8];
          *(void *)uint64_t v143 = v145;
          *(uint64_t *)((char *)a1 + *(int *)(v64 + 40)) = *(uint64_t *)((char *)a2 + *(int *)(v64 + 40));
          swift_bridgeObjectRetain();
LABEL_85:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *sub_391008(unsigned char *a1, unsigned char *a2)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    uint64_t v4 = (int *)type metadata accessor for LazyJSFlowDestination(0);
    uint64_t v5 = v4[5];
    uint64_t v6 = &a1[v5];
    uint64_t v7 = &a2[v5];
    uint64_t v8 = sub_3D2350();
    uint64_t v9 = *(void *)(v8 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
    {
      uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
      memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v6, v7, v8);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
    }
    uint64_t v14 = v4[6];
    uint64_t v15 = &a1[v14];
    int v16 = &a2[v14];
    long long v17 = v16[1];
    _OWORD *v15 = *v16;
    v15[1] = v17;
    a1[v4[7]] = a2[v4[7]];
  }
  else
  {
    uint64_t v11 = type metadata accessor for FlowDestination();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        uint64_t v12 = sub_3D2350();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0470);
        a1[*(int *)(v13 + 48)] = a2[*(int *)(v13 + 48)];
        goto LABEL_36;
      case 1u:
        uint64_t v18 = sub_3D2350();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(a2, 1, v18)) {
          goto LABEL_23;
        }
        goto LABEL_30;
      case 2u:
        uint64_t v20 = sub_3D2350();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
        uint64_t v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4B0458) + 48);
        uint64_t v22 = &a1[v21];
        uint64_t v23 = &a2[v21];
        uint64_t v24 = (int *)sub_3D3860();
        uint64_t v25 = *((void *)v24 - 1);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
        {
          uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
          memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
        }
        else
        {
          long long v45 = v23[1];
          _OWORD *v22 = *v23;
          v22[1] = v45;
          *((unsigned char *)v22 + 32) = *((unsigned char *)v23 + 32);
          *(_OWORD *)((char *)v22 + 40) = *(_OWORD *)((char *)v23 + 40);
          *((void *)v22 + 7) = *((void *)v23 + 7);
          *((unsigned char *)v22 + 64) = *((unsigned char *)v23 + 64);
          *(_OWORD *)((char *)v22 + 113) = *(_OWORD *)((char *)v23 + 113);
          *(_OWORD *)((char *)v22 + 104) = *(_OWORD *)((char *)v23 + 104);
          *(_OWORD *)((char *)v22 + 88) = *(_OWORD *)((char *)v23 + 88);
          *(_OWORD *)((char *)v22 + 72) = *(_OWORD *)((char *)v23 + 72);
          *((unsigned char *)v22 + 129) = *((unsigned char *)v23 + 129);
          uint64_t v46 = v24[11];
          uint64_t v47 = (char *)v22 + v46;
          uint64_t v48 = (char *)v23 + v46;
          uint64_t v49 = sub_3D3750();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
          *(_OWORD *)((char *)v22 + v24[12]) = *(_OWORD *)((char *)v23 + v24[12]);
          *((unsigned char *)v22 + v24[13]) = *((unsigned char *)v23 + v24[13]);
          *((unsigned char *)v22 + v24[14]) = *((unsigned char *)v23 + v24[14]);
          *((unsigned char *)v22 + v24[15]) = *((unsigned char *)v23 + v24[15]);
          *(_OWORD *)((char *)v22 + v24[16]) = *(_OWORD *)((char *)v23 + v24[16]);
          (*(void (**)(_OWORD *, void, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
        }
        goto LABEL_36;
      case 3u:
        *(void *)a1 = *(void *)a2;
        uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACBD8) + 48);
        uint64_t v28 = &a1[v27];
        uint64_t v29 = &a2[v27];
        uint64_t v30 = sub_3D2350();
        uint64_t v31 = *(void *)(v30 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30)) {
          goto LABEL_17;
        }
        goto LABEL_29;
      case 4u:
        *(void *)a1 = *(void *)a2;
        uint64_t v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACBD8) + 48);
        uint64_t v28 = &a1[v32];
        uint64_t v29 = &a2[v32];
        uint64_t v30 = sub_3D2350();
        uint64_t v31 = *(void *)(v30 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30)) {
          goto LABEL_17;
        }
        goto LABEL_29;
      case 5u:
        *(void *)a1 = *(void *)a2;
        uint64_t v33 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACBD8) + 48);
        uint64_t v28 = &a1[v33];
        uint64_t v29 = &a2[v33];
        uint64_t v30 = sub_3D2350();
        uint64_t v31 = *(void *)(v30 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
        {
LABEL_17:
          uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
          memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
LABEL_29:
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v31 + 32))(v28, v29, v30);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
        }
        goto LABEL_36;
      case 0x12u:
        uint64_t v35 = sub_3D2350();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v35 - 8) + 32))(a1, a2, v35);
        goto LABEL_36;
      case 0x18u:
        uint64_t v18 = sub_3D2350();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(a2, 1, v18)) {
          goto LABEL_23;
        }
        goto LABEL_30;
      case 0x19u:
        uint64_t v18 = sub_3D2350();
        uint64_t v19 = *(void *)(v18 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(a2, 1, v18))
        {
LABEL_23:
          uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
          memcpy(a1, a2, *(void *)(*(void *)(v36 - 8) + 64));
        }
        else
        {
LABEL_30:
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 32))(a1, a2, v18);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v18);
        }
        goto LABEL_36;
      case 0x1Du:
        uint64_t v37 = sub_3D5000();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v37 - 8) + 32))(a1, a2, v37);
        goto LABEL_36;
      case 0x1Fu:
        *(void *)a1 = *(void *)a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        char v38 = (int *)type metadata accessor for Category();
        uint64_t v39 = v38[6];
        uint64_t v40 = &a1[v39];
        uint64_t v41 = &a2[v39];
        uint64_t v42 = sub_3D2350();
        uint64_t v43 = *(void *)(v42 - 8);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
        {
          uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
          memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
        }
        else
        {
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v43 + 32))(v40, v41, v42);
          (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
        }
        uint64_t v50 = v38[7];
        uint64_t v51 = &a1[v50];
        id v52 = &a2[v50];
        *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
        v51[4] = v52[4];
        uint64_t v53 = v38[8];
        uint64_t v54 = &a1[v53];
        uint64_t v55 = &a2[v53];
        uint64_t v56 = (int *)sub_3D3860();
        uint64_t v57 = *((void *)v56 - 1);
        if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v57 + 48))(v55, 1, v56))
        {
          uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
          memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
        }
        else
        {
          long long v59 = v55[1];
          *uint64_t v54 = *v55;
          v54[1] = v59;
          *((unsigned char *)v54 + 32) = *((unsigned char *)v55 + 32);
          *(_OWORD *)((char *)v54 + 40) = *(_OWORD *)((char *)v55 + 40);
          *((void *)v54 + 7) = *((void *)v55 + 7);
          *((unsigned char *)v54 + 64) = *((unsigned char *)v55 + 64);
          *(_OWORD *)((char *)v54 + 113) = *(_OWORD *)((char *)v55 + 113);
          *(_OWORD *)((char *)v54 + 104) = *(_OWORD *)((char *)v55 + 104);
          *(_OWORD *)((char *)v54 + 88) = *(_OWORD *)((char *)v55 + 88);
          *(_OWORD *)((char *)v54 + 72) = *(_OWORD *)((char *)v55 + 72);
          *((unsigned char *)v54 + 129) = *((unsigned char *)v55 + 129);
          uint64_t v60 = v56[11];
          uint64_t v67 = (char *)v54 + v60;
          int v61 = (char *)v55 + v60;
          uint64_t v62 = sub_3D3750();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v67, v61, v62);
          *(_OWORD *)((char *)v54 + v56[12]) = *(_OWORD *)((char *)v55 + v56[12]);
          *((unsigned char *)v54 + v56[13]) = *((unsigned char *)v55 + v56[13]);
          *((unsigned char *)v54 + v56[14]) = *((unsigned char *)v55 + v56[14]);
          *((unsigned char *)v54 + v56[15]) = *((unsigned char *)v55 + v56[15]);
          *(_OWORD *)((char *)v54 + v56[16]) = *(_OWORD *)((char *)v55 + v56[16]);
          (*(void (**)(_OWORD *, void, uint64_t, int *))(v57 + 56))(v54, 0, 1, v56);
        }
        uint64_t v63 = v38[9];
        uint64_t v64 = &a1[v63];
        uint64_t v65 = &a2[v63];
        *(void *)uint64_t v64 = *(void *)v65;
        v64[8] = v65[8];
        *(void *)&a1[v38[10]] = *(void *)&a2[v38[10]];
LABEL_36:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
        break;
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unsigned char *sub_391E00(unsigned char *a1, unsigned char *a2)
{
  if (a1 != a2)
  {
    sub_38C0A0((uint64_t)a1, type metadata accessor for FlowAction.DestinationType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      uint64_t v4 = (int *)type metadata accessor for LazyJSFlowDestination(0);
      uint64_t v5 = v4[5];
      uint64_t v6 = &a1[v5];
      uint64_t v7 = &a2[v5];
      uint64_t v8 = sub_3D2350();
      uint64_t v9 = *(void *)(v8 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      {
        uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
        memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 32))(v6, v7, v8);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
      }
      uint64_t v14 = v4[6];
      uint64_t v15 = &a1[v14];
      int v16 = &a2[v14];
      long long v17 = v16[1];
      _OWORD *v15 = *v16;
      v15[1] = v17;
      a1[v4[7]] = a2[v4[7]];
    }
    else
    {
      uint64_t v11 = type metadata accessor for FlowDestination();
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          uint64_t v12 = sub_3D2350();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
          uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0470);
          a1[*(int *)(v13 + 48)] = a2[*(int *)(v13 + 48)];
          goto LABEL_37;
        case 1u:
          uint64_t v18 = sub_3D2350();
          uint64_t v19 = *(void *)(v18 - 8);
          if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(a2, 1, v18)) {
            goto LABEL_24;
          }
          goto LABEL_31;
        case 2u:
          uint64_t v20 = sub_3D2350();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
          uint64_t v21 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4B0458) + 48);
          uint64_t v22 = &a1[v21];
          uint64_t v23 = &a2[v21];
          uint64_t v24 = (int *)sub_3D3860();
          uint64_t v25 = *((void *)v24 - 1);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v25 + 48))(v23, 1, v24))
          {
            uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
            memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
          }
          else
          {
            long long v45 = v23[1];
            _OWORD *v22 = *v23;
            v22[1] = v45;
            *((unsigned char *)v22 + 32) = *((unsigned char *)v23 + 32);
            *(_OWORD *)((char *)v22 + 40) = *(_OWORD *)((char *)v23 + 40);
            *((void *)v22 + 7) = *((void *)v23 + 7);
            *((unsigned char *)v22 + 64) = *((unsigned char *)v23 + 64);
            *(_OWORD *)((char *)v22 + 113) = *(_OWORD *)((char *)v23 + 113);
            *(_OWORD *)((char *)v22 + 104) = *(_OWORD *)((char *)v23 + 104);
            *(_OWORD *)((char *)v22 + 88) = *(_OWORD *)((char *)v23 + 88);
            *(_OWORD *)((char *)v22 + 72) = *(_OWORD *)((char *)v23 + 72);
            *((unsigned char *)v22 + 129) = *((unsigned char *)v23 + 129);
            uint64_t v46 = v24[11];
            uint64_t v47 = (char *)v22 + v46;
            uint64_t v48 = (char *)v23 + v46;
            uint64_t v49 = sub_3D3750();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 32))(v47, v48, v49);
            *(_OWORD *)((char *)v22 + v24[12]) = *(_OWORD *)((char *)v23 + v24[12]);
            *((unsigned char *)v22 + v24[13]) = *((unsigned char *)v23 + v24[13]);
            *((unsigned char *)v22 + v24[14]) = *((unsigned char *)v23 + v24[14]);
            *((unsigned char *)v22 + v24[15]) = *((unsigned char *)v23 + v24[15]);
            *(_OWORD *)((char *)v22 + v24[16]) = *(_OWORD *)((char *)v23 + v24[16]);
            (*(void (**)(_OWORD *, void, uint64_t, int *))(v25 + 56))(v22, 0, 1, v24);
          }
          goto LABEL_37;
        case 3u:
          *(void *)a1 = *(void *)a2;
          uint64_t v27 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACBD8) + 48);
          uint64_t v28 = &a1[v27];
          uint64_t v29 = &a2[v27];
          uint64_t v30 = sub_3D2350();
          uint64_t v31 = *(void *)(v30 - 8);
          if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30)) {
            goto LABEL_18;
          }
          goto LABEL_30;
        case 4u:
          *(void *)a1 = *(void *)a2;
          uint64_t v32 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACBD8) + 48);
          uint64_t v28 = &a1[v32];
          uint64_t v29 = &a2[v32];
          uint64_t v30 = sub_3D2350();
          uint64_t v31 = *(void *)(v30 - 8);
          if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30)) {
            goto LABEL_18;
          }
          goto LABEL_30;
        case 5u:
          *(void *)a1 = *(void *)a2;
          uint64_t v33 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACBD8) + 48);
          uint64_t v28 = &a1[v33];
          uint64_t v29 = &a2[v33];
          uint64_t v30 = sub_3D2350();
          uint64_t v31 = *(void *)(v30 - 8);
          if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
          {
LABEL_18:
            uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
            memcpy(v28, v29, *(void *)(*(void *)(v34 - 8) + 64));
          }
          else
          {
LABEL_30:
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v31 + 32))(v28, v29, v30);
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
          }
          goto LABEL_37;
        case 0x12u:
          uint64_t v35 = sub_3D2350();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v35 - 8) + 32))(a1, a2, v35);
          goto LABEL_37;
        case 0x18u:
          uint64_t v18 = sub_3D2350();
          uint64_t v19 = *(void *)(v18 - 8);
          if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(a2, 1, v18)) {
            goto LABEL_24;
          }
          goto LABEL_31;
        case 0x19u:
          uint64_t v18 = sub_3D2350();
          uint64_t v19 = *(void *)(v18 - 8);
          if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(a2, 1, v18))
          {
LABEL_24:
            uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
            memcpy(a1, a2, *(void *)(*(void *)(v36 - 8) + 64));
          }
          else
          {
LABEL_31:
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v19 + 32))(a1, a2, v18);
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56))(a1, 0, 1, v18);
          }
          goto LABEL_37;
        case 0x1Du:
          uint64_t v37 = sub_3D5000();
          (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v37 - 8) + 32))(a1, a2, v37);
          goto LABEL_37;
        case 0x1Fu:
          *(void *)a1 = *(void *)a2;
          *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
          char v38 = (int *)type metadata accessor for Category();
          uint64_t v39 = v38[6];
          uint64_t v40 = &a1[v39];
          uint64_t v41 = &a2[v39];
          uint64_t v42 = sub_3D2350();
          uint64_t v43 = *(void *)(v42 - 8);
          if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v43 + 48))(v41, 1, v42))
          {
            uint64_t v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
            memcpy(v40, v41, *(void *)(*(void *)(v44 - 8) + 64));
          }
          else
          {
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v43 + 32))(v40, v41, v42);
            (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
          }
          uint64_t v50 = v38[7];
          uint64_t v51 = &a1[v50];
          id v52 = &a2[v50];
          *(_DWORD *)uint64_t v51 = *(_DWORD *)v52;
          v51[4] = v52[4];
          uint64_t v53 = v38[8];
          uint64_t v54 = &a1[v53];
          uint64_t v55 = &a2[v53];
          uint64_t v56 = (int *)sub_3D3860();
          uint64_t v57 = *((void *)v56 - 1);
          if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v57 + 48))(v55, 1, v56))
          {
            uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
            memcpy(v54, v55, *(void *)(*(void *)(v58 - 8) + 64));
          }
          else
          {
            long long v59 = v55[1];
            *uint64_t v54 = *v55;
            v54[1] = v59;
            *((unsigned char *)v54 + 32) = *((unsigned char *)v55 + 32);
            *(_OWORD *)((char *)v54 + 40) = *(_OWORD *)((char *)v55 + 40);
            *((void *)v54 + 7) = *((void *)v55 + 7);
            *((unsigned char *)v54 + 64) = *((unsigned char *)v55 + 64);
            *(_OWORD *)((char *)v54 + 113) = *(_OWORD *)((char *)v55 + 113);
            *(_OWORD *)((char *)v54 + 104) = *(_OWORD *)((char *)v55 + 104);
            *(_OWORD *)((char *)v54 + 88) = *(_OWORD *)((char *)v55 + 88);
            *(_OWORD *)((char *)v54 + 72) = *(_OWORD *)((char *)v55 + 72);
            *((unsigned char *)v54 + 129) = *((unsigned char *)v55 + 129);
            uint64_t v60 = v56[11];
            uint64_t v67 = (char *)v54 + v60;
            int v61 = (char *)v55 + v60;
            uint64_t v62 = sub_3D3750();
            (*(void (**)(char *, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v67, v61, v62);
            *(_OWORD *)((char *)v54 + v56[12]) = *(_OWORD *)((char *)v55 + v56[12]);
            *((unsigned char *)v54 + v56[13]) = *((unsigned char *)v55 + v56[13]);
            *((unsigned char *)v54 + v56[14]) = *((unsigned char *)v55 + v56[14]);
            *((unsigned char *)v54 + v56[15]) = *((unsigned char *)v55 + v56[15]);
            *(_OWORD *)((char *)v54 + v56[16]) = *(_OWORD *)((char *)v55 + v56[16]);
            (*(void (**)(_OWORD *, void, uint64_t, int *))(v57 + 56))(v54, 0, 1, v56);
          }
          uint64_t v63 = v38[9];
          uint64_t v64 = &a1[v63];
          uint64_t v65 = &a2[v63];
          *(void *)uint64_t v64 = *(void *)v65;
          v64[8] = v65[8];
          *(void *)&a1[v38[10]] = *(void *)&a2[v38[10]];
LABEL_37:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
          break;
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_392C1C()
{
  uint64_t result = type metadata accessor for FlowDestination();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for LazyJSFlowDestination(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t sub_392CE4()
{
  return sub_3D6250();
}

uint64_t sub_392D24(uint64_t a1)
{
  sub_18168(a1, (uint64_t)v3);
  sub_18168((uint64_t)v3, (uint64_t)&v2);
  sub_1494B8();
  sub_3D6260();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
}

uint64_t sub_392D84@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_3D6170();
  *a1 = v3;
  return result;
}

uint64_t sub_392DB0()
{
  return sub_3D6180();
}

uint64_t Artwork.init(artwork:fittingImageSize:isResizable:alignment:cropCodeOverride:contentMode:placeholder:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>, double a9@<D0>, double a10@<D1>)
{
  char v18 = a6 & 1;
  sub_18F88(a1, a8, (uint64_t *)&unk_4B1F70);
  uint64_t v19 = (int *)type metadata accessor for Artwork.Configuration(0);
  uint64_t v20 = a8 + v19[5];
  *(double *)uint64_t v20 = a9;
  *(double *)(v20 + 8) = a10;
  *(unsigned char *)(v20 + 16) = a2;
  uint64_t v21 = (void *)(a8 + v19[6]);
  void *v21 = a3;
  v21[1] = a4;
  sub_18F88(a5, a8 + v19[7], &qword_4B1340);
  *(unsigned char *)(a8 + v19[8]) = v18;
  *(void *)(a8 + v19[9]) = a7;
  uint64_t result = type metadata accessor for Artwork(0);
  uint64_t v23 = a8 + *(int *)(result + 20);
  *(void *)uint64_t v23 = sub_392FA8;
  *(void *)(v23 + 8) = 0;
  *(unsigned char *)(v23 + 16) = 0;
  return result;
}

uint64_t Artwork.init(artwork:sizing:alignment:cropCodeOverride:contentMode:placeholder:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v13 = *a2;
  uint64_t v14 = a2[1];
  char v15 = *((unsigned char *)a2 + 16);
  char v16 = a6 & 1;
  sub_18F88(a1, a8, (uint64_t *)&unk_4B1F70);
  long long v17 = (int *)type metadata accessor for Artwork.Configuration(0);
  uint64_t v18 = a8 + v17[5];
  *(void *)uint64_t v18 = v13;
  *(void *)(v18 + 8) = v14;
  *(unsigned char *)(v18 + 16) = v15;
  uint64_t v19 = (void *)(a8 + v17[6]);
  *uint64_t v19 = a3;
  v19[1] = a4;
  sub_18F88(a5, a8 + v17[7], &qword_4B1340);
  *(unsigned char *)(a8 + v17[8]) = v16;
  *(void *)(a8 + v17[9]) = a7;
  uint64_t result = type metadata accessor for Artwork(0);
  uint64_t v21 = a8 + *(int *)(result + 20);
  *(void *)uint64_t v21 = sub_392FA8;
  *(void *)(v21 + 8) = 0;
  *(unsigned char *)(v21 + 16) = 0;
  return result;
}

uint64_t sub_392FA8()
{
  _s6LoaderCMa(0);
  uint64_t v0 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4B2E58);
  sub_3D59A0();
  uint64_t v1 = v0 + OBJC_IVAR____TtCV8ShelfKit7Artwork6Loader_loaderConfiguration;
  uint64_t v2 = _s6LoaderC19LoaderConfigurationVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtCV8ShelfKit7Artwork6Loader_lastKnownProxySize;
  *(void *)uint64_t v3 = 0;
  *(void *)(v3 + 8) = 0;
  *(unsigned char *)(v3 + 16) = 1;
  *(void *)(v0 + OBJC_IVAR____TtCV8ShelfKit7Artwork6Loader_currentRequest) = 0;
  uint64_t v4 = OBJC_IVAR____TtCV8ShelfKit7Artwork6Loader_animation;
  *(void *)(v0 + v4) = sub_3D68D0();
  return v0;
}

uint64_t Artwork.body.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v2 = type metadata accessor for ArtworkLoaderModifier(0);
  uint64_t v3 = (int *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v31 = (uint64_t *)((char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for FrameModifier(0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0A60);
  uint64_t v9 = v8 - 8;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_3D68B0();
  uint64_t v29 = v13;
  sub_3933C4(v1, (uint64_t)v33);
  uint64_t v14 = v33[0];
  uint64_t v15 = v33[1];
  __int16 v16 = v34;
  char v17 = v35;
  uint64_t v30 = type metadata accessor for Artwork.Configuration;
  sub_3940F0(v1, (uint64_t)v7, type metadata accessor for Artwork.Configuration);
  sub_3940F0((uint64_t)v7, (uint64_t)&v11[*(int *)(v9 + 44)], type metadata accessor for FrameModifier);
  uint64_t v18 = v29;
  *(void *)uint64_t v11 = v12;
  *((void *)v11 + 1) = v18;
  *((void *)v11 + 2) = v14;
  *((void *)v11 + 3) = v15;
  *((_WORD *)v11 + 16) = v16;
  v11[34] = v17;
  v11[35] = 1;
  sub_3957DC((uint64_t)v7, type metadata accessor for FrameModifier);
  type metadata accessor for Artwork(0);
  uint64_t v19 = v1;
  _s6LoaderCMa(0);
  sub_396624(&qword_4C0A68, (void (*)(uint64_t))_s6LoaderCMa);
  uint64_t v20 = sub_3D5DE0();
  uint64_t v21 = v31;
  sub_3940F0(v19, (uint64_t)v31 + v3[7], v30);
  uint64_t *v21 = v20;
  uint64_t v22 = (char *)v21 + v3[8];
  *(void *)uint64_t v22 = swift_getKeyPath();
  v22[8] = 0;
  uint64_t v23 = (char *)v21 + v3[9];
  *(void *)uint64_t v23 = swift_getKeyPath();
  v23[8] = 0;
  uint64_t v24 = (char *)v21 + v3[10];
  *(void *)uint64_t v24 = swift_getKeyPath();
  v24[40] = 0;
  uint64_t v25 = v32;
  sub_153B4((uint64_t)v11, v32, &qword_4C0A60);
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0A70);
  sub_39B1B4((uint64_t)v21, v25 + *(int *)(v26 + 36), type metadata accessor for ArtworkLoaderModifier);
  return sub_250FC((uint64_t)v11, &qword_4C0A60);
}

double sub_3933C4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_3D67A0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for Artwork(0);
  _s6LoaderCMa(0);
  sub_396624(&qword_4C0A68, (void (*)(uint64_t))_s6LoaderCMa);
  sub_3D5DE0();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_3D59E0();
  swift_release();
  swift_release();
  swift_release();
  if ((void)v21)
  {
    id v8 = (id)v21;
    sub_3D6780();
    (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Image.ResizingMode.stretch(_:), v4);
    uint64_t v9 = sub_3D67D0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if (*(unsigned char *)(a1 + *(int *)(type metadata accessor for Artwork.Configuration(0) + 32))) {
      __int16 v10 = 257;
    }
    else {
      __int16 v10 = 1;
    }
    uint64_t v17 = v9;
    uint64_t v18 = 0;
    __int16 v19 = v10;
    char v20 = 0;
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_4C0CD8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4C0CE0);
    sub_39B278();
    sub_39B2EC();
    sub_3D6360();
    swift_release();
  }
  else
  {
    uint64_t v11 = sub_3936F0();
    *(void *)&long long v21 = 0;
    uint64_t v17 = 0x3FF0000000000000;
    sub_39B224();
    uint64_t v12 = sub_3D5EC0();
    uint64_t v17 = v11;
    uint64_t v18 = v12;
    __int16 v19 = 0;
    char v20 = 1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_4C0CD8);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4C0CE0);
    sub_39B278();
    sub_39B2EC();
    sub_3D6360();
  }
  double result = *(double *)&v21;
  __int16 v14 = v22;
  char v15 = v23;
  *(_OWORD *)a2 = v21;
  *(_WORD *)(a2 + 16) = v14;
  *(unsigned char *)(a2 + 18) = v15;
  return result;
}

uint64_t sub_3936F0()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + *(int *)(type metadata accessor for Artwork.Configuration(0) + 36));
  if (v4)
  {
    uint64_t v13 = v4;
    swift_retain();
    return sub_3D5EB0();
  }
  sub_153B4(v0, (uint64_t)v3, (uint64_t *)&unk_4B1F70);
  uint64_t v5 = sub_3D3860();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) == 1)
  {
    sub_250FC((uint64_t)v3, (uint64_t *)&unk_4B1F70);
LABEL_7:
    LODWORD(v13) = sub_3D63C0();
    return sub_3D5EB0();
  }
  uint64_t v6 = (void *)*((void *)v3 + 7);
  int v7 = v3[64];
  sub_FD590(v6, v3[64]);
  sub_3957DC((uint64_t)v3, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  if (v7 == 255) {
    goto LABEL_7;
  }
  id v8 = (void *)sub_3D5110();
  sub_FD5A4(v6, v7);
  id v9 = v8;
  uint64_t v13 = sub_3D6700();
  uint64_t v10 = sub_3D5EB0();

  return v10;
}

uint64_t sub_3938B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v30 = a2;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0C80);
  __chkstk_darwin(v31);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF738);
  uint64_t v5 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  int v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0C88);
  __chkstk_darwin(v27);
  id v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0C90);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0C98);
  __chkstk_darwin(v28);
  __int16 v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_4BF740);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v2 + *(int *)(type metadata accessor for Artwork.Configuration(0) + 20);
  if (*(unsigned char *)(v18 + 16))
  {
    if (*(unsigned char *)(v18 + 16) == 1)
    {
      __int16 v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      uint64_t v20 = v29;
      v19(v7, v26, v29);
      v19(v12, (uint64_t)v7, v20);
      swift_storeEnumTagMultiPayload();
      sub_39A8E0(&qword_4C0CA8, &qword_4BF740);
      sub_3D6E4(&qword_4C0CB0, &qword_4BF738);
      sub_3D6360();
      sub_153B4((uint64_t)v14, (uint64_t)v9, &qword_4C0C98);
      swift_storeEnumTagMultiPayload();
      sub_39A828();
      sub_39A8E0(&qword_4C0CB8, &qword_4C0C80);
      sub_3D6360();
      sub_250FC((uint64_t)v14, &qword_4C0C98);
      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v20);
    }
    sub_356834(0.0, 0, 0.0, 1, INFINITY, 0, 0.0, 0, (uint64_t)v17, 0.0, 1, INFINITY, 0);
    sub_153B4((uint64_t)v17, (uint64_t)v12, &qword_4BF740);
    swift_storeEnumTagMultiPayload();
    sub_39A8E0(&qword_4C0CA8, &qword_4BF740);
    sub_3D6E4(&qword_4C0CB0, &qword_4BF738);
    sub_3D6360();
    sub_153B4((uint64_t)v14, (uint64_t)v9, &qword_4C0C98);
    swift_storeEnumTagMultiPayload();
    sub_39A828();
    sub_39A8E0(&qword_4C0CB8, &qword_4C0C80);
    sub_3D6360();
    sub_250FC((uint64_t)v14, &qword_4C0C98);
    uint64_t v24 = (uint64_t)v17;
    uint64_t v25 = &qword_4BF740;
  }
  else
  {
    sub_3D5EA0();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v4, v26, v29);
    __int16 v22 = &v4[*(int *)(v31 + 36)];
    long long v23 = v33;
    *(_OWORD *)__int16 v22 = v32;
    *((_OWORD *)v22 + 1) = v23;
    *((_OWORD *)v22 + 2) = v34;
    sub_153B4((uint64_t)v4, (uint64_t)v9, &qword_4C0C80);
    swift_storeEnumTagMultiPayload();
    sub_39A828();
    sub_39A8E0(&qword_4C0CB8, &qword_4C0C80);
    sub_3D6360();
    uint64_t v24 = (uint64_t)v4;
    uint64_t v25 = &qword_4C0C80;
  }
  return sub_250FC(v24, v25);
}

double sub_393E98(double *a1)
{
  double result = *a1;
  *uint64_t v1 = *(void *)a1;
  return result;
}

uint64_t sub_393EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v12 = sub_39B59C();

  return static ViewModifier<>._makeView(modifier:inputs:body:)(a1, a2, a3, a4, a5, v12, a6);
}

uint64_t sub_393F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v12 = sub_39B59C();

  return static ViewModifier<>._makeViewList(modifier:inputs:body:)(a1, a2, a3, a4, a5, v12, a6);
}

uint64_t sub_393FB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0D38);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

BOOL _s8ShelfKit7ArtworkV6SizingO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a2;
  double v3 = *(double *)(a2 + 8);
  int v4 = *(unsigned __int8 *)(a2 + 16);
  if (!*(unsigned char *)(a1 + 16))
  {
    if (*(unsigned char *)(a2 + 16)) {
      return 0;
    }
    return *(double *)(a1 + 8) == v3 && *(double *)a1 == v2;
  }
  if (*(unsigned char *)(a1 + 16) == 1)
  {
    if (v4 != 1) {
      return 0;
    }
    return *(double *)(a1 + 8) == v3 && *(double *)a1 == v2;
  }
  return v4 == 2 && (*(void *)&v3 | *(void *)&v2) == 0;
}

uint64_t type metadata accessor for Artwork.Configuration(uint64_t a1)
{
  return sub_2595C(a1, (uint64_t *)&unk_4C0C30);
}

uint64_t type metadata accessor for Artwork(uint64_t a1)
{
  return sub_2595C(a1, qword_4C0AD0);
}

uint64_t type metadata accessor for FrameModifier(uint64_t a1)
{
  return sub_2595C(a1, qword_4C0BA0);
}

uint64_t sub_3940F0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_394158@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_3D6170();
  *a1 = v3;
  return result;
}

uint64_t sub_394184()
{
  return sub_3D6180();
}

uint64_t sub_3941B4()
{
  return sub_3D6250();
}

uint64_t sub_3941F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t *initializeBufferWithCopyOfBuffer for Artwork(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int v7 = (int *)sub_3D3860();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      int v12 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v12 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v13 = a2[2];
        uint64_t v14 = a2[3];
        sub_4C484(v13, v14, v12);
        a1[2] = v13;
        a1[3] = v14;
        *((unsigned char *)a1 + 32) = v12;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      uint64_t v15 = (id *)(a2 + 7);
      int v16 = *((unsigned __int8 *)a2 + 64);
      if (v16 == 255)
      {
        a1[7] = (uint64_t)*v15;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      }
      else
      {
        id v17 = *v15;
        sub_4C49C(*v15, *((unsigned char *)a2 + 64));
        a1[7] = (uint64_t)v17;
        *((unsigned char *)a1 + 64) = v16;
      }
      uint64_t v18 = (id *)(a2 + 9);
      int v19 = *((unsigned __int8 *)a2 + 80);
      if (v19 == 255)
      {
        a1[9] = (uint64_t)*v18;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      }
      else
      {
        id v20 = *v18;
        sub_4C49C(*v18, *((unsigned char *)a2 + 80));
        a1[9] = (uint64_t)v20;
        *((unsigned char *)a1 + 80) = v19;
      }
      long long v21 = (id *)(a2 + 11);
      int v22 = *((unsigned __int8 *)a2 + 96);
      if (v22 == 255)
      {
        a1[11] = (uint64_t)*v21;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
      }
      else
      {
        id v23 = *v21;
        sub_4C49C(*v21, *((unsigned char *)a2 + 96));
        a1[11] = (uint64_t)v23;
        *((unsigned char *)a1 + 96) = v22;
      }
      uint64_t v24 = (id *)(a2 + 13);
      int v25 = *((unsigned __int8 *)a2 + 112);
      if (v25 == 255)
      {
        a1[13] = (uint64_t)*v24;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      }
      else
      {
        id v26 = *v24;
        sub_4C49C(*v24, *((unsigned char *)a2 + 112));
        a1[13] = (uint64_t)v26;
        *((unsigned char *)a1 + 112) = v25;
      }
      uint64_t v27 = (id *)(a2 + 15);
      int v28 = *((unsigned __int8 *)a2 + 128);
      if (v28 == 255)
      {
        a1[15] = (uint64_t)*v27;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
      }
      else
      {
        id v29 = *v27;
        sub_4C49C(*v27, *((unsigned char *)a2 + 128));
        a1[15] = (uint64_t)v29;
        *((unsigned char *)a1 + 128) = v28;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v30 = v7[11];
      uint64_t v31 = (char *)a1 + v30;
      long long v32 = (char *)a2 + v30;
      uint64_t v33 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      uint64_t v34 = v7[12];
      char v35 = (uint64_t *)((char *)a1 + v34);
      uint64_t v36 = (uint64_t *)((char *)a2 + v34);
      uint64_t v37 = v36[1];
      *char v35 = *v36;
      v35[1] = v37;
      *((unsigned char *)a1 + v7[13]) = *((unsigned char *)a2 + v7[13]);
      *((unsigned char *)a1 + v7[14]) = *((unsigned char *)a2 + v7[14]);
      *((unsigned char *)a1 + v7[15]) = *((unsigned char *)a2 + v7[15]);
      uint64_t v38 = v7[16];
      uint64_t v39 = (uint64_t *)((char *)a1 + v38);
      uint64_t v40 = (uint64_t *)((char *)a2 + v38);
      uint64_t v41 = v40[1];
      void *v39 = *v40;
      v39[1] = v41;
      uint64_t v42 = *(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42(a1, 0, 1, v7);
    }
    uint64_t v43 = (int *)type metadata accessor for Artwork.Configuration(0);
    uint64_t v44 = v43[5];
    long long v45 = (char *)a1 + v44;
    uint64_t v46 = (char *)a2 + v44;
    *(_OWORD *)long long v45 = *(_OWORD *)v46;
    v45[16] = v46[16];
    *(_OWORD *)((char *)a1 + v43[6]) = *(_OWORD *)((char *)a2 + v43[6]);
    uint64_t v47 = v43[7];
    uint64_t v48 = (char *)a1 + v47;
    uint64_t v49 = (char *)a2 + v47;
    uint64_t v50 = sub_3D5190();
    uint64_t v51 = *(void *)(v50 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
    {
      uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
      memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
    }
    *((unsigned char *)a1 + v43[8]) = *((unsigned char *)a2 + v43[8]);
    *(uint64_t *)((char *)a1 + v43[9]) = *(uint64_t *)((char *)a2 + v43[9]);
    uint64_t v53 = *(int *)(a3 + 20);
    uint64_t v54 = (char *)a1 + v53;
    uint64_t v55 = (char *)a2 + v53;
    uint64_t v56 = *(void *)v55;
    uint64_t v57 = *((void *)v55 + 1);
    char v58 = v55[16];
    swift_retain();
    sub_3946FC();
    *(void *)uint64_t v54 = v56;
    *((void *)v54 + 1) = v57;
    v54[16] = v58;
  }
  return a1;
}

uint64_t sub_3946FC()
{
  return swift_retain();
}

uint64_t destroy for Artwork(uint64_t a1)
{
  uint64_t v2 = sub_3D3860();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2))
  {
    swift_bridgeObjectRelease();
    int v3 = *(unsigned __int8 *)(a1 + 32);
    if (v3 != 255) {
      sub_49E54(*(void *)(a1 + 16), *(void *)(a1 + 24), v3);
    }
    int v4 = *(unsigned __int8 *)(a1 + 64);
    if (v4 != 255) {
      sub_4C6F0(*(id *)(a1 + 56), v4);
    }
    int v5 = *(unsigned __int8 *)(a1 + 80);
    if (v5 != 255) {
      sub_4C6F0(*(id *)(a1 + 72), v5);
    }
    int v6 = *(unsigned __int8 *)(a1 + 96);
    if (v6 != 255) {
      sub_4C6F0(*(id *)(a1 + 88), v6);
    }
    int v7 = *(unsigned __int8 *)(a1 + 112);
    if (v7 != 255) {
      sub_4C6F0(*(id *)(a1 + 104), v7);
    }
    int v8 = *(unsigned __int8 *)(a1 + 128);
    if (v8 != 255) {
      sub_4C6F0(*(id *)(a1 + 120), v8);
    }
    uint64_t v9 = a1 + *(int *)(v2 + 44);
    uint64_t v10 = sub_3D3750();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = a1 + *(int *)(type metadata accessor for Artwork.Configuration(0) + 28);
  uint64_t v12 = sub_3D5190();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }
  swift_release();

  return sub_394910();
}

uint64_t sub_394910()
{
  return swift_release();
}

void *initializeWithCopy for Artwork(void *a1, void *a2, uint64_t a3)
{
  int v6 = (int *)sub_3D3860();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    int v10 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v10 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    }
    else
    {
      uint64_t v11 = a2[2];
      uint64_t v12 = a2[3];
      sub_4C484(v11, v12, v10);
      a1[2] = v11;
      a1[3] = v12;
      *((unsigned char *)a1 + 32) = v10;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    uint64_t v13 = (id *)(a2 + 7);
    int v14 = *((unsigned __int8 *)a2 + 64);
    if (v14 == 255)
    {
      a1[7] = *v13;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    }
    else
    {
      id v15 = *v13;
      sub_4C49C(*v13, *((unsigned char *)a2 + 64));
      a1[7] = v15;
      *((unsigned char *)a1 + 64) = v14;
    }
    int v16 = (id *)(a2 + 9);
    int v17 = *((unsigned __int8 *)a2 + 80);
    if (v17 == 255)
    {
      a1[9] = *v16;
      *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    }
    else
    {
      id v18 = *v16;
      sub_4C49C(*v16, *((unsigned char *)a2 + 80));
      a1[9] = v18;
      *((unsigned char *)a1 + 80) = v17;
    }
    int v19 = (id *)(a2 + 11);
    int v20 = *((unsigned __int8 *)a2 + 96);
    if (v20 == 255)
    {
      a1[11] = *v19;
      *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
    }
    else
    {
      id v21 = *v19;
      sub_4C49C(*v19, *((unsigned char *)a2 + 96));
      a1[11] = v21;
      *((unsigned char *)a1 + 96) = v20;
    }
    int v22 = (id *)(a2 + 13);
    int v23 = *((unsigned __int8 *)a2 + 112);
    if (v23 == 255)
    {
      a1[13] = *v22;
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
    }
    else
    {
      id v24 = *v22;
      sub_4C49C(*v22, *((unsigned char *)a2 + 112));
      a1[13] = v24;
      *((unsigned char *)a1 + 112) = v23;
    }
    int v25 = (id *)(a2 + 15);
    int v26 = *((unsigned __int8 *)a2 + 128);
    if (v26 == 255)
    {
      a1[15] = *v25;
      *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
    }
    else
    {
      id v27 = *v25;
      sub_4C49C(*v25, *((unsigned char *)a2 + 128));
      a1[15] = v27;
      *((unsigned char *)a1 + 128) = v26;
    }
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v28 = v6[11];
    id v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = v6[12];
    uint64_t v33 = (void *)((char *)a1 + v32);
    uint64_t v34 = (void *)((char *)a2 + v32);
    uint64_t v35 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v35;
    *((unsigned char *)a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
    *((unsigned char *)a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
    *((unsigned char *)a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
    uint64_t v36 = v6[16];
    uint64_t v37 = (void *)((char *)a1 + v36);
    uint64_t v38 = (void *)((char *)a2 + v36);
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    uint64_t v40 = *(void (**)(void *, void, uint64_t, int *))(v7 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40(a1, 0, 1, v6);
  }
  uint64_t v41 = (int *)type metadata accessor for Artwork.Configuration(0);
  uint64_t v42 = v41[5];
  uint64_t v43 = (char *)a1 + v42;
  uint64_t v44 = (char *)a2 + v42;
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  v43[16] = v44[16];
  *(_OWORD *)((char *)a1 + v41[6]) = *(_OWORD *)((char *)a2 + v41[6]);
  uint64_t v45 = v41[7];
  uint64_t v46 = (char *)a1 + v45;
  uint64_t v47 = (char *)a2 + v45;
  uint64_t v48 = sub_3D5190();
  uint64_t v49 = *(void *)(v48 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
  {
    uint64_t v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
    memcpy(v46, v47, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v46, v47, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v46, 0, 1, v48);
  }
  *((unsigned char *)a1 + v41[8]) = *((unsigned char *)a2 + v41[8]);
  *(void *)((char *)a1 + v41[9]) = *(void *)((char *)a2 + v41[9]);
  uint64_t v51 = *(int *)(a3 + 20);
  uint64_t v52 = (char *)a1 + v51;
  uint64_t v53 = (char *)a2 + v51;
  uint64_t v54 = *(void *)v53;
  uint64_t v55 = *((void *)v53 + 1);
  char v56 = v53[16];
  swift_retain();
  sub_3946FC();
  *(void *)uint64_t v52 = v54;
  *((void *)v52 + 1) = v55;
  v52[16] = v56;
  return a1;
}

uint64_t assignWithCopy for Artwork(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = (int *)sub_3D3860();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  uint64_t v138 = a3;
  if (v9)
  {
    if (!v10)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      int v11 = *(unsigned __int8 *)(a2 + 32);
      swift_bridgeObjectRetain();
      if (v11 == 255)
      {
        long long v23 = *(_OWORD *)(a2 + 16);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = v23;
      }
      else
      {
        uint64_t v12 = *(void *)(a2 + 16);
        uint64_t v13 = *(void *)(a2 + 24);
        sub_4C484(v12, v13, v11);
        *(void *)(a1 + 16) = v12;
        *(void *)(a1 + 24) = v13;
        *(unsigned char *)(a1 + 32) = v11;
      }
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      id v24 = (id *)(a2 + 56);
      int v25 = *(unsigned __int8 *)(a2 + 64);
      if (v25 == 255)
      {
        id v27 = *v24;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 56) = v27;
      }
      else
      {
        id v26 = *v24;
        sub_4C49C(*v24, *(unsigned char *)(a2 + 64));
        *(void *)(a1 + 56) = v26;
        *(unsigned char *)(a1 + 64) = v25;
      }
      uint64_t v28 = (id *)(a2 + 72);
      int v29 = *(unsigned __int8 *)(a2 + 80);
      if (v29 == 255)
      {
        id v31 = *v28;
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 72) = v31;
      }
      else
      {
        id v30 = *v28;
        sub_4C49C(*v28, *(unsigned char *)(a2 + 80));
        *(void *)(a1 + 72) = v30;
        *(unsigned char *)(a1 + 80) = v29;
      }
      uint64_t v32 = (id *)(a2 + 88);
      int v33 = *(unsigned __int8 *)(a2 + 96);
      if (v33 == 255)
      {
        id v35 = *v32;
        *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        *(void *)(a1 + 88) = v35;
      }
      else
      {
        id v34 = *v32;
        sub_4C49C(*v32, *(unsigned char *)(a2 + 96));
        *(void *)(a1 + 88) = v34;
        *(unsigned char *)(a1 + 96) = v33;
      }
      uint64_t v36 = (id *)(a2 + 104);
      int v37 = *(unsigned __int8 *)(a2 + 112);
      if (v37 == 255)
      {
        id v39 = *v36;
        *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
        *(void *)(a1 + 104) = v39;
      }
      else
      {
        id v38 = *v36;
        sub_4C49C(*v36, *(unsigned char *)(a2 + 112));
        *(void *)(a1 + 104) = v38;
        *(unsigned char *)(a1 + 112) = v37;
      }
      uint64_t v40 = (id *)(a2 + 120);
      int v41 = *(unsigned __int8 *)(a2 + 128);
      if (v41 == 255)
      {
        id v43 = *v40;
        *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
        *(void *)(a1 + 120) = v43;
      }
      else
      {
        id v42 = *v40;
        sub_4C49C(*v40, *(unsigned char *)(a2 + 128));
        *(void *)(a1 + 120) = v42;
        *(unsigned char *)(a1 + 128) = v41;
      }
      *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
      uint64_t v44 = v6[11];
      uint64_t v45 = a1 + v44;
      uint64_t v46 = a2 + v44;
      uint64_t v47 = sub_3D3750();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
      uint64_t v48 = v6[12];
      uint64_t v49 = (void *)(a1 + v48);
      uint64_t v50 = (void *)(a2 + v48);
      void *v49 = *v50;
      v49[1] = v50[1];
      *(unsigned char *)(a1 + v6[13]) = *(unsigned char *)(a2 + v6[13]);
      *(unsigned char *)(a1 + v6[14]) = *(unsigned char *)(a2 + v6[14]);
      *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
      uint64_t v51 = v6[16];
      uint64_t v52 = (void *)(a1 + v51);
      uint64_t v53 = (void *)(a2 + v51);
      void *v52 = *v53;
      v52[1] = v53[1];
      uint64_t v54 = *(void (**)(uint64_t, void, uint64_t, int *))(v7 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v54(a1, 0, 1, v6);
      goto LABEL_68;
    }
LABEL_7:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_68;
  }
  if (v10)
  {
    sub_3957DC(a1, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v15 = (long long *)(a1 + 16);
  int v16 = (long long *)(a2 + 16);
  int v17 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v17 == 255)
    {
      long long v58 = *v16;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      long long *v15 = v58;
    }
    else
    {
      uint64_t v55 = *(void *)(a2 + 16);
      uint64_t v56 = *(void *)(a2 + 24);
      sub_4C484(v55, v56, *(unsigned char *)(a2 + 32));
      *(void *)(a1 + 16) = v55;
      *(void *)(a1 + 24) = v56;
      *(unsigned char *)(a1 + 32) = v17;
    }
  }
  else if (v17 == 255)
  {
    sub_4D7B0(a1 + 16);
    char v57 = *(unsigned char *)(a2 + 32);
    long long *v15 = *v16;
    *(unsigned char *)(a1 + 32) = v57;
  }
  else
  {
    uint64_t v18 = *(void *)(a2 + 16);
    uint64_t v19 = *(void *)(a2 + 24);
    sub_4C484(v18, v19, *(unsigned char *)(a2 + 32));
    uint64_t v20 = *(void *)(a1 + 16);
    uint64_t v21 = *(void *)(a1 + 24);
    *(void *)(a1 + 16) = v18;
    *(void *)(a1 + 24) = v19;
    unsigned __int8 v22 = *(unsigned char *)(a1 + 32);
    *(unsigned char *)(a1 + 32) = v17;
    sub_49E54(v20, v21, v22);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  long long v59 = (id *)(a1 + 56);
  uint64_t v60 = (id *)(a2 + 56);
  int v61 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v61 == 255)
    {
      id v67 = *v60;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *long long v59 = v67;
    }
    else
    {
      id v65 = *v60;
      sub_4C49C(*v60, *(unsigned char *)(a2 + 64));
      *(void *)(a1 + 56) = v65;
      *(unsigned char *)(a1 + 64) = v61;
    }
  }
  else if (v61 == 255)
  {
    sub_4D804(a1 + 56);
    char v66 = *(unsigned char *)(a2 + 64);
    *long long v59 = *v60;
    *(unsigned char *)(a1 + 64) = v66;
  }
  else
  {
    id v62 = *v60;
    sub_4C49C(*v60, *(unsigned char *)(a2 + 64));
    uint64_t v63 = *(void **)(a1 + 56);
    *(void *)(a1 + 56) = v62;
    char v64 = *(unsigned char *)(a1 + 64);
    *(unsigned char *)(a1 + 64) = v61;
    sub_4C6F0(v63, v64);
  }
  int v68 = (id *)(a1 + 72);
  uint64_t v69 = (id *)(a2 + 72);
  int v70 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v70 == 255)
    {
      id v76 = *v69;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *int v68 = v76;
    }
    else
    {
      id v74 = *v69;
      sub_4C49C(*v69, *(unsigned char *)(a2 + 80));
      *(void *)(a1 + 72) = v74;
      *(unsigned char *)(a1 + 80) = v70;
    }
  }
  else if (v70 == 255)
  {
    sub_4D804(a1 + 72);
    char v75 = *(unsigned char *)(a2 + 80);
    *int v68 = *v69;
    *(unsigned char *)(a1 + 80) = v75;
  }
  else
  {
    id v71 = *v69;
    sub_4C49C(*v69, *(unsigned char *)(a2 + 80));
    uint64_t v72 = *(void **)(a1 + 72);
    *(void *)(a1 + 72) = v71;
    char v73 = *(unsigned char *)(a1 + 80);
    *(unsigned char *)(a1 + 80) = v70;
    sub_4C6F0(v72, v73);
  }
  uint64_t v77 = (id *)(a1 + 88);
  long long v78 = (id *)(a2 + 88);
  int v79 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v79 == 255)
    {
      id v85 = *v78;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *uint64_t v77 = v85;
    }
    else
    {
      id v83 = *v78;
      sub_4C49C(*v78, *(unsigned char *)(a2 + 96));
      *(void *)(a1 + 88) = v83;
      *(unsigned char *)(a1 + 96) = v79;
    }
  }
  else if (v79 == 255)
  {
    sub_4D804(a1 + 88);
    char v84 = *(unsigned char *)(a2 + 96);
    *uint64_t v77 = *v78;
    *(unsigned char *)(a1 + 96) = v84;
  }
  else
  {
    id v80 = *v78;
    sub_4C49C(*v78, *(unsigned char *)(a2 + 96));
    id v81 = *(void **)(a1 + 88);
    *(void *)(a1 + 88) = v80;
    char v82 = *(unsigned char *)(a1 + 96);
    *(unsigned char *)(a1 + 96) = v79;
    sub_4C6F0(v81, v82);
  }
  id v86 = (id *)(a1 + 104);
  id v87 = (id *)(a2 + 104);
  int v88 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v88 == 255)
    {
      id v94 = *v87;
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *id v86 = v94;
    }
    else
    {
      id v92 = *v87;
      sub_4C49C(*v87, *(unsigned char *)(a2 + 112));
      *(void *)(a1 + 104) = v92;
      *(unsigned char *)(a1 + 112) = v88;
    }
  }
  else if (v88 == 255)
  {
    sub_4D804(a1 + 104);
    char v93 = *(unsigned char *)(a2 + 112);
    *id v86 = *v87;
    *(unsigned char *)(a1 + 112) = v93;
  }
  else
  {
    id v89 = *v87;
    sub_4C49C(*v87, *(unsigned char *)(a2 + 112));
    id v90 = *(void **)(a1 + 104);
    *(void *)(a1 + 104) = v89;
    char v91 = *(unsigned char *)(a1 + 112);
    *(unsigned char *)(a1 + 112) = v88;
    sub_4C6F0(v90, v91);
  }
  int v95 = (id *)(a1 + 120);
  int v96 = (id *)(a2 + 120);
  int v97 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v97 == 255)
    {
      id v103 = *v96;
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *int v95 = v103;
    }
    else
    {
      id v101 = *v96;
      sub_4C49C(*v96, *(unsigned char *)(a2 + 128));
      *(void *)(a1 + 120) = v101;
      *(unsigned char *)(a1 + 128) = v97;
    }
  }
  else if (v97 == 255)
  {
    sub_4D804(a1 + 120);
    char v102 = *(unsigned char *)(a2 + 128);
    *int v95 = *v96;
    *(unsigned char *)(a1 + 128) = v102;
  }
  else
  {
    id v98 = *v96;
    sub_4C49C(*v96, *(unsigned char *)(a2 + 128));
    id v99 = *(void **)(a1 + 120);
    *(void *)(a1 + 120) = v98;
    char v100 = *(unsigned char *)(a1 + 128);
    *(unsigned char *)(a1 + 128) = v97;
    sub_4C6F0(v99, v100);
  }
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  uint64_t v104 = v6[11];
  uint64_t v105 = a1 + v104;
  uint64_t v106 = a2 + v104;
  uint64_t v107 = sub_3D3750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 24))(v105, v106, v107);
  uint64_t v108 = v6[12];
  id v109 = (void *)(a1 + v108);
  id v110 = (void *)(a2 + v108);
  void *v109 = *v110;
  v109[1] = v110[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v6[13]) = *(unsigned char *)(a2 + v6[13]);
  *(unsigned char *)(a1 + v6[14]) = *(unsigned char *)(a2 + v6[14]);
  *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
  uint64_t v111 = v6[16];
  int v112 = (void *)(a1 + v111);
  id v113 = (void *)(a2 + v111);
  void *v112 = *v113;
  v112[1] = v113[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_68:
  id v114 = (int *)type metadata accessor for Artwork.Configuration(0);
  uint64_t v115 = v114[5];
  uint64_t v116 = a1 + v115;
  uint64_t v117 = a2 + v115;
  char v118 = *(unsigned char *)(v117 + 16);
  *(_OWORD *)uint64_t v116 = *(_OWORD *)v117;
  *(unsigned char *)(v116 + 16) = v118;
  uint64_t v119 = v114[6];
  uint64_t v120 = (void *)(a1 + v119);
  uint64_t v121 = (void *)(a2 + v119);
  *uint64_t v120 = *v121;
  v120[1] = v121[1];
  uint64_t v122 = v114[7];
  uint64_t v123 = (void *)(a1 + v122);
  id v124 = (void *)(a2 + v122);
  uint64_t v125 = sub_3D5190();
  uint64_t v126 = *(void *)(v125 - 8);
  int v127 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v126 + 48);
  int v128 = v127(v123, 1, v125);
  int v129 = v127(v124, 1, v125);
  if (!v128)
  {
    if (!v129)
    {
      (*(void (**)(void *, void *, uint64_t))(v126 + 24))(v123, v124, v125);
      goto LABEL_74;
    }
    (*(void (**)(void *, uint64_t))(v126 + 8))(v123, v125);
    goto LABEL_73;
  }
  if (v129)
  {
LABEL_73:
    uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
    memcpy(v123, v124, *(void *)(*(void *)(v130 - 8) + 64));
    goto LABEL_74;
  }
  (*(void (**)(void *, void *, uint64_t))(v126 + 16))(v123, v124, v125);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v126 + 56))(v123, 0, 1, v125);
LABEL_74:
  *(unsigned char *)(a1 + v114[8]) = *(unsigned char *)(a2 + v114[8]);
  *(void *)(a1 + v114[9]) = *(void *)(a2 + v114[9]);
  swift_retain();
  swift_release();
  uint64_t v131 = *(int *)(v138 + 20);
  uint64_t v132 = a1 + v131;
  id v133 = (uint64_t *)(a2 + v131);
  uint64_t v134 = *v133;
  uint64_t v135 = v133[1];
  char v136 = *((unsigned char *)v133 + 16);
  sub_3946FC();
  *(void *)uint64_t v132 = v134;
  *(void *)(v132 + 8) = v135;
  *(unsigned char *)(v132 + 16) = v136;
  sub_394910();
  return a1;
}

uint64_t sub_3957DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for Artwork(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int v6 = (int *)sub_3D3860();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    long long v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((void *)a1 + 7) = *((void *)a2 + 7);
    *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v10 = v6[11];
    int v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
    *((unsigned char *)a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
    *((unsigned char *)a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
    *((unsigned char *)a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
    *(_OWORD *)((char *)a1 + v6[16]) = *(_OWORD *)((char *)a2 + v6[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v14 = (int *)type metadata accessor for Artwork.Configuration(0);
  uint64_t v15 = v14[5];
  int v16 = (char *)a1 + v15;
  int v17 = (char *)a2 + v15;
  *(_OWORD *)int v16 = *(_OWORD *)v17;
  v16[16] = v17[16];
  *(_OWORD *)((char *)a1 + v14[6]) = *(_OWORD *)((char *)a2 + v14[6]);
  uint64_t v18 = v14[7];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = sub_3D5190();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  *((unsigned char *)a1 + v14[8]) = *((unsigned char *)a2 + v14[8]);
  *(void *)((char *)a1 + v14[9]) = *(void *)((char *)a2 + v14[9]);
  uint64_t v24 = *(int *)(a3 + 20);
  int v25 = (char *)a1 + v24;
  id v26 = (char *)a2 + v24;
  *(_OWORD *)int v25 = *(_OWORD *)v26;
  v25[16] = v26[16];
  return a1;
}

uint64_t assignWithTake for Artwork(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6 = (int *)sub_3D3860();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  uint64_t v75 = a3;
  if (v9)
  {
    if (!v10)
    {
      long long v11 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v11;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
      uint64_t v12 = v6[11];
      uint64_t v13 = a1 + v12;
      uint64_t v14 = a2 + v12;
      uint64_t v15 = sub_3D3750();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      *(_OWORD *)(a1 + v6[12]) = *(_OWORD *)(a2 + v6[12]);
      *(unsigned char *)(a1 + v6[13]) = *(unsigned char *)(a2 + v6[13]);
      *(unsigned char *)(a1 + v6[14]) = *(unsigned char *)(a2 + v6[14]);
      *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
      *(_OWORD *)(a1 + v6[16]) = *(_OWORD *)(a2 + v6[16]);
      (*(void (**)(uint64_t, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_3957DC(a1, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v35 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v35;
  swift_bridgeObjectRelease();
  uint64_t v36 = (_OWORD *)(a2 + 16);
  int v37 = *(unsigned __int8 *)(a1 + 32);
  if (v37 != 255)
  {
    int v38 = *(unsigned __int8 *)(a2 + 32);
    if (v38 != 255)
    {
      uint64_t v39 = *(void *)(a1 + 16);
      uint64_t v40 = *(void *)(a1 + 24);
      *(_OWORD *)(a1 + 16) = *v36;
      *(unsigned char *)(a1 + 32) = v38;
      sub_49E54(v39, v40, v37);
      goto LABEL_20;
    }
    sub_4D7B0(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *v36;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
LABEL_20:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  int v41 = (void *)(a2 + 56);
  int v42 = *(unsigned __int8 *)(a1 + 64);
  if (v42 != 255)
  {
    int v43 = *(unsigned __int8 *)(a2 + 64);
    if (v43 != 255)
    {
      uint64_t v44 = *(void **)(a1 + 56);
      *(void *)(a1 + 56) = *v41;
      *(unsigned char *)(a1 + 64) = v43;
      sub_4C6F0(v44, v42);
      goto LABEL_25;
    }
    sub_4D804(a1 + 56);
  }
  *(void *)(a1 + 56) = *v41;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
LABEL_25:
  uint64_t v45 = (void *)(a2 + 72);
  int v46 = *(unsigned __int8 *)(a1 + 80);
  if (v46 != 255)
  {
    int v47 = *(unsigned __int8 *)(a2 + 80);
    if (v47 != 255)
    {
      uint64_t v48 = *(void **)(a1 + 72);
      *(void *)(a1 + 72) = *v45;
      *(unsigned char *)(a1 + 80) = v47;
      sub_4C6F0(v48, v46);
      goto LABEL_30;
    }
    sub_4D804(a1 + 72);
  }
  *(void *)(a1 + 72) = *v45;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
LABEL_30:
  uint64_t v49 = (void *)(a2 + 88);
  int v50 = *(unsigned __int8 *)(a1 + 96);
  if (v50 != 255)
  {
    int v51 = *(unsigned __int8 *)(a2 + 96);
    if (v51 != 255)
    {
      uint64_t v52 = *(void **)(a1 + 88);
      *(void *)(a1 + 88) = *v49;
      *(unsigned char *)(a1 + 96) = v51;
      sub_4C6F0(v52, v50);
      goto LABEL_35;
    }
    sub_4D804(a1 + 88);
  }
  *(void *)(a1 + 88) = *v49;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
LABEL_35:
  uint64_t v53 = (void *)(a2 + 104);
  int v54 = *(unsigned __int8 *)(a1 + 112);
  if (v54 != 255)
  {
    int v55 = *(unsigned __int8 *)(a2 + 112);
    if (v55 != 255)
    {
      uint64_t v56 = *(void **)(a1 + 104);
      *(void *)(a1 + 104) = *v53;
      *(unsigned char *)(a1 + 112) = v55;
      sub_4C6F0(v56, v54);
      goto LABEL_40;
    }
    sub_4D804(a1 + 104);
  }
  *(void *)(a1 + 104) = *v53;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
LABEL_40:
  char v57 = (void *)(a2 + 120);
  int v58 = *(unsigned __int8 *)(a1 + 128);
  if (v58 == 255)
  {
LABEL_44:
    *(void *)(a1 + 120) = *v57;
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    goto LABEL_45;
  }
  int v59 = *(unsigned __int8 *)(a2 + 128);
  if (v59 == 255)
  {
    sub_4D804(a1 + 120);
    goto LABEL_44;
  }
  uint64_t v60 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = *v57;
  *(unsigned char *)(a1 + 128) = v59;
  sub_4C6F0(v60, v58);
LABEL_45:
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  uint64_t v61 = v6[11];
  uint64_t v62 = a1 + v61;
  uint64_t v63 = a2 + v61;
  uint64_t v64 = sub_3D3750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v64 - 8) + 40))(v62, v63, v64);
  uint64_t v65 = v6[12];
  char v66 = (void *)(a1 + v65);
  id v67 = (uint64_t *)(a2 + v65);
  uint64_t v69 = *v67;
  uint64_t v68 = v67[1];
  *char v66 = v69;
  v66[1] = v68;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v6[13]) = *(unsigned char *)(a2 + v6[13]);
  *(unsigned char *)(a1 + v6[14]) = *(unsigned char *)(a2 + v6[14]);
  *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
  uint64_t v70 = v6[16];
  id v71 = (void *)(a1 + v70);
  uint64_t v72 = (uint64_t *)(a2 + v70);
  uint64_t v74 = *v72;
  uint64_t v73 = v72[1];
  void *v71 = v74;
  v71[1] = v73;
  swift_bridgeObjectRelease();
LABEL_7:
  int v17 = (int *)type metadata accessor for Artwork.Configuration(0);
  uint64_t v18 = v17[5];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = a2 + v18;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  *(_OWORD *)(a1 + v17[6]) = *(_OWORD *)(a2 + v17[6]);
  uint64_t v21 = v17[7];
  uint64_t v22 = (void *)(a1 + v21);
  uint64_t v23 = (void *)(a2 + v21);
  uint64_t v24 = sub_3D5190();
  uint64_t v25 = *(void *)(v24 - 8);
  id v26 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v25 + 48);
  int v27 = v26(v22, 1, v24);
  int v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (!v28)
    {
      (*(void (**)(void *, void *, uint64_t))(v25 + 40))(v22, v23, v24);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v25 + 8))(v22, v24);
    goto LABEL_12;
  }
  if (v28)
  {
LABEL_12:
    uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
    memcpy(v22, v23, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v25 + 32))(v22, v23, v24);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
LABEL_13:
  *(unsigned char *)(a1 + v17[8]) = *(unsigned char *)(a2 + v17[8]);
  *(void *)(a1 + v17[9]) = *(void *)(a2 + v17[9]);
  swift_release();
  uint64_t v30 = *(int *)(v75 + 20);
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  char v33 = *(unsigned char *)(v32 + 16);
  *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  *(unsigned char *)(v31 + 16) = v33;
  sub_394910();
  return a1;
}

uint64_t getEnumTagSinglePayload for Artwork(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3961F0);
}

uint64_t sub_3961F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Artwork.Configuration(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 16);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for Artwork(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3962C4);
}

uint64_t sub_3962C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for Artwork.Configuration(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_396384()
{
  uint64_t result = type metadata accessor for Artwork.Configuration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for Artwork.Sizing()
{
  return &type metadata for Artwork.Sizing;
}

unint64_t sub_39642C()
{
  unint64_t result = qword_4C0B08;
  if (!qword_4C0B08)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4C0A70);
    sub_3964D8();
    sub_396624(&qword_4C0B40, (void (*)(uint64_t))type metadata accessor for ArtworkLoaderModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C0B08);
  }
  return result;
}

unint64_t sub_3964D8()
{
  unint64_t result = qword_4C0B10;
  if (!qword_4C0B10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4C0A60);
    sub_396584();
    sub_396624(&qword_4C0B38, (void (*)(uint64_t))type metadata accessor for FrameModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C0B10);
  }
  return result;
}

unint64_t sub_396584()
{
  unint64_t result = qword_4C0B18;
  if (!qword_4C0B18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4C0B20);
    sub_3D6E4(&qword_4C0B28, &qword_4C0B30);
    sub_345770();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C0B18);
  }
  return result;
}

uint64_t sub_396624(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_39666C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for Artwork.Configuration(0);
  int v5 = *(_DWORD *)(*(void *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = (int *)v4;
    uint64_t v7 = (int *)sub_3D3860();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      int v12 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v12 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v13 = a2[2];
        uint64_t v14 = a2[3];
        sub_4C484(v13, v14, v12);
        a1[2] = v13;
        a1[3] = v14;
        *((unsigned char *)a1 + 32) = v12;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      uint64_t v15 = (id *)(a2 + 7);
      int v16 = *((unsigned __int8 *)a2 + 64);
      if (v16 == 255)
      {
        a1[7] = (uint64_t)*v15;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      }
      else
      {
        id v17 = *v15;
        sub_4C49C(*v15, *((unsigned char *)a2 + 64));
        a1[7] = (uint64_t)v17;
        *((unsigned char *)a1 + 64) = v16;
      }
      uint64_t v18 = (id *)(a2 + 9);
      int v19 = *((unsigned __int8 *)a2 + 80);
      if (v19 == 255)
      {
        a1[9] = (uint64_t)*v18;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      }
      else
      {
        id v20 = *v18;
        sub_4C49C(*v18, *((unsigned char *)a2 + 80));
        a1[9] = (uint64_t)v20;
        *((unsigned char *)a1 + 80) = v19;
      }
      uint64_t v21 = (id *)(a2 + 11);
      int v22 = *((unsigned __int8 *)a2 + 96);
      if (v22 == 255)
      {
        a1[11] = (uint64_t)*v21;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
      }
      else
      {
        id v23 = *v21;
        sub_4C49C(*v21, *((unsigned char *)a2 + 96));
        a1[11] = (uint64_t)v23;
        *((unsigned char *)a1 + 96) = v22;
      }
      uint64_t v24 = (id *)(a2 + 13);
      int v25 = *((unsigned __int8 *)a2 + 112);
      if (v25 == 255)
      {
        a1[13] = (uint64_t)*v24;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      }
      else
      {
        id v26 = *v24;
        sub_4C49C(*v24, *((unsigned char *)a2 + 112));
        a1[13] = (uint64_t)v26;
        *((unsigned char *)a1 + 112) = v25;
      }
      int v27 = (id *)(a2 + 15);
      int v28 = *((unsigned __int8 *)a2 + 128);
      if (v28 == 255)
      {
        a1[15] = (uint64_t)*v27;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
      }
      else
      {
        id v29 = *v27;
        sub_4C49C(*v27, *((unsigned char *)a2 + 128));
        a1[15] = (uint64_t)v29;
        *((unsigned char *)a1 + 128) = v28;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v30 = v7[11];
      uint64_t v31 = (char *)a1 + v30;
      uint64_t v32 = (char *)a2 + v30;
      uint64_t v33 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      uint64_t v34 = v7[12];
      uint64_t v35 = (uint64_t *)((char *)a1 + v34);
      uint64_t v36 = (uint64_t *)((char *)a2 + v34);
      uint64_t v37 = v36[1];
      *uint64_t v35 = *v36;
      v35[1] = v37;
      *((unsigned char *)a1 + v7[13]) = *((unsigned char *)a2 + v7[13]);
      *((unsigned char *)a1 + v7[14]) = *((unsigned char *)a2 + v7[14]);
      *((unsigned char *)a1 + v7[15]) = *((unsigned char *)a2 + v7[15]);
      uint64_t v38 = v7[16];
      uint64_t v39 = (uint64_t *)((char *)a1 + v38);
      uint64_t v40 = (uint64_t *)((char *)a2 + v38);
      uint64_t v41 = v40[1];
      void *v39 = *v40;
      v39[1] = v41;
      int v42 = *(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42(a1, 0, 1, v7);
    }
    uint64_t v43 = v6[5];
    uint64_t v44 = (char *)a1 + v43;
    uint64_t v45 = (char *)a2 + v43;
    *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
    v44[16] = v45[16];
    *(_OWORD *)((char *)a1 + v6[6]) = *(_OWORD *)((char *)a2 + v6[6]);
    uint64_t v46 = v6[7];
    int v47 = (char *)a1 + v46;
    uint64_t v48 = (char *)a2 + v46;
    uint64_t v49 = sub_3D5190();
    uint64_t v50 = *(void *)(v49 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
    {
      uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
      memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
    }
    *((unsigned char *)a1 + v6[8]) = *((unsigned char *)a2 + v6[8]);
    *(uint64_t *)((char *)a1 + v6[9]) = *(uint64_t *)((char *)a2 + v6[9]);
  }
  swift_retain();
  return a1;
}

uint64_t sub_396B20(uint64_t a1)
{
  uint64_t v2 = sub_3D3860();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2))
  {
    swift_bridgeObjectRelease();
    int v3 = *(unsigned __int8 *)(a1 + 32);
    if (v3 != 255) {
      sub_49E54(*(void *)(a1 + 16), *(void *)(a1 + 24), v3);
    }
    int v4 = *(unsigned __int8 *)(a1 + 64);
    if (v4 != 255) {
      sub_4C6F0(*(id *)(a1 + 56), v4);
    }
    int v5 = *(unsigned __int8 *)(a1 + 80);
    if (v5 != 255) {
      sub_4C6F0(*(id *)(a1 + 72), v5);
    }
    int v6 = *(unsigned __int8 *)(a1 + 96);
    if (v6 != 255) {
      sub_4C6F0(*(id *)(a1 + 88), v6);
    }
    int v7 = *(unsigned __int8 *)(a1 + 112);
    if (v7 != 255) {
      sub_4C6F0(*(id *)(a1 + 104), v7);
    }
    int v8 = *(unsigned __int8 *)(a1 + 128);
    if (v8 != 255) {
      sub_4C6F0(*(id *)(a1 + 120), v8);
    }
    uint64_t v9 = a1 + *(int *)(v2 + 44);
    uint64_t v10 = sub_3D3750();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = a1 + *(int *)(type metadata accessor for Artwork.Configuration(0) + 28);
  uint64_t v12 = sub_3D5190();
  uint64_t v13 = *(void *)(v12 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12)) {
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
  }

  return swift_release();
}

void *sub_396D14(void *a1, void *a2)
{
  int v4 = (int *)sub_3D3860();
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    int v8 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v8 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    }
    else
    {
      uint64_t v9 = a2[2];
      uint64_t v10 = a2[3];
      sub_4C484(v9, v10, v8);
      a1[2] = v9;
      a1[3] = v10;
      *((unsigned char *)a1 + 32) = v8;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    uint64_t v11 = (id *)(a2 + 7);
    int v12 = *((unsigned __int8 *)a2 + 64);
    if (v12 == 255)
    {
      a1[7] = *v11;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    }
    else
    {
      id v13 = *v11;
      sub_4C49C(*v11, *((unsigned char *)a2 + 64));
      a1[7] = v13;
      *((unsigned char *)a1 + 64) = v12;
    }
    uint64_t v14 = (id *)(a2 + 9);
    int v15 = *((unsigned __int8 *)a2 + 80);
    if (v15 == 255)
    {
      a1[9] = *v14;
      *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    }
    else
    {
      id v16 = *v14;
      sub_4C49C(*v14, *((unsigned char *)a2 + 80));
      a1[9] = v16;
      *((unsigned char *)a1 + 80) = v15;
    }
    id v17 = (id *)(a2 + 11);
    int v18 = *((unsigned __int8 *)a2 + 96);
    if (v18 == 255)
    {
      a1[11] = *v17;
      *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
    }
    else
    {
      id v19 = *v17;
      sub_4C49C(*v17, *((unsigned char *)a2 + 96));
      a1[11] = v19;
      *((unsigned char *)a1 + 96) = v18;
    }
    id v20 = (id *)(a2 + 13);
    int v21 = *((unsigned __int8 *)a2 + 112);
    if (v21 == 255)
    {
      a1[13] = *v20;
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
    }
    else
    {
      id v22 = *v20;
      sub_4C49C(*v20, *((unsigned char *)a2 + 112));
      a1[13] = v22;
      *((unsigned char *)a1 + 112) = v21;
    }
    id v23 = (id *)(a2 + 15);
    int v24 = *((unsigned __int8 *)a2 + 128);
    if (v24 == 255)
    {
      a1[15] = *v23;
      *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
    }
    else
    {
      id v25 = *v23;
      sub_4C49C(*v23, *((unsigned char *)a2 + 128));
      a1[15] = v25;
      *((unsigned char *)a1 + 128) = v24;
    }
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v26 = v4[11];
    int v27 = (char *)a1 + v26;
    int v28 = (char *)a2 + v26;
    uint64_t v29 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    uint64_t v30 = v4[12];
    uint64_t v31 = (void *)((char *)a1 + v30);
    uint64_t v32 = (void *)((char *)a2 + v30);
    uint64_t v33 = v32[1];
    void *v31 = *v32;
    v31[1] = v33;
    *((unsigned char *)a1 + v4[13]) = *((unsigned char *)a2 + v4[13]);
    *((unsigned char *)a1 + v4[14]) = *((unsigned char *)a2 + v4[14]);
    *((unsigned char *)a1 + v4[15]) = *((unsigned char *)a2 + v4[15]);
    uint64_t v34 = v4[16];
    uint64_t v35 = (void *)((char *)a1 + v34);
    uint64_t v36 = (void *)((char *)a2 + v34);
    uint64_t v37 = v36[1];
    *uint64_t v35 = *v36;
    v35[1] = v37;
    uint64_t v38 = *(void (**)(void *, void, uint64_t, int *))(v5 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38(a1, 0, 1, v4);
  }
  uint64_t v39 = (int *)type metadata accessor for Artwork.Configuration(0);
  uint64_t v40 = v39[5];
  uint64_t v41 = (char *)a1 + v40;
  int v42 = (char *)a2 + v40;
  *(_OWORD *)uint64_t v41 = *(_OWORD *)v42;
  v41[16] = v42[16];
  *(_OWORD *)((char *)a1 + v39[6]) = *(_OWORD *)((char *)a2 + v39[6]);
  uint64_t v43 = v39[7];
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  uint64_t v46 = sub_3D5190();
  uint64_t v47 = *(void *)(v46 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v45, 1, v46))
  {
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
    memcpy(v44, v45, *(void *)(*(void *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v44, v45, v46);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v44, 0, 1, v46);
  }
  *((unsigned char *)a1 + v39[8]) = *((unsigned char *)a2 + v39[8]);
  *(void *)((char *)a1 + v39[9]) = *(void *)((char *)a2 + v39[9]);
  swift_retain();
  return a1;
}

uint64_t sub_39717C(uint64_t a1, uint64_t a2)
{
  int v4 = (int *)sub_3D3860();
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      int v9 = *(unsigned __int8 *)(a2 + 32);
      swift_bridgeObjectRetain();
      if (v9 == 255)
      {
        long long v21 = *(_OWORD *)(a2 + 16);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = v21;
      }
      else
      {
        uint64_t v10 = *(void *)(a2 + 16);
        uint64_t v11 = *(void *)(a2 + 24);
        sub_4C484(v10, v11, v9);
        *(void *)(a1 + 16) = v10;
        *(void *)(a1 + 24) = v11;
        *(unsigned char *)(a1 + 32) = v9;
      }
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      id v22 = (id *)(a2 + 56);
      int v23 = *(unsigned __int8 *)(a2 + 64);
      if (v23 == 255)
      {
        id v25 = *v22;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 56) = v25;
      }
      else
      {
        id v24 = *v22;
        sub_4C49C(*v22, *(unsigned char *)(a2 + 64));
        *(void *)(a1 + 56) = v24;
        *(unsigned char *)(a1 + 64) = v23;
      }
      uint64_t v26 = (id *)(a2 + 72);
      int v27 = *(unsigned __int8 *)(a2 + 80);
      if (v27 == 255)
      {
        id v29 = *v26;
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 72) = v29;
      }
      else
      {
        id v28 = *v26;
        sub_4C49C(*v26, *(unsigned char *)(a2 + 80));
        *(void *)(a1 + 72) = v28;
        *(unsigned char *)(a1 + 80) = v27;
      }
      uint64_t v30 = (id *)(a2 + 88);
      int v31 = *(unsigned __int8 *)(a2 + 96);
      if (v31 == 255)
      {
        id v33 = *v30;
        *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        *(void *)(a1 + 88) = v33;
      }
      else
      {
        id v32 = *v30;
        sub_4C49C(*v30, *(unsigned char *)(a2 + 96));
        *(void *)(a1 + 88) = v32;
        *(unsigned char *)(a1 + 96) = v31;
      }
      uint64_t v34 = (id *)(a2 + 104);
      int v35 = *(unsigned __int8 *)(a2 + 112);
      if (v35 == 255)
      {
        id v37 = *v34;
        *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
        *(void *)(a1 + 104) = v37;
      }
      else
      {
        id v36 = *v34;
        sub_4C49C(*v34, *(unsigned char *)(a2 + 112));
        *(void *)(a1 + 104) = v36;
        *(unsigned char *)(a1 + 112) = v35;
      }
      uint64_t v38 = (id *)(a2 + 120);
      int v39 = *(unsigned __int8 *)(a2 + 128);
      if (v39 == 255)
      {
        id v41 = *v38;
        *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
        *(void *)(a1 + 120) = v41;
      }
      else
      {
        id v40 = *v38;
        sub_4C49C(*v38, *(unsigned char *)(a2 + 128));
        *(void *)(a1 + 120) = v40;
        *(unsigned char *)(a1 + 128) = v39;
      }
      *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
      uint64_t v42 = v4[11];
      uint64_t v43 = a1 + v42;
      uint64_t v44 = a2 + v42;
      uint64_t v45 = sub_3D3750();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v45 - 8) + 16))(v43, v44, v45);
      uint64_t v46 = v4[12];
      uint64_t v47 = (void *)(a1 + v46);
      uint64_t v48 = (void *)(a2 + v46);
      void *v47 = *v48;
      v47[1] = v48[1];
      *(unsigned char *)(a1 + v4[13]) = *(unsigned char *)(a2 + v4[13]);
      *(unsigned char *)(a1 + v4[14]) = *(unsigned char *)(a2 + v4[14]);
      *(unsigned char *)(a1 + v4[15]) = *(unsigned char *)(a2 + v4[15]);
      uint64_t v49 = v4[16];
      uint64_t v50 = (void *)(a1 + v49);
      uint64_t v51 = (void *)(a2 + v49);
      *uint64_t v50 = *v51;
      v50[1] = v51[1];
      uint64_t v52 = *(void (**)(uint64_t, void, uint64_t, int *))(v5 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v52(a1, 0, 1, v4);
      goto LABEL_68;
    }
LABEL_7:
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v12 - 8) + 64));
    goto LABEL_68;
  }
  if (v8)
  {
    sub_3957DC(a1, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v13 = (long long *)(a1 + 16);
  uint64_t v14 = (long long *)(a2 + 16);
  int v15 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v15 == 255)
    {
      long long v56 = *v14;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *id v13 = v56;
    }
    else
    {
      uint64_t v53 = *(void *)(a2 + 16);
      uint64_t v54 = *(void *)(a2 + 24);
      sub_4C484(v53, v54, *(unsigned char *)(a2 + 32));
      *(void *)(a1 + 16) = v53;
      *(void *)(a1 + 24) = v54;
      *(unsigned char *)(a1 + 32) = v15;
    }
  }
  else if (v15 == 255)
  {
    sub_4D7B0(a1 + 16);
    char v55 = *(unsigned char *)(a2 + 32);
    *id v13 = *v14;
    *(unsigned char *)(a1 + 32) = v55;
  }
  else
  {
    uint64_t v16 = *(void *)(a2 + 16);
    uint64_t v17 = *(void *)(a2 + 24);
    sub_4C484(v16, v17, *(unsigned char *)(a2 + 32));
    uint64_t v18 = *(void *)(a1 + 16);
    uint64_t v19 = *(void *)(a1 + 24);
    *(void *)(a1 + 16) = v16;
    *(void *)(a1 + 24) = v17;
    unsigned __int8 v20 = *(unsigned char *)(a1 + 32);
    *(unsigned char *)(a1 + 32) = v15;
    sub_49E54(v18, v19, v20);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  char v57 = (id *)(a1 + 56);
  int v58 = (id *)(a2 + 56);
  int v59 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v59 == 255)
    {
      id v65 = *v58;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      id *v57 = v65;
    }
    else
    {
      id v63 = *v58;
      sub_4C49C(*v58, *(unsigned char *)(a2 + 64));
      *(void *)(a1 + 56) = v63;
      *(unsigned char *)(a1 + 64) = v59;
    }
  }
  else if (v59 == 255)
  {
    sub_4D804(a1 + 56);
    char v64 = *(unsigned char *)(a2 + 64);
    id *v57 = *v58;
    *(unsigned char *)(a1 + 64) = v64;
  }
  else
  {
    id v60 = *v58;
    sub_4C49C(*v58, *(unsigned char *)(a2 + 64));
    uint64_t v61 = *(void **)(a1 + 56);
    *(void *)(a1 + 56) = v60;
    char v62 = *(unsigned char *)(a1 + 64);
    *(unsigned char *)(a1 + 64) = v59;
    sub_4C6F0(v61, v62);
  }
  char v66 = (id *)(a1 + 72);
  id v67 = (id *)(a2 + 72);
  int v68 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v68 == 255)
    {
      id v74 = *v67;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *char v66 = v74;
    }
    else
    {
      id v72 = *v67;
      sub_4C49C(*v67, *(unsigned char *)(a2 + 80));
      *(void *)(a1 + 72) = v72;
      *(unsigned char *)(a1 + 80) = v68;
    }
  }
  else if (v68 == 255)
  {
    sub_4D804(a1 + 72);
    char v73 = *(unsigned char *)(a2 + 80);
    *char v66 = *v67;
    *(unsigned char *)(a1 + 80) = v73;
  }
  else
  {
    id v69 = *v67;
    sub_4C49C(*v67, *(unsigned char *)(a2 + 80));
    uint64_t v70 = *(void **)(a1 + 72);
    *(void *)(a1 + 72) = v69;
    char v71 = *(unsigned char *)(a1 + 80);
    *(unsigned char *)(a1 + 80) = v68;
    sub_4C6F0(v70, v71);
  }
  uint64_t v75 = (id *)(a1 + 88);
  id v76 = (id *)(a2 + 88);
  int v77 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v77 == 255)
    {
      id v83 = *v76;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      id *v75 = v83;
    }
    else
    {
      id v81 = *v76;
      sub_4C49C(*v76, *(unsigned char *)(a2 + 96));
      *(void *)(a1 + 88) = v81;
      *(unsigned char *)(a1 + 96) = v77;
    }
  }
  else if (v77 == 255)
  {
    sub_4D804(a1 + 88);
    char v82 = *(unsigned char *)(a2 + 96);
    id *v75 = *v76;
    *(unsigned char *)(a1 + 96) = v82;
  }
  else
  {
    id v78 = *v76;
    sub_4C49C(*v76, *(unsigned char *)(a2 + 96));
    int v79 = *(void **)(a1 + 88);
    *(void *)(a1 + 88) = v78;
    char v80 = *(unsigned char *)(a1 + 96);
    *(unsigned char *)(a1 + 96) = v77;
    sub_4C6F0(v79, v80);
  }
  char v84 = (id *)(a1 + 104);
  id v85 = (id *)(a2 + 104);
  int v86 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v86 == 255)
    {
      id v92 = *v85;
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      id *v84 = v92;
    }
    else
    {
      id v90 = *v85;
      sub_4C49C(*v85, *(unsigned char *)(a2 + 112));
      *(void *)(a1 + 104) = v90;
      *(unsigned char *)(a1 + 112) = v86;
    }
  }
  else if (v86 == 255)
  {
    sub_4D804(a1 + 104);
    char v91 = *(unsigned char *)(a2 + 112);
    id *v84 = *v85;
    *(unsigned char *)(a1 + 112) = v91;
  }
  else
  {
    id v87 = *v85;
    sub_4C49C(*v85, *(unsigned char *)(a2 + 112));
    int v88 = *(void **)(a1 + 104);
    *(void *)(a1 + 104) = v87;
    char v89 = *(unsigned char *)(a1 + 112);
    *(unsigned char *)(a1 + 112) = v86;
    sub_4C6F0(v88, v89);
  }
  char v93 = (id *)(a1 + 120);
  id v94 = (id *)(a2 + 120);
  int v95 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v95 == 255)
    {
      id v101 = *v94;
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      id *v93 = v101;
    }
    else
    {
      id v99 = *v94;
      sub_4C49C(*v94, *(unsigned char *)(a2 + 128));
      *(void *)(a1 + 120) = v99;
      *(unsigned char *)(a1 + 128) = v95;
    }
  }
  else if (v95 == 255)
  {
    sub_4D804(a1 + 120);
    char v100 = *(unsigned char *)(a2 + 128);
    id *v93 = *v94;
    *(unsigned char *)(a1 + 128) = v100;
  }
  else
  {
    id v96 = *v94;
    sub_4C49C(*v94, *(unsigned char *)(a2 + 128));
    int v97 = *(void **)(a1 + 120);
    *(void *)(a1 + 120) = v96;
    char v98 = *(unsigned char *)(a1 + 128);
    *(unsigned char *)(a1 + 128) = v95;
    sub_4C6F0(v97, v98);
  }
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  uint64_t v102 = v4[11];
  uint64_t v103 = a1 + v102;
  uint64_t v104 = a2 + v102;
  uint64_t v105 = sub_3D3750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 24))(v103, v104, v105);
  uint64_t v106 = v4[12];
  uint64_t v107 = (void *)(a1 + v106);
  uint64_t v108 = (void *)(a2 + v106);
  *uint64_t v107 = *v108;
  v107[1] = v108[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v4[13]) = *(unsigned char *)(a2 + v4[13]);
  *(unsigned char *)(a1 + v4[14]) = *(unsigned char *)(a2 + v4[14]);
  *(unsigned char *)(a1 + v4[15]) = *(unsigned char *)(a2 + v4[15]);
  uint64_t v109 = v4[16];
  id v110 = (void *)(a1 + v109);
  uint64_t v111 = (void *)(a2 + v109);
  *id v110 = *v111;
  v110[1] = v111[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_68:
  int v112 = (int *)type metadata accessor for Artwork.Configuration(0);
  uint64_t v113 = v112[5];
  uint64_t v114 = a1 + v113;
  uint64_t v115 = a2 + v113;
  char v116 = *(unsigned char *)(v115 + 16);
  *(_OWORD *)uint64_t v114 = *(_OWORD *)v115;
  *(unsigned char *)(v114 + 16) = v116;
  uint64_t v117 = v112[6];
  char v118 = (void *)(a1 + v117);
  uint64_t v119 = (void *)(a2 + v117);
  *char v118 = *v119;
  v118[1] = v119[1];
  uint64_t v120 = v112[7];
  uint64_t v121 = (void *)(a1 + v120);
  uint64_t v122 = (void *)(a2 + v120);
  uint64_t v123 = sub_3D5190();
  uint64_t v124 = *(void *)(v123 - 8);
  uint64_t v125 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v124 + 48);
  int v126 = v125(v121, 1, v123);
  int v127 = v125(v122, 1, v123);
  if (!v126)
  {
    if (!v127)
    {
      (*(void (**)(void *, void *, uint64_t))(v124 + 24))(v121, v122, v123);
      goto LABEL_74;
    }
    (*(void (**)(void *, uint64_t))(v124 + 8))(v121, v123);
    goto LABEL_73;
  }
  if (v127)
  {
LABEL_73:
    uint64_t v128 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
    memcpy(v121, v122, *(void *)(*(void *)(v128 - 8) + 64));
    goto LABEL_74;
  }
  (*(void (**)(void *, void *, uint64_t))(v124 + 16))(v121, v122, v123);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v124 + 56))(v121, 0, 1, v123);
LABEL_74:
  *(unsigned char *)(a1 + v112[8]) = *(unsigned char *)(a2 + v112[8]);
  *(void *)(a1 + v112[9]) = *(void *)(a2 + v112[9]);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_397B5C(_OWORD *a1, _OWORD *a2)
{
  int v4 = (int *)sub_3D3860();
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((void *)a1 + 7) = *((void *)a2 + 7);
    *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v8 = v4[11];
    int v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
    *(_OWORD *)((char *)a1 + v4[12]) = *(_OWORD *)((char *)a2 + v4[12]);
    *((unsigned char *)a1 + v4[13]) = *((unsigned char *)a2 + v4[13]);
    *((unsigned char *)a1 + v4[14]) = *((unsigned char *)a2 + v4[14]);
    *((unsigned char *)a1 + v4[15]) = *((unsigned char *)a2 + v4[15]);
    *(_OWORD *)((char *)a1 + v4[16]) = *(_OWORD *)((char *)a2 + v4[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  }
  uint64_t v12 = (int *)type metadata accessor for Artwork.Configuration(0);
  uint64_t v13 = v12[5];
  uint64_t v14 = (char *)a1 + v13;
  int v15 = (char *)a2 + v13;
  *(_OWORD *)uint64_t v14 = *(_OWORD *)v15;
  v14[16] = v15[16];
  *(_OWORD *)((char *)a1 + v12[6]) = *(_OWORD *)((char *)a2 + v12[6]);
  uint64_t v16 = v12[7];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = (char *)a2 + v16;
  uint64_t v19 = sub_3D5190();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  *((unsigned char *)a1 + v12[8]) = *((unsigned char *)a2 + v12[8]);
  *(void *)((char *)a1 + v12[9]) = *(void *)((char *)a2 + v12[9]);
  return a1;
}

uint64_t sub_397E54(uint64_t a1, uint64_t a2)
{
  int v4 = (int *)sub_3D3860();
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (v7)
  {
    if (!v8)
    {
      long long v9 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v9;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
      uint64_t v10 = v4[11];
      uint64_t v11 = a1 + v10;
      uint64_t v12 = a2 + v10;
      uint64_t v13 = sub_3D3750();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
      *(_OWORD *)(a1 + v4[12]) = *(_OWORD *)(a2 + v4[12]);
      *(unsigned char *)(a1 + v4[13]) = *(unsigned char *)(a2 + v4[13]);
      *(unsigned char *)(a1 + v4[14]) = *(unsigned char *)(a2 + v4[14]);
      *(unsigned char *)(a1 + v4[15]) = *(unsigned char *)(a2 + v4[15]);
      *(_OWORD *)(a1 + v4[16]) = *(_OWORD *)(a2 + v4[16]);
      (*(void (**)(uint64_t, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v8)
  {
    sub_3957DC(a1, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v29 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v29;
  swift_bridgeObjectRelease();
  uint64_t v30 = (_OWORD *)(a2 + 16);
  int v31 = *(unsigned __int8 *)(a1 + 32);
  if (v31 != 255)
  {
    int v32 = *(unsigned __int8 *)(a2 + 32);
    if (v32 != 255)
    {
      uint64_t v33 = *(void *)(a1 + 16);
      uint64_t v34 = *(void *)(a1 + 24);
      *(_OWORD *)(a1 + 16) = *v30;
      *(unsigned char *)(a1 + 32) = v32;
      sub_49E54(v33, v34, v31);
      goto LABEL_20;
    }
    sub_4D7B0(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *v30;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
LABEL_20:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  int v35 = (void *)(a2 + 56);
  int v36 = *(unsigned __int8 *)(a1 + 64);
  if (v36 != 255)
  {
    int v37 = *(unsigned __int8 *)(a2 + 64);
    if (v37 != 255)
    {
      uint64_t v38 = *(void **)(a1 + 56);
      *(void *)(a1 + 56) = *v35;
      *(unsigned char *)(a1 + 64) = v37;
      sub_4C6F0(v38, v36);
      goto LABEL_25;
    }
    sub_4D804(a1 + 56);
  }
  *(void *)(a1 + 56) = *v35;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
LABEL_25:
  int v39 = (void *)(a2 + 72);
  int v40 = *(unsigned __int8 *)(a1 + 80);
  if (v40 != 255)
  {
    int v41 = *(unsigned __int8 *)(a2 + 80);
    if (v41 != 255)
    {
      uint64_t v42 = *(void **)(a1 + 72);
      *(void *)(a1 + 72) = *v39;
      *(unsigned char *)(a1 + 80) = v41;
      sub_4C6F0(v42, v40);
      goto LABEL_30;
    }
    sub_4D804(a1 + 72);
  }
  *(void *)(a1 + 72) = *v39;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
LABEL_30:
  uint64_t v43 = (void *)(a2 + 88);
  int v44 = *(unsigned __int8 *)(a1 + 96);
  if (v44 != 255)
  {
    int v45 = *(unsigned __int8 *)(a2 + 96);
    if (v45 != 255)
    {
      uint64_t v46 = *(void **)(a1 + 88);
      *(void *)(a1 + 88) = *v43;
      *(unsigned char *)(a1 + 96) = v45;
      sub_4C6F0(v46, v44);
      goto LABEL_35;
    }
    sub_4D804(a1 + 88);
  }
  *(void *)(a1 + 88) = *v43;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
LABEL_35:
  uint64_t v47 = (void *)(a2 + 104);
  int v48 = *(unsigned __int8 *)(a1 + 112);
  if (v48 != 255)
  {
    int v49 = *(unsigned __int8 *)(a2 + 112);
    if (v49 != 255)
    {
      uint64_t v50 = *(void **)(a1 + 104);
      *(void *)(a1 + 104) = *v47;
      *(unsigned char *)(a1 + 112) = v49;
      sub_4C6F0(v50, v48);
      goto LABEL_40;
    }
    sub_4D804(a1 + 104);
  }
  *(void *)(a1 + 104) = *v47;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
LABEL_40:
  uint64_t v51 = (void *)(a2 + 120);
  int v52 = *(unsigned __int8 *)(a1 + 128);
  if (v52 == 255)
  {
LABEL_44:
    *(void *)(a1 + 120) = *v51;
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    goto LABEL_45;
  }
  int v53 = *(unsigned __int8 *)(a2 + 128);
  if (v53 == 255)
  {
    sub_4D804(a1 + 120);
    goto LABEL_44;
  }
  uint64_t v54 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = *v51;
  *(unsigned char *)(a1 + 128) = v53;
  sub_4C6F0(v54, v52);
LABEL_45:
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  uint64_t v55 = v4[11];
  uint64_t v56 = a1 + v55;
  uint64_t v57 = a2 + v55;
  uint64_t v58 = sub_3D3750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 40))(v56, v57, v58);
  uint64_t v59 = v4[12];
  id v60 = (void *)(a1 + v59);
  uint64_t v61 = (uint64_t *)(a2 + v59);
  uint64_t v63 = *v61;
  uint64_t v62 = v61[1];
  *id v60 = v63;
  v60[1] = v62;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v4[13]) = *(unsigned char *)(a2 + v4[13]);
  *(unsigned char *)(a1 + v4[14]) = *(unsigned char *)(a2 + v4[14]);
  *(unsigned char *)(a1 + v4[15]) = *(unsigned char *)(a2 + v4[15]);
  uint64_t v64 = v4[16];
  id v65 = (void *)(a1 + v64);
  char v66 = (uint64_t *)(a2 + v64);
  uint64_t v68 = *v66;
  uint64_t v67 = v66[1];
  *id v65 = v68;
  v65[1] = v67;
  swift_bridgeObjectRelease();
LABEL_7:
  int v15 = (int *)type metadata accessor for Artwork.Configuration(0);
  uint64_t v16 = v15[5];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  *(_OWORD *)uint64_t v17 = *(_OWORD *)v18;
  *(unsigned char *)(v17 + 16) = *(unsigned char *)(v18 + 16);
  *(_OWORD *)(a1 + v15[6]) = *(_OWORD *)(a2 + v15[6]);
  uint64_t v19 = v15[7];
  uint64_t v20 = (void *)(a1 + v19);
  uint64_t v21 = (void *)(a2 + v19);
  uint64_t v22 = sub_3D5190();
  uint64_t v23 = *(void *)(v22 - 8);
  id v24 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v23 + 48);
  int v25 = v24(v20, 1, v22);
  int v26 = v24(v21, 1, v22);
  if (!v25)
  {
    if (!v26)
    {
      (*(void (**)(void *, void *, uint64_t))(v23 + 40))(v20, v21, v22);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v23 + 8))(v20, v22);
    goto LABEL_12;
  }
  if (v26)
  {
LABEL_12:
    uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
    memcpy(v20, v21, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v23 + 32))(v20, v21, v22);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
LABEL_13:
  *(unsigned char *)(a1 + v15[8]) = *(unsigned char *)(a2 + v15[8]);
  *(void *)(a1 + v15[9]) = *(void *)(a2 + v15[9]);
  swift_release();
  return a1;
}

uint64_t sub_3984A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3984B4);
}

uint64_t sub_3984B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artwork.Configuration(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_398520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_398534);
}

uint64_t sub_398534(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Artwork.Configuration(0);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_3985A4()
{
  uint64_t result = type metadata accessor for Artwork.Configuration(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_398630(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    int v7 = (int *)sub_3D3860();
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      int v12 = *((unsigned __int8 *)a2 + 32);
      swift_bridgeObjectRetain();
      if (v12 == 255)
      {
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
      }
      else
      {
        uint64_t v13 = a2[2];
        uint64_t v14 = a2[3];
        sub_4C484(v13, v14, v12);
        a1[2] = v13;
        a1[3] = v14;
        *((unsigned char *)a1 + 32) = v12;
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
      int v15 = (id *)(a2 + 7);
      int v16 = *((unsigned __int8 *)a2 + 64);
      if (v16 == 255)
      {
        a1[7] = (uint64_t)*v15;
        *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
      }
      else
      {
        id v17 = *v15;
        sub_4C49C(*v15, *((unsigned char *)a2 + 64));
        a1[7] = (uint64_t)v17;
        *((unsigned char *)a1 + 64) = v16;
      }
      uint64_t v18 = (id *)(a2 + 9);
      int v19 = *((unsigned __int8 *)a2 + 80);
      if (v19 == 255)
      {
        a1[9] = (uint64_t)*v18;
        *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
      }
      else
      {
        id v20 = *v18;
        sub_4C49C(*v18, *((unsigned char *)a2 + 80));
        a1[9] = (uint64_t)v20;
        *((unsigned char *)a1 + 80) = v19;
      }
      uint64_t v21 = (id *)(a2 + 11);
      int v22 = *((unsigned __int8 *)a2 + 96);
      if (v22 == 255)
      {
        a1[11] = (uint64_t)*v21;
        *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
      }
      else
      {
        id v23 = *v21;
        sub_4C49C(*v21, *((unsigned char *)a2 + 96));
        a1[11] = (uint64_t)v23;
        *((unsigned char *)a1 + 96) = v22;
      }
      id v24 = (id *)(a2 + 13);
      int v25 = *((unsigned __int8 *)a2 + 112);
      if (v25 == 255)
      {
        a1[13] = (uint64_t)*v24;
        *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
      }
      else
      {
        id v26 = *v24;
        sub_4C49C(*v24, *((unsigned char *)a2 + 112));
        a1[13] = (uint64_t)v26;
        *((unsigned char *)a1 + 112) = v25;
      }
      uint64_t v27 = (id *)(a2 + 15);
      int v28 = *((unsigned __int8 *)a2 + 128);
      if (v28 == 255)
      {
        a1[15] = (uint64_t)*v27;
        *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
      }
      else
      {
        id v29 = *v27;
        sub_4C49C(*v27, *((unsigned char *)a2 + 128));
        a1[15] = (uint64_t)v29;
        *((unsigned char *)a1 + 128) = v28;
      }
      *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
      uint64_t v30 = v7[11];
      int v31 = (char *)a1 + v30;
      int v32 = (char *)a2 + v30;
      uint64_t v33 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v33 - 8) + 16))(v31, v32, v33);
      uint64_t v34 = v7[12];
      int v35 = (uint64_t *)((char *)a1 + v34);
      int v36 = (uint64_t *)((char *)a2 + v34);
      uint64_t v37 = v36[1];
      *int v35 = *v36;
      v35[1] = v37;
      *((unsigned char *)a1 + v7[13]) = *((unsigned char *)a2 + v7[13]);
      *((unsigned char *)a1 + v7[14]) = *((unsigned char *)a2 + v7[14]);
      *((unsigned char *)a1 + v7[15]) = *((unsigned char *)a2 + v7[15]);
      uint64_t v38 = v7[16];
      int v39 = (uint64_t *)((char *)a1 + v38);
      int v40 = (uint64_t *)((char *)a2 + v38);
      uint64_t v41 = v40[1];
      void *v39 = *v40;
      v39[1] = v41;
      uint64_t v42 = *(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v42(a1, 0, 1, v7);
    }
    uint64_t v43 = a3[5];
    uint64_t v44 = a3[6];
    int v45 = (char *)a1 + v43;
    uint64_t v46 = (char *)a2 + v43;
    *(_OWORD *)int v45 = *(_OWORD *)v46;
    long long v47 = *(_OWORD *)((char *)a2 + v44);
    v45[16] = v46[16];
    *(_OWORD *)((char *)a1 + v44) = v47;
    uint64_t v48 = a3[7];
    int v49 = (char *)a1 + v48;
    uint64_t v50 = (char *)a2 + v48;
    uint64_t v51 = sub_3D5190();
    uint64_t v52 = *(void *)(v51 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v50, 1, v51))
    {
      uint64_t v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
      memcpy(v49, v50, *(void *)(*(void *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v49, v50, v51);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v49, 0, 1, v51);
    }
    uint64_t v54 = a3[9];
    *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
    *(uint64_t *)((char *)a1 + v54) = *(uint64_t *)((char *)a2 + v54);
  }
  swift_retain();
  return a1;
}

uint64_t sub_398AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3D3860();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    swift_bridgeObjectRelease();
    int v5 = *(unsigned __int8 *)(a1 + 32);
    if (v5 != 255) {
      sub_49E54(*(void *)(a1 + 16), *(void *)(a1 + 24), v5);
    }
    int v6 = *(unsigned __int8 *)(a1 + 64);
    if (v6 != 255) {
      sub_4C6F0(*(id *)(a1 + 56), v6);
    }
    int v7 = *(unsigned __int8 *)(a1 + 80);
    if (v7 != 255) {
      sub_4C6F0(*(id *)(a1 + 72), v7);
    }
    int v8 = *(unsigned __int8 *)(a1 + 96);
    if (v8 != 255) {
      sub_4C6F0(*(id *)(a1 + 88), v8);
    }
    int v9 = *(unsigned __int8 *)(a1 + 112);
    if (v9 != 255) {
      sub_4C6F0(*(id *)(a1 + 104), v9);
    }
    int v10 = *(unsigned __int8 *)(a1 + 128);
    if (v10 != 255) {
      sub_4C6F0(*(id *)(a1 + 120), v10);
    }
    uint64_t v11 = a1 + *(int *)(v4 + 44);
    uint64_t v12 = sub_3D3750();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v13 = a1 + *(int *)(a2 + 28);
  uint64_t v14 = sub_3D5190();
  uint64_t v15 = *(void *)(v14 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }

  return swift_release();
}

void *sub_398CD4(void *a1, void *a2, int *a3)
{
  int v6 = (int *)sub_3D3860();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    int v10 = *((unsigned __int8 *)a2 + 32);
    swift_bridgeObjectRetain();
    if (v10 == 255)
    {
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    }
    else
    {
      uint64_t v11 = a2[2];
      uint64_t v12 = a2[3];
      sub_4C484(v11, v12, v10);
      a1[2] = v11;
      a1[3] = v12;
      *((unsigned char *)a1 + 32) = v10;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)(a2 + 5);
    uint64_t v13 = (id *)(a2 + 7);
    int v14 = *((unsigned __int8 *)a2 + 64);
    if (v14 == 255)
    {
      a1[7] = *v13;
      *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    }
    else
    {
      id v15 = *v13;
      sub_4C49C(*v13, *((unsigned char *)a2 + 64));
      a1[7] = v15;
      *((unsigned char *)a1 + 64) = v14;
    }
    int v16 = (id *)(a2 + 9);
    int v17 = *((unsigned __int8 *)a2 + 80);
    if (v17 == 255)
    {
      a1[9] = *v16;
      *((unsigned char *)a1 + 80) = *((unsigned char *)a2 + 80);
    }
    else
    {
      id v18 = *v16;
      sub_4C49C(*v16, *((unsigned char *)a2 + 80));
      a1[9] = v18;
      *((unsigned char *)a1 + 80) = v17;
    }
    int v19 = (id *)(a2 + 11);
    int v20 = *((unsigned __int8 *)a2 + 96);
    if (v20 == 255)
    {
      a1[11] = *v19;
      *((unsigned char *)a1 + 96) = *((unsigned char *)a2 + 96);
    }
    else
    {
      id v21 = *v19;
      sub_4C49C(*v19, *((unsigned char *)a2 + 96));
      a1[11] = v21;
      *((unsigned char *)a1 + 96) = v20;
    }
    int v22 = (id *)(a2 + 13);
    int v23 = *((unsigned __int8 *)a2 + 112);
    if (v23 == 255)
    {
      a1[13] = *v22;
      *((unsigned char *)a1 + 112) = *((unsigned char *)a2 + 112);
    }
    else
    {
      id v24 = *v22;
      sub_4C49C(*v22, *((unsigned char *)a2 + 112));
      a1[13] = v24;
      *((unsigned char *)a1 + 112) = v23;
    }
    int v25 = (id *)(a2 + 15);
    int v26 = *((unsigned __int8 *)a2 + 128);
    if (v26 == 255)
    {
      a1[15] = *v25;
      *((unsigned char *)a1 + 128) = *((unsigned char *)a2 + 128);
    }
    else
    {
      id v27 = *v25;
      sub_4C49C(*v25, *((unsigned char *)a2 + 128));
      a1[15] = v27;
      *((unsigned char *)a1 + 128) = v26;
    }
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v28 = v6[11];
    id v29 = (char *)a1 + v28;
    uint64_t v30 = (char *)a2 + v28;
    uint64_t v31 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    uint64_t v32 = v6[12];
    uint64_t v33 = (void *)((char *)a1 + v32);
    uint64_t v34 = (void *)((char *)a2 + v32);
    uint64_t v35 = v34[1];
    *uint64_t v33 = *v34;
    v33[1] = v35;
    *((unsigned char *)a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
    *((unsigned char *)a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
    *((unsigned char *)a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
    uint64_t v36 = v6[16];
    uint64_t v37 = (void *)((char *)a1 + v36);
    uint64_t v38 = (void *)((char *)a2 + v36);
    uint64_t v39 = v38[1];
    *uint64_t v37 = *v38;
    v37[1] = v39;
    int v40 = *(void (**)(void *, void, uint64_t, int *))(v7 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v40(a1, 0, 1, v6);
  }
  uint64_t v41 = a3[5];
  uint64_t v42 = a3[6];
  uint64_t v43 = (char *)a1 + v41;
  uint64_t v44 = (char *)a2 + v41;
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
  long long v45 = *(_OWORD *)((char *)a2 + v42);
  v43[16] = v44[16];
  *(_OWORD *)((char *)a1 + v42) = v45;
  uint64_t v46 = a3[7];
  long long v47 = (char *)a1 + v46;
  uint64_t v48 = (char *)a2 + v46;
  uint64_t v49 = sub_3D5190();
  uint64_t v50 = *(void *)(v49 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
    memcpy(v47, v48, *(void *)(*(void *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v47, v48, v49);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  uint64_t v52 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v52) = *(void *)((char *)a2 + v52);
  swift_retain();
  return a1;
}

uint64_t sub_39912C(uint64_t a1, uint64_t a2, int *a3)
{
  int v6 = (int *)sub_3D3860();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      int v11 = *(unsigned __int8 *)(a2 + 32);
      swift_bridgeObjectRetain();
      if (v11 == 255)
      {
        long long v23 = *(_OWORD *)(a2 + 16);
        *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = v23;
      }
      else
      {
        uint64_t v12 = *(void *)(a2 + 16);
        uint64_t v13 = *(void *)(a2 + 24);
        sub_4C484(v12, v13, v11);
        *(void *)(a1 + 16) = v12;
        *(void *)(a1 + 24) = v13;
        *(unsigned char *)(a1 + 32) = v11;
      }
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      id v24 = (id *)(a2 + 56);
      int v25 = *(unsigned __int8 *)(a2 + 64);
      if (v25 == 255)
      {
        id v27 = *v24;
        *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
        *(void *)(a1 + 56) = v27;
      }
      else
      {
        id v26 = *v24;
        sub_4C49C(*v24, *(unsigned char *)(a2 + 64));
        *(void *)(a1 + 56) = v26;
        *(unsigned char *)(a1 + 64) = v25;
      }
      uint64_t v28 = (id *)(a2 + 72);
      int v29 = *(unsigned __int8 *)(a2 + 80);
      if (v29 == 255)
      {
        id v31 = *v28;
        *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
        *(void *)(a1 + 72) = v31;
      }
      else
      {
        id v30 = *v28;
        sub_4C49C(*v28, *(unsigned char *)(a2 + 80));
        *(void *)(a1 + 72) = v30;
        *(unsigned char *)(a1 + 80) = v29;
      }
      uint64_t v32 = (id *)(a2 + 88);
      int v33 = *(unsigned __int8 *)(a2 + 96);
      if (v33 == 255)
      {
        id v35 = *v32;
        *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
        *(void *)(a1 + 88) = v35;
      }
      else
      {
        id v34 = *v32;
        sub_4C49C(*v32, *(unsigned char *)(a2 + 96));
        *(void *)(a1 + 88) = v34;
        *(unsigned char *)(a1 + 96) = v33;
      }
      uint64_t v36 = (id *)(a2 + 104);
      int v37 = *(unsigned __int8 *)(a2 + 112);
      if (v37 == 255)
      {
        id v39 = *v36;
        *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
        *(void *)(a1 + 104) = v39;
      }
      else
      {
        id v38 = *v36;
        sub_4C49C(*v36, *(unsigned char *)(a2 + 112));
        *(void *)(a1 + 104) = v38;
        *(unsigned char *)(a1 + 112) = v37;
      }
      int v40 = (id *)(a2 + 120);
      int v41 = *(unsigned __int8 *)(a2 + 128);
      if (v41 == 255)
      {
        id v43 = *v40;
        *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
        *(void *)(a1 + 120) = v43;
      }
      else
      {
        id v42 = *v40;
        sub_4C49C(*v40, *(unsigned char *)(a2 + 128));
        *(void *)(a1 + 120) = v42;
        *(unsigned char *)(a1 + 128) = v41;
      }
      *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
      uint64_t v44 = v6[11];
      uint64_t v45 = a1 + v44;
      uint64_t v46 = a2 + v44;
      uint64_t v47 = sub_3D3750();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 16))(v45, v46, v47);
      uint64_t v48 = v6[12];
      uint64_t v49 = (void *)(a1 + v48);
      uint64_t v50 = (void *)(a2 + v48);
      void *v49 = *v50;
      v49[1] = v50[1];
      *(unsigned char *)(a1 + v6[13]) = *(unsigned char *)(a2 + v6[13]);
      *(unsigned char *)(a1 + v6[14]) = *(unsigned char *)(a2 + v6[14]);
      *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
      uint64_t v51 = v6[16];
      uint64_t v52 = (void *)(a1 + v51);
      uint64_t v53 = (void *)(a2 + v51);
      void *v52 = *v53;
      v52[1] = v53[1];
      uint64_t v54 = *(void (**)(uint64_t, void, uint64_t, int *))(v7 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v54(a1, 0, 1, v6);
      goto LABEL_68;
    }
LABEL_7:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_68;
  }
  if (v10)
  {
    sub_3957DC(a1, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v15 = (long long *)(a1 + 16);
  int v16 = (long long *)(a2 + 16);
  int v17 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v17 == 255)
    {
      long long v58 = *v16;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      long long *v15 = v58;
    }
    else
    {
      uint64_t v55 = *(void *)(a2 + 16);
      uint64_t v56 = *(void *)(a2 + 24);
      sub_4C484(v55, v56, *(unsigned char *)(a2 + 32));
      *(void *)(a1 + 16) = v55;
      *(void *)(a1 + 24) = v56;
      *(unsigned char *)(a1 + 32) = v17;
    }
  }
  else if (v17 == 255)
  {
    sub_4D7B0(a1 + 16);
    char v57 = *(unsigned char *)(a2 + 32);
    long long *v15 = *v16;
    *(unsigned char *)(a1 + 32) = v57;
  }
  else
  {
    uint64_t v18 = *(void *)(a2 + 16);
    uint64_t v19 = *(void *)(a2 + 24);
    sub_4C484(v18, v19, *(unsigned char *)(a2 + 32));
    uint64_t v20 = *(void *)(a1 + 16);
    uint64_t v21 = *(void *)(a1 + 24);
    *(void *)(a1 + 16) = v18;
    *(void *)(a1 + 24) = v19;
    unsigned __int8 v22 = *(unsigned char *)(a1 + 32);
    *(unsigned char *)(a1 + 32) = v17;
    sub_49E54(v20, v21, v22);
  }
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  uint64_t v59 = (id *)(a1 + 56);
  id v60 = (id *)(a2 + 56);
  int v61 = *(unsigned __int8 *)(a2 + 64);
  if (*(unsigned __int8 *)(a1 + 64) == 255)
  {
    if (v61 == 255)
    {
      id v67 = *v60;
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *uint64_t v59 = v67;
    }
    else
    {
      id v65 = *v60;
      sub_4C49C(*v60, *(unsigned char *)(a2 + 64));
      *(void *)(a1 + 56) = v65;
      *(unsigned char *)(a1 + 64) = v61;
    }
  }
  else if (v61 == 255)
  {
    sub_4D804(a1 + 56);
    char v66 = *(unsigned char *)(a2 + 64);
    *uint64_t v59 = *v60;
    *(unsigned char *)(a1 + 64) = v66;
  }
  else
  {
    id v62 = *v60;
    sub_4C49C(*v60, *(unsigned char *)(a2 + 64));
    uint64_t v63 = *(void **)(a1 + 56);
    *(void *)(a1 + 56) = v62;
    char v64 = *(unsigned char *)(a1 + 64);
    *(unsigned char *)(a1 + 64) = v61;
    sub_4C6F0(v63, v64);
  }
  uint64_t v68 = (id *)(a1 + 72);
  id v69 = (id *)(a2 + 72);
  int v70 = *(unsigned __int8 *)(a2 + 80);
  if (*(unsigned __int8 *)(a1 + 80) == 255)
  {
    if (v70 == 255)
    {
      id v76 = *v69;
      *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
      *uint64_t v68 = v76;
    }
    else
    {
      id v74 = *v69;
      sub_4C49C(*v69, *(unsigned char *)(a2 + 80));
      *(void *)(a1 + 72) = v74;
      *(unsigned char *)(a1 + 80) = v70;
    }
  }
  else if (v70 == 255)
  {
    sub_4D804(a1 + 72);
    char v75 = *(unsigned char *)(a2 + 80);
    *uint64_t v68 = *v69;
    *(unsigned char *)(a1 + 80) = v75;
  }
  else
  {
    id v71 = *v69;
    sub_4C49C(*v69, *(unsigned char *)(a2 + 80));
    id v72 = *(void **)(a1 + 72);
    *(void *)(a1 + 72) = v71;
    char v73 = *(unsigned char *)(a1 + 80);
    *(unsigned char *)(a1 + 80) = v70;
    sub_4C6F0(v72, v73);
  }
  int v77 = (id *)(a1 + 88);
  id v78 = (id *)(a2 + 88);
  int v79 = *(unsigned __int8 *)(a2 + 96);
  if (*(unsigned __int8 *)(a1 + 96) == 255)
  {
    if (v79 == 255)
    {
      id v85 = *v78;
      *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
      *int v77 = v85;
    }
    else
    {
      id v83 = *v78;
      sub_4C49C(*v78, *(unsigned char *)(a2 + 96));
      *(void *)(a1 + 88) = v83;
      *(unsigned char *)(a1 + 96) = v79;
    }
  }
  else if (v79 == 255)
  {
    sub_4D804(a1 + 88);
    char v84 = *(unsigned char *)(a2 + 96);
    *int v77 = *v78;
    *(unsigned char *)(a1 + 96) = v84;
  }
  else
  {
    id v80 = *v78;
    sub_4C49C(*v78, *(unsigned char *)(a2 + 96));
    id v81 = *(void **)(a1 + 88);
    *(void *)(a1 + 88) = v80;
    char v82 = *(unsigned char *)(a1 + 96);
    *(unsigned char *)(a1 + 96) = v79;
    sub_4C6F0(v81, v82);
  }
  int v86 = (id *)(a1 + 104);
  id v87 = (id *)(a2 + 104);
  int v88 = *(unsigned __int8 *)(a2 + 112);
  if (*(unsigned __int8 *)(a1 + 112) == 255)
  {
    if (v88 == 255)
    {
      id v94 = *v87;
      *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
      *int v86 = v94;
    }
    else
    {
      id v92 = *v87;
      sub_4C49C(*v87, *(unsigned char *)(a2 + 112));
      *(void *)(a1 + 104) = v92;
      *(unsigned char *)(a1 + 112) = v88;
    }
  }
  else if (v88 == 255)
  {
    sub_4D804(a1 + 104);
    char v93 = *(unsigned char *)(a2 + 112);
    *int v86 = *v87;
    *(unsigned char *)(a1 + 112) = v93;
  }
  else
  {
    id v89 = *v87;
    sub_4C49C(*v87, *(unsigned char *)(a2 + 112));
    id v90 = *(void **)(a1 + 104);
    *(void *)(a1 + 104) = v89;
    char v91 = *(unsigned char *)(a1 + 112);
    *(unsigned char *)(a1 + 112) = v88;
    sub_4C6F0(v90, v91);
  }
  int v95 = (id *)(a1 + 120);
  id v96 = (id *)(a2 + 120);
  int v97 = *(unsigned __int8 *)(a2 + 128);
  if (*(unsigned __int8 *)(a1 + 128) == 255)
  {
    if (v97 == 255)
    {
      id v103 = *v96;
      *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
      *int v95 = v103;
    }
    else
    {
      id v101 = *v96;
      sub_4C49C(*v96, *(unsigned char *)(a2 + 128));
      *(void *)(a1 + 120) = v101;
      *(unsigned char *)(a1 + 128) = v97;
    }
  }
  else if (v97 == 255)
  {
    sub_4D804(a1 + 120);
    char v102 = *(unsigned char *)(a2 + 128);
    *int v95 = *v96;
    *(unsigned char *)(a1 + 128) = v102;
  }
  else
  {
    id v98 = *v96;
    sub_4C49C(*v96, *(unsigned char *)(a2 + 128));
    id v99 = *(void **)(a1 + 120);
    *(void *)(a1 + 120) = v98;
    char v100 = *(unsigned char *)(a1 + 128);
    *(unsigned char *)(a1 + 128) = v97;
    sub_4C6F0(v99, v100);
  }
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  uint64_t v104 = v6[11];
  uint64_t v105 = a1 + v104;
  uint64_t v106 = a2 + v104;
  uint64_t v107 = sub_3D3750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v107 - 8) + 24))(v105, v106, v107);
  uint64_t v108 = v6[12];
  uint64_t v109 = (void *)(a1 + v108);
  id v110 = (void *)(a2 + v108);
  void *v109 = *v110;
  v109[1] = v110[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v6[13]) = *(unsigned char *)(a2 + v6[13]);
  *(unsigned char *)(a1 + v6[14]) = *(unsigned char *)(a2 + v6[14]);
  *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
  uint64_t v111 = v6[16];
  int v112 = (void *)(a1 + v111);
  uint64_t v113 = (void *)(a2 + v111);
  void *v112 = *v113;
  v112[1] = v113[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_68:
  uint64_t v114 = a3[5];
  uint64_t v115 = a1 + v114;
  char v116 = (long long *)(a2 + v114);
  long long v117 = *v116;
  *(unsigned char *)(v115 + 16) = *((unsigned char *)v116 + 16);
  *(_OWORD *)uint64_t v115 = v117;
  uint64_t v118 = a3[6];
  uint64_t v119 = (void *)(a1 + v118);
  uint64_t v120 = (void *)(a2 + v118);
  void *v119 = *v120;
  v119[1] = v120[1];
  uint64_t v121 = a3[7];
  uint64_t v122 = (void *)(a1 + v121);
  uint64_t v123 = (void *)(a2 + v121);
  uint64_t v124 = sub_3D5190();
  uint64_t v125 = *(void *)(v124 - 8);
  int v126 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v125 + 48);
  int v127 = v126(v122, 1, v124);
  int v128 = v126(v123, 1, v124);
  if (!v127)
  {
    if (!v128)
    {
      (*(void (**)(void *, void *, uint64_t))(v125 + 24))(v122, v123, v124);
      goto LABEL_74;
    }
    (*(void (**)(void *, uint64_t))(v125 + 8))(v122, v124);
    goto LABEL_73;
  }
  if (v128)
  {
LABEL_73:
    uint64_t v129 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
    memcpy(v122, v123, *(void *)(*(void *)(v129 - 8) + 64));
    goto LABEL_74;
  }
  (*(void (**)(void *, void *, uint64_t))(v125 + 16))(v122, v123, v124);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v125 + 56))(v122, 0, 1, v124);
LABEL_74:
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_399B04(_OWORD *a1, _OWORD *a2, int *a3)
{
  int v6 = (int *)sub_3D3860();
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    long long v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    *((unsigned char *)a1 + 32) = *((unsigned char *)a2 + 32);
    *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
    *((void *)a1 + 7) = *((void *)a2 + 7);
    *((unsigned char *)a1 + 64) = *((unsigned char *)a2 + 64);
    *(_OWORD *)((char *)a1 + 113) = *(_OWORD *)((char *)a2 + 113);
    *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
    *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
    *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
    *((unsigned char *)a1 + 129) = *((unsigned char *)a2 + 129);
    uint64_t v10 = v6[11];
    int v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    uint64_t v13 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    *(_OWORD *)((char *)a1 + v6[12]) = *(_OWORD *)((char *)a2 + v6[12]);
    *((unsigned char *)a1 + v6[13]) = *((unsigned char *)a2 + v6[13]);
    *((unsigned char *)a1 + v6[14]) = *((unsigned char *)a2 + v6[14]);
    *((unsigned char *)a1 + v6[15]) = *((unsigned char *)a2 + v6[15]);
    *(_OWORD *)((char *)a1 + v6[16]) = *(_OWORD *)((char *)a2 + v6[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v14 = a3[5];
  uint64_t v15 = a3[6];
  int v16 = (char *)a1 + v14;
  int v17 = (char *)a2 + v14;
  *(_OWORD *)int v16 = *(_OWORD *)v17;
  long long v18 = *(_OWORD *)((char *)a2 + v15);
  v16[16] = v17[16];
  *(_OWORD *)((char *)a1 + v15) = v18;
  uint64_t v19 = a3[7];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = (char *)a2 + v19;
  uint64_t v22 = sub_3D5190();
  uint64_t v23 = *(void *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
    memcpy(v20, v21, *(void *)(*(void *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  uint64_t v25 = a3[9];
  *((unsigned char *)a1 + a3[8]) = *((unsigned char *)a2 + a3[8]);
  *(void *)((char *)a1 + v25) = *(void *)((char *)a2 + v25);
  return a1;
}

uint64_t sub_399DEC(uint64_t a1, uint64_t a2, int *a3)
{
  int v6 = (int *)sub_3D3860();
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      long long v11 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v11;
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(_OWORD *)(a1 + 113) = *(_OWORD *)(a2 + 113);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
      uint64_t v12 = v6[11];
      uint64_t v13 = a1 + v12;
      uint64_t v14 = a2 + v12;
      uint64_t v15 = sub_3D3750();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      *(_OWORD *)(a1 + v6[12]) = *(_OWORD *)(a2 + v6[12]);
      *(unsigned char *)(a1 + v6[13]) = *(unsigned char *)(a2 + v6[13]);
      *(unsigned char *)(a1 + v6[14]) = *(unsigned char *)(a2 + v6[14]);
      *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
      *(_OWORD *)(a1 + v6[16]) = *(_OWORD *)(a2 + v6[16]);
      (*(void (**)(uint64_t, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_3957DC(a1, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy((void *)a1, (const void *)a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v33 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v33;
  swift_bridgeObjectRelease();
  id v34 = (_OWORD *)(a2 + 16);
  int v35 = *(unsigned __int8 *)(a1 + 32);
  if (v35 != 255)
  {
    int v36 = *(unsigned __int8 *)(a2 + 32);
    if (v36 != 255)
    {
      uint64_t v37 = *(void *)(a1 + 16);
      uint64_t v38 = *(void *)(a1 + 24);
      *(_OWORD *)(a1 + 16) = *v34;
      *(unsigned char *)(a1 + 32) = v36;
      sub_49E54(v37, v38, v35);
      goto LABEL_20;
    }
    sub_4D7B0(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *v34;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
LABEL_20:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  id v39 = (void *)(a2 + 56);
  int v40 = *(unsigned __int8 *)(a1 + 64);
  if (v40 != 255)
  {
    int v41 = *(unsigned __int8 *)(a2 + 64);
    if (v41 != 255)
    {
      id v42 = *(void **)(a1 + 56);
      *(void *)(a1 + 56) = *v39;
      *(unsigned char *)(a1 + 64) = v41;
      sub_4C6F0(v42, v40);
      goto LABEL_25;
    }
    sub_4D804(a1 + 56);
  }
  *(void *)(a1 + 56) = *v39;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
LABEL_25:
  id v43 = (void *)(a2 + 72);
  int v44 = *(unsigned __int8 *)(a1 + 80);
  if (v44 != 255)
  {
    int v45 = *(unsigned __int8 *)(a2 + 80);
    if (v45 != 255)
    {
      uint64_t v46 = *(void **)(a1 + 72);
      *(void *)(a1 + 72) = *v43;
      *(unsigned char *)(a1 + 80) = v45;
      sub_4C6F0(v46, v44);
      goto LABEL_30;
    }
    sub_4D804(a1 + 72);
  }
  *(void *)(a1 + 72) = *v43;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
LABEL_30:
  uint64_t v47 = (void *)(a2 + 88);
  int v48 = *(unsigned __int8 *)(a1 + 96);
  if (v48 != 255)
  {
    int v49 = *(unsigned __int8 *)(a2 + 96);
    if (v49 != 255)
    {
      uint64_t v50 = *(void **)(a1 + 88);
      *(void *)(a1 + 88) = *v47;
      *(unsigned char *)(a1 + 96) = v49;
      sub_4C6F0(v50, v48);
      goto LABEL_35;
    }
    sub_4D804(a1 + 88);
  }
  *(void *)(a1 + 88) = *v47;
  *(unsigned char *)(a1 + 96) = *(unsigned char *)(a2 + 96);
LABEL_35:
  uint64_t v51 = (void *)(a2 + 104);
  int v52 = *(unsigned __int8 *)(a1 + 112);
  if (v52 != 255)
  {
    int v53 = *(unsigned __int8 *)(a2 + 112);
    if (v53 != 255)
    {
      uint64_t v54 = *(void **)(a1 + 104);
      *(void *)(a1 + 104) = *v51;
      *(unsigned char *)(a1 + 112) = v53;
      sub_4C6F0(v54, v52);
      goto LABEL_40;
    }
    sub_4D804(a1 + 104);
  }
  *(void *)(a1 + 104) = *v51;
  *(unsigned char *)(a1 + 112) = *(unsigned char *)(a2 + 112);
LABEL_40:
  uint64_t v55 = (void *)(a2 + 120);
  int v56 = *(unsigned __int8 *)(a1 + 128);
  if (v56 == 255)
  {
LABEL_44:
    *(void *)(a1 + 120) = *v55;
    *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
    goto LABEL_45;
  }
  int v57 = *(unsigned __int8 *)(a2 + 128);
  if (v57 == 255)
  {
    sub_4D804(a1 + 120);
    goto LABEL_44;
  }
  long long v58 = *(void **)(a1 + 120);
  *(void *)(a1 + 120) = *v55;
  *(unsigned char *)(a1 + 128) = v57;
  sub_4C6F0(v58, v56);
LABEL_45:
  *(unsigned char *)(a1 + 129) = *(unsigned char *)(a2 + 129);
  uint64_t v59 = v6[11];
  uint64_t v60 = a1 + v59;
  uint64_t v61 = a2 + v59;
  uint64_t v62 = sub_3D3750();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v62 - 8) + 40))(v60, v61, v62);
  uint64_t v63 = v6[12];
  char v64 = (void *)(a1 + v63);
  id v65 = (uint64_t *)(a2 + v63);
  uint64_t v67 = *v65;
  uint64_t v66 = v65[1];
  void *v64 = v67;
  v64[1] = v66;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + v6[13]) = *(unsigned char *)(a2 + v6[13]);
  *(unsigned char *)(a1 + v6[14]) = *(unsigned char *)(a2 + v6[14]);
  *(unsigned char *)(a1 + v6[15]) = *(unsigned char *)(a2 + v6[15]);
  uint64_t v68 = v6[16];
  id v69 = (void *)(a1 + v68);
  int v70 = (uint64_t *)(a2 + v68);
  uint64_t v72 = *v70;
  uint64_t v71 = v70[1];
  *id v69 = v72;
  v69[1] = v71;
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v17 = a3[5];
  uint64_t v18 = a3[6];
  uint64_t v19 = a1 + v17;
  uint64_t v20 = a2 + v17;
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  long long v21 = *(_OWORD *)(a2 + v18);
  *(unsigned char *)(v19 + 16) = *(unsigned char *)(v20 + 16);
  *(_OWORD *)(a1 + v18) = v21;
  uint64_t v22 = a3[7];
  uint64_t v23 = (void *)(a1 + v22);
  uint64_t v24 = (void *)(a2 + v22);
  uint64_t v25 = sub_3D5190();
  uint64_t v26 = *(void *)(v25 - 8);
  id v27 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (!v28)
  {
    if (!v29)
    {
      (*(void (**)(void *, void *, uint64_t))(v26 + 40))(v23, v24, v25);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v26 + 8))(v23, v25);
    goto LABEL_12;
  }
  if (v29)
  {
LABEL_12:
    uint64_t v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v26 + 32))(v23, v24, v25);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
LABEL_13:
  uint64_t v31 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(void *)(a1 + v31) = *(void *)(a2 + v31);
  swift_release();
  return a1;
}

uint64_t sub_39A428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_39A43C);
}

uint64_t sub_39A43C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_5:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
  uint64_t v12 = *(void *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v10 = a1 + *(int *)(a3 + 28);
    int v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_5;
  }
  unint64_t v14 = *(void *)(a1 + *(int *)(a3 + 36));
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  int v15 = v14 - 1;
  if (v15 < 0) {
    int v15 = -1;
  }
  return (v15 + 1);
}

uint64_t sub_39A564(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_39A578);
}

uint64_t sub_39A578(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
    uint64_t v14 = *(void *)(result - 8);
    if (*(_DWORD *)(v14 + 84) != a3)
    {
      *(void *)(a1 + *(int *)(a4 + 36)) = a2;
      return result;
    }
    uint64_t v10 = result;
    uint64_t v12 = a1 + *(int *)(a4 + 28);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_39A690()
{
  sub_39A7B8(319, (unint64_t *)&qword_4ABAF0, (void (*)(uint64_t))&type metadata accessor for ArtworkModel);
  if (v0 <= 0x3F)
  {
    sub_39A7B8(319, (unint64_t *)&unk_4C0C40, (void (*)(uint64_t))&type metadata accessor for CropCode);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_39A7B8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_3D8910();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_39A80C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_39A828()
{
  unint64_t result = qword_4C0CA0;
  if (!qword_4C0CA0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4C0C98);
    sub_39A8E0(&qword_4C0CA8, &qword_4BF740);
    sub_3D6E4(&qword_4C0CB0, &qword_4BF738);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C0CA0);
  }
  return result;
}

uint64_t sub_39A8E0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_3D6E4(&qword_4C0CB0, &qword_4BF738);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_39A978(uint64_t a1, uint64_t a2)
{
  uint64_t v70 = a2;
  uint64_t v63 = sub_3D5190();
  uint64_t v65 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v61 = (char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C0CC0);
  __chkstk_darwin(v62);
  uint64_t v66 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1340);
  __chkstk_darwin(v5 - 8);
  char v64 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v68 = (uint64_t)&v61 - v8;
  __chkstk_darwin(v9);
  uint64_t v69 = (uint64_t)&v61 - v10;
  uint64_t v11 = sub_3D3860();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B30C0);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v19 - 8);
  long long v21 = (char *)&v61 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v61 - v23;
  __chkstk_darwin(v25);
  id v27 = (char *)&v61 - v26;
  uint64_t v67 = a1;
  sub_153B4(a1, (uint64_t)&v61 - v26, (uint64_t *)&unk_4B1F70);
  sub_153B4(v70, (uint64_t)v24, (uint64_t *)&unk_4B1F70);
  uint64_t v28 = (uint64_t)&v18[*(int *)(v16 + 56)];
  sub_153B4((uint64_t)v27, (uint64_t)v18, (uint64_t *)&unk_4B1F70);
  sub_153B4((uint64_t)v24, v28, (uint64_t *)&unk_4B1F70);
  int v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
  if (v29((uint64_t)v18, 1, v11) == 1)
  {
    sub_250FC((uint64_t)v24, (uint64_t *)&unk_4B1F70);
    sub_250FC((uint64_t)v27, (uint64_t *)&unk_4B1F70);
    if (v29(v28, 1, v11) == 1)
    {
      sub_250FC((uint64_t)v18, (uint64_t *)&unk_4B1F70);
      goto LABEL_11;
    }
LABEL_6:
    uint64_t v30 = &qword_4B30C0;
    uint64_t v31 = (uint64_t)v18;
    goto LABEL_7;
  }
  sub_153B4((uint64_t)v18, (uint64_t)v21, (uint64_t *)&unk_4B1F70);
  if (v29(v28, 1, v11) == 1)
  {
    sub_250FC((uint64_t)v24, (uint64_t *)&unk_4B1F70);
    sub_250FC((uint64_t)v27, (uint64_t *)&unk_4B1F70);
    sub_3957DC((uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    goto LABEL_6;
  }
  sub_39B1B4(v28, (uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  char v33 = sub_3D3820();
  sub_3957DC((uint64_t)v14, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  sub_250FC((uint64_t)v24, (uint64_t *)&unk_4B1F70);
  sub_250FC((uint64_t)v27, (uint64_t *)&unk_4B1F70);
  sub_3957DC((uint64_t)v21, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  sub_250FC((uint64_t)v18, (uint64_t *)&unk_4B1F70);
  if ((v33 & 1) == 0) {
    return 0;
  }
LABEL_11:
  id v34 = (int *)type metadata accessor for Artwork.Configuration(0);
  uint64_t v35 = v34[5];
  uint64_t v36 = v67;
  double v38 = *(double *)(v67 + v35);
  double v37 = *(double *)(v67 + v35 + 8);
  int v39 = *(unsigned __int8 *)(v67 + v35 + 16);
  uint64_t v40 = v70;
  uint64_t v41 = v70 + v35;
  double v43 = *(double *)(v70 + v35);
  double v42 = *(double *)(v70 + v35 + 8);
  int v44 = *(unsigned __int8 *)(v41 + 16);
  if (!v39)
  {
    uint64_t v45 = v65;
    uint64_t v46 = (uint64_t)v66;
    uint64_t v47 = (uint64_t)v64;
    uint64_t v49 = v68;
    uint64_t v48 = v69;
    if (v44) {
      return 0;
    }
LABEL_16:
    uint64_t result = 0;
    if (v38 != v43 || v37 != v42) {
      return result;
    }
    goto LABEL_21;
  }
  uint64_t v45 = v65;
  uint64_t v46 = (uint64_t)v66;
  uint64_t v47 = (uint64_t)v64;
  uint64_t v49 = v68;
  uint64_t v48 = v69;
  if (v39 == 1)
  {
    if (v44 != 1) {
      return 0;
    }
    goto LABEL_16;
  }
  uint64_t result = 0;
  if (v44 == 2 && !(*(void *)&v42 | *(void *)&v43))
  {
LABEL_21:
    if ((sub_3D6890() & 1) == 0) {
      return 0;
    }
    sub_153B4(v36 + v34[7], v48, &qword_4B1340);
    sub_153B4(v40 + v34[7], v49, &qword_4B1340);
    uint64_t v50 = v46 + *(int *)(v62 + 48);
    sub_153B4(v48, v46, &qword_4B1340);
    uint64_t v66 = (char *)v50;
    sub_153B4(v49, v50, &qword_4B1340);
    uint64_t v51 = v49;
    int v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48);
    uint64_t v53 = v63;
    if (v52((char *)v46, 1, v63) == 1)
    {
      sub_250FC(v51, &qword_4B1340);
      sub_250FC(v69, &qword_4B1340);
      if (v52(v66, 1, v53) == 1)
      {
        sub_250FC(v46, &qword_4B1340);
LABEL_29:
        if (sub_3D5DC0())
        {
          uint64_t v58 = v34[9];
          uint64_t v59 = *(void *)(v40 + v58);
          if (*(void *)(v36 + v58))
          {
            if (v59)
            {
              swift_retain();
              swift_retain();
              char v60 = sub_3D6720();
              swift_release();
              swift_release();
              if (v60) {
                return 1;
              }
            }
          }
          else if (!v59)
          {
            return 1;
          }
        }
        return 0;
      }
    }
    else
    {
      sub_153B4(v46, v47, &qword_4B1340);
      uint64_t v54 = v66;
      if (v52(v66, 1, v53) != 1)
      {
        uint64_t v55 = v47;
        int v56 = v61;
        (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v61, v54, v53);
        sub_396624(&qword_4C0CC8, (void (*)(uint64_t))&type metadata accessor for CropCode);
        LODWORD(v66) = sub_3D7C80();
        int v57 = *(void (**)(char *, uint64_t))(v45 + 8);
        v57(v56, v53);
        sub_250FC(v68, &qword_4B1340);
        sub_250FC(v69, &qword_4B1340);
        v57((char *)v55, v53);
        sub_250FC(v46, &qword_4B1340);
        if ((v66 & 1) == 0) {
          return 0;
        }
        goto LABEL_29;
      }
      sub_250FC(v68, &qword_4B1340);
      sub_250FC(v69, &qword_4B1340);
      (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v47, v53);
    }
    uint64_t v30 = &qword_4C0CC0;
    uint64_t v31 = v46;
LABEL_7:
    sub_250FC(v31, v30);
    return 0;
  }
  return result;
}

uint64_t sub_39B1B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_39B224()
{
  unint64_t result = qword_4C0CD0;
  if (!qword_4C0CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C0CD0);
  }
  return result;
}

unint64_t sub_39B278()
{
  unint64_t result = qword_4C0CE8;
  if (!qword_4C0CE8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4C0CD8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C0CE8);
  }
  return result;
}

unint64_t sub_39B2EC()
{
  unint64_t result = qword_4C0CF0;
  if (!qword_4C0CF0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4C0CE0);
    sub_39B38C();
    sub_3D6E4(&qword_4B2668, &qword_4B2670);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C0CF0);
  }
  return result;
}

unint64_t sub_39B38C()
{
  unint64_t result = qword_4C0CF8;
  if (!qword_4C0CF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4C0D00);
    sub_39B42C();
    sub_3D6E4(&qword_4C0D10, &qword_4C0D18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C0CF8);
  }
  return result;
}

unint64_t sub_39B42C()
{
  unint64_t result = qword_4C0D08;
  if (!qword_4C0D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C0D08);
  }
  return result;
}

ValueMetadata *type metadata accessor for NothingModifier()
{
  return &type metadata for NothingModifier;
}

unint64_t sub_39B494()
{
  unint64_t result = qword_4C0D20;
  if (!qword_4C0D20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4C0D28);
    sub_39A828();
    sub_39A8E0(&qword_4C0CB8, &qword_4C0C80);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C0D20);
  }
  return result;
}

unint64_t sub_39B52C()
{
  unint64_t result = qword_4C0D30;
  if (!qword_4C0D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C0D30);
  }
  return result;
}

uint64_t sub_39B580()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_39B59C()
{
  unint64_t result = qword_4C0D40;
  if (!qword_4C0D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C0D40);
  }
  return result;
}

uint64_t sub_39B5F0()
{
  return sub_3D6E4(&qword_4C0D48, &qword_4C0D38);
}

unint64_t NavigationTab.stringValue.getter(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  unint64_t result = 0x73776F6873;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x736C656E6E616863;
      break;
    case 2:
      unint64_t result = 0x69726F6765746163;
      break;
    case 3:
      unint64_t result = 0x64616F6C6E776F64;
      break;
    case 4:
      unint64_t result = 0x7472616843706F74;
      break;
    case 5:
      unint64_t result = 0x6F546E7265646F6DLL;
      break;
    case 6:
      unint64_t result = 0x7972617262696CLL;
      break;
    case 7:
      unint64_t result = 0x6E657473696CLL;
      break;
    case 8:
      unint64_t result = 0x676F6C61746163;
      break;
    case 9:
      unint64_t result = 0x7265666E69;
      break;
    case 10:
      unint64_t result = 0x64657463656C6573;
      break;
    case 11:
      unint64_t result = 0x686372616573;
      break;
    case 12:
      unint64_t result = 0x676E6964616F6CLL;
      break;
    case 13:
      unint64_t result = 0x79616C50696E696DLL;
      break;
    case 14:
      unint64_t result = 0x6B72616D6B6F6F62;
      break;
    case 15:
      unint64_t result = 0x704574736574616CLL;
      break;
    case 16:
      unint64_t result = 0x796C746E65636572;
      break;
    case 17:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      unint64_t result = 0x6E6F6974617473;
      break;
  }
  return result;
}

uint64_t TabChangeAction.__allocating_init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, int a5, int a6, int a7, int a8, unsigned __int8 a9, uint64_t a10)
{
  swift_allocObject();
  uint64_t v17 = sub_39DAD0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  sub_4F8C8(a3);
  return v17;
}

uint64_t NavigationTab.station.getter(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 0x12) {
    return swift_retain();
  }
  else {
    return 0;
  }
}

uint64_t NavigationTab.intValue.getter(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  uint64_t result = 1;
  switch(v1)
  {
    case 0:
      uint64_t result = 7;
      break;
    case 1:
      uint64_t result = 8;
      break;
    case 2:
      uint64_t result = 9;
      break;
    case 3:
      uint64_t result = 10;
      break;
    case 4:
      uint64_t result = 11;
      break;
    case 5:
      uint64_t result = 12;
      break;
    case 6:
      uint64_t result = 5;
      break;
    case 7:
      uint64_t result = 4;
      break;
    case 8:
      uint64_t result = 6;
      break;
    case 9:
      uint64_t result = 2;
      break;
    case 10:
      return result;
    case 11:
      uint64_t result = 3;
      break;
    case 12:
      uint64_t result = sub_3D1D80();
      break;
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
      uint64_t result = a1;
      break;
    default:
      uint64_t result = 13;
      break;
  }
  return result;
}

unint64_t NavigationTab.description.getter(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  unint64_t result = 0x73776F6873;
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      unint64_t result = 0x736C656E6E616863;
      break;
    case 2:
      unint64_t result = 0x69726F6765746163;
      break;
    case 3:
      unint64_t result = 0x64616F6C6E776F64;
      break;
    case 4:
      unint64_t result = 0x7472616843706F74;
      break;
    case 5:
      unint64_t result = 0x6F546E7265646F6DLL;
      break;
    case 6:
      unint64_t result = 0x7972617262696CLL;
      break;
    case 7:
      unint64_t result = 0x6E657473696CLL;
      break;
    case 8:
      unint64_t result = 0x676F6C61746163;
      break;
    case 9:
      unint64_t result = 0x7265666E69;
      break;
    case 10:
      unint64_t result = 0x64657463656C6573;
      break;
    case 11:
      unint64_t result = 0x686372616573;
      break;
    case 12:
      unint64_t result = 0x676E6964616F6CLL;
      break;
    case 13:
      unint64_t result = 0x79616C50696E696DLL;
      break;
    case 14:
      unint64_t result = 0x6B72616D6B6F6F62;
      break;
    case 15:
      unint64_t result = 0x704574736574616CLL;
      break;
    case 16:
      unint64_t result = 0x796C746E65636572;
      break;
    case 17:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      unint64_t result = 0x6E6F6974617473;
      break;
  }
  return result;
}

uint64_t NavigationTab.init(intValue:)(uint64_t a1)
{
  if (qword_4A90A0 != -1) {
    swift_once();
  }
  uint64_t v2 = off_4C0D50;
  if (!*(void *)((char *)&dword_10 + (void)off_4C0D50)) {
    return 19;
  }
  unint64_t v3 = sub_32848(a1);
  if ((v4 & 1) == 0) {
    return 19;
  }
  uint64_t v5 = *(void *)(*(void *)&stru_20.segname[(void)v2 + 16] + 8 * v3);
  sub_165864(v5);
  return v5;
}

uint64_t NavigationTab.pageContext.getter(uint64_t a1)
{
  NavigationTab.description.getter(a1);
  sub_345F8();
  uint64_t v1 = sub_3D8980();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t NavigationTab.metricsPageContext.getter(uint64_t a1)
{
  uint64_t v1 = a1 - 1;
  uint64_t result = 0;
  switch(v1)
  {
    case 0:
      uint64_t result = sub_3D4590();
      break;
    case 1:
      uint64_t result = sub_3D45F0();
      break;
    case 2:
      uint64_t result = sub_3D4550();
      break;
    case 3:
      uint64_t result = sub_3D4560();
      break;
    case 4:
    case 5:
      uint64_t result = sub_3D4610();
      break;
    case 6:
      uint64_t result = sub_3D45D0();
      break;
    case 7:
      uint64_t result = sub_3D45B0();
      break;
    case 8:
      uint64_t result = sub_3D45A0();
      break;
    case 9:
    case 10:
    case 12:
    case 13:
    case 17:
      return result;
    case 11:
      uint64_t result = sub_3D45C0();
      break;
    case 14:
      uint64_t result = sub_3D4600();
      break;
    case 15:
      uint64_t result = sub_3D4570();
      break;
    case 16:
      uint64_t result = sub_3D4580();
      break;
    default:
      uint64_t result = sub_3D45E0();
      break;
  }
  return result;
}

_UNKNOWN **static NavigationTab.allCases.getter()
{
  return &off_474B60;
}

int *sub_39BEF4()
{
  uint64_t result = (int *)sub_39BF14();
  off_4C0D50 = result;
  return result;
}

void *sub_39BF14()
{
  uint64_t v0 = 19;
  uint64_t v11 = _swiftEmptyArrayStorage;
  sub_1FC370(0, 19, 0);
  uint64_t v1 = &qword_474B80;
  uint64_t v2 = _swiftEmptyArrayStorage;
  do
  {
    uint64_t v4 = *v1++;
    uint64_t v3 = v4;
    uint64_t v5 = 1;
    switch(v4)
    {
      case 1:
        uint64_t v5 = 7;
        break;
      case 2:
        uint64_t v5 = 8;
        break;
      case 3:
        uint64_t v5 = 9;
        break;
      case 4:
        uint64_t v5 = 10;
        break;
      case 5:
        uint64_t v5 = 11;
        break;
      case 6:
        uint64_t v5 = 12;
        break;
      case 7:
        uint64_t v5 = 5;
        break;
      case 8:
        uint64_t v5 = 4;
        break;
      case 9:
        uint64_t v5 = 6;
        break;
      case 10:
        uint64_t v5 = 2;
        break;
      case 11:
        break;
      case 12:
        uint64_t v5 = 3;
        break;
      case 13:
        uint64_t v5 = sub_3D1D80();
        break;
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
        uint64_t v5 = v3;
        break;
      default:
        uint64_t v5 = 13;
        break;
    }
    sub_165864(v3);
    uint64_t v11 = v2;
    unint64_t v7 = v2[2];
    unint64_t v6 = v2[3];
    if (v7 >= v6 >> 1)
    {
      sub_1FC370(v6 > 1, v7 + 1, 1);
      uint64_t v2 = v11;
    }
    v2[2] = v7 + 1;
    uint64_t v8 = &v2[2 * v7];
    v8[4] = v5;
    v8[5] = v3;
    --v0;
  }
  while (v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4BD648);
  uint64_t v11 = (void *)sub_3D8DE0();
  uint64_t v9 = (void *)swift_bridgeObjectRetain();
  sub_39CD6C(v9, 1, &v11);
  swift_bridgeObjectRelease();
  return v11;
}

BOOL NavigationTab.isStation.getter(uint64_t a1)
{
  return (unint64_t)(a1 - 19) < 0xFFFFFFFFFFFFFFEELL;
}

uint64_t NavigationTab.init(deserializing:)(uint64_t a1)
{
  uint64_t v2 = sub_3D6B20();
  if (v3) {
    uint64_t v4 = _s8ShelfKit13NavigationTabO11stringValueACSS_tcfC_0(v2, v3);
  }
  else {
    uint64_t v4 = 11;
  }
  uint64_t v5 = sub_3D6B50();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return v4;
}

void NavigationTab.hash(into:)(uint64_t a1, uint64_t a2)
{
  switch(a2)
  {
    case 1:
      Swift::UInt v2 = 0;
      goto LABEL_22;
    case 2:
      Swift::UInt v2 = 1;
      goto LABEL_22;
    case 3:
      Swift::UInt v2 = 2;
      goto LABEL_22;
    case 4:
      Swift::UInt v2 = 3;
      goto LABEL_22;
    case 5:
      Swift::UInt v2 = 4;
      goto LABEL_22;
    case 6:
      Swift::UInt v2 = 5;
      goto LABEL_22;
    case 7:
      Swift::UInt v2 = 7;
      goto LABEL_22;
    case 8:
      Swift::UInt v2 = 8;
      goto LABEL_22;
    case 9:
      Swift::UInt v2 = 9;
      goto LABEL_22;
    case 10:
      Swift::UInt v2 = 10;
      goto LABEL_22;
    case 11:
      Swift::UInt v2 = 11;
      goto LABEL_22;
    case 12:
      Swift::UInt v2 = 12;
      goto LABEL_22;
    case 13:
      Swift::UInt v2 = 13;
      goto LABEL_22;
    case 14:
      Swift::UInt v2 = 14;
      goto LABEL_22;
    case 15:
      Swift::UInt v2 = 15;
      goto LABEL_22;
    case 16:
      Swift::UInt v2 = 16;
      goto LABEL_22;
    case 17:
      Swift::UInt v2 = 17;
      goto LABEL_22;
    case 18:
      Swift::UInt v2 = 18;
LABEL_22:
      sub_3D9140(v2);
      break;
    default:
      sub_3D9140(6uLL);
      if (a2)
      {
        sub_3D9150(1u);
        sub_165864(a2);
        swift_bridgeObjectRetain();
        sub_3D7E60();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        sub_3D7E60();
        swift_bridgeObjectRelease();
        sub_3D9140(*(void *)(a2 + OBJC_IVAR____TtC8ShelfKit13StationDetail_episodeCount));
        sub_3D9170(*(void *)(a2 + OBJC_IVAR____TtC8ShelfKit13StationDetail_unplayedCount));
        uint64_t v4 = a2;
      }
      else
      {
        sub_3D9150(0);
        uint64_t v4 = 0;
      }
      sub_4F8C8(v4);
      break;
  }
}

Swift::Int NavigationTab.hashValue.getter(uint64_t a1)
{
  sub_3D9130();
  NavigationTab.hash(into:)((uint64_t)v3, a1);
  return sub_3D9180();
}

Swift::Int sub_39C414()
{
  uint64_t v1 = *v0;
  sub_3D9130();
  NavigationTab.hash(into:)((uint64_t)v3, v1);
  return sub_3D9180();
}

void sub_39C45C(uint64_t a1)
{
  NavigationTab.hash(into:)(a1, *v1);
}

Swift::Int sub_39C464()
{
  uint64_t v1 = *v0;
  sub_3D9130();
  NavigationTab.hash(into:)((uint64_t)v3, v1);
  return sub_3D9180();
}

uint64_t sub_39C4A8(void **a1, int **a2)
{
  return _s8ShelfKit13NavigationTabO2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

void sub_39C4B4(void *a1@<X8>)
{
  *a1 = &off_474B60;
}

unint64_t sub_39C4C4()
{
  return NavigationTab.description.getter(*v0);
}

uint64_t TabChangeAction.navigationTab.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_navigationTab);
  sub_165864(v1);
  return v1;
}

uint64_t TabChangeAction.actions.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t TabChangeAction.popToRoot.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_popToRoot);
}

uint64_t TabChangeAction.userInitiated.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_userInitiated);
}

uint64_t TabChangeAction.suppressMetrics.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_suppressMetrics);
}

uint64_t TabChangeAction.preserveTransientView.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_preserveTransientView);
}

uint64_t TabChangeAction.init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, int a5, int a6, int a7, int a8, unsigned __int8 a9, uint64_t a10)
{
  uint64_t v11 = sub_39DAD0(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
  sub_4F8C8(a3);
  return v11;
}

uint64_t TabChangeAction.__allocating_init(deserializing:using:)(char *a1, uint64_t a2)
{
  return TabChangeAction.init(deserializing:using:)(a1, a2);
}

uint64_t TabChangeAction.init(deserializing:using:)(char *a1, uint64_t a2)
{
  uint64_t v59 = a2;
  uint64_t v3 = v2;
  uint64_t v51 = sub_3D6CE0();
  uint64_t v58 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  int v57 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AE650);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_3D6B50();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int v56 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v53 = (char *)&v49 - v13;
  __chkstk_darwin(v14);
  uint64_t v50 = (char *)&v49 - v15;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v49 - v17;
  uint64_t v19 = sub_3D7B30();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v61 = a1;
  sub_3D6B60();
  sub_3D6AC0();
  uint64_t v55 = v10;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v24 = v18;
  uint64_t v25 = v9;
  v23(v24, v9);
  int v26 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48))(v8, 1, v19);
  uint64_t v54 = v23;
  uint64_t v52 = v10 + 8;
  if (v26 == 1)
  {
    sub_250FC((uint64_t)v8, &qword_4AE650);
    id v27 = _swiftEmptyArrayStorage;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v8, v19);
    uint64_t v28 = type metadata accessor for Action();
    __chkstk_darwin(v28);
    uint64_t v29 = v59;
    uint64_t v30 = v60;
    *(&v49 - 2) = v31;
    *(&v49 - 1) = v29;
    unint64_t v32 = sub_3D7AF0();
    uint64_t v60 = v30;
    id v27 = (void *)sub_1B53E4(v32);
    uint64_t v25 = v9;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  char v33 = v61;
  id v34 = v50;
  uint64_t v35 = v51;
  *(void *)(v3 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_actions) = v27;
  sub_3D6B60();
  uint64_t v36 = sub_3D6B20();
  if (v37) {
    uint64_t v38 = _s8ShelfKit13NavigationTabO11stringValueACSS_tcfC_0(v36, v37);
  }
  else {
    uint64_t v38 = 11;
  }
  int v39 = v54;
  v54(v34, v25);
  *(void *)(v3 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_navigationTab) = v38;
  uint64_t v40 = v53;
  sub_3D6B60();
  uint64_t v41 = v25;
  char v42 = sub_3D6A90();
  v39(v40, v41);
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_popToRoot) = v42 & 1;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_preserveTransientView) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_userInitiated) = 0;
  *(unsigned char *)(v3 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_suppressMetrics) = 0;
  swift_release();
  double v43 = v56;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v56, v33, v41);
  uint64_t v44 = (uint64_t)v57;
  uint64_t v45 = v58;
  uint64_t v46 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v59, v35);
  uint64_t v47 = Action.init(deserializing:using:)(v43, v44);
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v46, v35);
  v39(v61, v41);
  return v47;
}

void TabChangeAction.init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)()
{
}

uint64_t sub_39CB88()
{
  sub_4F8C8(*(void *)(v0 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_navigationTab));

  return swift_bridgeObjectRelease();
}

uint64_t TabChangeAction.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  uint64_t v2 = sub_3D6F40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_250FC(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_4B9870);
  sub_4F8C8(*(void *)(v0 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_navigationTab));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TabChangeAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  uint64_t v2 = sub_3D6F40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_250FC(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_4B9870);
  sub_4F8C8(*(void *)(v0 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_navigationTab));
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_39CD6C(void *a1, char a2, void *a3)
{
  uint64_t v3 = a1[2];
  if (!v3) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v7 = a1[4];
  uint64_t v6 = a1[5];
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)*a3;
  unint64_t v9 = sub_32848(v7);
  uint64_t v11 = v8[2];
  BOOL v12 = (v10 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12)) {
    goto LABEL_24;
  }
  unint64_t v14 = v9;
  char v15 = v10;
  uint64_t v16 = v8[3];
  sub_165864(v6);
  if (v16 >= v13)
  {
    if (a2)
    {
      if (v15) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_2FC918();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    uint64_t v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v14 >> 6) + 64) |= 1 << v14;
    uint64_t v21 = 8 * v14;
    *(void *)(v20[6] + v21) = v7;
    *(void *)(v20[7] + v21) = v6;
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    void v20[2] = v24;
    uint64_t v25 = v3 - 1;
    if (v3 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      uint64_t v27 = *(i - 1);
      uint64_t v6 = *i;
      uint64_t v28 = (void *)*a3;
      unint64_t v29 = sub_32848(v27);
      uint64_t v31 = v28[2];
      BOOL v32 = (v30 & 1) == 0;
      uint64_t v33 = v31 + v32;
      if (__OFADD__(v31, v32)) {
        break;
      }
      unint64_t v34 = v29;
      char v35 = v30;
      uint64_t v36 = v28[3];
      sub_165864(v6);
      if (v36 < v33)
      {
        sub_2F97A8(v33, 1);
        unint64_t v37 = sub_32848(v27);
        if ((v35 & 1) != (v38 & 1)) {
          goto LABEL_26;
        }
        unint64_t v34 = v37;
      }
      if (v35) {
        goto LABEL_10;
      }
      int v39 = (void *)*a3;
      *(void *)(*a3 + 8 * (v34 >> 6) + 64) |= 1 << v34;
      uint64_t v40 = 8 * v34;
      *(void *)(v39[6] + v40) = v27;
      *(void *)(v39[7] + v40) = v6;
      uint64_t v41 = v39[2];
      BOOL v23 = __OFADD__(v41, 1);
      uint64_t v42 = v41 + 1;
      if (v23) {
        goto LABEL_25;
      }
      v39[2] = v42;
      if (!--v25) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_2F97A8(v13, a2 & 1);
  unint64_t v17 = sub_32848(v7);
  if ((v15 & 1) == (v18 & 1))
  {
    unint64_t v14 = v17;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_4ABD78);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_4F8C8(v6);
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_3D9070();
  __break(1u);
LABEL_27:
  sub_3D8BC0(30);
  v44._object = (void *)0x800000000040B180;
  v44._countAndFlagsBits = 0xD00000000000001BLL;
  sub_3D7E90(v44);
  sub_3D8D40();
  v45._countAndFlagsBits = 39;
  v45._object = (void *)0xE100000000000000;
  sub_3D7E90(v45);
  uint64_t result = sub_3D8D60();
  __break(1u);
  return result;
}

uint64_t _s8ShelfKit13NavigationTabO2eeoiySbAC_ACtFZ_0(void *a1, int *a2)
{
  switch((unint64_t)a1)
  {
    case 1uLL:
      return a2 == (int *)((char *)&dword_0 + 1);
    case 2uLL:
      return a2 == (int *)((char *)&dword_0 + 2);
    case 3uLL:
      return a2 == (int *)((char *)&dword_0 + 3);
    case 4uLL:
      return a2 == &dword_4;
    case 5uLL:
      return a2 == (int *)((char *)&dword_4 + 1);
    case 6uLL:
      return a2 == (int *)((char *)&dword_4 + 2);
    case 7uLL:
      return a2 == (int *)((char *)&dword_4 + 3);
    case 8uLL:
      return a2 == &dword_8;
    case 9uLL:
      return a2 == (int *)((char *)&dword_8 + 1);
    case 0xAuLL:
      return a2 == (int *)((char *)&dword_8 + 2);
    case 0xBuLL:
      return a2 == (int *)((char *)&dword_8 + 3);
    case 0xCuLL:
      return a2 == &dword_C;
    case 0xDuLL:
      return a2 == (int *)((char *)&dword_C + 1);
    case 0xEuLL:
      return a2 == (int *)((char *)&dword_C + 2);
    case 0xFuLL:
      return a2 == (int *)((char *)&dword_C + 3);
    case 0x10uLL:
      return a2 == &dword_10;
    case 0x11uLL:
      return a2 == (int *)((char *)&dword_10 + 1);
    case 0x12uLL:
      return a2 == (int *)((char *)&dword_10 + 2);
    default:
      if ((unint64_t)a2 - 1 < 0x12) {
        return 0;
      }
      if (a1)
      {
        if (a2)
        {
          return _s8ShelfKit13StationDetailC2eeoiySbAC_ACtFZ_0(a1, a2);
        }
        else
        {
          return 0;
        }
      }
      else if (a2)
      {
        sub_4F8C8(0);
        return 0;
      }
      else
      {
        return 1;
      }
  }
}

uint64_t _s8ShelfKit13NavigationTabO11stringValueACSS_tcfC_0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73776F6873 && a2 == 0xE500000000000000;
  if (v2 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x736C656E6E616863 && a2 == 0xE800000000000000 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x69726F6765746163 && a2 == 0xEA00000000007365 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEA00000000006465 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7472616843706F74 && a2 == 0xE900000000000073 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6F546E7265646F6DLL && a2 == 0xEF73747261684370 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F6974617473 && a2 == 0xE700000000000000 {
         || (sub_3D8FE0() & 1) != 0
  }
         || a1 == 0xD000000000000020 && a2 == 0x8000000000404A20
         || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7972617262696CLL && a2 == 0xE700000000000000 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6E657473696CLL && a2 == 0xE600000000000000 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x676F6C61746163 && a2 == 0xE700000000000000 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x7265666E69 && a2 == 0xE500000000000000 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x64657463656C6573 && a2 == 0xE800000000000000 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x686372616573 && a2 == 0xE600000000000000 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x676E6964616F6CLL && a2 == 0xE700000000000000 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x79616C50696E696DLL && a2 == 0xEA00000000007265 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x6B72616D6B6F6F62 && a2 == 0xE900000000000073 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x704574736574616CLL && a2 == 0xEE007365646F7369 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x796C746E65636572 && a2 == 0xEF64657461647055 || (sub_3D8FE0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000000403B60)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else
  {
    char v6 = sub_3D8FE0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 18;
    }
    else {
      return 11;
    }
  }
}

uint64_t sub_39DAD0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, int a5, int a6, int a7, int a8, unsigned __int8 a9, uint64_t a10)
{
  uint64_t v11 = v10;
  int v33 = a7;
  int v34 = a8;
  int v31 = a5;
  int v32 = a6;
  uint64_t v36 = a1;
  uint64_t v37 = a2;
  int v38 = a9;
  uint64_t v35 = sub_3D2460();
  uint64_t v14 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_3D6F40();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  BOOL v23 = (char *)&v31 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v11 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_navigationTab) = a3;
  uint64_t v24 = _swiftEmptyArrayStorage;
  if (a4) {
    uint64_t v24 = a4;
  }
  *(void *)(v11 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_actions) = v24;
  *(unsigned char *)(v11 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_popToRoot) = v31;
  *(unsigned char *)(v11 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_preserveTransientView) = v32;
  *(unsigned char *)(v11 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_userInitiated) = v33;
  *(unsigned char *)(v11 + OBJC_IVAR____TtC8ShelfKit15TabChangeAction_suppressMetrics) = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, a10, v20);
  uint64_t v25 = sub_3D7340();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v19, 1, 1, v25);
  sub_165864(a3);
  sub_3D2450();
  uint64_t v26 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  uint64_t v28 = v27;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v35);
  *(void *)(v11 + 16) = v26;
  *(void *)(v11 + 24) = v28;
  uint64_t v29 = v37;
  *(void *)(v11 + 32) = v36;
  *(void *)(v11 + 40) = v29;
  *(unsigned char *)(v11 + 48) = v38;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))(v11 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v23, v20);
  sub_2A728((uint64_t)v19, v11 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(a10, v20);
  return v11;
}

unint64_t sub_39DDEC()
{
  unint64_t result = qword_4C0D58;
  if (!qword_4C0D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C0D58);
  }
  return result;
}

unint64_t sub_39DE44()
{
  unint64_t result = qword_4C0D60;
  if (!qword_4C0D60)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4C0D68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C0D60);
  }
  return result;
}

uint64_t dispatch thunk of NavigationTabIdentifiable.navigationTabIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NavigationTabIdentifiable.navigationTabIdentifier.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of NavigationTabIdentifiable.navigationTabIdentifier.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

unint64_t destroy for NavigationTab(unint64_t *a1)
{
  unint64_t result = *a1;
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if ((v2 + 1) <= 1) {
    return swift_release();
  }
  return result;
}

uint64_t *_s8ShelfKit13NavigationTabOwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  if ((v4 + 1) <= 1) {
    uint64_t v3 = swift_retain();
  }
  *a1 = v3;
  return a1;
}

uint64_t *assignWithCopy for NavigationTab(uint64_t *a1, uint64_t *a2)
{
  LODWORD(v3) = -1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v4) = -1;
  }
  else {
    uint64_t v4 = *a1;
  }
  unsigned int v5 = v4 + 1;
  uint64_t v6 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v3 = *a2;
  }
  unsigned int v7 = v3 + 1;
  if (v5 > 1)
  {
    *a1 = v6;
    if (v7 <= 1) {
      swift_retain();
    }
  }
  else if (v7 > 1)
  {
    swift_release();
    *a1 = *a2;
  }
  else
  {
    *a1 = v6;
    swift_retain();
    swift_release();
  }
  return a1;
}

unint64_t *assignWithTake for NavigationTab(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  LODWORD(v4) = -1;
  if (v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = v3;
  }
  unsigned int v6 = v5 + 1;
  unint64_t v7 = *a2;
  if (*a2 < 0xFFFFFFFF) {
    unint64_t v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1) {
    goto LABEL_11;
  }
  if (v8 > 1)
  {
    swift_release();
LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for NavigationTab(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFEC && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483629);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 0x13) {
    return (v3 - 18);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NavigationTab(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFED)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483629;
    if (a3 >= 0x7FFFFFED) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFED) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 18;
    }
  }
  return result;
}

uint64_t sub_39E114(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_39E134(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *unint64_t result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for NavigationTab()
{
  return &type metadata for NavigationTab;
}

uint64_t sub_39E174()
{
  return type metadata accessor for TabChangeAction();
}

uint64_t type metadata accessor for TabChangeAction()
{
  uint64_t result = qword_4C0D98;
  if (!qword_4C0D98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_39E1C8()
{
  return swift_updateClassMetadata2();
}

uint64_t method lookup function for TabChangeAction(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for TabChangeAction);
}

uint64_t dispatch thunk of TabChangeAction.__allocating_init(title:navigationTab:actions:popToRoot:preserveTransientView:userInitiated:suppressMetrics:presentationStyle:actionMetrics:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t static ErrorModel.offline(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v72 = a3;
  uint64_t v5 = sub_3D2460();
  uint64_t v70 = *(void *)(v5 - 8);
  uint64_t v71 = v5;
  __chkstk_darwin(v5);
  uint64_t v69 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ActionButton();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v67 = (int *)v7;
  uint64_t v68 = v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (unint64_t *)((char *)&v59 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v59 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = v13;
  uint64_t v14 = sub_3D6F40();
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = v19;
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_4ACB00);
  __chkstk_darwin(v20 - 8);
  uint64_t v66 = (uint64_t)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = self;
  BOOL v23 = (objc_class *)[v22 mainBundle];
  v57._countAndFlagsBits = 0xE000000000000000;
  v76._object = (void *)0x800000000040B1A0;
  v76._countAndFlagsBits = 0xD00000000000001ALL;
  v78.value._countAndFlagsBits = 0;
  v78.value._object = 0;
  v24.super.Class isa = v23;
  v80._countAndFlagsBits = 0;
  v80._object = (void *)0xE000000000000000;
  uint64_t v25 = sub_3D2060(v76, v78, v24, v80, v57);
  uint64_t v64 = v26;
  uint64_t v65 = v25;

  uint64_t v27 = (objc_class *)[v22 mainBundle];
  v58._countAndFlagsBits = 0xE000000000000000;
  v77._countAndFlagsBits = 0x45525F524F525245;
  v77._object = (void *)0xEB00000000595254;
  v79.value._countAndFlagsBits = 0;
  v79.value._object = 0;
  v28.super.Class isa = v27;
  v81._countAndFlagsBits = 0;
  v81._object = (void *)0xE000000000000000;
  uint64_t v29 = sub_3D2060(v77, v79, v28, v81, v58);
  unint64_t v62 = v30;
  uint64_t v63 = v29;

  uint64_t v31 = sub_3D3860();
  uint64_t v60 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56);
  v60(v19, 1, 1, v31);
  swift_retain();
  sub_3D6F00();
  uint64_t v32 = type metadata accessor for ClosureAction();
  swift_allocObject();
  uint64_t v33 = sub_2D152C(0, 0, 32, (uint64_t)v16, a1, a2);
  swift_release();
  uint64_t v74 = v32;
  uint64_t v75 = sub_39EAE8((unint64_t *)&qword_4AB9B8, (void (*)(uint64_t))type metadata accessor for ClosureAction);
  *(void *)&long long v73 = v33;
  uint64_t v34 = sub_3D7340();
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56);
  v35(v13, 1, 1, v34);
  unint64_t v36 = _s8ShelfKit12ActionButtonV2IDVAEycfC_0();
  unint64_t v38 = v37;
  int v39 = v67;
  uint64_t v40 = (uint64_t)v10 + v67[6];
  v60((char *)v40, 1, 1, v31);
  uint64_t v41 = v39[7];
  *((unsigned char *)v10 + v41) = 2;
  uint64_t v42 = (uint64_t)v10 + v39[9];
  v35((char *)v42, 1, 1, v34);
  unint64_t *v10 = v36;
  v10[1] = v38;
  uint64_t v43 = (uint64_t)v61;
  unint64_t v44 = v62;
  v10[2] = v63;
  v10[3] = v44;
  sub_4B03C(v43, v40, (uint64_t *)&unk_4B1F70);
  *((unsigned char *)v10 + v41) = 2;
  sub_18F70(&v73, (uint64_t)v10 + v39[8]);
  uint64_t v45 = (uint64_t)v59;
  sub_4B03C((uint64_t)v59, v42, (uint64_t *)&unk_4B9870);
  uint64_t v46 = (uint64_t)v10;
  uint64_t v47 = v66;
  sub_1D770C(v46, v66);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v68 + 56))(v47, 0, 1, v39);
  v35((char *)v45, 1, 1, v34);
  uint64_t v48 = v69;
  sub_3D2450();
  uint64_t v49 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  uint64_t v51 = v50;
  (*(void (**)(char *, uint64_t))(v70 + 8))(v48, v71);
  uint64_t v52 = v72;
  uint64_t *v72 = v49;
  v52[1] = v51;
  uint64_t v53 = v64;
  v52[2] = v65;
  v52[3] = v53;
  uint64_t v54 = v52;
  uint64_t v55 = type metadata accessor for ErrorModel();
  sub_18F88(v47, (uint64_t)v54 + *(int *)(v55 + 28), &qword_4ACB00);
  return sub_18F88(v45, (uint64_t)v54 + *(int *)(v55 + 24), (uint64_t *)&unk_4B9870);
}

uint64_t ErrorModel.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ErrorModel();
  return sub_153B4(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_4B9870);
}

uint64_t ErrorModel.button.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for ErrorModel();
  return sub_153B4(v1 + *(int *)(v3 + 28), a1, &qword_4ACB00);
}

uint64_t ErrorModel.init(id:message:button:impressionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v14 = sub_3D2460();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a2)
  {
    sub_3D2450();
    a1 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
    a2 = v18;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  }
  *a7 = a1;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  uint64_t v19 = type metadata accessor for ErrorModel();
  sub_18F88(a5, (uint64_t)a7 + *(int *)(v19 + 28), &qword_4ACB00);
  return sub_18F88(a6, (uint64_t)a7 + *(int *)(v19 + 24), (uint64_t *)&unk_4B9870);
}

uint64_t sub_39EA18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_153B4(v2 + *(int *)(a1 + 24), a2, (uint64_t *)&unk_4B9870);
}

uint64_t type metadata accessor for ErrorModel()
{
  uint64_t result = qword_4C0EF8;
  if (!qword_4C0EF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_39EA90(uint64_t a1)
{
  uint64_t result = sub_39EAE8(&qword_4C0E98, (void (*)(uint64_t))type metadata accessor for ErrorModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_39EAE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_39EB30()
{
  return sub_39EAE8(&qword_4C0E98, (void (*)(uint64_t))type metadata accessor for ErrorModel);
}

uint64_t *initializeBufferWithCopyOfBuffer for ErrorModel(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *a1 = *a2;
    uint64_t v17 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = *(int *)(a3 + 24);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_3D7340();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    Swift::String_optional v78 = v14;
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
      memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v17 = a1;
    uint64_t v18 = *(int *)(a3 + 28);
    uint64_t v19 = (uint64_t *)((char *)a1 + v18);
    uint64_t v20 = (uint64_t *)((char *)a2 + v18);
    uint64_t v21 = (int *)type metadata accessor for ActionButton();
    uint64_t v22 = *((void *)v21 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v22 + 48))(v20, 1, v21))
    {
      uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_4ACB00);
      memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      uint64_t v76 = v22;
      uint64_t v77 = v13;
      uint64_t v74 = v12;
      uint64_t v24 = v20[1];
      *uint64_t v19 = *v20;
      v19[1] = v24;
      uint64_t v25 = v20[3];
      v19[2] = v20[2];
      v19[3] = v25;
      uint64_t v26 = v21[6];
      uint64_t v75 = v19;
      uint64_t v27 = (void *)((char *)v19 + v26);
      NSBundle v28 = (void *)((char *)v20 + v26);
      uint64_t v29 = sub_3D3860();
      uint64_t v30 = *(void *)(v29 - 8);
      uint64_t v31 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v30 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v31(v28, 1, v29))
      {
        uint64_t v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
        memcpy(v27, v28, *(void *)(*(void *)(v32 - 8) + 64));
        uint64_t v33 = v74;
        uint64_t v17 = a1;
      }
      else
      {
        uint64_t v34 = v28[1];
        *uint64_t v27 = *v28;
        v27[1] = v34;
        int v35 = *((unsigned __int8 *)v28 + 32);
        swift_bridgeObjectRetain();
        if (v35 == 255)
        {
          *((_OWORD *)v27 + 1) = *((_OWORD *)v28 + 1);
          *((unsigned char *)v27 + 32) = *((unsigned char *)v28 + 32);
        }
        else
        {
          uint64_t v37 = v28[2];
          uint64_t v36 = v28[3];
          sub_4C484(v37, v36, v35);
          v27[2] = v37;
          void v27[3] = v36;
          *((unsigned char *)v27 + 32) = v35;
        }
        unint64_t v38 = (int *)v29;
        uint64_t v17 = a1;
        *(_OWORD *)(v27 + 5) = *(_OWORD *)(v28 + 5);
        int v39 = (id *)(v28 + 7);
        int v40 = *((unsigned __int8 *)v28 + 64);
        if (v40 == 255)
        {
          v27[7] = *v39;
          *((unsigned char *)v27 + 64) = *((unsigned char *)v28 + 64);
        }
        else
        {
          id v41 = *v39;
          sub_4C49C(*v39, *((unsigned char *)v28 + 64));
          v27[7] = v41;
          *((unsigned char *)v27 + 64) = v40;
        }
        uint64_t v42 = (id *)(v28 + 9);
        int v43 = *((unsigned __int8 *)v28 + 80);
        if (v43 == 255)
        {
          v27[9] = *v42;
          *((unsigned char *)v27 + 80) = *((unsigned char *)v28 + 80);
        }
        else
        {
          id v44 = *v42;
          sub_4C49C(*v42, *((unsigned char *)v28 + 80));
          v27[9] = v44;
          *((unsigned char *)v27 + 80) = v43;
        }
        uint64_t v45 = (id *)(v28 + 11);
        int v46 = *((unsigned __int8 *)v28 + 96);
        if (v46 == 255)
        {
          v27[11] = *v45;
          *((unsigned char *)v27 + 96) = *((unsigned char *)v28 + 96);
        }
        else
        {
          id v47 = *v45;
          sub_4C49C(*v45, *((unsigned char *)v28 + 96));
          v27[11] = v47;
          *((unsigned char *)v27 + 96) = v46;
        }
        uint64_t v48 = (id *)(v28 + 13);
        int v49 = *((unsigned __int8 *)v28 + 112);
        if (v49 == 255)
        {
          v27[13] = *v48;
          *((unsigned char *)v27 + 112) = *((unsigned char *)v28 + 112);
        }
        else
        {
          id v50 = *v48;
          sub_4C49C(*v48, *((unsigned char *)v28 + 112));
          v27[13] = v50;
          *((unsigned char *)v27 + 112) = v49;
        }
        uint64_t v51 = (id *)(v28 + 15);
        int v52 = *((unsigned __int8 *)v28 + 128);
        if (v52 == 255)
        {
          v27[15] = *v51;
          *((unsigned char *)v27 + 128) = *((unsigned char *)v28 + 128);
        }
        else
        {
          id v53 = *v51;
          sub_4C49C(*v51, *((unsigned char *)v28 + 128));
          v27[15] = v53;
          *((unsigned char *)v27 + 128) = v52;
        }
        *((unsigned char *)v27 + 129) = *((unsigned char *)v28 + 129);
        uint64_t v54 = v38[11];
        uint64_t v55 = (char *)v27 + v54;
        int v56 = (char *)v28 + v54;
        uint64_t v57 = sub_3D3750();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v55, v56, v57);
        uint64_t v58 = v38[12];
        uint64_t v59 = (void *)((char *)v27 + v58);
        uint64_t v60 = (void *)((char *)v28 + v58);
        uint64_t v61 = v60[1];
        *uint64_t v59 = *v60;
        v59[1] = v61;
        *((unsigned char *)v27 + v38[13]) = *((unsigned char *)v28 + v38[13]);
        *((unsigned char *)v27 + v38[14]) = *((unsigned char *)v28 + v38[14]);
        *((unsigned char *)v27 + v38[15]) = *((unsigned char *)v28 + v38[15]);
        uint64_t v62 = v38[16];
        uint64_t v63 = (void *)((char *)v27 + v62);
        uint64_t v64 = (void *)((char *)v28 + v62);
        uint64_t v65 = v64[1];
        void *v63 = *v64;
        v63[1] = v65;
        uint64_t v66 = *(void (**)(void *, void, uint64_t, int *))(v30 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v66(v27, 0, 1, v38);
        uint64_t v33 = v74;
      }
      *((unsigned char *)v75 + v21[7]) = *((unsigned char *)v20 + v21[7]);
      uint64_t v67 = v21[8];
      long long v68 = *(_OWORD *)((char *)v20 + v67 + 24);
      *(_OWORD *)((char *)v75 + v67 + 24) = v68;
      (**(void (***)(void))(v68 - 8))();
      uint64_t v69 = v21[9];
      uint64_t v70 = (char *)v75 + v69;
      uint64_t v71 = (char *)v20 + v69;
      if (v78(v71, 1, v33))
      {
        uint64_t v72 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
        memcpy(v70, v71, *(void *)(*(void *)(v72 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v70, v71, v33);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v70, 0, 1, v33);
      }
      (*(void (**)(void *, void, uint64_t, int *))(v76 + 56))(v75, 0, 1, v21);
    }
  }
  return v17;
}

uint64_t destroy for ErrorModel(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  uint64_t v5 = sub_3D7340();
  uint64_t v22 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 28);
  uint64_t v8 = (int *)type metadata accessor for ActionButton();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v8 - 1) + 48))(v7, 1, v8);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v10 = v7 + v8[6];
    uint64_t v11 = sub_3D3860();
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48))(v10, 1, v11))
    {
      swift_bridgeObjectRelease();
      int v12 = *(unsigned __int8 *)(v10 + 32);
      if (v12 != 255) {
        sub_49E54(*(void *)(v10 + 16), *(void *)(v10 + 24), v12);
      }
      int v13 = *(unsigned __int8 *)(v10 + 64);
      if (v13 != 255) {
        sub_4C6F0(*(id *)(v10 + 56), v13);
      }
      int v14 = *(unsigned __int8 *)(v10 + 80);
      if (v14 != 255) {
        sub_4C6F0(*(id *)(v10 + 72), v14);
      }
      int v15 = *(unsigned __int8 *)(v10 + 96);
      if (v15 != 255) {
        sub_4C6F0(*(id *)(v10 + 88), v15);
      }
      int v16 = *(unsigned __int8 *)(v10 + 112);
      if (v16 != 255) {
        sub_4C6F0(*(id *)(v10 + 104), v16);
      }
      int v17 = *(unsigned __int8 *)(v10 + 128);
      if (v17 != 255) {
        sub_4C6F0(*(id *)(v10 + 120), v17);
      }
      uint64_t v18 = v10 + *(int *)(v11 + 44);
      uint64_t v19 = sub_3D3750();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(v18, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    __swift_destroy_boxed_opaque_existential_1(v7 + v8[8]);
    uint64_t v20 = v7 + v8[9];
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v20, 1, v5);
    if (!result)
    {
      uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8);
      return v21(v20, v5);
    }
  }
  return result;
}

void *initializeWithCopy for ErrorModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_3D7340();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v75 = v12;
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  int v14 = a1;
  uint64_t v15 = *(int *)(a3 + 28);
  int v16 = (void *)((char *)a1 + v15);
  int v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for ActionButton();
  uint64_t v19 = *((void *)v18 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v19 + 48))(v17, 1, v18))
  {
    uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_4ACB00);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
  }
  else
  {
    uint64_t v72 = v19;
    uint64_t v73 = v11;
    uint64_t v74 = v10;
    uint64_t v21 = v17[1];
    *int v16 = *v17;
    v16[1] = v21;
    uint64_t v22 = v17[3];
    void v16[2] = v17[2];
    v16[3] = v22;
    uint64_t v23 = v18[6];
    uint64_t v71 = v16;
    uint64_t v24 = (void *)((char *)v16 + v23);
    uint64_t v25 = (void *)((char *)v17 + v23);
    uint64_t v26 = sub_3D3860();
    uint64_t v27 = *(void *)(v26 - 8);
    NSBundle v28 = *(unsigned int (**)(void *, uint64_t, uint64_t))(v27 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v28(v25, 1, v26))
    {
      uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
      memcpy(v24, v25, *(void *)(*(void *)(v29 - 8) + 64));
      uint64_t v30 = v74;
      int v14 = a1;
    }
    else
    {
      uint64_t v31 = (int *)v26;
      uint64_t v32 = v25[1];
      *uint64_t v24 = *v25;
      v24[1] = v32;
      int v33 = *((unsigned __int8 *)v25 + 32);
      swift_bridgeObjectRetain();
      if (v33 == 255)
      {
        *((_OWORD *)v24 + 1) = *((_OWORD *)v25 + 1);
        *((unsigned char *)v24 + 32) = *((unsigned char *)v25 + 32);
      }
      else
      {
        uint64_t v35 = v25[2];
        uint64_t v34 = v25[3];
        sub_4C484(v35, v34, v33);
        v24[2] = v35;
        v24[3] = v34;
        *((unsigned char *)v24 + 32) = v33;
      }
      int v14 = a1;
      *(_OWORD *)(v24 + 5) = *(_OWORD *)(v25 + 5);
      uint64_t v36 = (id *)(v25 + 7);
      int v37 = *((unsigned __int8 *)v25 + 64);
      if (v37 == 255)
      {
        v24[7] = *v36;
        *((unsigned char *)v24 + 64) = *((unsigned char *)v25 + 64);
      }
      else
      {
        id v38 = *v36;
        sub_4C49C(*v36, *((unsigned char *)v25 + 64));
        v24[7] = v38;
        *((unsigned char *)v24 + 64) = v37;
      }
      int v39 = (id *)(v25 + 9);
      int v40 = *((unsigned __int8 *)v25 + 80);
      if (v40 == 255)
      {
        v24[9] = *v39;
        *((unsigned char *)v24 + 80) = *((unsigned char *)v25 + 80);
      }
      else
      {
        id v41 = *v39;
        sub_4C49C(*v39, *((unsigned char *)v25 + 80));
        v24[9] = v41;
        *((unsigned char *)v24 + 80) = v40;
      }
      uint64_t v42 = (id *)(v25 + 11);
      int v43 = *((unsigned __int8 *)v25 + 96);
      if (v43 == 255)
      {
        v24[11] = *v42;
        *((unsigned char *)v24 + 96) = *((unsigned char *)v25 + 96);
      }
      else
      {
        id v44 = *v42;
        sub_4C49C(*v42, *((unsigned char *)v25 + 96));
        v24[11] = v44;
        *((unsigned char *)v24 + 96) = v43;
      }
      uint64_t v45 = (id *)(v25 + 13);
      int v46 = *((unsigned __int8 *)v25 + 112);
      if (v46 == 255)
      {
        v24[13] = *v45;
        *((unsigned char *)v24 + 112) = *((unsigned char *)v25 + 112);
      }
      else
      {
        id v47 = *v45;
        sub_4C49C(*v45, *((unsigned char *)v25 + 112));
        v24[13] = v47;
        *((unsigned char *)v24 + 112) = v46;
      }
      uint64_t v48 = (id *)(v25 + 15);
      int v49 = *((unsigned __int8 *)v25 + 128);
      if (v49 == 255)
      {
        v24[15] = *v48;
        *((unsigned char *)v24 + 128) = *((unsigned char *)v25 + 128);
      }
      else
      {
        id v50 = *v48;
        sub_4C49C(*v48, *((unsigned char *)v25 + 128));
        v24[15] = v50;
        *((unsigned char *)v24 + 128) = v49;
      }
      *((unsigned char *)v24 + 129) = *((unsigned char *)v25 + 129);
      uint64_t v51 = v31[11];
      int v52 = (char *)v24 + v51;
      id v53 = (char *)v25 + v51;
      uint64_t v54 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v54 - 8) + 16))(v52, v53, v54);
      uint64_t v55 = v31[12];
      int v56 = (void *)((char *)v24 + v55);
      uint64_t v57 = (void *)((char *)v25 + v55);
      uint64_t v58 = v57[1];
      *int v56 = *v57;
      v56[1] = v58;
      *((unsigned char *)v24 + v31[13]) = *((unsigned char *)v25 + v31[13]);
      *((unsigned char *)v24 + v31[14]) = *((unsigned char *)v25 + v31[14]);
      *((unsigned char *)v24 + v31[15]) = *((unsigned char *)v25 + v31[15]);
      uint64_t v59 = v31[16];
      uint64_t v60 = (void *)((char *)v24 + v59);
      uint64_t v61 = (void *)((char *)v25 + v59);
      uint64_t v62 = v61[1];
      *uint64_t v60 = *v61;
      v60[1] = v62;
      uint64_t v63 = *(void (**)(void *, void, uint64_t, int *))(v27 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v63(v24, 0, 1, v31);
      uint64_t v30 = v74;
    }
    *((unsigned char *)v71 + v18[7]) = *((unsigned char *)v17 + v18[7]);
    uint64_t v64 = v18[8];
    long long v65 = *(_OWORD *)((char *)v17 + v64 + 24);
    *(_OWORD *)((char *)v71 + v64 + 24) = v65;
    (**(void (***)(void))(v65 - 8))();
    uint64_t v66 = v18[9];
    uint64_t v67 = (char *)v71 + v66;
    long long v68 = (char *)v17 + v66;
    if (v75(v68, 1, v30))
    {
      uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
      memcpy(v67, v68, *(void *)(*(void *)(v69 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v73 + 16))(v67, v68, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v73 + 56))(v67, 0, 1, v30);
    }
    (*(void (**)(void *, void, uint64_t, int *))(v72 + 56))(v71, 0, 1, v18);
  }
  return v14;
}

void *assignWithCopy for ErrorModel(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 24);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_3D7340();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  unsigned int v12 = v11(v7, 1, v9);
  v205 = (uint64_t (*)(char *, uint64_t, uint64_t))v11;
  unsigned int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 28);
  int v16 = (void *)((char *)a1 + v15);
  int v17 = (void *)((char *)a2 + v15);
  uint64_t v18 = (int *)type metadata accessor for ActionButton();
  uint64_t v203 = *((void *)v18 - 1);
  uint64_t v19 = *(uint64_t (**)(void *, uint64_t, int *))(v203 + 48);
  int v20 = v19(v16, 1, v18);
  int v21 = v19(v17, 1, v18);
  if (!v20)
  {
    if (v21)
    {
      sub_3A0C28((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ActionButton);
      goto LABEL_13;
    }
    uint64_t v200 = v10;
    uint64_t v202 = v9;
    *int v16 = *v17;
    v16[1] = v17[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    void v16[2] = v17[2];
    v16[3] = v17[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v34 = v18[6];
    uint64_t v35 = (char *)v16 + v34;
    long long v198 = v17;
    uint64_t v36 = (unsigned __int8 *)v17 + v34;
    int v37 = (int *)sub_3D3860();
    uint64_t v38 = *((void *)v37 - 1);
    int v39 = *(uint64_t (**)(char *, uint64_t, int *))(v38 + 48);
    int v40 = v39(v35, 1, v37);
    v204 = v37;
    int v41 = v39((char *)v36, 1, v37);
    if (v40)
    {
      if (!v41)
      {
        *(void *)uint64_t v35 = *(void *)v36;
        *((void *)v35 + 1) = *((void *)v36 + 1);
        int v42 = v36[32];
        swift_bridgeObjectRetain();
        if (v42 == 255)
        {
          long long v98 = *((_OWORD *)v36 + 1);
          v35[32] = v36[32];
          *((_OWORD *)v35 + 1) = v98;
        }
        else
        {
          uint64_t v44 = *((void *)v36 + 2);
          uint64_t v43 = *((void *)v36 + 3);
          sub_4C484(v44, v43, v42);
          *((void *)v35 + 2) = v44;
          *((void *)v35 + 3) = v43;
          v35[32] = v42;
        }
        *((void *)v35 + 5) = *((void *)v36 + 5);
        *((void *)v35 + 6) = *((void *)v36 + 6);
        id v99 = (id *)(v36 + 56);
        int v100 = v36[64];
        if (v100 == 255)
        {
          id v102 = *v99;
          v35[64] = v36[64];
          *((void *)v35 + 7) = v102;
        }
        else
        {
          id v101 = *v99;
          sub_4C49C(*v99, v36[64]);
          *((void *)v35 + 7) = v101;
          v35[64] = v100;
        }
        id v103 = (id *)(v36 + 72);
        int v104 = v36[80];
        if (v104 == 255)
        {
          id v106 = *v103;
          v35[80] = v36[80];
          *((void *)v35 + 9) = v106;
        }
        else
        {
          id v105 = *v103;
          sub_4C49C(*v103, v36[80]);
          *((void *)v35 + 9) = v105;
          v35[80] = v104;
        }
        uint64_t v107 = (id *)(v36 + 88);
        int v108 = v36[96];
        if (v108 == 255)
        {
          id v110 = *v107;
          v35[96] = v36[96];
          *((void *)v35 + 11) = v110;
        }
        else
        {
          id v109 = *v107;
          sub_4C49C(*v107, v36[96]);
          *((void *)v35 + 11) = v109;
          v35[96] = v108;
        }
        uint64_t v111 = (id *)(v36 + 104);
        int v112 = v36[112];
        if (v112 == 255)
        {
          id v114 = *v111;
          v35[112] = v36[112];
          *((void *)v35 + 13) = v114;
        }
        else
        {
          id v113 = *v111;
          sub_4C49C(*v111, v36[112]);
          *((void *)v35 + 13) = v113;
          v35[112] = v112;
        }
        uint64_t v115 = (id *)(v36 + 120);
        int v116 = v36[128];
        if (v116 == 255)
        {
          id v118 = *v115;
          v35[128] = v36[128];
          *((void *)v35 + 15) = v118;
        }
        else
        {
          id v117 = *v115;
          sub_4C49C(*v115, v36[128]);
          *((void *)v35 + 15) = v117;
          v35[128] = v116;
        }
        v35[129] = v36[129];
        uint64_t v119 = v37[11];
        uint64_t v120 = &v35[v119];
        uint64_t v121 = &v36[v119];
        uint64_t v122 = sub_3D3750();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v122 - 8) + 16))(v120, v121, v122);
        uint64_t v123 = v37[12];
        uint64_t v124 = &v35[v123];
        uint64_t v125 = &v36[v123];
        *(void *)uint64_t v124 = *(void *)v125;
        *((void *)v124 + 1) = *((void *)v125 + 1);
        v35[v37[13]] = v36[v37[13]];
        v35[v37[14]] = v36[v37[14]];
        v35[v37[15]] = v36[v37[15]];
        uint64_t v126 = v37[16];
        int v127 = &v35[v126];
        int v128 = &v36[v126];
        *(void *)int v127 = *(void *)v128;
        *((void *)v127 + 1) = *((void *)v128 + 1);
        uint64_t v129 = *(void (**)(char *, void, uint64_t, int *))(v38 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v129(v35, 0, 1, v37);
        uint64_t v49 = v200;
        uint64_t v9 = v202;
        goto LABEL_67;
      }
    }
    else
    {
      if (!v41)
      {
        *(void *)uint64_t v35 = *(void *)v36;
        *((void *)v35 + 1) = *((void *)v36 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        id v90 = (long long *)(v35 + 16);
        char v91 = (long long *)(v36 + 16);
        int v92 = v36[32];
        if (v35[32] == 255)
        {
          if (v92 == 255)
          {
            long long v140 = *v91;
            v35[32] = v36[32];
            long long *v90 = v140;
          }
          else
          {
            uint64_t v138 = *((void *)v36 + 2);
            uint64_t v137 = *((void *)v36 + 3);
            sub_4C484(v138, v137, v36[32]);
            *((void *)v35 + 2) = v138;
            *((void *)v35 + 3) = v137;
            v35[32] = v92;
          }
        }
        else if (v92 == 255)
        {
          sub_4D7B0((uint64_t)(v35 + 16));
          unsigned __int8 v139 = v36[32];
          long long *v90 = *v91;
          v35[32] = v139;
        }
        else
        {
          uint64_t v94 = *((void *)v36 + 2);
          uint64_t v93 = *((void *)v36 + 3);
          sub_4C484(v94, v93, v36[32]);
          uint64_t v95 = *((void *)v35 + 2);
          uint64_t v96 = *((void *)v35 + 3);
          *((void *)v35 + 2) = v94;
          *((void *)v35 + 3) = v93;
          unsigned __int8 v97 = v35[32];
          v35[32] = v92;
          sub_49E54(v95, v96, v97);
        }
        uint64_t v131 = v198;
        *((void *)v35 + 5) = *((void *)v36 + 5);
        *((void *)v35 + 6) = *((void *)v36 + 6);
        uint64_t v141 = (id *)(v35 + 56);
        uint64_t v142 = (id *)(v36 + 56);
        int v143 = v36[64];
        if (v35[64] == 255)
        {
          if (v143 == 255)
          {
            id v149 = *v142;
            v35[64] = v36[64];
            *uint64_t v141 = v149;
          }
          else
          {
            id v147 = *v142;
            sub_4C49C(*v142, v36[64]);
            *((void *)v35 + 7) = v147;
            v35[64] = v143;
          }
        }
        else if (v143 == 255)
        {
          sub_4D804((uint64_t)(v35 + 56));
          unsigned __int8 v148 = v36[64];
          *uint64_t v141 = *v142;
          v35[64] = v148;
        }
        else
        {
          id v144 = *v142;
          sub_4C49C(*v142, v36[64]);
          uint64_t v145 = (void *)*((void *)v35 + 7);
          *((void *)v35 + 7) = v144;
          char v146 = v35[64];
          v35[64] = v143;
          sub_4C6F0(v145, v146);
        }
        uint64_t v150 = (id *)(v35 + 72);
        uint64_t v151 = (id *)(v36 + 72);
        int v152 = v36[80];
        if (v35[80] == 255)
        {
          if (v152 == 255)
          {
            id v158 = *v151;
            v35[80] = v36[80];
            *uint64_t v150 = v158;
          }
          else
          {
            id v156 = *v151;
            sub_4C49C(*v151, v36[80]);
            *((void *)v35 + 9) = v156;
            v35[80] = v152;
          }
        }
        else if (v152 == 255)
        {
          sub_4D804((uint64_t)(v35 + 72));
          unsigned __int8 v157 = v36[80];
          *uint64_t v150 = *v151;
          v35[80] = v157;
        }
        else
        {
          id v153 = *v151;
          sub_4C49C(*v151, v36[80]);
          uint64_t v154 = (void *)*((void *)v35 + 9);
          *((void *)v35 + 9) = v153;
          char v155 = v35[80];
          v35[80] = v152;
          sub_4C6F0(v154, v155);
        }
        uint64_t v159 = (id *)(v35 + 88);
        uint64_t v160 = (id *)(v36 + 88);
        int v161 = v36[96];
        if (v35[96] == 255)
        {
          if (v161 == 255)
          {
            id v167 = *v160;
            v35[96] = v36[96];
            *uint64_t v159 = v167;
          }
          else
          {
            id v165 = *v160;
            sub_4C49C(*v160, v36[96]);
            *((void *)v35 + 11) = v165;
            v35[96] = v161;
          }
        }
        else if (v161 == 255)
        {
          sub_4D804((uint64_t)(v35 + 88));
          unsigned __int8 v166 = v36[96];
          *uint64_t v159 = *v160;
          v35[96] = v166;
        }
        else
        {
          id v162 = *v160;
          sub_4C49C(*v160, v36[96]);
          uint64_t v163 = (void *)*((void *)v35 + 11);
          *((void *)v35 + 11) = v162;
          char v164 = v35[96];
          v35[96] = v161;
          sub_4C6F0(v163, v164);
        }
        uint64_t v168 = (id *)(v35 + 104);
        v169 = (id *)(v36 + 104);
        int v170 = v36[112];
        if (v35[112] == 255)
        {
          if (v170 == 255)
          {
            id v176 = *v169;
            v35[112] = v36[112];
            *uint64_t v168 = v176;
          }
          else
          {
            id v174 = *v169;
            sub_4C49C(*v169, v36[112]);
            *((void *)v35 + 13) = v174;
            v35[112] = v170;
          }
        }
        else if (v170 == 255)
        {
          sub_4D804((uint64_t)(v35 + 104));
          unsigned __int8 v175 = v36[112];
          *uint64_t v168 = *v169;
          v35[112] = v175;
        }
        else
        {
          id v171 = *v169;
          sub_4C49C(*v169, v36[112]);
          uint64_t v172 = (void *)*((void *)v35 + 13);
          *((void *)v35 + 13) = v171;
          char v173 = v35[112];
          v35[112] = v170;
          sub_4C6F0(v172, v173);
        }
        uint64_t v177 = (id *)(v35 + 120);
        uint64_t v178 = (id *)(v36 + 120);
        int v179 = v36[128];
        if (v35[128] == 255)
        {
          if (v179 == 255)
          {
            id v185 = *v178;
            v35[128] = v36[128];
            *uint64_t v177 = v185;
          }
          else
          {
            id v183 = *v178;
            sub_4C49C(*v178, v36[128]);
            *((void *)v35 + 15) = v183;
            v35[128] = v179;
          }
        }
        else if (v179 == 255)
        {
          sub_4D804((uint64_t)(v35 + 120));
          unsigned __int8 v184 = v36[128];
          *uint64_t v177 = *v178;
          v35[128] = v184;
        }
        else
        {
          id v180 = *v178;
          sub_4C49C(*v178, v36[128]);
          v181 = (void *)*((void *)v35 + 15);
          *((void *)v35 + 15) = v180;
          char v182 = v35[128];
          v35[128] = v179;
          sub_4C6F0(v181, v182);
        }
        v35[129] = v36[129];
        uint64_t v186 = v204[11];
        uint64_t v187 = &v35[v186];
        uint64_t v188 = &v36[v186];
        uint64_t v189 = sub_3D3750();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(void *)(v189 - 8) + 24))(v187, v188, v189);
        uint64_t v190 = v204[12];
        uint64_t v191 = &v35[v190];
        char v192 = &v36[v190];
        *(void *)uint64_t v191 = *(void *)v192;
        *((void *)v191 + 1) = *((void *)v192 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v35[v204[13]] = v36[v204[13]];
        v35[v204[14]] = v36[v204[14]];
        v35[v204[15]] = v36[v204[15]];
        uint64_t v193 = v204[16];
        unint64_t v194 = &v35[v193];
        long long v195 = &v36[v193];
        *(void *)unint64_t v194 = *(void *)v195;
        *((void *)v194 + 1) = *((void *)v195 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v49 = v200;
        uint64_t v130 = v205;
        goto LABEL_68;
      }
      sub_3A0C28((uint64_t)v35, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    }
    uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy(v35, v36, *(void *)(*(void *)(v48 - 8) + 64));
    uint64_t v49 = v200;
LABEL_67:
    uint64_t v130 = v205;
    uint64_t v131 = v198;
LABEL_68:
    *((unsigned char *)v16 + v18[7]) = *((unsigned char *)v131 + v18[7]);
    __swift_assign_boxed_opaque_existential_1((void *)((char *)v16 + v18[8]), (void *)((char *)v131 + v18[8]));
    uint64_t v132 = v18[9];
    id v133 = (char *)v16 + v132;
    uint64_t v134 = (char *)v131 + v132;
    int v135 = v130(v133, 1, v9);
    int v136 = v130(v134, 1, v9);
    if (v135)
    {
      if (!v136)
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v133, v134, v9);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v133, 0, 1, v9);
        return a1;
      }
    }
    else
    {
      if (!v136)
      {
        (*(void (**)(char *, char *, uint64_t))(v49 + 24))(v133, v134, v9);
        return a1;
      }
      (*(void (**)(char *, uint64_t))(v49 + 8))(v133, v9);
    }
    size_t v31 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870) - 8) + 64);
    uint64_t v32 = v133;
    int v33 = v134;
    goto LABEL_14;
  }
  if (v21)
  {
LABEL_13:
    size_t v31 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACB00) - 8) + 64);
    uint64_t v32 = (char *)v16;
    int v33 = (char *)v17;
LABEL_14:
    memcpy(v32, v33, v31);
    return a1;
  }
  uint64_t v199 = v10;
  uint64_t v201 = v9;
  *int v16 = *v17;
  v16[1] = v17[1];
  void v16[2] = v17[2];
  v16[3] = v17[3];
  unint64_t v196 = v18;
  char v197 = v17;
  uint64_t v22 = v18[6];
  uint64_t v23 = (void *)((char *)v16 + v22);
  uint64_t v24 = (void *)((char *)v17 + v22);
  uint64_t v25 = (int *)sub_3D3860();
  uint64_t v26 = *((void *)v25 - 1);
  uint64_t v27 = *(unsigned int (**)(void *, uint64_t, int *))(v26 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27(v24, 1, v25))
  {
    uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy(v23, v24, *(void *)(*(void *)(v28 - 8) + 64));
    uint64_t v30 = v10;
    uint64_t v29 = v201;
  }
  else
  {
    *uint64_t v23 = *v24;
    v23[1] = v24[1];
    int v45 = *((unsigned __int8 *)v24 + 32);
    swift_bridgeObjectRetain();
    if (v45 == 255)
    {
      long long v50 = *((_OWORD *)v24 + 1);
      *((unsigned char *)v23 + 32) = *((unsigned char *)v24 + 32);
      *((_OWORD *)v23 + 1) = v50;
    }
    else
    {
      uint64_t v47 = v24[2];
      uint64_t v46 = v24[3];
      sub_4C484(v47, v46, v45);
      v23[2] = v47;
      v23[3] = v46;
      *((unsigned char *)v23 + 32) = v45;
    }
    uint64_t v23[5] = v24[5];
    v23[6] = v24[6];
    uint64_t v51 = (id *)(v24 + 7);
    int v52 = *((unsigned __int8 *)v24 + 64);
    if (v52 == 255)
    {
      id v54 = *v51;
      *((unsigned char *)v23 + 64) = *((unsigned char *)v24 + 64);
      v23[7] = v54;
    }
    else
    {
      id v53 = *v51;
      sub_4C49C(*v51, *((unsigned char *)v24 + 64));
      v23[7] = v53;
      *((unsigned char *)v23 + 64) = v52;
    }
    uint64_t v55 = (id *)(v24 + 9);
    int v56 = *((unsigned __int8 *)v24 + 80);
    if (v56 == 255)
    {
      id v58 = *v55;
      *((unsigned char *)v23 + 80) = *((unsigned char *)v24 + 80);
      v23[9] = v58;
    }
    else
    {
      id v57 = *v55;
      sub_4C49C(*v55, *((unsigned char *)v24 + 80));
      v23[9] = v57;
      *((unsigned char *)v23 + 80) = v56;
    }
    uint64_t v59 = (id *)(v24 + 11);
    int v60 = *((unsigned __int8 *)v24 + 96);
    if (v60 == 255)
    {
      id v62 = *v59;
      *((unsigned char *)v23 + 96) = *((unsigned char *)v24 + 96);
      v23[11] = v62;
    }
    else
    {
      id v61 = *v59;
      sub_4C49C(*v59, *((unsigned char *)v24 + 96));
      v23[11] = v61;
      *((unsigned char *)v23 + 96) = v60;
    }
    uint64_t v63 = (id *)(v24 + 13);
    int v64 = *((unsigned __int8 *)v24 + 112);
    if (v64 == 255)
    {
      id v66 = *v63;
      *((unsigned char *)v23 + 112) = *((unsigned char *)v24 + 112);
      v23[13] = v66;
    }
    else
    {
      id v65 = *v63;
      sub_4C49C(*v63, *((unsigned char *)v24 + 112));
      v23[13] = v65;
      *((unsigned char *)v23 + 112) = v64;
    }
    uint64_t v67 = (id *)(v24 + 15);
    int v68 = *((unsigned __int8 *)v24 + 128);
    if (v68 == 255)
    {
      id v70 = *v67;
      *((unsigned char *)v23 + 128) = *((unsigned char *)v24 + 128);
      v23[15] = v70;
    }
    else
    {
      id v69 = *v67;
      sub_4C49C(*v67, *((unsigned char *)v24 + 128));
      v23[15] = v69;
      *((unsigned char *)v23 + 128) = v68;
    }
    *((unsigned char *)v23 + 129) = *((unsigned char *)v24 + 129);
    uint64_t v71 = v25[11];
    uint64_t v72 = (char *)v23 + v71;
    uint64_t v73 = (char *)v24 + v71;
    uint64_t v74 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v74 - 8) + 16))(v72, v73, v74);
    uint64_t v75 = v25[12];
    uint64_t v76 = (void *)((char *)v23 + v75);
    uint64_t v77 = (void *)((char *)v24 + v75);
    *uint64_t v76 = *v77;
    v76[1] = v77[1];
    *((unsigned char *)v23 + v25[13]) = *((unsigned char *)v24 + v25[13]);
    *((unsigned char *)v23 + v25[14]) = *((unsigned char *)v24 + v25[14]);
    *((unsigned char *)v23 + v25[15]) = *((unsigned char *)v24 + v25[15]);
    uint64_t v78 = v25[16];
    Swift::String_optional v79 = (void *)((char *)v23 + v78);
    Swift::String v80 = (void *)((char *)v24 + v78);
    *Swift::String_optional v79 = *v80;
    v79[1] = v80[1];
    Swift::String v81 = *(void (**)(void *, void, uint64_t, int *))(v26 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v81(v23, 0, 1, v25);
    uint64_t v30 = v199;
    uint64_t v29 = v201;
  }
  *((unsigned char *)v16 + v196[7]) = *((unsigned char *)v197 + v196[7]);
  uint64_t v82 = v196[8];
  id v83 = (char *)v16 + v82;
  uint64_t v84 = *(void *)((char *)v197 + v82 + 24);
  *((void *)v83 + 3) = v84;
  *((void *)v83 + 4) = *(void *)((char *)v197 + v82 + 32);
  (**(void (***)(void))(v84 - 8))();
  uint64_t v85 = v196[9];
  int v86 = (char *)v16 + v85;
  id v87 = (char *)v197 + v85;
  if (v205((char *)v197 + v85, 1, v29))
  {
    uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(v86, v87, *(void *)(*(void *)(v88 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v86, v87, v29);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v30 + 56))(v86, 0, 1, v29);
  }
  (*(void (**)(void *, void, uint64_t, int *))(v203 + 56))(v16, 0, 1, v196);
  return a1;
}

uint64_t sub_3A0C28(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

_OWORD *initializeWithTake for ErrorModel(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = *(int *)(a3 + 24);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_3D7340();
  uint64_t v11 = *(void *)(v10 - 8);
  unsigned int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (_OWORD *)((char *)a1 + v14);
  int v16 = (_OWORD *)((char *)a2 + v14);
  int v17 = (int *)type metadata accessor for ActionButton();
  uint64_t v18 = *((void *)v17 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_4ACB00);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    uint64_t v41 = v18;
    int v42 = v12;
    long long v20 = v16[1];
    _OWORD *v15 = *v16;
    v15[1] = v20;
    uint64_t v21 = v17[6];
    uint64_t v22 = (_OWORD *)((char *)v15 + v21);
    uint64_t v23 = (_OWORD *)((char *)v16 + v21);
    uint64_t v24 = (int *)sub_3D3860();
    uint64_t v40 = *((void *)v24 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v40 + 48))(v23, 1, v24))
    {
      uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
      memcpy(v22, v23, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      long long v26 = v23[1];
      _OWORD *v22 = *v23;
      v22[1] = v26;
      *((unsigned char *)v22 + 32) = *((unsigned char *)v23 + 32);
      *(_OWORD *)((char *)v22 + 40) = *(_OWORD *)((char *)v23 + 40);
      *((void *)v22 + 7) = *((void *)v23 + 7);
      *((unsigned char *)v22 + 64) = *((unsigned char *)v23 + 64);
      *(_OWORD *)((char *)v22 + 113) = *(_OWORD *)((char *)v23 + 113);
      *(_OWORD *)((char *)v22 + 104) = *(_OWORD *)((char *)v23 + 104);
      *(_OWORD *)((char *)v22 + 88) = *(_OWORD *)((char *)v23 + 88);
      *(_OWORD *)((char *)v22 + 72) = *(_OWORD *)((char *)v23 + 72);
      *((unsigned char *)v22 + 129) = *((unsigned char *)v23 + 129);
      uint64_t v27 = v24[11];
      uint64_t v38 = (char *)v23 + v27;
      int v39 = (char *)v22 + v27;
      uint64_t v28 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32))(v39, v38, v28);
      *(_OWORD *)((char *)v22 + v24[12]) = *(_OWORD *)((char *)v23 + v24[12]);
      *((unsigned char *)v22 + v24[13]) = *((unsigned char *)v23 + v24[13]);
      *((unsigned char *)v22 + v24[14]) = *((unsigned char *)v23 + v24[14]);
      *((unsigned char *)v22 + v24[15]) = *((unsigned char *)v23 + v24[15]);
      *(_OWORD *)((char *)v22 + v24[16]) = *(_OWORD *)((char *)v23 + v24[16]);
      (*(void (**)(_OWORD *, void, uint64_t, int *))(v40 + 56))(v22, 0, 1, v24);
    }
    *((unsigned char *)v15 + v17[7]) = *((unsigned char *)v16 + v17[7]);
    uint64_t v29 = v17[8];
    uint64_t v30 = (char *)v15 + v29;
    size_t v31 = (char *)v16 + v29;
    long long v32 = *((_OWORD *)v31 + 1);
    *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
    *((_OWORD *)v30 + 1) = v32;
    *((void *)v30 + 4) = *((void *)v31 + 4);
    uint64_t v33 = v17[9];
    uint64_t v34 = (char *)v15 + v33;
    uint64_t v35 = (char *)v16 + v33;
    if (v42(v35, 1, v10))
    {
      uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v34, v35, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v34, 0, 1, v10);
    }
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v41 + 56))(v15, 0, 1, v17);
  }
  return a1;
}

void *assignWithTake for ErrorModel(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_3D7340();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  unsigned int v14 = v13(v9, 1, v11);
  unsigned int v15 = v13(v10, 1, v11);
  uint64_t v120 = v12;
  uint64_t v121 = (uint64_t (*)(char *, uint64_t, uint64_t))v13;
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 28);
  uint64_t v18 = (void *)((char *)a1 + v17);
  uint64_t v19 = (void *)((char *)a2 + v17);
  long long v20 = (int *)type metadata accessor for ActionButton();
  uint64_t v21 = *((void *)v20 - 1);
  uint64_t v22 = *(uint64_t (**)(void *, uint64_t, int *))(v21 + 48);
  int v23 = v22(v18, 1, v20);
  int v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (v24)
    {
      sub_3A0C28((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ActionButton);
      goto LABEL_13;
    }
    uint64_t v119 = v11;
    uint64_t v35 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v35;
    swift_bridgeObjectRelease();
    uint64_t v36 = v19[3];
    v18[2] = v19[2];
    v18[3] = v36;
    swift_bridgeObjectRelease();
    uint64_t v37 = v20[6];
    uint64_t v38 = (uint64_t)v18 + v37;
    int v39 = (char *)v19 + v37;
    uint64_t v40 = (int *)sub_3D3860();
    uint64_t v115 = *((void *)v40 - 1);
    uint64_t v41 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v115 + 48);
    int v42 = v41(v38, 1, v40);
    int v43 = v41((uint64_t)v39, 1, v40);
    if (v42)
    {
      if (!v43)
      {
        long long v58 = *((_OWORD *)v39 + 1);
        *(_OWORD *)uint64_t v38 = *(_OWORD *)v39;
        *(_OWORD *)(v38 + 16) = v58;
        *(unsigned char *)(v38 + 32) = v39[32];
        *(_OWORD *)(v38 + 40) = *(_OWORD *)(v39 + 40);
        *(void *)(v38 + 56) = *((void *)v39 + 7);
        *(unsigned char *)(v38 + 64) = v39[64];
        *(_OWORD *)(v38 + 113) = *(_OWORD *)(v39 + 113);
        *(_OWORD *)(v38 + 104) = *(_OWORD *)(v39 + 104);
        *(_OWORD *)(v38 + 88) = *(_OWORD *)(v39 + 88);
        *(_OWORD *)(v38 + 72) = *(_OWORD *)(v39 + 72);
        *(unsigned char *)(v38 + 129) = v39[129];
        uint64_t v59 = v40[11];
        uint64_t v60 = v38 + v59;
        id v61 = &v39[v59];
        uint64_t v62 = sub_3D3750();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v62 - 8) + 32))(v60, v61, v62);
        *(_OWORD *)(v38 + v40[12]) = *(_OWORD *)&v39[v40[12]];
        *(unsigned char *)(v38 + v40[13]) = v39[v40[13]];
        *(unsigned char *)(v38 + v40[14]) = v39[v40[14]];
        *(unsigned char *)(v38 + v40[15]) = v39[v40[15]];
        *(_OWORD *)(v38 + v40[16]) = *(_OWORD *)&v39[v40[16]];
        (*(void (**)(uint64_t, void, uint64_t, int *))(v115 + 56))(v38, 0, 1, v40);
        goto LABEL_29;
      }
      size_t v44 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70) - 8) + 64);
      int v45 = (void *)v38;
LABEL_27:
      memcpy(v45, v39, v44);
LABEL_29:
      uint64_t v63 = v119;
      uint64_t v64 = v120;
      id v65 = v121;
LABEL_30:
      *((unsigned char *)v18 + v20[7]) = *((unsigned char *)v19 + v20[7]);
      uint64_t v66 = v20[8];
      uint64_t v67 = (char *)v18 + v66;
      int v68 = (char *)v19 + v66;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v18 + v66);
      long long v69 = *((_OWORD *)v68 + 1);
      *(_OWORD *)uint64_t v67 = *(_OWORD *)v68;
      *((_OWORD *)v67 + 1) = v69;
      *((void *)v67 + 4) = *((void *)v68 + 4);
      uint64_t v70 = v20[9];
      uint64_t v71 = (char *)v18 + v70;
      uint64_t v72 = (char *)v19 + v70;
      int v73 = v65(v71, 1, v63);
      int v74 = v65(v72, 1, v63);
      if (v73)
      {
        if (!v74)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v71, v72, v63);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v71, 0, 1, v63);
          return a1;
        }
      }
      else
      {
        if (!v74)
        {
          (*(void (**)(char *, char *, uint64_t))(v64 + 40))(v71, v72, v63);
          return a1;
        }
        (*(void (**)(char *, uint64_t))(v64 + 8))(v71, v63);
      }
      size_t v32 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870) - 8) + 64);
      uint64_t v33 = v71;
      uint64_t v34 = v72;
      goto LABEL_14;
    }
    if (v43)
    {
      sub_3A0C28(v38, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
      size_t v44 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70) - 8) + 64);
      int v45 = (void *)v38;
      goto LABEL_27;
    }
    uint64_t v75 = *((void *)v39 + 1);
    *(void *)uint64_t v38 = *(void *)v39;
    *(void *)(v38 + 8) = v75;
    swift_bridgeObjectRelease();
    uint64_t v76 = v39 + 16;
    int v77 = *(unsigned __int8 *)(v38 + 32);
    if (v77 != 255)
    {
      int v78 = v39[32];
      if (v78 != 255)
      {
        uint64_t v79 = *(void *)(v38 + 16);
        uint64_t v80 = *(void *)(v38 + 24);
        *(_OWORD *)(v38 + 16) = *v76;
        *(unsigned char *)(v38 + 32) = v78;
        sub_49E54(v79, v80, v77);
        goto LABEL_42;
      }
      sub_4D7B0(v38 + 16);
    }
    *(_OWORD *)(v38 + 16) = *v76;
    *(unsigned char *)(v38 + 32) = v39[32];
LABEL_42:
    *(_OWORD *)(v38 + 40) = *(_OWORD *)(v39 + 40);
    Swift::String v81 = v39 + 56;
    int v82 = *(unsigned __int8 *)(v38 + 64);
    if (v82 != 255)
    {
      int v83 = v39[64];
      if (v83 != 255)
      {
        uint64_t v84 = *(void **)(v38 + 56);
        *(void *)(v38 + 56) = *v81;
        *(unsigned char *)(v38 + 64) = v83;
        sub_4C6F0(v84, v82);
        goto LABEL_47;
      }
      sub_4D804(v38 + 56);
    }
    *(void *)(v38 + 56) = *v81;
    *(unsigned char *)(v38 + 64) = v39[64];
LABEL_47:
    uint64_t v63 = v119;
    uint64_t v85 = v39 + 72;
    int v86 = *(unsigned __int8 *)(v38 + 80);
    if (v86 != 255)
    {
      int v87 = v39[80];
      if (v87 != 255)
      {
        uint64_t v88 = *(void **)(v38 + 72);
        *(void *)(v38 + 72) = *v85;
        *(unsigned char *)(v38 + 80) = v87;
        sub_4C6F0(v88, v86);
        goto LABEL_52;
      }
      sub_4D804(v38 + 72);
    }
    *(void *)(v38 + 72) = *v85;
    *(unsigned char *)(v38 + 80) = v39[80];
LABEL_52:
    id v89 = v39 + 88;
    int v90 = *(unsigned __int8 *)(v38 + 96);
    if (v90 != 255)
    {
      int v91 = v39[96];
      if (v91 != 255)
      {
        int v92 = *(void **)(v38 + 88);
        *(void *)(v38 + 88) = *v89;
        *(unsigned char *)(v38 + 96) = v91;
        sub_4C6F0(v92, v90);
        goto LABEL_57;
      }
      sub_4D804(v38 + 88);
    }
    *(void *)(v38 + 88) = *v89;
    *(unsigned char *)(v38 + 96) = v39[96];
LABEL_57:
    uint64_t v93 = v39 + 104;
    int v94 = *(unsigned __int8 *)(v38 + 112);
    if (v94 != 255)
    {
      int v95 = v39[112];
      if (v95 != 255)
      {
        uint64_t v96 = *(void **)(v38 + 104);
        *(void *)(v38 + 104) = *v93;
        *(unsigned char *)(v38 + 112) = v95;
        sub_4C6F0(v96, v94);
        goto LABEL_62;
      }
      sub_4D804(v38 + 104);
    }
    *(void *)(v38 + 104) = *v93;
    *(unsigned char *)(v38 + 112) = v39[112];
LABEL_62:
    unsigned __int8 v97 = v39 + 120;
    int v98 = *(unsigned __int8 *)(v38 + 128);
    if (v98 != 255)
    {
      int v99 = v39[128];
      if (v99 != 255)
      {
        int v100 = *(void **)(v38 + 120);
        *(void *)(v38 + 120) = *v97;
        *(unsigned char *)(v38 + 128) = v99;
        sub_4C6F0(v100, v98);
LABEL_67:
        *(unsigned char *)(v38 + 129) = v39[129];
        uint64_t v101 = v40[11];
        uint64_t v102 = v38 + v101;
        id v103 = &v39[v101];
        uint64_t v104 = sub_3D3750();
        (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v104 - 8) + 40))(v102, v103, v104);
        uint64_t v105 = v40[12];
        id v106 = (void *)(v38 + v105);
        uint64_t v107 = &v39[v105];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        *id v106 = v109;
        v106[1] = v108;
        swift_bridgeObjectRelease();
        *(unsigned char *)(v38 + v40[13]) = v39[v40[13]];
        *(unsigned char *)(v38 + v40[14]) = v39[v40[14]];
        *(unsigned char *)(v38 + v40[15]) = v39[v40[15]];
        uint64_t v110 = v40[16];
        uint64_t v111 = (void *)(v38 + v110);
        int v112 = &v39[v110];
        uint64_t v114 = *(void *)v112;
        uint64_t v113 = *((void *)v112 + 1);
        *uint64_t v111 = v114;
        v111[1] = v113;
        swift_bridgeObjectRelease();
        uint64_t v64 = v120;
        id v65 = v121;
        goto LABEL_30;
      }
      sub_4D804(v38 + 120);
    }
    *(void *)(v38 + 120) = *v97;
    *(unsigned char *)(v38 + 128) = v39[128];
    goto LABEL_67;
  }
  if (v24)
  {
LABEL_13:
    size_t v32 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4ACB00) - 8) + 64);
    uint64_t v33 = (char *)v18;
    uint64_t v34 = (char *)v19;
LABEL_14:
    memcpy(v33, v34, v32);
    return a1;
  }
  uint64_t v118 = v11;
  long long v25 = *((_OWORD *)v19 + 1);
  *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  *((_OWORD *)v18 + 1) = v25;
  uint64_t v26 = v20[6];
  uint64_t v27 = (_OWORD *)((char *)v18 + v26);
  uint64_t v28 = (_OWORD *)((char *)v19 + v26);
  uint64_t v29 = (int *)sub_3D3860();
  uint64_t v30 = *((void *)v29 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v30 + 48))(v28, 1, v29))
  {
    uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy(v27, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    long long v46 = v28[1];
    *uint64_t v27 = *v28;
    v27[1] = v46;
    *((unsigned char *)v27 + 32) = *((unsigned char *)v28 + 32);
    *(_OWORD *)((char *)v27 + 40) = *(_OWORD *)((char *)v28 + 40);
    *((void *)v27 + 7) = *((void *)v28 + 7);
    *((unsigned char *)v27 + 64) = *((unsigned char *)v28 + 64);
    *(_OWORD *)((char *)v27 + 113) = *(_OWORD *)((char *)v28 + 113);
    *(_OWORD *)((char *)v27 + 104) = *(_OWORD *)((char *)v28 + 104);
    *(_OWORD *)((char *)v27 + 88) = *(_OWORD *)((char *)v28 + 88);
    *(_OWORD *)((char *)v27 + 72) = *(_OWORD *)((char *)v28 + 72);
    *((unsigned char *)v27 + 129) = *((unsigned char *)v28 + 129);
    uint64_t v47 = v29[11];
    int v116 = (char *)v28 + v47;
    id v117 = (char *)v27 + v47;
    uint64_t v48 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 32))(v117, v116, v48);
    *(_OWORD *)((char *)v27 + v29[12]) = *(_OWORD *)((char *)v28 + v29[12]);
    *((unsigned char *)v27 + v29[13]) = *((unsigned char *)v28 + v29[13]);
    *((unsigned char *)v27 + v29[14]) = *((unsigned char *)v28 + v29[14]);
    *((unsigned char *)v27 + v29[15]) = *((unsigned char *)v28 + v29[15]);
    *(_OWORD *)((char *)v27 + v29[16]) = *(_OWORD *)((char *)v28 + v29[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v30 + 56))(v27, 0, 1, v29);
  }
  *((unsigned char *)v18 + v20[7]) = *((unsigned char *)v19 + v20[7]);
  uint64_t v49 = v20[8];
  long long v50 = (char *)v18 + v49;
  uint64_t v51 = (char *)v19 + v49;
  long long v52 = *((_OWORD *)v51 + 1);
  *(_OWORD *)long long v50 = *(_OWORD *)v51;
  *((_OWORD *)v50 + 1) = v52;
  *((void *)v50 + 4) = *((void *)v51 + 4);
  uint64_t v53 = v20[9];
  id v54 = (char *)v18 + v53;
  uint64_t v55 = (char *)v19 + v53;
  if (v121(v55, 1, v118))
  {
    uint64_t v56 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v120 + 32))(v54, v55, v118);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v120 + 56))(v54, 0, 1, v118);
  }
  (*(void (**)(void *, void, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
  return a1;
}

uint64_t getEnumTagSinglePayload for ErrorModel(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3A1C40);
}

uint64_t sub_3A1C40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_4ACB00);
      unsigned int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 28);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ErrorModel(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3A1D88);
}

uint64_t sub_3A1D88(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 24);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_4ACB00);
      unsigned int v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 28);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_3A1EBC()
{
  sub_3A1FC8(319, (unint64_t *)&qword_4AB420, (void (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
  if (v0 <= 0x3F)
  {
    sub_3A1FC8(319, (unint64_t *)&unk_4C0F08, (void (*)(uint64_t))type metadata accessor for ActionButton);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_3A1FC8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_3D8910();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t PodcastOfferAction.init(podcastOffer:adamId:displaySuccessHUD:)(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v5 = v4;
  int v28 = a4;
  int v26 = a3;
  uint64_t v27 = a1;
  uint64_t v8 = sub_3D2460();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v25[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_3D6F40();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = &v25[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = &v25[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_DC31C(a1, v5 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_podcastOffer);
  uint64_t v19 = v5 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_adamId;
  *(void *)uint64_t v19 = a2;
  *(unsigned char *)(v19 + 8) = v26 & 1;
  *(unsigned char *)(v5 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_displaySuccessHUD) = v28;
  uint64_t v20 = sub_3D7340();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v18, 1, 1, v20);
  sub_3D6F00();
  sub_3D2450();
  uint64_t v21 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  uint64_t v23 = v22;
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  *(void *)(v5 + 16) = v21;
  *(void *)(v5 + 24) = v23;
  *(void *)(v5 + 32) = 0;
  *(void *)(v5 + 40) = 0;
  *(unsigned char *)(v5 + 48) = 48;
  (*(void (**)(uint64_t, unsigned char *, uint64_t))(v13 + 32))(v5 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v15, v12);
  sub_2A728((uint64_t)v18, v5 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  sub_DCAAC(v27);
  return v5;
}

uint64_t PodcastOfferAction.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  uint64_t v2 = sub_3D6F40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_2A790(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  sub_DCAAC(v0 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_podcastOffer);
  return v0;
}

void PodcastOfferAction.init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)()
{
}

uint64_t sub_3A238C()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_displaySuccessHUD);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_3A23D4(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_displaySuccessHUD);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = a1;
  return result;
}

uint64_t (*sub_3A2420())()
{
  return j__swift_endAccess;
}

uint64_t PodcastOfferAction.__allocating_init(deserializing:using:)(char *a1, uint64_t a2)
{
  return PodcastOfferAction.init(deserializing:using:)(a1, a2);
}

uint64_t PodcastOfferAction.podcastOffer.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_DC31C(v1 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_podcastOffer, a1);
}

uint64_t PodcastOfferAction.adamId.getter()
{
  return *(void *)(v0 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_adamId);
}

uint64_t PodcastOfferAction.__allocating_init(podcastOffer:adamId:displaySuccessHUD:)(uint64_t a1, uint64_t a2, int a3, int a4)
{
  int v25 = a3;
  int v26 = a4;
  uint64_t v24 = a1;
  uint64_t v6 = sub_3D2460();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_3D6F40();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v14 - 8);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_allocObject();
  sub_DC31C(a1, v17 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_podcastOffer);
  uint64_t v18 = v17 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_adamId;
  *(void *)uint64_t v18 = a2;
  *(unsigned char *)(v18 + 8) = v25 & 1;
  *(unsigned char *)(v17 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_displaySuccessHUD) = v26;
  uint64_t v19 = sub_3D7340();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v16, 1, 1, v19);
  sub_3D6F00();
  sub_3D2450();
  uint64_t v20 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(void *)(v17 + 16) = v20;
  *(void *)(v17 + 24) = v22;
  *(void *)(v17 + 32) = 0;
  *(void *)(v17 + 40) = 0;
  *(unsigned char *)(v17 + 48) = 48;
  (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v17 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v13, v10);
  sub_2A728((uint64_t)v16, v17 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  sub_DCAAC(v24);
  return v17;
}

uint64_t PodcastOfferAction.init(deserializing:using:)(char *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v46 = a2;
  uint64_t v48 = sub_3D6CE0();
  uint64_t v6 = *(char **)(v48 - 8);
  uint64_t v7 = __chkstk_darwin(v48);
  int v42 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  int v45 = (char *)v38 - v9;
  uint64_t v10 = type metadata accessor for ShowOffer();
  __chkstk_darwin(v10 - 8);
  size_t v44 = (void *)((char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v47 = sub_3D6B50();
  uint64_t v12 = *(void *)(v47 - 8);
  uint64_t v13 = __chkstk_darwin(v47);
  uint64_t v41 = (char *)v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v38 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v38 - v18;
  swift_retain();
  uint64_t v49 = a1;
  sub_3D6B60();
  sub_3D6B20();
  uint64_t v21 = v20;
  if (v20)
  {
    uint64_t v22 = sub_3D5140();
    if (v3)
    {
      swift_bridgeObjectRelease();
      uint64_t v23 = sub_3D5130();
      swift_errorRelease();
    }
    else
    {
      uint64_t v23 = v22;
      swift_bridgeObjectRelease();
    }
    int v43 = 0;
  }
  else
  {
    uint64_t v23 = 0;
    int v43 = v3;
  }
  uint64_t v40 = v12;
  uint64_t v24 = v12 + 8;
  int v25 = *(void (**)(char *, uint64_t))(v12 + 8);
  v25(v19, v47);
  uint64_t v26 = v4 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_adamId;
  *(void *)uint64_t v26 = v23;
  *(unsigned char *)(v26 + 8) = v21 == 0;
  sub_3D6B60();
  uint64_t v27 = (uint64_t)(v6 + 16);
  uint64_t v28 = (uint64_t)v45;
  uint64_t v29 = v46;
  int v39 = (void (*)(char *, uint64_t, uint64_t))*((void *)v6 + 2);
  v39(v45, v46, v48);
  uint64_t v30 = v43;
  uint64_t v31 = v44;
  ShowOffer.init(deserializing:using:)(v17, v28, v44);
  if (v30)
  {
    swift_release();
    (*((void (**)(uint64_t, uint64_t))v6 + 1))(v29, v48);
    v25(v49, v47);
    type metadata accessor for PodcastOfferAction();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v38[1] = v24;
    int v43 = v25;
    int v45 = v6;
    sub_DC96C((uint64_t)v31, v4 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_podcastOffer);
    *(unsigned char *)(v4 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_displaySuccessHUD) = 1;
    swift_release();
    size_t v32 = v41;
    uint64_t v33 = v49;
    uint64_t v34 = v47;
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v41, v49, v47);
    uint64_t v35 = (uint64_t)v42;
    uint64_t v36 = v48;
    v39(v42, v29, v48);
    uint64_t v27 = Action.init(deserializing:using:)(v32, v35);
    (*((void (**)(uint64_t, uint64_t))v45 + 1))(v29, v36);
    v43(v33, v34);
  }
  return v27;
}

uint64_t type metadata accessor for PodcastOfferAction()
{
  uint64_t result = qword_4C0F68;
  if (!qword_4C0F68) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3A2CC4()
{
  return sub_DCAAC(v0 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_podcastOffer);
}

uint64_t PodcastOfferAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  uint64_t v2 = sub_3D6F40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_2A790(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
  sub_DCAAC(v0 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_podcastOffer);

  return swift_deallocClassInstance();
}

uint64_t sub_3A2DAC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_displaySuccessHUD);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_3A2E00(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC8ShelfKit18PodcastOfferAction_displaySuccessHUD);
  uint64_t result = swift_beginAccess();
  unsigned char *v3 = v2;
  return result;
}

uint64_t sub_3A2E50()
{
  return type metadata accessor for PodcastOfferAction();
}

uint64_t sub_3A2E58()
{
  uint64_t result = type metadata accessor for ShowOffer();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for PodcastOfferAction(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PodcastOfferAction);
}

uint64_t dispatch thunk of PodcastOfferAction.displaySuccessHUD.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of PodcastOfferAction.displaySuccessHUD.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of PodcastOfferAction.displaySuccessHUD.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 200))();
}

uint64_t dispatch thunk of PodcastOfferAction.__allocating_init(podcastOffer:adamId:displaySuccessHUD:)(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v3 + 208))(a1, a2, a3 & 1);
}

void *ExternalUrlAction.__allocating_init(title:urlString:isSensitive:presentationStyle:requiresSignedInUser:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  return ExternalUrlAction.init(title:urlString:isSensitive:presentationStyle:requiresSignedInUser:)(a1, a2, a3, a4, a5, a6, a7);
}

void *ExternalUrlAction.init(title:urlString:isSensitive:presentationStyle:requiresSignedInUser:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7)
{
  uint64_t v8 = v7;
  int v32 = a5;
  int v33 = a7;
  int v39 = a6;
  uint64_t v40 = a2;
  uint64_t v38 = a1;
  v31[1] = *v7;
  uint64_t v9 = sub_3D2460();
  uint64_t v36 = *(void *)(v9 - 8);
  uint64_t v37 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_3D6F40();
  uint64_t v34 = *(void *)(v12 - 8);
  uint64_t v35 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_3D2350();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)v31 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  sub_3D2320();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1)
  {
    swift_release();
    swift_bridgeObjectRelease();
    sub_250FC((uint64_t)v20, &qword_4AD7B0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v24, v20, v21);
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))((uint64_t)v8 + OBJC_IVAR____TtC8ShelfKit17ExternalUrlAction_url, v24, v21);
    *((unsigned char *)v8 + OBJC_IVAR____TtC8ShelfKit17ExternalUrlAction_isSensitive) = v32 & 1;
    *((unsigned char *)v8 + OBJC_IVAR____TtC8ShelfKit17ExternalUrlAction_requiresSignedInUser) = v33 & 1;
    swift_release();
    uint64_t v25 = sub_3D7340();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v17, 1, 1, v25);
    sub_3D6F00();
    sub_3D2450();
    uint64_t v26 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
    uint64_t v28 = v27;
    (*(void (**)(char *, uint64_t))(v36 + 8))(v11, v37);
    v8[2] = v26;
    v8[3] = v28;
    uint64_t v29 = v40;
    v8[4] = v38;
    v8[5] = v29;
    *((unsigned char *)v8 + 48) = v39;
    (*(void (**)(uint64_t, char *, uint64_t))(v34 + 32))((uint64_t)v8 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v14, v35);
    sub_2A728((uint64_t)v17, (uint64_t)v8 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
  return v8;
}

uint64_t ExternalUrlAction.__allocating_init(deserializing:using:)(char *a1, uint64_t a2)
{
  return ExternalUrlAction.init(deserializing:using:)(a1, a2);
}

uint64_t ExternalUrlAction.init(deserializing:using:)(char *a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v53 = a2;
  uint64_t v48 = *v4;
  uint64_t v49 = v3;
  uint64_t v52 = sub_3D6CE0();
  uint64_t v57 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v47 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_3D6B50();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v46 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  size_t v44 = (char *)&v43 - v14;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v43 - v16;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v43 - v19;
  uint64_t v21 = sub_3D2350();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  long long v50 = (char *)&v43 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  id v54 = a1;
  sub_3D6B60();
  sub_3D6A80();
  uint64_t v45 = v11;
  uint64_t v55 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v56 = v10;
  v55(v20, v10);
  uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  uint64_t v51 = v21;
  if (v24(v9, 1, v21) == 1)
  {
    sub_250FC((uint64_t)v9, &qword_4AD7B0);
    uint64_t v25 = sub_3D7B40();
    sub_23DC0();
    swift_allocError();
    uint64_t v27 = v26;
    uint64_t v28 = *v4;
    swift_release();
    *uint64_t v27 = 7107189;
    v27[1] = 0xE300000000000000;
    v27[2] = v28;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v25 - 8) + 104))(v27, enum case for JSONError.missingProperty(_:), v25);
    swift_willThrow();
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v53, v52);
    v55(v54, v56);
    swift_deallocPartialClassInstance();
  }
  else
  {
    uint64_t v29 = v22;
    uint64_t v31 = v50;
    uint64_t v30 = v51;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v50, v9, v51);
    (*(void (**)(uint64_t, char *, uint64_t))(v22 + 16))((uint64_t)v4 + OBJC_IVAR____TtC8ShelfKit17ExternalUrlAction_url, v31, v30);
    int v32 = v54;
    sub_3D6B60();
    LOBYTE(v30) = sub_3D6A90();
    uint64_t v34 = v55;
    uint64_t v33 = v56;
    v55(v17, v56);
    *((unsigned char *)v4 + OBJC_IVAR____TtC8ShelfKit17ExternalUrlAction_isSensitive) = v30 & 1;
    uint64_t v35 = v44;
    sub_3D6B60();
    char v36 = sub_3D6A90();
    v34(v35, v33);
    *((unsigned char *)v4 + OBJC_IVAR____TtC8ShelfKit17ExternalUrlAction_requiresSignedInUser) = v36 & 1;
    swift_release();
    uint64_t v37 = v46;
    (*(void (**)(char *, char *, uint64_t))(v45 + 16))(v46, v32, v33);
    uint64_t v25 = (uint64_t)v47;
    uint64_t v39 = v52;
    uint64_t v38 = v53;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 16))(v47, v53, v52);
    uint64_t v40 = v49;
    uint64_t v41 = Action.init(deserializing:using:)(v37, v25);
    if (!v40) {
      uint64_t v25 = v41;
    }
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v38, v39);
    v55(v32, v56);
    (*(void (**)(char *, uint64_t))(v29 + 8))(v50, v51);
  }
  return v25;
}

uint64_t ExternalUrlAction.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC8ShelfKit17ExternalUrlAction_url;
  uint64_t v4 = sub_3D2350();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t ExternalUrlAction.isSensitive.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit17ExternalUrlAction_isSensitive);
}

uint64_t ExternalUrlAction.requiresSignedInUser.getter()
{
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC8ShelfKit17ExternalUrlAction_requiresSignedInUser);
}

void ExternalUrlAction.init(uniqueId:title:presentationStyle:actionMetrics:impressionMetrics:)()
{
}

uint64_t sub_3A3BFC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ShelfKit17ExternalUrlAction_url;
  uint64_t v2 = sub_3D2350();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(v1, v2);
}

uint64_t ExternalUrlAction.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  uint64_t v2 = sub_3D6F40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_250FC(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_4B9870);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8ShelfKit17ExternalUrlAction_url;
  uint64_t v4 = sub_3D2350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t ExternalUrlAction.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics;
  uint64_t v2 = sub_3D6F40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  sub_250FC(v0 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_4B9870);
  uint64_t v3 = v0 + OBJC_IVAR____TtC8ShelfKit17ExternalUrlAction_url;
  uint64_t v4 = sub_3D2350();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_3A3E54()
{
  return type metadata accessor for ExternalUrlAction();
}

uint64_t type metadata accessor for ExternalUrlAction()
{
  uint64_t result = qword_4C1090;
  if (!qword_4C1090) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3A3EA8()
{
  uint64_t result = sub_3D2350();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ExternalUrlAction(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ExternalUrlAction);
}

uint64_t dispatch thunk of ExternalUrlAction.__allocating_init(title:urlString:isSensitive:presentationStyle:requiresSignedInUser:)()
{
  return (*(uint64_t (**)(void))(v0 + 184))();
}

unint64_t static GroupedSearchResultsIntent.kind.getter()
{
  return 0xD00000000000001ALL;
}

uint64_t sub_3A3F8C(uint64_t a1)
{
  unint64_t v2 = sub_3A415C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_3A3FC8(uint64_t a1)
{
  unint64_t v2 = sub_3A415C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_3A4004(void *a1@<X8>)
{
  *a1 = 0xD00000000000001ALL;
  a1[1] = 0x80000000003F9F50;
}

uint64_t GroupedSearchResultsIntent.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C1178);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_3A415C();
  sub_3D91F0();
  sub_3D8F20();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_3A415C()
{
  unint64_t result = qword_4C1180;
  if (!qword_4C1180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C1180);
  }
  return result;
}

unint64_t sub_3A41B4()
{
  unint64_t result = qword_4C1188;
  if (!qword_4C1188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C1188);
  }
  return result;
}

unint64_t sub_3A4210()
{
  unint64_t result = qword_4C1190;
  if (!qword_4C1190)
  {
    type metadata accessor for GroupedSearchResultsPage();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C1190);
  }
  return result;
}

uint64_t sub_3A4268()
{
  return sub_3D75D0();
}

ValueMetadata *type metadata accessor for GroupedSearchResultsIntent()
{
  return &type metadata for GroupedSearchResultsIntent;
}

unsigned char *storeEnumTagSinglePayload for GroupedSearchResultsIntent.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x3A4374);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupedSearchResultsIntent.CodingKeys()
{
  return &type metadata for GroupedSearchResultsIntent.CodingKeys;
}

unint64_t sub_3A43B0()
{
  unint64_t result = qword_4C1198;
  if (!qword_4C1198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C1198);
  }
  return result;
}

unint64_t sub_3A4408()
{
  unint64_t result = qword_4C11A0;
  if (!qword_4C11A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C11A0);
  }
  return result;
}

unint64_t sub_3A4460()
{
  unint64_t result = qword_4C11A8;
  if (!qword_4C11A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C11A8);
  }
  return result;
}

unint64_t sub_3A44B4()
{
  unint64_t result = qword_4C11B0;
  if (!qword_4C11B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C11B0);
  }
  return result;
}

uint64_t static DefaultPaginationPageSizes.shows.getter()
{
  return sub_3A45BC(&qword_4A90B0, (uint64_t)&qword_4C11C0);
}

void sub_3A452C()
{
  id v0 = [self currentDevice];
  unint64_t v1 = (char *)[v0 userInterfaceIdiom];

  uint64_t v2 = 100;
  if (v1 == (unsigned char *)&dword_0 + 1) {
    uint64_t v2 = 200;
  }
  qword_4C11B8 = v2;
}

uint64_t static DefaultPaginationPageSizes.episodes.getter()
{
  return sub_3A45BC(&qword_4A90A8, (uint64_t)&qword_4C11B8);
}

uint64_t sub_3A45BC(void *a1, uint64_t a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  return *(void *)a2;
}

void sub_3A45F8()
{
  id v0 = [self currentDevice];
  unint64_t v1 = (char *)[v0 userInterfaceIdiom];

  uint64_t v2 = 50;
  if (v1 == (unsigned char *)&dword_0 + 1) {
    uint64_t v2 = 100;
  }
  qword_4C11C0 = v2;
}

ValueMetadata *type metadata accessor for DefaultPaginationPageSizes()
{
  return &type metadata for DefaultPaginationPageSizes;
}

uint64_t ViewModel.getImpressionMetrics(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3D7B60();
  uint64_t v13 = sub_3D7340();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_250FC((uint64_t)v12, (uint64_t *)&unk_4B9870);
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, a2);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4C11C8);
    if (swift_dynamicCast())
    {
      sub_18F70(v18, (uint64_t)v20);
      uint64_t v15 = v21;
      uint64_t v16 = v22;
      __swift_project_boxed_opaque_existential_1(v20, v21);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(a1, v15, v16);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    }
    else
    {
      uint64_t v19 = 0;
      memset(v18, 0, sizeof(v18));
      sub_250FC((uint64_t)v18, &qword_4C11D0);
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(a3, 1, 1, v13);
    }
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(a3, v12, v13);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v14 + 56))(a3, 0, 1, v13);
  }
}

uint64_t PodcastPlayActionImplementation.perform(_:asPartOf:)(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_4ABD88);
  __chkstk_darwin(v2 - 8);
  unsigned int v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3D2A90();
  sub_3D7170();
  sub_3D7970();
  uint64_t v5 = v10[1];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4BC3E0);
  uint64_t v6 = sub_3D7A60();
  sub_3D8170();
  uint64_t v7 = sub_3D81A0();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 0, 1, v7);
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = 0;
  v8[3] = 0;
  v8[4] = a1;
  v8[5] = v5;
  v8[6] = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_3A57E8((uint64_t)v4, (uint64_t)&unk_4C11E0, (uint64_t)v8);
  swift_release();
  swift_release();
  sub_C47C8((uint64_t)v4);
  return v6;
}

uint64_t sub_3A4A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[5] = a4;
  uint64_t v7 = sub_3D6F60();
  v6[8] = v7;
  v6[9] = *(void *)(v7 - 8);
  v6[10] = swift_task_alloc();
  uint64_t v8 = sub_3D5640();
  v6[11] = v8;
  v6[12] = *(void *)(v8 - 8);
  v6[13] = swift_task_alloc();
  v6[14] = swift_task_alloc();
  v6[15] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4B8DE8);
  v6[16] = swift_task_alloc();
  __swift_instantiateConcreteTypeFromMangledName(&qword_4A9CA0);
  v6[17] = swift_task_alloc();
  uint64_t v9 = sub_3D3FA0();
  v6[18] = v9;
  v6[19] = *(void *)(v9 - 8);
  v6[20] = swift_task_alloc();
  uint64_t v10 = sub_3D3DF0();
  v6[21] = v10;
  v6[22] = *(void *)(v10 - 8);
  v6[23] = swift_task_alloc();
  return _swift_task_switch(sub_3A4D0C, 0, 0);
}

uint64_t sub_3A4D0C()
{
  uint64_t v1 = v0[19];
  uint64_t v2 = (void *)v0[20];
  uint64_t v4 = v0[17];
  uint64_t v3 = v0[18];
  uint64_t v5 = v0[16];
  *uint64_t v2 = *(void *)(v0[5] + OBJC_IVAR____TtC8ShelfKit17PodcastPlayAction_showId);
  (*(void (**)(void *, void, uint64_t))(v1 + 104))(v2, enum case for MediaIdentifier.podcast(_:), v3);
  uint64_t v6 = sub_3D4780();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = sub_3D3620();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  sub_3D82A0();
  sub_3D3DC0();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[24] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_3A4EC8;
  uint64_t v9 = v0[23];
  return PlaybackController.performIntent(_:)(v9);
}

uint64_t sub_3A4EC8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 200) = a1;
  *(void *)(v3 + 208) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_3A5410;
  }
  else {
    uint64_t v4 = sub_3A5008;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_3A5008()
{
  id v1 = *(id *)(v0 + 200);
  if (v1)
  {
    id v2 = [*(id *)(v0 + 200) error];
    if (v2)
    {

      sub_3D5550();
      id v1 = v1;
      uint64_t v3 = sub_3D5630();
      os_log_type_t v4 = sub_3D83F0();
      if (os_log_type_enabled(v3, v4))
      {
        uint64_t v5 = (uint8_t *)swift_slowAlloc();
        uint64_t v6 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v5 = 138412290;
        if ([v1 error])
        {
          uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v0 + 32) = v7;
          sub_3D8930();
        }
        else
        {
          *(void *)(v0 + 24) = 0;
          sub_3D8930();
          uint64_t v7 = 0;
        }
        *uint64_t v6 = v7;

        _os_log_impl(&dword_0, v3, v4, "Unable to play intent %@", v5, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B24C0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v19 = *(void *)(v0 + 176);
      uint64_t v18 = *(void *)(v0 + 184);
      uint64_t v20 = *(void *)(v0 + 168);
      uint64_t v22 = *(void *)(v0 + 72);
      uint64_t v21 = *(void *)(v0 + 80);
      uint64_t v23 = *(void *)(v0 + 64);
      (*(void (**)(void, void))(*(void *)(v0 + 96) + 8))(*(void *)(v0 + 112), *(void *)(v0 + 88));
      uint64_t v24 = (unsigned int *)&enum case for ActionOutcome.unsupported(_:);
    }
    else
    {
      uint64_t v19 = *(void *)(v0 + 176);
      uint64_t v18 = *(void *)(v0 + 184);
      uint64_t v20 = *(void *)(v0 + 168);
      uint64_t v22 = *(void *)(v0 + 72);
      uint64_t v21 = *(void *)(v0 + 80);
      uint64_t v23 = *(void *)(v0 + 64);
      uint64_t v24 = (unsigned int *)&enum case for ActionOutcome.performed(_:);
    }
    (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v21, *v24, v23);
    sub_3D7A40();

    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
  }
  else
  {
    sub_3D5550();
    uint64_t v8 = sub_3D5630();
    uint64_t v9 = sub_3D83F0();
    if (os_log_type_enabled(v8, (os_log_type_t)v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl(&dword_0, v8, (os_log_type_t)v9, "Unable to play intent, no status", v10, 2u);
      swift_slowDealloc();
    }
    uint64_t v11 = *(void *)(v0 + 176);
    uint64_t v27 = *(void *)(v0 + 168);
    uint64_t v28 = *(void *)(v0 + 184);
    uint64_t v12 = *(void *)(v0 + 120);
    uint64_t v14 = *(void *)(v0 + 88);
    uint64_t v13 = *(void *)(v0 + 96);
    uint64_t v15 = *(void *)(v0 + 72);
    uint64_t v16 = *(void *)(v0 + 80);
    uint64_t v17 = *(void *)(v0 + 64);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    (*(void (**)(uint64_t, void, uint64_t))(v15 + 104))(v16, enum case for ActionOutcome.unsupported(_:), v17);
    sub_3D7A40();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v16, v17);
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v28, v27);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_3A5410()
{
  (*(void (**)(void, void))(v0[22] + 8))(v0[23], v0[21]);
  sub_3D5550();
  swift_errorRetain();
  swift_errorRetain();
  id v1 = sub_3D5630();
  os_log_type_t v2 = sub_3D83F0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v4 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 138412290;
    swift_errorRetain();
    uint64_t v5 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v5;
    sub_3D8930();
    *os_log_type_t v4 = v5;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v1, v2, "Unable to play intent: %@", v3, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B24C0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  uint64_t v6 = v0[10];
  uint64_t v7 = v0[8];
  uint64_t v8 = v0[9];
  (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v6, enum case for ActionOutcome.unsupported(_:), v7);
  sub_3D7A40();
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_3A56D0()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_3A5720(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_4F780;
  return sub_3A4A8C(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_3A57E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4ABD88);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3A5A54(a1, (uint64_t)v8);
  uint64_t v9 = sub_3D81A0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_C47C8((uint64_t)v8);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = sub_3D8130();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_3D8190();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    void v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

unint64_t sub_3A59D0()
{
  unint64_t result = qword_4B0110;
  if (!qword_4B0110)
  {
    type metadata accessor for PodcastPlayAction(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4B0110);
  }
  return result;
}

uint64_t sub_3A5A28(uint64_t *a1)
{
  return PodcastPlayActionImplementation.perform(_:asPartOf:)(*a1);
}

ValueMetadata *type metadata accessor for PodcastPlayActionImplementation()
{
  return &type metadata for PodcastPlayActionImplementation;
}

uint64_t sub_3A5A54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4ABD88);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_3A5ABC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_3A5AF4(uint64_t (*a1)(void))
{
  uint64_t result = a1();
  if (result) {
    return _swift_stdlib_bridgeErrorToNSError();
  }
  return result;
}

uint64_t FetchPageIntent.init(url:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_3D2350();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t static FetchPageIntent.kind.getter()
{
  return 0x6761506863746546;
}

uint64_t FetchActionIntent.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_3D2350();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_3A5C20()
{
  return 7107189;
}

uint64_t sub_3A5C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_3D8FE0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_3A5CB8(uint64_t a1)
{
  unint64_t v2 = sub_3A5ECC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_3A5CF4(uint64_t a1)
{
  unint64_t v2 = sub_3A5ECC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_3A5D30(void *a1@<X8>)
{
  *a1 = 0x6761506863746546;
  a1[1] = 0xEF746E65746E4965;
}

uint64_t FetchPageIntent.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C11F0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_3A5ECC();
  sub_3D91F0();
  sub_3D2350();
  sub_1F87AC(&qword_4AE9E8, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_3D8F50();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_3A5ECC()
{
  unint64_t result = qword_4C11F8;
  if (!qword_4C11F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C11F8);
  }
  return result;
}

uint64_t sub_3A5F20()
{
  return sub_1F87AC(&qword_4C1200, (void (*)(uint64_t))type metadata accessor for FetchPageIntent);
}

uint64_t type metadata accessor for FetchPageIntent()
{
  uint64_t result = qword_4C1260;
  if (!qword_4C1260) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3A5FB4()
{
  return sub_1F87AC(&qword_4B4798, (void (*)(uint64_t))type metadata accessor for FetchPageIntent);
}

uint64_t sub_3A5FFC()
{
  return sub_1F87AC((unint64_t *)&qword_4AAC68, (void (*)(uint64_t))type metadata accessor for Page);
}

uint64_t sub_3A6044()
{
  return sub_3D75D0();
}

uint64_t initializeBufferWithCopyOfBuffer for FetchPageIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3D2350();
  char v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for FetchPageIntent(uint64_t a1)
{
  uint64_t v2 = sub_3D2350();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for FetchPageIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3D2350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for FetchPageIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3D2350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for FetchPageIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3D2350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for FetchPageIntent(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3D2350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchPageIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3A6348);
}

uint64_t sub_3A6348(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3D2350();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FetchPageIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3A63C8);
}

uint64_t sub_3A63C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3D2350();
  char v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_3A6438()
{
  uint64_t result = sub_3D2350();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FetchPageIntent.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x3A6560);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchPageIntent.CodingKeys()
{
  return &type metadata for FetchPageIntent.CodingKeys;
}

unint64_t sub_3A659C()
{
  unint64_t result = qword_4C1298;
  if (!qword_4C1298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C1298);
  }
  return result;
}

unint64_t sub_3A65F4()
{
  unint64_t result = qword_4C12A0;
  if (!qword_4C12A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C12A0);
  }
  return result;
}

unint64_t sub_3A664C()
{
  unint64_t result = qword_4C12A8;
  if (!qword_4C12A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C12A8);
  }
  return result;
}

void *NetworkObserver.__allocating_init()()
{
  id v0 = [self sharedInstance];
  type metadata accessor for NetworkObserver();
  unint64_t v1 = (void *)swift_allocObject();

  return sub_3A7BDC(v0, v1);
}

uint64_t type metadata accessor for NetworkObserver()
{
  return self;
}

uint64_t NetworkObserver.remoteServerReachabilityPublisher.getter()
{
  return sub_3D5AC0();
}

void *NetworkObserver.__allocating_init(asPartOf:)()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_4ADAD8);
  sub_3D70B0();
  swift_getObjectType();
  id v0 = sub_3A7B8C(v2);
  swift_release();
  return v0;
}

uint64_t sub_3A67E4@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  switch(result)
  {
    case 1:
      *a2 = 1;
      break;
    case 2:
      *a2 = 2;
      break;
    case 3:
      *a2 = 3;
      break;
    case 4:
      *a2 = 4;
      break;
    case 5:
      *a2 = 5;
      break;
    case 6:
      *a2 = 6;
      break;
    case 7:
      *a2 = 7;
      break;
    case 8:
      *a2 = 8;
      break;
    default:
      if (result == 1000) {
        char v2 = 9;
      }
      else {
        char v2 = 0;
      }
      *a2 = v2;
      break;
  }
  return result;
}

unint64_t NetworkObserver.NetworkError.errorDescription.getter()
{
  return 0xD00000000000002ELL;
}

uint64_t NetworkObserver.deinit()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  swift_unknownObjectRelease();
  sub_8CED8(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);
  return v0;
}

uint64_t NetworkObserver.__deallocating_deinit()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  swift_unknownObjectRelease();
  sub_8CED8(v0 + 24);
  __swift_destroy_boxed_opaque_existential_1(v0 + 40);

  return swift_deallocClassInstance();
}

uint64_t sub_3A69B8()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_3A6A00(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  *(void *)(v2 + 32) = a2;
  swift_unknownObjectWeakAssign();
  return swift_unknownObjectRelease();
}

void (*sub_3A6A64(void *a1))(uint64_t a1, char a2)
{
  int v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = *(void *)(v1 + 32);
  v3[3] = Strong;
  v3[4] = v5;
  return sub_3A6AE4;
}

void sub_3A6AE4(uint64_t a1, char a2)
{
  int v3 = *(void **)a1;
  *(void *)(*(void *)(*(void *)a1 + 40) + 32) = *(void *)(*(void *)a1 + 32);
  swift_unknownObjectWeakAssign();
  if (a2)
  {
    swift_unknownObjectRelease();
    swift_endAccess();
  }
  else
  {
    swift_endAccess();
    swift_unknownObjectRelease();
  }

  free(v3);
}

uint64_t sub_3A6B68(uint64_t a1, void *a2)
{
  sub_18168(a1, (uint64_t)v5);
  uint64_t v3 = *a2 + 40;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_18F70(v5, v3);
  return swift_endAccess();
}

uint64_t sub_3A6BD0@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_18168(v1 + 40, a1);
}

uint64_t sub_3A6C1C(long long *a1)
{
  uint64_t v3 = v1 + 40;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_18F70(a1, v3);
  return swift_endAccess();
}

uint64_t sub_3A6C78(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    a2();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_3A6CEC@<X0>(char *a1@<X8>)
{
  id v3 = [*(id *)(v1 + 16) networkType];

  return sub_3A67E4((uint64_t)v3, a1);
}

id sub_3A6D30()
{
  return [*(id *)(v0 + 16) networkReachabilityFlags];
}

id sub_3A6D40()
{
  return [self isLikelyToReachRemoteServerWithReachabilityFlags:[*(id *)(v0 + 16) networkReachabilityFlags]];
}

uint64_t sub_3A6D90(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 8))(ObjectType, a2);
}

uint64_t SCNetworkReachabilityFlags.debugSummary.getter(int a1)
{
  if ((a1 & 1) == 0)
  {
    uint64_t v2 = _swiftEmptyArrayStorage;
    if ((a1 & 2) == 0) {
      goto LABEL_12;
    }
    goto LABEL_7;
  }
  uint64_t v2 = sub_12B64(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v4 = v2[2];
  unint64_t v3 = v2[3];
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_12B64((void *)(v3 > 1), v4 + 1, 1, v2);
  }
  v2[2] = v4 + 1;
  uint64_t v5 = &v2[2 * v4];
  void v5[4] = 0xD000000000000014;
  v5[5] = 0x800000000040B370;
  if ((a1 & 2) != 0)
  {
LABEL_7:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_12B64(0, v2[2] + 1, 1, v2);
    }
    unint64_t v7 = v2[2];
    unint64_t v6 = v2[3];
    if (v7 >= v6 >> 1) {
      uint64_t v2 = sub_12B64((void *)(v6 > 1), v7 + 1, 1, v2);
    }
    v2[2] = v7 + 1;
    uint64_t v8 = &v2[2 * v7];
    v8[4] = 0x626168636165722ELL;
    v8[5] = 0xEA0000000000656CLL;
  }
LABEL_12:
  if ((a1 & 4) != 0)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_12B64(0, v2[2] + 1, 1, v2);
    }
    unint64_t v10 = v2[2];
    unint64_t v9 = v2[3];
    if (v10 >= v9 >> 1) {
      uint64_t v2 = sub_12B64((void *)(v9 > 1), v10 + 1, 1, v2);
    }
    v2[2] = v10 + 1;
    uint64_t v11 = &v2[2 * v10];
    v11[4] = 0xD000000000000013;
    uint64_t v11[5] = 0x800000000040B350;
    if ((a1 & 8) == 0)
    {
LABEL_14:
      if ((a1 & 0x10) == 0) {
        goto LABEL_15;
      }
      goto LABEL_31;
    }
  }
  else if ((a1 & 8) == 0)
  {
    goto LABEL_14;
  }
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_12B64(0, v2[2] + 1, 1, v2);
  }
  unint64_t v13 = v2[2];
  unint64_t v12 = v2[3];
  if (v13 >= v12 >> 1) {
    uint64_t v2 = sub_12B64((void *)(v12 > 1), v13 + 1, 1, v2);
  }
  v2[2] = v13 + 1;
  uint64_t v14 = &v2[2 * v13];
  v14[4] = 0xD000000000000014;
  v14[5] = 0x800000000040B330;
  if ((a1 & 0x10) == 0)
  {
LABEL_15:
    if ((a1 & 0x20) == 0) {
      goto LABEL_16;
    }
    goto LABEL_36;
  }
LABEL_31:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_12B64(0, v2[2] + 1, 1, v2);
  }
  unint64_t v16 = v2[2];
  unint64_t v15 = v2[3];
  if (v16 >= v15 >> 1) {
    uint64_t v2 = sub_12B64((void *)(v15 > 1), v16 + 1, 1, v2);
  }
  v2[2] = v16 + 1;
  uint64_t v17 = &v2[2 * v16];
  uint64_t v17[4] = 0xD000000000000015;
  v17[5] = 0x800000000040B310;
  if ((a1 & 0x20) == 0)
  {
LABEL_16:
    if ((a1 & 0x10000) == 0) {
      goto LABEL_17;
    }
    goto LABEL_41;
  }
LABEL_36:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_12B64(0, v2[2] + 1, 1, v2);
  }
  unint64_t v19 = v2[2];
  unint64_t v18 = v2[3];
  if (v19 >= v18 >> 1) {
    uint64_t v2 = sub_12B64((void *)(v18 > 1), v19 + 1, 1, v2);
  }
  v2[2] = v19 + 1;
  uint64_t v20 = &v2[2 * v19];
  v20[4] = 0xD000000000000013;
  v20[5] = 0x800000000040B2F0;
  if ((a1 & 0x10000) == 0)
  {
LABEL_17:
    if ((a1 & 0x20000) == 0) {
      goto LABEL_18;
    }
    goto LABEL_46;
  }
LABEL_41:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_12B64(0, v2[2] + 1, 1, v2);
  }
  unint64_t v22 = v2[2];
  unint64_t v21 = v2[3];
  if (v22 >= v21 >> 1) {
    uint64_t v2 = sub_12B64((void *)(v21 > 1), v22 + 1, 1, v2);
  }
  v2[2] = v22 + 1;
  uint64_t v23 = &v2[2 * v22];
  v23[4] = 0x6C61636F4C73692ELL;
  uint64_t v23[5] = 0xEF73736572646441;
  if ((a1 & 0x20000) == 0)
  {
LABEL_18:
    if ((a1 & 0x40000) == 0) {
      goto LABEL_19;
    }
    goto LABEL_51;
  }
LABEL_46:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_12B64(0, v2[2] + 1, 1, v2);
  }
  unint64_t v25 = v2[2];
  unint64_t v24 = v2[3];
  if (v25 >= v24 >> 1) {
    uint64_t v2 = sub_12B64((void *)(v24 > 1), v25 + 1, 1, v2);
  }
  v2[2] = v25 + 1;
  uint64_t v26 = &v2[2 * v25];
  uint64_t v26[4] = 0x636572694473692ELL;
  v26[5] = 0xE900000000000074;
  if ((a1 & 0x40000) == 0)
  {
LABEL_19:
    if ((a1 & 8) == 0) {
      goto LABEL_61;
    }
    goto LABEL_56;
  }
LABEL_51:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_12B64(0, v2[2] + 1, 1, v2);
  }
  unint64_t v28 = v2[2];
  unint64_t v27 = v2[3];
  if (v28 >= v27 >> 1) {
    uint64_t v2 = sub_12B64((void *)(v27 > 1), v28 + 1, 1, v2);
  }
  v2[2] = v28 + 1;
  uint64_t v29 = &v2[2 * v28];
  v29[4] = 0x4E41575773692ELL;
  uint64_t v29[5] = 0xE700000000000000;
  if ((a1 & 8) != 0)
  {
LABEL_56:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v2 = sub_12B64(0, v2[2] + 1, 1, v2);
    }
    unint64_t v31 = v2[2];
    unint64_t v30 = v2[3];
    if (v31 >= v30 >> 1) {
      uint64_t v2 = sub_12B64((void *)(v30 > 1), v31 + 1, 1, v2);
    }
    v2[2] = v31 + 1;
    int v32 = &v2[2 * v31];
    v32[4] = 0xD000000000000014;
    v32[5] = 0x800000000040B2D0;
  }
LABEL_61:
  __swift_instantiateConcreteTypeFromMangledName(&qword_4AAF50);
  sub_3465C();
  uint64_t v33 = sub_3D7C60();
  uint64_t v35 = v34;
  swift_bridgeObjectRelease();
  v37._countAndFlagsBits = v33;
  v37._object = v35;
  sub_3D7E90(v37);
  swift_bridgeObjectRelease();
  v38._countAndFlagsBits = 93;
  v38._object = (void *)0xE100000000000000;
  sub_3D7E90(v38);
  return 91;
}

uint64_t sub_3A7498(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for NetworkObserver.NetworkObserverSubscription();
  uint64_t v3 = swift_retain();
  unint64_t v4 = sub_3A8644(v3, a1);
  swift_release();
  v6[3] = v2;
  void v6[4] = swift_getWitnessTable();
  v6[0] = v4;
  sub_3D57A0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_3A7550(uint64_t a1)
{
  return sub_3A7498(a1);
}

uint64_t sub_3A7560()
{
  uint64_t v1 = *(void *)(*v0 + 80);
  uint64_t v2 = sub_3D8910();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v9[-v4];
  uint64_t v6 = v0[2];
  swift_beginAccess();
  *(void *)(v6 + 32) = 0;
  swift_unknownObjectWeakAssign();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 56))(v5, 1, 1, v1);
  unint64_t v7 = (char *)v0 + *(void *)(*v0 + 112);
  swift_beginAccess();
  (*(void (**)(char *, unsigned char *, uint64_t))(v3 + 40))(v7, v5, v2);
  return swift_endAccess();
}

uint64_t sub_3A76DC(uint64_t a1)
{
  uint64_t v18 = *v1;
  uint64_t v2 = *(void *)(v18 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(a1);
  unint64_t v19 = (char *)&v18 - v4;
  uint64_t v5 = sub_3D8910();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v18 - v10;
  unsigned __int8 v12 = [self isLikelyToReachRemoteServerWithReachabilityFlags:[v1[2] networkReachabilityFlags:v18]];
  uint64_t v13 = (uint64_t)v1 + *(void *)(*v1 + 112);
  uint64_t v14 = (void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  unint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v12)
  {
    swift_beginAccess();
    (*v14)(v8, v13, v5);
    if ((*v15)(v8, 1, v2)) {
      return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
    uint64_t v17 = v19;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v19, v8, v2);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v20 = 1;
    goto LABEL_9;
  }
  swift_beginAccess();
  (*v14)(v11, v13, v5);
  if (!(*v15)(v11, 1, v2))
  {
    uint64_t v17 = v19;
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v19, v11, v2);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
    char v20 = [(id)v1[3] isEnabled] ^ 1;
LABEL_9:
    sub_3D57B0();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v17, v2);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
}

id *sub_3A7A54()
{
  swift_release();

  uint64_t v1 = (char *)v0 + *((void *)*v0 + 14);
  uint64_t v2 = sub_3D8910();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_3A7AEC()
{
  sub_3A7A54();

  return swift_deallocClassInstance();
}

uint64_t sub_3A7B44()
{
  return sub_3A7560();
}

uint64_t sub_3A7B68()
{
  return sub_3D56B0();
}

void *sub_3A7B8C(uint64_t a1)
{
  type metadata accessor for NetworkObserver();
  uint64_t v2 = (void *)swift_allocObject();

  return sub_3A8334(a1, v2);
}

void *sub_3A7BDC(void *a1, void *a2)
{
  a2[4] = 0;
  swift_unknownObjectWeakInit();
  unint64_t v4 = sub_8349C();
  uint64_t v5 = sub_3D8560();
  a2[8] = v4;
  a2[9] = &protocol witness table for OS_dispatch_queue;
  a2[5] = v5;
  a2[2] = a1;
  uint64_t v6 = self;
  swift_unknownObjectRetain();
  id v7 = [v6 defaultCenter];
  uint64_t v8 = IMNetworkReachabilityFlagsChangedNotification;
  swift_retain();
  [v7 addObserver:a2 selector:"networkReachabilityDidChange" name:v8 object:a1];

  swift_release();
  return a2;
}

unint64_t sub_3A7CCC()
{
  unint64_t result = qword_4C12B8;
  if (!qword_4C12B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C12B8);
  }
  return result;
}

unint64_t sub_3A7D24()
{
  unint64_t result = qword_4C12C0;
  if (!qword_4C12C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C12C0);
  }
  return result;
}

unint64_t sub_3A7D7C()
{
  unint64_t result = qword_4C12C8;
  if (!qword_4C12C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C12C8);
  }
  return result;
}

uint64_t sub_3A7DD0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = *(void *)(v3 + 32);
  *a2 = result;
  a2[1] = v5;
  return result;
}

uint64_t sub_3A7E2C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = *a2;
  swift_beginAccess();
  *(void *)(v3 + 32) = v2;
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_3A7E88@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1 + 40;
  swift_beginAccess();
  return sub_18168(v3, a2);
}

uint64_t dispatch thunk of NetworkObserverDelegate.networkReachabilityDidChange()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for NetworkObserver(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for NetworkObserver);
}

uint64_t dispatch thunk of NetworkObserver.delegate.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of NetworkObserver.delegate.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of NetworkObserver.delegate.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of NetworkObserver.delegateScheduler.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of NetworkObserver.delegateScheduler.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of NetworkObserver.delegateScheduler.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of NetworkObserver.networkType.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of NetworkObserver.networkReachabilityFlags.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of NetworkObserver.isLikelyToReachRemoteServer.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

unsigned char *storeEnumTagSinglePayload for NetworkObserver.NetworkType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *uint64_t result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3A8118);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkObserver.NetworkType()
{
  return &type metadata for NetworkObserver.NetworkType;
}

unsigned char *storeEnumTagSinglePayload for NetworkObserver.NetworkError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x3A81ECLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for NetworkObserver.NetworkError()
{
  return &type metadata for NetworkObserver.NetworkError;
}

uint64_t sub_3A8224()
{
  uint64_t result = sub_3D8910();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for NetworkObserver.NetworkObserverSubscription()
{
  return __swift_instantiateGenericMetadata();
}

ValueMetadata *type metadata accessor for NetworkObserver.NetworkObserverPublisher()
{
  return &type metadata for NetworkObserver.NetworkObserverPublisher;
}

uint64_t sub_3A82FC()
{
  return swift_getWitnessTable();
}

uint64_t sub_3A8318()
{
  return swift_getWitnessTable();
}

void *sub_3A8334(uint64_t a1, void *a2)
{
  a2[4] = 0;
  swift_unknownObjectWeakInit();
  unint64_t v4 = sub_8349C();
  uint64_t v5 = sub_3D8560();
  a2[8] = v4;
  a2[9] = &protocol witness table for OS_dispatch_queue;
  a2[5] = v5;
  a2[2] = a1;
  unsigned int v6 = self;
  swift_unknownObjectRetain();
  id v7 = [v6 defaultCenter];
  uint64_t v8 = IMNetworkReachabilityFlagsChangedNotification;
  swift_retain();
  [v7 addObserver:a2 selector:"networkReachabilityDidChange" name:v8 object:a1];

  swift_release();
  swift_unknownObjectRelease();
  return a2;
}

char *sub_3A8424(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  uint64_t v6 = sub_3D8910();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - v8;
  *((void *)v2 + 3) = [objc_allocWithZone((Class)ASKAirplaneModeInquiry) init];
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v11(&v2[*(void *)(*(void *)v2 + 112)], 1, 1, v5);
  *((void *)v2 + 2) = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v9, a2, v5);
  v11(v9, 0, 1, v5);
  unsigned __int8 v12 = &v2[*(void *)(*(void *)v2 + 112)];
  swift_beginAccess();
  uint64_t v13 = *(void (**)(char *, char *, uint64_t))(v7 + 40);
  swift_retain();
  v13(v12, v9, v6);
  swift_endAccess();
  swift_beginAccess();
  *(void *)(a1 + 32) = &off_487860;
  swift_unknownObjectWeakAssign();
  return v2;
}

char *sub_3A8644(uint64_t a1, uint64_t a2)
{
  return sub_3A8424(a1, a2);
}

uint64_t sub_3A8698()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_3A86D8()
{
  return sub_3A6C78(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

uint64_t EpisodeListType.title.getter()
{
  sub_2360C8(v0, (uint64_t)&v8._object);
  uint64_t v1 = 0;
  switch(v16)
  {
    case 1:
    case 4:
    case 6:
    case 7:
    case 8:
      return v1;
    case 2:
    case 3:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v8._countAndFlagsBits = 0xE000000000000000;
      v3._countAndFlagsBits = 0x5345444F53495045;
      v3._object = (void *)0xE800000000000000;
      goto LABEL_12;
    case 5:
      goto LABEL_11;
    case 9:
      uint64_t v4 = v12 | v11 | v10;
      if (!(v14 | v15 | (uint64_t)v8._object | v13 | v4 | v9))
      {
        uint64_t v2 = (objc_class *)[self mainBundle];
        v8._countAndFlagsBits = 0xE000000000000000;
        v3._object = (void *)0x800000000040B3F0;
        v3._countAndFlagsBits = 0xD000000000000013;
        goto LABEL_12;
      }
      uint64_t v5 = v14 | v15 | v13 | v4 | v9;
      if (v8._object == (char *)&dword_0 + 1 && !v5)
      {
        uint64_t v2 = (objc_class *)[self mainBundle];
        v3._countAndFlagsBits = 0xD000000000000018;
        v8._countAndFlagsBits = 0xE000000000000000;
        v3._object = (void *)0x80000000004004C0;
LABEL_12:
        v17.value._countAndFlagsBits = 0;
        v17.value._object = 0;
        v6.super.Class isa = v2;
        v18._countAndFlagsBits = 0;
        v18._object = (void *)0xE000000000000000;
        uint64_t v1 = sub_3D2060(v3, v17, v6, v18, v8);

        return v1;
      }
      if (v8._object == (char *)&dword_0 + 2 && !v5)
      {
LABEL_11:
        uint64_t v2 = (objc_class *)[self mainBundle];
        v8._countAndFlagsBits = 0xE000000000000000;
        v3._countAndFlagsBits = 0x5458454E5F5055;
        v3._object = (void *)0xE700000000000000;
        goto LABEL_12;
      }
      if (v8._object == (char *)&dword_0 + 3 && !v5)
      {
        uint64_t v2 = (objc_class *)[self mainBundle];
        v8._countAndFlagsBits = 0xE000000000000000;
        v3._countAndFlagsBits = 0x455F54534554414CLL;
        v3._object = (void *)0xEF5345444F534950;
        goto LABEL_12;
      }
      uint64_t v1 = 0;
      if (v8._object == &dword_4 && !v5)
      {
        uint64_t v2 = (objc_class *)[self mainBundle];
        v8._countAndFlagsBits = 0xE000000000000000;
        v3._countAndFlagsBits = 0x41535F454C544954;
        v3._object = (void *)0xEB00000000444556;
        goto LABEL_12;
      }
      return v1;
    default:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v8._countAndFlagsBits = 0xE000000000000000;
      v3._countAndFlagsBits = 0x554F595F4D4F5246;
      v3._object = (void *)0xEF53574F48535F52;
      goto LABEL_12;
  }
}

uint64_t EpisodeListType.shelfItemKind.getter()
{
  sub_2360C8(v0, (uint64_t)&v4);
  uint64_t result = 9;
  switch(v12)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
    case 8:
      return result;
    case 5:
      if ((v4 & 0x100) != 0) {
        uint64_t result = 4;
      }
      else {
        uint64_t result = 8;
      }
      break;
    case 9:
      uint64_t v2 = v8 | v7 | v6;
      if (!(v10 | v11 | v4 | v9 | v2 | v5)) {
        goto LABEL_11;
      }
      uint64_t v3 = v10 | v11 | v9 | v2 | v5;
      if (v4 == 1 && !v3) {
        goto LABEL_11;
      }
      if (v4 != 2 || v3) {
        goto LABEL_11;
      }
      uint64_t result = 3;
      break;
    default:
LABEL_11:
      uint64_t result = 4;
      break;
  }
  return result;
}

uint64_t EpisodeListType.desiredClickActionType.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  sub_2360C8(v1, (uint64_t)v19);
  __int16 v4 = v19[0];
  uint64_t v5 = sub_3D3630();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_2360C8(v2, (uint64_t)v20);
  char v10 = 4;
  if (v20[64] == 5)
  {
    if ((v4 & 0x100) != 0) {
      char v11 = 4;
    }
    else {
      char v11 = 8;
    }
    if (ModernShelf.ItemKind.rawValue.getter(v11) != 0x4865646F73697065 || v12 != 0xEB000000006F7265) {
      sub_3D8FE0();
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = sub_3D3610();
    v18[3] = v14;
    v18[4] = sub_111304();
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v18);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v14 - 8) + 104))(boxed_opaque_existential_2Tm, enum case for Podcasts.upNextTapToShowDetailExperiment(_:), v14);
    LOBYTE(v14) = sub_3D3580();
    uint64_t result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
    if (v14)
    {
      char v10 = 3;
    }
    else
    {
      (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for PodcastsBagFeatureFlags.Key.upNextTapToShowDetail(_:), v5);
      char v16 = sub_3D3640();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if (v16) {
        char v10 = 3;
      }
      else {
        char v10 = 1;
      }
    }
  }
  *a1 = v10;
  return result;
}

uint64_t EpisodeSortType.imageForSort(with:)@<X0>(uint64_t a1@<X8>)
{
  if (sub_3D3F40() & 1) != 0 && (sub_3D3F20())
  {
    uint64_t v2 = (objc_class *)[self mainBundle];
    v13._countAndFlagsBits = 0xE000000000000000;
    v15._object = (void *)0x80000000003FFE80;
    v15._countAndFlagsBits = 0xD000000000000021;
    v17.value._countAndFlagsBits = 0;
    v17.value._object = 0;
    v3.super.Class isa = v2;
    v19._countAndFlagsBits = 0;
    v19._object = (void *)0xE000000000000000;
    sub_3D2060(v15, v17, v3, v19, v13);

LABEL_7:
    sub_3D3850();
    uint64_t v6 = sub_3D3860();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a1;
    uint64_t v10 = 0;
    goto LABEL_9;
  }
  if (sub_3D3F50() & 1) != 0 && (sub_3D3F20())
  {
    __int16 v4 = (objc_class *)[self mainBundle];
    v13._countAndFlagsBits = 0xE000000000000000;
    v16._object = (void *)0x80000000003FFEB0;
    v16._countAndFlagsBits = 0xD000000000000021;
    v18.value._countAndFlagsBits = 0;
    v18.value._object = 0;
    v5.super.Class isa = v4;
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    sub_3D2060(v16, v18, v5, v20, v13);

    goto LABEL_7;
  }
  uint64_t v11 = sub_3D3860();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  uint64_t v8 = v11;
  uint64_t v9 = a1;
  uint64_t v10 = 1;
LABEL_9:

  return v7(v9, v10, 1, v8);
}

uint64_t EpisodeSortType.displayTitle.getter(char a1)
{
  uint64_t v1 = 0;
  switch(a1)
  {
    case 4:
    case 5:
    case 6:
    case 12:
    case 13:
    case 15:
    case 16:
      return v1;
    case 7:
    case 8:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v3._countAndFlagsBits = 0xD00000000000001ELL;
      v8._countAndFlagsBits = 0xEA00000000006465;
      v3._object = (void *)0x800000000040B480;
      v4.value._countAndFlagsBits = 0;
      v4.value._object = 0;
      v5.super.Class isa = v2;
      v6._countAndFlagsBits = 0;
      v6._object = (void *)0xE000000000000000;
      goto LABEL_7;
    case 9:
    case 10:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v3._countAndFlagsBits = 0xD000000000000023;
      v8._countAndFlagsBits = 0xEF646564616F6C6ELL;
      v3._object = (void *)0x800000000040B450;
      v4.value._countAndFlagsBits = 0;
      v4.value._object = 0;
      v5.super.Class isa = v2;
      v6._countAndFlagsBits = 0;
      v6._object = (void *)0xE000000000000000;
      goto LABEL_7;
    case 11:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v3._countAndFlagsBits = 0xD00000000000001BLL;
      v8._countAndFlagsBits = 0xE500000000000000;
      v3._object = (void *)0x800000000040B430;
      v4.value._countAndFlagsBits = 0;
      v4.value._object = 0;
      v5.super.Class isa = v2;
      v6._countAndFlagsBits = 0;
      v6._object = (void *)0xE000000000000000;
      goto LABEL_7;
    case 14:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v8._countAndFlagsBits = 0xED0000776F685320;
      v3._object = (void *)0x800000000040B410;
      v3._countAndFlagsBits = 0xD000000000000018;
      v4.value._countAndFlagsBits = 0;
      v4.value._object = 0;
      v5.super.Class isa = v2;
      v6._countAndFlagsBits = 0;
      v6._object = (void *)0xE000000000000000;
      goto LABEL_7;
    default:
      uint64_t v2 = (objc_class *)[self mainBundle];
      v3._countAndFlagsBits = 0xD000000000000022;
      v8._countAndFlagsBits = 0xEE0064656873696CLL;
      v3._object = (void *)0x80000000003FFE10;
      v4.value._countAndFlagsBits = 0;
      v4.value._object = 0;
      v5.super.Class isa = v2;
      v6._countAndFlagsBits = 0;
      v6._object = (void *)0xE000000000000000;
LABEL_7:
      uint64_t v1 = sub_3D2060(v3, v4, v5, v6, v8);

      return v1;
  }
}

uint64_t EpisodeListType.groupedFlowDestination(podcastUUID:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  sub_2360C8(v4, (uint64_t)&v13);
  if (v21 != 9) {
    goto LABEL_6;
  }
  uint64_t v8 = v17 | v16 | v15;
  if (!(v19 | v20 | v13 | v18 | v8 | v14))
  {
    *(void *)a3 = a1;
    *(void *)(a3 + 8) = a2;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)(a3 + 48) = 0u;
    char v9 = 1;
    goto LABEL_8;
  }
  if (v13 != 4 || v19 | v20 | v18 | v8 | v14)
  {
LABEL_6:
    uint64_t v10 = type metadata accessor for FlowDestination();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a3, 1, 1, v10);
  }
  *(void *)a3 = a1;
  *(void *)(a3 + 8) = a2;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  char v9 = 6;
LABEL_8:
  *(unsigned char *)(a3 + 64) = v9;
  uint64_t v12 = type metadata accessor for FlowDestination();
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(a3, 0, 1, v12);
  return swift_bridgeObjectRetain();
}

double EpisodeListType.singleShowListType(showUuid:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  sub_2360C8(v4, (uint64_t)&v13);
  if (v21 == 9)
  {
    uint64_t v8 = v17 | v16 | v15;
    if (!(v19 | v20 | v13 | v18 | v8 | v14))
    {
      char v10 = 1;
      goto LABEL_8;
    }
    uint64_t v9 = 0;
    char v10 = -1;
    if (v13 != 4)
    {
      uint64_t v11 = 0;
      goto LABEL_9;
    }
    uint64_t v11 = 0;
    if (!(v19 | v20 | v18 | v8 | v14))
    {
      char v10 = 6;
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v9 = a1;
      uint64_t v11 = a2;
    }
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v11 = 0;
    char v10 = -1;
  }
LABEL_9:
  *(void *)a3 = v9;
  *(void *)(a3 + 8) = v11;
  double result = 0.0;
  *(_OWORD *)(a3 + 16) = 0u;
  *(_OWORD *)(a3 + 32) = 0u;
  *(_OWORD *)(a3 + 48) = 0u;
  *(unsigned char *)(a3 + 64) = v10;
  return result;
}

uint64_t EpisodeListType.groupedShowListType(hidePlayedEpisodes:)(char a1)
{
  sub_2360C8(v1, (uint64_t)&v7);
  if (v15 != 9) {
    return 0;
  }
  uint64_t v3 = v11 | v10 | v9;
  if (!(v13 | v14 | v7 | v12 | v3 | v8))
  {
    BOOL v5 = (a1 & 1) == 0;
    uint64_t v6 = 3;
LABEL_8:
    if (v5) {
      return v6;
    }
    else {
      return v6 + 1;
    }
  }
  uint64_t result = 0;
  if (v7 == 4 && !(v13 | v14 | v12 | v3 | v8))
  {
    BOOL v5 = (a1 & 1) == 0;
    uint64_t v6 = 5;
    goto LABEL_8;
  }
  return result;
}

uint64_t EpisodeListType.groupedShowLockupStyle(hidePlayedEpisodes:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  sub_2360C8(v3, (uint64_t)v19);
  uint64_t v7 = v19[0];
  uint64_t v6 = v19[1];
  uint64_t v9 = v19[2];
  uint64_t v8 = v19[3];
  uint64_t v11 = v19[4];
  uint64_t v10 = v19[5];
  uint64_t v12 = v19[6];
  uint64_t v17 = v19[7];
  char v18 = v20;
  uint64_t result = sub_2360C8(v3, (uint64_t)&v21);
  if (v29 != 9) {
    goto LABEL_6;
  }
  uint64_t v14 = v25 | v24 | v23;
  if (!(v27 | v28 | v21 | v26 | v14 | v22))
  {
    BOOL v15 = (a1 & 1) == 0;
    uint64_t v16 = 8;
    goto LABEL_8;
  }
  if (v21 != 4 || v27 | v28 | v26 | v14 | v22)
  {
LABEL_6:
    *(void *)a2 = 2;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    *(_OWORD *)(a2 + 56) = 0u;
    *(_OWORD *)(a2 + 65) = 0u;
    return result;
  }
  BOOL v15 = (a1 & 1) == 0;
  uint64_t v16 = 10;
LABEL_8:
  if (!v15) {
    ++v16;
  }
  *(void *)a2 = (65792 * v16) | 0x10000000;
  *(void *)(a2 + 8) = (v16 << 8) | 0x10101010100000;
  *(void *)(a2 + 16) = v7;
  *(void *)(a2 + 24) = v6;
  *(void *)(a2 + 32) = v9;
  *(void *)(a2 + 40) = v8;
  *(void *)(a2 + 48) = v11;
  *(void *)(a2 + 56) = v10;
  *(void *)(a2 + 64) = v12;
  *(void *)(a2 + 72) = v17;
  *(unsigned char *)(a2 + 80) = v18;
  return result;
}

uint64_t EpisodeListType.shelfItemPresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_2360C8(v1, (uint64_t)&v7);
  char v4 = 9;
  switch(v15)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 6:
    case 7:
    case 8:
      break;
    case 5:
      if ((v7 & 0x100) != 0) {
        char v4 = 4;
      }
      else {
        char v4 = 8;
      }
      break;
    case 9:
      uint64_t v5 = v11 | v10 | v9;
      if (!(v13 | v14 | v7 | v12 | v5 | v8)) {
        goto LABEL_11;
      }
      uint64_t v6 = v13 | v14 | v12 | v5 | v8;
      if (v7 == 1 && !v6) {
        goto LABEL_11;
      }
      if (v7 != 2 || v6) {
        goto LABEL_11;
      }
      char v4 = 3;
      break;
    default:
LABEL_11:
      char v4 = 4;
      break;
  }
  *(unsigned char *)a1 = v4;
  *(unsigned char *)(a1 + 1) = 0;
  *(_WORD *)(a1 + 6) = 256;
  *(_DWORD *)(a1 + 2) = 0;
  *(void *)(a1 + 8) = 1;
  return result;
}

uint64_t LibraryActionControllerProtocol.subscribe(feedUrl:adamId:location:explicit:displaySuccessHUD:)(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a9 + 40))(a1, a2, a3 & 1);
}

uint64_t ShowsSortType.artworkForSort(currentSort:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  if (sub_3D3BE0() && (sub_3D3BC0() & 1) != 0 || sub_3D3BF0() && (sub_3D3BC0() & 1) != 0)
  {
    sub_3A9F0C(a1);
    sub_3D3850();
    uint64_t v4 = sub_3D3860();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
    uint64_t v6 = v4;
    uint64_t v7 = a2;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v9 = sub_3D3860();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    uint64_t v6 = v9;
    uint64_t v7 = a2;
    uint64_t v8 = 1;
  }

  return v5(v7, v8, 1, v6);
}

uint64_t ShowsSortType.displayTitle.getter(char a1)
{
  switch(a1)
  {
    case 2:
    case 3:
      uint64_t v1 = (objc_class *)[self mainBundle];
      v6._countAndFlagsBits = 0xE000000000000000;
      v2._object = (void *)0x800000000040B4C0;
      v2._countAndFlagsBits = 0xD000000000000014;
      break;
    case 4:
    case 5:
      uint64_t v1 = (objc_class *)[self mainBundle];
      v2._countAndFlagsBits = 0xD000000000000015;
      v6._countAndFlagsBits = 0xE000000000000000;
      v2._object = (void *)0x800000000040B4A0;
      break;
    case 6:
      uint64_t v1 = (objc_class *)[self mainBundle];
      v6._countAndFlagsBits = 0xE000000000000000;
      v2._countAndFlagsBits = 0x4E414D5F54524F53;
      v2._object = (void *)0xEB000000004C4155;
      break;
    default:
      uint64_t v1 = (objc_class *)[self mainBundle];
      v6._countAndFlagsBits = 0xE000000000000000;
      v2._countAndFlagsBits = 0x5F59425F54524F53;
      v2._object = (void *)0xED0000454C544954;
      break;
  }
  v7.value._countAndFlagsBits = 0;
  v7.value._object = 0;
  v3.super.Class isa = v1;
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  uint64_t v4 = sub_3D2060(v2, v7, v3, v8, v6);

  return v4;
}

double ShowsSortType.showLockupStyle.getter@<D0>(char a1@<W0>, uint64_t a2@<X8>)
{
  switch(a1)
  {
    case 2:
    case 3:
      *(_WORD *)a2 = 256;
      *(unsigned char *)(a2 + 2) = 7;
      *(_WORD *)(a2 + 7) = 0;
      *(_DWORD *)(a2 + 3) = 16;
      *(_DWORD *)(a2 + 9) = 50463489;
      __int16 v2 = 4103;
      break;
    case 4:
    case 5:
      *(_WORD *)a2 = 256;
      *(unsigned char *)(a2 + 2) = 5;
      *(_WORD *)(a2 + 7) = 0;
      *(_DWORD *)(a2 + 3) = 16;
      *(_DWORD *)(a2 + 9) = 100795905;
      __int16 v2 = 4101;
      break;
    case 7:
      *(_WORD *)a2 = 3584;
      *(unsigned char *)(a2 + 2) = 14;
      *(_WORD *)(a2 + 7) = 0;
      *(_DWORD *)(a2 + 3) = 16;
      __int16 v2 = 3598;
      *(_DWORD *)(a2 + 9) = 235802126;
      break;
    default:
      *(_WORD *)a2 = 256;
      *(unsigned char *)(a2 + 2) = 12;
      *(_WORD *)(a2 + 7) = 0;
      *(_DWORD *)(a2 + 3) = 16;
      *(_DWORD *)(a2 + 9) = 67240705;
      __int16 v2 = 4108;
      break;
  }
  *(_WORD *)(a2 + 13) = v2;
  double result = 0.0;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(unsigned char *)(a2 + 80) = -1;
  return result;
}

uint64_t LibraryActionControllerProtocol.makeAndSendMetricsEvent(episodeUuid:actionType:pageType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_25B7C(v18);
  sub_E8FBC((uint64_t)v18, (uint64_t)v17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, unsigned char *, uint64_t, uint64_t))(a8 + 304))(a1, a2, a3, a4, a5, a6, 0, 0, 0, 0, v17, a7, a8);
}

uint64_t LibraryActionControllerProtocol.makeAndSendMetricsEvent(adamId:actionType:pageType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_25B7C(v18);
  sub_E8FBC((uint64_t)v18, (uint64_t)v17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, unsigned char *, uint64_t, uint64_t))(a8 + 296))(a1, a2, a3, a4, a5, a6, 0, 0, 0, 0, v17, a7, a8);
}

uint64_t LibraryActionControllerProtocol.makeAndSendMetricsEvent(podcastUuid:actionType:pageType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  sub_25B7C(v18);
  sub_E8FBC((uint64_t)v18, (uint64_t)v17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, void, void, unsigned char *, uint64_t, uint64_t))(a8 + 312))(a1, a2, a3, a4, a5, a6, 0, 0, 0, 0, v17, a7, a8);
}

uint64_t FeedUpdateResult.description.getter()
{
  int v1 = (*v0 >> 57) & 0x78 | *v0 & 7;
  if (v1 == 127) {
    return 0x64657070696B732ELL;
  }
  if (v1 == 95) {
    return 0x656873696E69662ELL;
  }
  return 0x6572756C6961662ELL;
}

uint64_t sub_3A9EE4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return LibraryActionControllerProtocol.subscribe(feedUrl:adamId:location:explicit:displaySuccessHUD:)(a1, a2, a3 & 1, a4, a5, a6, a7, a8, a9);
}

uint64_t LibraryActionControllerProtocol.subscribe(podcast:displaySuccessHUD:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t sub_3A9F0C(char a1)
{
  uint64_t v1 = 0;
  switch(a1)
  {
    case 1:
      __int16 v2 = (objc_class *)[self mainBundle];
      v4._countAndFlagsBits = 0xD000000000000020;
      v7._countAndFlagsBits = 0xE000000000000000;
      v4._object = (void *)0x800000000040B4E0;
      goto LABEL_6;
    case 2:
    case 4:
      __int16 v2 = (objc_class *)[self mainBundle];
      v7._countAndFlagsBits = 0xE000000000000000;
      NSBundle v3 = "AX_SHOWS_SORT_BY_NEWEST_TO_OLDEST";
      goto LABEL_5;
    case 3:
    case 5:
      __int16 v2 = (objc_class *)[self mainBundle];
      v7._countAndFlagsBits = 0xE000000000000000;
      NSBundle v3 = "AX_SHOWS_SORT_BY_OLDEST_TO_NEWEST";
      goto LABEL_5;
    case 6:
      return v1;
    default:
      __int16 v2 = (objc_class *)[self mainBundle];
      v7._countAndFlagsBits = 0xE000000000000000;
      NSBundle v3 = "AX_SHOWS_SORT_BY_TITLE_DESCENDING";
LABEL_5:
      v4._object = (void *)((unint64_t)(v3 - 32) | 0x8000000000000000);
      v4._countAndFlagsBits = 0xD000000000000021;
LABEL_6:
      v8.value._countAndFlagsBits = 0;
      v8.value._object = 0;
      v5.super.Class isa = v2;
      v9._countAndFlagsBits = 0;
      v9._object = (void *)0xE000000000000000;
      uint64_t v1 = sub_3D2060(v4, v8, v5, v9, v7);

      return v1;
  }
}

unsigned char *storeEnumTagSinglePayload for FeedUpdateContext(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 130 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 130) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7D)
  {
    unsigned int v6 = ((a2 - 126) >> 8) + 1;
    *double result = a2 - 126;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3AA18CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedUpdateContext()
{
  return &type metadata for FeedUpdateContext;
}

uint64_t getEnumTagSinglePayload for FeedUpdateResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7C && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 124);
  }
  int v3 = ((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7));
  unsigned int v4 = v3 ^ 0x7F;
  unsigned int v5 = 128 - v3;
  if (v4 >= 0x7D) {
    unsigned int v5 = 0;
  }
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for FeedUpdateResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7B)
  {
    *(void *)double result = 0;
    *(_DWORD *)double result = a2 - 124;
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7C) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)double result = ((32 * (126 - a2)) | ((126 - a2) >> 2) | ((unint64_t)((32 * (126 - a2)) | ((126 - a2) >> 2)) << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeedUpdateResult()
{
  return &type metadata for FeedUpdateResult;
}

unint64_t *initializeBufferWithCopyOfBuffer for FeedUpdateError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_36C558(*a2);
  *a1 = v3;
  return a1;
}

unint64_t destroy for FeedUpdateError(unint64_t *a1)
{
  return sub_36C5A0(*a1);
}

unint64_t *assignWithCopy for FeedUpdateError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  sub_36C558(*a2);
  unint64_t v4 = *a1;
  *a1 = v3;
  sub_36C5A0(v4);
  return a1;
}

unint64_t *assignWithTake for FeedUpdateError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  *a1 = *a2;
  sub_36C5A0(v3);
  return a1;
}

uint64_t sub_3AA33C(void *a1)
{
  uint64_t v1 = *a1 >> 62;
  if (v1 <= 1) {
    return v1;
  }
  else {
    return (*a1 >> 3) + 2;
  }
}

unint64_t *sub_3AA358(unint64_t *result, uint64_t a2)
{
  if (a2 < 2)
  {
    uint64_t v2 = *result & 0xFFFFFFFFFFFFFF8;
    unint64_t v3 = a2 << 62;
  }
  else
  {
    uint64_t v2 = 8 * (a2 - 2);
    unint64_t v3 = 0x8000000000000000;
  }
  *double result = v2 | v3;
  return result;
}

ValueMetadata *type metadata accessor for FeedUpdateError()
{
  return &type metadata for FeedUpdateError;
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.pausePlayer()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.pubDateLimitPublisher(forListType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = *(unsigned char *)(a1 + 64);
  unint64_t v4 = *(uint64_t (**)(_OWORD *))(a3 + 16);
  long long v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  v8[2] = *(_OWORD *)(a1 + 32);
  v8[3] = v6;
  char v9 = v3;
  return v4(v8);
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.episodeSortTypePublisher(forListType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = *(unsigned char *)(a1 + 64);
  unint64_t v4 = *(uint64_t (**)(_OWORD *))(a3 + 24);
  long long v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  v8[2] = *(_OWORD *)(a1 + 32);
  v8[3] = v6;
  char v9 = v3;
  return v4(v8);
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.hidesPlayedEpisodesPublisher(forListType:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = *(unsigned char *)(a1 + 64);
  unint64_t v4 = *(uint64_t (**)(_OWORD *))(a3 + 32);
  long long v5 = *(_OWORD *)(a1 + 16);
  v8[0] = *(_OWORD *)a1;
  v8[1] = v5;
  long long v6 = *(_OWORD *)(a1 + 48);
  v8[2] = *(_OWORD *)(a1 + 32);
  v8[3] = v6;
  char v9 = v3;
  return v4(v8);
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.unsubscribe(podcast:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.turnOnAutoDownloads(podcast:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 64))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.turnOnAutoDownloads(offer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.turnOffAutoDownloads(podcast:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.turnOffAutoDownloads(offer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 88))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.turnOffAutoDownloadsForTesting(context:uuid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 96))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.turnOnAutoDownloadsForTesting(context:uuid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 104))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.resetDark(podcast:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.resetDark(offer:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.updateFeed(podcast:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 128))();
}

{
  return (*(uint64_t (**)(void))(a5 + 136))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.updateFeedForStorePageLoadedOnlyIfImplicitlyFollowed(podcast:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 144))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.updateAllFeeds()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.updateStation(stationUuid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 160))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.refollowAllRecentlyUnfollowedShows()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.deleteAllRecentlyUnfollowedShows()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.deleteRecentlyUnfollowedShow(uuid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 184))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.changeOrder(shows:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.showsSortOrder.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.setSortType(forShows:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 208))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.setEpisodeUserFilterForPodcast(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 216))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.setShowTypeForPodcast(_:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 224))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.changeOrder(stations:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 232))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.changeOrder(station:episodes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 240))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.changeOrder(station:stationShows:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 248))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.create(station:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 256))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.delete(station:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 264))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.setSortOrder(forStation:order:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 272))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.setHidePlayedEpisodes(forStation:hidePlayedEpisodes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 280))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.delete(episode:fromStation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 288))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.makeAndSendMetricsEvent(adamId:actionType:pageType:pageID:targetType:location:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(a13 + 296))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.makeAndSendMetricsEvent(episodeUuid:actionType:pageType:pageID:targetType:location:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(a13 + 304))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.makeAndSendMetricsEvent(podcastUuid:actionType:pageType:pageID:targetType:location:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(a13 + 312))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.setMetricsController(metricsController:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 320))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.metricsController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 328))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.download(episode:isFromSaving:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 336))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.download(episodes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 344))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.download(episodeOffers:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 352))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.cancelAllDownloads(userInitiated:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 360))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.cancel(download:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 368))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.cancel(download:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 376))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.resumeOrPauseEpisodeDownload(withUuid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 384))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.removeDownload(episode:shouldAllowAutomaticRedownloads:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 392))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.removeDownload(adamId:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 400))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.reportBrowse(params:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 408))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.isBookmarkedEpisode(forEpisodeUUID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 416))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.bookmark(episodeUUIDs:showHUDConfirmation:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 424))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.bookmark(episodeOffers:showHUDConfirmation:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 432))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.removeEpisodesFromBookmarks(forEpisodeUUIDs:showHUDConfirmation:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 440))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.removeEpisodesFromBookmarks(episodeOffers:showHUDConfirmation:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 448))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.removeEpisodesFromBookmarks(storeIds:showHUDConfirmation:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 456))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.removeEpisodesFromBookmarks(podcastUuid:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 464))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.removeAllRecoveredEpisodes(inPodcastUuid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 472))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.removeRecoveredEpisodes(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 480))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.hasEpisodesThatAreNotVisuallyPlayed(baseEpisodesPredicate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 488))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.handleMarkingEpisodesAsPlayed(source:baseEpisodesPredicate:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 496))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.markAllAsPlayedSheetAction(episodesPredicate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 504))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.markEpisodesAsPlayed(baseEpisodesPredicate:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 512))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.hasDownloadedEpisodes(podcastUuid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 520))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.hasDownloadedEpisodes()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 528))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.handleRemovingAllDownloadsFromShow(podcastUuid:shouldAllowAutomaticRedownloads:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 536))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.handleRemovingAllDownloadsFromAllShows()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 544))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.downloadedEpisodesCountForShow(podcastUuid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 552))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.downloadedEpisodesCountForAllShows()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 560))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.hasSavedEpisodes(podcastUuid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 568))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.savedEpisodesCount(podcastUuid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 576))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.hasLibraryEpisodesToRemove(podcastUuid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 584))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.hasAtLeastNEpisodesPartiallyPlayedInLastTwoMonths(podcastUuid:number:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 592))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.hasAtLeastNEpisodesPartiallyPlayedInLastTwoMonths(podcastStoreId:number:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 600))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.markUpsellBannerAsDismissed(episodeStoreTrackId:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 608))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.removeShowFromLibrary(podcastUuid:shouldRemoveBookmarks:shouldAllowAutomaticRedownloads:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 616))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.podcastTitleFromUuid(uuid:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 624))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.mark(episodeUUIDS:as:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 632))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.mark(episodeOffers:as:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(void))(a6 + 640))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.removeFromUpNext(uuids:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 648))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.transcriptReportAConcern(episode:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 656))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.showHUDForBookmark()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 664))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.showHUDForRemovedBookmark()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 672))();
}

uint64_t dispatch thunk of LibraryActionControllerProtocol.showHUDForSubscribed()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 680))();
}

uint64_t sub_3AAB04(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_3D7950();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ModernPage();
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_3D5640();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (uint64_t)[self supportsLocalLibrary];
  if ((result & 1) == 0)
  {
    uint64_t v29 = v5;
    uint64_t v30 = v8;
    sub_3D5570();
    sub_FDB7C(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ModernPage);
    uint64_t v16 = sub_3D5630();
    os_log_type_t v17 = sub_3D83E0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v28 = v2;
      uint64_t v19 = (uint8_t *)v18;
      uint64_t v26 = swift_slowAlloc();
      uint64_t v32 = v26;
      uint64_t v27 = a1;
      *(_DWORD *)uint64_t v19 = 136315138;
      uint64_t v25 = v19 + 4;
      (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v7, v10, v4);
      uint64_t v20 = sub_3D7DC0();
      uint64_t v31 = sub_1FB7E8(v20, v21, &v32);
      a1 = v27;
      sub_3D8930();
      swift_bridgeObjectRelease();
      sub_3AD8A8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ModernPage);
      _os_log_impl(&dword_0, v16, v17, "Processing episode and podcasts states for ModernPage with ID \"%s\"", v19, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_3AD8A8((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ModernPage);
    }

    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    uint64_t v22 = *(void *)(a1 + *(int *)(v30 + 24));
    uint64_t v23 = sub_3AC390(v22);
    sub_3AB5F0((unint64_t)v23);
    swift_bridgeObjectRelease();
    uint64_t v24 = sub_3AC79C(v22);
    sub_3ABA48((unint64_t)v24);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_3AAE98(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_3D5640();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (uint64_t)[self supportsLocalLibrary];
  if ((result & 1) == 0)
  {
    sub_3D5570();
    swift_retain_n();
    uint64_t v9 = sub_3D5630();
    os_log_type_t v10 = sub_3D83E0();
    if (os_log_type_enabled(v9, v10))
    {
      v17[1] = v2;
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      v17[0] = swift_slowAlloc();
      uint64_t v18 = v17[0];
      *(_DWORD *)uint64_t v11 = 136315138;
      if (a1[4])
      {
        uint64_t v12 = a1[3];
        unint64_t v13 = a1[4];
      }
      else
      {
        unint64_t v13 = 0xE800000000000000;
        uint64_t v12 = 0x656C746974206F6ELL;
      }
      swift_bridgeObjectRetain();
      void v17[2] = sub_1FB7E8(v12, v13, &v18);
      sub_3D8930();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v9, v10, "Processing episode and podcasts states for page \"%s\"", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    else
    {

      swift_release_n();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    unint64_t v14 = a1[2];
    unint64_t v15 = sub_3AB760(v14, (uint64_t (*)(void *))sub_3AC390);
    sub_3AB5F0(v15);
    swift_bridgeObjectRelease();
    unint64_t v16 = sub_3AB760(v14, (uint64_t (*)(void *))sub_3AC79C);
    sub_3ABA48(v16);
    swift_bridgeObjectRelease();
    sub_3ABBB8((uint64_t)a1);
    return sub_3ABDCC((uint64_t)a1);
  }
  return result;
}

uint64_t sub_3AB16C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C1510);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C1518);
  uint64_t v20 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C1520);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_3D49D0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3ACBE4((uint64_t)v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_250FC((uint64_t)v9, &qword_4C1520);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4A9A78);
    sub_3D5940();
    sub_3ACE78();
    uint64_t v14 = sub_3D5AC0();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    uint64_t v15 = sub_3D3610();
    uint64_t v22 = v15;
    unint64_t v23 = sub_111304();
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v21);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v15 - 8) + 104))(boxed_opaque_existential_2Tm, enum case for Podcasts.inMemoryStateRefactor(_:), v15);
    LOBYTE(v15) = sub_3D3580();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    os_log_type_t v17 = (void (**)(char *, uint64_t))(v11 + 8);
    if (v15)
    {
      sub_3D4B70();
      __swift_project_boxed_opaque_existential_1(v21, v22);
      uint64_t v14 = sub_3D5AC0();
      (*v17)(v13, v10);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v21);
    }
    else
    {
      sub_3D5060();
      swift_getOpaqueTypeConformance2();
      uint64_t v14 = sub_3D5AC0();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
      (*v17)(v13, v10);
    }
  }
  return v14;
}

uint64_t sub_3AB57C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ThinClientPageStateController()
{
  return self;
}

uint64_t sub_3AB5F0(unint64_t a1)
{
  uint64_t v2 = sub_3ACF10(a1);
  uint64_t v3 = sub_3D3610();
  uint64_t v14 = v3;
  unint64_t v4 = sub_111304();
  unint64_t v15 = v4;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v13);
  uint64_t v6 = enum case for Podcasts.inMemoryStateRefactor(_:);
  uint64_t v7 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  v7(boxed_opaque_existential_2Tm, enum case for Podcasts.inMemoryStateRefactor(_:), v3);
  char v8 = sub_3D3580();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  v9._rawValue = v2;
  if (v8) {
    sub_3D4B50(v9);
  }
  else {
    sub_3D4E00(v9);
  }
  sub_3AD5D0((uint64_t)v2, a1, (uint64_t (*)(uint64_t))sub_3C23C4);
  swift_bridgeObjectRelease();
  uint64_t v14 = v3;
  unint64_t v15 = v4;
  uint64_t v10 = __swift_allocate_boxed_opaque_existential_2Tm(v13);
  v7(v10, v6, v3);
  char v11 = sub_3D3580();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  if (v11) {
    sub_3D4B30();
  }
  else {
    sub_3D4E40();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_3AB760(unint64_t a1, uint64_t (*a2)(void *))
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B1BE0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ModernShelf();
  uint64_t v27 = *(void *)(v7 - 8);
  uint64_t v28 = v7;
  __chkstk_darwin(v7);
  Swift::OpaquePointer v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v25 - v11;
  if (!(a1 >> 62))
  {
    uint64_t v13 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain();
    if (v13) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v23 = a2(_swiftEmptyArrayStorage);
LABEL_19:
    uint64_t v24 = v23;
    swift_bridgeObjectRelease();
    return v24;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_3D8D90();
  uint64_t v13 = result;
  if (!result) {
    goto LABEL_18;
  }
LABEL_3:
  if (v13 >= 1)
  {
    uint64_t v25 = a2;
    uint64_t v15 = 0;
    unint64_t v16 = a1 & 0xC000000000000001;
    os_log_type_t v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
    uint64_t v18 = _swiftEmptyArrayStorage;
    unint64_t v26 = a1;
    do
    {
      if (v16) {
        id v19 = (id)sub_3D8BF0();
      }
      else {
        id v19 = *(id *)(a1 + 8 * v15 + 32);
      }
      uint64_t v20 = v19;
      Shelf.mapToModernShelf()((uint64_t)v6);

      if ((*v17)(v6, 1, v28) == 1)
      {
        sub_250FC((uint64_t)v6, &qword_4B1BE0);
      }
      else
      {
        sub_18FEC((uint64_t)v6, (uint64_t)v12);
        sub_18FEC((uint64_t)v12, (uint64_t)v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v18 = (void *)sub_133FC(0, v18[2] + 1, 1, (unint64_t)v18);
        }
        unint64_t v22 = v18[2];
        unint64_t v21 = v18[3];
        if (v22 >= v21 >> 1) {
          uint64_t v18 = (void *)sub_133FC(v21 > 1, v22 + 1, 1, (unint64_t)v18);
        }
        long long v18[2] = v22 + 1;
        sub_18FEC((uint64_t)v9, (uint64_t)v18+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v22);
        a1 = v26;
      }
      ++v15;
    }
    while (v13 != v15);
    swift_bridgeObjectRelease();
    uint64_t v23 = v25(v18);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_3ABA48(unint64_t a1)
{
  uint64_t v2 = sub_3AD358(a1);
  uint64_t v3 = sub_3D3610();
  uint64_t v14 = v3;
  unint64_t v4 = sub_111304();
  unint64_t v15 = v4;
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v13);
  uint64_t v6 = enum case for Podcasts.inMemoryStateRefactor(_:);
  uint64_t v7 = *(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);
  v7(boxed_opaque_existential_2Tm, enum case for Podcasts.inMemoryStateRefactor(_:), v3);
  char v8 = sub_3D3580();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  v9._rawValue = v2;
  if (v8) {
    sub_3D4B40(v9);
  }
  else {
    sub_3D4E00(v9);
  }
  sub_3AD5D0((uint64_t)v2, a1, (uint64_t (*)(uint64_t))sub_3C23C4);
  swift_bridgeObjectRelease();
  uint64_t v14 = v3;
  unint64_t v15 = v4;
  uint64_t v10 = __swift_allocate_boxed_opaque_existential_2Tm(v13);
  v7(v10, v6, v3);
  char v11 = sub_3D3580();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  if (v11) {
    sub_3D4B20();
  }
  else {
    sub_3D4E10();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_3ABBB8(uint64_t a1)
{
  uint64_t v2 = sub_3D2950();
  __chkstk_darwin(v2);
  unint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0) + 88;
  sub_FDB7C(a1 + OBJC_IVAR____TtC8ShelfKit4Page_pageContext, (uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for InteractionContext.Page);
  if (swift_getEnumCaseMultiPayload() != 2) {
    return sub_3AD8A8((uint64_t)v4, (uint64_t (*)(void))&type metadata accessor for InteractionContext.Page);
  }
  uint64_t v5 = *(void *)v4;
  char v6 = v4[8];
  uint64_t result = swift_bridgeObjectRelease();
  if ((v6 & 1) == 0)
  {
    int v8 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtC8ShelfKit4Page_mapiInLibrary);
    if (v8 != 2)
    {
      char v9 = v8 & 1;
      uint64_t v10 = sub_3D3610();
      v16[3] = v10;
      void v16[4] = sub_111304();
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v16);
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v10 - 8) + 104))(boxed_opaque_existential_2Tm, enum case for Podcasts.inMemoryStateRefactor(_:), v10);
      LOBYTE(v10) = sub_3D3580();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v16);
      __swift_instantiateConcreteTypeFromMangledName(&qword_4C1540);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_3DED90;
      *(void *)(inited + 32) = v5;
      *(unsigned char *)(inited + 40) = v9;
      if (v10)
      {
        uint64_t v13 = (void *)sub_144F8(inited);
        swift_setDeallocating();
        v14._rawValue = v13;
        sub_3D4B60(v14);
      }
      else
      {
        sub_144F8(inited);
        swift_setDeallocating();
        sub_3D4E50();
      }
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_3ABDCC(uint64_t a1)
{
  uint64_t v2 = sub_3D5640();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_3D2950();
  __chkstk_darwin(v6);
  int v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_FDB7C(a1 + OBJC_IVAR____TtC8ShelfKit4Page_pageContext, (uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for InteractionContext.Page);
  if (swift_getEnumCaseMultiPayload() != 3) {
    return sub_3AD8A8((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for InteractionContext.Page);
  }
  uint64_t v9 = *(void *)v8;
  char v10 = v8[8];
  swift_bridgeObjectRelease();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B13C8);
  uint64_t result = sub_250FC((uint64_t)&v8[*(int *)(v11 + 64)], &qword_4A9CA0);
  if ((v10 & 1) == 0 && *(unsigned char *)(a1 + OBJC_IVAR____TtC8ShelfKit4Page_mapiInLibrary) != 2)
  {
    sub_3D3A10();
    sub_3D5570();
    swift_retain();
    sub_3ACED4(v32, (void (*)(void, void, void, void, void))sub_15390);
    swift_retain();
    sub_3ACED4(v32, (void (*)(void, void, void, void, void))sub_15390);
    uint64_t v13 = sub_3D5630();
    int v14 = sub_3D83E0();
    if (os_log_type_enabled(v13, (os_log_type_t)v14))
    {
      int v28 = v14;
      uint64_t v15 = swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v30 = v27;
      *(_DWORD *)uint64_t v15 = 136315394;
      unint64_t v16 = *(void *)(a1 + 32);
      uint64_t v29 = v9;
      if (v16)
      {
        uint64_t v17 = *(void *)(a1 + 24);
        unint64_t v18 = v16;
      }
      else
      {
        unint64_t v18 = 0xE800000000000000;
        uint64_t v17 = 0x656C746974206F6ELL;
      }
      swift_bridgeObjectRetain();
      v31[0] = sub_1FB7E8(v17, v18, &v30);
      sub_3D8930();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2080;
      sub_24CE1C((uint64_t)v32, (uint64_t)v31);
      sub_3ACED4(v32, (void (*)(void, void, void, void, void))sub_15390);
      uint64_t v19 = sub_3D7DC0();
      v31[0] = sub_1FB7E8(v19, v20, &v30);
      sub_3D8930();
      swift_bridgeObjectRelease();
      sub_3ACED4(v32, (void (*)(void, void, void, void, void))sub_24CEAC);
      sub_3ACED4(v32, (void (*)(void, void, void, void, void))sub_24CEAC);
      _os_log_impl(&dword_0, v13, (os_log_type_t)v28, "Processing podcast state for page %s -> %s", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      uint64_t v9 = v29;
    }
    else
    {
      swift_release_n();
      sub_3ACED4(v32, (void (*)(void, void, void, void, void))sub_24CEAC);
      sub_3ACED4(v32, (void (*)(void, void, void, void, void))sub_24CEAC);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    uint64_t v21 = sub_3D3610();
    v31[3] = v21;
    v31[4] = sub_111304();
    boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v31);
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v21 - 8) + 104))(boxed_opaque_existential_2Tm, enum case for Podcasts.inMemoryStateRefactor(_:), v21);
    LOBYTE(v21) = sub_3D3580();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4C1530);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_3DED90;
    *(void *)(inited + 32) = v9;
    sub_24CE1C((uint64_t)v32, inited + 40);
    uint64_t v24 = (void *)sub_145D0((void *)inited);
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_4C1538);
    swift_arrayDestroy();
    v25._rawValue = v24;
    if (v21) {
      sub_3D4B40(v25);
    }
    else {
      sub_3D4E00(v25);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_3AC390(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ModernShelf();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)v34 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v34 - v10;
  uint64_t v12 = _swiftEmptyArrayStorage;
  v38[0] = _swiftEmptyArrayStorage;
  uint64_t v13 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v13)
  {
    unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v15 = a1;
    uint64_t v16 = *(void *)(v3 + 72);
    v34[1] = v15;
    uint64_t v35 = v3;
    unint64_t v36 = v14;
    uint64_t v17 = v15 + v14;
    unint64_t v18 = _swiftEmptyArrayStorage;
    do
    {
      sub_FDB7C(v17, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ModernShelf);
      unsigned int v19 = v11[*(int *)(v2 + 24)] - 1;
      BOOL v20 = v19 > 0x3F;
      unint64_t v21 = (1 << v19) & 0x98000000000001EFLL;
      if (v20 || v21 == 0)
      {
        sub_3AD8A8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ModernShelf);
      }
      else
      {
        sub_18FEC((uint64_t)v11, (uint64_t)v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1FC048(0, v18[2] + 1, 1);
        }
        unint64_t v18 = (void *)v38[0];
        unint64_t v24 = *(void *)(v38[0] + 16);
        unint64_t v23 = *(void *)(v38[0] + 24);
        if (v24 >= v23 >> 1)
        {
          sub_1FC048(v23 > 1, v24 + 1, 1);
          unint64_t v18 = (void *)v38[0];
        }
        long long v18[2] = v24 + 1;
        sub_18FEC((uint64_t)v9, (uint64_t)v18 + v36 + v24 * v16);
      }
      v17 += v16;
      --v13;
    }
    while (v13);
    Swift::OpaquePointer v25 = (void *)v38[0];
    uint64_t v12 = _swiftEmptyArrayStorage;
    uint64_t v3 = v35;
  }
  else
  {
    Swift::OpaquePointer v25 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  v38[0] = _swiftEmptyArrayStorage;
  uint64_t v26 = v25[2];
  if (v26)
  {
    uint64_t v27 = (uint64_t)v25 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v28 = *(void *)(v3 + 72);
    swift_retain();
    do
    {
      sub_FDB7C(v27, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ModernShelf);
      uint64_t v29 = *(void *)&v6[*(int *)(v2 + 28)];
      swift_bridgeObjectRetain();
      sub_3AD8A8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ModernShelf);
      sub_287C20(v29);
      v27 += v28;
      --v26;
    }
    while (v26);
    swift_release_n();
    uint64_t v30 = (void *)v38[0];
  }
  else
  {
    swift_release();
    uint64_t v30 = _swiftEmptyArrayStorage;
  }
  unint64_t v39 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v31 = v30[2];
  if (v31)
  {
    uint64_t v32 = (uint64_t)(v30 + 4);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_18168(v32, (uint64_t)v38);
      sub_18168((uint64_t)v38, (uint64_t)v37);
      __swift_instantiateConcreteTypeFromMangledName(&qword_4A9A00);
      type metadata accessor for LegacyEpisodeLockup();
      if (swift_dynamicCast())
      {
        if ((sub_3D5150() & 1) == 0)
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
          sub_3D8000();
          if (*(void *)((char *)&dword_10 + (v39 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                         + (v39 & 0xFFFFFFFFFFFFFF8)) >> 1)
            sub_3D8060();
          sub_3D80A0();
          sub_3D8040();
          goto LABEL_25;
        }
        swift_release();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
LABEL_25:
      v32 += 40;
      if (!--v31)
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = (void *)v39;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  return v12;
}

void *sub_3AC79C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ModernShelf();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v4);
  uint64_t v9 = (char *)v36 - v8;
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v36 - v10;
  uint64_t v12 = _swiftEmptyArrayStorage;
  v40[0] = _swiftEmptyArrayStorage;
  uint64_t v13 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v13)
  {
    unint64_t v14 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v15 = a1;
    uint64_t v16 = *(void *)(v3 + 72);
    v36[1] = v15;
    uint64_t v37 = v3;
    unint64_t v38 = v14;
    uint64_t v17 = v15 + v14;
    unint64_t v18 = _swiftEmptyArrayStorage;
    do
    {
      sub_FDB7C(v17, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ModernShelf);
      unsigned int v19 = v11[*(int *)(v2 + 24)];
      BOOL v20 = v19 > 0x3F;
      unint64_t v21 = (1 << v19) & 0xB000000082000000;
      if (v20 || v21 == 0)
      {
        sub_3AD8A8((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ModernShelf);
      }
      else
      {
        sub_18FEC((uint64_t)v11, (uint64_t)v9);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_1FC048(0, v18[2] + 1, 1);
        }
        unint64_t v18 = (void *)v40[0];
        unint64_t v24 = *(void *)(v40[0] + 16);
        unint64_t v23 = *(void *)(v40[0] + 24);
        if (v24 >= v23 >> 1)
        {
          sub_1FC048(v23 > 1, v24 + 1, 1);
          unint64_t v18 = (void *)v40[0];
        }
        long long v18[2] = v24 + 1;
        sub_18FEC((uint64_t)v9, (uint64_t)v18 + v38 + v24 * v16);
      }
      v17 += v16;
      --v13;
    }
    while (v13);
    Swift::OpaquePointer v25 = (void *)v40[0];
    uint64_t v12 = _swiftEmptyArrayStorage;
    uint64_t v3 = v37;
  }
  else
  {
    Swift::OpaquePointer v25 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  v40[0] = _swiftEmptyArrayStorage;
  uint64_t v26 = v25[2];
  if (v26)
  {
    uint64_t v27 = (uint64_t)v25 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v28 = *(void *)(v3 + 72);
    swift_retain();
    do
    {
      sub_FDB7C(v27, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ModernShelf);
      uint64_t v29 = *(void *)&v6[*(int *)(v2 + 28)];
      swift_bridgeObjectRetain();
      sub_3AD8A8((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ModernShelf);
      sub_287C20(v29);
      v27 += v28;
      --v26;
    }
    while (v26);
    swift_release_n();
    uint64_t v30 = (void *)v40[0];
  }
  else
  {
    swift_release();
    uint64_t v30 = _swiftEmptyArrayStorage;
  }
  unint64_t v41 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v31 = v30[2];
  if (v31)
  {
    uint64_t v32 = (uint64_t)(v30 + 4);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_18168(v32, (uint64_t)v40);
      sub_18168((uint64_t)v40, (uint64_t)v39);
      __swift_instantiateConcreteTypeFromMangledName(&qword_4A9A00);
      type metadata accessor for LegacyEpisodeLockup();
      int v33 = swift_dynamicCast();
      char v34 = v33;
      if (v33) {
        swift_release();
      }
      sub_18168((uint64_t)v40, (uint64_t)v39);
      type metadata accessor for LegacyLockup();
      if (swift_dynamicCast())
      {
        if ((v34 & 1) == 0 && (sub_3D5150() & 1) == 0)
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
          sub_3D8000();
          if (*(void *)((char *)&dword_10 + (v41 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                         + (v41 & 0xFFFFFFFFFFFFFF8)) >> 1)
            sub_3D8060();
          sub_3D80A0();
          sub_3D8040();
          goto LABEL_25;
        }
        swift_release();
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
LABEL_25:
      v32 += 40;
      if (!--v31)
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = (void *)v41;
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_3ACBE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_3D2950();
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_FDB7C(v1 + OBJC_IVAR____TtC8ShelfKit4Page_pageContext, (uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for InteractionContext.Page);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v9 = (uint64_t)v5;
      goto LABEL_8;
    case 2u:
      sub_3AD8A8((uint64_t)v5, (uint64_t (*)(void))&type metadata accessor for InteractionContext.Page);
      goto LABEL_2;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v9 = (uint64_t)&v5[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4B13C8) + 64)];
LABEL_8:
      sub_250FC(v9, &qword_4A9CA0);
      goto LABEL_2;
    case 0xDu:
    case 0x10u:
    case 0x11u:
    case 0x12u:
      uint64_t v8 = (unsigned int *)&enum case for ThinClientStateDomain.playState(_:);
      goto LABEL_10;
    case 0xEu:
      uint64_t v8 = (unsigned int *)&enum case for ThinClientStateDomain.bookmarkState(_:);
      goto LABEL_10;
    case 0xFu:
    case 0x16u:
      uint64_t v8 = (unsigned int *)&enum case for ThinClientStateDomain.followState(_:);
LABEL_10:
      uint64_t v10 = *v8;
      uint64_t v11 = sub_3D49D0();
      uint64_t v12 = *(void *)(v11 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 104))(a1, v10, v11);
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      break;
    default:
LABEL_2:
      uint64_t v6 = sub_3D49D0();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 1, 1, v6);
      break;
  }
  return result;
}

unint64_t sub_3ACE78()
{
  unint64_t result = qword_4C1528;
  if (!qword_4C1528)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4C1510);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C1528);
  }
  return result;
}

void *sub_3ACED4(void *a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

void *sub_3ACF10(unint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B3668);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (unint64_t)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_3D4F90();
  uint64_t v38 = *(void *)(v5 - 8);
  uint64_t v6 = __chkstk_darwin(v5);
  int v42 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v31 - v8;
  if (a1 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_3D8D90();
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v10)
    {
LABEL_3:
      uint64_t v40 = (unsigned int (**)(unint64_t, uint64_t, uint64_t))(v38 + 48);
      unint64_t v41 = a1 & 0xC000000000000001;
      unint64_t v39 = (void (**)(char *, unint64_t, uint64_t))(v38 + 32);
      uint64_t v37 = (void (**)(char *, char *, uint64_t))(v38 + 16);
      v31[1] = v38 + 40;
      uint64_t v32 = (void (**)(char *, uint64_t))(v38 + 8);
      uint64_t v11 = &_swiftEmptyDictionarySingleton;
      uint64_t v12 = 4;
      unint64_t v35 = v4;
      unint64_t v36 = (void (*)(void, void, void))a1;
      uint64_t v33 = v10;
      char v34 = v9;
      while (1)
      {
        uint64_t v13 = v12 - 4;
        if (v41)
        {
          uint64_t v14 = sub_3D8BF0();
          uint64_t v15 = v12 - 3;
          if (__OFADD__(v13, 1)) {
            goto LABEL_25;
          }
        }
        else
        {
          uint64_t v14 = *(void *)(a1 + 8 * v12);
          swift_retain();
          uint64_t v15 = v12 - 3;
          if (__OFADD__(v13, 1))
          {
LABEL_25:
            __break(1u);
LABEL_26:
            __break(1u);
LABEL_27:
            __break(1u);
            goto LABEL_28;
          }
        }
        sub_3AD840(v14 + OBJC_IVAR____TtC8ShelfKit19LegacyEpisodeLockup_thinClientEpisodeState, v4);
        if ((*v40)(v4, 1, v5) != 1) {
          break;
        }
        sub_250FC(v4, &qword_4B3668);
        swift_release();
LABEL_5:
        ++v12;
        if (v15 == v10)
        {
          swift_bridgeObjectRelease();
          return v11;
        }
      }
      a1 = (unint64_t)*v39;
      (*v39)(v9, v4, v5);
      Swift::UInt64 v16 = *(void *)(v14 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId);
      uint64_t v17 = v9;
      uint64_t v9 = (char *)v5;
      (*v37)(v42, v17, v5);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v43 = v11;
      unint64_t v4 = sub_324C8(v16);
      uint64_t v20 = v11[2];
      BOOL v21 = (v19 & 1) == 0;
      uint64_t v22 = v20 + v21;
      if (__OFADD__(v20, v21)) {
        goto LABEL_26;
      }
      char v23 = v19;
      if (v11[3] < v22)
      {
        sub_2F7730(v22, isUniquelyReferenced_nonNull_native);
        unint64_t v24 = sub_324C8(v16);
        if ((v23 & 1) != (v25 & 1))
        {
          unint64_t result = (void *)sub_3D9070();
          __break(1u);
          return result;
        }
        unint64_t v4 = v24;
        uint64_t v26 = v43;
        if ((v23 & 1) == 0) {
          goto LABEL_21;
        }
LABEL_19:
        uint64_t v5 = (uint64_t)v9;
        (*(void (**)(unint64_t, char *, char *))(v38 + 40))(v26[7] + *(void *)(v38 + 72) * v4, v42, v9);
LABEL_23:
        uint64_t v11 = v43;
        swift_bridgeObjectRelease();
        uint64_t v9 = v34;
        (*v32)(v34, v5);
        swift_release();
        unint64_t v4 = v35;
        a1 = (unint64_t)v36;
        uint64_t v10 = v33;
        goto LABEL_5;
      }
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v26 = v43;
        if (v19) {
          goto LABEL_19;
        }
      }
      else
      {
        sub_2FB67C();
        uint64_t v26 = v43;
        if (v23) {
          goto LABEL_19;
        }
      }
LABEL_21:
      v26[(v4 >> 6) + 8] |= 1 << v4;
      *(void *)(v26[6] + 8 * v4) = v16;
      uint64_t v5 = (uint64_t)v9;
      ((void (*)(unint64_t, char *, char *))a1)(v26[7] + *(void *)(v38 + 72) * v4, v42, v9);
      uint64_t v27 = v26[2];
      BOOL v28 = __OFADD__(v27, 1);
      uint64_t v29 = v27 + 1;
      if (v28) {
        goto LABEL_27;
      }
      v26[2] = v29;
      goto LABEL_23;
    }
  }
  swift_bridgeObjectRelease();
  return &_swiftEmptyDictionarySingleton;
}

void *sub_3AD358(unint64_t a1)
{
  uint64_t v1 = a1;
  if (a1 >> 62)
  {
LABEL_28:
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_3D8D90();
    if (v2) {
      goto LABEL_3;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    return &_swiftEmptyDictionarySingleton;
  }
  uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v2) {
    goto LABEL_29;
  }
LABEL_3:
  unint64_t v3 = v1 & 0xC000000000000001;
  uint64_t v4 = 4;
  uint64_t v22 = v1;
  while (1)
  {
    uint64_t v5 = v4 - 4;
    if (v3)
    {
      uint64_t v6 = sub_3D8BF0();
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v5, 1)) {
        goto LABEL_25;
      }
    }
    else
    {
      uint64_t v6 = *(void *)(v1 + 8 * v4);
      swift_retain();
      uint64_t v7 = v4 - 3;
      if (__OFADD__(v5, 1))
      {
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
        goto LABEL_28;
      }
    }
    if (*(unsigned char *)(v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_isFollowed) != 2) {
      break;
    }
    swift_release();
LABEL_5:
    ++v4;
    if (v7 == v2) {
      goto LABEL_29;
    }
  }
  uint64_t v1 = v2;
  sub_3D3A10();
  Swift::UInt64 v8 = *(void *)(v6 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v11 = sub_324C8(v8);
  uint64_t v12 = *((void *)&_swiftEmptyDictionarySingleton + 2);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_26;
  }
  char v15 = v10;
  if (*((void *)&_swiftEmptyDictionarySingleton + 3) >= v14)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v10) {
        goto LABEL_19;
      }
    }
    else
    {
      sub_2FB90C();
      if (v15) {
        goto LABEL_19;
      }
    }
LABEL_21:
    *((void *)&_swiftEmptyDictionarySingleton + (v11 >> 6) + 8) |= 1 << v11;
    *(void *)(*((void *)&_swiftEmptyDictionarySingleton + 6) + 8 * v11) = v8;
    sub_24CE1C((uint64_t)v23, *((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v11);
    uint64_t v18 = *((void *)&_swiftEmptyDictionarySingleton + 2);
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_27;
    }
    *((void *)&_swiftEmptyDictionarySingleton + 2) = v20;
    goto LABEL_23;
  }
  sub_2F7AE8(v14, isUniquelyReferenced_nonNull_native);
  unint64_t v16 = sub_324C8(v8);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_21;
    }
LABEL_19:
    sub_3AD7E4((uint64_t)v23, *((void *)&_swiftEmptyDictionarySingleton + 7) + 40 * v11);
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v2 = v1;
    uint64_t v1 = v22;
    goto LABEL_5;
  }
  unint64_t result = (void *)sub_3D9070();
  __break(1u);
  return result;
}

uint64_t sub_3AD5D0(uint64_t a1, unint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v5 = swift_bridgeObjectRetain();
  uint64_t v6 = a3(v5);
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_3D8D90();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
  }
  if (v7)
  {
    uint64_t result = sub_1FBFC4(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0)
    {
      __break(1u);
      return result;
    }
    if ((a2 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v7; ++i)
      {
        uint64_t v10 = *(void *)(sub_3D8BF0() + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId);
        swift_unknownObjectRelease();
        unint64_t v12 = _swiftEmptyArrayStorage[2];
        unint64_t v11 = _swiftEmptyArrayStorage[3];
        if (v12 >= v11 >> 1) {
          sub_1FBFC4(v11 > 1, v12 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v12 + 1;
        _swiftEmptyArrayStorage[v12 + 4] = v10;
      }
    }
    else
    {
      BOOL v13 = (void *)(a2 + 32);
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      do
      {
        uint64_t v15 = *(void *)(*v13 + OBJC_IVAR____TtC8ShelfKit12LegacyLockup_adamId);
        unint64_t v16 = _swiftEmptyArrayStorage[3];
        if (v14 >= v16 >> 1) {
          sub_1FBFC4(v16 > 1, v14 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v14 + 1;
        _swiftEmptyArrayStorage[v14 + 4] = v15;
        ++v13;
        ++v14;
        --v7;
      }
      while (v7);
    }
  }
  uint64_t v17 = sub_3C6A60((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  if (*(void *)(v6 + 16) <= *(void *)(v17 + 16) >> 3)
  {
    sub_3C584C(v6);
    swift_bridgeObjectRelease();
    return v17;
  }
  else
  {
    uint64_t v18 = sub_3C59C0(v6, v17);
    swift_bridgeObjectRelease();
    return (uint64_t)v18;
  }
}

uint64_t sub_3AD7E4(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_3AD840(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B3668);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_3AD8A8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_3AD908@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v60 = (uint64_t)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v5 - 8);
  id v61 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v12 = (char *)&v52 - v11;
  uint64_t v13 = sub_3D24D0();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = sub_3D7D00();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_3D7CE0();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C1600);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (uint64_t *)((char *)&v52 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = type metadata accessor for Category();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v52 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_3AE868(a1, v18);
  if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {

    sub_250FC((uint64_t)v18, &qword_4C1600);
LABEL_5:
    char v25 = v62;
    uint64_t v26 = type metadata accessor for CategoryListItem();
    return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v25, 1, 1, v26);
  }
  uint64_t v57 = (uint64_t)v10;
  long long v58 = v12;
  id v59 = a1;
  char v23 = v61;
  sub_3B29A8((uint64_t)v18, (uint64_t)v22);
  unint64_t v24 = &v22[*(int *)(v19 + 28)];
  if (v24[4])
  {

    sub_3B2A0C((uint64_t)v22, (uint64_t (*)(void))type metadata accessor for Category);
    goto LABEL_5;
  }
  BOOL v28 = v22;
  uint64_t v53 = v19;
  int v54 = *(_DWORD *)v24;
  uint64_t v70 = 0;
  memset(v69, 0, sizeof(v69));
  uint64_t v29 = sub_3D36F0();
  uint64_t v30 = v62;
  if (v29 <= 0)
  {
    uint64_t v56 = 0;
    uint64_t v55 = 0;
    uint64_t v34 = (uint64_t)v23;
    uint64_t v35 = v57;
    uint64_t v32 = (uint64_t *)v28;
  }
  else
  {
    sub_3D7CD0();
    v71._countAndFlagsBits = 0;
    v71._object = (void *)0xE000000000000000;
    sub_3D7CC0(v71);
    v66[0] = sub_3D36F0();
    sub_3D7CA0();
    v72._countAndFlagsBits = 0x65776F6C6C6F4620;
    v72._object = (void *)0xEF73776F68532064;
    sub_3D7CC0(v72);
    sub_3D7CF0();
    sub_3D24C0();
    uint64_t v56 = sub_3D7DB0();
    uint64_t v55 = v31;
    uint64_t v32 = (uint64_t *)v22;
    uint64_t v33 = sub_3B2A6C(v22);
    uint64_t v67 = type metadata accessor for LibraryCategoryPlayAction(0);
    uint64_t v68 = sub_3B3AD8(&qword_4C1608, (void (*)(uint64_t))type metadata accessor for LibraryCategoryPlayAction);
    v66[0] = v33;
    sub_250FC((uint64_t)v69, (uint64_t *)&unk_4BC3D0);
    sub_18F88((uint64_t)v66, (uint64_t)v69, (uint64_t *)&unk_4BC3D0);
    uint64_t v34 = (uint64_t)v23;
    uint64_t v35 = v57;
  }
  uint64_t v36 = sub_3D7340();
  uint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56);
  uint64_t v38 = (uint64_t)v58;
  v37(v58, 1, 1, v36);
  uint64_t v39 = sub_3D3610();
  uint64_t v67 = v39;
  uint64_t v68 = sub_3B3AD8((unint64_t *)&qword_4AC678, (void (*)(uint64_t))&type metadata accessor for Podcasts);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v66);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v39 - 8) + 104))(boxed_opaque_existential_2Tm, enum case for Podcasts.libraryCategoriesPageImpressionMetrics(_:), v39);
  LOBYTE(v39) = sub_3D3580();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v66);
  if (v39)
  {
    v66[0] = *v32;
    sub_17264();
    uint64_t v52 = sub_3D8A20();
    uint64_t v57 = sub_3D4480();
    swift_bridgeObjectRetain();
    sub_3D72C0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v38 = (uint64_t)v58;
    swift_bridgeObjectRelease();
    sub_250FC(v38, (uint64_t *)&unk_4B9870);
    v37((char *)v35, 0, 1, v36);
    uint64_t v34 = (uint64_t)v61;
    sub_18F88(v35, v38, (uint64_t *)&unk_4B9870);
  }
  uint64_t v41 = *v32;
  uint64_t v42 = v53;
  sub_153B4((uint64_t)v32 + *(int *)(v53 + 32), v34, (uint64_t *)&unk_4B1F70);
  uint64_t v44 = v32[1];
  uint64_t v43 = v32[2];
  uint64_t v45 = v60;
  sub_153B4((uint64_t)v32 + *(int *)(v42 + 24), v60, &qword_4AD7B0);
  sub_153B4((uint64_t)v69, (uint64_t)v66, (uint64_t *)&unk_4BC3D0);
  swift_bridgeObjectRetain();
  uint64_t v46 = sub_3B32BC(v32);
  if (v46)
  {
    uint64_t v47 = v46;
    *((void *)&v64 + 1) = type metadata accessor for FlowAction(0);
    uint64_t v65 = sub_3B3AD8((unint64_t *)&qword_4B1FA0, (void (*)(uint64_t))type metadata accessor for FlowAction);

    *(void *)&long long v63 = v47;
    sub_250FC((uint64_t)v69, (uint64_t *)&unk_4BC3D0);
    sub_3B2A0C((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for Category);
  }
  else
  {

    sub_250FC((uint64_t)v69, (uint64_t *)&unk_4BC3D0);
    sub_3B2A0C((uint64_t)v32, (uint64_t (*)(void))type metadata accessor for Category);
    long long v63 = 0u;
    long long v64 = 0u;
    uint64_t v65 = 0;
  }
  *uint64_t v30 = v41;
  uint64_t v48 = (int *)type metadata accessor for CategoryListItem();
  sub_18F88(v34, (uint64_t)v30 + v48[5], (uint64_t *)&unk_4B1F70);
  *(_DWORD *)((char *)v30 + v48[6]) = v54;
  uint64_t v49 = (uint64_t *)((char *)v30 + v48[7]);
  uint64_t *v49 = v44;
  v49[1] = v43;
  long long v50 = (uint64_t *)((char *)v30 + v48[8]);
  uint64_t v51 = v55;
  *long long v50 = v56;
  v50[1] = v51;
  sub_18F88(v45, (uint64_t)v30 + v48[9], &qword_4AD7B0);
  sub_18F88((uint64_t)v66, (uint64_t)v30 + v48[10], (uint64_t *)&unk_4BC3D0);
  sub_18F88((uint64_t)&v63, (uint64_t)v30 + v48[11], (uint64_t *)&unk_4BC3D0);
  sub_18F88(v38, (uint64_t)v30 + v48[12], (uint64_t *)&unk_4B9870);
  return (*(uint64_t (**)(uint64_t *, void, uint64_t, int *))(*((void *)v48 - 1) + 56))(v30, 0, 1, v48);
}

uint64_t CategoryListItem.artwork.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CategoryListItem();
  return sub_153B4(v1 + *(int *)(v3 + 20), a1, (uint64_t *)&unk_4B1F70);
}

uint64_t type metadata accessor for CategoryListItem()
{
  uint64_t result = qword_4C15A8;
  if (!qword_4C15A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t CategoryListItem.color.getter()
{
  return *(unsigned int *)(v0 + *(int *)(type metadata accessor for CategoryListItem() + 24));
}

uint64_t CategoryListItem.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CategoryListItem() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CategoryListItem.subtitle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for CategoryListItem() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t CategoryListItem.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CategoryListItem();
  return sub_153B4(v1 + *(int *)(v3 + 36), a1, &qword_4AD7B0);
}

uint64_t CategoryListItem.playAction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CategoryListItem();
  return sub_153B4(v1 + *(int *)(v3 + 40), a1, (uint64_t *)&unk_4BC3D0);
}

uint64_t CategoryListItem.segue.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CategoryListItem();
  return sub_153B4(v1 + *(int *)(v3 + 44), a1, (uint64_t *)&unk_4BC3D0);
}

uint64_t CategoryListItem.impressionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for CategoryListItem();
  return sub_153B4(v1 + *(int *)(v3 + 48), a1, (uint64_t *)&unk_4B9870);
}

uint64_t CategoryListItem.init(id:artwork:color:title:subtitle:url:playAction:segue:impressionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *a9 = a1;
  uint64_t v20 = (int *)type metadata accessor for CategoryListItem();
  sub_18F88(a2, (uint64_t)a9 + v20[5], (uint64_t *)&unk_4B1F70);
  *(_DWORD *)((char *)a9 + v20[6]) = a3;
  uint64_t v21 = (void *)((char *)a9 + v20[7]);
  void *v21 = a4;
  v21[1] = a5;
  uint64_t v22 = (void *)((char *)a9 + v20[8]);
  void *v22 = a6;
  v22[1] = a7;
  sub_18F88(a8, (uint64_t)a9 + v20[9], &qword_4AD7B0);
  sub_18F88(a10, (uint64_t)a9 + v20[10], (uint64_t *)&unk_4BC3D0);
  sub_18F88(a11, (uint64_t)a9 + v20[11], (uint64_t *)&unk_4BC3D0);
  return sub_18F88(a12, (uint64_t)a9 + v20[12], (uint64_t *)&unk_4B9870);
}

uint64_t CategoryListItem.id.getter()
{
  return sub_3D8B60();
}

uint64_t sub_3AE5F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_153B4(v2 + *(int *)(a1 + 44), a2, (uint64_t *)&unk_4BC3D0);
}

uint64_t sub_3AE620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_153B4(v2 + *(int *)(a1 + 48), a2, (uint64_t *)&unk_4B9870);
}

uint64_t CategoryListItem.shelfUniqueId.getter()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[0] = *v0;
  sub_17264();
  v18[0] = sub_3D8A20();
  v18[1] = v4;
  v19._countAndFlagsBits = 45;
  v19._object = (void *)0xE100000000000000;
  sub_3D7E90(v19);
  uint64_t v5 = (int *)type metadata accessor for CategoryListItem();
  uint64_t v6 = (void *)((char *)v0 + v5[7]);
  uint64_t v7 = *v6;
  uint64_t v8 = (void *)v6[1];
  swift_bridgeObjectRetain();
  v20._countAndFlagsBits = v7;
  v20._object = v8;
  sub_3D7E90(v20);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 45;
  v21._object = (void *)0xE100000000000000;
  sub_3D7E90(v21);
  uint64_t v9 = (void *)((char *)v0 + v5[8]);
  if (v9[1])
  {
    uint64_t v10 = *v9;
    uint64_t v11 = (void *)v9[1];
  }
  else
  {
    uint64_t v10 = 7104878;
    uint64_t v11 = (void *)0xE300000000000000;
  }
  swift_bridgeObjectRetain();
  v22._countAndFlagsBits = v10;
  v22._object = v11;
  sub_3D7E90(v22);
  swift_bridgeObjectRelease();
  v23._countAndFlagsBits = 45;
  v23._object = (void *)0xE100000000000000;
  sub_3D7E90(v23);
  sub_153B4((uint64_t)v0 + v5[9], (uint64_t)v3, &qword_4AD7B0);
  uint64_t v12 = sub_3D2350();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v3, 1, v12) == 1)
  {
    uint64_t v14 = 7104878;
    sub_250FC((uint64_t)v3, &qword_4AD7B0);
    uint64_t v15 = (void *)0xE300000000000000;
  }
  else
  {
    uint64_t v14 = sub_3D2270();
    uint64_t v15 = v16;
    (*(void (**)(char *, uint64_t))(v13 + 8))(v3, v12);
  }
  v24._countAndFlagsBits = v14;
  v24._object = v15;
  sub_3D7E90(v24);
  swift_bridgeObjectRelease();
  return v18[0];
}

uint64_t sub_3AE868@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v35[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v10 = &v35[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v8);
  uint64_t v12 = &v35[-v11];
  uint64_t v13 = sub_3D2350();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = &v35[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v17 = [a1 color];
  if (v17)
  {
    uint64_t v18 = v17;
    uint64_t v37 = a2;
    sub_3D7D50();

    swift_bridgeObjectRetain();
    int v19 = sub_3D51A0();
    swift_bridgeObjectRelease();
    id v20 = [a1 url];
    if (v20)
    {
      Swift::String v21 = v20;
      int v36 = v19;
      sub_3D7D50();

      swift_bridgeObjectRetain();
      sub_3D2320();
      swift_bridgeObjectRelease_n();
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
      {
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 32))(v16, v12, v13);
        [a1 adamID];
        uint64_t v22 = sub_3D5160();
        id v23 = [a1 name];
        uint64_t v24 = sub_3D7D50();
        uint64_t v26 = v25;

        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v14 + 16))(v10, v16, v13);
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
        uint64_t v27 = a1;
        int v28 = v36;
        sub_3AECC0(v27, (uint64_t)v6);
        (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v16, v13);
        uint64_t v29 = v37;
        *uint64_t v37 = v22;
        v29[1] = v24;
        v29[2] = v26;
        uint64_t v30 = (int *)type metadata accessor for Category();
        sub_18F88((uint64_t)v10, (uint64_t)v29 + v30[6], &qword_4AD7B0);
        uint64_t v31 = (char *)v29 + v30[7];
        *(_DWORD *)uint64_t v31 = v28;
        v31[4] = 0;
        sub_18F88((uint64_t)v6, (uint64_t)v29 + v30[8], (uint64_t *)&unk_4B1F70);
        uint64_t v32 = (char *)v29 + v30[9];
        *(void *)uint64_t v32 = 0;
        v32[8] = 1;
        *(uint64_t *)((char *)v29 + v30[10]) = (uint64_t)&_swiftEmptySetSingleton;
        return (*(uint64_t (**)(uint64_t *, void, uint64_t, int *))(*((void *)v30 - 1) + 56))(v29, 0, 1, v30);
      }
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    }
    sub_250FC((uint64_t)v12, &qword_4AD7B0);
    a2 = v37;
  }
  uint64_t v34 = type metadata accessor for Category();
  return (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(a2, 1, 1, v34);
}

uint64_t sub_3AECC0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_3D3750();
  __chkstk_darwin(v4 - 8);
  id v5 = [a1 artworkTemplateURL];
  if (v5)
  {
    uint64_t v6 = v5;
    sub_3D7D50();

    sub_3D36C0();
    if ((v7 & 1) == 0)
    {
      sub_3D36D0();
      if ((v8 & 1) == 0)
      {
        sub_3D3740();
        sub_3D3A30();
        sub_3D3840();
        uint64_t v9 = sub_3D3860();
        return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a2, 0, 1, v9);
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = sub_3D3860();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);

  return v12(a2, 1, 1, v11);
}

uint64_t _s8ShelfKit16CategoryListItemV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v4 = sub_3D2350();
  uint64_t v90 = *(void *)(v4 - 8);
  uint64_t v91 = v4;
  __chkstk_darwin(v4);
  int v86 = (char *)&v84 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v6 - 8);
  uint64_t v87 = (uint64_t)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_4B0460);
  __chkstk_darwin(v88);
  uint64_t v89 = (uint64_t)&v84 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  __chkstk_darwin(v9 - 8);
  int v92 = (uint64_t *)((char *)&v84 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v84 - v12);
  uint64_t v14 = type metadata accessor for CategoryListItem();
  __chkstk_darwin(v14);
  int v99 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v84 - v17;
  __chkstk_darwin(v19);
  uint64_t v98 = (uint64_t)&v84 - v20;
  __chkstk_darwin(v21);
  uint64_t v96 = (char *)&v84 - v22;
  __chkstk_darwin(v23);
  uint64_t v101 = (uint64_t)&v84 - v24;
  __chkstk_darwin(v25);
  uint64_t v100 = (uint64_t)&v84 - v26;
  __chkstk_darwin(v27);
  uint64_t v94 = (uint64_t)&v84 - v28;
  __chkstk_darwin(v29);
  uint64_t v95 = (uint64_t)&v84 - v30;
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v84 - v32;
  __chkstk_darwin(v34);
  int v36 = (char *)&v84 - v35;
  uint64_t v37 = *a1;
  uint64_t v38 = *a2;
  unsigned __int8 v97 = a1;
  sub_3B3B20((uint64_t)a1, (uint64_t)&v84 - v35, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
  uint64_t v93 = a2;
  sub_3B3B20((uint64_t)a2, (uint64_t)v33, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
  if (v37 != v38)
  {
    sub_3B2A0C((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B2A0C((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    uint64_t v44 = (uint64_t)v93;
    uint64_t v46 = (uint64_t)v96;
    uint64_t v45 = (uint64_t)v97;
    uint64_t v47 = v18;
    uint64_t v48 = v100;
LABEL_19:
    uint64_t v53 = v94;
    uint64_t v52 = v95;
    sub_3B3B20(v45, v95, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B3B20(v44, v53, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
LABEL_20:
    sub_3B2A0C(v53, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B2A0C(v52, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B3B20(v45, v48, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    uint64_t v54 = v101;
    sub_3B3B20(v44, v101, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
LABEL_21:
    sub_3B2A0C(v48, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B2A0C(v54, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B3B20(v45, v46, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    uint64_t v55 = v98;
    sub_3B3B20(v44, v98, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    uint64_t v56 = (uint64_t)v47;
    uint64_t v57 = (uint64_t)v99;
LABEL_22:
    sub_3B2A0C(v55, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B2A0C(v46, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
LABEL_23:
    sub_3B3B20(v45, v56, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B3B20(v44, v57, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
LABEL_24:
    sub_3B2A0C(v57, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B2A0C(v56, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    goto LABEL_25;
  }
  uint64_t v85 = v18;
  sub_153B4((uint64_t)&v36[*(int *)(v14 + 20)], (uint64_t)v13, (uint64_t *)&unk_4B1F70);
  uint64_t v39 = sub_3D3860();
  uint64_t v40 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v39 - 8) + 48);
  uint64_t v41 = (int *)v14;
  if (v40(v13, 1, v39) == 1)
  {
    sub_250FC((uint64_t)v13, (uint64_t *)&unk_4B1F70);
    uint64_t v42 = 0;
    uint64_t v43 = 0;
  }
  else
  {
    uint64_t v42 = *v13;
    uint64_t v43 = v13[1];
    swift_bridgeObjectRetain();
    sub_3B2A0C((uint64_t)v13, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  }
  uint64_t v49 = v92;
  sub_153B4((uint64_t)&v33[v41[5]], (uint64_t)v92, (uint64_t *)&unk_4B1F70);
  if (v40(v49, 1, v39) == 1)
  {
    sub_250FC((uint64_t)v49, (uint64_t *)&unk_4B1F70);
    uint64_t v47 = v85;
    uint64_t v48 = v100;
    if (!v43)
    {
      uint64_t v50 = 0;
      uint64_t v44 = (uint64_t)v93;
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  uint64_t v51 = *v49;
  uint64_t v50 = v49[1];
  swift_bridgeObjectRetain();
  sub_3B2A0C((uint64_t)v49, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
  if (!v43)
  {
    uint64_t v47 = v85;
    uint64_t v44 = (uint64_t)v93;
    uint64_t v48 = v100;
LABEL_16:
    sub_3B2A0C((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B2A0C((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    if (v50)
    {
      swift_bridgeObjectRelease();
      goto LABEL_18;
    }
    goto LABEL_27;
  }
  uint64_t v47 = v85;
  uint64_t v48 = v100;
  if (!v50)
  {
LABEL_14:
    swift_bridgeObjectRetain();
    sub_3B2A0C((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B2A0C((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    swift_bridgeObjectRelease_n();
    uint64_t v44 = (uint64_t)v93;
LABEL_18:
    uint64_t v46 = (uint64_t)v96;
    uint64_t v45 = (uint64_t)v97;
    goto LABEL_19;
  }
  if (v42 == v51 && v43 == v50)
  {
    swift_bridgeObjectRelease();
    sub_3B2A0C((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B2A0C((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    swift_bridgeObjectRelease();
    uint64_t v44 = (uint64_t)v93;
LABEL_27:
    uint64_t v45 = (uint64_t)v97;
    uint64_t v52 = v95;
    sub_3B3B20((uint64_t)v97, v95, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    uint64_t v53 = v94;
    sub_3B3B20(v44, v94, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    uint64_t v46 = (uint64_t)v96;
    goto LABEL_28;
  }
  char v66 = sub_3D8FE0();
  swift_bridgeObjectRelease();
  sub_3B2A0C((uint64_t)v33, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
  sub_3B2A0C((uint64_t)v36, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
  swift_bridgeObjectRelease();
  uint64_t v45 = (uint64_t)v97;
  uint64_t v52 = v95;
  sub_3B3B20((uint64_t)v97, v95, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
  uint64_t v44 = (uint64_t)v93;
  uint64_t v53 = v94;
  sub_3B3B20((uint64_t)v93, v94, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
  uint64_t v46 = (uint64_t)v96;
  if ((v66 & 1) == 0) {
    goto LABEL_20;
  }
LABEL_28:
  BOOL v60 = sub_285F44(*(_DWORD *)(v52 + v41[6]), *(_DWORD *)(v53 + v41[6]));
  sub_3B2A0C(v53, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
  sub_3B2A0C(v52, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
  id v61 = v41;
  sub_3B3B20(v45, v48, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
  uint64_t v54 = v101;
  sub_3B3B20(v44, v101, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
  if (!v60) {
    goto LABEL_21;
  }
  uint64_t v62 = v41[7];
  long long v63 = (void *)(v48 + v62);
  uint64_t v64 = *(void *)(v48 + v62 + 8);
  uint64_t v65 = (void *)(v54 + v62);
  uint64_t v55 = v98;
  uint64_t v56 = (uint64_t)v47;
  if (*v63 == *v65 && v64 == v65[1])
  {
    sub_3B2A0C(v100, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B2A0C(v101, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B3B20(v45, v46, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B3B20(v44, v55, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    uint64_t v57 = (uint64_t)v99;
  }
  else
  {
    char v67 = sub_3D8FE0();
    sub_3B2A0C(v100, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B2A0C(v101, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B3B20(v45, v46, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B3B20(v44, v55, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    uint64_t v57 = (uint64_t)v99;
    if ((v67 & 1) == 0) {
      goto LABEL_22;
    }
  }
  uint64_t v68 = v61[8];
  long long v69 = (void *)(v46 + v68);
  uint64_t v70 = *(void *)(v46 + v68 + 8);
  Swift::String v71 = (void *)(v55 + v68);
  uint64_t v72 = v71[1];
  if (!v70)
  {
    swift_bridgeObjectRetain();
    sub_3B2A0C(v55, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B2A0C(v46, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    if (!v72) {
      goto LABEL_41;
    }
LABEL_43:
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  if (!v72)
  {
    swift_bridgeObjectRetain();
    sub_3B2A0C(v55, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B2A0C(v46, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    goto LABEL_43;
  }
  if (*v69 == *v71 && v70 == v72)
  {
    swift_bridgeObjectRetain();
    sub_3B2A0C(v55, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B2A0C(v46, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    swift_bridgeObjectRelease();
LABEL_41:
    sub_3B3B20(v45, v56, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B3B20(v44, v57, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    goto LABEL_45;
  }
  char v73 = sub_3D8FE0();
  swift_bridgeObjectRetain();
  sub_3B2A0C(v55, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
  sub_3B2A0C(v46, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
  swift_bridgeObjectRelease();
  sub_3B3B20(v45, v56, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
  sub_3B3B20(v44, v57, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
  if ((v73 & 1) == 0) {
    goto LABEL_24;
  }
LABEL_45:
  uint64_t v74 = v61[9];
  uint64_t v75 = v57 + v74;
  uint64_t v76 = v89;
  uint64_t v77 = v89 + *(int *)(v88 + 48);
  sub_153B4(v56 + v74, v89, &qword_4AD7B0);
  sub_153B4(v75, v77, &qword_4AD7B0);
  uint64_t v79 = v90;
  uint64_t v78 = v91;
  uint64_t v80 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
  if (v80(v76, 1, v91) == 1)
  {
    sub_3B2A0C(v57, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B2A0C(v56, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    if (v80(v77, 1, v78) == 1)
    {
      sub_250FC(v76, &qword_4AD7B0);
      char v58 = 1;
      return v58 & 1;
    }
  }
  else
  {
    uint64_t v81 = v87;
    sub_153B4(v76, v87, &qword_4AD7B0);
    if (v80(v77, 1, v78) != 1)
    {
      int v82 = v86;
      (*(void (**)(char *, uint64_t, uint64_t))(v79 + 32))(v86, v77, v78);
      sub_3B3AD8((unint64_t *)&qword_4A9AF0, (void (*)(uint64_t))&type metadata accessor for URL);
      char v58 = sub_3D7C80();
      int v83 = *(void (**)(char *, uint64_t))(v79 + 8);
      v83(v82, v78);
      sub_3B2A0C(v57, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
      sub_3B2A0C(v56, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
      v83((char *)v81, v78);
      sub_250FC(v76, &qword_4AD7B0);
      return v58 & 1;
    }
    sub_3B2A0C(v57, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    sub_3B2A0C(v56, (uint64_t (*)(void))type metadata accessor for CategoryListItem);
    (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v81, v78);
  }
  sub_250FC(v76, &qword_4B0460);
LABEL_25:
  char v58 = 0;
  return v58 & 1;
}

uint64_t sub_3AFCF0()
{
  return sub_3B3AD8(&qword_4C1548, (void (*)(uint64_t))type metadata accessor for CategoryListItem);
}

uint64_t sub_3AFD38(uint64_t a1)
{
  uint64_t result = sub_3B3AD8(&qword_4C1548, (void (*)(uint64_t))type metadata accessor for CategoryListItem);
  *(void *)(a1 + 8) = result;
  return result;
}

void *initializeBufferWithCopyOfBuffer for CategoryListItem(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    uint64_t v10 = (int *)sub_3D3860();
    uint64_t v11 = *((void *)v10 - 1);
    if ((*(unsigned int (**)(void *, uint64_t, int *))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      uint64_t v14 = v9[1];
      *uint64_t v8 = *v9;
      v8[1] = v14;
      int v15 = *((unsigned __int8 *)v9 + 32);
      swift_bridgeObjectRetain();
      if (v15 == 255)
      {
        *((_OWORD *)v8 + 1) = *((_OWORD *)v9 + 1);
        *((unsigned char *)v8 + 32) = *((unsigned char *)v9 + 32);
      }
      else
      {
        uint64_t v16 = v9[2];
        uint64_t v17 = v9[3];
        sub_4C484(v16, v17, v15);
        v8[2] = v16;
        v8[3] = v17;
        *((unsigned char *)v8 + 32) = v15;
      }
      *(_OWORD *)(v8 + 5) = *(_OWORD *)(v9 + 5);
      uint64_t v18 = (id *)(v9 + 7);
      int v19 = *((unsigned __int8 *)v9 + 64);
      if (v19 == 255)
      {
        v8[7] = *v18;
        *((unsigned char *)v8 + 64) = *((unsigned char *)v9 + 64);
      }
      else
      {
        id v20 = *v18;
        sub_4C49C(*v18, *((unsigned char *)v9 + 64));
        v8[7] = v20;
        *((unsigned char *)v8 + 64) = v19;
      }
      uint64_t v21 = (id *)(v9 + 9);
      int v22 = *((unsigned __int8 *)v9 + 80);
      if (v22 == 255)
      {
        v8[9] = *v21;
        *((unsigned char *)v8 + 80) = *((unsigned char *)v9 + 80);
      }
      else
      {
        id v23 = *v21;
        sub_4C49C(*v21, *((unsigned char *)v9 + 80));
        v8[9] = v23;
        *((unsigned char *)v8 + 80) = v22;
      }
      uint64_t v24 = (id *)(v9 + 11);
      int v25 = *((unsigned __int8 *)v9 + 96);
      if (v25 == 255)
      {
        v8[11] = *v24;
        *((unsigned char *)v8 + 96) = *((unsigned char *)v9 + 96);
      }
      else
      {
        id v26 = *v24;
        sub_4C49C(*v24, *((unsigned char *)v9 + 96));
        v8[11] = v26;
        *((unsigned char *)v8 + 96) = v25;
      }
      uint64_t v27 = (id *)(v9 + 13);
      int v28 = *((unsigned __int8 *)v9 + 112);
      if (v28 == 255)
      {
        v8[13] = *v27;
        *((unsigned char *)v8 + 112) = *((unsigned char *)v9 + 112);
      }
      else
      {
        id v29 = *v27;
        sub_4C49C(*v27, *((unsigned char *)v9 + 112));
        v8[13] = v29;
        *((unsigned char *)v8 + 112) = v28;
      }
      uint64_t v30 = (id *)(v9 + 15);
      int v31 = *((unsigned __int8 *)v9 + 128);
      if (v31 == 255)
      {
        v8[15] = *v30;
        *((unsigned char *)v8 + 128) = *((unsigned char *)v9 + 128);
      }
      else
      {
        id v32 = *v30;
        sub_4C49C(*v30, *((unsigned char *)v9 + 128));
        v8[15] = v32;
        *((unsigned char *)v8 + 128) = v31;
      }
      *((unsigned char *)v8 + 129) = *((unsigned char *)v9 + 129);
      uint64_t v33 = v10[11];
      uint64_t v34 = (char *)v8 + v33;
      uint64_t v35 = (char *)v9 + v33;
      uint64_t v36 = sub_3D3750();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 16))(v34, v35, v36);
      uint64_t v37 = v10[12];
      uint64_t v38 = (void *)((char *)v8 + v37);
      uint64_t v39 = (void *)((char *)v9 + v37);
      uint64_t v40 = v39[1];
      void *v38 = *v39;
      v38[1] = v40;
      *((unsigned char *)v8 + v10[13]) = *((unsigned char *)v9 + v10[13]);
      *((unsigned char *)v8 + v10[14]) = *((unsigned char *)v9 + v10[14]);
      *((unsigned char *)v8 + v10[15]) = *((unsigned char *)v9 + v10[15]);
      uint64_t v41 = v10[16];
      uint64_t v42 = (void *)((char *)v8 + v41);
      uint64_t v43 = (void *)((char *)v9 + v41);
      uint64_t v44 = v43[1];
      void *v42 = *v43;
      v42[1] = v44;
      uint64_t v45 = *(void (**)(void *, void, uint64_t, int *))(v11 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(v8, 0, 1, v10);
    }
    uint64_t v46 = a3[7];
    *(_DWORD *)((char *)v4 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
    uint64_t v47 = (void *)((char *)v4 + v46);
    uint64_t v48 = (void *)((char *)a2 + v46);
    uint64_t v49 = v48[1];
    void *v47 = *v48;
    v47[1] = v49;
    uint64_t v50 = a3[8];
    uint64_t v51 = a3[9];
    uint64_t v52 = (void *)((char *)v4 + v50);
    uint64_t v53 = (void *)((char *)a2 + v50);
    uint64_t v54 = v53[1];
    void *v52 = *v53;
    v52[1] = v54;
    uint64_t v55 = (char *)v4 + v51;
    uint64_t v80 = a2;
    uint64_t v56 = (char *)a2 + v51;
    uint64_t v57 = sub_3D2350();
    uint64_t v58 = *(void *)(v57 - 8);
    id v59 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v58 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v59(v56, 1, v57))
    {
      uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
      memcpy(v55, v56, *(void *)(*(void *)(v60 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v55, v56, v57);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
    }
    uint64_t v61 = a3[10];
    uint64_t v62 = (char *)v4 + v61;
    long long v63 = (char *)v80 + v61;
    uint64_t v64 = *(void *)((char *)v80 + v61 + 24);
    if (v64)
    {
      uint64_t v65 = *((void *)v63 + 4);
      *((void *)v62 + 3) = v64;
      *((void *)v62 + 4) = v65;
      (**(void (***)(void))(v64 - 8))();
    }
    else
    {
      long long v66 = *((_OWORD *)v63 + 1);
      *(_OWORD *)uint64_t v62 = *(_OWORD *)v63;
      *((_OWORD *)v62 + 1) = v66;
      *((void *)v62 + 4) = *((void *)v63 + 4);
    }
    uint64_t v67 = a3[11];
    uint64_t v68 = (char *)v4 + v67;
    long long v69 = (char *)v80 + v67;
    uint64_t v70 = *(void *)((char *)v80 + v67 + 24);
    if (v70)
    {
      uint64_t v71 = *((void *)v69 + 4);
      *((void *)v68 + 3) = v70;
      *((void *)v68 + 4) = v71;
      (**(void (***)(void))(v70 - 8))();
    }
    else
    {
      long long v72 = *((_OWORD *)v69 + 1);
      *(_OWORD *)uint64_t v68 = *(_OWORD *)v69;
      *((_OWORD *)v68 + 1) = v72;
      *((void *)v68 + 4) = *((void *)v69 + 4);
    }
    uint64_t v73 = a3[12];
    uint64_t v74 = (char *)v4 + v73;
    uint64_t v75 = (char *)v80 + v73;
    uint64_t v76 = sub_3D7340();
    uint64_t v77 = *(void *)(v76 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
    {
      uint64_t v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
      memcpy(v74, v75, *(void *)(*(void *)(v78 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v74, v75, v76);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
    }
  }
  return v4;
}

uint64_t destroy for CategoryListItem(uint64_t a1, int *a2)
{
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_3D3860();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    int v6 = *(unsigned __int8 *)(v4 + 32);
    if (v6 != 255) {
      sub_49E54(*(void *)(v4 + 16), *(void *)(v4 + 24), v6);
    }
    int v7 = *(unsigned __int8 *)(v4 + 64);
    if (v7 != 255) {
      sub_4C6F0(*(id *)(v4 + 56), v7);
    }
    int v8 = *(unsigned __int8 *)(v4 + 80);
    if (v8 != 255) {
      sub_4C6F0(*(id *)(v4 + 72), v8);
    }
    int v9 = *(unsigned __int8 *)(v4 + 96);
    if (v9 != 255) {
      sub_4C6F0(*(id *)(v4 + 88), v9);
    }
    int v10 = *(unsigned __int8 *)(v4 + 112);
    if (v10 != 255) {
      sub_4C6F0(*(id *)(v4 + 104), v10);
    }
    int v11 = *(unsigned __int8 *)(v4 + 128);
    if (v11 != 255) {
      sub_4C6F0(*(id *)(v4 + 120), v11);
    }
    uint64_t v12 = v4 + *(int *)(v5 + 44);
    uint64_t v13 = sub_3D3750();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = a1 + a2[9];
  uint64_t v15 = sub_3D2350();
  uint64_t v16 = *(void *)(v15 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15)) {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  }
  uint64_t v17 = a1 + a2[10];
  if (*(void *)(v17 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v17);
  }
  uint64_t v18 = a1 + a2[11];
  if (*(void *)(v18 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v18);
  }
  uint64_t v19 = a1 + a2[12];
  uint64_t v20 = sub_3D7340();
  uint64_t v23 = *(void *)(v20 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v19, 1, v20);
  if (!result)
  {
    int v22 = *(uint64_t (**)(uint64_t, uint64_t))(v23 + 8);
    return v22(v19, v20);
  }
  return result;
}

void *initializeWithCopy for CategoryListItem(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  int v7 = (void *)((char *)a1 + v6);
  int v8 = (void *)((char *)a2 + v6);
  int v9 = (int *)sub_3D3860();
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    uint64_t v12 = v8[1];
    *int v7 = *v8;
    v7[1] = v12;
    int v13 = *((unsigned __int8 *)v8 + 32);
    swift_bridgeObjectRetain();
    if (v13 == 255)
    {
      *((_OWORD *)v7 + 1) = *((_OWORD *)v8 + 1);
      *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
    }
    else
    {
      uint64_t v14 = v8[2];
      uint64_t v15 = v8[3];
      sub_4C484(v14, v15, v13);
      v7[2] = v14;
      v7[3] = v15;
      *((unsigned char *)v7 + 32) = v13;
    }
    *(_OWORD *)(v7 + 5) = *(_OWORD *)(v8 + 5);
    uint64_t v16 = (id *)(v8 + 7);
    int v17 = *((unsigned __int8 *)v8 + 64);
    if (v17 == 255)
    {
      v7[7] = *v16;
      *((unsigned char *)v7 + 64) = *((unsigned char *)v8 + 64);
    }
    else
    {
      id v18 = *v16;
      sub_4C49C(*v16, *((unsigned char *)v8 + 64));
      v7[7] = v18;
      *((unsigned char *)v7 + 64) = v17;
    }
    uint64_t v19 = (id *)(v8 + 9);
    int v20 = *((unsigned __int8 *)v8 + 80);
    if (v20 == 255)
    {
      v7[9] = *v19;
      *((unsigned char *)v7 + 80) = *((unsigned char *)v8 + 80);
    }
    else
    {
      id v21 = *v19;
      sub_4C49C(*v19, *((unsigned char *)v8 + 80));
      v7[9] = v21;
      *((unsigned char *)v7 + 80) = v20;
    }
    int v22 = (id *)(v8 + 11);
    int v23 = *((unsigned __int8 *)v8 + 96);
    if (v23 == 255)
    {
      v7[11] = *v22;
      *((unsigned char *)v7 + 96) = *((unsigned char *)v8 + 96);
    }
    else
    {
      id v24 = *v22;
      sub_4C49C(*v22, *((unsigned char *)v8 + 96));
      v7[11] = v24;
      *((unsigned char *)v7 + 96) = v23;
    }
    int v25 = (id *)(v8 + 13);
    int v26 = *((unsigned __int8 *)v8 + 112);
    if (v26 == 255)
    {
      v7[13] = *v25;
      *((unsigned char *)v7 + 112) = *((unsigned char *)v8 + 112);
    }
    else
    {
      id v27 = *v25;
      sub_4C49C(*v25, *((unsigned char *)v8 + 112));
      v7[13] = v27;
      *((unsigned char *)v7 + 112) = v26;
    }
    int v28 = (id *)(v8 + 15);
    int v29 = *((unsigned __int8 *)v8 + 128);
    if (v29 == 255)
    {
      v7[15] = *v28;
      *((unsigned char *)v7 + 128) = *((unsigned char *)v8 + 128);
    }
    else
    {
      id v30 = *v28;
      sub_4C49C(*v28, *((unsigned char *)v8 + 128));
      v7[15] = v30;
      *((unsigned char *)v7 + 128) = v29;
    }
    *((unsigned char *)v7 + 129) = *((unsigned char *)v8 + 129);
    uint64_t v31 = v9[11];
    id v32 = (char *)v7 + v31;
    uint64_t v33 = (char *)v8 + v31;
    uint64_t v34 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v34 - 8) + 16))(v32, v33, v34);
    uint64_t v35 = v9[12];
    uint64_t v36 = (void *)((char *)v7 + v35);
    uint64_t v37 = (void *)((char *)v8 + v35);
    uint64_t v38 = v37[1];
    *uint64_t v36 = *v37;
    v36[1] = v38;
    *((unsigned char *)v7 + v9[13]) = *((unsigned char *)v8 + v9[13]);
    *((unsigned char *)v7 + v9[14]) = *((unsigned char *)v8 + v9[14]);
    *((unsigned char *)v7 + v9[15]) = *((unsigned char *)v8 + v9[15]);
    uint64_t v39 = v9[16];
    uint64_t v40 = (void *)((char *)v7 + v39);
    uint64_t v41 = (void *)((char *)v8 + v39);
    uint64_t v42 = v41[1];
    *uint64_t v40 = *v41;
    v40[1] = v42;
    uint64_t v43 = *(void (**)(void *, void, uint64_t, int *))(v10 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v43(v7, 0, 1, v9);
  }
  uint64_t v44 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v45 = (void *)((char *)a1 + v44);
  uint64_t v46 = (void *)((char *)a2 + v44);
  uint64_t v47 = v46[1];
  *uint64_t v45 = *v46;
  v45[1] = v47;
  uint64_t v48 = a3[8];
  uint64_t v49 = a3[9];
  uint64_t v78 = a3;
  uint64_t v50 = (void *)((char *)a1 + v48);
  uint64_t v51 = (void *)((char *)a2 + v48);
  uint64_t v52 = v51[1];
  *uint64_t v50 = *v51;
  v50[1] = v52;
  uint64_t v53 = (char *)a1 + v49;
  uint64_t v54 = (char *)a2 + v49;
  uint64_t v55 = sub_3D2350();
  uint64_t v56 = *(void *)(v55 - 8);
  uint64_t v57 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v57(v54, 1, v55))
  {
    uint64_t v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    memcpy(v53, v54, *(void *)(*(void *)(v58 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  uint64_t v59 = v78[10];
  uint64_t v60 = (char *)a1 + v59;
  uint64_t v61 = (char *)a2 + v59;
  uint64_t v62 = *(void *)((char *)a2 + v59 + 24);
  if (v62)
  {
    uint64_t v63 = *((void *)v61 + 4);
    *((void *)v60 + 3) = v62;
    *((void *)v60 + 4) = v63;
    (**(void (***)(void))(v62 - 8))();
  }
  else
  {
    long long v64 = *((_OWORD *)v61 + 1);
    *(_OWORD *)uint64_t v60 = *(_OWORD *)v61;
    *((_OWORD *)v60 + 1) = v64;
    *((void *)v60 + 4) = *((void *)v61 + 4);
  }
  uint64_t v65 = v78[11];
  long long v66 = (char *)a1 + v65;
  uint64_t v67 = (char *)a2 + v65;
  uint64_t v68 = *(void *)((char *)a2 + v65 + 24);
  if (v68)
  {
    uint64_t v69 = *((void *)v67 + 4);
    *((void *)v66 + 3) = v68;
    *((void *)v66 + 4) = v69;
    (**(void (***)(void))(v68 - 8))();
  }
  else
  {
    long long v70 = *((_OWORD *)v67 + 1);
    *(_OWORD *)long long v66 = *(_OWORD *)v67;
    *((_OWORD *)v66 + 1) = v70;
    *((void *)v66 + 4) = *((void *)v67 + 4);
  }
  uint64_t v71 = v78[12];
  long long v72 = (char *)a1 + v71;
  uint64_t v73 = (char *)a2 + v71;
  uint64_t v74 = sub_3D7340();
  uint64_t v75 = *(void *)(v74 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48))(v73, 1, v74))
  {
    uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(v72, v73, *(void *)(*(void *)(v76 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v75 + 16))(v72, v73, v74);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v75 + 56))(v72, 0, 1, v74);
  }
  return a1;
}

void *assignWithCopy for CategoryListItem(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (uint64_t)a1 + v6;
  int v8 = (char *)a2 + v6;
  int v9 = (int *)sub_3D3860();
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      *(void *)uint64_t v7 = *(void *)v8;
      *(void *)(v7 + 8) = *((void *)v8 + 1);
      int v14 = v8[32];
      swift_bridgeObjectRetain();
      if (v14 == 255)
      {
        long long v26 = *((_OWORD *)v8 + 1);
        *(unsigned char *)(v7 + 32) = v8[32];
        *(_OWORD *)(v7 + 16) = v26;
      }
      else
      {
        uint64_t v15 = *((void *)v8 + 2);
        uint64_t v16 = *((void *)v8 + 3);
        sub_4C484(v15, v16, v14);
        *(void *)(v7 + 16) = v15;
        *(void *)(v7 + 24) = v16;
        *(unsigned char *)(v7 + 32) = v14;
      }
      *(void *)(v7 + 40) = *((void *)v8 + 5);
      *(void *)(v7 + 48) = *((void *)v8 + 6);
      id v27 = (id *)(v8 + 56);
      int v28 = v8[64];
      if (v28 == 255)
      {
        id v30 = *v27;
        *(unsigned char *)(v7 + 64) = v8[64];
        *(void *)(v7 + 56) = v30;
      }
      else
      {
        id v29 = *v27;
        sub_4C49C(*v27, v8[64]);
        *(void *)(v7 + 56) = v29;
        *(unsigned char *)(v7 + 64) = v28;
      }
      uint64_t v31 = (id *)(v8 + 72);
      int v32 = v8[80];
      if (v32 == 255)
      {
        id v34 = *v31;
        *(unsigned char *)(v7 + 80) = v8[80];
        *(void *)(v7 + 72) = v34;
      }
      else
      {
        id v33 = *v31;
        sub_4C49C(*v31, v8[80]);
        *(void *)(v7 + 72) = v33;
        *(unsigned char *)(v7 + 80) = v32;
      }
      uint64_t v35 = (id *)(v8 + 88);
      int v36 = v8[96];
      if (v36 == 255)
      {
        id v38 = *v35;
        *(unsigned char *)(v7 + 96) = v8[96];
        *(void *)(v7 + 88) = v38;
      }
      else
      {
        id v37 = *v35;
        sub_4C49C(*v35, v8[96]);
        *(void *)(v7 + 88) = v37;
        *(unsigned char *)(v7 + 96) = v36;
      }
      uint64_t v39 = (id *)(v8 + 104);
      int v40 = v8[112];
      if (v40 == 255)
      {
        id v42 = *v39;
        *(unsigned char *)(v7 + 112) = v8[112];
        *(void *)(v7 + 104) = v42;
      }
      else
      {
        id v41 = *v39;
        sub_4C49C(*v39, v8[112]);
        *(void *)(v7 + 104) = v41;
        *(unsigned char *)(v7 + 112) = v40;
      }
      uint64_t v43 = (id *)(v8 + 120);
      int v44 = v8[128];
      if (v44 == 255)
      {
        id v46 = *v43;
        *(unsigned char *)(v7 + 128) = v8[128];
        *(void *)(v7 + 120) = v46;
      }
      else
      {
        id v45 = *v43;
        sub_4C49C(*v43, v8[128]);
        *(void *)(v7 + 120) = v45;
        *(unsigned char *)(v7 + 128) = v44;
      }
      *(unsigned char *)(v7 + 129) = v8[129];
      uint64_t v47 = v9[11];
      uint64_t v48 = v7 + v47;
      uint64_t v49 = &v8[v47];
      uint64_t v50 = sub_3D3750();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v50 - 8) + 16))(v48, v49, v50);
      uint64_t v51 = v9[12];
      uint64_t v52 = (void *)(v7 + v51);
      uint64_t v53 = &v8[v51];
      void *v52 = *(void *)v53;
      v52[1] = *((void *)v53 + 1);
      *(unsigned char *)(v7 + v9[13]) = v8[v9[13]];
      *(unsigned char *)(v7 + v9[14]) = v8[v9[14]];
      *(unsigned char *)(v7 + v9[15]) = v8[v9[15]];
      uint64_t v54 = v9[16];
      uint64_t v55 = (void *)(v7 + v54);
      uint64_t v56 = &v8[v54];
      *uint64_t v55 = *(void *)v56;
      v55[1] = *((void *)v56 + 1);
      uint64_t v57 = *(void (**)(uint64_t, void, uint64_t, int *))(v10 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v57(v7, 0, 1, v9);
      goto LABEL_68;
    }
LABEL_7:
    uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy((void *)v7, v8, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_68;
  }
  if (v13)
  {
    sub_3B2A0C(v7, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
    goto LABEL_7;
  }
  *(void *)uint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = *((void *)v8 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v18 = (long long *)(v7 + 16);
  uint64_t v19 = (long long *)(v8 + 16);
  int v20 = v8[32];
  if (*(unsigned __int8 *)(v7 + 32) == 255)
  {
    if (v20 == 255)
    {
      long long v61 = *v19;
      *(unsigned char *)(v7 + 32) = v8[32];
      *id v18 = v61;
    }
    else
    {
      uint64_t v58 = *((void *)v8 + 2);
      uint64_t v59 = *((void *)v8 + 3);
      sub_4C484(v58, v59, v8[32]);
      *(void *)(v7 + 16) = v58;
      *(void *)(v7 + 24) = v59;
      *(unsigned char *)(v7 + 32) = v20;
    }
  }
  else if (v20 == 255)
  {
    sub_4D7B0(v7 + 16);
    char v60 = v8[32];
    *id v18 = *v19;
    *(unsigned char *)(v7 + 32) = v60;
  }
  else
  {
    uint64_t v21 = *((void *)v8 + 2);
    uint64_t v22 = *((void *)v8 + 3);
    sub_4C484(v21, v22, v8[32]);
    uint64_t v23 = *(void *)(v7 + 16);
    uint64_t v24 = *(void *)(v7 + 24);
    *(void *)(v7 + 16) = v21;
    *(void *)(v7 + 24) = v22;
    unsigned __int8 v25 = *(unsigned char *)(v7 + 32);
    *(unsigned char *)(v7 + 32) = v20;
    sub_49E54(v23, v24, v25);
  }
  *(void *)(v7 + 40) = *((void *)v8 + 5);
  *(void *)(v7 + 48) = *((void *)v8 + 6);
  uint64_t v62 = (id *)(v7 + 56);
  uint64_t v63 = (id *)(v8 + 56);
  int v64 = v8[64];
  if (*(unsigned __int8 *)(v7 + 64) == 255)
  {
    if (v64 == 255)
    {
      id v70 = *v63;
      *(unsigned char *)(v7 + 64) = v8[64];
      *uint64_t v62 = v70;
    }
    else
    {
      id v68 = *v63;
      sub_4C49C(*v63, v8[64]);
      *(void *)(v7 + 56) = v68;
      *(unsigned char *)(v7 + 64) = v64;
    }
  }
  else if (v64 == 255)
  {
    sub_4D804(v7 + 56);
    char v69 = v8[64];
    *uint64_t v62 = *v63;
    *(unsigned char *)(v7 + 64) = v69;
  }
  else
  {
    id v65 = *v63;
    sub_4C49C(*v63, v8[64]);
    long long v66 = *(void **)(v7 + 56);
    *(void *)(v7 + 56) = v65;
    char v67 = *(unsigned char *)(v7 + 64);
    *(unsigned char *)(v7 + 64) = v64;
    sub_4C6F0(v66, v67);
  }
  uint64_t v71 = (id *)(v7 + 72);
  long long v72 = (id *)(v8 + 72);
  int v73 = v8[80];
  if (*(unsigned __int8 *)(v7 + 80) == 255)
  {
    if (v73 == 255)
    {
      id v79 = *v72;
      *(unsigned char *)(v7 + 80) = v8[80];
      id *v71 = v79;
    }
    else
    {
      id v77 = *v72;
      sub_4C49C(*v72, v8[80]);
      *(void *)(v7 + 72) = v77;
      *(unsigned char *)(v7 + 80) = v73;
    }
  }
  else if (v73 == 255)
  {
    sub_4D804(v7 + 72);
    char v78 = v8[80];
    id *v71 = *v72;
    *(unsigned char *)(v7 + 80) = v78;
  }
  else
  {
    id v74 = *v72;
    sub_4C49C(*v72, v8[80]);
    uint64_t v75 = *(void **)(v7 + 72);
    *(void *)(v7 + 72) = v74;
    char v76 = *(unsigned char *)(v7 + 80);
    *(unsigned char *)(v7 + 80) = v73;
    sub_4C6F0(v75, v76);
  }
  uint64_t v80 = (id *)(v7 + 88);
  uint64_t v81 = (id *)(v8 + 88);
  int v82 = v8[96];
  if (*(unsigned __int8 *)(v7 + 96) == 255)
  {
    if (v82 == 255)
    {
      id v88 = *v81;
      *(unsigned char *)(v7 + 96) = v8[96];
      id *v80 = v88;
    }
    else
    {
      id v86 = *v81;
      sub_4C49C(*v81, v8[96]);
      *(void *)(v7 + 88) = v86;
      *(unsigned char *)(v7 + 96) = v82;
    }
  }
  else if (v82 == 255)
  {
    sub_4D804(v7 + 88);
    char v87 = v8[96];
    id *v80 = *v81;
    *(unsigned char *)(v7 + 96) = v87;
  }
  else
  {
    id v83 = *v81;
    sub_4C49C(*v81, v8[96]);
    uint64_t v84 = *(void **)(v7 + 88);
    *(void *)(v7 + 88) = v83;
    char v85 = *(unsigned char *)(v7 + 96);
    *(unsigned char *)(v7 + 96) = v82;
    sub_4C6F0(v84, v85);
  }
  uint64_t v89 = (id *)(v7 + 104);
  uint64_t v90 = (id *)(v8 + 104);
  int v91 = v8[112];
  if (*(unsigned __int8 *)(v7 + 112) == 255)
  {
    if (v91 == 255)
    {
      id v97 = *v90;
      *(unsigned char *)(v7 + 112) = v8[112];
      id *v89 = v97;
    }
    else
    {
      id v95 = *v90;
      sub_4C49C(*v90, v8[112]);
      *(void *)(v7 + 104) = v95;
      *(unsigned char *)(v7 + 112) = v91;
    }
  }
  else if (v91 == 255)
  {
    sub_4D804(v7 + 104);
    char v96 = v8[112];
    id *v89 = *v90;
    *(unsigned char *)(v7 + 112) = v96;
  }
  else
  {
    id v92 = *v90;
    sub_4C49C(*v90, v8[112]);
    uint64_t v93 = *(void **)(v7 + 104);
    *(void *)(v7 + 104) = v92;
    char v94 = *(unsigned char *)(v7 + 112);
    *(unsigned char *)(v7 + 112) = v91;
    sub_4C6F0(v93, v94);
  }
  uint64_t v98 = (id *)(v7 + 120);
  int v99 = (id *)(v8 + 120);
  int v100 = v8[128];
  if (*(unsigned __int8 *)(v7 + 128) == 255)
  {
    if (v100 == 255)
    {
      id v106 = *v99;
      *(unsigned char *)(v7 + 128) = v8[128];
      id *v98 = v106;
    }
    else
    {
      id v104 = *v99;
      sub_4C49C(*v99, v8[128]);
      *(void *)(v7 + 120) = v104;
      *(unsigned char *)(v7 + 128) = v100;
    }
  }
  else if (v100 == 255)
  {
    sub_4D804(v7 + 120);
    char v105 = v8[128];
    id *v98 = *v99;
    *(unsigned char *)(v7 + 128) = v105;
  }
  else
  {
    id v101 = *v99;
    sub_4C49C(*v99, v8[128]);
    uint64_t v102 = *(void **)(v7 + 120);
    *(void *)(v7 + 120) = v101;
    char v103 = *(unsigned char *)(v7 + 128);
    *(unsigned char *)(v7 + 128) = v100;
    sub_4C6F0(v102, v103);
  }
  *(unsigned char *)(v7 + 129) = v8[129];
  uint64_t v107 = v9[11];
  uint64_t v108 = v7 + v107;
  uint64_t v109 = &v8[v107];
  uint64_t v110 = sub_3D3750();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v110 - 8) + 24))(v108, v109, v110);
  uint64_t v111 = v9[12];
  int v112 = (void *)(v7 + v111);
  uint64_t v113 = &v8[v111];
  void *v112 = *(void *)v113;
  v112[1] = *((void *)v113 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + v9[13]) = v8[v9[13]];
  *(unsigned char *)(v7 + v9[14]) = v8[v9[14]];
  *(unsigned char *)(v7 + v9[15]) = v8[v9[15]];
  uint64_t v114 = v9[16];
  uint64_t v115 = (void *)(v7 + v114);
  int v116 = &v8[v114];
  void *v115 = *(void *)v116;
  v115[1] = *((void *)v116 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_68:
  uint64_t v117 = a3[6];
  uint64_t v118 = (char *)a1 + v117;
  uint64_t v119 = (char *)a2 + v117;
  *uint64_t v118 = *v119;
  v118[1] = v119[1];
  v118[2] = v119[2];
  v118[3] = v119[3];
  uint64_t v120 = a3[7];
  uint64_t v121 = (void *)((char *)a1 + v120);
  uint64_t v122 = (void *)((char *)a2 + v120);
  *uint64_t v121 = *v122;
  v121[1] = v122[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v123 = a3[8];
  uint64_t v124 = (void *)((char *)a1 + v123);
  uint64_t v125 = (void *)((char *)a2 + v123);
  void *v124 = *v125;
  v124[1] = v125[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v126 = a3[9];
  int v127 = (char *)a1 + v126;
  int v128 = (char *)a2 + v126;
  uint64_t v129 = sub_3D2350();
  uint64_t v130 = *(void *)(v129 - 8);
  uint64_t v131 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v130 + 48);
  int v132 = v131(v127, 1, v129);
  int v133 = v131(v128, 1, v129);
  if (v132)
  {
    if (!v133)
    {
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v127, v128, v129);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v130 + 56))(v127, 0, 1, v129);
      goto LABEL_74;
    }
    goto LABEL_73;
  }
  if (v133)
  {
    (*(void (**)(char *, uint64_t))(v130 + 8))(v127, v129);
LABEL_73:
    uint64_t v134 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    memcpy(v127, v128, *(void *)(*(void *)(v134 - 8) + 64));
    goto LABEL_74;
  }
  (*(void (**)(char *, char *, uint64_t))(v130 + 24))(v127, v128, v129);
LABEL_74:
  uint64_t v135 = a3[10];
  uint64_t v136 = (uint64_t)a1 + v135;
  uint64_t v137 = (void *)((char *)a2 + v135);
  uint64_t v138 = *(void *)((char *)a2 + v135 + 24);
  if (*(void *)((char *)a1 + v135 + 24))
  {
    if (v138)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v136, v137);
      goto LABEL_81;
    }
    __swift_destroy_boxed_opaque_existential_1(v136);
  }
  else if (v138)
  {
    *(void *)(v136 + 24) = v138;
    *(void *)(v136 + 32) = v137[4];
    (**(void (***)(uint64_t, char *))(v138 - 8))(v136, (char *)v137);
    goto LABEL_81;
  }
  long long v139 = *(_OWORD *)v137;
  long long v140 = *((_OWORD *)v137 + 1);
  *(void *)(v136 + 32) = v137[4];
  *(_OWORD *)uint64_t v136 = v139;
  *(_OWORD *)(v136 + 16) = v140;
LABEL_81:
  uint64_t v141 = a3[11];
  uint64_t v142 = (uint64_t)a1 + v141;
  int v143 = (void *)((char *)a2 + v141);
  uint64_t v144 = *(void *)((char *)a2 + v141 + 24);
  if (*(void *)((char *)a1 + v141 + 24))
  {
    if (v144)
    {
      __swift_assign_boxed_opaque_existential_1((uint64_t *)v142, v143);
      goto LABEL_88;
    }
    __swift_destroy_boxed_opaque_existential_1(v142);
  }
  else if (v144)
  {
    *(void *)(v142 + 24) = v144;
    *(void *)(v142 + 32) = v143[4];
    (**(void (***)(uint64_t, char *))(v144 - 8))(v142, (char *)v143);
    goto LABEL_88;
  }
  long long v145 = *(_OWORD *)v143;
  long long v146 = *((_OWORD *)v143 + 1);
  *(void *)(v142 + 32) = v143[4];
  *(_OWORD *)uint64_t v142 = v145;
  *(_OWORD *)(v142 + 16) = v146;
LABEL_88:
  uint64_t v147 = a3[12];
  unsigned __int8 v148 = (char *)a1 + v147;
  id v149 = (char *)a2 + v147;
  uint64_t v150 = sub_3D7340();
  uint64_t v151 = *(void *)(v150 - 8);
  int v152 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v151 + 48);
  int v153 = v152(v148, 1, v150);
  int v154 = v152(v149, 1, v150);
  if (!v153)
  {
    if (!v154)
    {
      (*(void (**)(char *, char *, uint64_t))(v151 + 24))(v148, v149, v150);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v151 + 8))(v148, v150);
    goto LABEL_93;
  }
  if (v154)
  {
LABEL_93:
    uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(v148, v149, *(void *)(*(void *)(v155 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v151 + 16))(v148, v149, v150);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v151 + 56))(v148, 0, 1, v150);
  return a1;
}

void *initializeWithTake for CategoryListItem(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (_OWORD *)((char *)a1 + v6);
  int v8 = (_OWORD *)((char *)a2 + v6);
  int v9 = (int *)sub_3D3860();
  uint64_t v10 = *((void *)v9 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    long long v12 = v8[1];
    *uint64_t v7 = *v8;
    v7[1] = v12;
    *((unsigned char *)v7 + 32) = *((unsigned char *)v8 + 32);
    *(_OWORD *)((char *)v7 + 40) = *(_OWORD *)((char *)v8 + 40);
    *((void *)v7 + 7) = *((void *)v8 + 7);
    *((unsigned char *)v7 + 64) = *((unsigned char *)v8 + 64);
    *(_OWORD *)((char *)v7 + 113) = *(_OWORD *)((char *)v8 + 113);
    *(_OWORD *)((char *)v7 + 104) = *(_OWORD *)((char *)v8 + 104);
    *(_OWORD *)((char *)v7 + 88) = *(_OWORD *)((char *)v8 + 88);
    *(_OWORD *)((char *)v7 + 72) = *(_OWORD *)((char *)v8 + 72);
    *((unsigned char *)v7 + 129) = *((unsigned char *)v8 + 129);
    uint64_t v13 = v9[11];
    int v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)v8 + v13;
    uint64_t v16 = sub_3D3750();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
    *(_OWORD *)((char *)v7 + v9[12]) = *(_OWORD *)((char *)v8 + v9[12]);
    *((unsigned char *)v7 + v9[13]) = *((unsigned char *)v8 + v9[13]);
    *((unsigned char *)v7 + v9[14]) = *((unsigned char *)v8 + v9[14]);
    *((unsigned char *)v7 + v9[15]) = *((unsigned char *)v8 + v9[15]);
    *(_OWORD *)((char *)v7 + v9[16]) = *(_OWORD *)((char *)v8 + v9[16]);
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v17 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v17) = *(_OWORD *)((char *)a2 + v17);
  uint64_t v18 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  uint64_t v19 = (char *)a1 + v18;
  int v20 = (char *)a2 + v18;
  uint64_t v21 = sub_3D2350();
  uint64_t v22 = *(void *)(v21 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
  {
    uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
  }
  uint64_t v24 = a3[10];
  uint64_t v25 = a3[11];
  long long v26 = (char *)a1 + v24;
  id v27 = (char *)a2 + v24;
  long long v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)long long v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  *((void *)v26 + 4) = *((void *)v27 + 4);
  id v29 = (char *)a1 + v25;
  id v30 = (char *)a2 + v25;
  *((void *)v29 + 4) = *((void *)v30 + 4);
  long long v31 = *((_OWORD *)v30 + 1);
  *(_OWORD *)id v29 = *(_OWORD *)v30;
  *((_OWORD *)v29 + 1) = v31;
  uint64_t v32 = a3[12];
  id v33 = (char *)a1 + v32;
  id v34 = (char *)a2 + v32;
  uint64_t v35 = sub_3D7340();
  uint64_t v36 = *(void *)(v35 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v34, 1, v35))
  {
    uint64_t v37 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(v33, v34, *(void *)(*(void *)(v37 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v33, v34, v35);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  }
  return a1;
}

void *assignWithTake for CategoryListItem(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (uint64_t)a1 + v6;
  int v8 = (char *)a2 + v6;
  int v9 = (int *)sub_3D3860();
  uint64_t v10 = *((void *)v9 - 1);
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11((uint64_t)v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      long long v14 = *((_OWORD *)v8 + 1);
      *(_OWORD *)uint64_t v7 = *(_OWORD *)v8;
      *(_OWORD *)(v7 + 16) = v14;
      *(unsigned char *)(v7 + 32) = v8[32];
      *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
      *(void *)(v7 + 56) = *((void *)v8 + 7);
      *(unsigned char *)(v7 + 64) = v8[64];
      *(_OWORD *)(v7 + 113) = *(_OWORD *)(v8 + 113);
      *(_OWORD *)(v7 + 104) = *(_OWORD *)(v8 + 104);
      *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
      *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
      *(unsigned char *)(v7 + 129) = v8[129];
      uint64_t v15 = v9[11];
      uint64_t v16 = v7 + v15;
      uint64_t v17 = &v8[v15];
      uint64_t v18 = sub_3D3750();
      (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v16, v17, v18);
      *(_OWORD *)(v7 + v9[12]) = *(_OWORD *)&v8[v9[12]];
      *(unsigned char *)(v7 + v9[13]) = v8[v9[13]];
      *(unsigned char *)(v7 + v9[14]) = v8[v9[14]];
      *(unsigned char *)(v7 + v9[15]) = v8[v9[15]];
      *(_OWORD *)(v7 + v9[16]) = *(_OWORD *)&v8[v9[16]];
      (*(void (**)(uint64_t, void, uint64_t, int *))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    sub_3B2A0C(v7, (uint64_t (*)(void))&type metadata accessor for ArtworkModel);
LABEL_6:
    uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
    memcpy((void *)v7, v8, *(void *)(*(void *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v57 = *((void *)v8 + 1);
  *(void *)uint64_t v7 = *(void *)v8;
  *(void *)(v7 + 8) = v57;
  swift_bridgeObjectRelease();
  uint64_t v58 = v8 + 16;
  int v59 = *(unsigned __int8 *)(v7 + 32);
  if (v59 != 255)
  {
    int v60 = v8[32];
    if (v60 != 255)
    {
      uint64_t v61 = *(void *)(v7 + 16);
      uint64_t v62 = *(void *)(v7 + 24);
      *(_OWORD *)(v7 + 16) = *v58;
      *(unsigned char *)(v7 + 32) = v60;
      sub_49E54(v61, v62, v59);
      goto LABEL_31;
    }
    sub_4D7B0(v7 + 16);
  }
  *(_OWORD *)(v7 + 16) = *v58;
  *(unsigned char *)(v7 + 32) = v8[32];
LABEL_31:
  *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
  uint64_t v63 = v8 + 56;
  int v64 = *(unsigned __int8 *)(v7 + 64);
  if (v64 != 255)
  {
    int v65 = v8[64];
    if (v65 != 255)
    {
      long long v66 = *(void **)(v7 + 56);
      *(void *)(v7 + 56) = *v63;
      *(unsigned char *)(v7 + 64) = v65;
      sub_4C6F0(v66, v64);
      goto LABEL_36;
    }
    sub_4D804(v7 + 56);
  }
  *(void *)(v7 + 56) = *v63;
  *(unsigned char *)(v7 + 64) = v8[64];
LABEL_36:
  char v67 = v8 + 72;
  int v68 = *(unsigned __int8 *)(v7 + 80);
  if (v68 != 255)
  {
    int v69 = v8[80];
    if (v69 != 255)
    {
      id v70 = *(void **)(v7 + 72);
      *(void *)(v7 + 72) = *v67;
      *(unsigned char *)(v7 + 80) = v69;
      sub_4C6F0(v70, v68);
      goto LABEL_41;
    }
    sub_4D804(v7 + 72);
  }
  *(void *)(v7 + 72) = *v67;
  *(unsigned char *)(v7 + 80) = v8[80];
LABEL_41:
  uint64_t v71 = v8 + 88;
  int v72 = *(unsigned __int8 *)(v7 + 96);
  if (v72 != 255)
  {
    int v73 = v8[96];
    if (v73 != 255)
    {
      id v74 = *(void **)(v7 + 88);
      *(void *)(v7 + 88) = *v71;
      *(unsigned char *)(v7 + 96) = v73;
      sub_4C6F0(v74, v72);
      goto LABEL_46;
    }
    sub_4D804(v7 + 88);
  }
  *(void *)(v7 + 88) = *v71;
  *(unsigned char *)(v7 + 96) = v8[96];
LABEL_46:
  uint64_t v75 = v8 + 104;
  int v76 = *(unsigned __int8 *)(v7 + 112);
  if (v76 != 255)
  {
    int v77 = v8[112];
    if (v77 != 255)
    {
      char v78 = *(void **)(v7 + 104);
      *(void *)(v7 + 104) = *v75;
      *(unsigned char *)(v7 + 112) = v77;
      sub_4C6F0(v78, v76);
      goto LABEL_51;
    }
    sub_4D804(v7 + 104);
  }
  *(void *)(v7 + 104) = *v75;
  *(unsigned char *)(v7 + 112) = v8[112];
LABEL_51:
  id v79 = v8 + 120;
  int v80 = *(unsigned __int8 *)(v7 + 128);
  if (v80 == 255)
  {
LABEL_55:
    *(void *)(v7 + 120) = *v79;
    *(unsigned char *)(v7 + 128) = v8[128];
    goto LABEL_56;
  }
  int v81 = v8[128];
  if (v81 == 255)
  {
    sub_4D804(v7 + 120);
    goto LABEL_55;
  }
  int v82 = *(void **)(v7 + 120);
  *(void *)(v7 + 120) = *v79;
  *(unsigned char *)(v7 + 128) = v81;
  sub_4C6F0(v82, v80);
LABEL_56:
  *(unsigned char *)(v7 + 129) = v8[129];
  uint64_t v83 = v9[11];
  uint64_t v84 = v7 + v83;
  char v85 = &v8[v83];
  uint64_t v86 = sub_3D3750();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v86 - 8) + 40))(v84, v85, v86);
  uint64_t v87 = v9[12];
  id v88 = (void *)(v7 + v87);
  uint64_t v89 = &v8[v87];
  uint64_t v91 = *(void *)v89;
  uint64_t v90 = *((void *)v89 + 1);
  *id v88 = v91;
  v88[1] = v90;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v7 + v9[13]) = v8[v9[13]];
  *(unsigned char *)(v7 + v9[14]) = v8[v9[14]];
  *(unsigned char *)(v7 + v9[15]) = v8[v9[15]];
  uint64_t v92 = v9[16];
  uint64_t v93 = (void *)(v7 + v92);
  char v94 = &v8[v92];
  uint64_t v96 = *(void *)v94;
  uint64_t v95 = *((void *)v94 + 1);
  void *v93 = v96;
  v93[1] = v95;
  swift_bridgeObjectRelease();
LABEL_7:
  uint64_t v20 = a3[7];
  *(_DWORD *)((char *)a1 + a3[6]) = *(_DWORD *)((char *)a2 + a3[6]);
  uint64_t v21 = (void *)((char *)a1 + v20);
  uint64_t v22 = (void *)((char *)a2 + v20);
  uint64_t v24 = *v22;
  uint64_t v23 = v22[1];
  void *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  uint64_t v25 = a3[8];
  long long v26 = (void *)((char *)a1 + v25);
  id v27 = (void *)((char *)a2 + v25);
  uint64_t v29 = *v27;
  uint64_t v28 = v27[1];
  *long long v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  uint64_t v30 = a3[9];
  long long v31 = (char *)a1 + v30;
  uint64_t v32 = (char *)a2 + v30;
  uint64_t v33 = sub_3D2350();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
  int v36 = v35(v31, 1, v33);
  int v37 = v35(v32, 1, v33);
  if (v36)
  {
    if (!v37)
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v37)
  {
    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
LABEL_12:
    uint64_t v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    memcpy(v31, v32, *(void *)(*(void *)(v38 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v31, v32, v33);
LABEL_13:
  uint64_t v39 = a3[10];
  uint64_t v40 = (uint64_t)a1 + v39;
  id v41 = (char *)a2 + v39;
  if (*(void *)((char *)a1 + v39 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v40);
  }
  long long v42 = *((_OWORD *)v41 + 1);
  *(_OWORD *)uint64_t v40 = *(_OWORD *)v41;
  *(_OWORD *)(v40 + 16) = v42;
  *(void *)(v40 + 32) = *((void *)v41 + 4);
  uint64_t v43 = a3[11];
  uint64_t v44 = (uint64_t)a1 + v43;
  id v45 = (char *)a2 + v43;
  if (*(void *)((char *)a1 + v43 + 24)) {
    __swift_destroy_boxed_opaque_existential_1(v44);
  }
  long long v46 = *((_OWORD *)v45 + 1);
  *(_OWORD *)uint64_t v44 = *(_OWORD *)v45;
  *(_OWORD *)(v44 + 16) = v46;
  *(void *)(v44 + 32) = *((void *)v45 + 4);
  uint64_t v47 = a3[12];
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  uint64_t v50 = sub_3D7340();
  uint64_t v51 = *(void *)(v50 - 8);
  uint64_t v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  int v53 = v52(v48, 1, v50);
  int v54 = v52(v49, 1, v50);
  if (!v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v48, v49, v50);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v50);
    goto LABEL_22;
  }
  if (v54)
  {
LABEL_22:
    uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    memcpy(v48, v49, *(void *)(*(void *)(v55 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  return a1;
}

uint64_t getEnumTagSinglePayload for CategoryListItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3B24EC);
}

uint64_t sub_3B24EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  if (*(_DWORD *)(*(void *)(v6 - 8) + 84) == a2)
  {
    uint64_t v7 = v6;
    uint64_t v8 = *(void *)(v6 - 8);
    uint64_t v9 = a3[5];
LABEL_9:
    int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    return v13(a1 + v9, a2, v7);
  }
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + a3[7] + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
    {
      uint64_t v7 = v12;
      uint64_t v8 = *(void *)(v12 - 8);
      uint64_t v9 = a3[9];
      goto LABEL_9;
    }
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
    uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
    uint64_t v16 = v14;
    uint64_t v17 = a1 + a3[12];
    return v15(v17, a2, v16);
  }
}

uint64_t storeEnumTagSinglePayload for CategoryListItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3B268C);
}

uint64_t sub_3B268C(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F70);
  if (*(_DWORD *)(*(void *)(result - 8) + 84) == a3)
  {
    uint64_t v9 = result;
    uint64_t v10 = *(void *)(result - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    int v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(a1 + v11, a2, a2, v9);
  }
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + a4[7] + 8) = (a2 - 1);
    return result;
  }
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_7;
  }
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a4[12];

  return v15(v17, a2, a2, v16);
}

void sub_3B2818()
{
  sub_1E9518(319, (unint64_t *)&qword_4ABAF0, (void (*)(uint64_t))&type metadata accessor for ArtworkModel);
  if (v0 <= 0x3F)
  {
    sub_1E9518(319, (unint64_t *)&qword_4AADB0, (void (*)(uint64_t))&type metadata accessor for URL);
    if (v1 <= 0x3F)
    {
      sub_1E9518(319, (unint64_t *)&qword_4AB420, (void (*)(uint64_t))&type metadata accessor for ImpressionMetrics);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t sub_3B29A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Category();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_3B2A0C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_3B2A6C(char *a1)
{
  uint64_t v2 = sub_3D2460();
  uint64_t v56 = *(void *)(v2 - 8);
  uint64_t v57 = v2;
  __chkstk_darwin(v2);
  int v54 = (char *)&v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9870);
  __chkstk_darwin(v4 - 8);
  uint64_t v55 = (char *)&v46 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_3D7260();
  __chkstk_darwin(v6 - 8);
  uint64_t v48 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_3D6F40();
  uint64_t v52 = *(void *)(v8 - 8);
  uint64_t v53 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v50 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v51 = (char *)&v46 - v11;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_3D6D80();
  uint64_t v47 = *(void *)(v15 - 8);
  uint64_t v16 = __chkstk_darwin(v15);
  long long v46 = (char *)&v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v46 - v18;
  uint64_t v49 = a1;
  v59[0] = *(void *)a1;
  sub_17264();
  sub_3D8A20();
  sub_3D4440();
  sub_3D4310();
  uint64_t v20 = sub_3D2350();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v14, 1, 1, v20);
  sub_3D2F90();
  sub_3D6D10();
  sub_18F88((uint64_t)v59, (uint64_t)v62, (uint64_t *)&unk_4B1F80);
  sub_443B4((uint64_t)v62);
  uint64_t v61 = v59[2];
  sub_443E0((uint64_t)&v61);
  uint64_t v60 = v59[3];
  sub_443E0((uint64_t)&v60);
  sub_3D4C4(v59[4]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = (uint64_t)v14;
  uint64_t v22 = v47;
  sub_250FC(v21, &qword_4AD7B0);
  uint64_t v23 = sub_3D3610();
  v58[3] = v23;
  v58[4] = sub_3B3AD8((unint64_t *)&qword_4AC678, (void (*)(uint64_t))&type metadata accessor for Podcasts);
  boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v58);
  (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v23 - 8) + 104))(boxed_opaque_existential_2Tm, enum case for Podcasts.libraryCategoriesPageImpressionMetrics(_:), v23);
  LOBYTE(v23) = sub_3D3580();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  if ((v23 & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F90);
    sub_3D7690();
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_3DED20;
    sub_3D7660();
    sub_3D7680();
    long long v26 = sub_9A5A0(v25);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v27 = sub_3D6D50();
    if (v26[2] <= *(void *)(v27 + 16) >> 3)
    {
      v58[0] = v27;
      sub_1294D8((uint64_t)v26);
    }
    else
    {
      sub_1297FC((uint64_t)v26, v27);
    }
    uint64_t v28 = v46;
    sub_3D6D30();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v15);
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v28, v15);
  }
  uint64_t v29 = *(void *)v49;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9890);
  unint64_t v30 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_3DED90;
  (*(void (**)(unint64_t, char *, uint64_t))(v22 + 16))(v31 + v30, v19, v15);
  sub_3D7250();
  uint64_t v32 = v51;
  sub_3D6F10();
  type metadata accessor for LibraryCategoryPlayAction(0);
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + OBJC_IVAR____TtC8ShelfKit25LibraryCategoryPlayAction_adamID) = v29;
  uint64_t v49 = v19;
  uint64_t v34 = v22;
  uint64_t v35 = v52;
  int v36 = *(void (**)(char *, char *, uint64_t))(v52 + 16);
  int v37 = v50;
  uint64_t v48 = (char *)v15;
  uint64_t v38 = v53;
  v36(v50, v32, v53);
  uint64_t v39 = sub_3D7340();
  uint64_t v40 = (uint64_t)v55;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v55, 1, 1, v39);
  id v41 = v54;
  sub_3D2450();
  uint64_t v42 = _s8ShelfKit8RoomUberV13shelfUniqueIdSSvg_0();
  uint64_t v44 = v43;
  (*(void (**)(char *, uint64_t))(v56 + 8))(v41, v57);
  *(void *)(v33 + 16) = v42;
  *(void *)(v33 + 24) = v44;
  *(void *)(v33 + 32) = 0;
  *(void *)(v33 + 40) = 0;
  *(unsigned char *)(v33 + 48) = 32;
  (*(void (**)(uint64_t, char *, uint64_t))(v35 + 32))(v33 + OBJC_IVAR____TtC8ShelfKit6Action_actionMetrics, v37, v38);
  sub_18F88(v40, v33 + OBJC_IVAR____TtC8ShelfKit6Action_impressionMetrics, (uint64_t *)&unk_4B9870);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v38);
  (*(void (**)(char *, char *))(v34 + 8))(v49, v48);
  return v33;
}

uint64_t sub_3B32BC(void *a1)
{
  uint64_t v2 = sub_3D7260();
  __chkstk_darwin(v2 - 8);
  uint64_t v53 = (char *)v43 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_3D6F40();
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for FlowDestination();
  __chkstk_darwin(v52);
  uint64_t v8 = (char *)v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_3D6D80();
  uint64_t v51 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v50 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v43 - v12;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  uint64_t v15 = __chkstk_darwin(v14 - 8);
  uint64_t v17 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)v43 - v18;
  uint64_t v20 = sub_3D2350();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  int v54 = (char *)v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = type metadata accessor for Category();
  uint64_t v24 = 0;
  if ((*((unsigned char *)a1 + *(int *)(v23 + 28) + 4) & 1) == 0)
  {
    sub_153B4((uint64_t)a1 + *(int *)(v23 + 24), (uint64_t)v19, &qword_4AD7B0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1)
    {
      sub_250FC((uint64_t)v19, &qword_4AD7B0);
      return 0;
    }
    else
    {
      uint64_t v25 = v21;
      uint64_t v49 = v6;
      long long v26 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
      uint64_t v27 = v54;
      v26(v54, v19, v20);
      uint64_t v48 = a1;
      v58[0] = *a1;
      sub_17264();
      uint64_t v28 = sub_3D8A20();
      long long v46 = v8;
      uint64_t v44 = v9;
      v43[1] = v28;
      sub_3D4420();
      sub_3D43A0();
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v17, v27, v20);
      uint64_t v45 = v25;
      uint64_t v29 = *(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56);
      uint64_t v47 = v20;
      v29(v17, 0, 1, v20);
      sub_3D2F90();
      uint64_t v30 = v44;
      uint64_t v31 = (uint64_t)v46;
      uint64_t v32 = v51;
      sub_3D6D10();
      sub_18F88((uint64_t)v58, (uint64_t)v61, (uint64_t *)&unk_4B1F80);
      sub_443B4((uint64_t)v61);
      uint64_t v60 = v58[2];
      sub_443E0((uint64_t)&v60);
      uint64_t v59 = v58[3];
      sub_443E0((uint64_t)&v59);
      sub_3D4C4(v58[4]);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_250FC((uint64_t)v17, &qword_4AD7B0);
      uint64_t v33 = sub_3D3610();
      uint64_t v56 = v33;
      uint64_t v57 = sub_3B3AD8((unint64_t *)&qword_4AC678, (void (*)(uint64_t))&type metadata accessor for Podcasts);
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm((uint64_t *)&v55[1]);
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v33 - 8) + 104))(boxed_opaque_existential_2Tm, enum case for Podcasts.libraryCategoriesPageImpressionMetrics(_:), v33);
      LOBYTE(v33) = sub_3D3580();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v55[1]);
      if ((v33 & 1) == 0)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B1F90);
        sub_3D7690();
        uint64_t v35 = swift_allocObject();
        *(_OWORD *)(v35 + 16) = xmmword_3DED20;
        sub_3D7660();
        sub_3D7680();
        int v36 = sub_9A5A0(v35);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        uint64_t v37 = sub_3D6D50();
        if (v36[2] <= *(void *)(v37 + 16) >> 3)
        {
          *(void *)&v55[1] = v37;
          sub_1294D8((uint64_t)v36);
        }
        else
        {
          sub_1297FC((uint64_t)v36, v37);
        }
        uint64_t v38 = v50;
        sub_3D6D30();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v30);
        (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v13, v38, v30);
      }
      sub_3B3B20((uint64_t)v48, v31, (uint64_t (*)(void))type metadata accessor for Category);
      swift_storeEnumTagMultiPayload();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B9890);
      unint64_t v39 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      uint64_t v40 = swift_allocObject();
      *(_OWORD *)(v40 + 16) = xmmword_3DED90;
      (*(void (**)(unint64_t, char *, uint64_t))(v32 + 16))(v40 + v39, v13, v30);
      sub_3D7250();
      uint64_t v41 = (uint64_t)v49;
      sub_3D6F10();
      *(_WORD *)uint64_t v55 = 0;
      type metadata accessor for FlowAction(0);
      swift_allocObject();
      uint64_t v24 = FlowAction.init(_:id:title:presentationContext:animationBehavior:presentationStyle:destinationPageHeader:actionMetrics:)(v31, 0, 0, 0, 0, &v55[1], 0, 48, v55, v41);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v13, v30);
      (*(void (**)(char *, uint64_t))(v45 + 8))(v54, v47);
    }
  }
  return v24;
}

uint64_t sub_3B3AD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_3B3B20(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_3B3B88(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  swift_bridgeObjectRetain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *a1;
  *a1 = 0x8000000000000000;
  sub_23924(a4, a2, a3, isUniquelyReferenced_nonNull_native);
  *a1 = v10;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_3B3C30(void *a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = _swiftEmptyDictionarySingleton;
  return result;
}

uint64_t type metadata accessor for SearchLockupCache()
{
  return self;
}

uint64_t FetchActionIntent.init(url:isIncomingURL:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_3D2350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for FetchActionIntent();
  *(unsigned char *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

uint64_t type metadata accessor for FetchActionIntent()
{
  uint64_t result = qword_4C1718;
  if (!qword_4C1718) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t static FetchActionIntent.kind.getter()
{
  return 0xD000000000000011;
}

uint64_t FetchActionIntent.isIncomingURL.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FetchActionIntent() + 20));
}

uint64_t static FetchActionIntent.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if (_s8ShelfKit15FetchPageIntentV2eeoiySbAC_ACtFZ_0())
  {
    uint64_t ActionIntent = type metadata accessor for FetchActionIntent();
    char v5 = *(unsigned char *)(a1 + *(int *)(ActionIntent + 20)) ^ *(unsigned char *)(a2 + *(int *)(ActionIntent + 20)) ^ 1;
  }
  else
  {
    char v5 = 0;
  }
  return v5 & 1;
}

void sub_3B3DF4(void *a1@<X8>)
{
  *a1 = 0xD000000000000011;
  a1[1] = 0x80000000003FAB40;
}

uint64_t sub_3B3E14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (_s8ShelfKit15FetchPageIntentV2eeoiySbAC_ACtFZ_0()) {
    char v6 = *(unsigned char *)(a1 + *(int *)(a3 + 20)) ^ *(unsigned char *)(a2 + *(int *)(a3 + 20)) ^ 1;
  }
  else {
    char v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_3B3E74(char *a1, char *a2)
{
  return sub_285674(*a1, *a2);
}

Swift::Int sub_3B3E80()
{
  return sub_3D9180();
}

uint64_t sub_3B3F08()
{
  sub_3D7E60();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_3B3F7C()
{
  return sub_3D9180();
}

uint64_t sub_3B4000@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_474C18;
  v8._object = v3;
  Swift::Int v5 = sub_3D8E10(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_3B4060(uint64_t *a1@<X8>)
{
  uint64_t v2 = 7107189;
  if (*v1) {
    uint64_t v2 = 0x696D6F636E497369;
  }
  unint64_t v3 = 0xE300000000000000;
  if (*v1) {
    unint64_t v3 = 0xED00006C7255676ELL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_3B40A4()
{
  if (*v0) {
    return 0x696D6F636E497369;
  }
  else {
    return 7107189;
  }
}

uint64_t sub_3B40E4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_474C18;
  v9._object = a2;
  Swift::Int v6 = sub_3D8E10(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

uint64_t sub_3B4148(uint64_t a1)
{
  unint64_t v2 = sub_3B4374();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_3B4184(uint64_t a1)
{
  unint64_t v2 = sub_3B4374();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t FetchActionIntent.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C16B0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::Int v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_3B4374();
  sub_3D91F0();
  v8[15] = 0;
  sub_3D2350();
  sub_3B4B80(&qword_4AE9E8, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_3D8F50();
  if (!v1)
  {
    type metadata accessor for FetchActionIntent();
    v8[14] = 1;
    sub_3D8F30();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_3B4374()
{
  unint64_t result = qword_4C16B8;
  if (!qword_4C16B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C16B8);
  }
  return result;
}

uint64_t sub_3B43C8(void *a1)
{
  return FetchActionIntent.encode(to:)(a1);
}

uint64_t sub_3B43E0()
{
  return sub_3D75D0();
}

void *initializeBufferWithCopyOfBuffer for FetchActionIntent(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_3D2350();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

uint64_t initializeWithCopy for FetchActionIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_3D2350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithCopy for FetchActionIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_3D2350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t initializeWithTake for FetchActionIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_3D2350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for FetchActionIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_3D2350();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(unsigned char *)(a1 + *(int *)(a3 + 20)) = *(unsigned char *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t getEnumTagSinglePayload for FetchActionIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3B4740);
}

uint64_t sub_3B4740(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_3D2350();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t storeEnumTagSinglePayload for FetchActionIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3B4824);
}

uint64_t sub_3B4824(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_3D2350();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  }
  return result;
}

uint64_t sub_3B48E0()
{
  uint64_t result = sub_3D2350();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for FetchActionIntent.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3B4A40);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchActionIntent.CodingKeys()
{
  return &type metadata for FetchActionIntent.CodingKeys;
}

unint64_t sub_3B4A7C()
{
  unint64_t result = qword_4C1750;
  if (!qword_4C1750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C1750);
  }
  return result;
}

unint64_t sub_3B4AD4()
{
  unint64_t result = qword_4C1758;
  if (!qword_4C1758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C1758);
  }
  return result;
}

unint64_t sub_3B4B2C()
{
  unint64_t result = qword_4C1760;
  if (!qword_4C1760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C1760);
  }
  return result;
}

uint64_t sub_3B4B80(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t PlayShowLastAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayShowLastAction() + 20);
  uint64_t v4 = sub_3D6F40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PlayShowLastAction()
{
  uint64_t result = qword_4C17C8;
  if (!qword_4C17C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PlayShowLastAction.actionMetrics.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayShowLastAction() + 20);
  uint64_t v4 = sub_3D6F40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

void (__swiftcall *PlayShowLastAction.actionMetrics.modify())()
{
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t PlayShowLastAction.intent.getter()
{
  uint64_t v1 = sub_3D2A50();
  __n128 v2 = __chkstk_darwin(v1);
  uint64_t v4 = *(void **)v0;
  uint64_t v5 = *(void *)(v0 + 8);
  char v7 = *(unsigned char *)(v0 + 16);
  (*(void (**)(char *, void, __n128))(v6 + 104))((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for PlaybackController.QueueCommand.Location.queueTail(_:), v2);
  sub_6B828(v4, v5, v7);
  return sub_3D3070();
}

uint64_t PlayShowLastAction.init(showID:actionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = a3;
  uint64_t v6 = a5 + *(int *)(type metadata accessor for PlayShowLastAction() + 20);
  uint64_t v7 = sub_3D6F40();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a4, v7);
}

uint64_t sub_3B4ECC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for PlayShowLastAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3B4EFC);
}

uint64_t sub_3B4EFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 2) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_3D6F40();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PlayShowLastAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3B4FB8);
}

uint64_t sub_3B4FB8(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 253)
  {
    *(unsigned char *)(result + 16) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_3D6F40();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_3B505C()
{
  uint64_t result = sub_3D6F40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_3B50F8()
{
  unint64_t result = qword_4C1800;
  if (!qword_4C1800)
  {
    sub_3D3080();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C1800);
  }
  return result;
}

uint64_t PlayShowNextAction.actionMetrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayShowNextAction() + 20);
  uint64_t v4 = sub_3D6F40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for PlayShowNextAction()
{
  uint64_t result = qword_4C1860;
  if (!qword_4C1860) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PlayShowNextAction.actionMetrics.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PlayShowNextAction() + 20);
  uint64_t v4 = sub_3D6F40();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

void (__swiftcall *PlayShowNextAction.actionMetrics.modify())()
{
  return FindOrCreateEpisodeOfferContentIDsIntentsIntentImplementation.init();
}

uint64_t PlayShowNextAction.intent.getter()
{
  uint64_t v1 = sub_3D2A50();
  __n128 v2 = __chkstk_darwin(v1);
  uint64_t v4 = *(void **)v0;
  uint64_t v5 = *(void *)(v0 + 8);
  char v7 = *(unsigned char *)(v0 + 16);
  (*(void (**)(char *, void, __n128))(v6 + 104))((char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), enum case for PlaybackController.QueueCommand.Location.queueHead(_:), v2);
  sub_6B828(v4, v5, v7);
  return sub_3D3070();
}

uint64_t PlayShowNextAction.init(showID:actionMetrics:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = a3;
  uint64_t v6 = a5 + *(int *)(type metadata accessor for PlayShowNextAction() + 20);
  uint64_t v7 = sub_3D6F40();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32);

  return v8(v6, a4, v7);
}

uint64_t sub_3B5454()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t getEnumTagSinglePayload for PlayShowNextAction(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3B5484);
}

uint64_t sub_3B5484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 253)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 16);
    if (v4 > 2) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = sub_3D6F40();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for PlayShowNextAction(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3B5540);
}

uint64_t sub_3B5540(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 253)
  {
    *(unsigned char *)(result + 16) = -(char)a2;
  }
  else
  {
    uint64_t v7 = sub_3D6F40();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_3B55E4()
{
  uint64_t result = sub_3D6F40();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t static FetchShelfIntent.kind.getter()
{
  return 0xD000000000000010;
}

uint64_t sub_3B569C(uint64_t a1)
{
  unint64_t v2 = sub_3B58A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_3B56D8(uint64_t a1)
{
  unint64_t v2 = sub_3B58A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

void sub_3B5714(void *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x80000000003FAF10;
}

uint64_t FetchShelfIntent.encode(to:)(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C1898);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_3B58A8();
  sub_3D91F0();
  sub_3D2350();
  sub_3B5D90(&qword_4AE9E8, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_3D8F50();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_3B58A8()
{
  unint64_t result = qword_4C18A0;
  if (!qword_4C18A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C18A0);
  }
  return result;
}

uint64_t sub_3B58FC()
{
  return sub_3B5D90(&qword_4C18A8, (void (*)(uint64_t))type metadata accessor for FetchShelfIntent);
}

uint64_t type metadata accessor for FetchShelfIntent()
{
  uint64_t result = qword_4C1908;
  if (!qword_4C1908) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_3B5990()
{
  return sub_3B5D90(&qword_4B47B0, (void (*)(uint64_t))type metadata accessor for FetchShelfIntent);
}

uint64_t sub_3B59D8()
{
  return sub_3B5D90((unint64_t *)&qword_4A9AC8, (void (*)(uint64_t))type metadata accessor for Shelf);
}

uint64_t sub_3B5A20()
{
  return sub_3D75D0();
}

uint64_t getEnumTagSinglePayload for FetchShelfIntent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3B5AC4);
}

uint64_t sub_3B5AC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3D2350();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FetchShelfIntent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3B5B44);
}

uint64_t sub_3B5B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_3D2350();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

unsigned char *storeEnumTagSinglePayload for FetchShelfIntent.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x3B5C50);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchShelfIntent.CodingKeys()
{
  return &type metadata for FetchShelfIntent.CodingKeys;
}

unint64_t sub_3B5C8C()
{
  unint64_t result = qword_4C1940;
  if (!qword_4C1940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C1940);
  }
  return result;
}

unint64_t sub_3B5CE4()
{
  unint64_t result = qword_4C1948;
  if (!qword_4C1948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C1948);
  }
  return result;
}

unint64_t sub_3B5D3C()
{
  unint64_t result = qword_4C1950;
  if (!qword_4C1950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C1950);
  }
  return result;
}

uint64_t sub_3B5D90(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t LazyJSFlowDestination.destination.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t *)*v1;
  uint64_t v7 = (int *)type metadata accessor for LazyJSFlowDestination(0);
  sub_153B4((uint64_t)&v1[v7[5]], (uint64_t)v5, &qword_4AD7B0);
  sub_153B4((uint64_t)&v1[v7[6]], (uint64_t)v11, (uint64_t *)&unk_4B5A40);
  unsigned __int8 v10 = v1[v7[7]];
  return sub_3B704C(v6, (uint64_t)v5, (uint64_t)v11, (char *)&v10, a1);
}

uint64_t type metadata accessor for LazyJSFlowDestination(uint64_t a1)
{
  return sub_2595C(a1, qword_4C19D0);
}

uint64_t sub_3B5EDC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t v32 = a3;
  uint64_t v31 = a2;
  uint64_t v35 = sub_3D6CE0();
  uint64_t v29 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v30 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C1970);
  __chkstk_darwin(v5 - 8);
  uint64_t v33 = (uint64_t)v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v7 - 8);
  uint64_t v34 = (uint64_t)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_3D6B50();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v28 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v28 - v17;
  sub_3D6B60();
  uint64_t v19 = sub_3D6B20();
  v28[0] = v20;
  v28[1] = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v22 = v18;
  uint64_t v23 = v29;
  v21(v22, v9);
  sub_3D6B60();
  sub_3D6A80();
  v21(v15, v9);
  uint64_t v24 = v33;
  sub_3D6B60();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v24, 0, 1, v9);
  uint64_t v26 = (uint64_t)v30;
  uint64_t v25 = v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v30, v31, v35);
  sub_3D6B60();
  sub_3BD1C4();
  sub_3D6A30();
  v21(v12, v9);
  v36[0] = v36[1];
  LazyJSFlowDestination.init(pageString:pageUrl:pageDataJSON:context:origin:)(v28[0], v34, v33, v26, v36, v32);
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v25, v35);
  return ((uint64_t (*)(uint64_t, uint64_t))v21)(a1, v9);
}

NSObject_optional __swiftcall LazyJSFlowDestination.appEntityAnnotation()()
{
  uint64_t v1 = type metadata accessor for LazyJSFlowDestination(0);
  sub_153B4(v0 + *(int *)(v1 + 24), (uint64_t)v10, (uint64_t *)&unk_4B5A40);
  if (!v11)
  {
    sub_250FC((uint64_t)v10, (uint64_t *)&unk_4B5A40);
    long long v7 = 0u;
    long long v8 = 0u;
    uint64_t v9 = 0;
    goto LABEL_7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_4C1968);
  if ((swift_dynamicCast() & 1) == 0)
  {
    uint64_t v9 = 0;
    long long v7 = 0u;
    long long v8 = 0u;
    goto LABEL_7;
  }
  if (!*((void *)&v8 + 1))
  {
LABEL_7:
    sub_250FC((uint64_t)&v7, &qword_4C1960);
    uint64_t v4 = 0;
    goto LABEL_8;
  }
  sub_18F70(&v7, (uint64_t)v10);
  uint64_t v2 = v11;
  uint64_t v3 = v12;
  __swift_project_boxed_opaque_existential_1(v10, v11);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
LABEL_8:
  uint64_t v6 = (objc_class *)v4;
  result.value.Class isa = v6;
  result.is_nil = v5;
  return result;
}

uint64_t LazyJSFlowDestination.init(pageString:pageUrl:pageDataJSON:context:origin:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, unsigned __int8 *a5@<X5>, unsigned char *a6@<X8>)
{
  uint64_t v40 = a4;
  uint64_t v44 = a3;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C1970);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_3D6B50();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && (v38 = *a5, int v17 = sub_3BBDF0(), v17 != 37))
  {
    int v24 = v17;
    *a6 = v17;
    uint64_t v25 = type metadata accessor for LazyJSFlowDestination(0);
    uint64_t v26 = a2;
    uint64_t v37 = &a6[*(int *)(v25 + 20)];
    sub_153B4(a2, (uint64_t)v37, &qword_4AD7B0);
    uint64_t v27 = v44;
    sub_153B4(v44, (uint64_t)v12, &qword_4C1970);
    int v28 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
    uint64_t v36 = v25;
    if (v28 == 1)
    {
      long long v41 = 0u;
      long long v42 = 0u;
      sub_3D6B40();
      sub_250FC((uint64_t)v12, &qword_4C1970);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
    }
    uint64_t v29 = v39;
    uint64_t v30 = v40;
    sub_3B6800(v24, (uint64_t)v16, v40, v43);
    if (!v29)
    {
      uint64_t v33 = sub_3D6CE0();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v33 - 8) + 8))(v30, v33);
      sub_250FC(v27, &qword_4C1970);
      sub_250FC(v26, &qword_4AD7B0);
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      uint64_t v34 = v36;
      uint64_t result = sub_18F88((uint64_t)v43, (uint64_t)&a6[*(int *)(v36 + 24)], (uint64_t *)&unk_4B5A40);
      a6[*(int *)(v34 + 28)] = v38;
      return result;
    }
    uint64_t v31 = sub_3D6CE0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v31 - 8) + 8))(v30, v31);
    sub_250FC(v27, &qword_4C1970);
    sub_250FC(v26, &qword_4AD7B0);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    uint64_t v23 = (uint64_t)v37;
  }
  else
  {
    uint64_t v18 = sub_3D7B40();
    sub_3BD280((unint64_t *)&qword_4A9C88, (void (*)(uint64_t))&type metadata accessor for JSONError);
    swift_allocError();
    uint64_t v20 = v19;
    uint64_t v21 = type metadata accessor for LazyJSFlowDestination(0);
    *uint64_t v20 = 1701273968;
    v20[1] = 0xE400000000000000;
    void v20[2] = v21;
    (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, enum case for JSONError.missingProperty(_:), v18);
    swift_willThrow();
    uint64_t v22 = sub_3D6CE0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v40, v22);
    sub_250FC(v44, &qword_4C1970);
    uint64_t v23 = a2;
  }
  return sub_250FC(v23, &qword_4AD7B0);
}

uint64_t sub_3B6800@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v89 = a3;
  LODWORD(v93) = a1;
  uint64_t v80 = type metadata accessor for LazyModel._State(0);
  __chkstk_darwin(v80);
  int v81 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_3D6CE0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v90 = v7;
  uint64_t v91 = v8;
  __chkstk_darwin(v7);
  char v85 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v84 = (char *)&v78 - v11;
  __chkstk_darwin(v12);
  uint64_t v83 = (char *)&v78 - v13;
  __chkstk_darwin(v14);
  int v82 = (char *)&v78 - v15;
  __chkstk_darwin(v16);
  id v79 = (char *)&v78 - v17;
  __chkstk_darwin(v18);
  uint64_t v87 = (char *)&v78 - v19;
  uint64_t v88 = sub_3D6B50();
  uint64_t v92 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v21 = (char *)&v78 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  int v24 = (char *)&v78 - v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v78 - v26;
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v78 - v29;
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v78 - v32;
  __chkstk_darwin(v34);
  uint64_t v86 = (char *)&v78 - v35;
  __chkstk_darwin(v36);
  int v38 = (char *)&v78 - v37;
  uint64_t v39 = a2;
  uint64_t result = sub_3D6B10();
  if (result)
  {
    *(_OWORD *)a4 = 0u;
    *((_OWORD *)a4 + 1) = 0u;
  }
  else
  {
    char v78 = a4;
    switch((char)v93)
    {
      case 17:
        uint64_t v41 = a2;
        sub_3D6B60();
        char v42 = sub_3D6A90();
        uint64_t v43 = v92;
        uint64_t v44 = v88;
        uint64_t v93 = *(void (**)(char *, uint64_t))(v92 + 8);
        v93(v38, v88);
        uint64_t v45 = type metadata accessor for Page();
        if (v42 == 2 || (v42 & 1) != 0)
        {
          uint64_t v64 = sub_3BD280((unint64_t *)&qword_4AAC68, (void (*)(uint64_t))type metadata accessor for Page);
          uint64_t v84 = (char *)v45;
          char v85 = (char *)v64;
          int v65 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 16);
          uint64_t v92 = v43 + 16;
          long long v66 = v86;
          v65(v86, v41, v44);
          uint64_t v67 = v90;
          int v68 = *(void (**)(char *, uint64_t, uint64_t))(v91 + 16);
          v68(v87, v89, v90);
          uint64_t v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C1A20);
          uint64_t v70 = (uint64_t)v81;
          uint64_t v71 = &v81[*(int *)(v69 + 48)];
          int v72 = v66;
          uint64_t v73 = v44;
          v65(v81, (uint64_t)v72, v44);
          id v74 = v87;
          v68(v71, (uint64_t)v87, v67);
          swift_storeEnumTagMultiPayload();
          __swift_instantiateConcreteTypeFromMangledName(&qword_4C1A28);
          uint64_t v75 = swift_allocObject();
          *(_DWORD *)(v75 + ((*(unsigned int *)(*(void *)v75 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
          sub_3BD160(v70, v75 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v75 + 16));
          sub_3BCC40(v70);
          (*(void (**)(char *, uint64_t))(v91 + 8))(v74, v67);
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v93)(v86, v73);
          int v76 = v78;
          int v77 = v84;
          *char v78 = v75;
          v76[1] = (uint64_t)v77;
          v76[2] = (uint64_t)v85;
          v76[3] = (uint64_t)&type metadata for LazyModel;
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v33, v41, v44);
          uint64_t v46 = (uint64_t)v79;
          (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v79, v89, v90);
          uint64_t v47 = v94;
          uint64_t result = (uint64_t)Page.__allocating_init(deserializing:using:)((uint64_t)v33, v46);
          if (!v47)
          {
            uint64_t v48 = v78;
            v78[3] = v45;
            *uint64_t v48 = result;
          }
        }
        break;
      case 22:
        uint64_t v50 = type metadata accessor for Page();
        (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v30, v39, v88);
        uint64_t v51 = (uint64_t)v82;
        (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v82, v89, v90);
        uint64_t v52 = v94;
        uint64_t result = (uint64_t)Page.__allocating_init(deserializing:using:)((uint64_t)v30, v51);
        if (!v52) {
          goto LABEL_13;
        }
        break;
      case 27:
        uint64_t v50 = type metadata accessor for UpsellInformation();
        (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v27, v39, v88);
        uint64_t v53 = (uint64_t)v83;
        (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v83, v89, v90);
        uint64_t v54 = v94;
        uint64_t result = (uint64_t)UpsellInformation.__allocating_init(deserializing:using:)(v27, v53);
        if (!v54)
        {
LABEL_13:
          uint64_t v55 = v78;
          v78[3] = v50;
          *uint64_t v55 = result;
        }
        break;
      case 33:
        (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v24, a2, v88);
        uint64_t v56 = (uint64_t)v84;
        (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v84, v89, v90);
        uint64_t v57 = sub_3D5000();
        uint64_t v58 = v78;
        v78[3] = v57;
        boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v58);
        uint64_t v60 = v94;
        uint64_t result = TranscriptRequestInformation.init(deserializing:using:)(v24, v56, (uint64_t)boxed_opaque_existential_2Tm);
        if (v60) {
          goto LABEL_17;
        }
        break;
      case 36:
        (*(void (**)(char *, uint64_t, uint64_t))(v92 + 16))(v21, a2, v88);
        uint64_t v61 = (uint64_t)v85;
        (*(void (**)(char *, uint64_t, uint64_t))(v91 + 16))(v85, v89, v90);
        uint64_t v62 = type metadata accessor for Category();
        uint64_t v58 = v78;
        v78[3] = v62;
        __swift_allocate_boxed_opaque_existential_2Tm(v58);
        uint64_t v63 = v94;
        uint64_t result = sub_5A0BC((uint64_t)v21, v61);
        if (v63) {
LABEL_17:
        }
          uint64_t result = __swift_deallocate_boxed_opaque_existential_2((uint64_t)v58);
        break;
      default:
        uint64_t v49 = v78;
        *(_OWORD *)char v78 = 0u;
        *((_OWORD *)v49 + 1) = 0u;
        break;
    }
  }
  return result;
}

uint64_t sub_3B704C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v286 = a3;
  uint64_t v287 = a2;
  v284 = a1;
  uint64_t v285 = a5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4C1600);
  __chkstk_darwin(v6 - 8);
  v270 = (char *)&v242 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v269 = type metadata accessor for Category();
  uint64_t v268 = *(void *)(v269 - 8);
  __chkstk_darwin(v269);
  uint64_t v251 = (uint64_t)&v242 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_4ABEA8);
  __chkstk_darwin(v9 - 8);
  v273 = (char *)&v242 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v272 = sub_3D5000();
  uint64_t v271 = *(void *)(v272 - 8);
  __chkstk_darwin(v272);
  v259 = (char *)&v242 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v276 = sub_3D1FA0();
  uint64_t v253 = *(void *)(v276 - 8);
  __chkstk_darwin(v276);
  v275 = (char *)&v242 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  v260 = (char *)&v242 - v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_4A9C98);
  __chkstk_darwin(v15 - 8);
  v246 = (char *)&v242 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  v243 = (char *)&v242 - v18;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_4A9C90);
  __chkstk_darwin(v19 - 8);
  v258 = (char *)&v242 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v250 = (char *)&v242 - v22;
  uint64_t v274 = sub_3D2000();
  uint64_t v262 = *(void *)(v274 - 8);
  __chkstk_darwin(v274);
  v254 = (char *)&v242 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  v248 = (char *)&v242 - v25;
  uint64_t v26 = sub_3D5640();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v279 = v26;
  uint64_t v280 = v27;
  __chkstk_darwin(v26);
  v267 = (char *)&v242 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  v266 = (char *)&v242 - v30;
  __chkstk_darwin(v31);
  v256 = (char *)&v242 - v32;
  __chkstk_darwin(v33);
  v265 = (char *)&v242 - v34;
  __chkstk_darwin(v35);
  v264 = (char *)&v242 - v36;
  __chkstk_darwin(v37);
  uint64_t v39 = (char *)&v242 - v38;
  __chkstk_darwin(v40);
  char v42 = (char *)&v242 - v41;
  __chkstk_darwin(v43);
  v252 = (char *)&v242 - v44;
  __chkstk_darwin(v45);
  v247 = (char *)&v242 - v46;
  __chkstk_darwin(v47);
  v249 = (char *)&v242 - v48;
  __chkstk_darwin(v49);
  v257 = (char *)&v242 - v50;
  __chkstk_darwin(v51);
  v245 = (char *)&v242 - v52;
  __chkstk_darwin(v53);
  v244 = (char *)&v242 - v54;
  __chkstk_darwin(v55);
  v255 = (char *)&v242 - v56;
  __chkstk_darwin(v57);
  uint64_t v59 = (char *)&v242 - v58;
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  __chkstk_darwin(v60 - 8);
  uint64_t v62 = (char *)&v242 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v63);
  int v65 = (char *)&v242 - v64;
  __chkstk_darwin(v66);
  int v68 = (char *)&v242 - v67;
  uint64_t v69 = sub_3D2350();
  uint64_t v70 = *(void *)(v69 - 8);
  uint64_t v277 = v69;
  uint64_t v278 = v70;
  __chkstk_darwin(v69);
  v263 = (char *)&v242 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v72);
  v261 = (char *)&v242 - v73;
  __chkstk_darwin(v74);
  int v76 = (char *)&v242 - v75;
  uint64_t v282 = type metadata accessor for FlowDestination();
  __chkstk_darwin(v282);
  __chkstk_darwin(v77);
  __chkstk_darwin(v78);
  v281 = (uint64_t *)((char *)&v242 - v81);
  char v82 = *a4;
  char v83 = 9;
  uint64_t v84 = 0;
  uint64_t v283 = v85;
  switch((char)v284)
  {
    case 5:
      goto LABEL_20;
    case 7:
      uint64_t v84 = 1;
      goto LABEL_20;
    case 12:
      uint64_t v84 = 3;
      goto LABEL_20;
    case 13:
      char v83 = 5;
      uint64_t v84 = 257;
      goto LABEL_20;
    case 14:
    case 17:
    case 18:
    case 19:
      uint64_t v86 = v286;
      uint64_t v87 = sub_3BA724(v286);
      sub_250FC(v86, (uint64_t *)&unk_4B5A40);
      uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_4ACBD8);
      uint64_t v89 = v281;
      uint64_t v90 = (uint64_t)v281 + *(int *)(v88 + 48);
      uint64_t *v281 = v87;
      sub_18F88(v287, v90, &qword_4AD7B0);
      uint64_t v91 = v282;
      goto LABEL_21;
    case 15:
    case 24:
    case 25:
      sub_250FC(v286, (uint64_t *)&unk_4B5A40);
      uint64_t v89 = v281;
      sub_18F88(v287, (uint64_t)v281, &qword_4AD7B0);
      uint64_t v91 = v282;
      goto LABEL_21;
    case 16:
      uint64_t v92 = v287;
      sub_153B4(v287, (uint64_t)v68, &qword_4AD7B0);
      uint64_t v93 = v277;
      uint64_t v94 = v278;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v278 + 48))(v68, 1, v277) != 1)
      {
        sub_250FC(v286, (uint64_t *)&unk_4B5A40);
        sub_250FC(v92, &qword_4AD7B0);
        unsigned __int8 v148 = *(void (**)(char *, char *, uint64_t))(v94 + 32);
        v148(v76, v68, v93);
        uint64_t v149 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4B0470) + 48);
        uint64_t v89 = v281;
        v148((char *)v281, v76, v93);
        *((unsigned char *)v89 + v149) = v82;
        uint64_t v91 = v282;
        goto LABEL_21;
      }
      sub_250FC((uint64_t)v68, &qword_4AD7B0);
      sub_3D5520();
      uint64_t v95 = sub_3D5630();
      os_log_type_t v96 = sub_3D83E0();
      BOOL v97 = os_log_type_enabled(v95, v96);
      uint64_t v98 = v286;
      if (v97)
      {
        int v99 = (uint8_t *)swift_slowAlloc();
        uint64_t v288 = swift_slowAlloc();
        *(_DWORD *)int v99 = 136315138;
        uint64_t v291 = sub_1FB7E8(0x6E776F6E6B6E75, 0xE700000000000000, &v288);
        sub_3D8930();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_0, v95, v96, "Missing URL for %s", v99, 0xCu);
        uint64_t v100 = 1;
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_250FC(v98, (uint64_t *)&unk_4B5A40);
        sub_250FC(v92, &qword_4AD7B0);
        (*(void (**)(char *, uint64_t))(v280 + 8))(v59, v279);
      }
      else
      {

        sub_250FC(v98, (uint64_t *)&unk_4B5A40);
        sub_250FC(v92, &qword_4AD7B0);
        (*(void (**)(char *, uint64_t))(v280 + 8))(v59, v279);
        uint64_t v100 = 1;
      }
      uint64_t v108 = v285;
      uint64_t v91 = v282;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v283 + 56))(v108, v100, 1, v91);
    case 20:
      v284 = v80;
      uint64_t v101 = v287;
      sub_153B4(v287, (uint64_t)v65, &qword_4AD7B0);
      uint64_t v103 = v277;
      uint64_t v102 = v278;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v278 + 48))(v65, 1, v277) == 1)
      {
        sub_250FC((uint64_t)v65, &qword_4AD7B0);
        id v104 = v255;
        sub_3D5520();
        char v105 = sub_3D5630();
        os_log_type_t v106 = sub_3D83E0();
        BOOL v107 = os_log_type_enabled(v105, v106);
        uint64_t v108 = v285;
        if (v107)
        {
          uint64_t v109 = (uint8_t *)swift_slowAlloc();
          uint64_t v288 = swift_slowAlloc();
          *(_DWORD *)uint64_t v109 = 136315138;
          uint64_t v291 = sub_1FB7E8(0x7665526574697277, 0xEB00000000776569, &v288);
          sub_3D8930();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v105, v106, "Missing URL for %s", v109, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_250FC(v286, (uint64_t *)&unk_4B5A40);
          sub_250FC(v101, &qword_4AD7B0);
          uint64_t v110 = *(void (**)(char *, uint64_t))(v280 + 8);
          uint64_t v111 = v104;
          goto LABEL_54;
        }

        sub_250FC(v286, (uint64_t *)&unk_4B5A40);
        sub_250FC(v101, &qword_4AD7B0);
        uint64_t v110 = *(void (**)(char *, uint64_t))(v280 + 8);
        uint64_t v111 = v104;
LABEL_75:
        uint64_t v182 = v279;
LABEL_76:
        v110(v111, v182);
        uint64_t v100 = 1;
        uint64_t v91 = v282;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v283 + 56))(v108, v100, 1, v91);
      }
      uint64_t v150 = *(void (**)(char *, char *, uint64_t))(v102 + 32);
      uint64_t v151 = v261;
      v150(v261, v65, v103);
      uint64_t v152 = sub_3D3610();
      uint64_t v289 = v152;
      uint64_t v290 = sub_3BD280((unint64_t *)&qword_4AC678, (void (*)(uint64_t))&type metadata accessor for Podcasts);
      int v153 = __swift_allocate_boxed_opaque_existential_2Tm(&v288);
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v152 - 8) + 104))(v153, enum case for Podcasts.writeReviewNew(_:), v152);
      LOBYTE(v152) = sub_3D3580();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v288);
      uint64_t v108 = v285;
      if ((v152 & 1) == 0)
      {
        sub_250FC(v286, (uint64_t *)&unk_4B5A40);
        sub_250FC(v101, &qword_4AD7B0);
        uint64_t v89 = v281;
        v150((char *)v281, v151, v103);
        uint64_t v91 = v282;
        goto LABEL_82;
      }
      uint64_t v154 = (uint64_t)v250;
      sub_3D1FD0();
      uint64_t v155 = v262;
      uint64_t v156 = v274;
      int v157 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v262 + 48))(v154, 1, v274);
      uint64_t v158 = v286;
      if (v157 == 1)
      {
        sub_250FC(v154, &qword_4A9C90);
        uint64_t v159 = v244;
        sub_3D5520();
        uint64_t v160 = sub_3D5630();
        os_log_type_t v161 = sub_3D83E0();
        if (os_log_type_enabled(v160, v161))
        {
          id v162 = (uint8_t *)swift_slowAlloc();
          uint64_t v288 = swift_slowAlloc();
          *(_DWORD *)id v162 = 136315138;
          uint64_t v291 = sub_1FB7E8(0x7665526574697277, 0xEB00000000776569, &v288);
          sub_3D8930();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v160, v161, "Invalid review URL for %s", v162, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_250FC(v158, (uint64_t *)&unk_4B5A40);
          sub_250FC(v101, &qword_4AD7B0);
          (*(void (**)(char *, uint64_t))(v280 + 8))(v159, v279);
LABEL_129:
          uint64_t v110 = *(void (**)(char *, uint64_t))(v278 + 8);
          v229 = &v290;
          goto LABEL_130;
        }

        sub_250FC(v158, (uint64_t *)&unk_4B5A40);
        sub_250FC(v101, &qword_4AD7B0);
        (*(void (**)(char *, uint64_t))(v280 + 8))(v159, v279);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v155 + 32))(v248, v154, v156);
        uint64_t v206 = sub_3D1FB0();
        if (v206)
        {
          uint64_t v207 = v158;
          uint64_t v208 = *(void *)(v206 + 16);
          if (v208)
          {
            v209 = *(void (**)(char *, unint64_t, uint64_t))(v253 + 16);
            unint64_t v210 = v206
                 + ((*(unsigned __int8 *)(v253 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80));
            v211 = (void (**)(char *, uint64_t))(v253 + 8);
            uint64_t v212 = *(void *)(v253 + 72);
            swift_bridgeObjectRetain();
            uint64_t v213 = v276;
            v214 = v260;
            while (1)
            {
              v209(v214, v210, v213);
              if (sub_3D1F80() == 25705 && v215 == 0xE200000000000000)
              {
                swift_bridgeObjectRelease();
                uint64_t v213 = v276;
                goto LABEL_122;
              }
              char v216 = sub_3D8FE0();
              swift_bridgeObjectRelease();
              if (v216) {
                break;
              }
              v214 = v260;
              uint64_t v213 = v276;
              (*v211)(v260, v276);
              v210 += v212;
              if (!--v208)
              {
                swift_bridgeObjectRelease();
                uint64_t v217 = 1;
                uint64_t v108 = v285;
                uint64_t v207 = v286;
                uint64_t v101 = v287;
                uint64_t v103 = v277;
                uint64_t v155 = v262;
                uint64_t v156 = v274;
                goto LABEL_118;
              }
            }
            uint64_t v213 = v276;
            v214 = v260;
LABEL_122:
            swift_bridgeObjectRelease();
            uint64_t v231 = v253;
            uint64_t v232 = (uint64_t)v243;
            (*(void (**)(char *, char *, uint64_t))(v253 + 32))(v243, v214, v213);
            uint64_t v217 = 0;
            uint64_t v108 = v285;
            uint64_t v207 = v286;
            uint64_t v101 = v287;
            uint64_t v103 = v277;
            uint64_t v155 = v262;
            uint64_t v156 = v274;
          }
          else
          {
            uint64_t v217 = 1;
            uint64_t v213 = v276;
LABEL_118:
            uint64_t v231 = v253;
            uint64_t v232 = (uint64_t)v243;
          }
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v231 + 56))(v232, v217, 1, v213);
          swift_bridgeObjectRelease();
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v231 + 48))(v232, 1, v213) == 1)
          {
            sub_250FC(v232, &qword_4A9C98);
            uint64_t v158 = v207;
          }
          else
          {
            uint64_t v233 = v213;
            uint64_t v286 = sub_3D1F90();
            uint64_t v235 = v234;
            (*(void (**)(uint64_t, uint64_t))(v231 + 8))(v232, v233);
            uint64_t v158 = v207;
            if (v235)
            {
              uint64_t v240 = sub_3D5140();
              swift_bridgeObjectRelease();
              sub_250FC(v207, (uint64_t *)&unk_4B5A40);
              sub_250FC(v101, &qword_4AD7B0);
              (*(void (**)(char *, uint64_t))(v155 + 8))(v248, v156);
              (*(void (**)(char *, uint64_t))(v278 + 8))(v261, v103);
              goto LABEL_134;
            }
          }
        }
        v236 = v245;
        sub_3D5520();
        v237 = sub_3D5630();
        os_log_type_t v238 = sub_3D83E0();
        if (os_log_type_enabled(v237, v238))
        {
          v239 = (uint8_t *)swift_slowAlloc();
          uint64_t v288 = swift_slowAlloc();
          *(_DWORD *)v239 = 136315138;
          uint64_t v291 = sub_1FB7E8(0x7665526574697277, 0xEB00000000776569, &v288);
          sub_3D8930();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v237, v238, "Unable to find adam id for %s", v239, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_250FC(v158, (uint64_t *)&unk_4B5A40);
          sub_250FC(v101, &qword_4AD7B0);
          (*(void (**)(char *, uint64_t))(v280 + 8))(v245, v279);
          (*(void (**)(char *, uint64_t))(v155 + 8))(v248, v274);
          goto LABEL_129;
        }

        sub_250FC(v158, (uint64_t *)&unk_4B5A40);
        sub_250FC(v101, &qword_4AD7B0);
        (*(void (**)(char *, uint64_t))(v280 + 8))(v236, v279);
        (*(void (**)(char *, uint64_t))(v155 + 8))(v248, v156);
      }
      uint64_t v110 = *(void (**)(char *, uint64_t))(v278 + 8);
      v230 = &v290;
LABEL_133:
      uint64_t v111 = (char *)*(v230 - 32);
      uint64_t v182 = v103;
      goto LABEL_76;
    case 21:
      v284 = v79;
      sub_153B4(v287, (uint64_t)v62, &qword_4AD7B0);
      uint64_t v103 = v277;
      uint64_t v112 = v278;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v278 + 48))(v62, 1, v277) == 1)
      {
        sub_250FC((uint64_t)v62, &qword_4AD7B0);
        uint64_t v113 = v257;
        sub_3D5520();
        uint64_t v114 = sub_3D5630();
        os_log_type_t v115 = sub_3D83E0();
        BOOL v116 = os_log_type_enabled(v114, v115);
        uint64_t v108 = v285;
        if (v116)
        {
          uint64_t v117 = (uint8_t *)swift_slowAlloc();
          uint64_t v288 = swift_slowAlloc();
          *(_DWORD *)uint64_t v117 = 136315138;
          uint64_t v291 = sub_1FB7E8(0x7665526574697277, 0xEE0063614D776569, &v288);
          sub_3D8930();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v114, v115, "Missing URL for %s", v117, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_250FC(v286, (uint64_t *)&unk_4B5A40);
          sub_250FC(v287, &qword_4AD7B0);
          uint64_t v110 = *(void (**)(char *, uint64_t))(v280 + 8);
          uint64_t v111 = v113;
          goto LABEL_54;
        }

        sub_250FC(v286, (uint64_t *)&unk_4B5A40);
        sub_250FC(v287, &qword_4AD7B0);
        uint64_t v110 = *(void (**)(char *, uint64_t))(v280 + 8);
        uint64_t v111 = v113;
        goto LABEL_75;
      }
      (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v263, v62, v103);
      uint64_t v163 = (uint64_t)v258;
      sub_3D1FD0();
      uint64_t v164 = v262;
      uint64_t v165 = v274;
      int v166 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v262 + 48))(v163, 1, v274);
      uint64_t v108 = v285;
      if (v166 == 1)
      {
        sub_250FC(v163, &qword_4A9C90);
        id v167 = v249;
        sub_3D5520();
        uint64_t v168 = sub_3D5630();
        os_log_type_t v169 = sub_3D83E0();
        BOOL v170 = os_log_type_enabled(v168, v169);
        uint64_t v172 = v286;
        uint64_t v171 = v287;
        if (v170)
        {
          char v173 = (uint8_t *)swift_slowAlloc();
          uint64_t v288 = swift_slowAlloc();
          *(_DWORD *)char v173 = 136315138;
          uint64_t v291 = sub_1FB7E8(0x7665526574697277, 0xEE0063614D776569, &v288);
          sub_3D8930();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v168, v169, "Invalid review URL for %s", v173, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_250FC(v172, (uint64_t *)&unk_4B5A40);
          sub_250FC(v171, &qword_4AD7B0);
          (*(void (**)(char *, uint64_t))(v280 + 8))(v167, v279);
          goto LABEL_114;
        }

        sub_250FC(v172, (uint64_t *)&unk_4B5A40);
        sub_250FC(v171, &qword_4AD7B0);
        (*(void (**)(char *, uint64_t))(v280 + 8))(v167, v279);
        goto LABEL_116;
      }
      (*(void (**)(char *, uint64_t, uint64_t))(v164 + 32))(v254, v163, v165);
      uint64_t v193 = sub_3D1FB0();
      uint64_t v195 = v286;
      uint64_t v194 = v287;
      if (!v193) {
        goto LABEL_112;
      }
      uint64_t v196 = *(void *)(v193 + 16);
      if (v196)
      {
        char v197 = *(void (**)(char *, unint64_t, uint64_t))(v253 + 16);
        unint64_t v198 = v193 + ((*(unsigned __int8 *)(v253 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v253 + 80));
        uint64_t v199 = (void (**)(char *, uint64_t))(v253 + 8);
        uint64_t v200 = *(void *)(v253 + 72);
        swift_bridgeObjectRetain();
        uint64_t v202 = v275;
        uint64_t v201 = v276;
        while (1)
        {
          v197(v202, v198, v201);
          if (sub_3D1F80() == 25705 && v203 == 0xE200000000000000)
          {
            swift_bridgeObjectRelease();
            uint64_t v201 = v276;
            goto LABEL_106;
          }
          char v204 = sub_3D8FE0();
          swift_bridgeObjectRelease();
          if (v204) {
            break;
          }
          uint64_t v202 = v275;
          uint64_t v201 = v276;
          (*v199)(v275, v276);
          v198 += v200;
          if (!--v196)
          {
            swift_bridgeObjectRelease();
            uint64_t v205 = 1;
            uint64_t v108 = v285;
            uint64_t v195 = v286;
            uint64_t v194 = v287;
            uint64_t v103 = v277;
            uint64_t v164 = v262;
            uint64_t v165 = v274;
            goto LABEL_103;
          }
        }
        uint64_t v202 = v275;
        uint64_t v201 = v276;
LABEL_106:
        swift_bridgeObjectRelease();
        uint64_t v218 = v253;
        uint64_t v219 = (uint64_t)v246;
        (*(void (**)(char *, char *, uint64_t))(v253 + 32))(v246, v202, v201);
        uint64_t v205 = 0;
        uint64_t v108 = v285;
        uint64_t v195 = v286;
        uint64_t v194 = v287;
        uint64_t v103 = v277;
        uint64_t v164 = v262;
        uint64_t v165 = v274;
      }
      else
      {
        uint64_t v205 = 1;
        uint64_t v201 = v276;
LABEL_103:
        uint64_t v218 = v253;
        uint64_t v219 = (uint64_t)v246;
      }
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v218 + 56))(v219, v205, 1, v201);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v218 + 48))(v219, 1, v201) == 1)
      {
        sub_250FC(v219, &qword_4A9C98);
LABEL_112:
        v225 = v247;
        sub_3D5520();
        v226 = sub_3D5630();
        os_log_type_t v227 = sub_3D83E0();
        if (os_log_type_enabled(v226, v227))
        {
          v228 = (uint8_t *)swift_slowAlloc();
          uint64_t v288 = swift_slowAlloc();
          *(_DWORD *)v228 = 136315138;
          uint64_t v291 = sub_1FB7E8(0x7665526574697277, 0xEE0063614D776569, &v288);
          sub_3D8930();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v226, v227, "Unable to find adam id for %s", v228, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          sub_250FC(v195, (uint64_t *)&unk_4B5A40);
          sub_250FC(v287, &qword_4AD7B0);
          (*(void (**)(char *, uint64_t))(v280 + 8))(v225, v279);
          (*(void (**)(char *, uint64_t))(v164 + 8))(v254, v274);
LABEL_114:
          uint64_t v110 = *(void (**)(char *, uint64_t))(v278 + 8);
          v229 = (uint64_t *)&v292;
LABEL_130:
          uint64_t v111 = (char *)*(v229 - 32);
          uint64_t v182 = v277;
          goto LABEL_76;
        }

        sub_250FC(v195, (uint64_t *)&unk_4B5A40);
        sub_250FC(v287, &qword_4AD7B0);
        (*(void (**)(char *, uint64_t))(v280 + 8))(v225, v279);
        (*(void (**)(char *, uint64_t))(v164 + 8))(v254, v165);
LABEL_116:
        uint64_t v110 = *(void (**)(char *, uint64_t))(v278 + 8);
        v230 = (uint64_t *)&v292;
        goto LABEL_133;
      }
      uint64_t v220 = v201;
      uint64_t v286 = sub_3D1F90();
      uint64_t v222 = v221;
      (*(void (**)(uint64_t, uint64_t))(v218 + 8))(v219, v220);
      if (!v222) {
        goto LABEL_112;
      }
      uint64_t v223 = sub_3D3610();
      uint64_t v289 = v223;
      uint64_t v290 = sub_3BD280((unint64_t *)&qword_4AC678, (void (*)(uint64_t))&type metadata accessor for Podcasts);
      v224 = __swift_allocate_boxed_opaque_existential_2Tm(&v288);
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v223 - 8) + 104))(v224, enum case for Podcasts.writeReviewNew(_:), v223);
      LOBYTE(v223) = sub_3D3580();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v288);
      if (v223)
      {
        uint64_t v240 = sub_3D5140();
        swift_bridgeObjectRelease();
        sub_250FC(v195, (uint64_t *)&unk_4B5A40);
        sub_250FC(v194, &qword_4AD7B0);
        (*(void (**)(char *, uint64_t))(v164 + 8))(v254, v165);
        (*(void (**)(char *, uint64_t))(v278 + 8))(v263, v103);
LABEL_134:
        uint64_t v241 = (uint64_t)v284;
        uint64_t *v284 = v240;
        uint64_t v91 = v282;
        swift_storeEnumTagMultiPayload();
        uint64_t v89 = v281;
        sub_3BD218(v241, (uint64_t)v281, (uint64_t (*)(void))type metadata accessor for FlowDestination);
      }
      else
      {
        sub_250FC(v195, (uint64_t *)&unk_4B5A40);
        sub_250FC(v194, &qword_4AD7B0);
        (*(void (**)(char *, uint64_t))(v164 + 8))(v254, v165);
        (*(void (**)(char *, uint64_t))(v278 + 8))(v263, v103);
        uint64_t v89 = v281;
        uint64_t *v281 = v286;
        v89[1] = v222;
        uint64_t v91 = v282;
LABEL_82:
        swift_storeEnumTagMultiPayload();
      }
LABEL_22:
      sub_3BD218((uint64_t)v89, v108, (uint64_t (*)(void))type metadata accessor for FlowDestination);
      uint64_t v100 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v283 + 56))(v108, v100, 1, v91);
    case 22:
      uint64_t v118 = v286;
      uint64_t v119 = sub_3BA724(v286);
      if (v119)
      {
        uint64_t v120 = v119;
        sub_250FC(v118, (uint64_t *)&unk_4B5A40);
        sub_250FC(v287, &qword_4AD7B0);
        uint64_t v89 = v281;
        uint64_t v91 = v282;
        uint64_t *v281 = v120;
        goto LABEL_21;
      }
      id v176 = v252;
      sub_3D5520();
      uint64_t v177 = sub_3D5630();
      os_log_type_t v178 = sub_3D83E0();
      BOOL v179 = os_log_type_enabled(v177, v178);
      uint64_t v108 = v285;
      uint64_t v180 = v287;
      if (!v179)
      {

        sub_250FC(v118, (uint64_t *)&unk_4B5A40);
        sub_250FC(v180, &qword_4AD7B0);
        uint64_t v110 = *(void (**)(char *, uint64_t))(v280 + 8);
        uint64_t v111 = v176;
        goto LABEL_75;
      }
      v181 = (uint8_t *)swift_slowAlloc();
      uint64_t v288 = swift_slowAlloc();
      *(_DWORD *)v181 = 136315138;
      uint64_t v291 = sub_1FB7E8(0x73776569766572, 0xE700000000000000, &v288);
      sub_3D8930();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v177, v178, "Missing reviews page data for %s", v181, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      sub_250FC(v118, (uint64_t *)&unk_4B5A40);
      sub_250FC(v180, &qword_4AD7B0);
      uint64_t v110 = *(void (**)(char *, uint64_t))(v280 + 8);
      uint64_t v111 = v176;
LABEL_54:
      uint64_t v182 = v279;
      goto LABEL_76;
    case 26:
      uint64_t v84 = 4;
LABEL_20:
      sub_250FC(v286, (uint64_t *)&unk_4B5A40);
      sub_250FC(v287, &qword_4AD7B0);
      uint64_t v89 = v281;
      uint64_t v91 = v282;
      uint64_t *v281 = v84;
      *(_OWORD *)(v89 + 1) = 0u;
      *(_OWORD *)(v89 + 3) = 0u;
      *(_OWORD *)(v89 + 5) = 0u;
      v89[7] = 0;
      *((unsigned char *)v89 + 64) = v83;
      goto LABEL_21;
    case 27:
      uint64_t v122 = v286;
      uint64_t v123 = sub_3BA938(v286);
      if (v123) {
        goto LABEL_25;
      }
      sub_3D5520();
      id v183 = sub_3D5630();
      os_log_type_t v184 = sub_3D83E0();
      BOOL v185 = os_log_type_enabled(v183, v184);
      uint64_t v108 = v285;
      uint64_t v186 = v287;
      if (v185)
      {
        uint64_t v187 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v187 = 0;
        _os_log_impl(&dword_0, v183, v184, "Missing upsellInformation data", v187, 2u);
        swift_slowDealloc();
      }

      sub_250FC(v122, (uint64_t *)&unk_4B5A40);
      sub_250FC(v186, &qword_4AD7B0);
      uint64_t v110 = *(void (**)(char *, uint64_t))(v280 + 8);
      uint64_t v111 = v42;
      goto LABEL_75;
    case 28:
      uint64_t v122 = v286;
      uint64_t v123 = sub_3BAB4C(v286);
      if (v123)
      {
LABEL_25:
        uint64_t v124 = v123;
        sub_250FC(v122, (uint64_t *)&unk_4B5A40);
        sub_250FC(v287, &qword_4AD7B0);
        uint64_t v89 = v281;
        uint64_t v91 = v282;
        uint64_t *v281 = v124;
        goto LABEL_21;
      }
      sub_3D5520();
      uint64_t v188 = sub_3D5630();
      os_log_type_t v189 = sub_3D83E0();
      BOOL v190 = os_log_type_enabled(v188, v189);
      uint64_t v108 = v285;
      uint64_t v191 = v287;
      if (v190)
      {
        char v192 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)char v192 = 0;
        _os_log_impl(&dword_0, v188, v189, "Missing longDescription data", v192, 2u);
        swift_slowDealloc();
      }

      sub_250FC(v122, (uint64_t *)&unk_4B5A40);
      sub_250FC(v191, &qword_4AD7B0);
      uint64_t v110 = *(void (**)(char *, uint64_t))(v280 + 8);
      uint64_t v111 = v39;
      goto LABEL_75;
    case 31:
      uint64_t v125 = v286;
      sub_153B4(v286, (uint64_t)&v288, (uint64_t *)&unk_4B5A40);
      if (v289)
      {
        type metadata accessor for UpsellInformation();
        char v126 = swift_dynamicCast();
        uint64_t v108 = v285;
        uint64_t v127 = v287;
        int v128 = v264;
        if (v126) {
          goto LABEL_30;
        }
      }
      else
      {
        sub_250FC((uint64_t)&v288, (uint64_t *)&unk_4B5A40);
        uint64_t v108 = v285;
        uint64_t v127 = v287;
        int v128 = v264;
      }
      sub_3D5520();
      uint64_t v134 = sub_3D5630();
      os_log_type_t v135 = sub_3D83E0();
      if (!os_log_type_enabled(v134, v135)) {
        goto LABEL_74;
      }
      uint64_t v137 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v137 = 0;
      uint64_t v138 = "Could not get channel data for single subscription confirmation sheet";
      goto LABEL_73;
    case 32:
      uint64_t v125 = v286;
      sub_153B4(v286, (uint64_t)&v288, (uint64_t *)&unk_4B5A40);
      if (v289)
      {
        __swift_instantiateConcreteTypeFromMangledName(&qword_4A99C0);
        char v130 = swift_dynamicCast();
        uint64_t v108 = v285;
        uint64_t v127 = v287;
        int v128 = v265;
        if (v130)
        {
LABEL_30:
          uint64_t v129 = v291;
          sub_250FC(v125, (uint64_t *)&unk_4B5A40);
          sub_250FC(v127, &qword_4AD7B0);
          uint64_t v89 = v281;
          uint64_t v91 = v282;
          uint64_t *v281 = v129;
          goto LABEL_82;
        }
      }
      else
      {
        sub_250FC((uint64_t)&v288, (uint64_t *)&unk_4B5A40);
        uint64_t v108 = v285;
        uint64_t v127 = v287;
        int v128 = v265;
      }
      sub_3D5520();
      uint64_t v134 = sub_3D5630();
      os_log_type_t v135 = sub_3D83E0();
      if (!os_log_type_enabled(v134, v135)) {
        goto LABEL_74;
      }
      uint64_t v137 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v137 = 0;
      uint64_t v138 = "Could not get channel data for multiple subscription confirmation sheet";
      goto LABEL_73;
    case 33:
      uint64_t v131 = v273;
      uint64_t v125 = v286;
      sub_3BAD60(v286, v273);
      uint64_t v132 = v271;
      uint64_t v133 = v272;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v271 + 48))(v131, 1, v272) != 1)
      {
        sub_250FC(v125, (uint64_t *)&unk_4B5A40);
        sub_250FC(v287, &qword_4AD7B0);
        id v174 = *(void (**)(char *, char *, uint64_t))(v132 + 32);
        unsigned __int8 v175 = v259;
        v174(v259, v131, v133);
        uint64_t v89 = v281;
        v174((char *)v281, v175, v133);
        uint64_t v91 = v282;
LABEL_21:
        swift_storeEnumTagMultiPayload();
        uint64_t v108 = v285;
        goto LABEL_22;
      }
      sub_250FC((uint64_t)v131, &qword_4ABEA8);
      int v128 = v256;
      sub_3D5520();
      uint64_t v134 = sub_3D5630();
      os_log_type_t v135 = sub_3D83E0();
      BOOL v136 = os_log_type_enabled(v134, v135);
      uint64_t v108 = v285;
      uint64_t v127 = v287;
      if (!v136) {
        goto LABEL_74;
      }
      uint64_t v137 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v137 = 0;
      uint64_t v138 = "Missing Info to request full transcript";
      goto LABEL_73;
    case 35:
      uint64_t v125 = v286;
      sub_153B4(v286, (uint64_t)&v288, (uint64_t *)&unk_4B5A40);
      if (v289)
      {
        char v139 = swift_dynamicCast();
        uint64_t v108 = v285;
        uint64_t v127 = v287;
        int v128 = v266;
        if (v139)
        {
          uint64_t v140 = v291;
          sub_250FC(v125, (uint64_t *)&unk_4B5A40);
          sub_250FC(v127, &qword_4AD7B0);
          uint64_t v89 = v281;
          uint64_t v91 = v282;
          v281[1] = 0;
          v89[2] = 0;
          uint64_t *v89 = v140;
          goto LABEL_82;
        }
      }
      else
      {
        sub_250FC((uint64_t)&v288, (uint64_t *)&unk_4B5A40);
        uint64_t v108 = v285;
        uint64_t v127 = v287;
        int v128 = v266;
      }
      sub_3D5520();
      uint64_t v134 = sub_3D5630();
      os_log_type_t v135 = sub_3D83E0();
      if (!os_log_type_enabled(v134, v135)) {
        goto LABEL_74;
      }
      uint64_t v137 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v137 = 0;
      uint64_t v138 = "Missing app adam ID to build inAppProductPage";
      goto LABEL_73;
    case 36:
      uint64_t v125 = v286;
      sub_153B4(v286, (uint64_t)&v288, (uint64_t *)&unk_4B5A40);
      if (v289)
      {
        uint64_t v141 = (uint64_t)v270;
        uint64_t v142 = v269;
        int v143 = swift_dynamicCast();
        uint64_t v144 = v268;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v268 + 56))(v141, v143 ^ 1u, 1, v142);
        int v145 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v144 + 48))(v141, 1, v142);
        uint64_t v108 = v285;
        uint64_t v127 = v287;
        int v128 = v267;
        if (v145 != 1)
        {
          sub_250FC(v125, (uint64_t *)&unk_4B5A40);
          sub_250FC(v127, &qword_4AD7B0);
          uint64_t v146 = v141;
          uint64_t v147 = v251;
          sub_3BD218(v146, v251, (uint64_t (*)(void))type metadata accessor for Category);
          uint64_t v89 = v281;
          sub_3BD218(v147, (uint64_t)v281, (uint64_t (*)(void))type metadata accessor for Category);
          uint64_t v91 = v282;
          goto LABEL_82;
        }
      }
      else
      {
        sub_250FC((uint64_t)&v288, (uint64_t *)&unk_4B5A40);
        uint64_t v141 = (uint64_t)v270;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v268 + 56))(v270, 1, 1, v269);
        uint64_t v108 = v285;
        uint64_t v127 = v287;
        int v128 = v267;
      }
      sub_250FC(v141, &qword_4C1600);
      sub_3D5520();
      uint64_t v134 = sub_3D5630();
      os_log_type_t v135 = sub_3D83E0();
      if (os_log_type_enabled(v134, v135))
      {
        uint64_t v137 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v137 = 0;
        uint64_t v138 = "Could not get Category data for the category page.";
LABEL_73:
        _os_log_impl(&dword_0, v134, v135, v138, v137, 2u);
        swift_slowDealloc();
      }
LABEL_74:

      sub_250FC(v125, (uint64_t *)&unk_4B5A40);
      sub_250FC(v127, &qword_4AD7B0);
      uint64_t v110 = *(void (**)(char *, uint64_t))(v280 + 8);
      uint64_t v111 = v128;
      goto LABEL_75;
    default:
      sub_250FC(v286, (uint64_t *)&unk_4B5A40);
      sub_250FC(v287, &qword_4AD7B0);
      uint64_t v89 = v281;
      uint64_t v91 = v282;
      goto LABEL_21;
  }
}

unint64_t sub_3BA08C(char a1)
{
  unint64_t result = 0x6E657473696CLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x7972617262696CLL;
      break;
    case 2:
      unint64_t result = 0x547972617262696CLL;
      break;
    case 3:
      unint64_t result = 0x73776F6873;
      break;
    case 4:
    case 29:
      unint64_t result = 0x796C746E65636572;
      break;
    case 5:
      unint64_t result = 0xD000000000000012;
      break;
    case 6:
      unint64_t result = 0xD000000000000013;
      break;
    case 7:
      unint64_t result = 0xD000000000000016;
      break;
    case 8:
      unint64_t result = 0x6957646572616873;
      break;
    case 9:
      unint64_t result = 0x6867696C68676968;
      break;
    case 10:
      unint64_t result = 0x736C656E6E616863;
      break;
    case 11:
      unint64_t result = 0x69726F6765746163;
      break;
    case 12:
      unint64_t result = 0xD000000000000017;
      break;
    case 13:
      unint64_t result = 0x6F4E6E657473696CLL;
      break;
    case 14:
      unint64_t result = 0x676F6C61746163;
      break;
    case 15:
      unint64_t result = 0x686372616573;
      break;
    case 16:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    case 17:
      unint64_t result = 1701273968;
      break;
    case 18:
      unint64_t result = 0x6C6576654C706F74;
      break;
    case 19:
      unint64_t result = 0x6F546E7265646F6DLL;
      break;
    case 20:
    case 21:
      unint64_t result = 0x7665526574697277;
      break;
    case 22:
      unint64_t result = 0x73776569766572;
      break;
    case 23:
      unint64_t result = 0x746E756F636361;
      break;
    case 24:
      unint64_t result = 0x65636E616E6966;
      break;
    case 25:
      unint64_t result = 0xD000000000000014;
      break;
    case 26:
      unint64_t result = 0x6B72616D6B6F6F62;
      break;
    case 27:
      unint64_t result = 0x6C6C65737075;
      break;
    case 28:
      unint64_t result = 0x63736544676E6F6CLL;
      break;
    case 30:
      unint64_t result = 0xD000000000000012;
      break;
    case 31:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 32:
      unint64_t result = 0xD000000000000020;
      break;
    case 33:
      unint64_t result = 0xD000000000000017;
      break;
    case 34:
    case 35:
      unint64_t result = 0xD000000000000010;
      break;
    case 36:
      unint64_t result = 0x79726F6765746163;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_3BA4F4(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_3BA08C(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_3BA08C(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_3D8FE0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_3BA580()
{
  char v1 = *v0;
  sub_3D9130();
  sub_3BA08C(v1);
  sub_3D7E60();
  swift_bridgeObjectRelease();
  return sub_3D9180();
}

uint64_t sub_3BA5E4()
{
  sub_3BA08C(*v0);
  sub_3D7E60();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_3BA638()
{
  char v1 = *v0;
  sub_3D9130();
  sub_3BA08C(v1);
  sub_3D7E60();
  swift_bridgeObjectRelease();
  return sub_3D9180();
}

uint64_t sub_3BA698@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_3BBDF0();
  *a1 = result;
  return result;
}

unint64_t sub_3BA6C8@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_3BA08C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_3BA6F4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_3BBDF0();
  *a1 = result;
  return result;
}

unint64_t sub_3BA71C()
{
  return sub_3BA08C(*v0);
}

uint64_t sub_3BA724(uint64_t a1)
{
  sub_153B4(a1, (uint64_t)&v8, (uint64_t *)&unk_4B5A40);
  if (v9)
  {
    sub_153A4(&v8, &v10);
    sub_153A4(&v10, &v8);
    type metadata accessor for Page();
    if (swift_dynamicCast()) {
      return v7;
    }
  }
  else
  {
    sub_250FC((uint64_t)&v8, (uint64_t *)&unk_4B5A40);
  }
  sub_153B4(a1, (uint64_t)&v10, (uint64_t *)&unk_4B5A40);
  if (!v11)
  {
    sub_250FC((uint64_t)&v10, (uint64_t *)&unk_4B5A40);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  long long v3 = v8;
  uint64_t v4 = type metadata accessor for Page();
  if (*((void *)&v3 + 1) != v4)
  {
    swift_release();
    return 0;
  }
  __chkstk_darwin(v4);
  uint64_t v5 = (char **)(v3 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v3 + 16));
  uint64_t v6 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_3BD2C8(v5, (uint64_t)&v10);
  os_unfair_lock_unlock(v6);
  swift_release();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t result = v8;
  if (!(void)v8) {
    return 0;
  }
  return result;
}

uint64_t sub_3BA938(uint64_t a1)
{
  sub_153B4(a1, (uint64_t)&v8, (uint64_t *)&unk_4B5A40);
  if (v9)
  {
    sub_153A4(&v8, &v10);
    sub_153A4(&v10, &v8);
    type metadata accessor for UpsellInformation();
    if (swift_dynamicCast()) {
      return v7;
    }
  }
  else
  {
    sub_250FC((uint64_t)&v8, (uint64_t *)&unk_4B5A40);
  }
  sub_153B4(a1, (uint64_t)&v10, (uint64_t *)&unk_4B5A40);
  if (!v11)
  {
    sub_250FC((uint64_t)&v10, (uint64_t *)&unk_4B5A40);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  long long v3 = v8;
  uint64_t v4 = type metadata accessor for UpsellInformation();
  if (*((void *)&v3 + 1) != v4)
  {
    swift_release();
    return 0;
  }
  __chkstk_darwin(v4);
  uint64_t v5 = (char **)(v3 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v3 + 16));
  uint64_t v6 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_3BDC40(v5, (uint64_t)&v10);
  os_unfair_lock_unlock(v6);
  swift_release();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t result = v8;
  if (!(void)v8) {
    return 0;
  }
  return result;
}

uint64_t sub_3BAB4C(uint64_t a1)
{
  sub_153B4(a1, (uint64_t)&v8, (uint64_t *)&unk_4B5A40);
  if (v9)
  {
    sub_153A4(&v8, &v10);
    sub_153A4(&v10, &v8);
    type metadata accessor for LongDescription();
    if (swift_dynamicCast()) {
      return v7;
    }
  }
  else
  {
    sub_250FC((uint64_t)&v8, (uint64_t *)&unk_4B5A40);
  }
  sub_153B4(a1, (uint64_t)&v10, (uint64_t *)&unk_4B5A40);
  if (!v11)
  {
    sub_250FC((uint64_t)&v10, (uint64_t *)&unk_4B5A40);
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  long long v3 = v8;
  uint64_t v4 = type metadata accessor for LongDescription();
  if (*((void *)&v3 + 1) != v4)
  {
    swift_release();
    return 0;
  }
  __chkstk_darwin(v4);
  uint64_t v5 = (char **)(v3 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v3 + 16));
  uint64_t v6 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_3BDC40(v5, (uint64_t)&v10);
  os_unfair_lock_unlock(v6);
  swift_release();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  uint64_t result = v8;
  if (!(void)v8) {
    return 0;
  }
  return result;
}

uint64_t sub_3BAD60@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_4ABEA8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v31 - v8;
  uint64_t v10 = sub_3D5000();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)v31 - v15;
  sub_153B4(a1, (uint64_t)&v32, (uint64_t *)&unk_4B5A40);
  if (v33)
  {
    sub_153A4(&v32, &v34);
    sub_153A4(&v34, &v32);
    char v17 = swift_dynamicCast();
    uint64_t v18 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
    if (v17)
    {
      v18(v9, 0, 1, v10);
      uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v19(v16, v9, v10);
      v19(a2, v16, v10);
      return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v18)(a2, 0, 1, v10);
    }
    v18(v9, 1, 1, v10);
    sub_250FC((uint64_t)v9, &qword_4ABEA8);
  }
  else
  {
    sub_250FC((uint64_t)&v32, (uint64_t *)&unk_4B5A40);
  }
  sub_153B4(a1, (uint64_t)&v34, (uint64_t *)&unk_4B5A40);
  if (!v35)
  {
    uint64_t v23 = (uint64_t *)&unk_4B5A40;
    uint64_t v24 = (char *)&v34;
    goto LABEL_13;
  }
  uint64_t v21 = swift_dynamicCast();
  if (v21)
  {
    uint64_t v22 = v32;
    if (*((void *)&v32 + 1) != v10)
    {
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, 1, 1, v10);
    }
    v31[0] = v31;
    __chkstk_darwin(v21);
    v31[-4] = v22;
    v31[-3] = v10;
    v31[-2] = v25;
    uint64_t v26 = (char **)(v22 + *(void *)(class metadata base offset for ManagedBuffer + *(void *)v22 + 16));
    uint64_t v27 = (os_unfair_lock_s *)(v22 + ((*(unsigned int *)(*(void *)v22 + 48) + 3) & 0x1FFFFFFFCLL));
    os_unfair_lock_lock(v27);
    sub_3BDC40(v26, (uint64_t)&v34);
    os_unfair_lock_unlock(v27);
    swift_release();
    int v28 = swift_dynamicCast();
    uint64_t v29 = *(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56);
    v29(v6, v28 ^ 1u, 1, v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) != 1)
    {
      uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
      v30(v13, v6, v10);
      v30(a2, v13, v10);
      return ((uint64_t (*)(char *, void, uint64_t, uint64_t))v29)(a2, 0, 1, v10);
    }
    uint64_t v23 = &qword_4ABEA8;
    uint64_t v24 = v6;
LABEL_13:
    sub_250FC((uint64_t)v24, v23);
  }
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(a2, 1, 1, v10);
}

uint64_t sub_3BB208@<X0>(char **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v64 = a4;
  uint64_t v65 = a5;
  uint64_t v71 = a3;
  uint64_t v67 = a2;
  uint64_t v6 = sub_3D5640();
  uint64_t v68 = *(void *)(v6 - 8);
  uint64_t v69 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v61 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v66 = (char **)((char *)&v61 - v10);
  uint64_t v11 = sub_3D6CE0();
  uint64_t v70 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v73 = (char *)&v61 - v15;
  uint64_t v75 = sub_3D6B50();
  uint64_t v72 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  char v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v61 - v19;
  uint64_t v21 = type metadata accessor for LazyModel._State(0);
  __chkstk_darwin(v21);
  uint64_t v23 = (long long *)((char *)&v61 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_3BD160((uint64_t)a1, (uint64_t)v23);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v25 = v66;
      sub_3D5590();
      swift_retain();
      swift_errorRetain();
      swift_retain();
      swift_errorRetain();
      uint64_t v26 = sub_3D5630();
      os_log_type_t v27 = sub_3D83F0();
      if (os_log_type_enabled(v26, v27))
      {
        uint64_t v28 = swift_slowAlloc();
        uint64_t v29 = (void *)swift_slowAlloc();
        uint64_t v75 = swift_slowAlloc();
        v76[0] = v75;
        *(_DWORD *)uint64_t v28 = 136315394;
        uint64_t v30 = sub_3D92F0();
        uint64_t v79 = sub_1FB7E8(v30, v31, v76);
        sub_3D8930();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v28 + 12) = 2112;
        swift_errorRetain();
        uint64_t v32 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v79 = v32;
        sub_3D8930();
        *uint64_t v29 = v32;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl(&dword_0, v26, v27, "LazyModel: Object of type %s previously failed to decode with %@", (uint8_t *)v28, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B24C0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char **, uint64_t))(v68 + 8))(v66, v69);
      }
      else
      {
        swift_release_n();
        swift_errorRelease();
        swift_errorRelease();

        (*(void (**)(char **, uint64_t))(v68 + 8))(v25, v69);
      }
      return swift_willThrow();
    }
    else
    {
      sub_18F70(v23, (uint64_t)v76);
      uint64_t v47 = v77;
      uint64_t v48 = __swift_project_boxed_opaque_existential_1(v76, v77);
      uint64_t v49 = (uint64_t *)v65;
      *(void *)(v65 + 24) = v47;
      boxed_opaque_existential_2Tm = __swift_allocate_boxed_opaque_existential_2Tm(v49);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(boxed_opaque_existential_2Tm, v48, v47);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
    }
  }
  else
  {
    uint64_t v62 = v8;
    uint64_t v63 = v21;
    uint64_t v66 = a1;
    sub_3BCC40((uint64_t)a1);
    uint64_t v33 = (char *)v23 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4C1A20) + 48);
    uint64_t v34 = v72;
    uint64_t v35 = v75;
    (*(void (**)(char *, long long *, uint64_t))(v72 + 32))(v20, v23, v75);
    uint64_t v36 = v70;
    uint64_t v37 = v73;
    (*(void (**)(char *, char *, uint64_t))(v70 + 32))(v73, v33, v11);
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v17, v20, v35);
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v13, v37, v11);
    uint64_t v77 = v71;
    uint64_t v78 = v64;
    __swift_allocate_boxed_opaque_existential_2Tm(v76);
    uint64_t v38 = v74;
    sub_3D7270();
    uint64_t v39 = v11;
    if (v38)
    {
      uint64_t v74 = v20;
      __swift_deallocate_boxed_opaque_existential_2((uint64_t)v76);
      uint64_t v40 = v62;
      sub_3D5590();
      swift_retain();
      swift_errorRetain();
      swift_retain();
      swift_errorRetain();
      uint64_t v41 = sub_3D5630();
      os_log_type_t v42 = sub_3D83F0();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = swift_slowAlloc();
        uint64_t v64 = (void *)swift_slowAlloc();
        uint64_t v65 = swift_slowAlloc();
        v76[0] = v65;
        *(_DWORD *)uint64_t v43 = 136315394;
        uint64_t v44 = sub_3D92F0();
        uint64_t v79 = sub_1FB7E8(v44, v45, v76);
        sub_3D8930();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v43 + 12) = 2112;
        swift_errorRetain();
        uint64_t v46 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v79 = v46;
        sub_3D8930();
        void *v64 = v46;
        uint64_t v39 = v11;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl(&dword_0, v41, v42, "LazyModel: Object of type %s failed to decode with %@", (uint8_t *)v43, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_4B24C0);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        (*(void (**)(char *, uint64_t))(v68 + 8))(v62, v69);
      }
      else
      {
        swift_release_n();
        swift_errorRelease();
        swift_errorRelease();

        (*(void (**)(char *, uint64_t))(v68 + 8))(v40, v69);
      }
      uint64_t v56 = v70;
      uint64_t v58 = v74;
      uint64_t v57 = v75;
      uint64_t v60 = v72;
      uint64_t v59 = v73;
      *uint64_t v66 = v38;
      swift_storeEnumTagMultiPayload();
      swift_errorRetain();
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v59, v39);
      return (*(uint64_t (**)(char *, uint64_t))(v60 + 8))(v58, v57);
    }
    else
    {
      sub_18168((uint64_t)v76, (uint64_t)v66);
      swift_storeEnumTagMultiPayload();
      uint64_t v52 = v77;
      uint64_t v53 = __swift_project_boxed_opaque_existential_1(v76, v77);
      uint64_t v54 = (uint64_t *)v65;
      *(void *)(v65 + 24) = v52;
      uint64_t v55 = __swift_allocate_boxed_opaque_existential_2Tm(v54);
      (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v52 - 8) + 16))(v55, v53, v52);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v73, v11);
      (*(void (**)(char *, uint64_t))(v72 + 8))(v20, v75);
      return __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
    }
  }
}

uint64_t sub_3BBB5C()
{
  uint64_t v0 = sub_3D6B50();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  long long v3 = &v15[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v4 = type metadata accessor for LazyModel._State(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (long long *)&v15[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_3D54C0();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_3BCC40((uint64_t)v6);
      return 0;
    }
    sub_18F70(v6, (uint64_t)v19);
    sub_18168((uint64_t)v19, (uint64_t)v15);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4A9808);
    __swift_instantiateConcreteTypeFromMangledName(&qword_4C1968);
    if (!swift_dynamicCast())
    {
      uint64_t v18 = 0;
      long long v16 = 0u;
      long long v17 = 0u;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      sub_250FC((uint64_t)&v16, &qword_4C1960);
      return 0;
    }
    uint64_t v11 = *((void *)&v17 + 1);
    uint64_t v12 = v18;
    __swift_project_boxed_opaque_existential_1(&v16, *((uint64_t *)&v17 + 1));
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8))(v11, v12);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  }
  else
  {
    uint64_t v8 = (char *)v6 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4C1A20) + 48);
    (*(void (**)(char *, long long *, uint64_t))(v1 + 32))(v3, v6, v0);
    uint64_t v9 = sub_3BCC9C();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    uint64_t v10 = sub_3D6CE0();
    (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v8, v10);
  }
  return v9;
}

uint64_t sub_3BBDE4()
{
  return sub_3BBB5C();
}

uint64_t sub_3BBDF0()
{
  unint64_t v0 = sub_3D9010();
  swift_bridgeObjectRelease();
  if (v0 >= 0x25) {
    return 37;
  }
  else {
    return v0;
  }
}

void *initializeBufferWithCopyOfBuffer for LazyJSFlowDestination(unsigned char *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v13 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(unsigned char *)a2;
    uint64_t v7 = a3[5];
    uint64_t v8 = &a1[v7];
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_3D2350();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
      memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(unsigned char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)v4 + v14;
    long long v16 = (_OWORD *)((char *)a2 + v14);
    uint64_t v17 = *(void *)((char *)a2 + v14 + 24);
    if (v17)
    {
      *((void *)v15 + 3) = v17;
      (**(void (***)(void))(v17 - 8))();
    }
    else
    {
      long long v18 = v16[1];
      *(_OWORD *)uint64_t v15 = *v16;
      *((_OWORD *)v15 + 1) = v18;
    }
    *((unsigned char *)v4 + a3[7]) = *((unsigned char *)a2 + a3[7]);
  }
  return v4;
}

uint64_t destroy for LazyJSFlowDestination(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_3D2350();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t result = a1 + *(int *)(a2 + 24);
  if (*(void *)(result + 24)) {
    return __swift_destroy_boxed_opaque_existential_1(result);
  }
  return result;
}

unsigned char *initializeWithCopy for LazyJSFlowDestination(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_3D2350();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void *)&a2[v12 + 24];
  if (v15)
  {
    *((void *)v13 + 3) = v15;
    (**(void (***)(void))(v15 - 8))();
  }
  else
  {
    long long v16 = v14[1];
    *(_OWORD *)uint64_t v13 = *v14;
    *((_OWORD *)v13 + 1) = v16;
  }
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

unsigned char *assignWithCopy for LazyJSFlowDestination(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_3D2350();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  uint64_t v16 = (uint64_t)&a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *(void *)&a2[v15 + 24];
  if (!*(void *)&a1[v15 + 24])
  {
    if (v18)
    {
      *(void *)(v16 + 24) = v18;
      (**(void (***)(uint64_t, unsigned char *))(v18 - 8))(v16, v17);
      goto LABEL_14;
    }
LABEL_13:
    long long v19 = *((_OWORD *)v17 + 1);
    *(_OWORD *)uint64_t v16 = *(_OWORD *)v17;
    *(_OWORD *)(v16 + 16) = v19;
    goto LABEL_14;
  }
  if (!v18)
  {
    __swift_destroy_boxed_opaque_existential_1(v16);
    goto LABEL_13;
  }
  __swift_assign_boxed_opaque_existential_0((uint64_t *)v16, (uint64_t *)v17);
LABEL_14:
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

unsigned char *initializeWithTake for LazyJSFlowDestination(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_3D2350();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = &a1[v12];
  uint64_t v15 = &a2[v12];
  long long v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  a1[v13] = a2[v13];
  return a1;
}

unsigned char *assignWithTake for LazyJSFlowDestination(unsigned char *a1, unsigned char *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_3D2350();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[6];
  long long v16 = &a1[v15];
  if (*(void *)&a1[v15 + 24]) {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v15]);
  }
  long long v17 = *(_OWORD *)&a2[v15 + 16];
  *long long v16 = *(_OWORD *)&a2[v15];
  v16[1] = v17;
  a1[a3[7]] = a2[a3[7]];
  return a1;
}

uint64_t getEnumTagSinglePayload for LazyJSFlowDestination(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_3BC77C);
}

uint64_t sub_3BC77C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24) + 24);
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    int v13 = v12 - 1;
    if (v13 < 0) {
      int v13 = -1;
    }
    return (v13 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for LazyJSFlowDestination(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_3BC868);
}

uint64_t sub_3BC868(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_4AD7B0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24) + 24) = a2;
  }
  return result;
}

void sub_3BC930()
{
  sub_3140C();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t getEnumTagSinglePayload for FlowPage(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xDC) {
    goto LABEL_17;
  }
  if (a2 + 36 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 36) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 36;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 36;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 36;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x25;
  int v8 = v6 - 37;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FlowPage(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 36 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 36) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDB)
  {
    unsigned int v6 = ((a2 - 220) >> 8) + 1;
    *uint64_t result = a2 + 36;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x3BCB38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 36;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FlowPage()
{
  return &type metadata for FlowPage;
}

unint64_t sub_3BCB74()
{
  unint64_t result = qword_4C1A10;
  if (!qword_4C1A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C1A10);
  }
  return result;
}

unint64_t sub_3BCBCC()
{
  unint64_t result = qword_4C1A18;
  if (!qword_4C1A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C1A18);
  }
  return result;
}

uint64_t type metadata accessor for LazyModel._State(uint64_t a1)
{
  return sub_2595C(a1, qword_4C1AA8);
}

uint64_t sub_3BCC40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for LazyModel._State(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_3BCC9C()
{
  v28[0] = sub_3D1D50();
  __chkstk_darwin(v28[0]);
  v28[1] = (char *)v28 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = sub_3D6B50();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  BOOL v7 = (char *)v28 - v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v28 - v9;
  sub_3D6B60();
  uint64_t v11 = sub_3D6B20();
  uint64_t v13 = v12;
  uint64_t v14 = *(void (**)(char *, uint64_t))(v2 + 8);
  v14(v10, v1);
  if (!v13) {
    return 0;
  }
  swift_bridgeObjectRetain();
  sub_3D6B60();
  uint64_t v15 = sub_3D6B20();
  uint64_t v17 = v16;
  v14(v7, v1);
  if (!v17)
  {
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  if (v11 != v15 || v13 != v17)
  {
    char v19 = sub_3D8FE0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v19) {
      goto LABEL_18;
    }
LABEL_10:
    swift_bridgeObjectRetain();
    sub_3D6B60();
    uint64_t v20 = sub_3D6B20();
    uint64_t v22 = v21;
    v14(v4, v1);
    if (v22)
    {
      if (v11 == v20 && v13 == v22)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
        char v24 = sub_3D8FE0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v24 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          return 0;
        }
      }
      uint64_t v29 = _swiftEmptyArrayStorage;
      sub_3BD280((unint64_t *)&qword_4AAE98, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
      __swift_instantiateConcreteTypeFromMangledName(&qword_4AAEA0);
      sub_31AA4();
      sub_3D8A70();
      sub_3D25B0();
      uint64_t v29 = (void *)v11;
      uint64_t v30 = v13;
      objc_allocWithZone((Class)sub_3D35D0());
      uint64_t v25 = &qword_4B2BF0;
      uint64_t v26 = &type metadata accessor for ShowEntity;
      goto LABEL_23;
    }
    swift_bridgeObjectRelease_n();
    return 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_18:
  uint64_t v29 = _swiftEmptyArrayStorage;
  sub_3BD280((unint64_t *)&qword_4AAE98, (void (*)(uint64_t))&type metadata accessor for AppEntityVisualState);
  __swift_instantiateConcreteTypeFromMangledName(&qword_4AAEA0);
  sub_31AA4();
  sub_3D8A70();
  sub_3D2740();
  uint64_t v29 = (void *)v11;
  uint64_t v30 = v13;
  objc_allocWithZone((Class)sub_3D35D0());
  uint64_t v25 = &qword_4B7CA0;
  uint64_t v26 = &type metadata accessor for ChannelEntity;
LABEL_23:
  sub_3BD280(v25, (void (*)(uint64_t))v26);
  return sub_3D35A0();
}

uint64_t sub_3BD160(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for LazyModel._State(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_3BD1C4()
{
  unint64_t result = qword_4C1A30;
  if (!qword_4C1A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_4C1A30);
  }
  return result;
}

uint64_t sub_3BD218(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_3BD280(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_3BD2C8@<X0>(char **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_3BB208(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32), a2);
}

uint64_t sub_3BD2E8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      long long v9 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(a1 + 24) = v9;
      (**(void (***)(uint64_t, uint64_t *))(v9 - 8))(a1, a2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = *a2;
      swift_errorRetain();
      *(void *)a1 = v7;
    }
    else
    {
      uint64_t v10 = sub_3D6B50();
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
      uint64_t v11 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4C1A20) + 48);
      uint64_t v12 = a1 + v11;
      uint64_t v13 = (uint64_t)a2 + v11;
      uint64_t v14 = sub_3D6CE0();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_3BD494(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      return __swift_destroy_boxed_opaque_existential_1(a1);
    case 1:
      return swift_errorRelease();
    case 0:
      uint64_t v3 = sub_3D6B50();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
      uint64_t v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4C1A20) + 48);
      uint64_t v5 = sub_3D6CE0();
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      return v6(v4, v5);
  }
  return result;
}

uint64_t sub_3BD590(uint64_t a1, uint64_t *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    long long v6 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v6;
    (**(void (***)(uint64_t, uint64_t *))(v6 - 8))(a1, a2);
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = *a2;
    swift_errorRetain();
    *(void *)a1 = v5;
  }
  else
  {
    uint64_t v7 = sub_3D6B50();
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4C1A20) + 48);
    uint64_t v9 = a1 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = sub_3D6CE0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *sub_3BD6EC(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_3BCC40((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v6 = a2[3];
      a1[3] = v6;
      a1[4] = a2[4];
      (**(void (***)(uint64_t *, uint64_t *))(v6 - 8))(a1, a2);
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v5 = *a2;
      swift_errorRetain();
      *a1 = v5;
    }
    else
    {
      uint64_t v7 = sub_3D6B50();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4C1A20) + 48);
      uint64_t v9 = (char *)a1 + v8;
      uint64_t v10 = (char *)a2 + v8;
      uint64_t v11 = sub_3D6CE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_3BD85C(char *a1, char *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_3D6B50();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4C1A20) + 48);
    uint64_t v8 = &a1[v7];
    uint64_t v9 = &a2[v7];
    uint64_t v10 = sub_3D6CE0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

char *sub_3BD964(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_3BCC40((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_3D6B50();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      uint64_t v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_4C1A20) + 48);
      uint64_t v8 = &a1[v7];
      uint64_t v9 = &a2[v7];
      uint64_t v10 = sub_3D6CE0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_3BDA7C()
{
  uint64_t result = sub_3D6B50();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_3D6CE0();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      uint64_t v4 = &v3;
      uint64_t v5 = "\b";
      uint64_t v6 = &unk_3FB328;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for LazyModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LazyModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for LazyModel(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  return a1;
}

ValueMetadata *type metadata accessor for LazyModel()
{
  return &type metadata for LazyModel;
}

uint64_t sub_3BDC40@<X0>(char **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_3BD2C8(a1, a2);
}

uint64_t sub_3BDC58()
{
  return sub_3D67E0();
}

uint64_t sub_3BDC94()
{
  return sub_3D6800();
}

__n128 SizeClassReader.init(content:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_3D3470();
  sub_3D3480();
  sub_3D67E0();
  __n128 result = v8;
  *(unsigned char *)a3 = v7;
  *(__n128 *)(a3 + 8) = v8;
  *(void *)(a3 + 24) = v9;
  *(void *)(a3 + 32) = a1;
  *(void *)(a3 + 40) = a2;
  return result;
}

uint64_t SizeClassReader.body.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v33 = a2;
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v29 = *(void *)(v3 - 8);
  __chkstk_darwin(a1);
  uint64_t v5 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_3D6070();
  uint64_t v31 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  __n128 v8 = (char *)&v27 - v7;
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4AEBA0);
  uint64_t v30 = sub_3D6070();
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_4AEBB0);
  uint64_t v9 = sub_3D6070();
  uint64_t v32 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  os_log_type_t v27 = (char *)&v27 - v13;
  long long v14 = v2[2];
  long long v15 = *v2;
  *(_OWORD *)&v42[16] = v2[1];
  long long v43 = v14;
  *(_OWORD *)os_log_type_t v42 = v15;
  uint64_t v16 = (void (*)(unsigned char *))v14;
  v44[0] = v15;
  long long v45 = *(_OWORD *)&v42[8];
  uint64_t v46 = *(void *)&v42[24];
  __swift_instantiateConcreteTypeFromMangledName(&qword_4C1B60);
  sub_3D67F0();
  v44[0] = v40;
  long long v45 = v41;
  v16(v44);
  sub_3D68B0();
  uint64_t v17 = *(void *)(v28 + 24);
  sub_3D6670();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v3);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v3;
  *(void *)(v18 + 24) = v17;
  long long v19 = *(_OWORD *)&v42[16];
  *(_OWORD *)(v18 + 32) = *(_OWORD *)v42;
  *(_OWORD *)(v18 + 48) = v19;
  *(_OWORD *)(v18 + 64) = v43;
  sub_3BE384((uint64_t)v42);
  uint64_t v38 = v17;
  uint64_t v39 = &protocol witness table for _FlexFrameLayout;
  uint64_t WitnessTable = swift_getWitnessTable();
  View.withSizing(callback:)((uint64_t)sub_3BE378, v18, WitnessTable, (uint64_t)v11);
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v6);
  uint64_t v21 = sub_3D6E4(&qword_4AEB98, &qword_4AEBA0);
  uint64_t v36 = WitnessTable;
  uint64_t v37 = v21;
  uint64_t v22 = swift_getWitnessTable();
  uint64_t v23 = sub_3D6E4(&qword_4AEBA8, &qword_4AEBB0);
  uint64_t v34 = v22;
  uint64_t v35 = v23;
  swift_getWitnessTable();
  char v24 = v27;
  sub_186390(v11);
  uint64_t v25 = *(void (**)(char *, uint64_t))(v32 + 8);
  v25(v11, v9);
  sub_186390(v24);
  return ((uint64_t (*)(char *, uint64_t))v25)(v24, v9);
}

uint64_t sub_3BE258(uint64_t a1, double a2)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_4C1B60);
  uint64_t result = sub_3D67F0();
  if (v5 != a2)
  {
    type metadata accessor for SizeClassReader();
    sub_3BE384(a1);
    sub_3D3470();
    sub_3D3480();
    sub_3BDC94();
    return sub_3BE7E4(a1);
  }
  return result;
}

uint64_t sub_3BE338()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_3BE378(double a1)
{
  return sub_3BE258(v1 + 32, a1);
}