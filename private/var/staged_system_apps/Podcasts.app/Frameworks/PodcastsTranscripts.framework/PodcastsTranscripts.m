uint64_t TranscriptViewController.selectedTextRange.getter()
{
  return 0;
}

uint64_t TranscriptViewController.compare(document:toDocument:)(long long *a1, uint64_t *a2)
{
  uint64_t v4 = sub_758C0();
  uint64_t v45 = *(void *)(v4 - 8);
  uint64_t v46 = v4;
  __chkstk_darwin(v4);
  v44 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_98020);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v11 = (char *)&v37 - v10;
  uint64_t v12 = sub_75190();
  v13 = *(void **)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  v37 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v43 = (char *)&v37 - v16;
  long long v47 = *a1;
  uint64_t v17 = *((void *)a1 + 2);
  uint64_t v18 = *((void *)a1 + 3);
  char v19 = *((unsigned char *)a1 + 32);
  uint64_t v20 = *a2;
  uint64_t v41 = a2[1];
  uint64_t v42 = v20;
  uint64_t v21 = a2[2];
  uint64_t v39 = a2[3];
  uint64_t v40 = v21;
  int v38 = *((unsigned __int8 *)a2 + 32);
  id v22 = sub_4C684();
  long long v49 = v47;
  uint64_t v50 = v17;
  uint64_t v51 = v18;
  char v52 = v19;
  sub_75AE0();

  v23 = (unsigned int (*)(char *, uint64_t, uint64_t))v13[6];
  if (v23(v11, 1, v12) == 1)
  {
    v9 = v11;
  }
  else
  {
    v24 = v43;
    v25 = v11;
    v26 = (void (*)(char *, char *, uint64_t))v13[4];
    v26(v43, v25, v12);
    id v27 = sub_4C684();
    *(void *)&long long v49 = v42;
    *((void *)&v49 + 1) = v41;
    uint64_t v50 = v40;
    uint64_t v51 = v39;
    char v52 = v38;
    sub_75AE0();

    if (v23(v9, 1, v12) != 1)
    {
      v33 = v37;
      v26(v37, v9, v12);
      uint64_t v34 = sub_75150();
      uint64_t v35 = sub_75150();
      v36 = (void (*)(char *, uint64_t))v13[1];
      v36(v33, v12);
      v36(v24, v12);
      if (v34 < v35) {
        return -1;
      }
      else {
        return v35 < v34;
      }
    }
    ((void (*)(char *, uint64_t))v13[1])(v24, v12);
  }
  sub_8840((uint64_t)v9);
  v28 = v44;
  sub_758A0();
  v29 = sub_758B0();
  os_log_type_t v30 = sub_76B90();
  if (os_log_type_enabled(v29, v30))
  {
    v31 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v49 = swift_slowAlloc();
    *(_DWORD *)v31 = 136315138;
    uint64_t v48 = sub_7D80(0xD000000000000022, 0x800000000007DE50, (uint64_t *)&v49);
    sub_76F90();
    _os_log_impl(&def_1E2E4, v29, v30, "%s Compare documents method has unexpected types.", v31, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v45 + 8))(v28, v46);
  return 0;
}

void TranscriptViewController.performTextSearch(queryString:options:resultAggregator:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v58 = a4;
  uint64_t v60 = a1;
  uint64_t v61 = a2;
  uint64_t v5 = sub_758C0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_4C6E4();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v9 = sub_36DC8(v63);
  swift_bridgeObjectRelease();
  uint64_t v10 = *(void *)(v9 + 16);
  if (!v10)
  {
LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  uint64_t v50 = v8;
  uint64_t v51 = v6;
  uint64_t v52 = v5;
  uint64_t v11 = 0;
  unint64_t v12 = 0;
  uint64_t v13 = v9 + 32;
  p_types = &stru_95FF8.types;
  long long v49 = a3;
  uint64_t v55 = v9;
  uint64_t v48 = v10;
  uint64_t v47 = v9 + 32;
  while (1)
  {
    if (v12 >= *(void *)(v9 + 16))
    {
LABEL_27:
      __break(1u);
      JUMPOUT(0x5954);
    }
    uint64_t v15 = (uint64_t *)(v13 + 16 * v12);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    swift_retain();
    swift_retain();
    id v18 = [a3 p_types[463]];
    uint64_t v19 = sub_36B40(v60, v61, (uint64_t)v18);
    if (v19) {
      break;
    }
    swift_release();
    swift_release();
LABEL_4:
    if (++v12 == v10) {
      goto LABEL_24;
    }
  }
  uint64_t v57 = v16;
  uint64_t v20 = *(void *)(v19 + 16);
  uint64_t v21 = v19;
  if (!v20)
  {
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_4;
  }
  uint64_t v59 = v17;
  unint64_t v54 = v12;
  uint64_t v53 = v11 + v20;
  id v22 = (objc_class *)type metadata accessor for StringTextPosition();
  uint64_t v56 = v21;
  v23 = (uint64_t *)(v21 + 40);
  while (2)
  {
    uint64_t v24 = *(v23 - 1);
    uint64_t v25 = *v23;
    v26 = (char *)objc_allocWithZone(v22);
    *(void *)&v26[OBJC_IVAR____TtC19PodcastsTranscripts18StringTextPosition_position] = v24;
    v70.receiver = v26;
    v70.super_class = v22;
    id v27 = [super init];
    v28 = (char *)objc_allocWithZone(v22);
    *(void *)&v28[OBJC_IVAR____TtC19PodcastsTranscripts18StringTextPosition_position] = v25;
    v69.receiver = v28;
    v69.super_class = v22;
    id v29 = [super init];
    os_log_type_t v30 = (objc_class *)type metadata accessor for StringTextRange();
    v31 = (char *)objc_allocWithZone(v30);
    *(void *)&v31[OBJC_IVAR____TtC19PodcastsTranscripts15StringTextRange_startPosition] = v27;
    *(void *)&v31[OBJC_IVAR____TtC19PodcastsTranscripts15StringTextRange_endPosition] = v29;
    v68.receiver = v31;
    v68.super_class = v30;
    [super init];
    unint64_t v33 = *(void *)(v59 + 16);
    unint64_t v34 = v33 >> 62;
    uint64_t v35 = v32;
    v62 = v23 + 2;
    switch(v33 >> 62)
    {
      case 1uLL:
        uint64_t v36 = *(void *)((char *)&dword_10 + (v33 & 0x3FFFFFFFFFFFFFFFLL));
        swift_retain();
        uint64_t v37 = 0;
        uint64_t v38 = 0;
        goto LABEL_15;
      case 2uLL:
        uint64_t v40 = (void *)(v33 & 0x3FFFFFFFFFFFFFFFLL);
        uint64_t v36 = v40[5];
        uint64_t v37 = v40[6];
        uint64_t v38 = v40[7];
        uint64_t v39 = v40[8];
        goto LABEL_13;
      case 3uLL:
        uint64_t v41 = (void *)(v33 & 0x3FFFFFFFFFFFFFFFLL);
        uint64_t v36 = v41[14];
        uint64_t v37 = v41[15];
        uint64_t v38 = v41[16];
        swift_bridgeObjectRetain();
LABEL_15:
        uint64_t v39 = 0;
        goto LABEL_16;
      default:
        uint64_t v36 = *(void *)(v33 + 16);
        uint64_t v37 = *(void *)(v33 + 24);
        uint64_t v38 = *(void *)(v33 + 32);
        uint64_t v39 = *(void *)(v33 + 40);
LABEL_13:
        swift_bridgeObjectRetain();
LABEL_16:
        unint64_t v63 = v36;
        uint64_t v64 = v37;
        uint64_t v65 = v38;
        uint64_t v66 = v39;
        char v67 = v34;
        __swift_instantiateConcreteTypeFromMangledName(&qword_98028);
        sub_75930();

        sub_88A0(v36, v37, v38, v39, v34);
        if (v11 == 0x7FFFFFFFFFFFFFFFLL)
        {
          __break(1u);
          goto LABEL_27;
        }
        if (++v11 <= 999)
        {
          --v20;
          v23 = v62;
          if (!v20)
          {
            swift_release();
            swift_release();
            swift_bridgeObjectRelease();
            uint64_t v11 = v53;
            a3 = v49;
            unint64_t v12 = v54;
            uint64_t v9 = v55;
            uint64_t v10 = v48;
            uint64_t v13 = v47;
            p_types = (char **)(&stru_95FF8 + 8);
            goto LABEL_4;
          }
          continue;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_88F0();
        swift_allocError();
        swift_willThrow();
        swift_release();
        swift_release();
        swift_errorRetain();
        uint64_t v42 = v50;
        sub_758A0();
        v43 = sub_758B0();
        os_log_type_t v44 = sub_76BB0();
        if (os_log_type_enabled(v43, v44))
        {
          uint64_t v45 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v45 = 134217984;
          unint64_t v63 = 1000;
          sub_76F90();
          _os_log_impl(&def_1E2E4, v43, v44, "Stopping search after %ld matches.", v45, 0xCu);
          swift_slowDealloc();
        }
        swift_errorRelease();

        (*(void (**)(char *, uint64_t))(v51 + 8))(v42, v52);
        swift_errorRelease();
LABEL_25:
        __swift_instantiateConcreteTypeFromMangledName(&qword_98028);
        sub_75940();
        return;
    }
  }
}

uint64_t TranscriptViewController.decorate(foundTextRange:document:usingStyle:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_758C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v10 = *(unsigned __int8 *)(a2 + 32);
  if (v10 == 255) {
    goto LABEL_14;
  }
  uint64_t v11 = *(void *)a2;
  uint64_t v12 = *(void *)(a2 + 8);
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v14 = *(void *)(a2 + 24);
  v43[0] = v11;
  v43[1] = v12;
  v43[2] = v13;
  v43[3] = v14;
  char v44 = v10;
  uint64_t v42 = v13;
  sub_8944(v11, v12, v13, v14, v10);
  unint64_t v15 = sub_4C830((uint64_t)v43);
  if (!v15)
  {
LABEL_13:
    sub_8994(v11, v12, v42, v14, v10);
LABEL_14:
    sub_758A0();
    id v29 = sub_758B0();
    os_log_type_t v30 = sub_76B90();
    if (os_log_type_enabled(v29, v30))
    {
      v31 = (uint8_t *)swift_slowAlloc();
      v43[0] = swift_slowAlloc();
      *(_DWORD *)v31 = 136315138;
      uint64_t v45 = sub_7D80(0xD000000000000022, 0x800000000007DE50, v43);
      sub_76F90();
      _os_log_impl(&def_1E2E4, v29, v30, "%s Decorate method has unexpected types.", v31, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  uint64_t v16 = v15;
  uint64_t v41 = v14;
  type metadata accessor for StringTextRange();
  uint64_t v17 = swift_dynamicCastClass();
  if (!v17)
  {
    swift_release();
    uint64_t v14 = v41;
    goto LABEL_13;
  }
  id v18 = (char *)v17;
  if (!a3)
  {
    id v21 = a1;
    sub_37250(v18, 1);
    swift_getKeyPath();
    v43[0] = v16;
    sub_89A8((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
    sub_75540();
    swift_release();
    unint64_t v33 = *(void **)(v16 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__activeSearchRange);
    if (v33)
    {
      id v34 = v33;
      swift_bridgeObjectRetain();
      uint64_t v35 = _s19PodcastsTranscripts24TranscriptViewControllerC7compare_7toRange8documentSo18NSComparisonResultVSo06UITextH0C_AjA0c7ContentD5ModelC2IDOSgtF_0(v18, v34);
      swift_bridgeObjectRelease();
      if (!v35) {
        sub_37250(v18, 2);
      }
    }
    uint64_t v25 = v11;
    uint64_t v26 = v12;
    uint64_t v28 = v41;
    uint64_t v27 = v42;
    goto LABEL_23;
  }
  uint64_t v19 = (char *)v17;
  if (a3 == 2)
  {
    id v36 = a1;
    sub_36FCC(v18, 2);
    uint64_t v37 = v11;
    uint64_t v38 = v12;
    uint64_t v40 = v41;
    uint64_t v39 = v42;
  }
  else
  {
    uint64_t v20 = v41;
    if (a3 == 1)
    {
      id v21 = a1;
      sub_36FCC(v19, 1);
      swift_getKeyPath();
      v43[0] = v16;
      sub_89A8((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
      sub_75540();
      swift_release();
      id v22 = *(void **)(v16 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__activeSearchRange);
      if (v22)
      {
        id v23 = v22;
        swift_bridgeObjectRetain();
        uint64_t v24 = _s19PodcastsTranscripts24TranscriptViewControllerC7compare_7toRange8documentSo18NSComparisonResultVSo06UITextH0C_AjA0c7ContentD5ModelC2IDOSgtF_0(v19, v23);
        swift_bridgeObjectRelease();
        if (!v24) {
          sub_37250(v19, 2);
        }
      }
      uint64_t v25 = v11;
      uint64_t v26 = v12;
      uint64_t v27 = v42;
      uint64_t v28 = v20;
LABEL_23:
      sub_8994(v25, v26, v27, v28, v10);

      return swift_release();
    }
    id v36 = a1;
    uint64_t v37 = v11;
    uint64_t v38 = v12;
    uint64_t v39 = v42;
    uint64_t v40 = v20;
  }
  sub_8994(v37, v38, v39, v40, v10);

  return swift_release();
}

Swift::Void __swiftcall TranscriptViewController.clearAllDecoratedFoundText()()
{
  uint64_t v0 = sub_758C0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_758A0();
  uint64_t v4 = sub_758B0();
  os_log_type_t v5 = sub_76B80();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    v18[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    uint64_t v19 = sub_7D80(0xD000000000000022, 0x800000000007DE50, (uint64_t *)v18);
    sub_76F90();
    _os_log_impl(&def_1E2E4, v4, v5, "%s Clear all decorated found text.", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_4C6E4();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v7 = sub_36DC8(v18[0]);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(v7 + 16);
  if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    v15[1] = v7;
    int v10 = (void *)(v7 + 40);
    v15[2] = (char *)&type metadata for () + 8;
    do
    {
      uint64_t v12 = *(v10 - 1);
      uint64_t v13 = *(void *)(*v10 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_liveText);
      swift_getKeyPath();
      uint64_t v19 = v13;
      sub_89A8(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
      uint64_t v17 = v12;
      swift_retain();
      swift_retain();
      sub_75540();
      swift_release();
      uint64_t v14 = v13 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__searchRanges;
      swift_beginAccess();
      if (*(void *)(*(void *)v14 + 16))
      {
        uint64_t v16 = v9;
        swift_getKeyPath();
        uint64_t v19 = v13;
        sub_75540();
        swift_release();
        uint64_t v19 = v13;
        swift_getKeyPath();
        sub_75560();
        swift_release();
        *(void *)uint64_t v14 = &_swiftEmptySetSingleton;
        swift_bridgeObjectRelease();
        uint64_t v19 = v13;
        uint64_t v9 = v16;
        swift_getKeyPath();
        sub_75550();
        swift_release();
        sub_3C41C();
      }
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      v15[-3] = 0;
      v15[-2] = 0;
      v15[-4] = v13;
      LOBYTE(v15[-1]) = 1;
      uint64_t v19 = v13;
      sub_75530();
      swift_release();
      swift_release();
      swift_release();
      v10 += 2;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
}

uint64_t TranscriptViewController.scrollRangeToVisible(_:inDocument:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_758C0();
  uint64_t v79 = *(void *)(v4 - 8);
  uint64_t v80 = v4;
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v63 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v63 - v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_98020);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_75190();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v16 = __chkstk_darwin(v15);
  int v19 = *(unsigned __int8 *)(a2 + 32);
  if (v19 == 255)
  {
LABEL_10:
    sub_758A0();
    unint64_t v54 = sub_758B0();
    os_log_type_t v55 = sub_76B90();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      v81[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v56 = 136315138;
      uint64_t v83 = sub_7D80(0xD000000000000022, 0x800000000007DE50, v81);
      sub_76F90();
      _os_log_impl(&def_1E2E4, v54, v55, "%s Scroll rect to visible has unexpected types.", v56, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v79 + 8))(v7, v80);
  }
  v76 = v9;
  v77 = (void *)a1;
  uint64_t v75 = v18;
  v78 = (char *)&v63 - v17;
  uint64_t v20 = *(void *)a2;
  uint64_t v21 = *(void *)(a2 + 8);
  uint64_t v22 = v16;
  uint64_t v23 = *(void *)(a2 + 16);
  uint64_t v24 = *(void *)(a2 + 24);
  sub_8944(*(void *)a2, v21, v23, v24, v19);
  id v25 = sub_4C684();
  v81[0] = v20;
  v81[1] = v21;
  v81[2] = v23;
  v81[3] = v24;
  char v82 = v19;
  sub_75AE0();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v22) == 1)
  {
    sub_8994(v20, v21, v23, v24, v19);
    sub_8840((uint64_t)v12);
    goto LABEL_10;
  }
  int v71 = v19;
  uint64_t v73 = v24;
  uint64_t v74 = v20;
  uint64_t v72 = v23;
  uint64_t v26 = v78;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v78, v12, v22);
  uint64_t v27 = sub_4CA30();
  if (!v27)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v22);
    sub_8994(v74, v21, v72, v73, v71);
    goto LABEL_10;
  }
  uint64_t v28 = v27;
  type metadata accessor for StringTextRange();
  id v29 = v77;
  uint64_t v30 = swift_dynamicCastClass();
  id v31 = v29;
  if (!v30)
  {
    sub_8994(v74, v21, v72, v73, v71);

    swift_release();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v26, v22);
    goto LABEL_10;
  }
  uint64_t v69 = v30;
  v77 = (void *)v21;
  id v32 = v76;
  sub_758A0();
  uint64_t v33 = v75;
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(v75, v26, v22);
  id v34 = v31;
  swift_retain_n();
  id v35 = v34;
  id v36 = sub_758B0();
  os_log_type_t v37 = sub_76B80();
  int v38 = v37;
  BOOL v39 = os_log_type_enabled(v36, v37);
  id v70 = v35;
  if (v39)
  {
    uint64_t v40 = swift_slowAlloc();
    int v67 = v38;
    uint64_t v41 = v40;
    uint64_t v42 = (void *)swift_slowAlloc();
    uint64_t v65 = v42;
    uint64_t v68 = swift_slowAlloc();
    v81[0] = v68;
    *(_DWORD *)uint64_t v41 = 136316163;
    os_log_t v66 = v36;
    uint64_t v83 = sub_7D80(0xD000000000000022, 0x800000000007DE50, v81);
    uint64_t v64 = v22;
    sub_76F90();
    *(_WORD *)(v41 + 12) = 2114;
    uint64_t v43 = v69;
    uint64_t v83 = v69;
    id v44 = v35;
    sub_76F90();
    *uint64_t v42 = v43;

    *(_WORD *)(v41 + 22) = 2160;
    uint64_t v83 = 1752392040;
    sub_76F90();
    *(_WORD *)(v41 + 32) = 2081;
    unint64_t v45 = *(void *)(v28 + 16);
    swift_retain();
    uint64_t v46 = sub_1CCBC(v45);
    unint64_t v48 = v47;
    swift_release();
    uint64_t v83 = sub_7D80(v46, v48, v81);
    sub_76F90();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 42) = 2080;
    sub_89A8(&qword_98048, (void (*)(uint64_t))&type metadata accessor for IndexPath);
    uint64_t v49 = v75;
    uint64_t v22 = v64;
    uint64_t v50 = sub_77200();
    uint64_t v83 = sub_7D80(v50, v51, v81);
    sub_76F90();
    swift_bridgeObjectRelease();
    uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v52(v49, v22);
    os_log_t v53 = v66;
    _os_log_impl(&def_1E2E4, v66, (os_log_type_t)v67, "%s Scroll to %{public}@ in %{private,mask.hash}s at %s.", (uint8_t *)v41, 0x34u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_98050);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v79 + 8))(v76, v80);
  }
  else
  {
    swift_release_n();

    uint64_t v52 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v52(v33, v22);

    (*(void (**)(char *, uint64_t))(v79 + 8))(v32, v80);
  }
  uint64_t v58 = v72;
  uint64_t v59 = v73;
  uint64_t v60 = v22;
  uint64_t v61 = sub_4CB58();
  Class isa = sub_75130().super.isa;
  [v61 _scrollToItemAtIndexPath:isa atScrollPosition:1 additionalInsets:1 20.0 0.0 0.0 0.0];
  sub_8994(v74, (uint64_t)v77, v58, v59, v71);

  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v52)(v26, v60);
}

uint64_t sub_6BA0(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();

  return UITextSearching.supportsTextReplacement.getter(ObjectType, a2);
}

uint64_t sub_6BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();

  return UITextSearching.shouldReplace(foundTextRange:document:withText:)(a1, a2, a3, a4, ObjectType, a6);
}

uint64_t sub_6C4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t ObjectType = swift_getObjectType();

  return UITextSearching.replace(foundTextRange:document:withText:)(a1, a2, a3, a4, ObjectType, a6);
}

void sub_6CBC(uint64_t a1, uint64_t a2, UITextSearchOptions a3, uint64_t a4, uint64_t a5)
{
  swift_getObjectType();
  uint64_t v10 = a1;
  uint64_t v11 = a2;
  uint64_t v12 = a4;
  uint64_t v13 = a5;

  UITextSearching.replaceAll(queryString:options:withText:)(*(Swift::String *)&v10, a3, *(Swift::String *)&v12);
}

uint64_t sub_6D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();

  return UITextSearching.willHighlight(foundTextRange:document:)(a1, a2, ObjectType, a4);
}

uint64_t sub_6D98(uint64_t a1, uint64_t a2)
{
  uint64_t ObjectType = swift_getObjectType();

  return UITextSearching.selectedTextSearchDocument.getter(ObjectType, a2);
}

uint64_t TranscriptViewController.canBecomeFirstResponder.getter()
{
  return 1;
}

Swift::Int sub_6DF0()
{
  return sub_77320();
}

void sub_6E34()
{
}

Swift::Int sub_6E5C()
{
  return sub_77320();
}

id sub_6EAC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_89A8((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  sub_75540();
  swift_release();
  uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__activeSearchRange);
  *a2 = v4;

  return v4;
}

void sub_6F6C(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_89A8((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  id v2 = v1;
  sub_75530();
  swift_release();
}

__n128 sub_7048@<Q0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_89A8(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  swift_release();
  unsigned __int8 v4 = *(unsigned char *)(v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeSearchRange + 16);
  __n128 result = *(__n128 *)(v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeSearchRange);
  *a2 = result;
  a2[1].n128_u8[0] = v4;
  return result;
}

uint64_t sub_7104()
{
  return swift_release();
}

uint64_t sub_71E4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_89A8(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  swift_release();
  unsigned __int8 v4 = (void *)(v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__searchRanges);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_72B0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_7390@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_7410()
{
  return sub_75C50();
}

NSNumber sub_748C()
{
  return CGFloat._bridgeToObjectiveC()();
}

uint64_t sub_7494(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_755A0();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t sub_74E8(uint64_t a1, uint64_t a2)
{
  char v3 = sub_755B0();
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  return v3 & 1;
}

uint64_t sub_7540@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_755C0();
  *a1 = v3;
  return result;
}

uint64_t sub_7568(uint64_t a1, uint64_t a2)
{
  return sub_76E8(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_7594(uint64_t a1, id *a2)
{
  uint64_t result = sub_768F0();
  *a2 = 0;
  return result;
}

uint64_t sub_760C(uint64_t a1, id *a2)
{
  char v3 = sub_76900();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_768C@<X0>(void *a1@<X8>)
{
  sub_76910();
  NSString v2 = sub_768D0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_76D0(uint64_t a1, uint64_t a2)
{
  return sub_76E8(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_76E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_76910();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_772C()
{
  sub_76910();
  sub_76940();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_7780()
{
  sub_76910();
  sub_772D0();
  sub_76940();
  Swift::Int v0 = sub_77320();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_77F4(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_780C()
{
  uint64_t v0 = sub_76910();
  uint64_t v2 = v1;
  if (v0 == sub_76910() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_77230();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

void sub_7898(void *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_78A4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

double sub_78B4@<D0>(void *a1@<X8>)
{
  double result = *v1;
  *a1 = *(void *)v1;
  return result;
}

uint64_t sub_78C0()
{
  return sub_771E0();
}

uint64_t sub_798C()
{
  sub_89A8(&qword_981A0, type metadata accessor for AttributeName);
  sub_89A8(&qword_981A8, type metadata accessor for AttributeName);

  return sub_771E0();
}

uint64_t sub_7A48()
{
  sub_89A8(&qword_98190, type metadata accessor for TraitKey);
  sub_89A8(&qword_98198, type metadata accessor for TraitKey);

  return sub_771E0();
}

uint64_t sub_7B04@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_768D0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_7B4C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_76910();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_7B78()
{
  sub_89A8(&qword_981B0, type metadata accessor for Key);
  sub_89A8(&qword_981B8, type metadata accessor for Key);

  return sub_771E0();
}

uint64_t sub_7C34()
{
  return Double.hashValue.getter(*v0);
}

void sub_7C3C()
{
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *v0;
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  sub_77310(v1);
}

uint64_t sub_7C70(uint64_t a1)
{
  if ((*v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    uint64_t v2 = *v1;
  }
  else {
    uint64_t v2 = 0;
  }
  return static Hasher._hash(seed:_:)(a1, v2);
}

BOOL sub_7C80(double *a1, double *a2)
{
  return *a1 == *a2;
}

uint64_t sub_7C94(uint64_t result, unsigned char **a2)
{
  uint64_t v2 = *a2;
  *uint64_t v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_7CA4(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_7CE0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_7D08(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  sub_7D80(v6, v7, a3);
  uint64_t v8 = *a1 + 8;
  sub_76F90();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_7D80(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_7E54(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_8CBC((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_8CBC((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_7E54(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_76FA0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_8010(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_770A0();
  if (!v8)
  {
    sub_77150();
    __break(1u);
LABEL_17:
    uint64_t result = sub_771D0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_8010(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_80A8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_8288(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_8288(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_80A8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_8220(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_77070();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_77150();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_76980();
      if (!v2) {
        return &_swiftEmptyArrayStorage;
      }
    }
    sub_771D0();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_77150();
    __break(1u);
  }
  else
  {
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_8220(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return &_swiftEmptyArrayStorage;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_980D0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_8288(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_980D0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_771D0();
  __break(1u);
  return result;
}

unsigned char **sub_83D8(unsigned char **result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *result;
  *unint64_t v4 = a4;
  *uint64_t result = v4 + 1;
  return result;
}

void *sub_83E8(void *__src, uint64_t a2, void *__dst, uint64_t a4)
{
  if (__src) {
    uint64_t v5 = a2 - (void)__src;
  }
  else {
    uint64_t v5 = 0;
  }
  if (!__dst)
  {
    if (v5 <= 0) {
      return __src;
    }
LABEL_12:
    __src = (void *)sub_771D0();
    __break(1u);
    return __src;
  }
  if (a4 - (uint64_t)__dst < v5) {
    goto LABEL_12;
  }
  if (__src)
  {
    return memmove(__dst, __src, a2 - (void)__src);
  }
  return __src;
}

uint64_t sub_848C(uint64_t (*a1)(void))
{
  return a1();
}

void sub_84B4(uint64_t *a1, void **a2, uint64_t a3, uint64_t (*a4)(void))
{
  unint64_t v6 = (void *)a4();
  uint64_t v7 = *a1 + 8;
  sub_76F90();
  *a1 = v7;
  int64_t v8 = *a2;
  if (*a2)
  {
    *int64_t v8 = v6;
    *a2 = v8 + 1;
  }
  else
  {
  }
}

uint64_t _s19PodcastsTranscripts24TranscriptViewControllerC7compare_7toRange8documentSo18NSComparisonResultVSo06UITextH0C_AjA0c7ContentD5ModelC2IDOSgtF_0(void *a1, void *a2)
{
  uint64_t v4 = sub_758C0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [a1 start];
  type metadata accessor for StringTextPosition();
  uint64_t v9 = swift_dynamicCastClass();
  if (v9)
  {
    uint64_t v10 = v9;
    id v11 = [a2 start];
    uint64_t v12 = swift_dynamicCastClass();
    if (v12)
    {
      unint64_t v13 = *(void *)(v10 + OBJC_IVAR____TtC19PodcastsTranscripts18StringTextPosition_position);
      unint64_t v14 = *(void *)(v12 + OBJC_IVAR____TtC19PodcastsTranscripts18StringTextPosition_position);

      if (v13 >> 14 >= v14 >> 14) {
        return v14 >> 14 < v13 >> 14;
      }
      else {
        return -1;
      }
    }
  }
  else
  {
    id v11 = v8;
  }

  sub_758A0();
  uint64_t v16 = sub_758B0();
  os_log_type_t v17 = sub_76B90();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v19 = sub_7D80(0xD000000000000022, 0x800000000007DE50, &v20);
    sub_76F90();
    _os_log_impl(&def_1E2E4, v16, v17, "%s Compare positions method has unexpected types.", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return 0;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_8840(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_98020);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_88A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 2:
    case 3:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 1:
      uint64_t result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_88F0()
{
  unint64_t result = qword_98030;
  if (!qword_98030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98030);
  }
  return result;
}

uint64_t sub_8944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  switch(a5)
  {
    case 0:
    case 2:
    case 3:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    case 1:
      uint64_t result = swift_retain();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_8994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1) {
    return sub_88A0(a1, a2, a3, a4, a5);
  }
  return a1;
}

uint64_t sub_89A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_89F0()
{
  return sub_8C10();
}

unint64_t sub_8A0C()
{
  unint64_t result = qword_98058;
  if (!qword_98058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98058);
  }
  return result;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t _s10MatchErrorOwet(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s10MatchErrorOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x8B74);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_8B9C()
{
  return 0;
}

ValueMetadata *_s10MatchErrorOMa()
{
  return &_s10MatchErrorON;
}

unint64_t sub_8BBC()
{
  unint64_t result = qword_980C8;
  if (!qword_980C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_980C8);
  }
  return result;
}

uint64_t sub_8C10()
{
  return sub_3B2FC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

uint64_t sub_8C34()
{
  return sub_3E2F4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_8C50()
{
  sub_391CC(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_8CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t initializeBufferWithCopyOfBuffer for TextContent.ID(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_8D50(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_8D70(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

void type metadata accessor for Weight(uint64_t a1)
{
}

void type metadata accessor for TraitKey(uint64_t a1)
{
}

void type metadata accessor for AttributeName(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptTimestampView.Constants.Spacing(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptTimestampView.Constants.Spacing(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void sub_8E90(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_8ED8()
{
  return sub_89A8(&qword_98118, type metadata accessor for Key);
}

uint64_t sub_8F20()
{
  return sub_89A8(&qword_98120, type metadata accessor for Key);
}

uint64_t sub_8F68()
{
  return sub_89A8(&qword_98128, type metadata accessor for AttributeName);
}

uint64_t sub_8FB0()
{
  return sub_89A8(&qword_98130, type metadata accessor for AttributeName);
}

uint64_t sub_8FF8()
{
  return sub_89A8(&qword_98138, type metadata accessor for TraitKey);
}

uint64_t sub_9040()
{
  return sub_89A8(&qword_98140, type metadata accessor for TraitKey);
}

uint64_t sub_9088()
{
  return sub_89A8(&qword_98148, type metadata accessor for TraitKey);
}

uint64_t sub_90D0()
{
  return sub_89A8(&qword_98150, type metadata accessor for Weight);
}

uint64_t sub_9118()
{
  return sub_89A8(&qword_98158, type metadata accessor for Weight);
}

uint64_t sub_9160()
{
  return sub_89A8(&qword_98160, type metadata accessor for Weight);
}

uint64_t sub_91A8()
{
  return sub_89A8(&qword_98168, type metadata accessor for AttributeName);
}

uint64_t sub_91F0()
{
  return sub_89A8(&qword_98170, type metadata accessor for Key);
}

unint64_t sub_9238()
{
  unint64_t result = qword_98188;
  if (!qword_98188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98188);
  }
  return result;
}

void destroy for TranscriptContentViewState(void **a1)
{
  uint64_t v1 = *a1;
  int v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF) {
    int v2 = (int)v1;
  }
  if (v2 - 1 < 0) {
}
  }

void *_s19PodcastsTranscripts26TranscriptContentViewStateOwCP_0(void *a1, uint64_t a2)
{
  char v3 = *(void **)a2;
  LODWORD(v4) = -1;
  if (*(void *)a2 < 0xFFFFFFFFuLL) {
    uint64_t v4 = *(void **)a2;
  }
  if ((int)v4 - 1 < 0)
  {
    uint64_t v5 = *(void *)(a2 + 8);
    *a1 = v3;
    a1[1] = v5;
    id v6 = v3;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

uint64_t assignWithCopy for TranscriptContentViewState(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  LODWORD(v5) = -1;
  if (*(void *)a1 >= 0xFFFFFFFFuLL) {
    LODWORD(v6) = -1;
  }
  else {
    id v6 = *(void **)a1;
  }
  int v7 = v6 - 1;
  id v8 = *(void **)a2;
  if (*(void *)a2 < 0xFFFFFFFFuLL) {
    uint64_t v5 = *(void **)a2;
  }
  int v9 = v5 - 1;
  if (v7 < 0)
  {
    if (v9 < 0)
    {
      *(void *)a1 = v8;
      id v12 = v8;

      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      return a1;
    }

    goto LABEL_11;
  }
  if ((v9 & 0x80000000) == 0)
  {
LABEL_11:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = v8;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  id v10 = v8;
  return a1;
}

uint64_t assignWithTake for TranscriptContentViewState(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *(void **)a1;
  LODWORD(v5) = -1;
  if (*(void *)a1 < 0xFFFFFFFFuLL) {
    uint64_t v5 = *(void **)a1;
  }
  if ((int)v5 - 1 < 0)
  {
    LODWORD(v6) = -1;
    if ((unint64_t)*a2 < 0xFFFFFFFF) {
      uint64_t v6 = *a2;
    }
    if ((int)v6 - 1 < 0)
    {
      *(void *)a1 = *a2;

      *(void *)(a1 + 8) = a2[1];
      return a1;
    }
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptContentViewState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  if ((v4 + 1) >= 2) {
    return v4;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptContentViewState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_94EC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  int v2 = v1 - 1;
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

void *sub_9510(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    uint64_t v2 = a2 - 0x7FFFFFFF;
    result[1] = 0;
  }
  else
  {
    if (!a2) {
      return result;
    }
    uint64_t v2 = a2;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptContentViewState()
{
  return &type metadata for TranscriptContentViewState;
}

void sub_954C(uint64_t a1, char *a2, Swift::UInt64 a3)
{
  if (a2 == (unsigned char *)&def_1E2E4 + 1)
  {
    sub_772E0(0);
  }
  else
  {
    sub_772E0(1uLL);
    if (a2)
    {
      sub_772F0(1u);
      uint64_t v5 = a2;
      sub_76E60();
    }
    else
    {
      sub_772F0(0);
    }
    if ((a3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v6 = a3;
    }
    else {
      Swift::UInt64 v6 = 0;
    }
    sub_77310(v6);
    sub_97D8(a2);
  }
}

Swift::Int sub_9604(char *a1, Swift::UInt64 a2)
{
  sub_772D0();
  if (a1 == (unsigned char *)&def_1E2E4 + 1)
  {
    sub_772E0(0);
  }
  else
  {
    sub_772E0(1uLL);
    if (a1)
    {
      sub_772F0(1u);
      int v4 = a1;
      sub_76E60();
    }
    else
    {
      sub_772F0(0);
    }
    if ((a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v5 = a2;
    }
    else {
      Swift::UInt64 v5 = 0;
    }
    sub_77310(v5);
    sub_97D8(a1);
  }
  return sub_77320();
}

Swift::Int sub_96B4()
{
  return sub_9604(*(char **)v0, *(void *)(v0 + 8));
}

void sub_96BC(uint64_t a1)
{
  sub_954C(a1, *(char **)v1, *(void *)(v1 + 8));
}

Swift::Int sub_96C4()
{
  uint64_t v1 = *v0;
  Swift::UInt64 v2 = (Swift::UInt64)v0[1];
  sub_772D0();
  if (v1 == (unsigned char *)&def_1E2E4 + 1)
  {
    sub_772E0(0);
  }
  else
  {
    sub_772E0(1uLL);
    if (v1)
    {
      sub_772F0(1u);
      uint64_t v3 = v1;
      sub_76E60();
    }
    else
    {
      sub_772F0(0);
    }
    if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v4 = v2;
    }
    else {
      Swift::UInt64 v4 = 0;
    }
    sub_77310(v4);
    sub_97D8(v1);
  }
  return sub_77320();
}

BOOL sub_976C(uint64_t a1, uint64_t a2)
{
  return sub_97E8(*(char **)a1, *(void *)(a1 + 8), *(char **)a2, *(void *)(a2 + 8));
}

unint64_t sub_9784()
{
  unint64_t result = qword_98280;
  if (!qword_98280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98280);
  }
  return result;
}

void sub_97D8(id a1)
{
  if (a1 != (char *)&def_1E2E4 + 1) {
}
  }

BOOL sub_97E8(char *a1, uint64_t a2, char *a3, uint64_t a4)
{
  if (a1 == (unsigned char *)&def_1E2E4 + 1) {
    return a3 == (unsigned char *)&def_1E2E4 + 1;
  }
  if (a3 == (unsigned char *)&def_1E2E4 + 1) {
    return 0;
  }
  if (a1)
  {
    if (!a3) {
      return 0;
    }
    type metadata accessor for StringTextRange();
    sub_98C4(a3);
    sub_98C4(a1);
    char v10 = sub_76E50();
    sub_97D8(a3);
    sub_97D8(a1);
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  else if (a3)
  {
    sub_97D8(0);
    return 0;
  }
  return *(double *)&a2 == *(double *)&a4;
}

id sub_98C4(id result)
{
  if (result != (char *)&def_1E2E4 + 1) {
    return result;
  }
  return result;
}

uint64_t destroy for SilentContentView()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SilentContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v5;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for SilentContentView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for SilentContentView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SilentContentView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SilentContentView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SilentContentView()
{
  return &type metadata for SilentContentView;
}

uint64_t sub_9B7C()
{
  return sub_C6A8((unint64_t *)&unk_99F90, (void (*)(uint64_t))type metadata accessor for SilentContent);
}

unint64_t sub_9BC4(uint64_t a1)
{
  unint64_t result = sub_9BEC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_9BEC()
{
  unint64_t result = qword_982A8;
  if (!qword_982A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_982A8);
  }
  return result;
}

uint64_t sub_9C40()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_9C5C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  uint64_t v82 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_982B0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v64 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_76090();
  uint64_t v80 = *(void *)(v6 - 8);
  uint64_t v81 = v6;
  __chkstk_darwin(v6);
  uint64_t v79 = (char *)v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_982B8);
  __chkstk_darwin(v8 - 8);
  char v10 = (char *)v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_982C0);
  __chkstk_darwin(v66);
  id v12 = (char *)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_982C8);
  __chkstk_darwin(v68);
  unint64_t v14 = (char *)v64 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_982D0);
  uint64_t v69 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  int v67 = (char *)v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(double *)&uint64_t v75 = COERCE_DOUBLE(__swift_instantiateConcreteTypeFromMangledName(&qword_982D8));
  uint64_t v72 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  id v70 = (char *)v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_982E0);
  uint64_t v76 = *(void *)(v17 - 8);
  uint64_t v77 = v17;
  __chkstk_darwin(v17);
  uint64_t v74 = (char *)v64 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_982E8);
  uint64_t v20 = __chkstk_darwin(v19);
  uint64_t v73 = (char *)v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v78 = (uint64_t)v64 - v22;
  v89[0] = *v2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_75C40();
  swift_release();
  swift_release();
  sub_BE04((uint64_t)v89);
  if (v85 == (unsigned char *)&def_1E2E4 + 1)
  {
    swift_storeEnumTagMultiPayload();
    sub_BE30();
    return sub_76040();
  }
  else
  {
    id v65 = v85;
    *(double *)&v64[1] = v86;
    *(void *)char v10 = sub_75FE0();
    *((void *)v10 + 1) = 0;
    v10[16] = 0;
    uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_98328);
    sub_A624((uint64_t)v2, (uint64_t)&v10[*(int *)(v24 + 44)]);
    char v25 = sub_76100();
    sub_75DC0();
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    sub_C50C((uint64_t)v10, (uint64_t)v12, &qword_982B8);
    id v34 = &v12[*(int *)(v66 + 36)];
    *id v34 = v25;
    *((void *)v34 + 1) = v27;
    *((void *)v34 + 2) = v29;
    *((void *)v34 + 3) = v31;
    *((void *)v34 + 4) = v33;
    v34[40] = 0;
    sub_CA50((uint64_t)v10, &qword_982B8);
    sub_C50C((uint64_t)v12, (uint64_t)v14, &qword_982C0);
    id v35 = (char *)v68;
    v14[*(int *)(v68 + 36)] = 0;
    sub_CA50((uint64_t)v12, &qword_982C0);
    id v36 = (_OWORD *)swift_allocObject();
    long long v37 = v2[1];
    v36[1] = *v2;
    v36[2] = v37;
    long long v38 = v2[3];
    v36[3] = v2[2];
    v36[4] = v38;
    sub_C148((uint64_t)v2);
    *(double *)&unint64_t v39 = COERCE_DOUBLE(sub_BFDC());
    uint64_t v40 = v67;
    sub_762A0();
    swift_release();
    sub_CA50((uint64_t)v14, &qword_982C8);
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_75C40();
    swift_release();
    swift_release();
    v64[0] = v19;
    uint64_t v41 = v40;
    if (v85 == (unsigned char *)&def_1E2E4 + 1)
    {
      sub_BE04((uint64_t)v89);
      double v42 = 0.0;
    }
    else
    {
      unint64_t v43 = *(void *)&v86;
      double v44 = v86;
      sub_97D8(v85);
      sub_BE04((uint64_t)v89);
      double v42 = 0.0;
      if ((v43 & 0xFFFFFFFFFFFFFLL) == 0) {
        double v42 = v44;
      }
      if ((~v43 & 0x7FF0000000000000) != 0) {
        double v42 = v44;
      }
    }
    double v83 = v42;
    unint64_t v45 = (_OWORD *)swift_allocObject();
    long long v46 = v2[1];
    v45[1] = *v2;
    v45[2] = v46;
    long long v47 = v2[3];
    v45[3] = v2[2];
    v45[4] = v47;
    sub_C148((uint64_t)v2);
    v85 = v35;
    double v86 = *(double *)&v39;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v49 = v70;
    uint64_t v50 = (char *)v71;
    sub_76300();
    swift_release();
    (*(void (**)(char *, char *))(v69 + 8))(v41, v50);
    unint64_t v51 = v79;
    sub_76080();
    v85 = v50;
    double v86 = COERCE_DOUBLE(&type metadata for Double);
    uint64_t v87 = OpaqueTypeConformance2;
    v88 = &protocol witness table for Double;
    uint64_t v52 = swift_getOpaqueTypeConformance2();
    os_log_t v53 = v74;
    uint64_t v54 = v75;
    sub_762E0();
    (*(void (**)(char *, uint64_t))(v80 + 8))(v51, v81);
    (*(void (**)(char *, uint64_t))(v72 + 8))(v49, v54);
    os_log_type_t v55 = (objc_class *)[self mainBundle:v64[0]];
    v63._countAndFlagsBits = 0x800000000007E170;
    v90._object = (void *)0x800000000007E140;
    v90._countAndFlagsBits = 0xD000000000000026;
    v91.value._countAndFlagsBits = 0;
    v91.value._object = 0;
    v56.super.Class isa = v55;
    v92._countAndFlagsBits = 0;
    v92._object = (void *)0xE000000000000000;
    uint64_t v57 = (char *)sub_75060(v90, v91, v56, v92, v63);
    double v59 = v58;

    v85 = v57;
    double v86 = v59;
    double v83 = *(double *)&v54;
    uint64_t v84 = v52;
    swift_getOpaqueTypeConformance2();
    sub_C1AC();
    uint64_t v60 = (uint64_t)v73;
    uint64_t v61 = v77;
    sub_762C0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v53, v61);
    uint64_t v62 = v78;
    sub_C570(v60, v78, &qword_982E8);
    sub_C50C(v62, (uint64_t)v5, &qword_982E8);
    swift_storeEnumTagMultiPayload();
    sub_BE30();
    sub_76040();
    sub_97D8(v65);
    return sub_CA50(v62, &qword_982E8);
  }
}

uint64_t sub_A624@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_98348);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_98350);
  __chkstk_darwin(v60);
  uint64_t v7 = (char *)&v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_98358);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v61 = (uint64_t)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_98360);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v67 = (uint64_t)&v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v70 = (uint64_t)&v56 - v14;
  uint64_t v15 = type metadata accessor for TappablePaddingView();
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v68 = (uint64_t)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (uint64_t *)((char *)&v56 - v19);
  uint64_t v21 = __chkstk_darwin(v18);
  uint64_t v23 = (uint64_t *)((char *)&v56 - v22);
  __chkstk_darwin(v21);
  char v25 = (char *)&v56 - v24;
  uint64_t v26 = sub_76430();
  uint64_t v27 = *(void *)(a1 + 48);
  uint64_t v28 = *(void *)(a1 + 56);
  uint64_t *v23 = v26;
  v23[1] = v29;
  uint64_t v63 = v27;
  uint64_t v64 = v15;
  v23[2] = v27;
  v23[3] = v28;
  uint64_t v30 = (uint64_t *)((char *)v23 + *(int *)(v15 + 24));
  *uint64_t v30 = swift_getKeyPath();
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
  swift_storeEnumTagMultiPayload();
  uint64_t v66 = v25;
  sub_C268((uint64_t)v23, (uint64_t)v25);
  long long v72 = *(_OWORD *)(a1 + 32);
  uint64_t v65 = v28;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_98338);
  sub_76390();
  uint64_t v31 = 1;
  if (v71 == 1)
  {
    *(void *)uint64_t v5 = sub_75FE0();
    *((void *)v5 + 1) = 0;
    v5[16] = 1;
    double v59 = &v5[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_98378) + 44)];
    long long v72 = xmmword_787D0;
    swift_getKeyPath();
    uint64_t v32 = (_OWORD *)swift_allocObject();
    long long v33 = *(_OWORD *)(a1 + 16);
    v32[1] = *(_OWORD *)a1;
    v32[2] = v33;
    long long v34 = *(_OWORD *)(a1 + 48);
    v32[3] = *(_OWORD *)(a1 + 32);
    v32[4] = v34;
    sub_C148(a1);
    __swift_instantiateConcreteTypeFromMangledName(&qword_98380);
    sub_C3E8();
    double v58 = v7;
    sub_C4B8();
    sub_76400();
    long long v72 = *(_OWORD *)(a1 + 16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_98340);
    sub_76390();
    uint64_t v35 = v71;
    sub_764D0();
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v40 = (uint64_t)v58;
    sub_C50C((uint64_t)v5, (uint64_t)v58, &qword_98348);
    uint64_t v41 = (void *)(v40 + *(int *)(v60 + 36));
    *uint64_t v41 = v35;
    v41[1] = v35;
    v41[2] = v37;
    v41[3] = v39;
    sub_CA50((uint64_t)v5, &qword_98348);
    sub_75E60();
    sub_AE30();
    uint64_t v42 = sub_75E40();
    swift_release();
    swift_release();
    uint64_t v43 = v61;
    sub_C50C(v40, v61, &qword_98350);
    *(void *)(v43 + *(int *)(v8 + 36)) = v42;
    sub_CA50(v40, &qword_98350);
    sub_C570(v43, v70, &qword_98358);
    uint64_t v31 = 0;
  }
  uint64_t v44 = v70;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v70, v31, 1, v8);
  sub_76420();
  sub_75E30();
  uint64_t v61 = v72;
  LODWORD(v60) = BYTE8(v72);
  double v59 = v73;
  LODWORD(v58) = v74;
  uint64_t v57 = v75;
  uint64_t v56 = v76;
  *uint64_t v20 = sub_76440();
  v20[1] = v45;
  uint64_t v46 = v65;
  v20[2] = v63;
  v20[3] = v46;
  long long v47 = (uint64_t *)((char *)v20 + *(int *)(v64 + 24));
  *long long v47 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  sub_C268((uint64_t)v20, (uint64_t)v23);
  uint64_t v48 = (uint64_t)v66;
  sub_C2CC((uint64_t)v66, (uint64_t)v20);
  uint64_t v49 = v67;
  sub_C50C(v44, v67, &qword_98360);
  uint64_t v50 = v68;
  sub_C2CC((uint64_t)v23, v68);
  uint64_t v51 = v69;
  sub_C2CC((uint64_t)v20, v69);
  uint64_t v52 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_98370);
  sub_C50C(v49, v51 + v52[12], &qword_98360);
  uint64_t v53 = v51 + v52[16];
  *(void *)uint64_t v53 = 0;
  *(unsigned char *)(v53 + 8) = 1;
  *(void *)(v53 + 16) = v61;
  *(unsigned char *)(v53 + 24) = v60;
  *(void *)(v53 + 32) = v59;
  *(unsigned char *)(v53 + 40) = (_BYTE)v58;
  uint64_t v54 = v56;
  *(void *)(v53 + 48) = v57;
  *(void *)(v53 + 56) = v54;
  sub_C2CC(v50, v51 + v52[20]);
  swift_retain();
  sub_C330((uint64_t)v23);
  sub_CA50(v44, &qword_98360);
  sub_C330(v48);
  sub_C330(v50);
  sub_CA50(v49, &qword_98360);
  return sub_C330((uint64_t)v20);
}

uint64_t sub_AD30@<X0>(uint64_t *a1@<X0>, long long *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = *a1;
  long long v9 = *a2;
  sub_C67C((uint64_t)&v9);
  sub_76380();
  sub_76380();
  type metadata accessor for SilentContent();
  sub_C6A8(&qword_983B0, (void (*)(uint64_t))type metadata accessor for SilentContent);
  uint64_t result = sub_75EA0();
  *a3 = result;
  a3[1] = v6;
  a3[2] = v4;
  a3[3] = v7;
  a3[4] = v8;
  a3[5] = v7;
  a3[6] = v8;
  return result;
}

uint64_t sub_AE30()
{
  sub_C5D4();
  sub_75E70();
  sub_76470();
  sub_75E80();
  swift_release();
  swift_release();
  sub_75E70();
  sub_76460();
  sub_76450();
  swift_release();
  sub_75E80();
  swift_release();
  swift_release();
  sub_75E50();
  swift_release();
  swift_release();
  sub_C628();
  sub_75E70();
  sub_76460();
  sub_76450();
  swift_release();
  sub_75E80();
  swift_release();
  swift_release();
  uint64_t v0 = sub_75E50();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_AFDC(uint64_t a1, double *a2, uint64_t a3)
{
  double v3 = *a2;
  uint64_t v4 = *(void *)(a3 + 8);
  if ((*(unsigned char *)(v4 + 80) & 1) == 0)
  {
    uint64_t v6 = (double *)(v4 + 72);
    goto LABEL_7;
  }
  if ((*(unsigned char *)(v4 + 48) & 1) == 0)
  {
    uint64_t v6 = (double *)(v4 + 40);
LABEL_7:
    if (*v6 + -1.5 >= v3) {
      goto LABEL_4;
    }
    goto LABEL_8;
  }
  if (v3 <= -1.5)
  {
LABEL_4:
    __swift_instantiateConcreteTypeFromMangledName(&qword_98338);
    sub_763A0();
    return sub_B0FC(v3);
  }
LABEL_8:
  __chkstk_darwin(a1);
  sub_76480();
  sub_75E90();
  return swift_release();
}

uint64_t sub_B0FC(double a1)
{
  uint64_t v2 = *(void *)(v1 + 8);
  double v3 = *(double *)(v2 + 72);
  double v4 = v3;
  if (*(unsigned char *)(v2 + 80) == 1)
  {
    double v5 = 1.0;
    if (*(unsigned char *)(v2 + 48)) {
      goto LABEL_13;
    }
    double v4 = *(double *)(v2 + 40);
  }
  if (*(unsigned char *)(v2 + 64))
  {
    double v6 = -1.5;
    if (*(unsigned char *)(v2 + 32)) {
      goto LABEL_9;
    }
    uint64_t v7 = (double *)(v2 + 24);
  }
  else
  {
    uint64_t v7 = (double *)(v2 + 56);
  }
  double v6 = v4 - *v7 + -1.5;
LABEL_9:
  double v5 = floor(v6 / 3.0);
  if (v5 <= 1.0) {
    double v5 = 1.0;
  }
  if (!*(unsigned char *)(v2 + 80))
  {
    if (!*(unsigned char *)(v2 + 64))
    {
LABEL_19:
      double v8 = (v3 - *(double *)(v2 + 56) + -1.5) / v5 * 0.5;
      goto LABEL_20;
    }
LABEL_16:
    if (*(unsigned char *)(v2 + 32) == 1) {
      double v9 = -1.5;
    }
    else {
      double v9 = v3 - *(double *)(v2 + 24) + -1.5;
    }
    double v8 = v9 / v5 * 0.5;
    goto LABEL_23;
  }
  if ((*(unsigned char *)(v2 + 48) & 1) == 0)
  {
    double v3 = *(double *)(v2 + 40);
    if ((*(unsigned char *)(v2 + 64) & 1) == 0) {
      goto LABEL_19;
    }
    goto LABEL_16;
  }
LABEL_13:
  double v8 = -1.5 / v5 * 0.5;
  if (*(unsigned char *)(v2 + 64) != 1)
  {
LABEL_20:
    double v10 = *(double *)(v2 + 56);
    goto LABEL_26;
  }
LABEL_23:
  if (*(unsigned char *)(v2 + 32) == 1)
  {
    double v11 = a1 / v8;
    goto LABEL_27;
  }
  double v10 = *(double *)(v2 + 24);
LABEL_26:
  double v11 = (a1 - v10) / v8;
LABEL_27:
  double v12 = floor(v11);
  if ((~*(void *)&v12 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v12 <= -9.22337204e18)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  if (v12 < 9.22337204e18)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_98340);
    return sub_763A0();
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_B2E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v37 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_983C8);
  __chkstk_darwin(v3 - 8);
  double v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_76160();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  double v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_76420();
  __n128 v10 = sub_1A25C(0.0, 1, 0.0, 1, 12.0, 0, 0.0, 1, &v41, 0.0, 1, 0.0, 1);
  uint64_t v35 = v42;
  uint64_t v36 = v41;
  int v26 = BYTE8(v42);
  int v27 = BYTE8(v41);
  uint64_t v33 = v44;
  uint64_t v34 = v43;
  int v24 = BYTE8(v44);
  int v25 = BYTE8(v43);
  uint64_t v31 = v46;
  uint64_t v32 = v45;
  int v22 = BYTE8(v46);
  int v23 = BYTE8(v45);
  uint64_t v29 = *((void *)&v47 + 1);
  uint64_t v30 = v47;
  (*(void (**)(char *, void, uint64_t, __n128))(v7 + 104))(v9, enum case for Font.TextStyle.title3(_:), v6, v10);
  uint64_t v11 = enum case for Font.Design.serif (_:);
  uint64_t v12 = sub_76110();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 104))(v5, v11, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v5, 0, 1, v12);
  sub_76130();
  uint64_t v28 = sub_76150();
  sub_CA50((uint64_t)v5, &qword_983C8);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t KeyPath = swift_getKeyPath();
  char v64 = v27;
  char v62 = v26;
  char v60 = v25;
  char v58 = v24;
  char v56 = v23;
  char v54 = v22;
  v39[0] = *(_OWORD *)(v2 + 40);
  __swift_instantiateConcreteTypeFromMangledName(&qword_98340);
  sub_76390();
  LOBYTE(v7) = v64;
  *(_DWORD *)((char *)&v41 + 9) = *(_DWORD *)v63;
  LOBYTE(v6) = v62;
  *(_DWORD *)((char *)&v42 + 9) = *(_DWORD *)v61;
  HIDWORD(v41) = *(_DWORD *)&v63[3];
  HIDWORD(v42) = *(_DWORD *)&v61[3];
  LOBYTE(v9) = v60;
  *(_DWORD *)((char *)&v43 + 9) = *(_DWORD *)v59;
  LOBYTE(v12) = v58;
  HIDWORD(v43) = *(_DWORD *)&v59[3];
  HIDWORD(v44) = *(_DWORD *)&v57[3];
  *(_DWORD *)((char *)&v44 + 9) = *(_DWORD *)v57;
  LOBYTE(v13) = v56;
  *(_DWORD *)((char *)&v45 + 9) = *(_DWORD *)v55;
  LOBYTE(v11) = v54;
  *(_DWORD *)((char *)&v46 + 9) = *(_DWORD *)v53;
  HIDWORD(v45) = *(_DWORD *)&v55[3];
  HIDWORD(v46) = *(_DWORD *)&v53[3];
  uint64_t v15 = swift_allocObject();
  long long v16 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v15 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v15 + 32) = v16;
  *(_OWORD *)(v15 + 48) = *(_OWORD *)(v2 + 32);
  *(void *)(v15 + 64) = *(void *)(v2 + 48);
  *(void *)&long long v41 = v36;
  BYTE8(v41) = v7;
  *(void *)&long long v42 = v35;
  BYTE8(v42) = v6;
  *(void *)&long long v43 = v34;
  BYTE8(v43) = (_BYTE)v9;
  *(void *)&long long v44 = v33;
  BYTE8(v44) = v12;
  *(void *)&long long v45 = v32;
  BYTE8(v45) = v13;
  *(void *)&long long v46 = v31;
  BYTE8(v46) = v11;
  *(void *)&long long v47 = v30;
  *((void *)&v47 + 1) = v29;
  *(void *)&long long v48 = KeyPath;
  *((void *)&v48 + 1) = v28;
  *((void *)&v49 + 1) = sub_CAB8;
  long long v50 = (unint64_t)v15;
  uint64_t v51 = 0;
  long long v52 = *(_OWORD *)v2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_C67C((uint64_t)&v52);
  sub_CAC0(v2);
  sub_75C40();
  swift_release();
  swift_release();
  if (*(void *)&v39[0] == 1)
  {
    sub_BE04((uint64_t)&v52);
    double v17 = 0.0;
  }
  else
  {
    uint64_t v18 = *((void *)&v39[0] + 1);
    double v17 = *((double *)v39 + 1);
    sub_97D8(*(id *)&v39[0]);
    sub_BE04((uint64_t)&v52);
    if ((~v18 & 0x7FF0000000000000) == 0 && (v18 & 0xFFFFFFFFFFFFFLL) != 0) {
      double v17 = 0.0;
    }
  }
  double v38 = v17;
  uint64_t v19 = swift_allocObject();
  long long v20 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v19 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v19 + 32) = v20;
  *(_OWORD *)(v19 + 48) = *(_OWORD *)(v2 + 32);
  *(void *)(v19 + 64) = *(void *)(v2 + 48);
  sub_CAC0(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_983D0);
  sub_CB80();
  sub_76300();
  swift_release();
  v39[8] = v49;
  v39[9] = v50;
  uint64_t v40 = v51;
  v39[4] = v45;
  v39[5] = v46;
  v39[6] = v47;
  v39[7] = v48;
  v39[0] = v41;
  v39[1] = v42;
  v39[2] = v43;
  v39[3] = v44;
  return sub_CDE8((uint64_t)v39);
}

uint64_t sub_B8D0()
{
  return swift_release_n();
}

uint64_t sub_B978()
{
  return sub_763A0();
}

uint64_t sub_BADC(long long *a1)
{
  long long v3 = *(long long *)((char *)a1 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_98340);
  sub_763A0();
  long long v3 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_75C40();
  swift_release();
  swift_release();
  sub_97D8((id)0x3FB999999999999ALL);
  sub_BE04((uint64_t)&v3);
  return sub_B978();
}

uint64_t sub_BC08()
{
  return sub_762B0();
}

uint64_t sub_BC24@<X0>(uint64_t a1@<X8>)
{
  return sub_B2E0(a1);
}

uint64_t sub_BC68@<X0>(uint64_t a1@<X8>)
{
  return sub_9C5C(a1);
}

uint64_t sub_BCAC()
{
  return sub_75E20();
}

uint64_t sub_BCC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  sub_764D0();
  uint64_t v7 = v6;
  uint64_t v9 = v8;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_98428);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a2, a1, v10);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_98430);
  uint64_t v12 = (void *)(a2 + *(int *)(result + 36));
  *uint64_t v12 = v5;
  v12[1] = v5;
  v12[2] = v7;
  uint64_t v12[3] = v9;
  return result;
}

uint64_t sub_BD70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_98438);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_98440);
  *(void *)(a2 + *(int *)(result + 36)) = v5;
  return result;
}

uint64_t sub_BE04(uint64_t a1)
{
  return a1;
}

unint64_t sub_BE30()
{
  unint64_t result = qword_982F0;
  if (!qword_982F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_982E8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_982D8);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_982D0);
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_982C8);
    sub_BFDC();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_C6A8(&qword_98320, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_982F0);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_BFDC()
{
  unint64_t result = qword_982F8;
  if (!qword_982F8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_982C8);
    sub_C07C();
    sub_D034((unint64_t *)&qword_98310, &qword_98318);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_982F8);
  }
  return result;
}

unint64_t sub_C07C()
{
  unint64_t result = qword_98300;
  if (!qword_98300)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_982C0);
    sub_D034(&qword_98308, &qword_982B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98300);
  }
  return result;
}

uint64_t sub_C120()
{
  return (*(uint64_t (**)(void))(v0 + 64))();
}

uint64_t sub_C148(uint64_t a1)
{
  return a1;
}

uint64_t sub_C1A4(uint64_t a1, double *a2)
{
  return sub_AFDC(a1, a2, v2 + 16);
}

unint64_t sub_C1AC()
{
  unint64_t result = qword_98330;
  if (!qword_98330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98330);
  }
  return result;
}

uint64_t sub_C200()
{
  return sub_763A0();
}

uint64_t sub_C268(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TappablePaddingView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_C2CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TappablePaddingView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_C330(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TappablePaddingView();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t objectdestroyTm()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_C3E0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_AD30(a1, (long long *)(v2 + 16), a2);
}

unint64_t sub_C3E8()
{
  unint64_t result = qword_98388;
  if (!qword_98388)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_98380);
    sub_C464();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98388);
  }
  return result;
}

unint64_t sub_C464()
{
  unint64_t result = qword_98390;
  if (!qword_98390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98390);
  }
  return result;
}

unint64_t sub_C4B8()
{
  unint64_t result = qword_98398;
  if (!qword_98398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98398);
  }
  return result;
}

uint64_t sub_C50C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_C570(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_C5D4()
{
  unint64_t result = qword_983A0;
  if (!qword_983A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_983A0);
  }
  return result;
}

unint64_t sub_C628()
{
  unint64_t result = qword_983A8;
  if (!qword_983A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_983A8);
  }
  return result;
}

uint64_t sub_C67C(uint64_t a1)
{
  return a1;
}

uint64_t sub_C6A8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for OpacityEffect()
{
  return &type metadata for OpacityEffect;
}

ValueMetadata *type metadata accessor for ScaleEffect()
{
  return &type metadata for ScaleEffect;
}

uint64_t destroy for SilentContentView.CircleView()
{
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for SilentContentView.CircleView(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for SilentContentView.CircleView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for SilentContentView.CircleView(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_release();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SilentContentView.CircleView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SilentContentView.CircleView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SilentContentView.CircleView()
{
  return &type metadata for SilentContentView.CircleView;
}

unint64_t sub_C980()
{
  unint64_t result = qword_983B8;
  if (!qword_983B8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_983C0);
    sub_BE30();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_983B8);
  }
  return result;
}

uint64_t sub_C9FC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_CA18()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_CA34()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_CA50(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_CAB8()
{
  return sub_B8D0();
}

uint64_t sub_CAC0(uint64_t a1)
{
  return a1;
}

uint64_t objectdestroy_27Tm()
{
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_CB58()
{
  return sub_B978();
}

unint64_t sub_CB80()
{
  unint64_t result = qword_983D8;
  if (!qword_983D8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_983D0);
    sub_CBFC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_983D8);
  }
  return result;
}

unint64_t sub_CBFC()
{
  unint64_t result = qword_983E0;
  if (!qword_983E0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_983E8);
    sub_CC78();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_983E0);
  }
  return result;
}

unint64_t sub_CC78()
{
  unint64_t result = qword_983F0;
  if (!qword_983F0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_983F8);
    sub_CD18();
    sub_D034(&qword_98418, &qword_98420);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_983F0);
  }
  return result;
}

unint64_t sub_CD18()
{
  unint64_t result = qword_98400;
  if (!qword_98400)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_98408);
    sub_CD94();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98400);
  }
  return result;
}

unint64_t sub_CD94()
{
  unint64_t result = qword_98410;
  if (!qword_98410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98410);
  }
  return result;
}

uint64_t sub_CDE8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 136);
  uint64_t v3 = *(void *)(a1 + 152);
  swift_release();
  swift_release();
  sub_CE50(v2);
  sub_CE50(v3);
  return a1;
}

uint64_t sub_CE50(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_CE60()
{
  return sub_BADC(*(long long **)(v0 + 16));
}

uint64_t sub_CE7C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_CEF0()
{
  unint64_t result = qword_98448;
  if (!qword_98448)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_98430);
    sub_D034(&qword_98450, &qword_98428);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98448);
  }
  return result;
}

unint64_t sub_CF94()
{
  unint64_t result = qword_98458;
  if (!qword_98458)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_98440);
    sub_D034(&qword_98460, &qword_98438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98458);
  }
  return result;
}

uint64_t sub_D034(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id TranscriptTimestampView.__allocating_init(enclosingViewType:enclosingScrollView:)(char *a1, void *a2)
{
  id v5 = objc_allocWithZone(v2);
  return TranscriptTimestampView.init(enclosingViewType:enclosingScrollView:)(a1, a2);
}

id TranscriptTimestampView.init(enclosingViewType:enclosingScrollView:)(char *a1, void *a2)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  char v6 = *a1;
  uint64_t v7 = (uint64_t *)&v2[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_duration];
  uint64_t v8 = v2;
  *uint64_t v7 = sub_773B0();
  v7[1] = v9;
  uint64_t v10 = OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_label;
  *(void *)&v8[v10] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v8[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_subscriptions] = &_swiftEmptyArrayStorage;
  swift_unknownObjectWeakInit();
  *(void *)&v8[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_verticalScrollIndicator] = 0;
  *(void *)&v8[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_verticalConstraint] = 0;
  swift_unknownObjectWeakAssign();
  id v11 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleSubheadline];
  uint64_t v12 = self;
  [v12 systemFontSize];
  id v13 = [v12 monospacedDigitSystemFontOfSize:];
  id v14 = [v11 scaledFontForFont:v13];

  id v15 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:225.0 damping:50.0 initialVelocity:0.0];
  long long v16 = &v8[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_constants];
  *(void *)long long v16 = v14;
  v16[8] = v6;
  *((_OWORD *)v16 + 1) = xmmword_78AB0;
  *((void *)v16 + 4) = 0x4028000000000000;
  *((void *)v16 + 5) = v15;

  id v17 = [self effectWithStyle:1];
  v23.receiver = v8;
  v23.super_class = ObjectType;
  [super initWithEffect:v17];

  id v19 = v18;
  [v19 setClipsToBounds:1];
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v19 setAlpha:0.0];
  sub_D4D0();
  sub_D900();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A270);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_78AC0;
  *(void *)(v20 + 32) = sub_75980();
  *(void *)(v20 + 40) = &protocol witness table for UITraitUserInterfaceStyle;
  id v21 = v19;
  sub_76E20();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

  return v21;
}

void __swiftcall TranscriptTimestampView.Constants.init(viewType:)(PodcastsTranscripts::TranscriptTimestampView::Constants *__return_ptr retstr, PodcastsTranscripts::TranscriptTimestampView::Constants::ViewType viewType)
{
  PodcastsTranscripts::TranscriptTimestampView::Constants::ViewType v3 = *(unsigned char *)viewType;
  id v4 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleSubheadline];
  id v5 = self;
  [v5 systemFontSize];
  id v6 = [v5 monospacedDigitSystemFontOfSize:];
  uint64_t v7 = (objc_class *)[v4 scaledFontForFont:v6];

  uint64_t v8 = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:225.0 damping:50.0 initialVelocity:0.0];
  retstr->font.super.Class isa = v7;
  retstr->viewType = v3;
  *(_OWORD *)&retstr->size.height = xmmword_78AB0;
  retstr->spacing.horizontalPadding = 12.0;
  retstr->animation.timing.super.Class isa = v8;
}

void sub_D4D0()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_label];
  uint64_t v2 = (double *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_constants];
  [v1 setFont:*(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_constants]];
  int v3 = *((unsigned __int8 *)v2 + 8);
  id v4 = self;
  id v5 = &selRef_secondaryLabelColor;
  if (!v3) {
    id v5 = &selRef_whiteColor;
  }
  id v6 = [v4 *v5];
  [v1 setTextColor:v6];

  uint64_t v7 = (objc_class *)[self mainBundle];
  v30._countAndFlagsBits = 0xE000000000000000;
  v33._object = (void *)0x800000000007E330;
  v33._countAndFlagsBits = 0xD000000000000010;
  v34.value._countAndFlagsBits = 0;
  v34.value._object = 0;
  v8.super.Class isa = v7;
  v35._countAndFlagsBits = 0;
  v35._object = (void *)0xE000000000000000;
  sub_75060(v33, v34, v8, v35, v30);

  NSString v9 = sub_768D0();
  swift_bridgeObjectRelease();
  [v1 setText:v9];

  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v10 = [v0 contentView];
  [v10 addSubview:v1];

  id v11 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_99FB0);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_78AD0;
  id v13 = [v1 leadingAnchor];
  id v14 = [v0 contentView];
  id v15 = [v14 leadingAnchor];

  double v16 = v2[4];
  id v17 = [v13 constraintEqualToAnchor:v15 constant:v16];

  *(void *)(v12 + 32) = v17;
  id v18 = [v1 trailingAnchor];
  id v19 = [v0 contentView];
  id v20 = [v19 trailingAnchor];

  id v21 = [v18 constraintEqualToAnchor:v20 constant:-v16];
  *(void *)(v12 + 40) = v21;
  id v22 = [v1 topAnchor];
  id v23 = [v0 contentView];
  id v24 = [v23 topAnchor];

  id v25 = [v22 constraintEqualToAnchor:v24];
  *(void *)(v12 + 48) = v25;
  id v26 = [v1 bottomAnchor];
  id v27 = [v0 contentView];
  id v28 = [v27 bottomAnchor];

  id v29 = [v26 constraintEqualToAnchor:v28];
  *(void *)(v12 + 56) = v29;
  sub_769F0();
  sub_FAEC(0, &qword_98508);
  Class isa = sub_769C0().super.isa;
  swift_bridgeObjectRelease();
  [v11 activateConstraints:isa];
}

uint64_t sub_D900()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_758C0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_984E0);
  uint64_t v66 = *(void *)(v6 - 8);
  uint64_t v67 = v6;
  __chkstk_darwin(v6);
  uint64_t v65 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_984E8);
  uint64_t v69 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v68 = (char *)&v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_984F0);
  uint64_t v62 = *(void *)(v10 - 8);
  uint64_t v63 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_984F8);
  char v64 = *(void **)(v70 - 8);
  __chkstk_darwin(v70);
  id v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_98500);
  uint64_t v61 = *(char **)(v15 - 8);
  __chkstk_darwin(v15);
  id v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v19 = (void *)result;
    uint64_t v59 = v8;
    id v20 = sub_EA20();
    uint64_t v21 = OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_verticalScrollIndicator;
    id v22 = *(void **)&v1[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_verticalScrollIndicator];
    *(void *)&v1[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_verticalScrollIndicator] = v20;

    id v23 = *(void **)&v1[v21];
    if (v23)
    {
      id v24 = v23;
      uint64_t v57 = v15;
      id v58 = v24;
      id v25 = v24;
      [v19 addSubview:v1];
      id v56 = self;
      __swift_instantiateConcreteTypeFromMangledName(&qword_99FB0);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_78AE0;
      id v27 = [v1 trailingAnchor];
      id v28 = [v25 leadingAnchor];
      id v29 = [v27 constraintEqualToAnchor:v28];

      *(void *)(v26 + 32) = v29;
      id v30 = [v1 heightAnchor];
      id v31 = [v30 constraintGreaterThanOrEqualToConstant:*(double *)&v1[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_constants + 16]];

      *(void *)(v26 + 40) = v31;
      v71[0] = v26;
      sub_769F0();
      sub_FAEC(0, &qword_98508);
      Class isa = sub_769C0().super.isa;
      swift_bridgeObjectRelease();
      [v56 activateConstraints:isa];

      swift_getKeyPath();
      sub_750F0();
      swift_release();
      swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v54 = sub_D034(&qword_98510, &qword_984F0);
      uint64_t v33 = v63;
      sub_75CD0();
      swift_release();
      uint64_t v53 = *(void (**)(char *, uint64_t))(v62 + 8);
      v53(v12, v33);
      uint64_t v55 = sub_D034(&qword_98518, &qword_984F8);
      uint64_t v34 = v70;
      sub_75D70();
      id v60 = v19;
      id v56 = (id)v64[1];
      ((void (*)(char *, uint64_t))v56)(v14, v34);
      swift_allocObject();
      swift_unknownObjectWeakInit();
      char v64 = &protocol conformance descriptor for Publishers.RemoveDuplicates<A>;
      sub_D034(&qword_98520, &qword_98500);
      Swift::String v35 = v17;
      uint64_t v36 = v57;
      sub_75D80();
      swift_release();
      (*((void (**)(char *, uint64_t))v61 + 1))(v35, v36);
      uint64_t v61 = &v1[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_subscriptions];
      swift_beginAccess();
      uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A2D0);
      sub_D034(&qword_98528, (uint64_t *)&unk_9A2D0);
      sub_75BA0();
      swift_endAccess();
      swift_release();
      swift_getKeyPath();
      sub_750F0();
      swift_release();
      swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_75CD0();
      swift_release();
      v53(v12, v33);
      uint64_t v37 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v38 = swift_allocObject();
      uint64_t v39 = v58;
      *(void *)(v38 + 16) = v37;
      *(void *)(v38 + 24) = v39;
      id v40 = v39;
      long long v41 = v65;
      uint64_t v42 = v70;
      sub_75D10();
      swift_release();
      ((void (*)(char *, uint64_t))v56)(v14, v42);
      sub_D034(&qword_98530, &qword_984E0);
      uint64_t v43 = v67;
      long long v44 = v68;
      sub_75D70();
      (*(void (**)(char *, uint64_t))(v66 + 8))(v41, v43);
      uint64_t v45 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v46 = swift_allocObject();
      *(void *)(v46 + 16) = v45;
      *(void *)(v46 + 24) = v40;
      sub_D034(&qword_98538, &qword_984E8);
      id v47 = v40;
      uint64_t v48 = v59;
      sub_75D80();
      swift_release();
      (*(void (**)(char *, uint64_t))(v69 + 8))(v44, v48);
      swift_beginAccess();
      sub_75BA0();
      swift_endAccess();

      return swift_release();
    }
    else
    {
      sub_758A0();
      long long v49 = sub_758B0();
      os_log_type_t v50 = sub_76B90();
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = (uint8_t *)swift_slowAlloc();
        v71[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v51 = 136315138;
        v71[3] = sub_7D80(0xD00000000000001ALL, 0x800000000007E310, v71);
        sub_76F90();
        _os_log_impl(&def_1E2E4, v49, v50, "%s Unable to find vertical scroll indicator.", v51, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
  return result;
}

Swift::Void __swiftcall TranscriptTimestampView.layoutSubviews()()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  [super layoutSubviews];
  id v1 = [v0 layer];
  [v0 bounds];
  [v1 setCornerRadius:CGRectGetHeight(v3) * 0.5];
}

uint64_t TranscriptTimestampView.duration.getter()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_duration;
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_E5BC(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = (uint64_t *)(*a2 + OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_duration);
  swift_beginAccess();
  *uint64_t v4 = v2;
  v4[1] = v3;
  return sub_E684(v2, v3);
}

uint64_t TranscriptTimestampView.duration.setter(uint64_t a1, uint64_t a2)
{
  id v5 = (uint64_t *)(v2 + OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_duration);
  swift_beginAccess();
  *id v5 = a1;
  v5[1] = a2;
  return sub_E684(a1, a2);
}

uint64_t sub_E684(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = sub_77360();
  uint64_t v5 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_77210();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_77350();
  uint64_t v12 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  id v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1;
  uint64_t v22 = a2;
  LOBYTE(a2) = sub_77390();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for FloatingPointRoundingRule.toNearestOrEven(_:), v8);
  if (a2) {
    sub_77330();
  }
  else {
    sub_77340();
  }
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  uint64_t v15 = *(void **)(v2 + OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_label);
  sub_74F00();
  sub_FA94();
  uint64_t v16 = v20;
  sub_77370();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v16);
  NSString v17 = sub_768D0();
  swift_bridgeObjectRelease();
  [v15 setText:v17];

  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v19);
}

void (*TranscriptTimestampView.duration.modify(void *a1))(void **a1, char a2)
{
  uint64_t v3 = malloc(0x28uLL);
  *a1 = v3;
  uint64_t v4 = OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_duration;
  v3[3] = v1;
  v3[4] = v4;
  swift_beginAccess();
  return sub_E9CC;
}

void sub_E9CC(void **a1, char a2)
{
  uint64_t v3 = *a1;
  swift_endAccess();
  if ((a2 & 1) == 0)
  {
    uint64_t v4 = (uint64_t *)(v3[3] + v3[4]);
    sub_E684(*v4, v4[1]);
  }

  free(v3);
}

void *sub_EA20()
{
  id v1 = [v0 subviews];
  sub_FAEC(0, (unint64_t *)&qword_984D8);
  unint64_t v2 = sub_769D0();

  if (v2 >> 62) {
    goto LABEL_18;
  }
  unint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v3)
  {
LABEL_19:
    swift_bridgeObjectRelease_n();
    return 0;
  }
  while (1)
  {
    while (1)
    {
      if (__OFSUB__(v3--, 1))
      {
        __break(1u);
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
      if ((v2 & 0xC000000000000001) != 0) {
        break;
      }
      if ((v3 & 0x8000000000000000) != 0) {
        goto LABEL_16;
      }
      if (v3 < *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8)))
      {
        id v5 = *(id *)(v2 + 32 + 8 * v3);
        goto LABEL_11;
      }
LABEL_17:
      __break(1u);
LABEL_18:
      swift_bridgeObjectRetain();
      unint64_t v3 = sub_77180();
      if (!v3) {
        goto LABEL_19;
      }
    }
    id v5 = (id)sub_77080();
LABEL_11:
    uint64_t v6 = v5;
    self;
    if (swift_dynamicCastObjCClass())
    {
      [v6 bounds];
      double v8 = v7;
      [v6 bounds];
      if (v8 < v9) {
        break;
      }
    }

    if (!v3) {
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease_n();
  return v6;
}

void sub_EBA8(unsigned __int8 *a1@<X8>)
{
  swift_beginAccess();
  Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v3 = Strong;
    if ([Strong respondsToSelector:"_isScrubbing"]) {
      unsigned __int8 v4 = [v3 _isScrubbing];
    }
    else {
      unsigned __int8 v4 = 0;
    }
  }
  else
  {
    unsigned __int8 v4 = 0;
  }
  *a1 = v4;
}

void sub_EC40(char *a1)
{
  char v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v3 = (void *)Strong;
    sub_EC9C(v1);
  }
}

void sub_EC9C(char a1)
{
  id v3 = *(id *)&v1[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_constants + 40];
  [v3 settlingDuration];
  id v5 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v3 timingParameters:v4];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  *(unsigned char *)(v6 + 24) = a1;
  v9[4] = sub_FC5C;
  v9[5] = v6;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_4CF00;
  v9[3] = &block_descriptor;
  double v7 = _Block_copy(v9);
  double v8 = v1;
  swift_release();
  [v5 addAnimations:v7];
  _Block_release(v7);
  [v5 startAnimation];
}

void sub_EDEC(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  double v3 = *(double *)(a1 + 8);
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v5 = Strong;
    [Strong contentInset];
    double v7 = v6;

    BOOL v8 = v3 <= v7;
  }
  else
  {
    BOOL v8 = 0;
  }
  *a2 = v8;
}

uint64_t sub_EE70(uint64_t a1, uint64_t a2, void *a3)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  id v5 = Strong;
  id v6 = [Strong superview];
  id v7 = [a3 superview];
  uint64_t v8 = (uint64_t)v7;
  if (v6)
  {

    if (v8)
    {

      uint64_t v8 = v6 == (id)v8;
    }
  }
  else if (v7)
  {

    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = 1;
  }

  return v8;
}

void sub_EF38(unsigned __int8 *a1, uint64_t a2, void *a3)
{
  int v4 = *a1;
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v6 = Strong;
    if (v4)
    {
      id v7 = [Strong topAnchor];
      id v8 = [a3 topAnchor];
    }
    else
    {
      id v7 = [Strong centerYAnchor];
      id v8 = [a3 centerYAnchor];
    }
    id v9 = v8;
    id v10 = [v7 constraintEqualToAnchor:v9];

    uint64_t v11 = OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_verticalConstraint;
    uint64_t v12 = *(void **)&v6[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_verticalConstraint];
    *(void *)&v6[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_verticalConstraint] = v10;
    id v13 = v10;
    if (v12) {
      [v12 setActive:0];
    }
    id v14 = *(void **)&v6[v11];
    if (v14) {
      [v14 setActive:1];
    }
  }
}

id sub_F078(char *a1, char a2)
{
  double v4 = 0.0;
  if (a2) {
    double v4 = 1.0;
  }
  [a1 setAlpha:v4];
  if (a2)
  {
    CGAffineTransformMakeTranslation(&v9, -*(double *)&a1[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_constants + 24], 0.0);
    long long v6 = *(_OWORD *)&v9.a;
    long long v5 = *(_OWORD *)&v9.c;
    long long v7 = *(_OWORD *)&v9.tx;
  }
  else
  {
    long long v5 = xmmword_78AF0;
    long long v6 = xmmword_78B00;
    long long v7 = 0uLL;
  }
  *(_OWORD *)&v9.a = v6;
  *(_OWORD *)&v9.c = v5;
  *(_OWORD *)&v9.tx = v7;
  return [a1 setTransform:&v9];
}

id TranscriptTimestampView.__allocating_init(effect:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithEffect:a1];

  return v3;
}

void TranscriptTimestampView.init(effect:)()
{
}

id TranscriptViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

BOOL static TranscriptTimestampView.Constants.ViewType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void TranscriptTimestampView.Constants.ViewType.hash(into:)()
{
  sub_772E0(*v0);
}

Swift::Int TranscriptTimestampView.Constants.ViewType.hashValue.getter()
{
  Swift::UInt v1 = *v0;
  sub_772D0();
  sub_772E0(v1);
  return sub_77320();
}

Swift::Int sub_F324()
{
  Swift::UInt v1 = *v0;
  sub_772D0();
  sub_772E0(v1);
  return sub_77320();
}

unint64_t sub_F370()
{
  unint64_t result = qword_984A0;
  if (!qword_984A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_984A0);
  }
  return result;
}

__n128 sub_F3C4@<Q0>(void *a1@<X0>, __n128 *a2@<X8>)
{
  id v3 = (__n128 *)(*a1 + OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_duration);
  swift_beginAccess();
  __n128 result = *v3;
  *a2 = *v3;
  return result;
}

uint64_t type metadata accessor for TranscriptTimestampView()
{
  return self;
}

uint64_t method lookup function for TranscriptTimestampView(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for TranscriptTimestampView);
}

uint64_t dispatch thunk of TranscriptTimestampView.__allocating_init(enclosingViewType:enclosingScrollView:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

void destroy for TranscriptTimestampView.Constants(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + 40);
}

uint64_t initializeWithCopy for TranscriptTimestampView.Constants(uint64_t a1, uint64_t a2)
{
  id v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  double v4 = *(void **)(a2 + 40);
  *(void *)(a1 + 40) = v4;
  id v5 = v3;
  id v6 = v4;
  return a1;
}

uint64_t assignWithCopy for TranscriptTimestampView.Constants(uint64_t a1, uint64_t a2)
{
  double v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  long long v7 = *(void **)(a2 + 40);
  id v8 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = v7;
  id v9 = v7;

  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TranscriptTimestampView.Constants(uint64_t a1, uint64_t a2)
{
  double v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  id v5 = *(void **)(a1 + 40);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);

  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptTimestampView.Constants(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptTimestampView.Constants(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptTimestampView.Constants()
{
  return &type metadata for TranscriptTimestampView.Constants;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptStateMachine.ZoomMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TranscriptTimestampView.Constants.ViewType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xF7F4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_F81C(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_F824(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptTimestampView.Constants.ViewType()
{
  return &type metadata for TranscriptTimestampView.Constants.ViewType;
}

ValueMetadata *type metadata accessor for TranscriptTimestampView.Constants.Animation()
{
  return &type metadata for TranscriptTimestampView.Constants.Animation;
}

ValueMetadata *type metadata accessor for TranscriptTimestampView.Constants.Spacing()
{
  return &type metadata for TranscriptTimestampView.Constants.Spacing;
}

ValueMetadata *type metadata accessor for TranscriptTimestampView.Constants.Size()
{
  return &type metadata for TranscriptTimestampView.Constants.Size;
}

void sub_F870(char *a1)
{
  int v2 = *(void **)&a1[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_verticalScrollIndicator];
  if (v2) {
    id v3 = [v2 superview];
  }
  else {
    id v3 = 0;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v5 = (void *)Strong;
  if (v3)
  {
    if (Strong)
    {
      sub_FAEC(0, (unint64_t *)&qword_984D8);
      id v6 = v3;
      char v7 = sub_76E50();

      if (v7) {
        return;
      }
      goto LABEL_12;
    }
    uint64_t v5 = v3;
  }
  else if (!Strong)
  {
    return;
  }

LABEL_12:
  id v8 = [a1 superview];

  if (v8)
  {
    id v9 = &a1[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_subscriptions];
    swift_beginAccess();
    *(void *)id v9 = &_swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    [a1 removeFromSuperview];
    sub_D900();
  }
}

void sub_F9B8()
{
  Swift::UInt v1 = (uint64_t *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_duration];
  *Swift::UInt v1 = sub_773B0();
  v1[1] = v2;
  uint64_t v3 = OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_label;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_subscriptions] = &_swiftEmptyArrayStorage;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_verticalScrollIndicator] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_verticalConstraint] = 0;

  sub_77160();
  __break(1u);
}

unint64_t sub_FA94()
{
  unint64_t result = qword_984D0;
  if (!qword_984D0)
  {
    sub_77360();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_984D0);
  }
  return result;
}

uint64_t sub_FAEC(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

const char *keypath_get_selector_contentOffset()
{
  return "contentOffset";
}

id sub_FB34@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 contentOffset];
  *a2 = v4;
  a2[1] = v5;
  return result;
}

id sub_FB68(double *a1, id *a2)
{
  return [*a2 setContentOffset:*a1 a1[1]];
}

uint64_t sub_FB7C()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_FBB4(unsigned __int8 *a1@<X8>)
{
}

void sub_FBBC(char *a1)
{
}

void sub_FBC4(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
}

uint64_t sub_FBD0(uint64_t a1)
{
  return sub_EE70(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t objectdestroy_20Tm()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_FC1C(unsigned __int8 *a1)
{
  sub_EF38(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_FC24()
{
  return _swift_deallocObject(v0, 25, 7);
}

id sub_FC5C()
{
  return sub_F078(*(char **)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_FC84(uint64_t a1)
{
  return sub_FE2C(a1, (uint64_t (*)(void))&type metadata accessor for NowPlayingButtonID, qword_98540, (uint64_t (*)(uint64_t, unint64_t))&NowPlayingButtonID.init(_:));
}

uint64_t static NowPlayingButtonID.transcript.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_FED8(&qword_97F80, (uint64_t (*)(void))&type metadata accessor for NowPlayingButtonID, (uint64_t)qword_98540, a1);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t static NowPlayingButtonID.transcript.setter(uint64_t a1)
{
  return sub_FFC0(a1, &qword_97F80, (uint64_t (*)(void))&type metadata accessor for NowPlayingButtonID, (uint64_t)qword_98540);
}

uint64_t (*static NowPlayingButtonID.transcript.modify())()
{
  if (qword_97F80 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_75440();
  __swift_project_value_buffer(v0, (uint64_t)qword_98540);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_FDF8(uint64_t a1)
{
  return sub_FE2C(a1, (uint64_t (*)(void))&type metadata accessor for NowPlayingHostedContentID, qword_98558, (uint64_t (*)(uint64_t, unint64_t))&NowPlayingHostedContentID.init(_:));
}

uint64_t sub_FE2C(uint64_t a1, uint64_t (*a2)(void), uint64_t *a3, uint64_t (*a4)(uint64_t, unint64_t))
{
  uint64_t v6 = a2(0);
  __swift_allocate_value_buffer(v6, a3);
  __swift_project_value_buffer(v6, (uint64_t)a3);
  return a4(0x697263736E617274, 0xEA00000000007470);
}

uint64_t static NowPlayingHostedContentID.transcript.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_FED8(&qword_97F88, (uint64_t (*)(void))&type metadata accessor for NowPlayingHostedContentID, (uint64_t)qword_98558, a1);
}

uint64_t sub_FED8@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a4, v8, v7);
}

uint64_t static NowPlayingHostedContentID.transcript.setter(uint64_t a1)
{
  return sub_FFC0(a1, &qword_97F88, (uint64_t (*)(void))&type metadata accessor for NowPlayingHostedContentID, (uint64_t)qword_98558);
}

uint64_t sub_FFC0(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v7 = a3(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a4);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v8, a1, v7);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v7);
}

uint64_t (*static NowPlayingHostedContentID.transcript.modify())()
{
  if (qword_97F88 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_754B0();
  __swift_project_value_buffer(v0, (uint64_t)qword_98558);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_101A8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v39 = a5;
  uint64_t v40 = a6;
  uint64_t v37 = a1;
  uint64_t v38 = a4;
  uint64_t v46 = a3;
  uint64_t v42 = sub_76500();
  uint64_t v45 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  long long v41 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_76520();
  uint64_t v43 = *(void *)(v9 - 8);
  uint64_t v44 = v9;
  __chkstk_darwin(v9);
  uint64_t v36 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_75370();
  uint64_t v34 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  Swift::String v35 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_75770();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __n128 v17 = __chkstk_darwin(v14);
  id v18 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v15 + 16))(v18, v6, v14, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v11);
  unint64_t v19 = (*(unsigned __int8 *)(v15 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v20 = (v16 + *(unsigned __int8 *)(v12 + 80) + v19) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v21 = (v13 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v22 = (v21 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v15 + 32))(v23 + v19, v18, v14);
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v23 + v20, v35, v34);
  id v24 = v38;
  *(void *)(v23 + v21) = v37;
  *(void *)(v23 + v22) = v24;
  id v25 = (void *)(v23 + ((v22 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v26 = v40;
  void *v25 = v39;
  v25[1] = v26;
  aBlock[4] = sub_1095C;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_4CF00;
  aBlock[3] = &block_descriptor_0;
  id v27 = _Block_copy(aBlock);
  swift_retain();
  id v28 = v24;
  swift_retain();
  id v29 = v36;
  sub_76510();
  id v47 = &_swiftEmptyArrayStorage;
  sub_1230C(&qword_98570, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_99F30);
  sub_11DB0();
  id v31 = v41;
  uint64_t v30 = v42;
  sub_76FE0();
  sub_76CB0();
  _Block_release(v27);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v31, v30);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v29, v44);
  return swift_release();
}

uint64_t sub_10624(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v23 = a5;
  uint64_t v24 = a6;
  uint64_t v25 = a2;
  uint64_t v22 = a1;
  uint64_t v9 = sub_75770();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __n128 v12 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v13, a1, v9, v12);
  unint64_t v14 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v15 = (v11 + v14 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v16 = (v15 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v17 + v14, v13, v9);
  *(void *)(v17 + v15) = a3;
  *(void *)(v17 + v16) = a4;
  id v18 = (void *)(v17 + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v19 = v24;
  *id v18 = v23;
  v18[1] = v19;
  swift_retain();
  id v20 = a4;
  swift_retain();
  sub_75620();
  return swift_release();
}

uint64_t sub_107CC()
{
  uint64_t v1 = sub_75770();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = sub_75370();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v4 + v5 + v8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = (((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = v10;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v13);
}

uint64_t sub_1095C()
{
  uint64_t v1 = *(void *)(sub_75770() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(sub_75370() - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v0 + v6);
  uint64_t v9 = v0 + v5;
  uint64_t v10 = *(void **)(v0 + v7);
  unint64_t v11 = (uint64_t *)(v0 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v12 = *v11;
  uint64_t v13 = v11[1];

  return sub_10624(v0 + v2, v9, v8, v10, v12, v13);
}

uint64_t sub_10A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v116 = a2;
  uint64_t v117 = a3;
  uint64_t v9 = sub_76500();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v92 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_76520();
  unint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  v106 = (char *)v92 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_98580);
  __chkstk_darwin(v16 - 8);
  v120 = (char *)v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_75760();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  __n128 v25 = __chkstk_darwin(v20);
  uint64_t v26 = (char *)v92 - v21;
  unint64_t v127 = (unint64_t)&_swiftEmptyArrayStorage;
  uint64_t v107 = *(void *)(v24 + 16);
  if (!v107) {
    goto LABEL_75;
  }
  uint64_t v103 = v23;
  uint64_t v94 = a6;
  v100 = v12;
  uint64_t v101 = v13;
  uint64_t v102 = v10;
  uint64_t v95 = a4;
  uint64_t v96 = v9;
  id v27 = *(void (**)(void, __n128))(v19 + 16);
  unint64_t v28 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v105 = v24;
  uint64_t v104 = v24 + v28;
  uint64_t v108 = v22;
  uint64_t v98 = v19 + 16;
  v97 = (void (*)(uint64_t, void, uint64_t))v27;
  v27((char *)v92 - v21, v25);
  sub_75750();
  double v30 = v29;
  sub_75630();
  uint64_t v31 = v19;
  if (v32 < v30)
  {
    sub_75750();
    uint64_t v34 = v33;
    long long aBlock = 0u;
    long long v124 = 0u;
    LOBYTE(v125) = -1;
    type metadata accessor for SilentContent();
    swift_allocObject();
    uint64_t v35 = sub_4B798(0, 0, v34, 0, 0, 1, 0, 1, (uint64_t *)&aBlock) | 0x4000000000000000;
    type metadata accessor for TranscriptContentViewModel();
    *(void *)(swift_allocObject() + 16) = v35;
    swift_retain();
    swift_retain();
    sub_769B0();
    if (*(void *)((char *)&dword_10 + (v127 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                    + (v127 & 0xFFFFFFFFFFFFFF8)) >> 1)
LABEL_68:
      sub_76A00();
    sub_76A20();
    sub_769F0();
    swift_release();
    swift_release();
  }
  uint64_t v93 = a5;
  unint64_t v99 = v14;
  v92[0] = *(void *)(v31 + 8);
  ((void (*)(char *, uint64_t))v92[0])(v26, v108);
  v92[1] = v31 + 8;
  *(void *)&long long v121 = *(void *)(v31 + 72);
  swift_bridgeObjectRetain();
  uint64_t v36 = v104;
  a5 = v107;
  uint64_t v31 = v117;
  do
  {
    uint64_t v37 = (uint64_t)v120;
    sub_756B0();
    unint64_t v38 = sub_11A10(v37, v31);
    sub_CA50(v37, &qword_98580);
    unint64_t v14 = v127;
    if (v127 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = (char *)sub_77180();
      if (!v26)
      {
LABEL_40:
        swift_bridgeObjectRelease();
        goto LABEL_41;
      }
    }
    else
    {
      uint64_t v26 = *(char **)((char *)&dword_10 + (v127 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (!v26) {
        goto LABEL_40;
      }
    }
    uint64_t v39 = v26 - 1;
    if (__OFSUB__(v26, 1))
    {
      __break(1u);
LABEL_63:
      __break(1u);
LABEL_64:
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    if ((v14 & 0xC000000000000001) != 0)
    {
      uint64_t v40 = sub_77080();
    }
    else
    {
      if (((unint64_t)v39 & 0x8000000000000000) != 0) {
        goto LABEL_63;
      }
      if ((unint64_t)v39 >= *(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8))) {
        goto LABEL_64;
      }
      uint64_t v40 = *(void *)(v14 + 8 * (void)v39 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    unint64_t v41 = *(void *)(v40 + 16);
    if (v41 >> 62)
    {
      swift_release();
    }
    else
    {
      unint64_t v115 = v14 & 0xC000000000000001;
      swift_retain();
      swift_release();
      swift_getKeyPath();
      unint64_t v42 = v38 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent___observationRegistrar;
      *(void *)&long long aBlock = v38;
      sub_1230C((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
      *(void *)&long long v118 = v42;
      sub_75540();
      swift_release();
      unint64_t v43 = v38 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerStartTime;
      uint64_t v44 = (double *)(v38 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerStartTime);
      if (*(unsigned char *)(v38 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerStartTime + 8))
      {
        uint64_t v44 = (double *)(v38 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_referenceStartTime);
        if (*(unsigned char *)(v38 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_referenceStartTime + 8) == 1) {
          goto LABEL_31;
        }
      }
      double v45 = *v44;
      swift_getKeyPath();
      *(void *)&long long aBlock = v41;
      *(void *)&double v114 = v41 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent___observationRegistrar;
      sub_75540();
      swift_release();
      unint64_t v46 = v41;
      unint64_t v47 = v41 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerEndTime;
      uint64_t v48 = (double *)v47;
      if (*(unsigned char *)(v47 + 8) == 1)
      {
        uint64_t v48 = (double *)(v46 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_referenceEndTime);
        if (*(unsigned char *)(v46 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_referenceEndTime + 8) == 1) {
          goto LABEL_31;
        }
      }
      unint64_t v119 = v46;
      double v49 = v45 - *v48;
      sub_75630();
      if (v50 >= v49)
      {
LABEL_31:
        swift_release();
        uint64_t v31 = v117;
      }
      else
      {
        unint64_t v51 = v119;
        uint64_t v113 = *(void *)(v119 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_referenceEndTime);
        int v112 = *(unsigned __int8 *)(v119 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_referenceEndTime + 8);
        uint64_t v111 = *(void *)(v38 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_referenceStartTime);
        int v110 = *(unsigned __int8 *)(v38 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_referenceStartTime + 8);
        swift_getKeyPath();
        *(void *)&long long aBlock = v51;
        sub_75540();
        swift_release();
        double v114 = *(double *)v47;
        int v109 = *(unsigned __int8 *)(v47 + 8);
        swift_getKeyPath();
        *(void *)&long long aBlock = v38;
        sub_75540();
        swift_release();
        uint64_t v52 = *(void *)v43;
        int v53 = *(unsigned __int8 *)(v43 + 8);
        if (v14 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v26 = (char *)sub_77180();
        }
        else
        {
          uint64_t v26 = *(char **)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8));
          swift_bridgeObjectRetain();
        }
        uint64_t v31 = v117;
        if (v26)
        {
          uint64_t v54 = v26 - 1;
          if (__OFSUB__(v26, 1)) {
            goto LABEL_65;
          }
          if (v115)
          {
            uint64_t v55 = sub_77080();
          }
          else
          {
            if (((unint64_t)v54 & 0x8000000000000000) != 0) {
              goto LABEL_66;
            }
            if ((unint64_t)v54 >= *(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8))) {
              goto LABEL_67;
            }
            uint64_t v55 = *(void *)(v14 + 8 * (void)v54 + 32);
            swift_retain();
          }
          swift_bridgeObjectRelease();
          unint64_t v57 = *(void *)(v55 + 16);
          int v58 = v53;
          switch(v57 >> 62)
          {
            case 1uLL:
              uint64_t v59 = *(void *)((char *)&dword_10 + (v57 & 0x3FFFFFFFFFFFFFFFLL));
              swift_retain();
              swift_release();
              uint64_t v60 = 0;
              long long v61 = 0uLL;
              char v62 = 1;
              break;
            case 2uLL:
              uint64_t v63 = v57 & 0x3FFFFFFFFFFFFFFFLL;
              uint64_t v59 = *(void *)(v63 + 40);
              uint64_t v60 = *(void *)(v63 + 48);
              long long v118 = *(_OWORD *)(v63 + 56);
              swift_bridgeObjectRetain();
              swift_release();
              long long v61 = v118;
              char v62 = 2;
              break;
            case 3uLL:
              char v64 = (void *)(v57 & 0x3FFFFFFFFFFFFFFFLL);
              uint64_t v59 = v64[14];
              uint64_t v60 = v64[15];
              *(void *)&long long v56 = v64[16];
              long long v118 = v56;
              swift_bridgeObjectRetain();
              swift_release();
              long long v61 = v118;
              char v62 = 3;
              break;
            default:
              uint64_t v59 = *(void *)(v57 + 16);
              uint64_t v60 = *(void *)(v57 + 24);
              long long v118 = *(_OWORD *)(v57 + 32);
              swift_bridgeObjectRetain();
              swift_release();
              long long v61 = v118;
              char v62 = 0;
              break;
          }
        }
        else
        {
          int v58 = v53;
          swift_bridgeObjectRelease();
          uint64_t v59 = 0;
          uint64_t v60 = 0;
          long long v61 = 0uLL;
          char v62 = -1;
        }
        *(void *)&long long aBlock = v59;
        *((void *)&aBlock + 1) = v60;
        long long v124 = v61;
        LOBYTE(v125) = v62;
        type metadata accessor for SilentContent();
        swift_allocObject();
        uint64_t v65 = sub_4B798(v113, v112, v111, v110, *(uint64_t *)&v114, v109, v52, v58, (uint64_t *)&aBlock) | 0x4000000000000000;
        type metadata accessor for TranscriptContentViewModel();
        *(void *)(swift_allocObject() + 16) = v65;
        swift_retain();
        swift_retain();
        sub_769B0();
        if (*(void *)((char *)&dword_10 + (v127 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                        + (v127 & 0xFFFFFFFFFFFFFF8)) >> 1)
          sub_76A00();
        sub_76A20();
        sub_769F0();
        swift_release();
        swift_release();
        swift_release();
      }
    }
LABEL_41:
    type metadata accessor for TranscriptContentViewModel();
    *(void *)(swift_allocObject() + 16) = v38;
    swift_retain();
    sub_769B0();
    if (*(void *)((char *)&dword_10 + (v127 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                    + (v127 & 0xFFFFFFFFFFFFFF8)) >> 1)
      sub_76A00();
    sub_76A20();
    sub_769F0();
    swift_release();
    v36 += v121;
    --a5;
  }
  while (a5);
  swift_bridgeObjectRelease();
  uint64_t v66 = v103;
  v97(v103, v104 + v121 * (v107 - 1), v108);
  sub_75710();
  uint64_t v10 = v102;
  uint64_t v13 = v101;
  uint64_t v12 = v100;
  unint64_t v14 = v99;
  if (v67) {
    goto LABEL_74;
  }
  double v68 = (double)sub_77380();
  sub_75730();
  double v70 = v68 - v69;
  sub_75630();
  if (v71 >= v70) {
    goto LABEL_74;
  }
  sub_75730();
  uint64_t v73 = v72;
  uint64_t v74 = sub_77380();
  unint64_t v75 = v127;
  if (v127 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v76 = sub_77180();
    if (!v76) {
      goto LABEL_70;
    }
LABEL_52:
    unint64_t v77 = v76 - 1;
    if (__OFSUB__(v76, 1))
    {
      __break(1u);
    }
    else if ((v75 & 0xC000000000000001) == 0)
    {
      if ((v77 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (v77 < *(void *)((char *)&dword_10 + (v75 & 0xFFFFFFFFFFFFFF8)))
      {
        uint64_t v78 = *(void *)(v75 + 8 * v77 + 32);
        swift_retain();
        goto LABEL_57;
      }
      __break(1u);
      JUMPOUT(0x119F0);
    }
    uint64_t v78 = sub_77080();
LABEL_57:
    swift_bridgeObjectRelease();
    unint64_t v80 = *(void *)(v78 + 16);
    switch(v80 >> 62)
    {
      case 1uLL:
        uint64_t v81 = *(void *)((char *)&dword_10 + (v80 & 0x3FFFFFFFFFFFFFFFLL));
        swift_retain();
        swift_release();
        uint64_t v76 = 0;
        long long v82 = 0uLL;
        char v83 = 1;
        break;
      case 2uLL:
        uint64_t v84 = v80 & 0x3FFFFFFFFFFFFFFFLL;
        uint64_t v81 = *(void *)(v84 + 40);
        uint64_t v76 = *(void *)(v84 + 48);
        long long v121 = *(_OWORD *)(v84 + 56);
        swift_bridgeObjectRetain();
        swift_release();
        long long v82 = v121;
        char v83 = 2;
        break;
      case 3uLL:
        v85 = (void *)(v80 & 0x3FFFFFFFFFFFFFFFLL);
        uint64_t v81 = v85[14];
        uint64_t v76 = v85[15];
        *(void *)&long long v79 = v85[16];
        long long v121 = v79;
        swift_bridgeObjectRetain();
        swift_release();
        long long v82 = v121;
        char v83 = 3;
        break;
      default:
        uint64_t v81 = *(void *)(v80 + 16);
        uint64_t v76 = *(void *)(v80 + 24);
        long long v121 = *(_OWORD *)(v80 + 32);
        swift_bridgeObjectRetain();
        swift_release();
        long long v82 = v121;
        char v83 = 0;
        break;
    }
    goto LABEL_71;
  }
  uint64_t v76 = *(void *)((char *)&dword_10 + (v127 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (v76) {
    goto LABEL_52;
  }
LABEL_70:
  swift_bridgeObjectRelease();
  uint64_t v81 = 0;
  long long v82 = 0uLL;
  char v83 = -1;
LABEL_71:
  *(void *)&long long aBlock = v81;
  *((void *)&aBlock + 1) = v76;
  long long v124 = v82;
  LOBYTE(v125) = v83;
  type metadata accessor for SilentContent();
  swift_allocObject();
  uint64_t v86 = sub_4B798(v73, 0, COERCE__INT64((double)v74), 0, 0, 1, 0, 1, (uint64_t *)&aBlock) | 0x4000000000000000;
  *(void *)(swift_allocObject() + 16) = v86;
  swift_retain();
  swift_retain();
  sub_769B0();
  if (*(void *)((char *)&dword_10 + (v127 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                  + (v127 & 0xFFFFFFFFFFFFFF8)) >> 1)
    sub_76A00();
  sub_76A20();
  sub_769F0();
  swift_release();
  swift_release();
  uint64_t v66 = v103;
LABEL_74:
  ((void (*)(uint64_t, uint64_t))v92[0])(v66, v108);
  uint64_t v9 = v96;
  a6 = v94;
  a5 = v93;
LABEL_75:
  unint64_t v87 = v127;
  v88 = (void *)swift_allocObject();
  v88[2] = a5;
  v88[3] = a6;
  v88[4] = v87;
  v125 = sub_122D4;
  v126 = v88;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v124 = sub_4CF00;
  *((void *)&v124 + 1) = &block_descriptor_9;
  v89 = _Block_copy(&aBlock);
  swift_retain();
  Swift::String v90 = v106;
  sub_76510();
  v122 = &_swiftEmptyArrayStorage;
  sub_1230C(&qword_98570, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_99F30);
  sub_11DB0();
  sub_76FE0();
  sub_76CB0();
  _Block_release(v89);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v90, v13);
  return swift_release();
}

unint64_t sub_11A10(uint64_t a1, uint64_t a2)
{
  uint64_t v38 = a2;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_98588);
  __chkstk_darwin(v3 - 8);
  unint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_756D0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v35 - v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_98580);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_75740();
  uint64_t v16 = sub_769E0();
  uint64_t v36 = v17;
  uint64_t v37 = (void *)v16;
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_75740();
  uint64_t v19 = sub_11F94(v18);
  swift_bridgeObjectRelease();
  sub_1235C(a1, (uint64_t)v15);
  sub_75750();
  double v21 = v20;
  sub_75730();
  double v23 = v22;
  unint64_t v24 = *(void *)(sub_75740() + 16);
  swift_bridgeObjectRelease();
  if (v24 < 2)
  {
    uint64_t v35 = v19;
    uint64_t v25 = sub_75740();
    uint64_t v26 = *(void *)(v25 + 16);
    uint64_t v27 = sub_75700();
    uint64_t v28 = *(void *)(v27 - 8);
    if (v26)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(*(void *)(v27 - 8) + 16))(v5, v25+ ((*(unsigned __int8 *)(*(void *)(v27 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v27 - 8) + 80)), v27);
      uint64_t v29 = 0;
    }
    else
    {
      uint64_t v29 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56))(v5, v29, 1, v27);
    swift_bridgeObjectRelease();
    int v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v28 + 48))(v5, 1, v27);
    uint64_t v19 = v35;
    if (v30 != 1)
    {
      sub_756E0();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v5, v27);
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v9, v6);
      goto LABEL_9;
    }
    sub_CA50((uint64_t)v5, &qword_98588);
  }
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v12, enum case for TranscriptModel.Sentence.SplitStyle.full(_:), v6);
LABEL_9:
  double v32 = v37;
  uint64_t v31 = v38;
  uint64_t v33 = v36;
  type metadata accessor for TextContent(0);
  swift_allocObject();
  swift_retain();
  return sub_38660(v32, v33, (uint64_t)v19, (uint64_t)v15, 0, 1, 0, 1, v21, v23, (uint64_t)v12, v31);
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

unint64_t sub_11DB0()
{
  unint64_t result = qword_98578;
  if (!qword_98578)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_99F30);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98578);
  }
  return result;
}

uint64_t sub_11E0C()
{
  uint64_t v1 = sub_75770();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  swift_release();

  return _swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 16, v5);
}

uint64_t sub_11EDC(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_75770() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)(v1 + v5);
  uint64_t v8 = v1 + v4;
  uint64_t v9 = *(void *)(v1 + v6);
  uint64_t v10 = (uint64_t *)(v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];

  return sub_10A70(a1, v8, v7, v9, v11, v12);
}

void *sub_11F94(uint64_t a1)
{
  uint64_t v2 = sub_75700();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  uint64_t v7 = v3 + 16;
  uint64_t v38 = v8;
  uint64_t v9 = a1 + ((*(unsigned __int8 *)(v7 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 64));
  uint64_t v35 = *(void *)(v7 + 56);
  uint64_t v36 = (void (**)(char *, uint64_t))(v7 - 8);
  v34[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v10 = &_swiftEmptyArrayStorage;
  uint64_t v37 = v7;
  while (1)
  {
    uint64_t v11 = v2;
    v38(v5, v9, v2);
    uint64_t v12 = sub_756F0();
    uint64_t v13 = *(void *)(v12 + 16);
    int64_t v14 = v10[2];
    int64_t v15 = v14 + v13;
    if (__OFADD__(v14, v13)) {
      break;
    }
    uint64_t v16 = v12;
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v15 <= v10[3] >> 1)
    {
      if (*(void *)(v16 + 16)) {
        goto LABEL_14;
      }
    }
    else
    {
      if (v14 <= v15) {
        int64_t v18 = v14 + v13;
      }
      else {
        int64_t v18 = v14;
      }
      uint64_t v10 = (void *)sub_3EDF4(isUniquelyReferenced_nonNull_native, v18, 1, (unint64_t)v10);
      if (*(void *)(v16 + 16))
      {
LABEL_14:
        uint64_t v19 = v10[2];
        uint64_t v20 = (v10[3] >> 1) - v19;
        uint64_t v21 = *(void *)(sub_75670() - 8);
        uint64_t v22 = *(void *)(v21 + 72);
        if (v20 < v13) {
          goto LABEL_28;
        }
        unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
        unint64_t v24 = (char *)v10 + v23 + v22 * v19;
        unint64_t v25 = v16 + v23;
        uint64_t v26 = v22 * v13;
        uint64_t v27 = &v24[v26];
        unint64_t v28 = v25 + v26;
        if (v25 < (unint64_t)v27 && (unint64_t)v24 < v28) {
          goto LABEL_30;
        }
        swift_arrayInitWithCopy();
        if (v13)
        {
          uint64_t v30 = v10[2];
          BOOL v31 = __OFADD__(v30, v13);
          uint64_t v32 = v30 + v13;
          if (v31) {
            goto LABEL_29;
          }
          v10[2] = v32;
        }
        goto LABEL_4;
      }
    }
    if (v13) {
      goto LABEL_27;
    }
LABEL_4:
    swift_bridgeObjectRelease();
    uint64_t v2 = v11;
    (*v36)(v5, v11);
    swift_bridgeObjectRelease();
    v9 += v35;
    if (!--v6)
    {
      swift_bridgeObjectRelease();
      return v10;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  unint64_t result = (void *)sub_771D0();
  __break(1u);
  return result;
}

uint64_t sub_12294()
{
  swift_release();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_122D4()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

uint64_t sub_1230C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1235C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_98580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for TranscriptTextContentRenderer.PrimaryHighlight()
{
  return &type metadata for TranscriptTextContentRenderer.PrimaryHighlight;
}

ValueMetadata *type metadata accessor for TranscriptTextContentRenderer.SecondaryHighlight()
{
  return &type metadata for TranscriptTextContentRenderer.SecondaryHighlight;
}

ValueMetadata *type metadata accessor for TranscriptTextContentRenderer.Read()
{
  return &type metadata for TranscriptTextContentRenderer.Read;
}

unint64_t sub_12400()
{
  unint64_t result = qword_985B0;
  if (!qword_985B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_985B0);
  }
  return result;
}

Swift::Int sub_12454()
{
  return sub_77320();
}

Swift::Int sub_1248C()
{
  return sub_77320();
}

unint64_t sub_124C4()
{
  unint64_t result = qword_985B8;
  if (!qword_985B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_985B8);
  }
  return result;
}

unint64_t sub_1251C()
{
  unint64_t result = qword_985C0;
  if (!qword_985C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_985C0);
  }
  return result;
}

unint64_t sub_12574()
{
  unint64_t result = qword_985C8;
  if (!qword_985C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_985C8);
  }
  return result;
}

unint64_t sub_125CC()
{
  unint64_t result = qword_985D0;
  if (!qword_985D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_985D0);
  }
  return result;
}

unint64_t sub_12624()
{
  unint64_t result = qword_985D8;
  if (!qword_985D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_985D8);
  }
  return result;
}

uint64_t *sub_12678(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = *(int *)(a3 + 20);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    uint64_t v10 = sub_76020();
    (*(void (**)(unsigned char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  swift_retain();
  return v4;
}

uint64_t sub_12760(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_76020();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_release();
}

unsigned char *sub_127E4(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_76020();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_retain();
  return a1;
}

unsigned char *sub_12880(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_76020();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_retain();
  swift_release();
  return a1;
}

unsigned char *sub_12928(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_76020();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

unsigned char *sub_129C0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_76020();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  swift_release();
  return a1;
}

uint64_t sub_12A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_12A74);
}

uint64_t sub_12A74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_76020();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 20);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_12B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_12B4C);
}

uint64_t sub_12B4C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_76020();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 20);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for TranscriptTextContentRenderer()
{
  uint64_t result = qword_98638;
  if (!qword_98638) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_12C58()
{
  uint64_t result = sub_76020();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TranscriptTextContentRenderer.Mode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x12DC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptTextContentRenderer.Mode()
{
  return &type metadata for TranscriptTextContentRenderer.Mode;
}

unint64_t sub_12E04()
{
  unint64_t result = qword_98678;
  if (!qword_98678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98678);
  }
  return result;
}

unint64_t sub_12E5C()
{
  unint64_t result = qword_98680;
  if (!qword_98680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98680);
  }
  return result;
}

uint64_t sub_12EB0(uint64_t a1, uint64_t a2)
{
  uint64_t v82 = a2;
  uint64_t v81 = sub_75EE0();
  unint64_t v87 = *(char **)(v81 - 8);
  __chkstk_darwin(v81);
  unint64_t v80 = (char *)&v57 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_76000();
  v89 = *(void (**)(void))(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v78 = (char *)&v57 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = sub_76020();
  char v83 = *(void (***)(char *, uint64_t))(v77 - 8);
  __chkstk_darwin(v77);
  uint64_t v76 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_761E0();
  uint64_t v57 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v86 = (char *)&v57 - v10;
  uint64_t v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_98690);
  uint64_t v11 = __chkstk_darwin(v65);
  char v64 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  int64_t v14 = (char *)&v57 - v13;
  uint64_t v15 = sub_76210();
  uint64_t v67 = v15;
  uint64_t v16 = *(char ***)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v63 = (char *)&v57 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_76200();
  v85 = *(void (***)(char *))(v18 - 8);
  uint64_t v19 = __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v57 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  double v69 = (char *)&v57 - v22;
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_98698);
  uint64_t v24 = v23 - 8;
  uint64_t v25 = __chkstk_darwin(v23);
  uint64_t v27 = (char *)&v57 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v66 = (uint64_t)&v57 - v28;
  v88 = v16;
  uint64_t v29 = v16[2];
  char v62 = v16 + 2;
  long long v61 = v29;
  ((void (*)(char *, uint64_t, uint64_t))v29)(v27, a1, v15);
  uint64_t v30 = sub_14888(&qword_986A0, (void (*)(uint64_t))&type metadata accessor for Text.Layout);
  sub_76B00();
  *(void *)&v27[*(int *)(v24 + 44)] = v93;
  uint64_t v31 = v30;
  uint64_t v32 = v67;
  uint64_t v33 = v66;
  sub_C570((uint64_t)v27, v66, &qword_98698);
  uint64_t v34 = (uint64_t *)(v33 + *(int *)(v24 + 44));
  uint64_t v35 = *v34;
  uint64_t v68 = v31;
  uint64_t v36 = v33;
  sub_76B20();
  if (v35 != v91)
  {
    Swift::String v90 = (void (**)(void))(v85 + 2);
    uint64_t v59 = (void (**)(char *, uint64_t))(v88 + 1);
    v88 = (char **)(v85 + 1);
    v85 = (void (**)(char *))(v57 + 16);
    uint64_t v84 = (void (**)(char *, char *, uint64_t))(v57 + 32);
    unsigned int v75 = enum case for ColorSchemeContrast.standard(_:);
    uint64_t v74 = (void (**)(char *, void, uint64_t))(v83 + 13);
    uint64_t v73 = v83 + 1;
    unsigned int v72 = enum case for RoundedCornerStyle.continuous(_:);
    double v71 = (void (**)(char *, void, uint64_t))((char *)v89 + 104);
    double v70 = (void (**)(char *, uint64_t))(v87 + 8);
    char v83 = (void (**)(char *, uint64_t))(v57 + 8);
    uint64_t v60 = v34;
    uint64_t v58 = v6;
    do
    {
      uint64_t v39 = (void (*)(uint64_t *, void))sub_76B40();
      v89 = *v90;
      v89(v69);
      v39(&v91, 0);
      uint64_t v40 = v63;
      ((void (*)(char *, uint64_t, uint64_t))v61)(v63, v36, v32);
      sub_76B30();
      (*v59)(v40, v32);
      uint64_t v41 = (uint64_t)v64;
      unint64_t v42 = v69;
      ((void (*)(char *, char *, uint64_t))v89)(v64, v69, v18);
      uint64_t v43 = v58;
      sub_14888(&qword_986A8, (void (*)(uint64_t))&type metadata accessor for Text.Layout.Line);
      sub_76B00();
      unint64_t v87 = *v88;
      ((void (*)(char *, uint64_t))v87)(v42, v18);
      uint64_t v44 = v65;
      *(void *)(v41 + *(int *)(v65 + 36)) = v91;
      sub_C570(v41, (uint64_t)v14, &qword_98690);
      double v45 = &v14[*(int *)(v44 + 36)];
      while (1)
      {
        uint64_t v48 = *(void *)v45;
        sub_76B20();
        if (v48 == v91) {
          break;
        }
        double v49 = (void (*)(uint64_t *, void))sub_76B40();
        double v50 = v86;
        (*v85)(v86);
        v49(&v91, 0);
        ((void (*)(char *, char *, uint64_t))v89)(v21, v14, v18);
        sub_76B30();
        ((void (*)(char *, uint64_t))v87)(v21, v18);
        (*v84)(v9, v50, v43);
        sub_148D0();
        sub_761F0();
        if ((v91 & 1) == 0)
        {
          type metadata accessor for TranscriptTextContentRenderer();
          uint64_t v54 = v76;
          uint64_t v55 = v77;
          (*v74)(v76, v75, v77);
          char v56 = sub_76010();
          (*v73)(v54, v55);
          if (v56)
          {
            if (qword_97F90 != -1) {
              goto LABEL_18;
            }
          }
          else if (qword_97FA0 != -1)
          {
LABEL_18:
            swift_once();
          }
          swift_retain();
          sub_761D0();
          (*v71)(v78, v72, v79);
          sub_76170();
          unint64_t v46 = v80;
          sub_75ED0();
          sub_75EC0();
          unint64_t v47 = &v92;
          goto LABEL_8;
        }
        sub_14924();
        sub_761F0();
        if (v91 != 1)
        {
          type metadata accessor for TranscriptTextContentRenderer();
          unint64_t v51 = v76;
          uint64_t v52 = v77;
          (*v74)(v76, v75, v77);
          char v53 = sub_76010();
          (*v73)(v51, v52);
          if (v53)
          {
            if (qword_97F98 != -1) {
              goto LABEL_15;
            }
          }
          else if (qword_97FA8 != -1)
          {
LABEL_15:
            swift_once();
          }
          swift_retain();
          sub_761D0();
          (*v71)(v78, v72, v79);
          sub_76170();
          unint64_t v46 = v80;
          sub_75ED0();
          sub_75EC0();
          unint64_t v47 = &v94;
LABEL_8:
          sub_14A6C((uint64_t)v47);
          swift_release();
          (*v70)(v46, v81);
        }
        (*v83)(v9, v43);
      }
      sub_CA50((uint64_t)v14, &qword_98690);
      uint64_t v38 = *v60;
      uint64_t v36 = v66;
      uint64_t v32 = v67;
      sub_76B20();
    }
    while (v38 != v91);
  }
  return sub_CA50(v36, &qword_98698);
}

uint64_t sub_13CC0(uint64_t a1, void *a2)
{
  unsigned int v72 = a2;
  uint64_t v67 = sub_76020();
  unsigned int v75 = *(void (**)(void))(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v66 = (char *)&v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_761E0();
  uint64_t v73 = *(char **)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v52 - v8;
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_98690);
  uint64_t v10 = __chkstk_darwin(v57);
  char v56 = (char *)&v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v52 - v12;
  uint64_t v14 = sub_76210();
  uint64_t v59 = v14;
  uint64_t v15 = *(char ***)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v55 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_76200();
  double v71 = *(void (***)(char *))(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v68 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  char v62 = (char *)&v52 - v20;
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_98698);
  uint64_t v22 = v21 - 8;
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)&v52 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v58 = (uint64_t)&v52 - v26;
  uint64_t v74 = v15;
  uint64_t v27 = v15[2];
  uint64_t v54 = v15 + 2;
  char v53 = v27;
  ((void (*)(char *, uint64_t, uint64_t))v27)(v25, a1, v14);
  uint64_t v28 = sub_14888(&qword_986A0, (void (*)(uint64_t))&type metadata accessor for Text.Layout);
  sub_76B00();
  *(void *)&v25[*(int *)(v22 + 44)] = v79[0];
  uint64_t v29 = v28;
  uint64_t v30 = v59;
  uint64_t v31 = v58;
  sub_C570((uint64_t)v25, v58, &qword_98698);
  uint64_t v32 = (uint64_t *)(v31 + *(int *)(v22 + 44));
  uint64_t v33 = *v32;
  uint64_t v61 = v29;
  uint64_t v34 = v31;
  sub_76B20();
  if (v33 != v79[0])
  {
    uint64_t v76 = (void (**)(void))(v71 + 2);
    uint64_t v52 = (void (**)(char *, uint64_t))(v74 + 1);
    uint64_t v74 = (char **)(v71 + 1);
    double v70 = (void (**)(char *, char *, uint64_t))(v73 + 32);
    double v71 = (void (**)(char *))(v73 + 16);
    unsigned int v65 = enum case for ColorSchemeContrast.standard(_:);
    char v64 = (void (**)(char *, void, uint64_t))((char *)v75 + 104);
    uint64_t v63 = (void (**)(char *, uint64_t))((char *)v75 + 8);
    double v69 = (void (**)(char *, uint64_t))(v73 + 8);
    uint64_t v60 = v32;
    do
    {
      uint64_t v37 = (void (*)(void *, void))sub_76B40();
      unsigned int v75 = *v76;
      v75(v62);
      v37(v79, 0);
      uint64_t v38 = v55;
      ((void (*)(char *, uint64_t, uint64_t))v53)(v55, v34, v30);
      sub_76B30();
      (*v52)(v38, v30);
      uint64_t v39 = (uint64_t)v56;
      uint64_t v40 = v62;
      ((void (*)(char *, char *, uint64_t))v75)(v56, v62, v17);
      sub_14888(&qword_986A8, (void (*)(uint64_t))&type metadata accessor for Text.Layout.Line);
      sub_76B00();
      uint64_t v73 = *v74;
      ((void (*)(char *, uint64_t))v73)(v40, v17);
      uint64_t v41 = v57;
      *(void *)(v39 + *(int *)(v57 + 36)) = v79[0];
      sub_C570(v39, (uint64_t)v13, &qword_98690);
      unint64_t v42 = &v13[*(int *)(v41 + 36)];
      uint64_t v43 = *(void *)v42;
      sub_76B20();
      uint64_t v44 = v68;
      if (v43 != v79[0])
      {
        do
        {
          unint64_t v51 = (void (*)(void *, void))sub_76B40();
          (*v71)(v9);
          v51(v79, 0);
          ((void (*)(char *, char *, uint64_t))v75)(v44, v13, v17);
          sub_76B30();
          ((void (*)(char *, uint64_t))v73)(v44, v17);
          (*v70)(v7, v9, v4);
          v79[0] = *v72;
          if (*v77)
          {
            sub_14ABC();
            swift_retain();
            sub_761F0();
            if (v78 & 1) != 0 || (sub_148D0(), sub_761F0(), (v78) || (sub_14924(), sub_761F0(), v78 == 1))
            {
              type metadata accessor for TranscriptTextContentRenderer();
              double v45 = v9;
              uint64_t v46 = v4;
              uint64_t v48 = v66;
              uint64_t v47 = v67;
              (*v64)(v66, v65, v67);
              sub_76010();
              double v49 = v48;
              uint64_t v4 = v46;
              uint64_t v9 = v45;
              uint64_t v44 = v68;
              (*v63)(v49, v47);
            }
          }
          else
          {
            sub_148D0();
            swift_retain();
            sub_761F0();
            if (v78 == 1)
            {
              sub_14924();
              sub_761F0();
              if (v78 == 1)
              {
                sub_14ABC();
                sub_761F0();
              }
            }
          }
          sub_75EF0();
          swift_retain();
          sub_75EB0();
          swift_release_n();
          (*v69)(v7, v4);
          uint64_t v50 = *(void *)v42;
          sub_76B20();
        }
        while (v50 != v79[0]);
      }
      sub_CA50((uint64_t)v13, &qword_98690);
      uint64_t v36 = *v60;
      uint64_t v34 = v58;
      uint64_t v30 = v59;
      sub_76B20();
    }
    while (v36 != v79[0]);
  }
  return sub_CA50(v34, &qword_98698);
}

uint64_t sub_146DC(uint64_t a1, void *a2)
{
  if ((*v2 & 1) == 0) {
    sub_12EB0(a1, (uint64_t)a2);
  }

  return sub_13CC0(a1, a2);
}

uint64_t sub_14734()
{
  return sub_764C0();
}

double sub_14770()
{
  return 0.0;
}

void (*sub_14784(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_75DA0();
  return sub_147F4;
}

void sub_147F4(void *a1)
{
  unint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_14840()
{
  return sub_14888(&qword_98688, (void (*)(uint64_t))type metadata accessor for TranscriptTextContentRenderer);
}

uint64_t sub_14888(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_148D0()
{
  unint64_t result = qword_986B0;
  if (!qword_986B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_986B0);
  }
  return result;
}

unint64_t sub_14924()
{
  unint64_t result = qword_986B8;
  if (!qword_986B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_986B8);
  }
  return result;
}

uint64_t sub_14978()
{
  uint64_t result = sub_76340();
  qword_98590 = result;
  return result;
}

uint64_t sub_14998(uint64_t a1)
{
  return sub_14A18(a1, (void (*)(void))&static Color.white.getter, &qword_98598);
}

uint64_t sub_149B8()
{
  id v0 = [self systemYellowColor];
  uint64_t result = sub_76360();
  qword_985A0 = result;
  return result;
}

uint64_t sub_149F8(uint64_t a1)
{
  return sub_14A18(a1, (void (*)(void))&static Color.gray.getter, &qword_985A8);
}

uint64_t sub_14A18(uint64_t a1, void (*a2)(void), uint64_t *a3)
{
  a2();
  uint64_t v4 = sub_76350();
  uint64_t result = swift_release();
  *a3 = v4;
  return result;
}

uint64_t sub_14A6C(uint64_t a1)
{
  return a1;
}

uint64_t sub_14AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 - 2 <= 3) {
    return swift_release();
  }
  return result;
}

unint64_t sub_14ABC()
{
  unint64_t result = qword_986C0;
  if (!qword_986C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_986C0);
  }
  return result;
}

uint64_t *sub_14B18(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = a3[5];
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_76020();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      void *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = a3[6];
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)v7 + v12;
    uint64_t v15 = (char *)a2 + v12;
    uint64_t v16 = *(void *)v15;
    LOBYTE(v15) = v15[8];
    *(void *)uint64_t v14 = v16;
    v14[8] = (char)v15;
    uint64_t v17 = (char *)v7 + v13;
    uint64_t v18 = (char *)a2 + v13;
    uint64_t v19 = *(void *)v18;
    LOBYTE(v18) = v18[8];
    *(void *)uint64_t v17 = v19;
    v17[8] = (char)v18;
    swift_retain();
  }
  swift_retain();
  return v7;
}

uint64_t sub_14C78(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_76020();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_release();
}

void *sub_14D3C(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_76020();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = a3[6];
  uint64_t v11 = a3[7];
  uint64_t v12 = (char *)a1 + v10;
  uint64_t v13 = (char *)a2 + v10;
  uint64_t v14 = *(void *)v13;
  LOBYTE(v13) = v13[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = (char)v13;
  uint64_t v15 = (char *)a1 + v11;
  uint64_t v16 = (char *)a2 + v11;
  uint64_t v17 = *(void *)v16;
  LOBYTE(v16) = v16[8];
  *(void *)uint64_t v15 = v17;
  v15[8] = (char)v16;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_14E54(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_CA50((uint64_t)a1 + v6, (uint64_t *)&unk_9A780);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_76020();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v10 = a3[6];
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = *(void *)v12;
  LOBYTE(v12) = v12[8];
  *(void *)uint64_t v11 = v13;
  v11[8] = (char)v12;
  swift_retain();
  swift_release();
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = *(void *)v16;
  LOBYTE(v16) = v16[8];
  *(void *)uint64_t v15 = v17;
  v15[8] = (char)v16;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_14FA8(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_76020();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = a3[7];
  uint64_t v13 = (char *)a1 + v11;
  uint64_t v14 = (char *)a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  v13[8] = v14[8];
  uint64_t v15 = (char *)a1 + v12;
  uint64_t v16 = (char *)a2 + v12;
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  return a1;
}

void *sub_150C0(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    uint64_t v6 = a3[5];
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_CA50((uint64_t)a1 + v6, (uint64_t *)&unk_9A780);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_76020();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  uint64_t v11 = a3[6];
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  LOBYTE(v13) = v13[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = (char)v13;
  swift_release();
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = *(void *)v17;
  LOBYTE(v17) = v17[8];
  *(void *)uint64_t v16 = v18;
  v16[8] = (char)v17;
  swift_release();
  return a1;
}

uint64_t sub_1520C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_15220);
}

uint64_t sub_15220(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_986C8);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_152D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_152E8);
}

void *sub_152E8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_986C8);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s10StaticTextVMa()
{
  uint64_t result = qword_98728;
  if (!qword_98728) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_153E0()
{
  sub_15488();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_15488()
{
  if (!qword_98738)
  {
    sub_76020();
    unint64_t v0 = sub_75DE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_98738);
    }
  }
}

uint64_t sub_154E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_154FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v86 = a1;
  uint64_t v2 = sub_75F10();
  __chkstk_darwin(v2 - 8);
  v85 = (char *)v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_764B0();
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v82 = (char *)v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_98770);
  uint64_t v5 = *(void *)(v95 - 8);
  uint64_t v6 = __chkstk_darwin(v95);
  uint64_t v98 = (uint64_t)v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v90 = (uint64_t)v72 - v8;
  uint64_t v78 = sub_76020();
  uint64_t v77 = *(void *)(v78 - 8);
  uint64_t v9 = __chkstk_darwin(v78);
  uint64_t v76 = (char *)v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v75 = (uint64_t)v72 - v11;
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_98778);
  __chkstk_darwin(v79);
  uint64_t v81 = (char *)v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_98780);
  __chkstk_darwin(v13 - 8);
  uint64_t v92 = (uint64_t)v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_75080();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_75020();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v73 = (char *)v72 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)v72 - v21;
  __chkstk_darwin(v20);
  v97 = (char *)v72 - v23;
  uint64_t v74 = _s10StaticTextVMa();
  char v24 = *((unsigned char *)v1 + *(int *)(v74 + 24) + 8);
  uint64_t v25 = swift_retain();
  uint64_t v26 = sub_1A884(v25, v24);
  swift_release();
  uint64_t v27 = *(void *)(v26 + 24);
  swift_bridgeObjectRetain_n();
  swift_release();
  sub_75070();
  uint64_t v93 = v22;
  v72[2] = v27;
  sub_75030();
  unint64_t v80 = v1;
  uint64_t v28 = *v1;
  uint64_t v29 = *(void *)(*v1 + 16);
  uint64_t v96 = v17;
  uint64_t v94 = v16;
  v72[1] = v28;
  if (v29)
  {
    uint64_t v30 = v28 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v31 = *(void *)(v5 + 72);
    uint64_t v91 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    uint64_t v88 = v31;
    v89 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
    swift_bridgeObjectRetain_n();
    uint64_t v32 = v97;
    uint64_t v33 = v95;
    while (1)
    {
      uint64_t v34 = v92;
      sub_16014(v30, v92);
      uint64_t v35 = *v91;
      (*v91)(v34, 0, 1, v33);
      if ((*v89)(v34, 1, v33) == 1) {
        break;
      }
      unint64_t v87 = v35;
      uint64_t v36 = v90;
      sub_C570(v34, v90, &qword_98770);
      sub_16014(v36, v98);
      uint64_t KeyPath = swift_getKeyPath();
      v72[-2] = __chkstk_darwin(KeyPath);
      swift_getKeyPath();
      if (qword_97FC0 != -1) {
        swift_once();
      }
      uint64_t v100 = qword_9F0F8;
      swift_retain();
      sub_161F0();
      uint64_t v33 = v95;
      uint64_t v38 = (void (*)(unsigned char *, void))sub_75040();
      sub_16164();
      sub_75090();
      v38(v99, 0);
      uint64_t v39 = v98;
      sub_CA50(v98, &qword_98770);
      sub_16014(v36, v39);
      uint64_t v40 = swift_getKeyPath();
      v72[-2] = __chkstk_darwin(v40);
      swift_getKeyPath();
      if (qword_97FD0 != -1) {
        swift_once();
      }
      uint64_t v100 = qword_9F108;
      id v41 = (id)qword_9F108;
      unint64_t v42 = (void (*)(unsigned char *, void))sub_75040();
      sub_16254();
      sub_75090();
      v42(v99, 0);
      sub_CA50(v39, &qword_98770);
      sub_CA50(v36, &qword_98770);
      v30 += v88;
      --v29;
      uint64_t v16 = v94;
      uint64_t v17 = v96;
      uint64_t v32 = v97;
      if (!v29)
      {
        v87(v92, 1, 1, v33);
        break;
      }
    }
  }
  else
  {
    uint64_t v43 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain_n();
    uint64_t v32 = v97;
    v43(v92, 1, 1, v95);
  }
  swift_bridgeObjectRelease_n();
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v32, v93, v16);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v73, v32, v16);
  uint64_t v44 = sub_76250();
  uint64_t v46 = v45;
  char v48 = v47;
  if (qword_97FB8 != -1) {
    swift_once();
  }
  uint64_t v95 = sub_761C0();
  uint64_t v93 = v49;
  LODWORD(v92) = v50;
  uint64_t v98 = v51;
  sub_1607C(v44, v46, v48 & 1);
  swift_bridgeObjectRelease();
  uint64_t v52 = v75;
  sub_1A84C(v75);
  uint64_t v53 = enum case for ColorSchemeContrast.standard(_:);
  uint64_t v54 = v77;
  uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 104);
  char v56 = v76;
  uint64_t v57 = v78;
  v55(v76, enum case for ColorSchemeContrast.standard(_:), v78);
  char v58 = sub_76010();
  uint64_t v59 = *(void (**)(char *, uint64_t))(v54 + 8);
  v59(v56, v57);
  v59((char *)v52, v57);
  sub_1A84C(v52);
  v55(v56, v53, v57);
  char v60 = sub_76010();
  v59(v56, v57);
  v59((char *)v52, v57);
  uint64_t v61 = v83;
  char v62 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
  if ((v60 & 1) == 0) {
    char v62 = (unsigned int *)&enum case for BlendMode.normal(_:);
  }
  uint64_t v63 = v82;
  uint64_t v64 = v84;
  (*(void (**)(char *, void, uint64_t))(v83 + 104))(v82, *v62, v84);
  char v65 = v92 & 1;
  if (v58) {
    double v66 = 0.35;
  }
  else {
    double v66 = 0.55;
  }
  uint64_t v67 = (uint64_t)v85;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v85, v63, v64);
  uint64_t v68 = (uint64_t)v81;
  sub_1608C(v67, (uint64_t)&v81[*(int *)(v79 + 36)]);
  uint64_t v69 = v95;
  uint64_t v70 = (uint64_t)v93;
  *(void *)uint64_t v68 = v95;
  *(void *)(v68 + 8) = v70;
  *(unsigned char *)(v68 + 16) = v65;
  *(void *)(v68 + 24) = v98;
  *(double *)(v68 + 32) = v66;
  sub_160F0(v69, v70, v65);
  swift_bridgeObjectRetain();
  sub_16100(v67);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v63, v64);
  sub_1607C(v69, v70, v65);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v96 + 8))(v97, v94);
  return sub_C570(v68, v86, &qword_98778);
}

uint64_t sub_16014(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_98770);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1607C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1608C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_75F10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_160F0(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_16100(uint64_t a1)
{
  uint64_t v2 = sub_75F10();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_16164()
{
  unint64_t result = qword_98788;
  if (!qword_98788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98788);
  }
  return result;
}

uint64_t sub_161BC()
{
  return 8;
}

uint64_t sub_161C8()
{
  return swift_release();
}

uint64_t sub_161D0(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_161E4(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_161F0()
{
  unint64_t result = qword_98790;
  if (!qword_98790)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_98770);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98790);
  }
  return result;
}

unint64_t sub_16254()
{
  unint64_t result = qword_98798;
  if (!qword_98798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98798);
  }
  return result;
}

uint64_t sub_162AC()
{
  return 8;
}

unint64_t sub_162C4()
{
  unint64_t result = qword_987A0;
  if (!qword_987A0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_98778);
    sub_16340();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_987A0);
  }
  return result;
}

unint64_t sub_16340()
{
  unint64_t result = qword_987A8;
  if (!qword_987A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_987B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_987A8);
  }
  return result;
}

uint64_t ChapterTitleContent.ID.description.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = (void *)v0[1];
  sub_77060(30);
  v4._object = (void *)0x800000000007E360;
  v4._countAndFlagsBits = 0xD000000000000017;
  sub_76970(v4);
  sub_76AD0();
  v5._countAndFlagsBits = 8236;
  v5._object = (void *)0xE200000000000000;
  sub_76970(v5);
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = v1;
  v6._object = v2;
  sub_76970(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 41;
  v7._object = (void *)0xE100000000000000;
  sub_76970(v7);
  return 0;
}

void ChapterTitleContent.ID.hash(into:)()
{
  Swift::UInt64 v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_76940();
  swift_bridgeObjectRelease();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v1;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_77310(v2);
}

BOOL static ChapterTitleContent.ID.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(a1 + 16);
  double v3 = *(double *)(a2 + 16);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8)) {
    return v2 == v3;
  }
  char v5 = sub_77230();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

Swift::Int ChapterTitleContent.ID.hashValue.getter()
{
  Swift::UInt64 v1 = *(void *)(v0 + 16);
  sub_772D0();
  sub_76940();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v1;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_77310(v2);
  return sub_77320();
}

void sub_165C4()
{
  Swift::UInt64 v1 = *(void *)(v0 + 16);
  sub_76940();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v1;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_77310(v2);
}

Swift::Int sub_16600()
{
  Swift::UInt64 v1 = *(void *)(v0 + 16);
  sub_772D0();
  sub_76940();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = v1;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_77310(v2);
  return sub_77320();
}

uint64_t ChapterTitleContent.id.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[15];
  uint64_t v3 = v1[16];
  *a1 = v1[14];
  a1[1] = v2;
  a1[2] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t ChapterTitleContent.deinit()
{
  swift_bridgeObjectRelease();
  sub_97D8(*(id *)(v0 + 96));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ChapterTitleContent.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  sub_97D8(*(id *)(v0 + 96));
  swift_bridgeObjectRelease();

  return _swift_deallocClassInstance(v0, 136, 7);
}

unint64_t sub_166F8()
{
  unint64_t result = qword_987B8;
  if (!qword_987B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_987B8);
  }
  return result;
}

uint64_t sub_1674C()
{
  return *(void *)(v0 + 32);
}

uint64_t sub_16758()
{
  return *(void *)(v0 + 48);
}

uint64_t sub_16764()
{
  return *(void *)(v0 + 64);
}

uint64_t sub_16770(uint64_t result, char a2)
{
  *(void *)(v2 + 64) = result;
  *(unsigned char *)(v2 + 72) = a2 & 1;
  return result;
}

uint64_t sub_16780()
{
  return *(void *)(v0 + 80);
}

uint64_t sub_1678C(uint64_t result, char a2)
{
  *(void *)(v2 + 80) = result;
  *(unsigned char *)(v2 + 88) = a2 & 1;
  return result;
}

void sub_1679C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)(v2 + 96);
  *(void *)(v2 + 96) = a1;
  *(void *)(v2 + 104) = a2;
  sub_97D8(v3);
}

unint64_t sub_167B0(uint64_t a1)
{
  unint64_t result = sub_167D8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_167D8()
{
  unint64_t result = qword_987C0;
  if (!qword_987C0)
  {
    type metadata accessor for ChapterTitleContent();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_987C0);
  }
  return result;
}

uint64_t type metadata accessor for ChapterTitleContent()
{
  return self;
}

void *sub_16850()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_1685C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_75BC0();
  *a1 = result;
  return result;
}

unint64_t sub_168B0()
{
  unint64_t result = qword_987C8;
  if (!qword_987C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_987C8);
  }
  return result;
}

uint64_t sub_16904@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 120);
  uint64_t v3 = *(void *)(*(void *)v1 + 128);
  *a1 = *(void *)(*(void *)v1 + 112);
  a1[1] = v2;
  a1[2] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for ChapterTitleContent(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for ChapterTitleContent);
}

uint64_t destroy for TextContent.ID()
{
  return swift_bridgeObjectRelease();
}

void *_s19PodcastsTranscripts19ChapterTitleContentC2IDVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ChapterTitleContent.ID(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

void *assignWithTake for ChapterTitleContent.ID(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for ChapterTitleContent.ID(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ChapterTitleContent.ID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ChapterTitleContent.ID()
{
  return &type metadata for ChapterTitleContent.ID;
}

id NSUserDefaults.hasOpenedPlayerTranscriptTab.getter()
{
  swift_bridgeObjectRetain();
  NSString v1 = sub_768D0();
  swift_bridgeObjectRelease();
  id v2 = [v0 BOOLForKey:v1];

  return v2;
}

void sub_16B2C(void **a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_bridgeObjectRetain();
  NSString v4 = sub_768D0();
  swift_bridgeObjectRelease();
  LOBYTE(v3) = [v3 BOOLForKey:v4];

  *a2 = (_BYTE)v3;
}

void NSUserDefaults.hasOpenedPlayerTranscriptTab.setter(char a1)
{
  int v2 = a1 & 1;
  swift_bridgeObjectRetain();
  NSString v3 = sub_768D0();
  swift_bridgeObjectRelease();
  unsigned int v4 = [v1 BOOLForKey:v3];

  if (v4 != v2)
  {
    Class isa = sub_76A30().super.super.isa;
    swift_bridgeObjectRetain();
    NSString v6 = sub_768D0();
    swift_bridgeObjectRelease();
    [v1 setValue:isa forKey:v6];
  }
}

void (*NSUserDefaults.hasOpenedPlayerTranscriptTab.modify(uint64_t a1))(uint64_t a1)
{
  *(void *)a1 = v1;
  swift_bridgeObjectRetain();
  NSString v3 = sub_768D0();
  swift_bridgeObjectRelease();
  unsigned __int8 v4 = [v1 BOOLForKey:v3];

  *(unsigned char *)(a1 + 8) = v4;
  return sub_16D38;
}

void sub_16D38(uint64_t a1)
{
  NSString v1 = *(void **)a1;
  int v2 = *(unsigned __int8 *)(a1 + 8);
  swift_bridgeObjectRetain();
  NSString v3 = sub_768D0();
  swift_bridgeObjectRelease();
  unsigned int v4 = [v1 BOOLForKey:v3];

  if (v2 != v4)
  {
    Class isa = sub_76A30().super.super.isa;
    swift_bridgeObjectRetain();
    NSString v5 = sub_768D0();
    swift_bridgeObjectRelease();
    [v1 setValue:isa forKey:v5];
  }
}

void sub_16E44(char *a1)
{
}

uint64_t sub_16E6C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t *sub_16E80(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  NSString v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    uint64_t *v3 = *a2;
    NSString v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    uint64_t v5 = a2[3];
    v3[2] = a2[2];
    v3[3] = v5;
    uint64_t v6 = *(int *)(a3 + 24);
    Swift::String v7 = (uint64_t *)((char *)v3 + v6);
    uint64_t v8 = (uint64_t *)((char *)a2 + v6);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_753F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *Swift::String v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return v3;
}

uint64_t sub_16FA8(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_753F0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_17060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  Swift::String v7 = (void *)(a2 + v5);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_753F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_17130(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (void *)((char *)a1 + v7);
    uint64_t v9 = (void *)((char *)a2 + v7);
    sub_1722C((uint64_t)a1 + v7);
    __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_753F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1722C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1728C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (char *)a1 + v5;
  uint64_t v7 = (char *)a2 + v5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_753F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_17360(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1722C((uint64_t)a1 + v7);
    uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_753F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(v8, v9, v11);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(*(void *)(v10 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_17454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_17468);
}

uint64_t sub_17468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_988B0);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1751C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_17530);
}

uint64_t sub_17530(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_988B0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 24);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TappablePaddingView()
{
  uint64_t result = qword_98910;
  if (!qword_98910) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_17628()
{
  sub_176CC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_176CC()
{
  if (!qword_98920)
  {
    sub_753F0();
    unint64_t v0 = sub_75DE0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_98920);
    }
  }
}

uint64_t sub_17724()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_17740@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v2 = type metadata accessor for TappablePaddingView();
  uint64_t v24 = *(void *)(v2 - 8);
  uint64_t v23 = *(void *)(v24 + 64);
  __chkstk_darwin(v2);
  uint64_t v21 = (uint64_t)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_753D0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_753F0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_98958);
  uint64_t v12 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_76330();
  sub_1A89C((uint64_t)v11);
  sub_753E0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_753C0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_76440();
  sub_76410();
  sub_75E30();
  uint64_t v26 = v20;
  char v27 = 0;
  uint64_t v28 = v33;
  char v29 = v34;
  uint64_t v30 = v35;
  char v31 = v36;
  long long v32 = v37;
  uint64_t v15 = v21;
  sub_C2CC(v1, v21);
  unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
  uint64_t v17 = swift_allocObject();
  sub_C268(v15, v17 + v16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_98960);
  sub_17C98();
  sub_762A0();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(v25, v14, v22);
}

uint64_t sub_17B1C()
{
  uint64_t v1 = (int *)(type metadata accessor for TappablePaddingView() - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  swift_release();
  uint64_t v5 = v0 + v3 + v1[8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_753F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_17C34()
{
  uint64_t v1 = *(void *)(type metadata accessor for TappablePaddingView() - 8);
  return (*(uint64_t (**)(void))(v0
                              + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80))
                              + 16))();
}

unint64_t sub_17C98()
{
  unint64_t result = qword_98968;
  if (!qword_98968)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_98960);
    sub_17D14();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98968);
  }
  return result;
}

unint64_t sub_17D14()
{
  unint64_t result = qword_98970;
  if (!qword_98970)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_98978);
    sub_17D90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98970);
  }
  return result;
}

unint64_t sub_17D90()
{
  unint64_t result = qword_98310;
  if (!qword_98310)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_98318);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98310);
  }
  return result;
}

uint64_t sub_17DEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_17E48()
{
  swift_getKeyPath();
  sub_18AB0();
  sub_75540();
  swift_release();
  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_17EB8(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

uint64_t sub_17EC0()
{
  swift_getKeyPath();
  sub_18AB0();
  sub_75540();
  swift_release();
  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_17F30@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_18AB0();
  sub_75540();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 17);
  return result;
}

uint64_t sub_17FA8()
{
  return swift_release();
}

uint64_t sub_18048()
{
  return swift_retain();
}

uint64_t sub_180BC(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 24) = a2;
  swift_retain();
  return swift_release();
}

uint64_t sub_180F8()
{
  swift_getKeyPath();
  sub_18AB0();
  sub_75540();
  swift_release();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_18168@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_18AB0();
  sub_75540();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 32);
  return result;
}

uint64_t sub_181E0()
{
  return swift_release();
}

uint64_t sub_18280()
{
  return swift_release();
}

uint64_t sub_183D4()
{
  return swift_release();
}

uint64_t sub_1857C(uint64_t a1, char a2)
{
  uint64_t v5 = *(void *)(v2 + 40);
  char v6 = *(unsigned char *)(v2 + 48);
  *(void *)(v2 + 40) = a1;
  *(unsigned char *)(v2 + 48) = a2;
  sub_18A84(v5, v6);
  sub_18A84(a1, a2);
  sub_18A70(v5, v6);
  uint64_t v7 = *(void *)(v2 + 40);
  char v8 = *(unsigned char *)(v2 + 48);
  sub_18A84(v7, v8);
  char v9 = sub_29EAC(v7, v8, v5, v6);
  sub_18A70(v7, v8);
  if ((v9 & 1) == 0)
  {
    uint64_t v10 = *(void *)(v2 + 40);
    char v11 = *(unsigned char *)(v2 + 48);
    sub_18A84(v10, v11);
    sub_18280();
    sub_18A70(v10, v11);
    uint64_t v12 = *(void *)(v2 + 40);
    char v13 = *(unsigned char *)(v2 + 48);
    sub_18A84(v12, v13);
    sub_183D4();
    sub_18A70(v12, v13);
  }
  sub_18A70(a1, a2);

  return sub_18A70(v5, v6);
}

uint64_t sub_186A4()
{
  swift_release();
  sub_18A70(*(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
  uint64_t v1 = v0 + OBJC_IVAR____TtC19PodcastsTranscripts29TranscriptPresentationContext___observationRegistrar;
  uint64_t v2 = sub_75580();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_18758()
{
  return type metadata accessor for TranscriptPresentationContext();
}

uint64_t type metadata accessor for TranscriptPresentationContext()
{
  uint64_t result = qword_989B0;
  if (!qword_989B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_187AC()
{
  uint64_t result = sub_75580();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for TranscriptPresentationContext.SpeakerVisibilityMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TranscriptPresentationContext.SpeakerVisibilityMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x189C4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

unsigned char *sub_189EC(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptPresentationContext.SpeakerVisibilityMode()
{
  return &type metadata for TranscriptPresentationContext.SpeakerVisibilityMode;
}

unint64_t sub_18A08()
{
  unint64_t result = qword_98A60;
  if (!qword_98A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98A60);
  }
  return result;
}

BOOL sub_18A5C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_18A70(uint64_t a1, char a2)
{
  if (a2 == 3) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_18A84(uint64_t a1, char a2)
{
  if (a2 == 3) {
    return swift_errorRetain();
  }
  return result;
}

void sub_18AA0()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 32) = *(unsigned char *)(v0 + 24);
}

unint64_t sub_18AB0()
{
  unint64_t result = qword_9A3D0;
  if (!qword_9A3D0)
  {
    type metadata accessor for TranscriptPresentationContext();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9A3D0);
  }
  return result;
}

void sub_18B10()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 17) = *(unsigned char *)(v0 + 24);
}

void sub_18B30()
{
}

void sub_18B48()
{
}

char *sub_18B60(char *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *(void *)a1 = *a2;
    unsigned int v4 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_757A0();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A650);
      memcpy(v4, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, uint64_t *, uint64_t))(v8 + 16))(v4, a2, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = *(int *)(a3 + 24);
    char v13 = &v4[v11];
    uint64_t v14 = (uint64_t *)((char *)a2 + v11);
    uint64_t v15 = v14[1];
    *(void *)char v13 = *v14;
    *((void *)v13 + 1) = v15;
    unint64_t v16 = &v4[v12];
    uint64_t v17 = (uint64_t *)((char *)a2 + v12);
    uint64_t v18 = v17[1];
    *(void *)unint64_t v16 = *v17;
    *((void *)v16 + 1) = v18;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_18CF8(uint64_t a1)
{
  uint64_t v2 = sub_757A0();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }
  swift_bridgeObjectRelease();

  return swift_release();
}

char *sub_18DD8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_757A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A650);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = &a1[v9];
  uint64_t v12 = &a2[v9];
  uint64_t v13 = *((void *)v12 + 1);
  *(void *)uint64_t v11 = *(void *)v12;
  *((void *)v11 + 1) = v13;
  uint64_t v14 = &a1[v10];
  uint64_t v15 = &a2[v10];
  uint64_t v16 = *((void *)v15 + 1);
  *(void *)uint64_t v14 = *(void *)v15;
  *((void *)v14 + 1) = v16;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

char *sub_18F24(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_757A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A650);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = *(int *)(a3 + 24);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = &a2[v15];
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = *(void *)v17;
  *((void *)v16 + 1) = v18;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_190F4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_757A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A650);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 24);
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  *(_OWORD *)&a1[v9] = *(_OWORD *)&a2[v9];
  return a1;
}

char *sub_19224(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_757A0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A650);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  *(_OWORD *)&a1[*(int *)(a3 + 24)] = *(_OWORD *)&a2[*(int *)(a3 + 24)];
  swift_release();
  return a1;
}

uint64_t sub_193D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_193EC);
}

uint64_t sub_193EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A650);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_194B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_194C4);
}

uint64_t sub_194C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_9A650);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for FooterViewModel(uint64_t a1)
{
  return sub_1A170(a1, (uint64_t *)&unk_98AC8);
}

void sub_195A4()
{
  sub_19648();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_19648()
{
  if (!qword_98AD8)
  {
    sub_757A0();
    unint64_t v0 = sub_76F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_98AD8);
    }
  }
}

uint64_t *sub_196A0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *(void *)a2;
    *a1 = *(void *)a2;
    unsigned int v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = *(void *)a2;
    char v8 = *(unsigned char *)(a2 + 8);
    sub_1985C(*(void *)a2, v8);
    *unsigned int v4 = v7;
    *((unsigned char *)v4 + 8) = v8;
    uint64_t v9 = *(int *)(a3 + 20);
    unint64_t v10 = (char *)v4 + v9;
    uint64_t v11 = (char *)(a2 + v9);
    uint64_t v12 = sub_757A0();
    uint64_t v13 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A650);
      memcpy(v10, v11, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    uint64_t v16 = type metadata accessor for FooterViewModel(0);
    uint64_t v17 = *(int *)(v16 + 20);
    uint64_t v18 = &v10[v17];
    uint64_t v19 = &v11[v17];
    uint64_t v21 = *(void *)v19;
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = v21;
    *((void *)v18 + 1) = v20;
    uint64_t v22 = *(int *)(v16 + 24);
    uint64_t v23 = &v10[v22];
    uint64_t v24 = &v11[v22];
    uint64_t v25 = *((void *)v24 + 1);
    *(void *)uint64_t v23 = *(void *)v24;
    *((void *)v23 + 1) = v25;
    swift_bridgeObjectRetain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1985C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_19868(uint64_t a1, uint64_t a2)
{
  sub_19954(*(void *)a1, *(unsigned char *)(a1 + 8));
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_757A0();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  type metadata accessor for FooterViewModel(0);
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_19954(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t sub_19960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_1985C(*(void *)a2, v7);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = (char *)(a1 + v8);
  unint64_t v10 = (char *)(a2 + v8);
  uint64_t v11 = sub_757A0();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A650);
    memcpy(v9, v10, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v14 = type metadata accessor for FooterViewModel(0);
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = &v9[v15];
  uint64_t v17 = &v10[v15];
  uint64_t v19 = *(void *)v17;
  uint64_t v18 = *((void *)v17 + 1);
  *(void *)uint64_t v16 = v19;
  *((void *)v16 + 1) = v18;
  uint64_t v20 = *(int *)(v14 + 24);
  uint64_t v21 = &v9[v20];
  uint64_t v22 = &v10[v20];
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = *(void *)v22;
  *((void *)v21 + 1) = v23;
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_19AD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)a2;
  char v7 = *(unsigned char *)(a2 + 8);
  sub_1985C(*(void *)a2, v7);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_19954(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)(a2 + v10);
  uint64_t v13 = sub_757A0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A650);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  uint64_t v19 = type metadata accessor for FooterViewModel(0);
  uint64_t v20 = *(int *)(v19 + 20);
  uint64_t v21 = &v11[v20];
  uint64_t v22 = &v12[v20];
  *(void *)uint64_t v21 = *(void *)v22;
  *((void *)v21 + 1) = *((void *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = *(int *)(v19 + 24);
  uint64_t v24 = &v11[v23];
  uint64_t v25 = &v12[v23];
  uint64_t v26 = *((void *)v25 + 1);
  *(void *)uint64_t v24 = *(void *)v25;
  *((void *)v24 + 1) = v26;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_19CCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)(a1 + v4);
  uint64_t v6 = (char *)(a2 + v4);
  uint64_t v7 = sub_757A0();
  uint64_t v8 = *(void *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A650);
    memcpy(v5, v6, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  uint64_t v10 = type metadata accessor for FooterViewModel(0);
  *(_OWORD *)&v5[*(int *)(v10 + 20)] = *(_OWORD *)&v6[*(int *)(v10 + 20)];
  *(_OWORD *)&v5[*(int *)(v10 + 24)] = *(_OWORD *)&v6[*(int *)(v10 + 24)];
  return a1;
}

uint64_t sub_19E08(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  char v7 = *((unsigned char *)a2 + 8);
  uint64_t v8 = *(void *)a1;
  char v9 = *(unsigned char *)(a1 + 8);
  *(void *)a1 = v6;
  *(unsigned char *)(a1 + 8) = v7;
  sub_19954(v8, v9);
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = (char *)(a1 + v10);
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = sub_757A0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  int v16 = v15(v11, 1, v13);
  int v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A650);
    memcpy(v11, v12, *(void *)(*(void *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_7:
  uint64_t v19 = type metadata accessor for FooterViewModel(0);
  uint64_t v20 = *(int *)(v19 + 20);
  uint64_t v21 = &v11[v20];
  uint64_t v22 = &v12[v20];
  uint64_t v24 = *(void *)v22;
  uint64_t v23 = *((void *)v22 + 1);
  *(void *)uint64_t v21 = v24;
  *((void *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  *(_OWORD *)&v11[*(int *)(v19 + 24)] = *(_OWORD *)&v12[*(int *)(v19 + 24)];
  swift_release();
  return a1;
}

uint64_t sub_19FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_19FF0);
}

uint64_t sub_19FF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 254)
  {
    unsigned int v4 = *(unsigned __int8 *)(a1 + 8);
    if (v4 > 1) {
      return (v4 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
  else
  {
    uint64_t v8 = type metadata accessor for FooterViewModel(0);
    char v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1A098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1A0AC);
}

uint64_t sub_1A0AC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 254)
  {
    *(unsigned char *)(result + 8) = -(char)a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for FooterViewModel(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for FooterView(uint64_t a1)
{
  return sub_1A170(a1, qword_98B68);
}

uint64_t sub_1A170(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1A1A8()
{
  uint64_t result = type metadata accessor for FooterViewModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1A240()
{
  return swift_getOpaqueTypeConformance2();
}

__n128 sub_1A25C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_76BA0();
    uint64_t v22 = (void *)sub_760A0();
    sub_75890();
  }
  sub_75F20();
  a9[4] = v28;
  a9[5] = v29;
  a9[6] = v30;
  *a9 = v24;
  a9[1] = v25;
  __n128 result = v27;
  a9[2] = v26;
  a9[3] = v27;
  return result;
}

uint64_t sub_1A3E8@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_76BA0();
    uint64_t v23 = (void *)sub_760A0();
    sub_75890();
  }
  sub_75F20();
  long long v24 = v13[1];
  long long v36 = *v13;
  long long v37 = v24;
  sub_1C720((uint64_t)&v36, (uint64_t)v39);
  uint64_t v38 = *((void *)&v37 + 1);
  uint64_t v34 = *((void *)v13 + 4);
  char v35 = *((unsigned char *)v13 + 40);
  long long v25 = v13[1];
  *a9 = *v13;
  a9[1] = v25;
  *(_OWORD *)((char *)a9 + 25) = *(long long *)((char *)v13 + 25);
  a9[8] = v32;
  a9[9] = v33;
  a9[3] = v27;
  a9[4] = v28;
  a9[6] = v30;
  a9[7] = v31;
  a9[5] = v29;
  sub_1C77C((uint64_t)v39);
  sub_1C7B0((uint64_t)&v38);
  return sub_1C7DC((uint64_t)&v34);
}

double sub_1A5C4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1A67C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_98C48, &qword_98C50).n128_u64[0];
  return result;
}

double sub_1A620@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1A67C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_98C58, &qword_98C60).n128_u64[0];
  return result;
}

__n128 sub_1A67C@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  uint64_t v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    sub_76BA0();
    long long v28 = (void *)sub_760A0();
    sub_75890();

    uint64_t v19 = a17;
  }
  sub_75F20();
  sub_C50C(v17, a9, a16);
  long long v29 = (_OWORD *)(a9 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  _OWORD *v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

uint64_t sub_1A84C@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8DC((uint64_t *)&unk_9A780, (uint64_t (*)(void))&type metadata accessor for ColorSchemeContrast, 0xD000000000000013, 0x800000000007E5D0, a1);
}

uint64_t sub_1A884(uint64_t a1, char a2)
{
  return sub_1ADDC(a1, a2, 0x747865546576694CLL, 0xE800000000000000);
}

uint64_t sub_1A89C@<X0>(uint64_t a1@<X8>)
{
  return sub_1A8DC(&qword_98368, (uint64_t (*)(void))&type metadata accessor for DeviceMetrics, 0x654D656369766544, 0xED00007363697274, a1);
}

uint64_t sub_1A8DC@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v27 = a3;
  uint64_t v9 = v5;
  uint64_t v11 = sub_75FD0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_C50C(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    os_log_type_t v20 = sub_76BA0();
    uint64_t v21 = sub_760A0();
    if (os_log_type_enabled(v21, v20))
    {
      unint64_t v25 = a4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = a5;
      uint64_t v23 = (uint8_t *)v22;
      uint64_t v29 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136315138;
      uint64_t v28 = sub_7D80(v27, v25, &v29);
      sub_76F90();
      _os_log_impl(&def_1E2E4, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_75FC0();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

double sub_1AB94(uint64_t a1, char a2)
{
  uint64_t v4 = sub_75FD0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2) {
    return *(double *)&a1;
  }
  swift_retain();
  os_log_type_t v8 = sub_76BA0();
  uint64_t v9 = sub_760A0();
  os_log_type_t v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v13 = sub_7D80(0x74616F6C464743, 0xE700000000000000, &v14);
    sub_76F90();
    _os_log_impl(&def_1E2E4, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_75FC0();
  swift_getAtKeyPath();
  sub_19954(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return *(double *)&v14;
}

uint64_t sub_1ADA0(uint64_t a1, char a2)
{
  return sub_1ADDC(a1, a2, 0x746E6F4374786554, 0xEB00000000746E65);
}

uint64_t sub_1ADC0(uint64_t a1, char a2)
{
  return sub_1ADDC(a1, a2, 0xD00000000000001DLL, 0x800000000007E5F0);
}

uint64_t sub_1ADDC(uint64_t a1, char a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = sub_75FD0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  if ((a2 & 1) == 0)
  {
    os_log_type_t v12 = sub_76BA0();
    uint64_t v13 = sub_760A0();
    os_log_type_t v14 = v12;
    if (os_log_type_enabled(v13, v12))
    {
      unint64_t v18 = a4;
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136315138;
      uint64_t v19 = sub_7D80(a3, v18, &v20);
      sub_76F90();
      _os_log_impl(&def_1E2E4, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_75FC0();
    swift_getAtKeyPath();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v20;
  }
  return a1;
}

uint64_t sub_1AFE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A650);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_757A0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v25 - v10;
  sub_C50C(v1, (uint64_t)v4, &qword_9A650);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_CA50((uint64_t)v4, &qword_9A650);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v11, v4, v5);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
  int v12 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v9, v5);
  if (v12 == enum case for TranscriptSource.provider(_:))
  {
    uint64_t v13 = (uint64_t *)(v1 + *(int *)(type metadata accessor for FooterViewModel(0) + 20));
    uint64_t v14 = *v13;
    uint64_t v15 = v13[1];
    if (v15)
    {
      uint64_t v16 = self;
      swift_bridgeObjectRetain();
      uint64_t v17 = (objc_class *)[v16 mainBundle];
      v26._countAndFlagsBits = 0xD00000000000001ALL;
      v24._countAndFlagsBits = 0x800000000007E580;
      v26._object = (void *)0x800000000007E560;
      v28.value._countAndFlagsBits = 0;
      v28.value._object = 0;
      v18.super.Class isa = v17;
      v30._countAndFlagsBits = 0;
      v30._object = (void *)0xE000000000000000;
      sub_75060(v26, v28, v18, v30, v24);

      __swift_instantiateConcreteTypeFromMangledName(&qword_98C08);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_78AC0;
      *(void *)(v19 + 56) = &type metadata for String;
      *(void *)(v19 + 64) = sub_1C808();
      *(void *)(v19 + 32) = v14;
      *(void *)(v19 + 40) = v15;
      uint64_t v14 = sub_768E0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    if (v12 != enum case for TranscriptSource.apple(_:))
    {
      uint64_t v22 = *(void (**)(char *, uint64_t))(v6 + 8);
      v22(v11, v5);
      v22(v9, v5);
      return 0;
    }
    uint64_t v20 = (objc_class *)[self mainBundle];
    v24._countAndFlagsBits = 0xE000000000000000;
    v27._object = (void *)0x800000000007E5B0;
    v27._countAndFlagsBits = 0xD000000000000017;
    v29.value._countAndFlagsBits = 0;
    v29.value._object = 0;
    v21.super.Class isa = v20;
    v31._countAndFlagsBits = 0;
    v31._object = (void *)0xE000000000000000;
    uint64_t v14 = sub_75060(v27, v29, v21, v31, v24);
  }
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  return v14;
}

uint64_t sub_1B3B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_98BA0);
  uint64_t v2 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_98BA8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_98BB0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_98BB8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v7 = sub_76030();
  *((void *)v7 + 1) = 0;
  v7[16] = 1;
  uint64_t v14 = (uint64_t)&v7[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_98BC0) + 44)];
  uint64_t v27 = v1;
  sub_1B740(v1, v14);
  if (qword_97FB0 != -1) {
    swift_once();
  }
  uint64_t v15 = qword_98A68;
  uint64_t KeyPath = swift_getKeyPath();
  sub_C50C((uint64_t)v7, (uint64_t)v10, &qword_98BA8);
  uint64_t v17 = (uint64_t *)&v10[*(int *)(v8 + 36)];
  *uint64_t v17 = KeyPath;
  v17[1] = v15;
  swift_retain();
  sub_CA50((uint64_t)v7, &qword_98BA8);
  sub_75DD0();
  uint64_t v18 = v26;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(&v13[*(int *)(v11 + 36)], v4, v26);
  sub_C50C((uint64_t)v10, (uint64_t)v13, &qword_98BB0);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v18);
  sub_CA50((uint64_t)v10, &qword_98BB0);
  uint64_t v19 = *(void *)v27;
  LOBYTE(v18) = *(unsigned char *)(v27 + 8);
  sub_1985C(*(void *)v27, v18);
  double v20 = sub_1AB94(v19, v18);
  sub_19954(v19, v18);
  sub_1985C(v19, v18);
  double v21 = sub_1AB94(v19, v18);
  sub_19954(v19, v18);
  LOBYTE(v19) = sub_760C0();
  uint64_t v22 = v28;
  sub_C50C((uint64_t)v13, v28, &qword_98BB8);
  uint64_t v23 = v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_98BC8) + 36);
  *(unsigned char *)uint64_t v23 = v19;
  *(void *)(v23 + 8) = 0x402E000000000000;
  *(double *)(v23 + 16) = v20;
  *(void *)(v23 + 24) = 0x4024000000000000;
  *(double *)(v23 + 32) = v21;
  *(unsigned char *)(v23 + 40) = 0;
  return sub_CA50((uint64_t)v13, &qword_98BB8);
}

uint64_t sub_1B740@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a1;
  uint64_t v74 = a2;
  uint64_t v2 = type metadata accessor for FooterView(0);
  uint64_t v3 = *(void *)(v2 - 8);
  v66[1] = v2 - 8;
  uint64_t v68 = v3;
  __chkstk_darwin(v2 - 8);
  uint64_t v69 = v4;
  uint64_t v70 = (uint64_t)v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_98BD0);
  uint64_t v72 = *(void *)(v5 - 8);
  uint64_t v73 = v5;
  uint64_t v6 = __chkstk_darwin(v5);
  double v71 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v76 = (char *)v66 - v8;
  uint64_t v9 = sub_763F0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_98BD8);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_98BE0);
  uint64_t v18 = v17 - 8;
  uint64_t v19 = __chkstk_darwin(v17);
  double v21 = (char *)v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v77 = (uint64_t)v66 - v22;
  sub_763E0();
  int v23 = sub_76050();
  char v24 = sub_760C0();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v12, v9);
  uint64_t v25 = &v16[*(int *)(v14 + 44)];
  *(_DWORD *)uint64_t v25 = v23;
  v25[4] = v24;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  char v26 = sub_760E0();
  sub_75DC0();
  uint64_t v28 = v27;
  uint64_t v30 = v29;
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  sub_C50C((uint64_t)v16, (uint64_t)v21, &qword_98BD8);
  long long v35 = &v21[*(int *)(v18 + 44)];
  *long long v35 = v26;
  *((void *)v35 + 1) = v28;
  *((void *)v35 + 2) = v30;
  *((void *)v35 + 3) = v32;
  *((void *)v35 + 4) = v34;
  v35[40] = 0;
  sub_CA50((uint64_t)v16, &qword_98BD8);
  uint64_t v75 = v21;
  sub_C570((uint64_t)v21, v77, &qword_98BE0);
  uint64_t v36 = v67;
  uint64_t v37 = sub_1AFE4();
  if (v38)
  {
    *(void *)&v104[0] = v37;
    *((void *)&v104[0] + 1) = v38;
    sub_C1AC();
    uint64_t v39 = sub_76260();
    uint64_t v41 = v40;
    uint64_t v43 = v42;
    char v45 = v44 & 1;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v98 = v39;
    uint64_t v99 = v41;
    char v100 = v45;
    uint64_t v101 = v43;
    uint64_t v102 = KeyPath;
    char v103 = 0;
    sub_76430();
    sub_1A3E8(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, v104, 0.0, 1, 0.0, 1);
    sub_1607C(v39, v41, v45);
    swift_release();
    swift_bridgeObjectRelease();
    long long v86 = v104[6];
    long long v87 = v104[7];
    long long v88 = v104[8];
    long long v89 = v104[9];
    long long v82 = v104[2];
    long long v83 = v104[3];
    long long v84 = v104[4];
    long long v85 = v104[5];
    long long v80 = v104[0];
    long long v81 = v104[1];
    char v47 = sub_760E0();
    sub_75DC0();
    char v78 = 0;
    v90[6] = v86;
    v90[7] = v87;
    v90[8] = v88;
    v90[9] = v89;
    v90[2] = v82;
    v90[3] = v83;
    v90[4] = v84;
    v90[5] = v85;
    v90[0] = v80;
    v90[1] = v81;
    char v91 = v47;
    *(_DWORD *)uint64_t v92 = *(_DWORD *)v79;
    *(_DWORD *)&v92[3] = *(_DWORD *)&v79[3];
    uint64_t v93 = v48;
    uint64_t v94 = v49;
    uint64_t v95 = v50;
    uint64_t v96 = v51;
    char v97 = 0;
    nullsub_1(v90);
  }
  else
  {
    sub_1C28C(v90);
  }
  sub_C570((uint64_t)v90, (uint64_t)v104, &qword_98BE8);
  uint64_t v52 = v70;
  sub_1C2B0(v36, v70);
  unint64_t v53 = (*(unsigned __int8 *)(v68 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
  uint64_t v54 = swift_allocObject();
  sub_1C47C(v52, v54 + v53);
  __swift_instantiateConcreteTypeFromMangledName(&qword_98BF0);
  sub_D034(&qword_98BF8, &qword_98BF0);
  uint64_t v55 = v76;
  sub_763C0();
  uint64_t v56 = (uint64_t)v75;
  sub_C50C(v77, (uint64_t)v75, &qword_98BE0);
  sub_C570((uint64_t)v104, (uint64_t)v79, &qword_98BE8);
  uint64_t v57 = v71;
  uint64_t v58 = v72;
  uint64_t v59 = *(void (**)(char *, char *, uint64_t))(v72 + 16);
  uint64_t v60 = v73;
  v59(v71, v55, v73);
  uint64_t v61 = v74;
  sub_C50C(v56, v74, &qword_98BE0);
  uint64_t v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_98C00);
  uint64_t v63 = v61 + *(int *)(v62 + 48);
  sub_C570((uint64_t)v79, (uint64_t)&v80, &qword_98BE8);
  sub_C570((uint64_t)&v80, v63, &qword_98BE8);
  v59((char *)(v61 + *(int *)(v62 + 64)), v57, v60);
  sub_1C5AC((uint64_t)&v80, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1C55C);
  uint64_t v64 = *(void (**)(char *, uint64_t))(v58 + 8);
  v64(v76, v60);
  sub_CA50(v77, &qword_98BE0);
  v64(v57, v60);
  sub_C570((uint64_t)v79, (uint64_t)v90, &qword_98BE8);
  sub_1C5AC((uint64_t)v90, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))sub_1C628);
  return sub_CA50((uint64_t)v75, &qword_98BE0);
}

__n128 sub_1BE7C@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_75FE0();
  sub_1BEE8((uint64_t)&v8);
  char v3 = v9;
  uint64_t v4 = v11;
  char v5 = v12;
  __n128 result = v10;
  long long v7 = v8;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 1;
  *(_OWORD *)(a1 + 24) = v7;
  *(unsigned char *)(a1 + 40) = v3;
  *(__n128 *)(a1 + 48) = result;
  *(void *)(a1 + 64) = v4;
  *(unsigned char *)(a1 + 72) = v5;
  return result;
}

uint64_t sub_1BEE8@<X0>(uint64_t a1@<X8>)
{
  sub_75FF0();
  uint64_t v2 = sub_76240();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  uint64_t v9 = sub_76370();
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v8;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = 0;
  *(unsigned char *)(a1 + 48) = 1;
  sub_160F0(v2, v4, v8);
  swift_bridgeObjectRetain();
  sub_1607C(v2, v4, v8);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1BFEC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_983C8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_76160();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Font.TextStyle.body(_:), v3);
  uint64_t v7 = enum case for Font.Design.default(_:);
  uint64_t v8 = sub_76110();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v2, v7, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  sub_76120();
  uint64_t v10 = sub_76150();
  sub_CA50((uint64_t)v2, &qword_983C8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  qword_98A68 = v10;
  return result;
}

uint64_t sub_1C1DC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_75FA0();
  *a1 = result;
  return result;
}

uint64_t sub_1C208@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_75FA0();
  *a1 = result;
  return result;
}

uint64_t sub_1C234()
{
  return sub_75FB0();
}

uint64_t sub_1C260()
{
  return sub_75FB0();
}

double sub_1C28C(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 185) = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1C2B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FooterView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C314()
{
  uint64_t v1 = (int *)(type metadata accessor for FooterView(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(*(void *)v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)v1 + 64);
  sub_19954(*(void *)(v0 + v3), *(unsigned char *)(v0 + v3 + 8));
  uint64_t v5 = v0 + v3 + v1[7];
  uint64_t v6 = sub_757A0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6)) {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  }
  type metadata accessor for FooterViewModel(0);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_1C47C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FooterView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C4E0()
{
  uint64_t v1 = type metadata accessor for FooterView(0);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = v0 + *(int *)(v1 + 20);
  uint64_t v4 = type metadata accessor for FooterViewModel(0);
  return (*(uint64_t (**)(void))(v3 + *(int *)(v4 + 24) + v2))();
}

uint64_t sub_1C55C(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_160F0(result, a2, a3 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1C5AC(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 200);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    v4);
  return a1;
}

uint64_t sub_1C628(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1607C(result, a2, a3 & 1);
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C678@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_75F80();
  *a1 = result;
  return result;
}

uint64_t sub_1C6A4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_75F80();
  *a1 = result;
  return result;
}

uint64_t sub_1C6D0()
{
  return sub_75F90();
}

uint64_t sub_1C6F8()
{
  return sub_75F90();
}

uint64_t sub_1C720(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C77C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C7B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C7DC(uint64_t a1)
{
  return a1;
}

unint64_t sub_1C808()
{
  unint64_t result = qword_98C10;
  if (!qword_98C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98C10);
  }
  return result;
}

unint64_t sub_1C860()
{
  unint64_t result = qword_98C18;
  if (!qword_98C18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_98BC8);
    sub_1C8DC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98C18);
  }
  return result;
}

unint64_t sub_1C8DC()
{
  unint64_t result = qword_98C20;
  if (!qword_98C20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_98BB8);
    sub_1C97C();
    sub_D034(&qword_98C38, &qword_98C40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98C20);
  }
  return result;
}

unint64_t sub_1C97C()
{
  unint64_t result = qword_98C28;
  if (!qword_98C28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_98BB0);
    sub_D034(&qword_98C30, &qword_98BA8);
    sub_D034(&qword_98418, &qword_98420);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98C28);
  }
  return result;
}

uint64_t dispatch thunk of TranscriptsContextActionsProvider.transcriptSelectionActions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

void *initializeBufferWithCopyOfBuffer for TranscriptContentType(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for TranscriptContentType()
{
  return swift_release();
}

void *assignWithCopy for TranscriptContentType(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void *assignWithTake for TranscriptContentType(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptContentType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7D && *(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 125);
  }
  unsigned int v3 = (((*(void *)a1 >> 57) >> 5) | (4 * ((*(void *)a1 >> 57) & 0x18 | *(void *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for TranscriptContentType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(void *)unint64_t result = a2 - 125;
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7D) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2)
    {
      uint64_t v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(void *)unint64_t result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1CBC8(void *a1)
{
  return *a1 >> 62;
}

void *sub_1CBD4(void *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_1CBE4(uint64_t *result, uint64_t a2)
{
  *unint64_t result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for TranscriptContentType()
{
  return &type metadata for TranscriptContentType;
}

uint64_t sub_1CC08@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  switch(a1 >> 62)
  {
    case 1uLL:
      *(void *)a2 = *(void *)((char *)&dword_10 + (a1 & 0x3FFFFFFFFFFFFFFFLL));
      *(void *)(a2 + 8) = 0;
      *(void *)(a2 + 16) = 0;
      *(void *)(a2 + 24) = 0;
      *(unsigned char *)(a2 + 32) = 1;
      return swift_retain();
    case 2uLL:
      uint64_t v3 = a1 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v5 = *(void *)&stru_20.segname[a1 & 0x3FFFFFFFFFFFFFFFLL];
      uint64_t v4 = *(void *)&stru_20.segname[(a1 & 0x3FFFFFFFFFFFFFFFLL) + 8];
      *(void *)a2 = v5;
      *(void *)(a2 + 8) = v4;
      *(_OWORD *)(a2 + 16) = *(_OWORD *)(v3 + 56);
      *(unsigned char *)(a2 + 32) = 2;
      return swift_bridgeObjectRetain();
    case 3uLL:
      uint64_t v7 = a1 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v9 = *(void *)&stru_68.segname[(a1 & 0x3FFFFFFFFFFFFFFFLL) - 8];
      uint64_t v8 = *(void *)&stru_68.segname[a1 & 0x3FFFFFFFFFFFFFFFLL];
      uint64_t v10 = *(void *)(v7 + 128);
      *(void *)a2 = v9;
      *(void *)(a2 + 8) = v8;
      *(void *)(a2 + 16) = v10;
      *(void *)(a2 + 24) = 0;
      *(unsigned char *)(a2 + 32) = 3;
      return swift_bridgeObjectRetain();
    default:
      uint64_t v2 = *(void *)(a1 + 24);
      *(void *)a2 = *(void *)(a1 + 16);
      *(void *)(a2 + 8) = v2;
      *(_OWORD *)(a2 + 16) = *(_OWORD *)(a1 + 32);
      *(unsigned char *)(a2 + 32) = 0;
      return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1CCB4@<X0>(uint64_t a1@<X8>)
{
  return sub_1CC08(*v1, a1);
}

uint64_t sub_1CCBC(unint64_t a1)
{
  switch(a1 >> 62)
  {
    case 1uLL:
      swift_retain();
      sub_77060(17);
      swift_bridgeObjectRelease();
      v3[0] = 0x4320746E656C6953;
      v3[1] = 0xEF20746E65746E6FLL;
      v1._countAndFlagsBits = SilentContent.description.getter();
      goto LABEL_7;
    case 2uLL:
      v3[0] = 0;
      v3[1] = 0xE000000000000000;
      swift_retain();
      sub_77060(18);
      v4._object = (void *)0x800000000007E610;
      v4._countAndFlagsBits = 0xD000000000000010;
      sub_76970(v4);
      type metadata accessor for SpeakerContent();
      goto LABEL_5;
    case 3uLL:
      v3[0] = 0;
      v3[1] = 0xE000000000000000;
      swift_retain();
      sub_77060(16);
      v5._countAndFlagsBits = 0x2072657470616843;
      v5._object = (void *)0xEE0020656C746954;
      sub_76970(v5);
      type metadata accessor for ChapterTitleContent();
LABEL_5:
      sub_77100();
      swift_release();
      break;
    default:
      strcpy((char *)v3, "Text Content ");
      HIWORD(v3[1]) = -4864;
      swift_retain();
      v1._countAndFlagsBits = TextContent.description.getter();
LABEL_7:
      sub_76970(v1);
      swift_release();
      swift_bridgeObjectRelease();
      break;
  }
  return v3[0];
}

uint64_t sub_1CEAC()
{
  return sub_1CCBC(*v0);
}

uint64_t TranscriptContentViewModel.id.getter@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = *(void *)(v1 + 16);
  switch(v2 >> 62)
  {
    case 1uLL:
      *(void *)a1 = *(void *)((char *)&dword_10 + (v2 & 0x3FFFFFFFFFFFFFFFLL));
      *(void *)(a1 + 8) = 0;
      *(void *)(a1 + 16) = 0;
      *(void *)(a1 + 24) = 0;
      *(unsigned char *)(a1 + 32) = 1;
      return swift_retain();
    case 2uLL:
      uint64_t v4 = v2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v5 = *(void *)(v4 + 48);
      *(void *)a1 = *(void *)(v4 + 40);
      *(void *)(a1 + 8) = v5;
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(v4 + 56);
      *(unsigned char *)(a1 + 32) = 2;
      return swift_bridgeObjectRetain();
    case 3uLL:
      uint64_t v7 = (void *)(v2 & 0x3FFFFFFFFFFFFFFFLL);
      uint64_t v9 = v7[14];
      uint64_t v8 = v7[15];
      uint64_t v10 = v7[16];
      *(void *)a1 = v9;
      *(void *)(a1 + 8) = v8;
      *(void *)(a1 + 16) = v10;
      *(void *)(a1 + 24) = 0;
      *(unsigned char *)(a1 + 32) = 3;
      return swift_bridgeObjectRetain();
    default:
      uint64_t v3 = *(void *)(v2 + 24);
      *(void *)a1 = *(void *)(v2 + 16);
      *(void *)(a1 + 8) = v3;
      *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 32);
      *(unsigned char *)(a1 + 32) = 0;
      return swift_bridgeObjectRetain();
  }
}

uint64_t TranscriptContentViewModel.ID.description.getter()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void **)(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  switch(*(unsigned char *)(v0 + 32))
  {
    case 1:
      if (v1)
      {
        uint64_t v6 = *(void *)(v1 + 16);
        uint64_t v7 = *(void *)(v1 + 24);
        uint64_t v8 = *(void *)(v1 + 32);
        uint64_t v9 = *(void *)(v1 + 40);
        char v10 = *(unsigned char *)(v1 + 48);
        sub_8944(v6, v7, v8, v9, v10);
        sub_77060(26);
        uint64_t v11 = swift_bridgeObjectRelease();
        unint64_t v12 = 0xD000000000000017;
        v13._countAndFlagsBits = TranscriptContentViewModel.ID.description.getter(v11);
        sub_76970(v13);
        swift_bridgeObjectRelease();
        v14._countAndFlagsBits = 41;
        v14._object = (void *)0xE100000000000000;
        sub_76970(v14);
        sub_88A0(v6, v7, v8, v9, v10);
        goto LABEL_6;
      }
      uint64_t result = 0xD000000000000018;
      break;
    case 2:
      unint64_t v12 = 0;
      sub_77100();
LABEL_6:
      uint64_t result = v12;
      break;
    case 3:
      sub_77060(30);
      v15._object = (void *)0x800000000007E360;
      v15._countAndFlagsBits = 0xD000000000000017;
      sub_76970(v15);
      sub_76AD0();
      v16._countAndFlagsBits = 8236;
      v16._object = (void *)0xE200000000000000;
      sub_76970(v16);
      swift_bridgeObjectRetain();
      v17._countAndFlagsBits = v1;
      v17._object = v2;
      sub_76970(v17);
      sub_88A0(v1, (uint64_t)v2, v4, v3, 3);
      v18._countAndFlagsBits = 41;
      v18._object = (void *)0xE100000000000000;
      sub_76970(v18);
      uint64_t result = 0;
      break;
    default:
      uint64_t result = TextContent.ID.description.getter();
      break;
  }
  return result;
}

void TranscriptContentViewModel.ID.hash(into:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  Swift::UInt64 v3 = v1[2];
  Swift::UInt64 v4 = v1[3];
  switch(*((unsigned char *)v1 + 32))
  {
    case 1:
      sub_772E0(1uLL);
      if (v2)
      {
        sub_772E0(1uLL);
        TranscriptContentViewModel.ID.hash(into:)(a1);
      }
      else
      {
        sub_772E0(0);
      }
      return;
    case 2:
      Swift::UInt v6 = 2;
      goto LABEL_6;
    case 3:
      sub_772E0(3uLL);
      sub_76940();
      if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v8 = v3;
      }
      else {
        Swift::UInt64 v8 = 0;
      }
      goto LABEL_15;
    default:
      Swift::UInt v6 = 0;
LABEL_6:
      sub_772E0(v6);
      sub_76940();
      if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v7 = v3;
      }
      else {
        Swift::UInt64 v7 = 0;
      }
      sub_77310(v7);
      if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v8 = v4;
      }
      else {
        Swift::UInt64 v8 = 0;
      }
LABEL_15:
      sub_77310(v8);
      return;
  }
}

Swift::Int TranscriptContentViewModel.ID.hashValue.getter()
{
  char v1 = *((unsigned char *)v0 + 32);
  long long v2 = v0[1];
  long long v5 = *v0;
  long long v6 = v2;
  char v7 = v1;
  sub_772D0();
  TranscriptContentViewModel.ID.hash(into:)((uint64_t)v4);
  return sub_77320();
}

Swift::Int sub_1D340()
{
  char v1 = *((unsigned char *)v0 + 32);
  long long v2 = v0[1];
  long long v5 = *v0;
  long long v6 = v2;
  char v7 = v1;
  sub_772D0();
  TranscriptContentViewModel.ID.hash(into:)((uint64_t)v4);
  return sub_77320();
}

uint64_t TranscriptContentViewModel.deinit()
{
  swift_release();
  return v0;
}

uint64_t TranscriptContentViewModel.__deallocating_deinit()
{
  swift_release();

  return _swift_deallocClassInstance(v0, 24, 7);
}

uint64_t sub_1D3F4@<X0>(uint64_t a1@<X8>)
{
  return TranscriptContentViewModel.id.getter(a1);
}

uint64_t sub_1D41C(uint64_t *a1, uint64_t *a2)
{
  return _s19PodcastsTranscripts26TranscriptContentViewModelC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

unint64_t sub_1D428(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v76 = sub_758C0();
  uint64_t v10 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  char v78 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v87 = a6;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A540);
  uint64_t v13 = sub_2512C(&qword_98D20, (uint64_t *)&unk_9A540);
  uint64_t v69 = v12;
  uint64_t v81 = v13;
  if ((sub_76B10() & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_99FB0);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_79870;
    *(double *)&uint64_t v37 = (double)sub_77380();
    *(double *)&uint64_t v38 = (double)sub_77380();
    long long v87 = 0u;
    long long v88 = 0u;
    char v89 = -1;
    type metadata accessor for SilentContent();
    swift_allocObject();
    uint64_t v39 = sub_4B798(0, 0, v37, 0, 0, 0, v38, 0, (uint64_t *)&v87) | 0x4000000000000000;
    type metadata accessor for TranscriptContentViewModel();
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v39;
    *(void *)(v36 + 32) = v40;
    *(void *)&long long v87 = v36;
    sub_769F0();
    return v87;
  }
  uint64_t v68 = a4;
  sub_203C0();
  uint64_t v14 = a1[3];
  uint64_t v67 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v14);
  unint64_t result = sub_757D0();
  uint64_t v17 = *(void *)(result + 16);
  uint64_t v77 = a5;
  if (v17)
  {
    unint64_t v18 = 0;
    uint64_t v73 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v74 = v17;
    uint64_t v66 = v17 - 1;
    unint64_t v19 = result + 56;
    uint64_t v79 = &_swiftEmptyArrayStorage;
    *(void *)&long long v16 = 136315138;
    long long v71 = v16;
    uint64_t v70 = (char *)&type metadata for Any + 8;
    unint64_t v75 = result;
    unint64_t v65 = result + 56;
    do
    {
      uint64_t v20 = (uint64_t *)(v19 + 32 * v18);
      while (1)
      {
        if (v18 >= *(void *)(result + 16)) {
          goto LABEL_74;
        }
        uint64_t v21 = *(v20 - 3);
        uint64_t v22 = *(v20 - 2);
        uint64_t v23 = *(v20 - 1);
        uint64_t v24 = *v20;
        unint64_t v80 = v18 + 1;
        sub_773A0();
        sub_773C0();
        if (sub_77390()) {
          break;
        }
        uint64_t v25 = v78;
        sub_758A0();
        char v26 = sub_758B0();
        os_log_type_t v27 = sub_76B90();
        if (os_log_type_enabled(v26, v27))
        {
          uint64_t v28 = swift_slowAlloc();
          uint64_t v72 = swift_slowAlloc();
          v84[1] = v24;
          uint64_t v85 = v72;
          *(_DWORD *)uint64_t v28 = v71;
          *(void *)&long long v87 = v21;
          *((void *)&v87 + 1) = v22;
          unint64_t v82 = 0;
          unint64_t v83 = 0xE000000000000000;
          v84[0] = v23;
          sub_77100();
          v90._countAndFlagsBits = 3026478;
          v90._object = (void *)0xE300000000000000;
          sub_76970(v90);
          sub_77100();
          *(void *)(v28 + 4) = sub_7D80(v82, v83, &v85);
          swift_bridgeObjectRelease();
          _os_log_impl(&def_1E2E4, v26, v27, "Discarded a reference dynamic ad range that exceeded the max duration. %s", (uint8_t *)v28, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          (*v73)(v78, v76);
        }
        else
        {

          (*v73)(v25, v76);
        }
        v20 += 4;
        unint64_t v18 = v80;
        unint64_t result = v75;
        if (v74 == v80) {
          goto LABEL_20;
        }
      }
      uint64_t v29 = v79;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      long long v86 = v29;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_490EC(0, v29[2] + 1, 1);
        uint64_t v29 = v86;
      }
      uint64_t v31 = v29;
      unint64_t v33 = v29[2];
      unint64_t v32 = v29[3];
      if (v33 >= v32 >> 1)
      {
        sub_490EC(v32 > 1, v33 + 1, 1);
        uint64_t v31 = v86;
      }
      v31[2] = v33 + 1;
      uint64_t v79 = v31;
      uint64_t v34 = &v31[4 * v33];
      v34[4] = v21;
      v34[5] = v22;
      v34[6] = v23;
      v34[7] = v24;
      BOOL v35 = v66 == v18;
      unint64_t result = v75;
      unint64_t v19 = v65;
      unint64_t v18 = v80;
    }
    while (!v35);
  }
  else
  {
    uint64_t v79 = &_swiftEmptyArrayStorage;
  }
LABEL_20:
  swift_bridgeObjectRelease();
  __swift_project_boxed_opaque_existential_1(v67, v67[3]);
  unint64_t result = sub_757C0();
  unint64_t v41 = result;
  uint64_t v42 = &_swiftEmptyArrayStorage;
  unint64_t v80 = *(void *)(result + 16);
  if (v80)
  {
    unint64_t v43 = 0;
    char v44 = 0;
    char v45 = (uint64_t *)(result + 56);
    uint64_t v76 = result;
    do
    {
      if (v43 >= *(void *)(v41 + 16)) {
        goto LABEL_75;
      }
      uint64_t v50 = *(v45 - 3);
      uint64_t v49 = *(v45 - 2);
      uint64_t v51 = *(v45 - 1);
      uint64_t v52 = *v45;
      *(void *)&long long v87 = v50;
      *((void *)&v87 + 1) = v49;
      *(void *)&long long v88 = v51;
      *((void *)&v88 + 1) = v52;
      unint64_t result = sub_1DE50((uint64_t *)&v87);
      if (result)
      {
        unint64_t result = swift_isUniquelyReferenced_nonNull_native();
        v84[0] = (uint64_t)v42;
        char v78 = v44;
        if ((result & 1) == 0)
        {
          unint64_t result = sub_490EC(0, v42[2] + 1, 1);
          uint64_t v42 = (void *)v84[0];
        }
        unint64_t v47 = v42[2];
        unint64_t v46 = v42[3];
        if (v47 >= v46 >> 1)
        {
          unint64_t result = sub_490EC(v46 > 1, v47 + 1, 1);
          uint64_t v42 = (void *)v84[0];
        }
        v42[2] = v47 + 1;
        uint64_t v48 = &v42[4 * v47];
        v48[4] = v50;
        v48[5] = v49;
        v48[6] = v51;
        v48[7] = v52;
        char v44 = v78;
        unint64_t v41 = v76;
      }
      ++v43;
      v45 += 4;
    }
    while (v80 != v43);
  }
  else
  {
    char v44 = 0;
  }
  char v78 = v44;
  swift_bridgeObjectRelease();
  *(void *)&long long v87 = a6;
  v84[0] = (uint64_t)v42;
  unint64_t v82 = (unint64_t)&_swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  unint64_t v53 = v67;
  while (1)
  {
    long long v86 = (void *)a6;
    if ((sub_76B10() & 1) == 0)
    {
      long long v86 = (void *)v84[0];
      __swift_instantiateConcreteTypeFromMangledName(&qword_98D28);
      sub_2512C(&qword_98D30, &qword_98D28);
      if ((sub_76B10() & 1) == 0)
      {
        swift_release();
        swift_bridgeObjectRelease();
        sub_243CC((uint64_t *)&v82);
        sub_24A48((uint64_t *)&v82);
        swift_bridgeObjectRelease();
        return v82;
      }
    }
    unint64_t v54 = a6 >> 62;
    if (a6 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t result = sub_77180();
      if (!result)
      {
LABEL_55:
        swift_bridgeObjectRelease();
LABEL_56:
        uint64_t v60 = sub_208D0(v84, (uint64_t *)&v87, v53, 0);
        long long v86 = (void *)v60;
        sub_21394((uint64_t *)&v86, v53);
        unint64_t v61 = v82;
        if (v82 >> 62)
        {
          swift_retain();
          swift_bridgeObjectRetain();
          uint64_t v62 = sub_77180();
          if (v62)
          {
LABEL_58:
            unint64_t result = v62 - 1;
            if (__OFSUB__(v62, 1)) {
              goto LABEL_71;
            }
            if ((v61 & 0xC000000000000001) != 0)
            {
              uint64_t v62 = sub_77080();
            }
            else
            {
              if ((result & 0x8000000000000000) != 0) {
                goto LABEL_72;
              }
              if (result >= *(void *)((char *)&dword_10 + (v61 & 0xFFFFFFFFFFFFFF8))) {
                goto LABEL_73;
              }
              uint64_t v62 = *(void *)(v61 + 8 * result + 32);
              swift_retain();
            }
          }
        }
        else
        {
          uint64_t v62 = *(void *)((char *)&dword_10 + (v82 & 0xFFFFFFFFFFFFFF8));
          swift_retain();
          swift_bridgeObjectRetain();
          if (v62) {
            goto LABEL_58;
          }
        }
        swift_bridgeObjectRelease();
        BOOL v63 = sub_2239C(v60, v62);
        swift_release();
        swift_release();
        if (v63)
        {
          uint64_t v64 = swift_retain();
          sub_22D00(v64, (uint64_t *)&v82);
          swift_release();
          sub_23B5C((uint64_t *)&v82);
        }
        goto LABEL_32;
      }
    }
    else
    {
      uint64_t v55 = *(void *)((char *)&dword_10 + (a6 & 0xFFFFFFFFFFFFFF8));
      unint64_t result = swift_bridgeObjectRetain();
      if (!v55) {
        goto LABEL_55;
      }
    }
    if ((a6 & 0xC000000000000001) == 0) {
      break;
    }
    sub_77080();
LABEL_40:
    swift_bridgeObjectRelease();
    char v56 = sub_1E13C((uint64_t)v79);
    unint64_t result = swift_release();
    if ((v56 & 1) == 0) {
      goto LABEL_56;
    }
    if (v54)
    {
      swift_bridgeObjectRetain();
      uint64_t v57 = sub_77180();
      unint64_t result = swift_bridgeObjectRelease();
      if (!v57) {
        goto LABEL_78;
      }
      swift_bridgeObjectRetain();
      uint64_t v58 = sub_77180();
      unint64_t result = swift_bridgeObjectRelease();
      if (!v58) {
        goto LABEL_76;
      }
    }
    else if (!*(void *)((char *)&dword_10 + (a6 & 0xFFFFFFFFFFFFFF8)))
    {
      goto LABEL_77;
    }
    if ((a6 & 0xC000000000000001) != 0)
    {
      unint64_t result = sub_77080();
      if (v54) {
        goto LABEL_51;
      }
    }
    else
    {
      if (!*(void *)((char *)&dword_10 + (a6 & 0xFFFFFFFFFFFFFF8))) {
        goto LABEL_80;
      }
      unint64_t result = swift_retain();
      if (v54)
      {
LABEL_51:
        swift_bridgeObjectRetain();
        uint64_t v59 = sub_77180();
        unint64_t result = swift_bridgeObjectRelease();
        goto LABEL_52;
      }
    }
    uint64_t v59 = *(void *)((char *)&dword_10 + (a6 & 0xFFFFFFFFFFFFFF8));
LABEL_52:
    if (!v59) {
      goto LABEL_79;
    }
    sub_2046C(0, 1);
LABEL_32:
    swift_release();
    a6 = v87;
  }
  if (*(void *)((char *)&dword_10 + (a6 & 0xFFFFFFFFFFFFFF8)))
  {
    swift_retain();
    goto LABEL_40;
  }
  __break(1u);
LABEL_71:
  __break(1u);
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
  return result;
}

uint64_t sub_1DE50(uint64_t *a1)
{
  uint64_t v21 = sub_758C0();
  uint64_t v3 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  long long v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v9 = a1[2];
  uint64_t v8 = a1[3];
  sub_773A0();
  sub_773C0();
  if (sub_77390())
  {
    sub_773A0();
    sub_75630();
    sub_773C0();
    return sub_77390() & 1;
  }
  else
  {
    sub_758A0();
    uint64_t v11 = sub_758B0();
    os_log_type_t v12 = sub_76B90();
    int v13 = v12;
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v14 = swift_slowAlloc();
      int v18 = v13;
      Swift::String v15 = (uint8_t *)v14;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v27 = v6;
      uint64_t v28 = v19;
      uint64_t v20 = v1;
      *(_DWORD *)Swift::String v15 = 136315138;
      v16[1] = v15 + 4;
      uint64_t v17 = v15;
      uint64_t v25 = v8;
      uint64_t v26 = v7;
      uint64_t v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      uint64_t v24 = v9;
      sub_77100();
      v29._countAndFlagsBits = 3026478;
      v29._object = (void *)0xE300000000000000;
      sub_76970(v29);
      sub_77100();
      uint64_t v26 = sub_7D80(v22, v23, &v28);
      sub_76F90();
      swift_bridgeObjectRelease();
      _os_log_impl(&def_1E2E4, v11, (os_log_type_t)v18, "Discarded a player dynamic ad range that exceeded the max duration. %s", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
    return 0;
  }
}

uint64_t sub_1E13C(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16) >> 62;
  switch(v2)
  {
    case 1:
      long long v5 = (unint64_t *)&unk_99F90;
      uint64_t v6 = type metadata accessor for SilentContent;
      goto LABEL_6;
    case 2:
      long long v5 = &qword_98D10;
      uint64_t v6 = type metadata accessor for SpeakerContent;
      goto LABEL_6;
    case 3:
      long long v5 = (unint64_t *)&qword_99F80;
      uint64_t v6 = type metadata accessor for ChapterTitleContent;
LABEL_6:
      uint64_t v4 = sub_251A4(v5, (void (*)(uint64_t))v6);
      break;
    default:
      uint64_t v4 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
      break;
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 16);
  swift_retain();
  v8(ObjectType, v4);
  char v10 = v9;
  swift_release();
  if (v10) {
    return 0;
  }
  switch((int)v2)
  {
    case 0:
      uint64_t v11 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
      goto LABEL_14;
    case 1:
      os_log_type_t v12 = (unint64_t *)&unk_99F90;
      int v13 = type metadata accessor for SilentContent;
      goto LABEL_13;
    case 2:
      os_log_type_t v12 = &qword_98D10;
      int v13 = type metadata accessor for SpeakerContent;
      goto LABEL_13;
    case 3:
      os_log_type_t v12 = (unint64_t *)&qword_99F80;
      int v13 = type metadata accessor for ChapterTitleContent;
LABEL_13:
      uint64_t v11 = sub_251A4(v12, (void (*)(uint64_t))v13);
LABEL_14:
      uint64_t v14 = swift_getObjectType();
      swift_retain();
      sub_2D884(v14, v11);
      char v16 = v15;
      swift_release();
      if (v16) {
        return 0;
      }
      uint64_t v17 = *(void *)(a1 + 16);
      if (!v17) {
        return 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v18 = a1 + 56;
      break;
    default:
      JUMPOUT(0);
  }
  do
  {
    sub_773C0();
    if (sub_77390())
    {
      sub_773C0();
      if (sub_77390())
      {
        uint64_t v19 = 1;
        goto LABEL_24;
      }
    }
    v18 += 32;
    --v17;
  }
  while (v17);
  uint64_t v19 = 0;
LABEL_24:
  swift_bridgeObjectRelease();
  return v19;
}

void *sub_1E4CC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_765B0();
  double v5 = *(double *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v72 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v77 = (char *)&v71 - v8;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v71 - v10;
  uint64_t v83 = a1;
  unint64_t v84 = a2;
  unint64_t v82 = (unint64_t)&_swiftEmptyArrayStorage;
  if (a2 >> 62) {
    goto LABEL_106;
  }
  uint64_t v12 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  if (!v12)
  {
LABEL_107:
    swift_bridgeObjectRelease();
    uint64_t v69 = &_swiftEmptyArrayStorage;
    goto LABEL_108;
  }
LABEL_3:
  uint64_t v79 = *(void *)&v5 + 16;
  unint64_t v80 = (void (**)(char *, uint64_t))(*(void *)&v5 + 8);
  long long v71 = xmmword_79880;
  double v73 = v5;
  uint64_t v74 = v4;
  unint64_t v75 = v11;
  while (1)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v13 = sub_77080();
    }
    else
    {
      if (!*(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8))) {
        goto LABEL_97;
      }
      uint64_t v13 = *(void *)(a2 + 32);
      swift_retain();
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = v83;
    if (!*(void *)(v83 + 16)) {
      break;
    }
    unint64_t v76 = a2 & 0xC000000000000001;
    uint64_t v15 = v83
        + ((*(unsigned __int8 *)(*(void *)&v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)&v5 + 80));
    char v16 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)&v5 + 16);
    v16(v11, v15, v4);
    unint64_t v17 = *(void *)(v13 + 16);
    uint64_t v78 = v13;
    switch(v17 >> 62)
    {
      case 1uLL:
        uint64_t v19 = type metadata accessor for SilentContent;
        uint64_t v20 = (unint64_t *)&unk_99F90;
        goto LABEL_13;
      case 2uLL:
        uint64_t v19 = type metadata accessor for SpeakerContent;
        uint64_t v20 = &qword_98D10;
        goto LABEL_13;
      case 3uLL:
        uint64_t v19 = type metadata accessor for ChapterTitleContent;
        uint64_t v20 = (unint64_t *)&qword_99F80;
LABEL_13:
        uint64_t v18 = sub_251A4(v20, (void (*)(uint64_t))v19);
        break;
      default:
        uint64_t v18 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
        break;
    }
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v18 + 56);
    swift_retain();
    double v5 = COERCE_DOUBLE(v22(ObjectType, v18));
    char v24 = v23;
    swift_release();
    if (v24)
    {
      unint64_t v29 = a2 >> 62;
      uint64_t v11 = v75;
      uint64_t v4 = v78;
      if (!(a2 >> 62))
      {
        if (*(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8))) {
          goto LABEL_26;
        }
LABEL_98:
        __break(1u);
LABEL_99:
        __break(1u);
LABEL_100:
        __break(1u);
LABEL_101:
        __break(1u);
LABEL_102:
        __break(1u);
LABEL_103:
        __break(1u);
LABEL_104:
        __break(1u);
LABEL_105:
        __break(1u);
LABEL_106:
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        if (!sub_77180()) {
          goto LABEL_107;
        }
        goto LABEL_3;
      }
      swift_bridgeObjectRetain();
      uint64_t v64 = sub_77180();
      swift_bridgeObjectRelease();
      if (!v64) {
        goto LABEL_98;
      }
      swift_bridgeObjectRetain();
      uint64_t v65 = sub_77180();
      swift_bridgeObjectRelease();
      if (!v65) {
        goto LABEL_99;
      }
LABEL_26:
      if (v76)
      {
        sub_77080();
        if (!v29) {
          goto LABEL_28;
        }
LABEL_37:
        swift_bridgeObjectRetain();
        uint64_t v30 = sub_77180();
        swift_bridgeObjectRelease();
      }
      else
      {
        if (!*(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8))) {
          goto LABEL_101;
        }
        swift_retain();
        if (v29) {
          goto LABEL_37;
        }
LABEL_28:
        uint64_t v30 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
      }
      if (!v30) {
        goto LABEL_100;
      }
      goto LABEL_51;
    }
    uint64_t v4 = v78;
    uint64_t v11 = v75;
    if (!(*(void *)(v78 + 16) >> 62))
    {
      swift_retain();
      if ((sub_756C0() & 1) == 0)
      {
        unint64_t v35 = a2 >> 62;
        if (a2 >> 62)
        {
          swift_bridgeObjectRetain();
          double v5 = COERCE_DOUBLE(sub_77180());
          swift_bridgeObjectRelease();
          if (v5 == 0.0) {
            goto LABEL_104;
          }
          swift_bridgeObjectRetain();
          uint64_t v68 = sub_77180();
          swift_bridgeObjectRelease();
          if (!v68) {
            goto LABEL_105;
          }
        }
        else if (!*(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8)))
        {
          goto LABEL_104;
        }
        if (v76)
        {
          sub_77080();
          if (!v35) {
            goto LABEL_44;
          }
LABEL_63:
          swift_bridgeObjectRetain();
          uint64_t v36 = sub_77180();
          swift_bridgeObjectRelease();
        }
        else
        {
          if (!*(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8)))
          {
LABEL_113:
            __break(1u);
            goto LABEL_114;
          }
          swift_retain();
          if (v35) {
            goto LABEL_63;
          }
LABEL_44:
          uint64_t v36 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
        }
        if (v36)
        {
          sub_2046C(0, 1);
          sub_769B0();
          if (*(void *)((char *)&dword_10 + (v82 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                         + (v82 & 0xFFFFFFFFFFFFFF8)) >> 1)
            sub_76A00();
          sub_76A20();
          sub_769F0();
          swift_release();
          goto LABEL_54;
        }
        goto LABEL_112;
      }
      swift_release();
    }
    double v25 = v5;
    sub_765A0();
    if (v26 > v5)
    {
      unint64_t v27 = a2 >> 62;
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v66 = sub_77180();
        swift_bridgeObjectRelease();
        if (!v66) {
          goto LABEL_102;
        }
        swift_bridgeObjectRetain();
        uint64_t v67 = sub_77180();
        swift_bridgeObjectRelease();
        if (!v67) {
          goto LABEL_103;
        }
      }
      else if (!*(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8)))
      {
        goto LABEL_102;
      }
      if (v76)
      {
        sub_77080();
        if (!v27)
        {
LABEL_23:
          uint64_t v28 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
LABEL_50:
          if (v28)
          {
LABEL_51:
            sub_2046C(0, 1);
            sub_769B0();
            if (*(void *)((char *)&dword_10 + (v82 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                           + (v82 & 0xFFFFFFFFFFFFFF8)) >> 1)
              sub_76A00();
            sub_76A20();
            sub_769F0();
LABEL_54:
            swift_release();
            uint64_t v4 = v74;
            (*v80)(v11, v74);
            double v5 = v73;
            goto LABEL_55;
          }
          __break(1u);
          goto LABEL_111;
        }
      }
      else
      {
        if (!*(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8)))
        {
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
          goto LABEL_113;
        }
        swift_retain();
        if (!v27) {
          goto LABEL_23;
        }
      }
      swift_bridgeObjectRetain();
      uint64_t v28 = sub_77180();
      swift_bridgeObjectRelease();
      goto LABEL_50;
    }
    uint64_t v11 = *(char **)(v14 + 16);
    double v5 = v73;
    uint64_t v4 = v74;
    if (!v11)
    {
      uint64_t v34 = *v80;
LABEL_46:
      uint64_t v11 = v75;
      v34(v75, v4);
      swift_release();
      goto LABEL_55;
    }
    swift_bridgeObjectRetain();
    while (1)
    {
      if ((uint64_t)v11 > *(void *)(v14 + 16))
      {
        __break(1u);
LABEL_97:
        __break(1u);
        goto LABEL_98;
      }
      a2 = (unint64_t)(v11 - 1);
      uint64_t v31 = v77;
      v16(v77, v15 + *(void *)(*(void *)&v5 + 72) * (void)(v11 - 1), v4);
      sub_765A0();
      double v33 = v32;
      uint64_t v34 = *(void (**)(char *, uint64_t))(*(void *)&v5 + 8);
      v34(v31, v4);
      if (v33 <= v25) {
        break;
      }
      --v11;
      if (!a2)
      {
        swift_bridgeObjectRelease();
        goto LABEL_46;
      }
    }
    swift_bridgeObjectRelease();
    sub_1F150((unint64_t)(v11 - 1), (uint64_t)v72);
    sub_765A0();
    if (v25 + -30.0 >= v38)
    {
      switch(*(void *)(v78 + 16) >> 62)
      {
        case 1:
          unint64_t v47 = type metadata accessor for SilentContent;
          uint64_t v48 = (unint64_t *)&unk_99F90;
          goto LABEL_73;
        case 2:
          unint64_t v47 = type metadata accessor for SpeakerContent;
          uint64_t v48 = &qword_98D10;
          goto LABEL_73;
        case 3:
          unint64_t v47 = type metadata accessor for ChapterTitleContent;
          uint64_t v48 = (unint64_t *)&qword_99F80;
LABEL_73:
          uint64_t v46 = sub_251A4(v48, (void (*)(uint64_t))v47);
          break;
        default:
          uint64_t v46 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
          break;
      }
      uint64_t v49 = swift_getObjectType();
      uint64_t v50 = *(uint64_t (**)(uint64_t, uint64_t))(v46 + 32);
      swift_retain();
      double v51 = COERCE_DOUBLE(v50(v49, v46));
      char v53 = v52;
      swift_release();
      if ((v53 & 1) == 0)
      {
        sub_765A0();
        if (v51 + -10.0 < v54)
        {
          uint64_t v55 = sub_76590();
          uint64_t v57 = v56;
          sub_765A0();
          uint64_t v59 = v58;
          type metadata accessor for ChapterTitleContent();
          uint64_t v60 = swift_allocObject();
          *(_OWORD *)(v60 + 96) = v71;
          *(void *)(v60 + 16) = v55;
          *(void *)(v60 + 24) = v57;
          *(void *)(v60 + 32) = 0;
          *(unsigned char *)(v60 + 40) = 1;
          *(void *)(v60 + 48) = 0;
          *(unsigned char *)(v60 + 56) = 1;
          *(void *)(v60 + 64) = v59;
          *(unsigned char *)(v60 + 72) = 0;
          *(void *)(v60 + 80) = v59;
          *(unsigned char *)(v60 + 88) = 0;
          *(void *)(v60 + 112) = v55;
          *(void *)(v60 + 120) = v57;
          unint64_t v61 = v60 | 0xC000000000000000;
          *(void *)(v60 + 128) = v59;
          type metadata accessor for TranscriptContentViewModel();
          *(void *)(swift_allocObject() + 16) = v61;
          swift_bridgeObjectRetain();
          sub_769B0();
          if (*(void *)((char *)&dword_10 + (v82 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                         + (v82 & 0xFFFFFFFFFFFFFF8)) >> 1)
            goto LABEL_77;
          goto LABEL_60;
        }
      }
    }
    else
    {
      uint64_t v39 = sub_76590();
      uint64_t v41 = v40;
      sub_765A0();
      uint64_t v43 = v42;
      type metadata accessor for ChapterTitleContent();
      uint64_t v44 = swift_allocObject();
      *(_OWORD *)(v44 + 96) = v71;
      *(void *)(v44 + 16) = v39;
      *(void *)(v44 + 24) = v41;
      *(void *)(v44 + 32) = 0;
      *(unsigned char *)(v44 + 40) = 1;
      *(void *)(v44 + 48) = 0;
      *(unsigned char *)(v44 + 56) = 1;
      *(void *)(v44 + 64) = v43;
      *(unsigned char *)(v44 + 72) = 0;
      *(void *)(v44 + 80) = v43;
      *(unsigned char *)(v44 + 88) = 0;
      *(void *)(v44 + 112) = v39;
      *(void *)(v44 + 120) = v41;
      unint64_t v45 = v44 | 0xC000000000000000;
      *(void *)(v44 + 128) = v43;
      type metadata accessor for TranscriptContentViewModel();
      *(void *)(swift_allocObject() + 16) = v45;
      swift_bridgeObjectRetain();
      sub_769B0();
      if (*(void *)((char *)&dword_10 + (v82 & 0xFFFFFFFFFFFFFF8)) < *(void *)((char *)&dword_18
                                                                                    + (v82 & 0xFFFFFFFFFFFFFF8)) >> 1)
        goto LABEL_60;
LABEL_77:
      sub_76A00();
LABEL_60:
      sub_76A20();
      sub_769F0();
    }
    BOOL v62 = v11 == (unsigned char *)&def_1E2E4 + 1;
    double v5 = v73;
    uint64_t v4 = v74;
    uint64_t v11 = v75;
    if (!v62)
    {
      if (*(void *)(v83 + 16) >= (int64_t)a2)
      {
        sub_24F00(0, a2);
        goto LABEL_81;
      }
LABEL_114:
      __break(1u);
      JUMPOUT(0x1F130);
    }
LABEL_81:
    swift_release();
    v34(v72, v4);
    v34(v11, v4);
LABEL_55:
    a2 = v84;
    if (v84 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v63 = sub_77180();
      swift_bridgeObjectRelease();
      if (!v63)
      {
LABEL_95:
        swift_bridgeObjectRelease();
        uint64_t v69 = (void *)v82;
LABEL_108:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v69;
      }
    }
    else
    {
      uint64_t v37 = *(void *)((char *)&dword_10 + (v84 & 0xFFFFFFFFFFFFFF8));
      swift_bridgeObjectRetain();
      if (!v37) {
        goto LABEL_95;
      }
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v81 = v82;
  sub_6B0F0(a2);
  swift_release();
  return (void *)v81;
}

uint64_t sub_1F150@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_1F980(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = sub_765B0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 72);
  unint64_t v11 = v5 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)) + v10 * a1;
  uint64_t result = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v9 + 32))(a2, v11, v8);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = sub_771D0();
    __break(1u);
    return result;
  }
  if (v10 > 0 || v11 >= v11 + v10 + v10 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v10)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1F2AC(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_98580);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v16 = &_swiftEmptyArrayStorage;
  uint64_t v7 = sub_756A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  if (!(a2 >> 62))
  {
    uint64_t v8 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    uint64_t v13 = v16;
    swift_bridgeObjectRetain();
    sub_202F8((uint64_t)v6);
    swift_bridgeObjectRelease();
    return (uint64_t)v13;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_77180();
  uint64_t v8 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v8 >= 1)
  {
    if ((a2 & 0xC000000000000001) != 0)
    {
      uint64_t v10 = 0;
      do
      {
        ++v10;
        uint64_t v15 = sub_77080();
        sub_1F490(&v15, (uint64_t)v6, a1, &v16);
        swift_unknownObjectRelease();
      }
      while (v8 != v10);
    }
    else
    {
      uint64_t v11 = 0;
      do
      {
        uint64_t v12 = *(void *)(a2 + 8 * v11++ + 32);
        uint64_t v15 = v12;
        swift_retain();
        sub_1F490(&v15, (uint64_t)v6, a1, &v16);
        swift_release();
      }
      while (v8 != v11);
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1F490(uint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v44 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_98580);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_756A0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = *a1;
  unint64_t v17 = *(void *)(*a1 + 16);
  if (!(v17 >> 62))
  {
    uint64_t v43 = (char *)v39 - v15;
    uint64_t v45 = a2;
    uint64_t v42 = v17 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_speaker;
    sub_1235C(v17 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_speaker, (uint64_t)v9);
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    if (v18((uint64_t)v9, 1, v10) == 1)
    {
      swift_retain();
      sub_202F8((uint64_t)v9);
      uint64_t v19 = v42;
    }
    else
    {
      v39[1] = v16;
      uint64_t v20 = v10;
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v43, v9, v10);
      swift_retain();
      v39[0] = sub_75680();
      uint64_t v22 = v21;
      uint64_t v23 = v45;
      int v24 = v18(v45, 1, v20);
      uint64_t v40 = v20;
      uint64_t v41 = v11;
      if (v24)
      {
        swift_bridgeObjectRelease();
        char v25 = 1;
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v23, v20);
        uint64_t v26 = sub_75680();
        uint64_t v28 = v27;
        (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v20);
        if (v39[0] == v26 && v22 == v28)
        {
          swift_bridgeObjectRelease_n();
          char v25 = 0;
        }
        else
        {
          char v30 = sub_77230();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          char v25 = v30 ^ 1;
        }
      }
      uint64_t v19 = v42;
      uint64_t v31 = *(void *)(v17 + 24);
      v46[0] = *(void *)(v17 + 16);
      v46[1] = v31;
      long long v47 = *(_OWORD *)(v17 + 32);
      swift_bridgeObjectRetain();
      double v32 = v43;
      uint64_t v33 = sub_75690();
      uint64_t v35 = v34;
      type metadata accessor for SpeakerContent();
      swift_allocObject();
      uint64_t v36 = v44;
      swift_retain();
      uint64_t v37 = sub_36430(v46, v33, v35, v25 & 1, v36);
      swift_release();
      type metadata accessor for TranscriptContentViewModel();
      *(void *)(swift_allocObject() + 16) = v37 | 0x8000000000000000;
      swift_retain();
      sub_769B0();
      if (*(void *)((char *)&dword_10 + (*a4 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                     + (*a4 & 0xFFFFFFFFFFFFFF8)) >> 1)
        sub_76A00();
      sub_76A20();
      sub_769F0();
      swift_release();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v32, v40);
    }
    sub_20358(v19, v45);
    swift_release();
  }
  swift_retain();
  sub_769B0();
  if (*(void *)((char *)&dword_10 + (*a4 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                 + (*a4 & 0xFFFFFFFFFFFFFF8)) >> 1)
    sub_76A00();
  sub_76A20();
  return sub_769F0();
}

uint64_t TranscriptContentViewModel.description.getter()
{
  unint64_t v1 = *(void *)(v0 + 16);
  swift_retain();
  uint64_t v2 = sub_1CCBC(v1);
  swift_release();
  return v2;
}

uint64_t sub_1F918()
{
  unint64_t v1 = *(void *)(*(void *)v0 + 16);
  swift_retain();
  uint64_t v2 = sub_1CCBC(v1);
  swift_release();
  return v2;
}

uint64_t sub_1F980(unint64_t a1)
{
  return sub_3EF28(0, *(void *)(a1 + 16), 0, a1);
}

uint64_t _s19PodcastsTranscripts26TranscriptContentViewModelC2IDO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(uint64_t *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  char v6 = *(unsigned char *)(a1 + 32);
  uint64_t v8 = *(void *)a2;
  uint64_t v7 = *(void *)(a2 + 8);
  uint64_t v10 = *(uint64_t *)(a2 + 16);
  uint64_t v9 = *(void *)(a2 + 24);
  int v11 = *(unsigned __int8 *)(a2 + 32);
  switch(v6)
  {
    case 1:
      if (v11 != 1) {
        goto LABEL_26;
      }
      uint64_t v33 = *(void *)a2;
      uint64_t v34 = v3;
      sub_8944(v8, v7, v10, v9, 1);
      sub_8944(v3, v2, v5, v4, 1);
      sub_8944(v8, v7, v10, v9, 1);
      sub_8944(v3, v2, v5, v4, 1);
      char v19 = static SilentContent.ID.== infix(_:_:)(&v34, &v33);
      sub_88A0(v3, v2, v5, v4, 1);
      sub_88A0(v8, v7, v10, v9, 1);
      sub_88A0(v8, v7, v10, v9, 1);
      sub_88A0(v3, v2, v5, v4, 1);
      return v19 & 1;
    case 2:
      if (v11 != 2) {
        goto LABEL_26;
      }
      double v12 = *(double *)(a1 + 16);
      double v13 = *(double *)(a1 + 24);
      double v14 = *(double *)(a2 + 16);
      double v15 = *(double *)(a2 + 24);
      uint64_t v20 = *(void *)a1;
      if (v3 == v8 && v2 == v7)
      {
        sub_8944(v20, v2, v10, v9, 2);
        sub_8944(v3, v2, v5, v4, 2);
        sub_88A0(v3, v2, v5, v4, 2);
        uint64_t v26 = v3;
        uint64_t v27 = v2;
        uint64_t v28 = v10;
        uint64_t v29 = v9;
        char v30 = 2;
        goto LABEL_32;
      }
      char v22 = sub_77230();
      sub_8944(v8, v7, v10, v9, 2);
      sub_8944(v3, v2, v5, v4, 2);
      sub_88A0(v3, v2, v5, v4, 2);
      sub_88A0(v8, v7, v10, v9, 2);
      if (v22) {
        goto LABEL_33;
      }
      goto LABEL_27;
    case 3:
      if (v11 != 3) {
        goto LABEL_26;
      }
      uint64_t v23 = *(void *)a1;
      if (v3 == v8 && v2 == v7)
      {
        sub_8944(v23, v2, v10, v9, 3);
        sub_8944(v3, v2, v5, v4, 3);
        sub_88A0(v3, v2, v5, v4, 3);
        sub_88A0(v3, v2, v10, v9, 3);
        if (*(double *)&v5 == *(double *)&v10) {
          goto LABEL_38;
        }
      }
      else
      {
        char v25 = sub_77230();
        sub_8944(v8, v7, v10, v9, 3);
        sub_8944(v3, v2, v5, v4, 3);
        sub_88A0(v3, v2, v5, v4, 3);
        sub_88A0(v8, v7, v10, v9, 3);
        if ((v25 & 1) != 0 && *(double *)&v5 == *(double *)&v10) {
          goto LABEL_38;
        }
      }
      goto LABEL_27;
    default:
      if (*(unsigned char *)(a2 + 32))
      {
LABEL_26:
        sub_8944(*(void *)a2, *(void *)(a2 + 8), v10, v9, v11);
        sub_8944(v3, v2, v5, v4, v6);
        sub_88A0(v3, v2, v5, v4, v6);
        sub_88A0(v8, v7, v10, v9, v11);
LABEL_27:
        char v19 = 0;
        return v19 & 1;
      }
      double v12 = *(double *)(a1 + 16);
      double v13 = *(double *)(a1 + 24);
      double v14 = *(double *)(a2 + 16);
      double v15 = *(double *)(a2 + 24);
      uint64_t v16 = *(void *)a1;
      if (v3 == v8 && v2 == v7)
      {
        sub_8944(v16, v2, v10, v9, 0);
        sub_8944(v3, v2, v5, v4, 0);
        sub_88A0(v3, v2, v5, v4, 0);
        uint64_t v26 = v3;
        uint64_t v27 = v2;
        uint64_t v28 = v10;
        uint64_t v29 = v9;
        char v30 = 0;
LABEL_32:
        sub_88A0(v26, v27, v28, v29, v30);
      }
      else
      {
        char v18 = sub_77230();
        sub_8944(v8, v7, v10, v9, 0);
        sub_8944(v3, v2, v5, v4, 0);
        sub_88A0(v3, v2, v5, v4, 0);
        sub_88A0(v8, v7, v10, v9, 0);
        if ((v18 & 1) == 0) {
          goto LABEL_27;
        }
      }
LABEL_33:
      if (v12 != v14 || v13 != v15) {
        goto LABEL_27;
      }
LABEL_38:
      char v19 = 1;
      return v19 & 1;
  }
}

uint64_t _s19PodcastsTranscripts26TranscriptContentViewModelC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = v2 >> 62;
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t v6 = *(void *)((char *)&dword_10 + (v2 & 0x3FFFFFFFFFFFFFFFLL));
      swift_retain();
      uint64_t v5 = 0;
      uint64_t v7 = 0;
      goto LABEL_7;
    case 2uLL:
      uint64_t v9 = (void *)(v2 & 0x3FFFFFFFFFFFFFFFLL);
      uint64_t v6 = v9[5];
      uint64_t v5 = v9[6];
      uint64_t v7 = v9[7];
      uint64_t v8 = v9[8];
      goto LABEL_4;
    case 3uLL:
      uint64_t v10 = (void *)(v2 & 0x3FFFFFFFFFFFFFFFLL);
      uint64_t v6 = v10[14];
      uint64_t v5 = v10[15];
      uint64_t v7 = v10[16];
      swift_bridgeObjectRetain();
LABEL_7:
      uint64_t v8 = 0;
      goto LABEL_8;
    default:
      uint64_t v6 = *(void *)(v2 + 16);
      uint64_t v5 = *(void *)(v2 + 24);
      uint64_t v7 = *(void *)(v2 + 32);
      uint64_t v8 = *(void *)(v2 + 40);
LABEL_4:
      swift_bridgeObjectRetain();
LABEL_8:
      v24[0] = v6;
      v24[1] = v5;
      v24[2] = v7;
      v24[3] = v8;
      char v25 = v3;
      unint64_t v11 = *(void *)(a2 + 16);
      unint64_t v12 = v11 >> 62;
      uint64_t v21 = v7;
      switch(v11 >> 62)
      {
        case 1uLL:
          uint64_t v13 = *(void *)((char *)&dword_10 + (v11 & 0x3FFFFFFFFFFFFFFFLL));
          swift_retain();
          uint64_t v14 = 0;
          uint64_t v15 = 0;
          goto LABEL_14;
        case 2uLL:
          unint64_t v17 = (void *)(v11 & 0x3FFFFFFFFFFFFFFFLL);
          uint64_t v13 = v17[5];
          uint64_t v14 = v17[6];
          uint64_t v15 = v17[7];
          uint64_t v16 = v17[8];
          goto LABEL_11;
        case 3uLL:
          char v18 = (void *)(v11 & 0x3FFFFFFFFFFFFFFFLL);
          uint64_t v13 = v18[14];
          uint64_t v14 = v18[15];
          uint64_t v15 = v18[16];
          swift_bridgeObjectRetain();
LABEL_14:
          uint64_t v16 = 0;
          goto LABEL_15;
        default:
          uint64_t v13 = *(void *)(v11 + 16);
          uint64_t v14 = *(void *)(v11 + 24);
          uint64_t v15 = *(void *)(v11 + 32);
          uint64_t v16 = *(void *)(v11 + 40);
LABEL_11:
          swift_bridgeObjectRetain();
LABEL_15:
          v22[0] = v13;
          v22[1] = v14;
          v22[2] = v15;
          v22[3] = v16;
          char v23 = v12;
          char v19 = _s19PodcastsTranscripts26TranscriptContentViewModelC2IDO2eeoiySbAE_AEtFZ_0((uint64_t)v24, (uint64_t)v22);
          sub_88A0(v13, v14, v15, v16, v12);
          sub_88A0(v6, v5, v21, v8, v3);
          return v19 & 1;
      }
  }
}

unint64_t sub_2006C()
{
  unint64_t result = qword_98C68;
  if (!qword_98C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98C68);
  }
  return result;
}

uint64_t type metadata accessor for TranscriptContentViewModel()
{
  return self;
}

uint64_t method lookup function for TranscriptContentViewModel(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for TranscriptContentViewModel);
}

uint64_t destroy for TranscriptContentViewModel.ID(uint64_t a1)
{
  return sub_88A0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
}

uint64_t initializeWithCopy for TranscriptContentViewModel.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_8944(*(void *)a2, v4, v5, v6, v7);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(unsigned char *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for TranscriptContentViewModel.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  char v7 = *(unsigned char *)(a2 + 32);
  sub_8944(*(void *)a2, v4, v5, v6, v7);
  uint64_t v8 = *(void *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  uint64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = *(void *)(a1 + 24);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  char v12 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v7;
  sub_88A0(v8, v9, v10, v11, v12);
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TranscriptContentViewModel.ID(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  long long v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  char v9 = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(a1 + 32) = v3;
  sub_88A0(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptContentViewModel.ID(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptContentViewModel.ID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 253;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_202D8(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_202E0(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptContentViewModel.ID()
{
  return &type metadata for TranscriptContentViewModel.ID;
}

uint64_t sub_202F8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_98580);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20358(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_98580);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

double sub_203C0()
{
  if (sub_77380() < 720) {
    return 240.0;
  }
  uint64_t v1 = sub_77380();
  uint64_t v2 = sub_77380();
  uint64_t v3 = v2;
  if (v1 > 1799)
  {
    double v4 = (double)sub_77380();
    if (v3 > 3599) {
      double v5 = 0.2;
    }
    else {
      double v5 = 0.27;
    }
  }
  else
  {
    double v4 = (double)v2;
    double v5 = 0.33;
  }
  return v4 * v5;
}

uint64_t sub_2046C(uint64_t a1, uint64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = a2;
    uint64_t v4 = a1;
    if (!((unint64_t)*v3 >> 62))
    {
      if (*(void *)((char *)&dword_10 + (*v3 & 0xFFFFFFFFFFFFFF8)) >= a2) {
        goto LABEL_4;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_77180();
  swift_bridgeObjectRelease();
  if (v20 < v2) {
    goto LABEL_29;
  }
LABEL_4:
  uint64_t v6 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v5 = v4 - v2;
  if (__OFSUB__(0, v6))
  {
LABEL_31:
    __break(1u);
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_77180();
    swift_bridgeObjectRelease();
    uint64_t v8 = v21 + v5;
    if (!__OFADD__(v21, v5)) {
      goto LABEL_8;
    }
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if ((unint64_t)*v3 >> 62) {
    goto LABEL_32;
  }
  uint64_t v7 = *(void *)((char *)&dword_10 + (*v3 & 0xFFFFFFFFFFFFFF8));
  uint64_t v8 = v7 - v6;
  if (__OFADD__(v7, v5)) {
    goto LABEL_34;
  }
LABEL_8:
  unint64_t v9 = *v3;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  uint64_t *v3 = v9;
  if (!isUniquelyReferenced_nonNull_bridgeObject
    || (v9 & 0x8000000000000000) != 0
    || (v9 & 0x4000000000000000) != 0
    || (uint64_t v11 = v9 & 0xFFFFFFFFFFFFFF8, v8 > *(void *)((char *)&dword_18 + (v9 & 0xFFFFFFFFFFFFFF8)) >> 1))
  {
    if (!(v9 >> 62))
    {
LABEL_13:
      swift_bridgeObjectRetain();
      uint64_t *v3 = sub_77090();
      swift_bridgeObjectRelease();
      uint64_t v11 = *v3 & 0xFFFFFFFFFFFFFF8;
      goto LABEL_14;
    }
LABEL_35:
    swift_bridgeObjectRetain();
    sub_77180();
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_14:
  uint64_t v12 = v11 + 32;
  uint64_t v13 = (char *)(v11 + 32 + 8 * v4);
  type metadata accessor for TranscriptContentViewModel();
  swift_arrayDestroy();
  if (v5)
  {
    if ((unint64_t)*v3 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = sub_77180();
      swift_bridgeObjectRelease();
      uint64_t v15 = v22 - v2;
      if (!__OFSUB__(v22, v2))
      {
LABEL_17:
        if (v15 < 0)
        {
LABEL_42:
          uint64_t result = sub_771D0();
          __break(1u);
          return result;
        }
        uint64_t v16 = (char *)(v12 + 8 * v2);
        if (v4 != v2 || v13 >= &v16[8 * v15]) {
          memmove(v13, v16, 8 * v15);
        }
        if (!((unint64_t)*v3 >> 62))
        {
          uint64_t v17 = *(void *)((char *)&dword_10 + (*v3 & 0xFFFFFFFFFFFFFF8));
          uint64_t v18 = v17 + v5;
          if (!__OFADD__(v17, v5))
          {
LABEL_23:
            *(void *)((char *)&dword_10 + (*v3 & 0xFFFFFFFFFFFFFF8)) = v18;
            goto LABEL_24;
          }
          goto LABEL_41;
        }
LABEL_39:
        swift_bridgeObjectRetain();
        uint64_t v23 = sub_77180();
        swift_bridgeObjectRelease();
        uint64_t v18 = v23 + v5;
        if (!__OFADD__(v23, v5)) {
          goto LABEL_23;
        }
LABEL_41:
        __break(1u);
        goto LABEL_42;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((char *)&dword_10 + (*v3 & 0xFFFFFFFFFFFFFF8));
      uint64_t v15 = v14 - v2;
      if (!__OFSUB__(v14, v2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_39;
  }
LABEL_24:

  return sub_769F0();
}

char *sub_20774(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v4 = *v2;
  int64_t v5 = *((void *)*v2 + 2);
  if (v5 < a2)
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t result = (char *)swift_isUniquelyReferenced_nonNull_native();
  if (result && v9 <= *((void *)v4 + 3) >> 1)
  {
    if (!v8) {
      goto LABEL_21;
    }
  }
  else
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t result = sub_3EE18(result, v11, 1, v4);
    uint64_t v4 = result;
    if (!v8) {
      goto LABEL_21;
    }
  }
  uint64_t v12 = *((void *)v4 + 2);
  BOOL v13 = __OFSUB__(v12, a2);
  uint64_t v14 = v12 - a2;
  if (v13) {
    goto LABEL_27;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    uint64_t result = &v4[32 * a1 + 32];
    uint64_t v15 = &v4[32 * a2 + 32];
    if (a1 != a2 || result >= &v15[32 * v14]) {
      uint64_t result = (char *)memmove(result, v15, 32 * v14);
    }
    uint64_t v16 = *((void *)v4 + 2);
    BOOL v13 = __OFADD__(v16, v8);
    uint64_t v17 = v16 + v8;
    if (!v13)
    {
      *((void *)v4 + 2) = v17;
LABEL_21:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_28;
  }
LABEL_29:
  uint64_t result = (char *)sub_771D0();
  __break(1u);
  return result;
}

uint64_t sub_208D0(uint64_t *a1, uint64_t *a2, void *a3, uint64_t a4)
{
  uint64_t v4 = *a1;
  if (!*(void *)(*a1 + 16))
  {
    uint64_t v10 = *a2;
    unint64_t v7 = (unint64_t)*a2 >> 62;
    if (!v7)
    {
      if (!*(void *)((char *)&dword_10 + (*a2 & 0xFFFFFFFFFFFFFF8)))
      {
LABEL_75:
        __break(1u);
LABEL_76:
        uint64_t v13 = sub_77080();
        if (v7) {
          goto LABEL_77;
        }
        goto LABEL_14;
      }
      goto LABEL_11;
    }
LABEL_72:
    swift_bridgeObjectRetain();
    uint64_t v57 = sub_77180();
    swift_bridgeObjectRelease();
    if (!v57)
    {
LABEL_89:
      __break(1u);
      JUMPOUT(0x21344);
    }
    swift_bridgeObjectRetain();
    uint64_t v58 = sub_77180();
    swift_bridgeObjectRelease();
    if (!v58)
    {
      __break(1u);
      goto LABEL_75;
    }
LABEL_11:
    if ((v10 & 0xC000000000000001) != 0) {
      goto LABEL_76;
    }
    if (*(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8)))
    {
      uint64_t v13 = *(void *)(v10 + 32);
      swift_retain();
      if (v7)
      {
LABEL_77:
        swift_bridgeObjectRetain();
        uint64_t v14 = sub_77180();
        swift_bridgeObjectRelease();
LABEL_78:
        if (v14)
        {
          sub_2046C(0, 1);
          return v13;
        }
        goto LABEL_85;
      }
LABEL_14:
      uint64_t v14 = *(void *)((char *)&dword_10 + (v10 & 0xFFFFFFFFFFFFFF8));
      goto LABEL_78;
    }
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
    goto LABEL_86;
  }
  unint64_t v7 = (unint64_t)a1;
  uint64_t v8 = *a2;
  unint64_t v9 = (unint64_t)*a2 >> 62;
  if (!v9)
  {
    uint64_t v10 = *(void *)((char *)&dword_10 + (*a2 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v10) {
      goto LABEL_4;
    }
LABEL_60:
    swift_bridgeObjectRelease();
    if (*(void *)(v4 + 16))
    {
      sub_20774(0, 1);
      if (a4)
      {
        unint64_t v47 = *(void *)(a4 + 16);
        switch(v47 >> 62)
        {
          case 1uLL:
            uint64_t v48 = *(void *)((char *)&dword_10 + (v47 & 0x3FFFFFFFFFFFFFFFLL));
            swift_retain();
            uint64_t v49 = 0;
            uint64_t v50 = 0;
            uint64_t v51 = 0;
            char v52 = 1;
            break;
          case 2uLL:
            char v53 = (void *)(v47 & 0x3FFFFFFFFFFFFFFFLL);
            uint64_t v48 = v53[5];
            uint64_t v49 = v53[6];
            uint64_t v50 = v53[7];
            uint64_t v51 = v53[8];
            swift_bridgeObjectRetain();
            char v52 = 2;
            break;
          case 3uLL:
            double v54 = (void *)(v47 & 0x3FFFFFFFFFFFFFFFLL);
            uint64_t v48 = v54[14];
            uint64_t v49 = v54[15];
            uint64_t v50 = v54[16];
            swift_bridgeObjectRetain();
            uint64_t v51 = 0;
            char v52 = 3;
            break;
          default:
            uint64_t v48 = *(void *)(v47 + 16);
            uint64_t v49 = *(void *)(v47 + 24);
            uint64_t v50 = *(void *)(v47 + 32);
            uint64_t v51 = *(void *)(v47 + 40);
            swift_bridgeObjectRetain();
            char v52 = 0;
            break;
        }
      }
      else
      {
        uint64_t v48 = 0;
        uint64_t v49 = 0;
        uint64_t v50 = 0;
        uint64_t v51 = 0;
        char v52 = -1;
      }
      *(double *)&uint64_t v55 = (double)sub_77380();
      *(double *)&uint64_t v56 = (double)sub_77380();
      uint64_t v62 = v48;
      uint64_t v63 = v49;
      uint64_t v64 = v50;
      uint64_t v65 = v51;
      char v66 = v52;
      type metadata accessor for SilentContent();
      swift_allocObject();
      uint64_t v46 = sub_4B798(0, 1, 0, 1, v55, 0, v56, 0, &v62) | 0x4000000000000000;
      goto LABEL_69;
    }
    goto LABEL_82;
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_77180();
  if (!v10) {
    goto LABEL_60;
  }
LABEL_4:
  if ((v8 & 0xC000000000000001) == 0)
  {
    if (*(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8)))
    {
      uint64_t v11 = *(void *)(v8 + 32);
      swift_retain();
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_72;
  }
  uint64_t v11 = sub_77080();
LABEL_7:
  swift_bridgeObjectRelease();
  unint64_t v61 = v9;
  uint64_t v60 = a4;
  switch(*(void *)(v11 + 16) >> 62)
  {
    case 1:
      uint64_t v15 = (unint64_t *)&unk_99F90;
      uint64_t v16 = type metadata accessor for SilentContent;
      goto LABEL_18;
    case 2:
      uint64_t v15 = &qword_98D10;
      uint64_t v16 = type metadata accessor for SpeakerContent;
      goto LABEL_18;
    case 3:
      uint64_t v15 = (unint64_t *)&qword_99F80;
      uint64_t v16 = type metadata accessor for ChapterTitleContent;
LABEL_18:
      uint64_t v12 = sub_251A4(v15, (void (*)(uint64_t))v16);
      break;
    default:
      uint64_t v12 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
      break;
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v12 + 32);
  swift_retain();
  v18(ObjectType, v12);
  LOBYTE(ObjectType) = v19;
  swift_release();
  if (ObjectType)
  {
    switch(*(void *)(v11 + 16) >> 62)
    {
      case 1:
        uint64_t v21 = (unint64_t *)&unk_99F90;
        uint64_t v22 = type metadata accessor for SilentContent;
        goto LABEL_26;
      case 2:
        uint64_t v21 = &qword_98D10;
        uint64_t v22 = type metadata accessor for SpeakerContent;
        goto LABEL_26;
      case 3:
        uint64_t v21 = (unint64_t *)&qword_99F80;
        uint64_t v22 = type metadata accessor for ChapterTitleContent;
LABEL_26:
        uint64_t v20 = sub_251A4(v21, (void (*)(uint64_t))v22);
        break;
      default:
        uint64_t v20 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
        break;
    }
    uint64_t v23 = swift_getObjectType();
    int v24 = *(void (**)(uint64_t, uint64_t))(v20 + 16);
    swift_retain();
    v24(v23, v20);
    LOBYTE(v23) = v25;
    swift_release();
    if (v23 & 1) != 0 || (__swift_project_boxed_opaque_existential_1(a3, a3[3]), sub_757B0(), (v26))
    {
      switch(*(void *)(v11 + 16) >> 62)
      {
        case 1:
          uint64_t v28 = (unint64_t *)&unk_99F90;
          uint64_t v29 = type metadata accessor for SilentContent;
          goto LABEL_34;
        case 2:
          uint64_t v28 = &qword_98D10;
          uint64_t v29 = type metadata accessor for SpeakerContent;
          goto LABEL_34;
        case 3:
          uint64_t v28 = (unint64_t *)&qword_99F80;
          uint64_t v29 = type metadata accessor for ChapterTitleContent;
LABEL_34:
          uint64_t v27 = sub_251A4(v28, (void (*)(uint64_t))v29);
          break;
        default:
          uint64_t v27 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
          break;
      }
      uint64_t v30 = swift_getObjectType();
      uint64_t v31 = *(void (**)(uint64_t, uint64_t))(v27 + 16);
      swift_retain();
      v31(v30, v27);
      swift_release();
    }
  }
  sub_773C0();
  if (sub_77390())
  {
    if (*(void *)(v4 + 16))
    {
      sub_20774(0, 1);
      if (v60)
      {
        unint64_t v32 = *(void *)(v60 + 16);
        switch(v32 >> 62)
        {
          case 1uLL:
            uint64_t v33 = *(void *)((char *)&dword_10 + (v32 & 0x3FFFFFFFFFFFFFFFLL));
            swift_retain();
            uint64_t v34 = 0;
            uint64_t v35 = 0;
            uint64_t v36 = 0;
            char v37 = 1;
            break;
          case 2uLL:
            uint64_t v41 = (void *)(v32 & 0x3FFFFFFFFFFFFFFFLL);
            uint64_t v33 = v41[5];
            uint64_t v34 = v41[6];
            uint64_t v35 = v41[7];
            uint64_t v36 = v41[8];
            swift_bridgeObjectRetain();
            char v37 = 2;
            break;
          case 3uLL:
            uint64_t v42 = (void *)(v32 & 0x3FFFFFFFFFFFFFFFLL);
            uint64_t v33 = v42[14];
            uint64_t v34 = v42[15];
            uint64_t v35 = v42[16];
            swift_bridgeObjectRetain();
            uint64_t v36 = 0;
            char v37 = 3;
            break;
          default:
            uint64_t v33 = *(void *)(v32 + 16);
            uint64_t v34 = *(void *)(v32 + 24);
            uint64_t v35 = *(void *)(v32 + 32);
            uint64_t v36 = *(void *)(v32 + 40);
            swift_bridgeObjectRetain();
            char v37 = 0;
            break;
        }
      }
      else
      {
        uint64_t v33 = 0;
        uint64_t v34 = 0;
        uint64_t v35 = 0;
        uint64_t v36 = 0;
        char v37 = -1;
      }
      *(double *)&uint64_t v43 = (double)sub_77380();
      *(double *)&uint64_t v44 = (double)sub_77380();
      uint64_t v62 = v33;
      uint64_t v63 = v34;
      uint64_t v64 = v35;
      uint64_t v65 = v36;
      char v66 = v37;
      type metadata accessor for SilentContent();
      swift_allocObject();
      sub_251EC(v33, v34, v35, v36, v37);
      uint64_t v45 = sub_4B798(0, 1, 0, 1, v43, 0, v44, 0, &v62);
      swift_release();
      sub_8994(v33, v34, v35, v36, v37);
      uint64_t v46 = v45 | 0x4000000000000000;
LABEL_69:
      type metadata accessor for TranscriptContentViewModel();
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v46;
      return v13;
    }
    goto LABEL_83;
  }
  if (!v61)
  {
    if (*(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8))) {
      goto LABEL_46;
    }
    __break(1u);
  }
  swift_bridgeObjectRetain();
  uint64_t v38 = sub_77180();
  swift_bridgeObjectRelease();
  if (!v38)
  {
LABEL_86:
    __break(1u);
    goto LABEL_87;
  }
  swift_bridgeObjectRetain();
  uint64_t v39 = sub_77180();
  swift_bridgeObjectRelease();
  if (!v39) {
    goto LABEL_84;
  }
LABEL_46:
  if ((v8 & 0xC000000000000001) != 0)
  {
    uint64_t v13 = sub_77080();
    if (!v61)
    {
LABEL_48:
      uint64_t v40 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8));
      goto LABEL_53;
    }
  }
  else
  {
    if (!*(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8)))
    {
LABEL_88:
      __break(1u);
      goto LABEL_89;
    }
    uint64_t v13 = *(void *)(v8 + 32);
    swift_retain();
    if (!v61) {
      goto LABEL_48;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_77180();
  swift_bridgeObjectRelease();
LABEL_53:
  if (!v40)
  {
LABEL_87:
    __break(1u);
    goto LABEL_88;
  }
  sub_2046C(0, 1);
  swift_release();
  return v13;
}

uint64_t sub_21394(uint64_t *a1, void *a2)
{
  uint64_t v2 = *a1;
  switch(*(void *)(*a1 + 16) >> 62)
  {
    case 1:
      int64_t v5 = (unint64_t *)&unk_99F90;
      uint64_t v6 = type metadata accessor for SilentContent;
      goto LABEL_6;
    case 2:
      int64_t v5 = &qword_98D10;
      uint64_t v6 = type metadata accessor for SpeakerContent;
      goto LABEL_6;
    case 3:
      int64_t v5 = (unint64_t *)&qword_99F80;
      uint64_t v6 = type metadata accessor for ChapterTitleContent;
LABEL_6:
      uint64_t v4 = sub_251A4(v5, (void (*)(uint64_t))v6);
      break;
    default:
      uint64_t v4 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
      break;
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 16);
  swift_retain();
  v8(ObjectType, v4);
  char v10 = v9;
  uint64_t result = swift_release();
  if ((v10 & 1) == 0)
  {
    switch(*(void *)(v2 + 16) >> 62)
    {
      case 1:
        uint64_t v13 = (unint64_t *)&unk_99F90;
        uint64_t v14 = type metadata accessor for SilentContent;
        goto LABEL_13;
      case 2:
        uint64_t v13 = &qword_98D10;
        uint64_t v14 = type metadata accessor for SpeakerContent;
        goto LABEL_13;
      case 3:
        uint64_t v13 = (unint64_t *)&qword_99F80;
        uint64_t v14 = type metadata accessor for ChapterTitleContent;
LABEL_13:
        uint64_t v12 = sub_251A4(v13, (void (*)(uint64_t))v14);
        break;
      default:
        uint64_t v12 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
        break;
    }
    uint64_t v15 = swift_getObjectType();
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v12 + 24);
    swift_retain();
    v16(v15, v12);
    char v18 = v17;
    uint64_t result = swift_release();
    if ((v18 & 1) == 0)
    {
      __swift_project_boxed_opaque_existential_1(a2, a2[3]);
      uint64_t v19 = sub_757B0();
      if ((v20 & 1) == 0)
      {
        uint64_t v21 = v19;
        uint64_t v87 = v2;
        switch(*(void *)(v2 + 16) >> 62)
        {
          case 1:
            uint64_t v23 = (unint64_t *)&unk_99F90;
            int v24 = type metadata accessor for SilentContent;
            goto LABEL_21;
          case 2:
            uint64_t v23 = &qword_98D10;
            int v24 = type metadata accessor for SpeakerContent;
            goto LABEL_21;
          case 3:
            uint64_t v23 = (unint64_t *)&qword_99F80;
            int v24 = type metadata accessor for ChapterTitleContent;
LABEL_21:
            uint64_t v22 = sub_251A4(v23, (void (*)(uint64_t))v24);
            break;
          default:
            uint64_t v22 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
            break;
        }
        uint64_t v25 = swift_getObjectType();
        char v26 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v22 + 40);
        swift_retain();
        v26(v21, 0, v25, v22);
        swift_release();
        uint64_t v2 = v87;
      }
      uint64_t v27 = sub_757B0();
      unint64_t v28 = *(void *)(v2 + 16);
      if (v29)
      {
        switch(v28 >> 62)
        {
          case 1uLL:
            uint64_t v35 = (unint64_t *)&unk_99F90;
            uint64_t v36 = type metadata accessor for SilentContent;
            goto LABEL_36;
          case 2uLL:
            uint64_t v35 = &qword_98D10;
            uint64_t v36 = type metadata accessor for SpeakerContent;
            goto LABEL_36;
          case 3uLL:
            uint64_t v35 = (unint64_t *)&qword_99F80;
            uint64_t v36 = type metadata accessor for ChapterTitleContent;
LABEL_36:
            uint64_t v32 = sub_251A4(v35, (void (*)(uint64_t))v36);
            break;
          default:
            uint64_t v32 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
            break;
        }
        uint64_t v42 = swift_getObjectType();
        uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t))(v32 + 32);
        swift_retain();
        *(double *)&uint64_t v44 = COERCE_DOUBLE(v43(v42, v32));
        char v46 = v45;
        swift_release();
        if (v46) {
          goto LABEL_53;
        }
        double v47 = *(double *)&v44;
        switch(*(void *)(v2 + 16) >> 62)
        {
          case 1:
            uint64_t v49 = (unint64_t *)&unk_99F90;
            uint64_t v50 = type metadata accessor for SilentContent;
            goto LABEL_43;
          case 2:
            uint64_t v49 = &qword_98D10;
            uint64_t v50 = type metadata accessor for SpeakerContent;
            goto LABEL_43;
          case 3:
            uint64_t v49 = (unint64_t *)&qword_99F80;
            uint64_t v50 = type metadata accessor for ChapterTitleContent;
LABEL_43:
            uint64_t v48 = sub_251A4(v49, (void (*)(uint64_t))v50);
            break;
          default:
            uint64_t v48 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
            break;
        }
        uint64_t v51 = swift_getObjectType();
        swift_retain();
        double v52 = COERCE_DOUBLE(sub_2D884(v51, v48));
        char v54 = v53;
        swift_release();
        if (v54) {
          goto LABEL_53;
        }
        switch(*(void *)(v2 + 16) >> 62)
        {
          case 1:
            uint64_t v56 = (unint64_t *)&unk_99F90;
            uint64_t v57 = type metadata accessor for SilentContent;
            goto LABEL_50;
          case 2:
            uint64_t v56 = &qword_98D10;
            uint64_t v57 = type metadata accessor for SpeakerContent;
            goto LABEL_50;
          case 3:
            uint64_t v56 = (unint64_t *)&qword_99F80;
            uint64_t v57 = type metadata accessor for ChapterTitleContent;
LABEL_50:
            uint64_t v55 = sub_251A4(v56, (void (*)(uint64_t))v57);
            break;
          default:
            uint64_t v55 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
            break;
        }
        uint64_t v58 = swift_getObjectType();
        uint64_t v38 = *(void (**)(void, void, uint64_t, uint64_t))(v55 + 64);
        swift_retain();
        double v39 = v47 + v52;
        uint64_t v40 = v58;
        uint64_t v41 = v55;
      }
      else
      {
        double v30 = *(double *)&v27;
        switch(v28 >> 62)
        {
          case 1uLL:
            uint64_t v33 = (unint64_t *)&unk_99F90;
            uint64_t v34 = type metadata accessor for SilentContent;
            goto LABEL_33;
          case 2uLL:
            uint64_t v33 = &qword_98D10;
            uint64_t v34 = type metadata accessor for SpeakerContent;
            goto LABEL_33;
          case 3uLL:
            uint64_t v33 = (unint64_t *)&qword_99F80;
            uint64_t v34 = type metadata accessor for ChapterTitleContent;
LABEL_33:
            uint64_t v31 = sub_251A4(v33, (void (*)(uint64_t))v34);
            break;
          default:
            uint64_t v31 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
            break;
        }
        uint64_t v37 = swift_getObjectType();
        uint64_t v38 = *(void (**)(void, void, uint64_t, uint64_t))(v31 + 64);
        swift_retain();
        double v39 = v30;
        uint64_t v40 = v37;
        uint64_t v41 = v31;
      }
      v38(*(void *)&v39, 0, v40, v41);
      swift_release();
LABEL_53:
      switch(*(void *)(v2 + 16) >> 62)
      {
        case 1:
          uint64_t v60 = (unint64_t *)&unk_99F90;
          unint64_t v61 = type metadata accessor for SilentContent;
          goto LABEL_58;
        case 2:
          uint64_t v60 = &qword_98D10;
          unint64_t v61 = type metadata accessor for SpeakerContent;
          goto LABEL_58;
        case 3:
          uint64_t v60 = (unint64_t *)&qword_99F80;
          unint64_t v61 = type metadata accessor for ChapterTitleContent;
LABEL_58:
          uint64_t v59 = sub_251A4(v60, (void (*)(uint64_t))v61);
          break;
        default:
          uint64_t v59 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
          break;
      }
      uint64_t v62 = swift_getObjectType();
      uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v59 + 32);
      swift_retain();
      v63(v62, v59);
      char v65 = v64;
      uint64_t result = swift_release();
      if (v65)
      {
        switch(*(void *)(v2 + 16) >> 62)
        {
          case 1:
            uint64_t v67 = (unint64_t *)&unk_99F90;
            uint64_t v68 = type metadata accessor for SilentContent;
            goto LABEL_65;
          case 2:
            uint64_t v67 = &qword_98D10;
            uint64_t v68 = type metadata accessor for SpeakerContent;
            goto LABEL_65;
          case 3:
            uint64_t v67 = (unint64_t *)&qword_99F80;
            uint64_t v68 = type metadata accessor for ChapterTitleContent;
LABEL_65:
            uint64_t v66 = sub_251A4(v67, (void (*)(uint64_t))v68);
            break;
          default:
            uint64_t v66 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
            break;
        }
        uint64_t v69 = swift_getObjectType();
        uint64_t v70 = *(uint64_t (**)(uint64_t, uint64_t))(v66 + 56);
        swift_retain();
        *(double *)&uint64_t v71 = COERCE_DOUBLE(v70(v69, v66));
        char v73 = v72;
        uint64_t result = swift_release();
        if ((v73 & 1) == 0)
        {
          double v74 = *(double *)&v71;
          switch(*(void *)(v2 + 16) >> 62)
          {
            case 1:
              unint64_t v76 = (unint64_t *)&unk_99F90;
              uint64_t v77 = type metadata accessor for SilentContent;
              goto LABEL_72;
            case 2:
              unint64_t v76 = &qword_98D10;
              uint64_t v77 = type metadata accessor for SpeakerContent;
              goto LABEL_72;
            case 3:
              unint64_t v76 = (unint64_t *)&qword_99F80;
              uint64_t v77 = type metadata accessor for ChapterTitleContent;
LABEL_72:
              uint64_t v75 = sub_251A4(v76, (void (*)(uint64_t))v77);
              break;
            default:
              uint64_t v75 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
              break;
          }
          uint64_t v78 = swift_getObjectType();
          swift_retain();
          double v79 = COERCE_DOUBLE(sub_2D884(v78, v75));
          char v81 = v80;
          uint64_t result = swift_release();
          if ((v81 & 1) == 0)
          {
            switch(*(void *)(v2 + 16) >> 62)
            {
              case 1:
                uint64_t v83 = (unint64_t *)&unk_99F90;
                unint64_t v84 = type metadata accessor for SilentContent;
                goto LABEL_80;
              case 2:
                uint64_t v83 = &qword_98D10;
                unint64_t v84 = type metadata accessor for SpeakerContent;
                goto LABEL_80;
              case 3:
                uint64_t v83 = (unint64_t *)&qword_99F80;
                unint64_t v84 = type metadata accessor for ChapterTitleContent;
LABEL_80:
                uint64_t v82 = sub_251A4(v83, (void (*)(uint64_t))v84);
                break;
              default:
                uint64_t v82 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
                break;
            }
            uint64_t v85 = swift_getObjectType();
            long long v86 = *(void (**)(double, void, uint64_t, uint64_t))(v82 + 40);
            swift_retain();
            ((void (*)(void, void, void, void))v86)(v74 - v79, 0, v85, v82);
            return swift_release();
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_2239C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16) >> 62;
  switch(v2)
  {
    case 1:
      int64_t v5 = (unint64_t *)&unk_99F90;
      uint64_t v6 = type metadata accessor for SilentContent;
      goto LABEL_6;
    case 2:
      int64_t v5 = &qword_98D10;
      uint64_t v6 = type metadata accessor for SpeakerContent;
      goto LABEL_6;
    case 3:
      int64_t v5 = (unint64_t *)&qword_99F80;
      uint64_t v6 = type metadata accessor for ChapterTitleContent;
LABEL_6:
      uint64_t v4 = sub_251A4(v5, (void (*)(uint64_t))v6);
      break;
    default:
      uint64_t v4 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
      break;
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 32);
  swift_retain();
  uint64_t v9 = v8(ObjectType, v4);
  char v11 = v10;
  swift_release();
  if (v11) {
    return 1;
  }
  double v12 = *(double *)&v9;
  switch((int)v2)
  {
    case 0:
      uint64_t v13 = v2;
      uint64_t v14 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
      goto LABEL_14;
    case 1:
      uint64_t v13 = v2;
      uint64_t v15 = (unint64_t *)&unk_99F90;
      uint64_t v16 = type metadata accessor for SilentContent;
      goto LABEL_13;
    case 2:
      uint64_t v13 = v2;
      uint64_t v15 = &qword_98D10;
      uint64_t v16 = type metadata accessor for SpeakerContent;
      goto LABEL_13;
    case 3:
      uint64_t v13 = v2;
      uint64_t v15 = (unint64_t *)&qword_99F80;
      uint64_t v16 = type metadata accessor for ChapterTitleContent;
LABEL_13:
      uint64_t v14 = sub_251A4(v15, (void (*)(uint64_t))v16);
LABEL_14:
      uint64_t v17 = swift_getObjectType();
      char v18 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 56);
      swift_retain();
      double v19 = COERCE_DOUBLE(v18(v17, v14));
      char v21 = v20;
      swift_release();
      if (v21) {
        return 1;
      }
      double v22 = v19;
      if (v19 >= v12)
      {
        switch(v13)
        {
          case 0:
            uint64_t v24 = v2;
            uint64_t v25 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
            goto LABEL_23;
          case 1:
            uint64_t v24 = v2;
            char v26 = (unint64_t *)&unk_99F90;
            uint64_t v27 = type metadata accessor for SilentContent;
            goto LABEL_22;
          case 2:
            uint64_t v24 = v2;
            char v26 = &qword_98D10;
            uint64_t v27 = type metadata accessor for SpeakerContent;
            goto LABEL_22;
          case 3:
            uint64_t v24 = v2;
            char v26 = (unint64_t *)&qword_99F80;
            uint64_t v27 = type metadata accessor for ChapterTitleContent;
LABEL_22:
            uint64_t v25 = sub_251A4(v26, (void (*)(uint64_t))v27);
LABEL_23:
            uint64_t v28 = swift_getObjectType();
            char v29 = *(uint64_t (**)(uint64_t, uint64_t))(v25 + 16);
            swift_retain();
            double v30 = COERCE_DOUBLE(v29(v28, v25));
            char v32 = v31;
            swift_release();
            if ((v32 & 1) == 0)
            {
              double v33 = v30 * 0.4;
              if (v30 < 1800.0) {
                double v33 = 720.0;
              }
              if (v33 < vabdd_f64(v30, v12)) {
                goto LABEL_16;
              }
            }
            switch(v24)
            {
              case 0:
                uint64_t v34 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
                goto LABEL_33;
              case 1:
                uint64_t v35 = (unint64_t *)&unk_99F90;
                uint64_t v36 = type metadata accessor for SilentContent;
                goto LABEL_32;
              case 2:
                uint64_t v35 = &qword_98D10;
                uint64_t v36 = type metadata accessor for SpeakerContent;
                goto LABEL_32;
              case 3:
                uint64_t v35 = (unint64_t *)&qword_99F80;
                uint64_t v36 = type metadata accessor for ChapterTitleContent;
LABEL_32:
                uint64_t v34 = sub_251A4(v35, (void (*)(uint64_t))v36);
LABEL_33:
                uint64_t v37 = swift_getObjectType();
                uint64_t v38 = *(uint64_t (**)(uint64_t, uint64_t))(v34 + 24);
                swift_retain();
                double v39 = COERCE_DOUBLE(v38(v37, v34));
                char v41 = v40;
                swift_release();
                if ((v41 & 1) == 0)
                {
                  double v42 = v39 * 0.4;
                  if (v39 < 1800.0) {
                    double v42 = 720.0;
                  }
                  if (v42 < vabdd_f64(v39, v22)) {
                    goto LABEL_16;
                  }
                }
                if (!a2) {
                  return 1;
                }
                switch(*(void *)(a2 + 16) >> 62)
                {
                  case 1:
                    uint64_t v44 = (unint64_t *)&unk_99F90;
                    char v45 = type metadata accessor for SilentContent;
                    goto LABEL_43;
                  case 2:
                    uint64_t v44 = &qword_98D10;
                    char v45 = type metadata accessor for SpeakerContent;
                    goto LABEL_43;
                  case 3:
                    uint64_t v44 = (unint64_t *)&qword_99F80;
                    char v45 = type metadata accessor for ChapterTitleContent;
LABEL_43:
                    uint64_t v43 = sub_251A4(v44, (void (*)(uint64_t))v45);
                    break;
                  default:
                    uint64_t v43 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
                    break;
                }
                uint64_t v46 = swift_getObjectType();
                double v47 = *(uint64_t (**)(uint64_t, uint64_t))(v43 + 32);
                swift_retain();
                uint64_t v48 = v47(v46, v43);
                char v50 = v49;
                swift_release();
                if (v50) {
                  return 1;
                }
                double v51 = *(double *)&v48;
                switch(*(void *)(a2 + 16) >> 62)
                {
                  case 1:
                    char v53 = (unint64_t *)&unk_99F90;
                    char v54 = type metadata accessor for SilentContent;
                    goto LABEL_50;
                  case 2:
                    char v53 = &qword_98D10;
                    char v54 = type metadata accessor for SpeakerContent;
                    goto LABEL_50;
                  case 3:
                    char v53 = (unint64_t *)&qword_99F80;
                    char v54 = type metadata accessor for ChapterTitleContent;
LABEL_50:
                    uint64_t v52 = sub_251A4(v53, (void (*)(uint64_t))v54);
                    break;
                  default:
                    uint64_t v52 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
                    break;
                }
                uint64_t v55 = swift_getObjectType();
                uint64_t v56 = *(uint64_t (**)(uint64_t, uint64_t))(v52 + 56);
                swift_retain();
                double v57 = COERCE_DOUBLE(v56(v55, v52));
                char v59 = v58;
                swift_release();
                if (v59) {
                  return 1;
                }
                BOOL result = 0;
                if (v12 >= v51 && v22 >= v57) {
                  BOOL result = sub_203C0() >= v12 - v57;
                }
                break;
              default:
                goto LABEL_57;
            }
            break;
          default:
            goto LABEL_57;
        }
      }
      else
      {
LABEL_16:
        BOOL result = 0;
      }
      break;
    default:
LABEL_57:
      JUMPOUT(0);
  }
  return result;
}

uint64_t sub_22D00(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if ((unint64_t)*a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_77180();
    if (v5)
    {
LABEL_3:
      unint64_t v6 = v5 - 1;
      if (__OFSUB__(v5, 1))
      {
        __break(1u);
      }
      else if ((v4 & 0xC000000000000001) == 0)
      {
        if ((v6 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v6 < *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8)))
        {
          uint64_t v7 = *(void *)(v4 + 8 * v6 + 32);
          swift_retain();
LABEL_8:
          swift_bridgeObjectRelease();
          switch(*(void *)(v7 + 16) >> 62)
          {
            case 1:
              uint64_t v9 = (unint64_t *)&unk_99F90;
              char v10 = type metadata accessor for SilentContent;
              goto LABEL_13;
            case 2:
              uint64_t v9 = &qword_98D10;
              char v10 = type metadata accessor for SpeakerContent;
              goto LABEL_13;
            case 3:
              uint64_t v9 = (unint64_t *)&qword_99F80;
              char v10 = type metadata accessor for ChapterTitleContent;
LABEL_13:
              uint64_t v8 = sub_251A4(v9, (void (*)(uint64_t))v10);
              break;
            default:
              uint64_t v8 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
              break;
          }
          uint64_t ObjectType = swift_getObjectType();
          swift_retain();
          double v12 = COERCE_DOUBLE(sub_2D7AC(ObjectType, v8));
          char v14 = v13;
          swift_release();
          if (v14) {
            double v15 = 0.0;
          }
          else {
            double v15 = v12;
          }
          unint64_t v16 = *(void *)(a1 + 16);
          unint64_t v17 = v16 >> 62;
          unint64_t v18 = *(void *)(v7 + 16);
          unint64_t v19 = v18 >> 62;
          if (v16 >> 62 == 1)
          {
            if (v19 == 1)
            {
              double v20 = *(double *)((char *)&stru_20.fileoff + (v16 & 0x3FFFFFFFFFFFFFFFLL));
              if (*((unsigned char *)&stru_20.filesize + (v16 & 0x3FFFFFFFFFFFFFFFLL))) {
                double v20 = v15;
              }
              *(double *)((char *)&stru_20.fileoff + (v18 & 0x3FFFFFFFFFFFFFFFLL)) = v20;
              *((unsigned char *)&stru_20.filesize + (v18 & 0x3FFFFFFFFFFFFFFFLL)) = 0;
              uint64_t v21 = *(void *)&stru_20.segname[v16 & 0x3FFFFFFFFFFFFFFFLL];
              char v22 = stru_20.segname[(v16 & 0x3FFFFFFFFFFFFFFFLL) + 8];
              swift_retain();
              swift_release();
              *(void *)&stru_20.segname[v18 & 0x3FFFFFFFFFFFFFFFLL] = v21;
              stru_20.segname[(v18 & 0x3FFFFFFFFFFFFFFFLL) + 8] = v22;
              goto LABEL_96;
            }
            uint64_t v26 = v16 & 0x3FFFFFFFFFFFFFFFLL;
            if (*((unsigned char *)&stru_20.filesize + (v16 & 0x3FFFFFFFFFFFFFFFLL)) != 1)
            {
              uint64_t v27 = (double *)(v26 + 72);
              goto LABEL_29;
            }
            if ((stru_20.segname[(v16 & 0x3FFFFFFFFFFFFFFFLL) + 8] & 1) == 0)
            {
              uint64_t v27 = (double *)(v26 + 40);
LABEL_29:
              double v28 = *v27 - v15;
              swift_retain();
              sub_75630();
              if (v29 < v28)
              {
                uint64_t v90 = *(void *)((char *)&dword_18 + (v16 & 0x3FFFFFFFFFFFFFFFLL));
                char v88 = *((unsigned char *)&stru_20.cmd + (v16 & 0x3FFFFFFFFFFFFFFFLL));
                uint64_t v87 = *(void *)&stru_20.segname[v16 & 0x3FFFFFFFFFFFFFFFLL];
                char v86 = stru_20.segname[(v16 & 0x3FFFFFFFFFFFFFFFLL) + 8];
                uint64_t v85 = *(void *)&stru_20.segname[(v16 & 0x3FFFFFFFFFFFFFFFLL) + 16];
                int v84 = *((unsigned __int8 *)&stru_20.vmsize + (v16 & 0x3FFFFFFFFFFFFFFFLL));
                uint64_t v83 = *(uint64_t *)((char *)&stru_20.fileoff + (v16 & 0x3FFFFFFFFFFFFFFFLL));
                int v30 = *((unsigned __int8 *)&stru_20.filesize + (v16 & 0x3FFFFFFFFFFFFFFFLL));
                switch((int)v19)
                {
                  case 1:
                    uint64_t v31 = *(void *)((char *)&dword_10 + (v18 & 0x3FFFFFFFFFFFFFFFLL));
                    swift_retain();
                    uint64_t v34 = 0;
                    uint64_t v33 = 0;
                    goto LABEL_44;
                  case 2:
                    uint64_t v31 = *(void *)&stru_20.segname[v18 & 0x3FFFFFFFFFFFFFFFLL];
                    uint64_t v33 = *(void *)&stru_20.segname[(v18 & 0x3FFFFFFFFFFFFFFFLL) + 16];
                    uint64_t v32 = *(uint64_t *)((char *)&stru_20.vmsize + (v18 & 0x3FFFFFFFFFFFFFFFLL));
                    uint64_t v34 = swift_bridgeObjectRetain();
                    break;
                  case 3:
                    uint64_t v31 = *(void *)&stru_68.segname[(v18 & 0x3FFFFFFFFFFFFFFFLL) - 8];
                    uint64_t v33 = *(void *)&stru_68.segname[(v18 & 0x3FFFFFFFFFFFFFFFLL) + 8];
                    uint64_t v34 = swift_bridgeObjectRetain();
LABEL_44:
                    uint64_t v32 = 0;
                    break;
                  default:
                    uint64_t v31 = *(void *)(v18 + 16);
                    uint64_t v33 = *(void *)(v18 + 32);
                    uint64_t v32 = *(void *)(v18 + 40);
                    uint64_t v34 = swift_bridgeObjectRetain();
                    break;
                }
                v93[0] = v31;
                v93[1] = v34;
                v93[2] = v33;
                v93[3] = v32;
                char v94 = v18 >> 62;
                type metadata accessor for SilentContent();
                swift_allocObject();
                uint64_t v92 = sub_4B798(v90, v88, v87, v86, v85, v84, v83, v30, v93);
                switch((int)v19)
                {
                  case 0:
                    uint64_t v42 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
                    goto LABEL_51;
                  case 1:
                    uint64_t v43 = (unint64_t *)&unk_99F90;
                    uint64_t v44 = type metadata accessor for SilentContent;
                    goto LABEL_50;
                  case 2:
                    uint64_t v43 = &qword_98D10;
                    uint64_t v44 = type metadata accessor for SpeakerContent;
                    goto LABEL_50;
                  case 3:
                    uint64_t v43 = (unint64_t *)&qword_99F80;
                    uint64_t v44 = type metadata accessor for ChapterTitleContent;
LABEL_50:
                    uint64_t v42 = sub_251A4(v43, (void (*)(uint64_t))v44);
LABEL_51:
                    uint64_t v45 = swift_getObjectType();
                    uint64_t v46 = *(uint64_t (**)(uint64_t, uint64_t))(v42 + 24);
                    swift_retain();
                    uint64_t v47 = v46(v45, v42);
                    char v49 = v48;
                    swift_release();
                    if ((v49 & 1) == 0)
                    {
                      *(void *)(v92 + 24) = v47;
                      *(unsigned char *)(v92 + 32) = 0;
                    }
                    switch(*(void *)(v7 + 16) >> 62)
                    {
                      case 1:
                        double v51 = (unint64_t *)&unk_99F90;
                        uint64_t v52 = type metadata accessor for SilentContent;
                        goto LABEL_58;
                      case 2:
                        double v51 = &qword_98D10;
                        uint64_t v52 = type metadata accessor for SpeakerContent;
                        goto LABEL_58;
                      case 3:
                        double v51 = (unint64_t *)&qword_99F80;
                        uint64_t v52 = type metadata accessor for ChapterTitleContent;
LABEL_58:
                        uint64_t v50 = sub_251A4(v51, (void (*)(uint64_t))v52);
                        break;
                      default:
                        uint64_t v50 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
                        break;
                    }
                    uint64_t v53 = swift_getObjectType();
                    char v54 = *(uint64_t (**)(uint64_t, uint64_t))(v50 + 56);
                    swift_retain();
                    uint64_t v55 = v54(v53, v50);
                    char v57 = v56;
                    swift_release();
                    if ((v57 & 1) == 0)
                    {
                      *(void *)(v92 + 56) = v55;
                      *(unsigned char *)(v92 + 64) = 0;
                    }
                    switch(*(void *)(v7 + 16) >> 62)
                    {
                      case 1:
                        char v59 = (unint64_t *)&unk_99F90;
                        uint64_t v60 = type metadata accessor for SilentContent;
                        goto LABEL_66;
                      case 2:
                        char v59 = &qword_98D10;
                        uint64_t v60 = type metadata accessor for SpeakerContent;
                        goto LABEL_66;
                      case 3:
                        char v59 = (unint64_t *)&qword_99F80;
                        uint64_t v60 = type metadata accessor for ChapterTitleContent;
LABEL_66:
                        uint64_t v58 = sub_251A4(v59, (void (*)(uint64_t))v60);
                        break;
                      default:
                        uint64_t v58 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
                        break;
                    }
                    uint64_t v61 = swift_getObjectType();
                    uint64_t v62 = *(uint64_t (**)(uint64_t, uint64_t))(v58 + 56);
                    swift_retain();
                    double v63 = COERCE_DOUBLE(v62(v61, v58));
                    char v65 = v64;
                    swift_release();
                    if ((v65 & 1) == 0 && (*(unsigned char *)(v26 + 64) & 1) == 0 && (*(unsigned char *)(v26 + 80) & 1) == 0)
                    {
                      *(double *)(v92 + 72) = *(double *)(v26 + 72) - *(double *)(v26 + 56) + v63;
                      *(unsigned char *)(v92 + 80) = 0;
                    }
                    type metadata accessor for TranscriptContentViewModel();
                    *(void *)(swift_allocObject() + 16) = v92 | 0x4000000000000000;
                    swift_retain();
                    sub_769B0();
                    if (*(void *)((char *)&dword_10 + (*a2 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + (*a2 & 0xFFFFFFFFFFFFFF8)) >> 1) {
                      sub_76A00();
                    }
                    sub_76A20();
                    sub_769F0();
                    swift_release();
                    return swift_release_n();
                  default:
                    goto LABEL_104;
                }
              }
              return swift_release_n();
            }
LABEL_96:
            return swift_release();
          }
          if (v19 == 1)
          {
            uint64_t v23 = v18 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v24 = v17;
            switch((int)v17)
            {
              case 1:
                uint64_t v35 = (unint64_t *)&unk_99F90;
                uint64_t v36 = type metadata accessor for SilentContent;
                goto LABEL_35;
              case 2:
                uint64_t v35 = &qword_98D10;
                uint64_t v36 = type metadata accessor for SpeakerContent;
                goto LABEL_35;
              case 3:
                uint64_t v35 = (unint64_t *)&qword_99F80;
                uint64_t v36 = type metadata accessor for ChapterTitleContent;
LABEL_35:
                uint64_t v25 = sub_251A4(v35, (void (*)(uint64_t))v36);
                break;
              default:
                uint64_t v25 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
                break;
            }
            uint64_t v37 = swift_getObjectType();
            swift_retain();
            swift_retain();
            double v38 = COERCE_DOUBLE(sub_2D7AC(v37, v25));
            char v40 = v39;
            swift_release();
            if ((v40 & 1) == 0 && v15 < v38)
            {
              uint64_t v89 = v24;
              uint64_t v91 = v23;
              switch(v24)
              {
                case 0:
                  uint64_t v41 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
                  goto LABEL_79;
                case 1:
                  uint64_t v67 = (unint64_t *)&unk_99F90;
                  uint64_t v68 = type metadata accessor for SilentContent;
                  goto LABEL_78;
                case 2:
                  uint64_t v67 = &qword_98D10;
                  uint64_t v68 = type metadata accessor for SpeakerContent;
                  goto LABEL_78;
                case 3:
                  uint64_t v67 = (unint64_t *)&qword_99F80;
                  uint64_t v68 = type metadata accessor for ChapterTitleContent;
LABEL_78:
                  uint64_t v41 = sub_251A4(v67, (void (*)(uint64_t))v68);
LABEL_79:
                  uint64_t v69 = swift_getObjectType();
                  uint64_t v70 = *(uint64_t (**)(uint64_t, uint64_t))(v41 + 16);
                  swift_retain();
                  uint64_t v71 = v70(v69, v41);
                  char v73 = v72;
                  swift_release();
                  *(void *)(v91 + 40) = v71;
                  *(unsigned char *)(v91 + 48) = v73 & 1;
                  switch(v89)
                  {
                    case 1:
                      uint64_t v75 = (unint64_t *)&unk_99F90;
                      unint64_t v76 = type metadata accessor for SilentContent;
                      goto LABEL_84;
                    case 2:
                      uint64_t v75 = &qword_98D10;
                      unint64_t v76 = type metadata accessor for SpeakerContent;
                      goto LABEL_84;
                    case 3:
                      uint64_t v75 = (unint64_t *)&qword_99F80;
                      unint64_t v76 = type metadata accessor for ChapterTitleContent;
LABEL_84:
                      uint64_t v74 = sub_251A4(v75, (void (*)(uint64_t))v76);
                      break;
                    default:
                      uint64_t v74 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
                      break;
                  }
                  uint64_t v77 = swift_getObjectType();
                  uint64_t v78 = *(uint64_t (**)(uint64_t, uint64_t))(v74 + 32);
                  swift_retain();
                  uint64_t v79 = v78(v77, v74);
                  char v81 = v80;
                  swift_release();
                  double v82 = v15;
                  if ((v81 & 1) == 0) {
                    double v82 = *(double *)&v79;
                  }
                  *(double *)(v91 + 72) = v82;
                  *(unsigned char *)(v91 + 80) = 0;
                  break;
                default:
LABEL_104:
                  JUMPOUT(0);
              }
            }
            swift_release();
          }
LABEL_94:
          swift_retain();
          sub_769B0();
          if (*(void *)((char *)&dword_10 + (*a2 & 0xFFFFFFFFFFFFFF8)) < *(void *)((char *)&dword_18
                                                                                        + (*a2 & 0xFFFFFFFFFFFFFF8)) >> 1)
          {
LABEL_95:
            sub_76A20();
            sub_769F0();
            goto LABEL_96;
          }
LABEL_103:
          sub_76A00();
          goto LABEL_95;
        }
        __break(1u);
        goto LABEL_103;
      }
      uint64_t v7 = sub_77080();
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v5) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16) >> 62 != 1) {
    goto LABEL_94;
  }
  swift_retain();
  sub_769B0();
  if (*(void *)((char *)&dword_10 + (*a2 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                 + (*a2 & 0xFFFFFFFFFFFFFF8)) >> 1)
    sub_76A00();
  sub_76A20();
  return sub_769F0();
}

uint64_t *sub_23B5C(uint64_t *result)
{
  uint64_t v2 = *result;
  unint64_t v3 = (unint64_t)*result >> 62;
  if (!v3)
  {
    unint64_t v4 = *(void *)((char *)&dword_10 + (*result & 0xFFFFFFFFFFFFFF8));
    if (v4 < 2) {
      return result;
    }
    swift_bridgeObjectRetain();
    goto LABEL_5;
  }
  swift_bridgeObjectRetain();
  uint64_t v42 = sub_77180();
  BOOL result = (uint64_t *)swift_bridgeObjectRelease();
  if (v42 < 2) {
    return result;
  }
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_77180();
  if (v4)
  {
LABEL_5:
    unint64_t v5 = v4 - 1;
    if (__OFSUB__(v4, 1))
    {
      __break(1u);
    }
    else
    {
      unint64_t v1 = v2 & 0xC000000000000001;
      if ((v2 & 0xC000000000000001) == 0)
      {
        if ((v5 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v5 < *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8)))
        {
          uint64_t v6 = *(void *)(v2 + 8 * v5 + 32);
          swift_retain();
          goto LABEL_10;
        }
        __break(1u);
        goto LABEL_76;
      }
    }
    uint64_t v6 = sub_77080();
LABEL_10:
    swift_bridgeObjectRelease();
    if (v3)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = sub_77180();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v7 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
    }
    unint64_t v8 = v7 - 2;
    if (!__OFSUB__(v7, 2))
    {
      if (v1)
      {
        uint64_t v9 = sub_77080();
        goto LABEL_19;
      }
      if ((v8 & 0x8000000000000000) == 0)
      {
        if (v8 < *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8)))
        {
          uint64_t v9 = *(void *)(v2 + 8 * v8 + 32);
          swift_retain();
LABEL_19:
          if (*(void *)(v6 + 16) >> 62) {
            goto LABEL_33;
          }
          if (*(void *)(v9 + 16) >> 62) {
            goto LABEL_33;
          }
          uint64_t v10 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
          char v11 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 32);
          uint64_t v12 = type metadata accessor for TextContent(0);
          swift_retain();
          double v13 = COERCE_DOUBLE(v11(v12, v10));
          char v15 = v14;
          swift_release();
          if (v15) {
            goto LABEL_33;
          }
          uint64_t v44 = v10;
          unint64_t v46 = v1;
          switch(*(void *)(v9 + 16) >> 62)
          {
            case 1:
              unint64_t v17 = (unint64_t *)&unk_99F90;
              unint64_t v18 = type metadata accessor for SilentContent;
              goto LABEL_27;
            case 2:
              unint64_t v17 = &qword_98D10;
              unint64_t v18 = type metadata accessor for SpeakerContent;
              goto LABEL_27;
            case 3:
              unint64_t v17 = (unint64_t *)&qword_99F80;
              unint64_t v18 = type metadata accessor for ChapterTitleContent;
LABEL_27:
              uint64_t v16 = sub_251A4(v17, (void (*)(uint64_t))v18);
              break;
            default:
              uint64_t v16 = v10;
              break;
          }
          uint64_t ObjectType = swift_getObjectType();
          double v20 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 56);
          swift_retain();
          double v21 = COERCE_DOUBLE(v20(ObjectType, v16));
          char v23 = v22;
          swift_release();
          if ((v23 & 1) != 0 || v13 - v21 <= 0.0 || (sub_75630(), v13 - v21 >= v24))
          {
LABEL_33:
            swift_release();
LABEL_34:
            return (uint64_t *)swift_release();
          }
          if (v3)
          {
            swift_bridgeObjectRetain();
            uint64_t v25 = sub_77180();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v25 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
          }
          uint64_t v26 = v44;
          unint64_t v27 = v25 - 1;
          if (!__OFSUB__(v25, 1))
          {
            if (v46)
            {
              uint64_t v28 = sub_77080();
            }
            else
            {
              if ((v27 & 0x8000000000000000) != 0)
              {
LABEL_81:
                __break(1u);
                goto LABEL_82;
              }
              if (v27 >= *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8)))
              {
LABEL_82:
                __break(1u);
                goto LABEL_83;
              }
              uint64_t v28 = *(void *)(v2 + 8 * v27 + 32);
              swift_retain();
            }
            switch(*(void *)(v28 + 16) >> 62)
            {
              case 1:
                double v29 = (unint64_t *)&unk_99F90;
                int v30 = type metadata accessor for SilentContent;
                goto LABEL_49;
              case 2:
                double v29 = &qword_98D10;
                int v30 = type metadata accessor for SpeakerContent;
                goto LABEL_49;
              case 3:
                double v29 = (unint64_t *)&qword_99F80;
                int v30 = type metadata accessor for ChapterTitleContent;
LABEL_49:
                uint64_t v43 = sub_251A4(v29, (void (*)(uint64_t))v30);
                break;
              default:
                uint64_t v43 = v44;
                break;
            }
            swift_retain();
            swift_release();
            switch(*(void *)(v9 + 16) >> 62)
            {
              case 1:
                uint64_t v31 = (unint64_t *)&unk_99F90;
                uint64_t v32 = type metadata accessor for SilentContent;
                goto LABEL_54;
              case 2:
                uint64_t v31 = &qword_98D10;
                uint64_t v32 = type metadata accessor for SpeakerContent;
                goto LABEL_54;
              case 3:
                uint64_t v31 = (unint64_t *)&qword_99F80;
                uint64_t v32 = type metadata accessor for ChapterTitleContent;
LABEL_54:
                uint64_t v26 = sub_251A4(v31, (void (*)(uint64_t))v32);
                break;
              default:
                break;
            }
            uint64_t v45 = swift_getObjectType();
            uint64_t v33 = swift_getObjectType();
            uint64_t v34 = *(uint64_t (**)(uint64_t, uint64_t))(v26 + 56);
            swift_retain();
            uint64_t v35 = v34(v33, v26);
            char v37 = v36;
            swift_release();
            (*(void (**)(uint64_t, void, uint64_t))(v43 + 40))(v35, v37 & 1, v45);
            swift_release();
            if (v3)
            {
              swift_bridgeObjectRetain();
              uint64_t v38 = sub_77180();
              swift_bridgeObjectRelease();
            }
            else
            {
              uint64_t v38 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
            }
            unint64_t v39 = v38 - 1;
            if (!__OFSUB__(v38, 1))
            {
              if (v46)
              {
                uint64_t v40 = sub_77080();
LABEL_64:
                if (!(*(void *)(v40 + 16) >> 62))
                {
                  swift_retain();
                  swift_release();
                  uint64_t KeyPath = swift_getKeyPath();
                  __chkstk_darwin(KeyPath);
                  sub_251A4((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
                  sub_75530();
                  swift_release();
                  swift_release();
                  swift_release();
                  return (uint64_t *)swift_release();
                }
                swift_release();
                swift_release();
                goto LABEL_34;
              }
              if ((v39 & 0x8000000000000000) == 0)
              {
                if (v39 < *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8)))
                {
                  uint64_t v40 = *(void *)(v2 + 8 * v39 + 32);
                  swift_retain();
                  goto LABEL_64;
                }
LABEL_84:
                __break(1u);
                JUMPOUT(0x2439CLL);
              }
LABEL_83:
              __break(1u);
              goto LABEL_84;
            }
LABEL_80:
            __break(1u);
            goto LABEL_81;
          }
LABEL_79:
          __break(1u);
          goto LABEL_80;
        }
LABEL_78:
        __break(1u);
        goto LABEL_79;
      }
LABEL_77:
      __break(1u);
      goto LABEL_78;
    }
LABEL_76:
    __break(1u);
    goto LABEL_77;
  }

  return (uint64_t *)swift_bridgeObjectRelease();
}

uint64_t sub_243CC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >> 62)
  {
LABEL_44:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_77180();
    if (!v3) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_16;
    }
  }
  if ((v2 & 0xC000000000000001) != 0)
  {
    uint64_t v23 = *(void *)(sub_77080() + 16);
    swift_unknownObjectRelease();
    unint64_t v4 = 0;
    if ((v23 & 0x8000000000000000) == 0)
    {
LABEL_47:
      swift_bridgeObjectRelease();
      uint64_t v2 = sub_77080();
LABEL_8:
      unint64_t v5 = *(void *)(v2 + 16);
      if (v5 >> 62)
      {
        return swift_release();
      }
      swift_getKeyPath();
      sub_251A4((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
      swift_retain();
      sub_75540();
      swift_release();
      char v6 = *(unsigned char *)(v5 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerStartTime + 8);
      swift_release();
      if (v6) {
        return swift_release();
      }
      unint64_t v10 = *(void *)(v2 + 16);
      if (v10 >> 62)
      {
LABEL_36:
        switch(v10 >> 62)
        {
          case 1uLL:
            unint64_t v19 = (unint64_t *)&unk_99F90;
            double v20 = type metadata accessor for SilentContent;
            goto LABEL_41;
          case 2uLL:
            unint64_t v19 = &qword_98D10;
            double v20 = type metadata accessor for SpeakerContent;
            goto LABEL_41;
          case 3uLL:
            unint64_t v19 = (unint64_t *)&qword_99F80;
            double v20 = type metadata accessor for ChapterTitleContent;
LABEL_41:
            uint64_t v18 = sub_251A4(v19, (void (*)(uint64_t))v20);
            break;
          default:
            uint64_t v18 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
            break;
        }
        uint64_t ObjectType = swift_getObjectType();
        char v22 = *(void (**)(void, void, uint64_t, uint64_t))(v18 + 40);
        swift_retain();
        v22(0, 0, ObjectType, v18);
        swift_release();
        return swift_release();
      }
      uint64_t v11 = *a1;
      if ((*a1 & 0xC000000000000001) == 0)
      {
        if ((v4 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v4 < *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8)))
        {
          uint64_t v12 = *(void *)(v11 + 8 * v4 + 32);
          swift_retain();
          swift_retain();
          goto LABEL_27;
        }
        __break(1u);
LABEL_58:
        __break(1u);
        JUMPOUT(0x24A28);
      }
      swift_retain();
      uint64_t v12 = sub_77080();
LABEL_27:
      switch(*(void *)(v12 + 16) >> 62)
      {
        case 1:
          goto LABEL_31;
        case 2:
          char v14 = &qword_98D10;
          char v15 = type metadata accessor for SpeakerContent;
          goto LABEL_34;
        case 3:
          char v14 = (unint64_t *)&qword_99F80;
          char v15 = type metadata accessor for ChapterTitleContent;
          goto LABEL_34;
        default:
          uint64_t v13 = sub_251A4(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
          break;
      }
      goto LABEL_35;
    }
  }
  else
  {
    if ((*(void *)(*(void *)(v2 + 32) + 16) & 0x8000000000000000) != 0)
    {
      if (v3 == 1) {
        goto LABEL_16;
      }
      uint64_t v7 = 5;
      while ((*(void *)(*(void *)(v2 + 8 * v7) + 16) & 0x8000000000000000) != 0)
      {
        uint64_t v8 = v7 - 3;
        if (__OFADD__(v7 - 4, 1))
        {
          __break(1u);
          goto LABEL_44;
        }
        ++v7;
        if (v8 == v3) {
          goto LABEL_16;
        }
      }
      swift_bridgeObjectRelease();
      unint64_t v4 = v7 - 4;
      if (v7 - 4 < 0)
      {
        __break(1u);
LABEL_31:
        char v14 = (unint64_t *)&unk_99F90;
        char v15 = type metadata accessor for SilentContent;
LABEL_34:
        uint64_t v13 = sub_251A4(v14, (void (*)(uint64_t))v15);
LABEL_35:
        swift_retain();
        swift_release();
        uint64_t v16 = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t))(v13 + 32))(v16, v13);
        swift_release();
        uint64_t KeyPath = swift_getKeyPath();
        __chkstk_darwin(KeyPath);
        sub_75530();
        swift_release();
        swift_release();
        unint64_t v10 = *(void *)(v2 + 16);
        goto LABEL_36;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v4 = 0;
    }
    if (v4 < *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8)))
    {
      uint64_t v2 = *(void *)(v2 + 32 + 8 * v4);
      swift_retain();
      goto LABEL_8;
    }
    __break(1u);
  }
  if (v3 != 1)
  {
    unint64_t v4 = 1;
    do
    {
      uint64_t v24 = *(void *)(sub_77080() + 16);
      swift_unknownObjectRelease();
      if ((v24 & 0x8000000000000000) == 0) {
        goto LABEL_47;
      }
      unint64_t v25 = v4 + 1;
      if (__OFADD__(v4, 1)) {
        goto LABEL_58;
      }
      ++v4;
    }
    while (v25 != v3);
  }
LABEL_16:

  return swift_bridgeObjectRelease();
}

uint64_t sub_24A48(uint64_t *a1)
{
  uint64_t v2 = *a1;
  unint64_t v3 = (unint64_t)*a1 >> 62;
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_77180();
    if (v4)
    {
LABEL_3:
      unint64_t v5 = v4 - 1;
      if (__OFSUB__(v4, 1))
      {
        __break(1u);
      }
      else
      {
        unint64_t v1 = v2 & 0xC000000000000001;
        if ((v2 & 0xC000000000000001) == 0)
        {
          if ((v5 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v5 < *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8)))
          {
            uint64_t v6 = *(void *)(v2 + 8 * v5 + 32);
            swift_retain();
            goto LABEL_8;
          }
          __break(1u);
          goto LABEL_45;
        }
      }
      uint64_t v6 = sub_77080();
LABEL_8:
      swift_bridgeObjectRelease();
      unint64_t v7 = *(void *)(v6 + 16);
      if (v7 >> 62 != 1)
      {
        if (!(v7 >> 62))
        {
          swift_getKeyPath();
          v32[0] = v7;
          sub_251A4((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
          swift_retain();
          swift_retain();
          sub_75540();
          swift_release();
          uint64_t v8 = (uint64_t *)(v7 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerEndTime);
          if ((*(unsigned char *)(v7 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerEndTime + 8) & 1) == 0)
          {
            uint64_t v9 = *v8;
            double v10 = *(double *)v8;
            double v11 = (double)sub_77380() - v10;
            sub_75630();
            if (v12 < v11)
            {
              uint64_t v13 = sub_77380();
              unint64_t v14 = *(void *)(v6 + 16);
              unint64_t v15 = v14 >> 62;
              uint64_t v16 = v13;
              switch(v14 >> 62)
              {
                case 1uLL:
                  uint64_t v17 = *(void *)((char *)&dword_10 + (v14 & 0x3FFFFFFFFFFFFFFFLL));
                  swift_retain();
                  uint64_t v20 = 0;
                  uint64_t v18 = 0;
                  goto LABEL_34;
                case 2uLL:
                  uint64_t v28 = (void *)(v14 & 0x3FFFFFFFFFFFFFFFLL);
                  uint64_t v17 = v28[5];
                  uint64_t v18 = v28[7];
                  uint64_t v19 = v28[8];
                  uint64_t v20 = swift_bridgeObjectRetain();
                  break;
                case 3uLL:
                  uint64_t v29 = v14 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v17 = *(void *)(v29 + 112);
                  uint64_t v18 = *(void *)(v29 + 128);
                  uint64_t v20 = swift_bridgeObjectRetain();
LABEL_34:
                  uint64_t v19 = 0;
                  break;
                default:
                  uint64_t v17 = *(void *)(v14 + 16);
                  uint64_t v18 = *(void *)(v14 + 32);
                  uint64_t v19 = *(void *)(v14 + 40);
                  uint64_t v20 = swift_bridgeObjectRetain();
                  break;
              }
              v32[0] = v17;
              v32[1] = v20;
              v32[2] = v18;
              v32[3] = v19;
              char v33 = v15;
              type metadata accessor for SilentContent();
              swift_allocObject();
              uint64_t v30 = sub_4B798(0, 1, 0, 1, v9, 0, COERCE__INT64((double)v16), 0, v32) | 0x4000000000000000;
              type metadata accessor for TranscriptContentViewModel();
              uint64_t v31 = swift_allocObject();
              *(void *)(v31 + 16) = v30;
              v32[0] = v31;
              swift_retain();
              sub_76A10();
              swift_release();
              swift_release();
            }
          }
          swift_release();
          return swift_release_n();
        }
        goto LABEL_28;
      }
      if (v3)
      {
        swift_retain();
        swift_bridgeObjectRetain();
        uint64_t v21 = sub_77180();
        if (v21)
        {
LABEL_16:
          unint64_t v22 = v21 - 1;
          if (!__OFSUB__(v21, 1))
          {
            if (v1)
            {
              uint64_t v23 = sub_77080();
              goto LABEL_25;
            }
            if ((v22 & 0x8000000000000000) == 0)
            {
              if (v22 < *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8)))
              {
                uint64_t v23 = *(void *)(v2 + 8 * v22 + 32);
                swift_retain();
LABEL_25:
                swift_bridgeObjectRelease();
                unint64_t v24 = *(void *)(v23 + 16);
                if (v24 >> 62 == 1)
                {
                  uint64_t v25 = v24 & 0x3FFFFFFFFFFFFFFFLL;
                  swift_retain();
                  swift_release();
                  uint64_t v26 = sub_77380();
                  swift_release();
                  swift_release();
                  *(double *)(v25 + 72) = (double)v26;
                  *(unsigned char *)(v25 + 80) = 0;
                }
                else
                {
                  swift_release();
                  swift_release();
                }
                goto LABEL_28;
              }
LABEL_47:
              __break(1u);
              JUMPOUT(0x24EF0);
            }
LABEL_46:
            __break(1u);
            goto LABEL_47;
          }
LABEL_45:
          __break(1u);
          goto LABEL_46;
        }
      }
      else
      {
        uint64_t v21 = *(void *)((char *)&dword_10 + (v2 & 0xFFFFFFFFFFFFFF8));
        swift_retain();
        swift_bridgeObjectRetain();
        if (v21) {
          goto LABEL_16;
        }
      }
      swift_release();
      swift_bridgeObjectRelease();
LABEL_28:
      return swift_release();
    }
  }
  else
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (*a1 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_24F00(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  unint64_t v4 = *v2;
  int64_t v5 = *(void *)(*v2 + 16);
  if (v5 < a2)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > *(void *)(v4 + 24) >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    unint64_t v4 = sub_3EF28(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t v12 = *(void *)(sub_765B0() - 8);
  unint64_t v13 = v4 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
  uint64_t v14 = *(void *)(v12 + 72);
  uint64_t v15 = v14 * a1;
  unint64_t v16 = v13 + v14 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_25;
  }
  uint64_t v18 = *(void *)(v4 + 16);
  uint64_t v19 = v18 - a2;
  if (__OFSUB__(v18, a2)) {
    goto LABEL_31;
  }
  if ((v19 & 0x8000000000000000) == 0)
  {
    if (v15 < v14 * a2 || v16 >= v13 + v14 * a2 + v19 * v14)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v15 != v14 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v21 = *(void *)(v4 + 16);
    BOOL v22 = __OFADD__(v21, v8);
    uint64_t v23 = v21 - v7;
    if (!v22)
    {
      *(void *)(v4 + 16) = v23;
LABEL_25:
      *uint64_t v2 = v4;
      return result;
    }
    goto LABEL_32;
  }
LABEL_33:
  uint64_t result = sub_771D0();
  __break(1u);
  return result;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_2512C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_25184()
{
  return sub_38F94(*(void *)(v0 + 16), *(double *)(v0 + 24));
}

uint64_t sub_251A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_251EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 != -1) {
    return sub_8944(a1, a2, a3, a4, a5);
  }
  return a1;
}

uint64_t sub_25210()
{
  return sub_25184();
}

uint64_t sub_25228@<X0>(uint64_t a1@<X8>)
{
  uint64_t v64 = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_98E18);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = (char *)&v55 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_98E20);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_98E28);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_98E30);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  unint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_98E38);
  __chkstk_darwin(v59);
  uint64_t v56 = (uint64_t)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_98E40);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v60 = v18;
  uint64_t v61 = v19;
  __chkstk_darwin(v18);
  char v57 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_98E48);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v62 = v21;
  uint64_t v63 = v22;
  __chkstk_darwin(v21);
  uint64_t v58 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)unint64_t v4 = sub_75FE0();
  *((void *)v4 + 1) = 0;
  v4[16] = 0;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_98E50);
  sub_258A4(v1, (uint64_t)&v4[*(int *)(v24 + 44)]);
  char v25 = sub_76100();
  sub_75DC0();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  sub_C50C((uint64_t)v4, (uint64_t)v8, &qword_98E18);
  uint64_t v34 = &v8[*(int *)(v6 + 44)];
  *uint64_t v34 = v25;
  *((void *)v34 + 1) = v27;
  *((void *)v34 + 2) = v29;
  *((void *)v34 + 3) = v31;
  *((void *)v34 + 4) = v33;
  v34[40] = 0;
  sub_CA50((uint64_t)v4, &qword_98E18);
  uint64_t v35 = type metadata accessor for TextContent(0);
  uint64_t v36 = sub_27CB0((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  uint64_t v37 = sub_75DF0();
  char v39 = v38;
  sub_C50C((uint64_t)v8, (uint64_t)v12, &qword_98E20);
  uint64_t v40 = &v12[*(int *)(v10 + 44)];
  *(void *)uint64_t v40 = v37;
  v40[8] = v39 & 1;
  sub_CA50((uint64_t)v8, &qword_98E20);
  uint64_t v41 = sub_75DF0();
  LOBYTE(v37) = v42;
  sub_C50C((uint64_t)v12, (uint64_t)v16, &qword_98E28);
  uint64_t v43 = &v16[*(int *)(v14 + 44)];
  *(void *)uint64_t v43 = v41;
  v43[8] = v37 & 1;
  sub_CA50((uint64_t)v12, &qword_98E28);
  uint64_t v44 = v56;
  sub_C50C((uint64_t)v16, v56, &qword_98E30);
  sub_CA50((uint64_t)v16, &qword_98E30);
  uint64_t v45 = sub_273F8(&qword_98E58, &qword_98E38, (void (*)(void))sub_27380, (void (*)(void))sub_275C8);
  unint64_t v46 = v57;
  uint64_t v47 = v59;
  sub_76290();
  sub_CA50(v44, &qword_98E38);
  uint64_t v48 = type metadata accessor for TextContent.LiveText(0);
  swift_retain();
  uint64_t v65 = v47;
  uint64_t v66 = v35;
  uint64_t v67 = v45;
  uint64_t v68 = v36;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v50 = sub_27CB0(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  double v51 = v58;
  uint64_t v52 = v60;
  sub_76290();
  swift_release();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v46, v52);
  type metadata accessor for TranscriptPresentationContext();
  swift_retain();
  uint64_t v65 = v52;
  uint64_t v66 = v48;
  uint64_t v67 = OpaqueTypeConformance2;
  uint64_t v68 = v50;
  swift_getOpaqueTypeConformance2();
  sub_27CB0((unint64_t *)&qword_9A3D0, (void (*)(uint64_t))type metadata accessor for TranscriptPresentationContext);
  uint64_t v53 = v62;
  sub_76290();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v51, v53);
}

uint64_t sub_258A4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v47 = a2;
  uint64_t v3 = type metadata accessor for TappablePaddingView();
  uint64_t v4 = v3 - 8;
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v46 = (uint64_t)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (uint64_t *)((char *)&v37 - v8);
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v12 = (uint64_t *)((char *)&v37 - v11);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v37 - v13;
  uint64_t v48 = (uint64_t)&v37 - v13;
  uint64_t v15 = sub_76430();
  uint64_t v16 = a1[1];
  uint64_t v17 = a1[2];
  *uint64_t v12 = v15;
  v12[1] = v18;
  v12[2] = v16;
  uint64_t v12[3] = v17;
  uint64_t v19 = (uint64_t *)((char *)v12 + *(int *)(v4 + 32));
  *uint64_t v19 = swift_getKeyPath();
  __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
  swift_storeEnumTagMultiPayload();
  sub_C268((uint64_t)v12, (uint64_t)v14);
  uint64_t v45 = *(void *)(*(void *)(*a1 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_liveText)
                  + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText_descriptorRanges);
  type metadata accessor for TextContent(0);
  sub_27CB0((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v43 = sub_75DF0();
  int v44 = v20;
  char v49 = 0;
  sub_76380();
  int v42 = v50;
  uint64_t v21 = v51;
  char v49 = 0;
  sub_76380();
  unsigned __int8 v22 = v50;
  uint64_t v41 = v51;
  type metadata accessor for TextContent.LiveText(0);
  sub_27CB0(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  uint64_t v23 = sub_75DF0();
  int v40 = v24;
  type metadata accessor for TranscriptPresentationContext();
  sub_27CB0((unint64_t *)&qword_9A3D0, (void (*)(uint64_t))type metadata accessor for TranscriptPresentationContext);
  uint64_t v38 = sub_75DF0();
  int v39 = v25;
  uint64_t v26 = sub_76440();
  uint64_t v27 = a1[1];
  uint64_t v28 = a1[2];
  uint64_t *v9 = v26;
  v9[1] = v29;
  v9[2] = v27;
  v9[3] = v28;
  uint64_t v30 = (uint64_t *)((char *)v9 + *(int *)(v4 + 32));
  *uint64_t v30 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  sub_C268((uint64_t)v9, (uint64_t)v12);
  sub_C2CC(v48, (uint64_t)v9);
  uint64_t v31 = v46;
  sub_C2CC((uint64_t)v12, v46);
  uint64_t v32 = v47;
  sub_C2CC((uint64_t)v9, v47);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_98E98);
  uint64_t v34 = v32 + *(int *)(v33 + 48);
  *(void *)uint64_t v34 = v45;
  *(unsigned char *)(v34 + 8) = v42;
  *(void *)(v34 + 16) = v21;
  *(unsigned char *)(v34 + 24) = v22;
  uint64_t v35 = v43;
  *(void *)(v34 + 32) = v41;
  *(void *)(v34 + 40) = v35;
  *(unsigned char *)(v34 + 48) = v44 & 1;
  *(void *)(v34 + 56) = v23;
  *(unsigned char *)(v34 + 64) = v40 & 1;
  *(void *)(v34 + 72) = v38;
  *(unsigned char *)(v34 + 80) = v39 & 1;
  sub_C2CC(v31, v32 + *(int *)(v33 + 64));
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_C330((uint64_t)v12);
  sub_C330(v48);
  sub_C330(v31);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return sub_C330((uint64_t)v9);
}

uint64_t sub_25CF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  char v7 = a3 & 1;
  swift_retain();
  sub_1ADA0(a2, v7);
  swift_release();
  double v8 = sub_37714();
  swift_release();
  sub_764E0();
  uint64_t v10 = v9;
  uint64_t v12 = v11;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_98EC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a4, a1, v13);
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_98EA8);
  uint64_t v15 = (double *)(a4 + *(int *)(result + 36));
  *uint64_t v15 = v8;
  v15[1] = v8;
  *((void *)v15 + 2) = v10;
  *((void *)v15 + 3) = v12;
  return result;
}

uint64_t sub_25DD4()
{
  return swift_release();
}

uint64_t sub_25EB8@<X0>(char a1@<W2>, uint64_t a2@<X8>)
{
  char v3 = a1 & 1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_98ED0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = swift_retain();
  uint64_t v8 = sub_1ADA0(v7, v3);
  swift_release();
  uint64_t v9 = *(void *)(v8 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_liveText);
  swift_getKeyPath();
  v17[0] = v9;
  sub_27CB0(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  swift_release();
  if (*(unsigned char *)(v9 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__isActive) == 1)
  {
    uint64_t v10 = (objc_class *)[self mainBundle];
    v18._countAndFlagsBits = 0xD000000000000025;
    v16._countAndFlagsBits = 0x800000000007E730;
    v18._object = (void *)0x800000000007E700;
    v19.value._countAndFlagsBits = 0;
    v19.value._object = 0;
    v11.super.Class isa = v10;
    v20._countAndFlagsBits = 0;
    v20._object = (void *)0xE000000000000000;
    uint64_t v12 = sub_75060(v18, v19, v11, v20, v16);
    unint64_t v14 = v13;
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v12 = 0;
    unint64_t v14 = 0xE000000000000000;
  }
  v17[0] = v12;
  v17[1] = v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_98ED8);
  sub_D034(&qword_98EE0, &qword_98ED8);
  sub_C1AC();
  sub_762D0();
  swift_bridgeObjectRelease();
  return sub_27AA0((uint64_t)v6, a2);
}

uint64_t sub_26114@<X0>(uint64_t a1@<X8>)
{
  return sub_25EB8(*(unsigned char *)(v1 + 8), a1);
}

uint64_t sub_26120()
{
  return sub_762F0();
}

uint64_t sub_261B8()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_983C8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_76160();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for Font.TextStyle.title3(_:), v3);
  uint64_t v7 = enum case for Font.Design.serif (_:);
  uint64_t v8 = sub_76110();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 104))(v2, v7, v8);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v2, 0, 1, v8);
  sub_76130();
  uint64_t v10 = sub_76150();
  sub_CA50((uint64_t)v2, &qword_983C8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  qword_9F0F0 = v10;
  return result;
}

uint64_t sub_263A8()
{
  if (qword_97FB8 != -1) {
    swift_once();
  }
  uint64_t result = sub_76140();
  qword_9F0F8 = result;
  return result;
}

uint64_t sub_26400()
{
  uint64_t result = sub_26420();
  qword_9F100 = result;
  return result;
}

uint64_t sub_26420()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_98D38);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_78AC0;
  *(void *)(inited + 32) = UIFontDescriptorTraitsAttribute;
  __swift_instantiateConcreteTypeFromMangledName(&qword_98D40);
  uint64_t v1 = swift_initStackObject();
  *(_OWORD *)(v1 + 16) = xmmword_78AC0;
  *(void *)(v1 + 32) = UIFontWeightTrait;
  *(UIFontWeight *)(v1 + 40) = UIFontWeightRegular;
  uint64_t v2 = UIFontDescriptorTraitsAttribute;
  uint64_t v3 = UIFontWeightTrait;
  *(void *)(inited + 40) = sub_67770(v1);
  unint64_t v4 = sub_6787C(inited);
  sub_26A38();
  uint64_t v5 = (void *)sub_76DE0();
  id v6 = [v5 fontDescriptor];

  id v7 = [v6 fontDescriptorWithDesign:UIFontDescriptorSystemDesignSerif];
  if (v7)
  {
    sub_26654(v4);
    swift_bridgeObjectRelease();
    type metadata accessor for AttributeName(0);
    sub_27CB0(&qword_981A0, type metadata accessor for AttributeName);
    Class isa = sub_76840().super.isa;
    swift_bridgeObjectRelease();
    id v9 = [v7 fontDescriptorByAddingAttributes:isa];

    if (v9)
    {
      [v9 pointSize];
      id v11 = [self fontWithDescriptor:v9 size:v10];

      return (uint64_t)v11;
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  return sub_76DE0();
}

uint64_t sub_26654(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_98D50);
    uint64_t v2 = (unsigned char *)sub_771C0();
  }
  else
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  id v6 = v2 + 64;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v28 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v28 << 6);
      goto LABEL_28;
    }
    int64_t v11 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v11 >= v26) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v11);
    int64_t v13 = v28 + 1;
    if (!v12)
    {
      int64_t v13 = v28 + 2;
      if (v28 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v12 = *(void *)(v27 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v28 + 3;
        if (v28 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v12 = *(void *)(v27 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v28 + 4;
          if (v28 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v12 = *(void *)(v27 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v28 = v13;
LABEL_28:
    uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * v10);
    *(void *)&v31[0] = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    *(void *)&v30[0] = v15;
    id v16 = *(id *)&v31[0];
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_98D58);
    swift_dynamicCast();
    uint64_t v17 = *(void *)&v31[0];
    sub_26A78((_OWORD *)((char *)v31 + 8), v29);
    sub_26A78(v29, v31);
    sub_26A78(v31, v30);
    sub_76910();
    sub_772D0();
    sub_76940();
    Swift::Int v18 = sub_77320();
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v19 = -1 << v2[32];
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)]) != 0)
    {
      unint64_t v8 = __clz(__rbit64((-1 << v20) & ~*(void *)&v6[8 * (v20 >> 6)])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)&v6[8 * v21];
      }
      while (v25 == -1);
      unint64_t v8 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)&v6[(v8 >> 3) & 0x1FFFFFFFFFFFFFF8] |= 1 << v8;
    *(void *)(*((void *)v2 + 6) + 8 * v8) = v17;
    uint64_t result = (uint64_t)sub_26A78(v30, (_OWORD *)(*((void *)v2 + 7) + 32 * v8));
    ++*((void *)v2 + 2);
  }
  int64_t v14 = v28 + 5;
  if (v28 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_26A88();
    return (uint64_t)v2;
  }
  unint64_t v12 = *(void *)(v27 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v28 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v12 = *(void *)(v27 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

id sub_269FC()
{
  id result = [self secondaryLabelColor];
  qword_9F108 = (uint64_t)result;
  return result;
}

unint64_t sub_26A38()
{
  unint64_t result = qword_98D48;
  if (!qword_98D48)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_98D48);
  }
  return result;
}

_OWORD *sub_26A78(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_26A88()
{
  return swift_release();
}

uint64_t *sub_26A90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    uint64_t v7 = *(int *)(a3 + 24);
    unint64_t v8 = (uint64_t *)((char *)a1 + v7);
    unint64_t v9 = (uint64_t *)((char *)a2 + v7);
    swift_retain();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_753F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *unint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_26BB8(uint64_t a1, uint64_t a2)
{
  swift_release();
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_753F0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
    return v6(v4, v5);
  }
  else
  {
    return swift_release();
  }
}

uint64_t sub_26C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_753F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  else
  {
    *uint64_t v6 = *v7;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_26D54(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v7 = *(int *)(a3 + 24);
    uint64_t v8 = (void *)((char *)a1 + v7);
    unint64_t v9 = (void *)((char *)a2 + v7);
    sub_CA50((uint64_t)a1 + v7, &qword_98368);
    __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_753F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
    }
    else
    {
      *uint64_t v8 = *v9;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_26E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_753F0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(v6, v7, v9);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v6, v7, *(void *)(*(void *)(v8 - 8) + 64));
  }
  return a1;
}

uint64_t sub_26F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (const void *)(a2 + v6);
    sub_CA50(a1 + v6, &qword_98368);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_753F0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_27048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2705C);
}

uint64_t sub_2705C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_988B0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    int64_t v11 = (char *)a1 + *(int *)(a3 + 24);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_27110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_27124);
}

void *sub_27124(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_988B0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 24);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t type metadata accessor for TextContentView()
{
  uint64_t result = qword_98DB8;
  if (!qword_98DB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2721C()
{
  sub_176CC();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_272C4()
{
  return sub_27CB0(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
}

uint64_t sub_2730C(uint64_t a1)
{
  uint64_t result = sub_27CB0((unint64_t *)&unk_9A760, (void (*)(uint64_t))type metadata accessor for TextContentView);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_27364()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_27380()
{
  return sub_273F8(&qword_98E60, &qword_98E30, (void (*)(void))sub_273BC, (void (*)(void))sub_27574);
}

uint64_t sub_273BC()
{
  return sub_273F8(&qword_98E68, &qword_98E28, (void (*)(void))sub_27480, (void (*)(void))sub_27520);
}

uint64_t sub_273F8(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_27480()
{
  unint64_t result = qword_98E70;
  if (!qword_98E70)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_98E20);
    sub_D034(&qword_98E78, &qword_98E18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98E70);
  }
  return result;
}

unint64_t sub_27520()
{
  unint64_t result = qword_98E80;
  if (!qword_98E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98E80);
  }
  return result;
}

unint64_t sub_27574()
{
  unint64_t result = qword_98E88;
  if (!qword_98E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98E88);
  }
  return result;
}

unint64_t sub_275C8()
{
  unint64_t result = qword_98E90;
  if (!qword_98E90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98E90);
  }
  return result;
}

ValueMetadata *type metadata accessor for TextContentView.AccessibilityShouldIncludeMediaDescriptionsRotor()
{
  return &type metadata for TextContentView.AccessibilityShouldIncludeMediaDescriptionsRotor;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for TextContentView.AccessibilityLabel()
{
  return &type metadata for TextContentView.AccessibilityLabel;
}

uint64_t initializeBufferWithCopyOfBuffer for TextContentView.ActiveScaleEffect(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for SilentContent.ID()
{
  return swift_release();
}

uint64_t _s19PodcastsTranscripts15TextContentViewV18AccessibilityLabelVwca_0(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TextContentView.ActiveScaleEffect(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_release();
  return a1;
}

uint64_t _s19PodcastsTranscripts15TextContentViewV18AccessibilityLabelVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s19PodcastsTranscripts15TextContentViewV18AccessibilityLabelVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TextContentView.ActiveScaleEffect()
{
  return &type metadata for TextContentView.ActiveScaleEffect;
}

uint64_t sub_277C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_27998()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_279B4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_279D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_279EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_25CF8(a1, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24), a2);
}

unint64_t sub_279F8()
{
  unint64_t result = qword_98EB8;
  if (!qword_98EB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_98EA8);
    sub_D034(&qword_98EC0, &qword_98EC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_98EB8);
  }
  return result;
}

uint64_t sub_27AA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_98ED0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_27B08()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_27BAC()
{
  return sub_27BE4(&qword_98EF8, &qword_98ED0, &qword_98EE0, &qword_98ED8);
}

uint64_t sub_27BE4(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    sub_D034(a3, a4);
    sub_27CB0(&qword_98320, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_27CB0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_27CF8()
{
  return sub_27BE4(&qword_98F00, &qword_98F08, &qword_98EF0, &qword_98EE8);
}

uint64_t sub_27D3C(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x6C616D726F6ELL;
  }
  else {
    uint64_t v2 = 0x64656C616373;
  }
  if (a2) {
    uint64_t v3 = 0x6C616D726F6ELL;
  }
  else {
    uint64_t v3 = 0x64656C616373;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_77230();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

Swift::Int sub_27DB4()
{
  return sub_77320();
}

uint64_t sub_27E24()
{
  sub_76940();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_27E78()
{
  return sub_77320();
}

uint64_t sub_27EE4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  v8._countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_8EF08;
  v8._object = v3;
  Swift::Int v5 = sub_771F0(v4, v8);
  uint64_t result = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *a2 = v7;
  return result;
}

void sub_27F44(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x64656C616373;
  if (*v1) {
    uint64_t v2 = 0x6C616D726F6ELL;
  }
  *a1 = v2;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_27F74(char *a1, char *a2)
{
  return sub_27D3C(*a1, *a2);
}

uint64_t sub_27F80(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2A1D4(*a1, *a2);
}

uint64_t sub_27F8C()
{
  uint64_t v1 = sub_754B0();
  uint64_t v2 = *(void *)(v1 - 8);
  ((void (*)(void))__chkstk_darwin)();
  Swift::OpaquePointer v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_99018);
  ((void (*)(void))__chkstk_darwin)();
  char v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A310);
  uint64_t v8 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  int64_t v13 = (char *)&v28 - v12;
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v16 = v0[3];
  if (v16 != 1)
  {
    if (v16 == 2) {
      uint64_t v17 = 0;
    }
    else {
      uint64_t v17 = v0[3];
    }
    goto LABEL_16;
  }
  uint64_t v29 = v0;
  uint64_t v30 = 1;
  __swift_project_boxed_opaque_existential_1(v0 + 9, v0[12]);
  sub_75460();
  if (qword_97F88 != -1) {
    swift_once();
  }
  uint64_t v18 = __swift_project_value_buffer(v1, (uint64_t)qword_98558);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v13, v18, v1);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v2 + 56))(v13, 0, 1, v1);
  uint64_t v19 = (uint64_t)&v7[*(int *)(v5 + 48)];
  sub_2A3FC((uint64_t)v15, (uint64_t)v7);
  sub_2A3FC((uint64_t)v13, v19);
  unint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48);
  if (v20((uint64_t)v7, 1, v1) == 1)
  {
    sub_CA50((uint64_t)v13, &qword_9A310);
    sub_CA50((uint64_t)v15, &qword_9A310);
    int v21 = v20(v19, 1, v1);
    uint64_t v16 = v30;
    if (v21 == 1)
    {
      sub_CA50((uint64_t)v7, &qword_9A310);
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  sub_2A3FC((uint64_t)v7, (uint64_t)v10);
  if (v20(v19, 1, v1) == 1)
  {
    sub_CA50((uint64_t)v13, &qword_9A310);
    sub_CA50((uint64_t)v15, &qword_9A310);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v10, v1);
    uint64_t v16 = v30;
LABEL_12:
    sub_CA50((uint64_t)v7, &qword_99018);
LABEL_15:
    uint64_t v17 = 65;
    goto LABEL_16;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 32))(v4, v19, v1);
  sub_2A464();
  char v22 = sub_768A0();
  unint64_t v23 = *(void (**)(char *, uint64_t))(v2 + 8);
  v23(v4, v1);
  sub_CA50((uint64_t)v13, &qword_9A310);
  sub_CA50((uint64_t)v15, &qword_9A310);
  v23(v10, v1);
  sub_CA50((uint64_t)v7, &qword_9A310);
  uint64_t v16 = v30;
  if ((v22 & 1) == 0) {
    goto LABEL_15;
  }
LABEL_14:
  unsigned int v24 = *((unsigned __int8 *)v29 + 145);
  uint64_t v17 = 129;
  switch(*((unsigned char *)v29 + 16))
  {
    case 1:
      int64_t v26 = v29;
      __swift_project_boxed_opaque_existential_1(v29 + 4, v29[7]);
      if (sub_75260()) {
        uint64_t v17 = 1;
      }
      else {
        uint64_t v17 = 65;
      }
      __swift_project_boxed_opaque_existential_1(v26 + 4, v26[7]);
      sub_75260();
      break;
    case 2:
    case 0xF:
      goto LABEL_15;
    case 3:
    case 9:
    case 0xC:
    case 0xE:
      uint64_t v17 = *((unsigned __int8 *)v29 + 145);
      break;
    case 4:
      if (v24 == 129) {
        uint64_t v17 = 129;
      }
      else {
        uint64_t v17 = 64;
      }
      break;
    case 5:
      if (v24 == 129) {
        uint64_t v17 = 129;
      }
      else {
        uint64_t v17 = 0;
      }
      break;
    case 6:
      unsigned int v27 = v24 >> 6;
      if (v24 == 129 && v27 == 2) {
        goto LABEL_48;
      }
      if (v27)
      {
        if (v27 == 1) {
          goto LABEL_15;
        }
        if (v24 == 128) {
          uint64_t v17 = 128;
        }
        else {
          uint64_t v17 = 129;
        }
      }
      else
      {
        uint64_t v17 = 1;
      }
      break;
    case 7:
      break;
    case 8:
      if (v24 >> 6)
      {
        if (v24 >> 6 == 1) {
          goto LABEL_15;
        }
        if (v24 == 128) {
          uint64_t v17 = 128;
        }
        else {
          uint64_t v17 = 129;
        }
      }
      else
      {
        uint64_t v17 = 1;
      }
      break;
    case 0xA:
      if ((v24 & 0x80) != 0) {
        goto LABEL_15;
      }
      uint64_t v17 = v24 & 1 | 0x40;
      break;
    case 0xB:
      if ((v24 & 0x80) != 0) {
LABEL_48:
      }
        uint64_t v17 = 1;
      else {
        uint64_t v17 = v24 & 1;
      }
      break;
    case 0xD:
      uint64_t v17 = 128;
      break;
    case 0x10:
      if ((v24 & 0x80) != 0) {
        goto LABEL_15;
      }
      uint64_t v17 = v24 & 1 | 0x40;
      break;
    default:
      if (v24 == 129) {
        uint64_t v17 = 1;
      }
      else {
        uint64_t v17 = *((unsigned __int8 *)v29 + 145);
      }
      break;
  }
LABEL_16:
  sub_2A1C0(v16);
  return v17;
}

uint64_t sub_285D4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_758C0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_76550();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (uint64_t *)((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_2A2EC();
  uint64_t *v9 = sub_76CA0();
  (*(void (**)(uint64_t *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchPredicate.onQueue(_:), v6);
  char v10 = sub_76580();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    uint64_t v12 = *(void **)(v1 + 152);
    if (v12) {
      [v12 invalidate];
    }
    uint64_t v13 = sub_27F8C();
    unsigned __int8 v15 = v14;
    sub_758A0();
    sub_18A84(v13, v15);
    sub_18A84(v13, v15);
    uint64_t v16 = sub_758B0();
    os_log_type_t v17 = sub_76B80();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v32 = v3;
      uint64_t v19 = v18;
      uint64_t v31 = swift_slowAlloc();
      uint64_t v34 = v31;
      *(_DWORD *)uint64_t v19 = 136315394;
      uint64_t v33 = sub_7D80(0xD000000000000019, 0x800000000007E8B0, &v34);
      sub_76F90();
      *(_WORD *)(v19 + 12) = 2080;
      sub_18A84(v13, v15);
      uint64_t v20 = sub_28FCC(v13, v15);
      uint64_t v29 = v5;
      uint64_t v30 = v2;
      uint64_t v21 = v20;
      unint64_t v23 = v22;
      sub_18A70(v13, v15);
      uint64_t v33 = sub_7D80(v21, v23, &v34);
      sub_76F90();
      swift_bridgeObjectRelease();
      sub_18A70(v13, v15);
      sub_18A70(v13, v15);
      _os_log_impl(&def_1E2E4, v16, v17, "%s State changed to %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(char *, uint64_t))(v32 + 8))(v29, v30);
    }
    else
    {
      sub_18A70(v13, v15);
      sub_18A70(v13, v15);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    if (v15 < 2u)
    {
      *(unsigned char *)(v1 + 145) = v13;
      if (v13 != 128) {
        sub_28CB8();
      }
    }
    else if (v15 - 3 >= 2)
    {
      *(unsigned char *)(v1 + 145) = v13;
    }
    else
    {
      *(unsigned char *)(v1 + 145) = 65;
    }
    sub_18A84(v13, v15);
    sub_1857C(v13, v15);
    int v24 = *(unsigned __int8 *)(v1 + 144);
    if (v24 == 255
      || (uint64_t v25 = *(void *)(v1 + 136),
          sub_18A84(v13, v15),
          sub_2A32C(v25, v24),
          char v26 = sub_29EAC(v25, v24, v13, v15),
          sub_18A70(v13, v15),
          sub_2A2D8(v25, v24),
          (v26 & 1) == 0))
    {
      if (swift_unknownObjectWeakLoadStrong())
      {
        sub_6297C(v13, v15, *(unsigned char *)(v1 + 16));
        swift_unknownObjectRelease();
      }
      uint64_t v27 = *(void *)(v1 + 136);
      *(void *)(v1 + 136) = v13;
      char v28 = *(unsigned char *)(v1 + 144);
      *(unsigned char *)(v1 + 144) = v15;
      return sub_2A2D8(v27, v28);
    }
    else
    {
      return sub_18A70(v13, v15);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_28A98@<X0>(uint64_t result@<X0>, char *a2@<X1>, unsigned char *a3@<X8>)
{
  char v3 = *a2;
  *a3 = *(unsigned char *)(result + 1);
  a3[1] = v3;
  return result;
}

uint64_t sub_28AAC(char a1, char a2)
{
  if (a1 & 1) == 0 || (a2)
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (!result) {
      return result;
    }
  }
  else
  {
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (!result) {
      return result;
    }
    *(unsigned char *)(result + 16) = 15;
  }
  sub_285D4();
  return swift_release();
}

uint64_t sub_28B3C(uint64_t a1)
{
  uint64_t v2 = sub_75230();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, a1, v2);
  int v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 != enum case for PlaybackController.TransportCommand.seekTo(_:)
    && v6 != enum case for PlaybackController.TransportCommand.jumpForward(_:)
    && v6 != enum case for PlaybackController.TransportCommand.jumpBackward(_:))
  {
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + 16) = 6;
    sub_285D4();
    return swift_release();
  }
  return result;
}

void sub_28CB8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + 152);
  if (v2) {
    [v2 invalidate];
  }
  uint64_t v3 = swift_allocObject();
  swift_weakInit();
  uint64_t v12 = sub_2A378;
  uint64_t v13 = v3;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_28EA8;
  uint64_t v11 = &block_descriptor_1;
  uint64_t v4 = _Block_copy(v10);
  uint64_t v5 = self;
  swift_retain();
  id v6 = [v5 timerWithTimeInterval:0 repeats:v4 block:5.0];
  _Block_release(v4);
  swift_release();
  swift_release();
  sub_2A398(v1 + 168, (uint64_t)v10);
  uint64_t v7 = v11;
  uint64_t v8 = v12;
  __swift_project_boxed_opaque_existential_1(v10, (uint64_t)v11);
  (*((void (**)(id, const NSRunLoopMode, void *, uint64_t (*)()))v8 + 1))(v6, NSDefaultRunLoopMode, v7, v8);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v10);
  uint64_t v9 = *(void **)(v1 + 152);
  *(void *)(v1 + 152) = v6;
}

uint64_t sub_28E48()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    *(unsigned char *)(result + 16) = 1;
    sub_285D4();
    return swift_release();
  }
  return result;
}

void sub_28EA8(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

uint64_t sub_28F10()
{
  sub_2A1AC(*(void *)(v0 + 24));
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  __swift_destroy_boxed_opaque_existential_0(v0 + 72);
  swift_release();
  sub_2A2B0(v0 + 120);
  sub_2A2D8(*(void *)(v0 + 136), *(unsigned char *)(v0 + 144));

  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 168);
  return v0;
}

uint64_t sub_28F74()
{
  sub_28F10();

  return _swift_deallocClassInstance(v0, 208, 7);
}

uint64_t sub_28FA8(uint64_t a1, uint64_t a2)
{
  return sub_29EAC(*(void *)a1, *(unsigned char *)(a1 + 8), *(void *)a2, *(unsigned char *)(a2 + 8));
}

uint64_t sub_28FC0(uint64_t *a1, uint64_t *a2)
{
  return sub_29CD4(*a1, *a2);
}

uint64_t sub_28FCC(uint64_t a1, char a2)
{
  uint64_t result = 0x676E6964616F4CLL;
  switch(a2)
  {
    case 1:
      sub_77060(20);
      swift_bridgeObjectRelease();
      unint64_t v4 = 0xD000000000000012;
      goto LABEL_5;
    case 2:
      unint64_t v4 = 0x20676E696D616F52;
      goto LABEL_5;
    case 3:
      uint64_t v5 = 0x2064656C696146;
      sub_18A84(a1, 3);
      __swift_instantiateConcreteTypeFromMangledName(&qword_99010);
      v7._countAndFlagsBits = sub_76F70();
      sub_76970(v7);
      swift_bridgeObjectRelease();
      sub_18A70(a1, 3);
      return v5;
    case 4:
      return result;
    default:
      unint64_t v4 = 0x676E696B63617254;
LABEL_5:
      uint64_t v5 = v4;
      v6._countAndFlagsBits = sub_2914C(a1);
      sub_76970(v6);
      swift_bridgeObjectRelease();
      return v5;
  }
}

uint64_t sub_29140()
{
  return sub_28FCC(*(void *)v0, *(unsigned char *)(v0 + 8));
}

uint64_t sub_2914C(unsigned __int8 a1)
{
  if (!(a1 >> 6))
  {
    v3[0] = 0;
    v3[1] = 0xE000000000000000;
    v4._countAndFlagsBits = 0x657263736C6C7546;
    v4._object = (void *)0xED0000202F206E65;
    sub_76970(v4);
    sub_77100();
    return v3[0];
  }
  if (a1 >> 6 == 1)
  {
    strcpy((char *)v3, "Contained / ");
    BYTE5(v3[1]) = 0;
    HIWORD(v3[1]) = -5120;
    if (a1) {
      v1._countAndFlagsBits = 0x6C616D726F6ELL;
    }
    else {
      v1._countAndFlagsBits = 0x64656C616373;
    }
    v1._object = (void *)0xE600000000000000;
    sub_76970(v1);
    swift_bridgeObjectRelease();
    return v3[0];
  }
  if (a1 == 128) {
    return 0x657370616C6C6F43;
  }
  else {
    return 0x686372616553;
  }
}

uint64_t sub_29274()
{
  return sub_2914C(*v0);
}

id sub_2927C(uint64_t a1, uint64_t a2)
{
  return [*v2 addTimer:a1 forMode:a2];
}

uint64_t sub_29294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t type metadata accessor for TranscriptStateMachine()
{
  return self;
}

uint64_t sub_292CC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_292E0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_292F4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_29308(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t sub_2931C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

unsigned char *storeEnumTagSinglePayload for TranscriptStateMachine.ZoomMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x293FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptStateMachine.ZoomMode()
{
  return &type metadata for TranscriptStateMachine.ZoomMode;
}

uint64_t getEnumTagSinglePayload for TranscriptStateMachine.ViewMode(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7E) {
    goto LABEL_17;
  }
  if (a2 + 130 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 130) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 130;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 130;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 130;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v6 >= 0x7D) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for TranscriptStateMachine.ViewMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 130 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 130) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7D)
  {
    unsigned int v6 = ((a2 - 126) >> 8) + 1;
    *uint64_t result = a2 - 126;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x295ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_295D4(unsigned char *a1)
{
  int v1 = (char)*a1;
  if (v1 >= 0) {
    return *a1 >> 6;
  }
  else {
    return v1 & 1 | 2u;
  }
}

unsigned char *sub_295F0(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_29600(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    *uint64_t result = *result & 1 | ((_BYTE)a2 << 6);
  }
  else {
    *uint64_t result = a2 & 1 | 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptStateMachine.ViewMode()
{
  return &type metadata for TranscriptStateMachine.ViewMode;
}

unint64_t destroy for TranscriptStateMachine.EngineState(unint64_t *a1)
{
  unint64_t result = *a1;
  int v2 = -1;
  if (result < 0xFFFFFFFF) {
    int v2 = result;
  }
  if ((v2 + 1) <= 1) {
    return swift_errorRelease();
  }
  return result;
}

void *_s19PodcastsTranscripts22TranscriptStateMachineC11EngineStateOwCP_0(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  if ((v4 + 1) <= 1) {
    swift_errorRetain();
  }
  *a1 = v3;
  return a1;
}

unint64_t *assignWithCopy for TranscriptStateMachine.EngineState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  LODWORD(v4) = -1;
  if (v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = v3;
  }
  unsigned int v6 = v5 + 1;
  unint64_t v7 = *a2;
  if (*a2 < 0xFFFFFFFF) {
    unint64_t v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1) {
      swift_errorRetain();
    }
    *a1 = v7;
  }
  else if (v8 > 1)
  {
    swift_errorRelease();
    *a1 = *a2;
  }
  else
  {
    swift_errorRetain();
    *a1 = v7;
    swift_errorRelease();
  }
  return a1;
}

unint64_t *assignWithTake for TranscriptStateMachine.EngineState(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a1;
  LODWORD(v4) = -1;
  if (v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = v3;
  }
  unsigned int v6 = v5 + 1;
  unint64_t v7 = *a2;
  if (*a2 < 0xFFFFFFFF) {
    unint64_t v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1) {
    goto LABEL_11;
  }
  if (v8 > 1)
  {
    swift_errorRelease();
LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;
  swift_errorRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptStateMachine.EngineState(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 3) {
    return (v3 - 2);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptStateMachine.EngineState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_29878(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_29898(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *unint64_t result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptStateMachine.EngineState()
{
  return &type metadata for TranscriptStateMachine.EngineState;
}

uint64_t getEnumTagSinglePayload for TranscriptStateMachine.UserEvent(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TranscriptStateMachine.UserEvent(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *unint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x29A34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptStateMachine.UserEvent()
{
  return &type metadata for TranscriptStateMachine.UserEvent;
}

uint64_t initializeBufferWithCopyOfBuffer for TranscriptStateMachine.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_18A84(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t destroy for TranscriptStateMachine.State(uint64_t a1)
{
  return sub_18A70(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t assignWithCopy for TranscriptStateMachine.State(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  sub_18A84(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  char v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_18A70(v5, v6);
  return a1;
}

uint64_t assignWithTake for TranscriptStateMachine.State(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  char v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_18A70(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptStateMachine.State(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptStateMachine.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_29BE4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 3u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 4);
  }
}

uint64_t sub_29BFC(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(void *)unint64_t result = a2 - 4;
    LOBYTE(a2) = 4;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for TranscriptStateMachine.State()
{
  return &type metadata for TranscriptStateMachine.State;
}

unint64_t sub_29C28()
{
  unint64_t result = qword_99000;
  if (!qword_99000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_99000);
  }
  return result;
}

unint64_t sub_29C80()
{
  unint64_t result = qword_99008;
  if (!qword_99008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_99008);
  }
  return result;
}

uint64_t sub_29CD4(uint64_t a1, uint64_t a2)
{
  if (a1 == 1)
  {
    if (a2 != 1) {
      goto LABEL_24;
    }
LABEL_6:
    char v4 = 1;
    return v4 & 1;
  }
  if (a1 == 2)
  {
    if (a2 == 2) {
      goto LABEL_6;
    }
LABEL_24:
    char v4 = 0;
    return v4 & 1;
  }
  if ((unint64_t)(a2 - 1) < 2) {
    goto LABEL_24;
  }
  if (a1)
  {
    swift_getErrorValue();
    sub_2A1C0(a2);
    sub_2A1C0(a1);
    uint64_t v5 = sub_77270();
    uint64_t v7 = v6;
    if (!a2)
    {
      if (v6) {
        goto LABEL_18;
      }
      uint64_t v9 = 0;
      goto LABEL_22;
    }
    uint64_t v8 = v5;
  }
  else
  {
    swift_errorRetain();
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
    if (!a2) {
      goto LABEL_22;
    }
  }
  swift_getErrorValue();
  swift_errorRetain();
  uint64_t v10 = sub_77270();
  uint64_t v9 = v11;
  sub_2A1AC(a2);
  if (!v7)
  {
LABEL_22:
    sub_2A1AC(a1);
    sub_2A1AC(a2);
    if (v9)
    {
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    goto LABEL_6;
  }
  if (!v9)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    sub_2A1AC(a1);
    sub_2A1AC(a2);
    swift_bridgeObjectRelease_n();
    goto LABEL_24;
  }
  if (v8 == v10 && v7 == v9) {
    char v4 = 1;
  }
  else {
    char v4 = sub_77230();
  }
  swift_bridgeObjectRetain();
  sub_2A1AC(a1);
  sub_2A1AC(a2);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_29EAC(uint64_t a1, char a2, uint64_t a3, char a4)
{
  switch(a2)
  {
    case 1:
      if (a4 == 1) {
        goto LABEL_7;
      }
      goto LABEL_47;
    case 2:
      if (a4 == 2) {
        goto LABEL_7;
      }
      goto LABEL_47;
    case 3:
      if (a4 != 3) {
        goto LABEL_47;
      }
      if (a1)
      {
        swift_getErrorValue();
        sub_18A84(a3, 3);
        sub_18A84(a1, 3);
        uint64_t v7 = sub_77270();
        uint64_t v9 = v8;
        if (!a3)
        {
          if (v8) {
            goto LABEL_41;
          }
          uint64_t v17 = 0;
LABEL_45:
          sub_18A70(a1, 3);
          sub_18A70(a3, 3);
          if (!v17)
          {
LABEL_20:
            char v12 = 1;
            return v12 & 1;
          }
          swift_bridgeObjectRelease();
LABEL_47:
          char v12 = 0;
          return v12 & 1;
        }
        uint64_t v10 = v7;
      }
      else
      {
        swift_errorRetain();
        uint64_t v9 = 0;
        uint64_t v10 = 0;
        uint64_t v17 = 0;
        if (!a3) {
          goto LABEL_45;
        }
      }
      swift_getErrorValue();
      swift_errorRetain();
      uint64_t v18 = sub_77270();
      uint64_t v17 = v19;
      sub_18A70(a3, 3);
      if (!v9) {
        goto LABEL_45;
      }
      if (!v17)
      {
LABEL_41:
        swift_bridgeObjectRetain();
        sub_18A70(a1, 3);
        sub_18A70(a3, 3);
        swift_bridgeObjectRelease_n();
        goto LABEL_47;
      }
      if (v10 == v18 && v9 == v17) {
        char v12 = 1;
      }
      else {
        char v12 = sub_77230();
      }
      swift_bridgeObjectRetain();
      sub_18A70(a1, 3);
      sub_18A70(a3, 3);
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      return v12 & 1;
    case 4:
      if (a4 != 4 || a3 != 0) {
        goto LABEL_47;
      }
      goto LABEL_20;
    default:
      if (a4) {
        goto LABEL_47;
      }
LABEL_7:
      int v6 = a1 >> 6;
      if (v6)
      {
        if (v6 != 1)
        {
          if (a1 == 128) {
            char v12 = a3 == 128;
          }
          else {
            char v12 = a3 == 129;
          }
          return v12 & 1;
        }
        if ((a3 & 0xC0) != 0x40) {
          goto LABEL_47;
        }
      }
      else if (a3 >= 0x40u)
      {
        goto LABEL_47;
      }
      if (a1) {
        uint64_t v13 = 0x6C616D726F6ELL;
      }
      else {
        uint64_t v13 = 0x64656C616373;
      }
      if (a3) {
        uint64_t v14 = 0x6C616D726F6ELL;
      }
      else {
        uint64_t v14 = 0x64656C616373;
      }
      if (v13 == v14)
      {
        swift_bridgeObjectRelease_n();
        char v12 = 1;
        return v12 & 1;
      }
      char v15 = sub_77230();
      swift_bridgeObjectRelease_n();
      return v15 & 1;
  }
}

uint64_t sub_2A1AC(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 2) {
    return swift_errorRelease();
  }
  return result;
}

uint64_t sub_2A1C0(uint64_t result)
{
  if ((unint64_t)(result - 1) >= 2) {
    return swift_errorRetain();
  }
  return result;
}

uint64_t sub_2A1D4(unsigned __int8 a1, unsigned __int8 a2)
{
  if (!(a1 >> 6))
  {
    if (a2 < 0x40u) {
      goto LABEL_6;
    }
    return 0;
  }
  if (a1 >> 6 != 1)
  {
    if (a1 == 128)
    {
      if (a2 == 128) {
        return 1;
      }
    }
    else if (a2 == 129)
    {
      return 1;
    }
    return 0;
  }
  if ((a2 & 0xC0) != 0x40) {
    return 0;
  }
LABEL_6:
  if (a1) {
    uint64_t v2 = 0x6C616D726F6ELL;
  }
  else {
    uint64_t v2 = 0x64656C616373;
  }
  if (a2) {
    uint64_t v3 = 0x6C616D726F6ELL;
  }
  else {
    uint64_t v3 = 0x64656C616373;
  }
  if (v2 == v3)
  {
    swift_bridgeObjectRelease_n();
    return 1;
  }
  else
  {
    char v5 = sub_77230();
    swift_bridgeObjectRelease_n();
    return v5 & 1;
  }
}

uint64_t sub_2A2B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_2A2D8(uint64_t a1, char a2)
{
  if (a2 != -1) {
    return sub_18A70(a1, a2);
  }
  return a1;
}

unint64_t sub_2A2EC()
{
  unint64_t result = qword_99F20;
  if (!qword_99F20)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_99F20);
  }
  return result;
}

uint64_t sub_2A32C(uint64_t a1, char a2)
{
  if (a2 != -1) {
    return sub_18A84(a1, a2);
  }
  return a1;
}

uint64_t sub_2A340()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_2A378()
{
  return sub_28E48();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t sub_2A398(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_2A3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A310);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2A464()
{
  unint64_t result = qword_9A320;
  if (!qword_9A320)
  {
    sub_754B0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9A320);
  }
  return result;
}

uint64_t sub_2A4C0()
{
  swift_getObjectType();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A270);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_78AC0;
  *(void *)(v0 + 32) = sub_759D0();
  *(void *)(v0 + 40) = &protocol witness table for UITraitAccessibilityContrast;
  sub_76E20();
  swift_unknownObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2A6EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_76E90();
  uint64_t v46 = *(void *)(v2 - 8);
  uint64_t v47 = v2;
  __chkstk_darwin(v2);
  uint64_t v45 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_99058);
  __chkstk_darwin(v4 - 8);
  int v42 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_74F90();
  __chkstk_darwin(v40);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_99060);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_768C0();
  __chkstk_darwin(v9 - 8);
  uint64_t v10 = sub_75020();
  uint64_t v43 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  __chkstk_darwin(v10);
  char v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_76F50();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v41 = self;
  id v17 = [v41 currentTraitCollection];
  id v18 = [v17 accessibilityContrast];

  uint64_t v19 = (void (**)(uint64_t, char *, uint64_t))(v14 + 32);
  if (v18) {
    sub_76F30();
  }
  else {
    sub_76F40();
  }
  (*v19)(a1, v16, v13);
  if (qword_97FD8 != -1) {
    swift_once();
  }
  id v20 = [self configurationWithFont:qword_99020 scale:2];
  NSString v21 = sub_768D0();
  id v22 = [self _systemImageNamed:v21 withConfiguration:v20];

  id v23 = v22;
  sub_76F00();
  sub_76EB0();
  sub_768B0();
  uint64_t v24 = sub_75120();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v8, 1, 1, v24);
  uint64_t v48 = &_swiftEmptyArrayStorage;
  sub_2AF60();
  __swift_instantiateConcreteTypeFromMangledName(&qword_99070);
  sub_2AFB8();
  sub_76FE0();
  sub_75010();
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  swift_getKeyPath();
  char v26 = (void *)qword_99020;
  uint64_t v48 = (void *)qword_99020;
  sub_2B034();
  id v27 = v26;
  sub_74F80();
  char v28 = v42;
  uint64_t v29 = v43;
  uint64_t v30 = v44;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v42, v12, v44);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v28, 0, 1, v30);
  sub_76ED0();
  uint64_t v31 = self;
  id v32 = [v31 labelColor];
  sub_76EF0();
  id v33 = [v41 currentTraitCollection];
  id v34 = [v33 accessibilityContrast];

  if (v34)
  {
    id v35 = [v31 secondarySystemBackgroundColor];
    sub_76EE0();
  }
  else
  {
    id v36 = [self effectWithStyle:1];
    uint64_t v37 = (void (*)(void **, void))sub_76E80();
    sub_75960();
    v37(&v48, 0);
  }
  (*(void (**)(char *, void, uint64_t))(v46 + 104))(v45, enum case for UIButton.Configuration.CornerStyle.capsule(_:), v47);
  sub_76EA0();
  sub_76EC0();

  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v12, v30);
}

uint64_t sub_2ADE4()
{
  return sub_768A0() & 1;
}

uint64_t type metadata accessor for TranscriptSearchButton()
{
  return self;
}

uint64_t sub_2AE64()
{
  sub_26A38();
  uint64_t result = sub_76DF0();
  qword_99020 = result;
  return result;
}

uint64_t sub_2AEA4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_99050);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2A6EC((uint64_t)v2);
  uint64_t v3 = sub_76F50();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 0, 1, v3);
  return sub_76F60();
}

unint64_t sub_2AF60()
{
  unint64_t result = qword_99068;
  if (!qword_99068)
  {
    sub_74F90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_99068);
  }
  return result;
}

unint64_t sub_2AFB8()
{
  unint64_t result = qword_99078;
  if (!qword_99078)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_99070);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_99078);
  }
  return result;
}

void sub_2B014()
{
}

unint64_t sub_2B034()
{
  unint64_t result = qword_99080;
  if (!qword_99080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_99080);
  }
  return result;
}

void sub_2B088()
{
}

uint64_t sub_2B0B0()
{
  return 8;
}

uint64_t sub_2B0BC()
{
  return swift_release();
}

uint64_t sub_2B0C4(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_2B0D4()
{
  return sub_76870();
}

void *sub_2B11C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t *sub_2B128(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v5 = *a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    uint64_t v10 = (uint64_t *)((char *)a2 + v8);
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v11 = sub_753F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    }
    else
    {
      void *v9 = *v10;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v12 = *(int *)(a3 + 24);
    uint64_t v13 = (uint64_t *)((char *)a1 + v12);
    uint64_t v14 = (uint64_t *)((char *)a2 + v12);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_76020();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
    }
    else
    {
      void *v13 = *v14;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_2B2E0(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_753F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  }
  else
  {
    swift_release();
  }
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_76020();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
    return v8(v6, v7);
  }
  else
  {
    return swift_release();
  }
}

void *sub_2B410(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (void *)((char *)a1 + v6);
  uint64_t v8 = (void *)((char *)a2 + v6);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v9 = sub_753F0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
  }
  else
  {
    *uint64_t v7 = *v8;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v13 = sub_76020();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  else
  {
    void *v11 = *v12;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *sub_2B578(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (void *)((char *)a1 + v6);
    uint64_t v8 = (void *)((char *)a2 + v6);
    sub_CA50((uint64_t)a1 + v6, &qword_98368);
    __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = sub_753F0();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v9 - 8) + 16))(v7, v8, v9);
    }
    else
    {
      *uint64_t v7 = *v8;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (void *)((char *)a1 + v10);
    uint64_t v12 = (void *)((char *)a2 + v10);
    sub_CA50((uint64_t)a1 + v10, (uint64_t *)&unk_9A780);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v13 = sub_76020();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
    }
    else
    {
      void *v11 = *v12;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_2B714(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v10 = sub_753F0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
  }
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v15 = sub_76020();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
  }
  return a1;
}

void *sub_2B898(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  if (a1 != a2)
  {
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    sub_CA50((uint64_t)a1 + v6, &qword_98368);
    uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v10 = sub_753F0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(v7, v8, v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v7, v8, *(void *)(*(void *)(v9 - 8) + 64));
    }
    uint64_t v11 = *(int *)(a3 + 24);
    uint64_t v12 = (char *)a1 + v11;
    uint64_t v13 = (char *)a2 + v11;
    sub_CA50((uint64_t)a1 + v11, (uint64_t *)&unk_9A780);
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = sub_76020();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v12, v13, v15);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v12, v13, *(void *)(*(void *)(v14 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_2BA4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_2BA60);
}

uint64_t sub_2BA60(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_988B0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_986C8);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_2BB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_2BBA8);
}

void *sub_2BBA8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_988B0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_986C8);
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t type metadata accessor for SpeakerContentView()
{
  uint64_t result = qword_990F0;
  if (!qword_990F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_2BD28()
{
  sub_2BE38(319, (unint64_t *)&qword_98920, (void (*)(uint64_t))&type metadata accessor for DeviceMetrics);
  if (v0 <= 0x3F)
  {
    sub_2BE38(319, (unint64_t *)&qword_98738, (void (*)(uint64_t))&type metadata accessor for ColorSchemeContrast);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_2BE38(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_75DE0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_2BE8C()
{
  return sub_2D3C8(&qword_98D10, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
}

uint64_t sub_2BED4(uint64_t a1)
{
  uint64_t result = sub_2D3C8(&qword_99150, (void (*)(uint64_t))type metadata accessor for SpeakerContentView);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2BF2C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2BF48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v2 = type metadata accessor for SpeakerContentView();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_99158);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_99160);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v8 = sub_76420();
  v8[1] = v13;
  uint64_t v14 = (uint64_t)v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_99168) + 44);
  id v22 = v1;
  sub_2C1E4(v1, v14);
  sub_2D418((uint64_t)v1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SpeakerContentView);
  unint64_t v15 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v16 = swift_allocObject();
  sub_2CF14((uint64_t)v5, v16 + v15);
  sub_C50C((uint64_t)v8, (uint64_t)v12, &qword_99158);
  id v17 = (uint64_t (**)())&v12[*(int *)(v10 + 44)];
  *id v17 = sub_2CF78;
  v17[1] = (uint64_t (*)())v16;
  void v17[2] = 0;
  v17[3] = 0;
  sub_CA50((uint64_t)v8, &qword_99158);
  sub_2D418((uint64_t)v22, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for SpeakerContentView);
  uint64_t v18 = swift_allocObject();
  sub_2CF14((uint64_t)v5, v18 + v15);
  uint64_t v19 = v23;
  sub_C50C((uint64_t)v12, v23, &qword_99160);
  id v20 = (void *)(v19 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_99170) + 36));
  *id v20 = 0;
  v20[1] = 0;
  v20[2] = sub_2D124;
  v20[3] = v18;
  return sub_CA50((uint64_t)v12, &qword_99160);
}

uint64_t sub_2C1E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_753D0();
  uint64_t v130 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  v129 = &v99[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_753F0();
  uint64_t v127 = *(void *)(v6 - 8);
  uint64_t v128 = v6;
  __chkstk_darwin(v6);
  v126 = &v99[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_75F10();
  __chkstk_darwin(v8 - 8);
  long long v118 = &v99[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v117 = sub_764B0();
  uint64_t v116 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  double v114 = &v99[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v110 = sub_76020();
  uint64_t v111 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v12 = &v99[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  unint64_t v15 = &v99[-v14];
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_98778);
  __chkstk_darwin(v16);
  uint64_t v18 = &v99[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_99180);
  __chkstk_darwin(v112);
  unint64_t v115 = &v99[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_99188);
  __chkstk_darwin(v113);
  v123 = &v99[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v119 = __swift_instantiateConcreteTypeFromMangledName(&qword_99190);
  __chkstk_darwin(v119);
  long long v124 = &v99[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v120 = __swift_instantiateConcreteTypeFromMangledName(&qword_98C48);
  __chkstk_darwin(v120);
  v125 = &v99[-((v22 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_98C50);
  uint64_t v131 = *(void *)(v23 - 8);
  uint64_t v132 = v23;
  __chkstk_darwin(v23);
  v122 = &v99[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v25);
  long long v121 = &v99[-v26];
  id v27 = a1;
  uint64_t v28 = *a1;
  swift_getKeyPath();
  uint64_t v133 = v28;
  sub_2D3C8(&qword_99178, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  sub_75540();
  swift_release();
  if (*(unsigned char *)(v28 + 33) == 1)
  {
    uint64_t v105 = v16;
    v106 = v18;
    uint64_t v107 = v4;
    uint64_t v108 = a2;
    uint64_t v29 = *(void *)(v28 + 24);
    uint64_t v133 = *(void *)(v28 + 16);
    uint64_t v134 = v29;
    sub_C1AC();
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_76260();
    uint64_t v32 = v31;
    char v34 = v33;
    if (qword_97FE0 != -1) {
      swift_once();
    }
    uint64_t v102 = sub_761C0();
    uint64_t v101 = v35;
    int v100 = v36;
    uint64_t v103 = v37;
    sub_1607C(v30, v32, v34 & 1);
    swift_bridgeObjectRelease();
    uint64_t v104 = type metadata accessor for SpeakerContentView();
    int v109 = v27;
    sub_1A84C((uint64_t)v15);
    uint64_t v38 = v111;
    uint64_t v39 = *(void (**)(unsigned char *, void, uint64_t))(v111 + 104);
    uint64_t v40 = v110;
    v39(v12, enum case for ColorSchemeContrast.increased(_:), v110);
    char v41 = sub_76010();
    int v42 = *(void (**)(unsigned char *, uint64_t))(v38 + 8);
    v42(v12, v40);
    v42(v15, v40);
    if (v41)
    {
      double v43 = 0.55;
    }
    else if (sub_33E70())
    {
      double v43 = 0.55;
    }
    else
    {
      double v43 = 0.25;
    }
    sub_1A84C((uint64_t)v15);
    v39(v12, enum case for ColorSchemeContrast.standard(_:), v40);
    char v45 = sub_76010();
    v42(v12, v40);
    v42(v15, v40);
    uint64_t v46 = v116;
    uint64_t v47 = (unsigned int *)&enum case for BlendMode.plusLighter(_:);
    if ((v45 & 1) == 0) {
      uint64_t v47 = (unsigned int *)&enum case for BlendMode.normal(_:);
    }
    uint64_t v48 = v114;
    uint64_t v49 = v117;
    (*(void (**)(unsigned char *, void, uint64_t))(v116 + 104))(v114, *v47, v117);
    uint64_t v50 = (uint64_t)v118;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v46 + 16))(v118, v48, v49);
    uint64_t v51 = (uint64_t)v106;
    sub_2D418(v50, (uint64_t)&v106[*(int *)(v105 + 36)], (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
    uint64_t v52 = v102;
    uint64_t v53 = v101;
    *(void *)uint64_t v51 = v102;
    *(void *)(v51 + 8) = v53;
    char v54 = v100 & 1;
    *(unsigned char *)(v51 + 16) = v100 & 1;
    *(void *)(v51 + 24) = v103;
    *(double *)(v51 + 32) = v43;
    sub_160F0(v52, v53, v54);
    swift_bridgeObjectRetain();
    sub_16100(v50);
    (*(void (**)(unsigned char *, uint64_t))(v46 + 8))(v48, v49);
    sub_1607C(v52, v53, v54);
    swift_bridgeObjectRelease();
    char v55 = sub_760D0();
    sub_75DC0();
    uint64_t v57 = v56;
    uint64_t v59 = v58;
    uint64_t v61 = v60;
    uint64_t v63 = v62;
    uint64_t v64 = v115;
    sub_C50C(v51, (uint64_t)v115, &qword_98778);
    uint64_t v65 = &v64[*(int *)(v112 + 36)];
    *uint64_t v65 = v55;
    *((void *)v65 + 1) = v57;
    *((void *)v65 + 2) = v59;
    *((void *)v65 + 3) = v61;
    *((void *)v65 + 4) = v63;
    v65[40] = 0;
    sub_CA50(v51, &qword_98778);
    char v66 = sub_760E0();
    sub_75DC0();
    uint64_t v68 = v67;
    uint64_t v70 = v69;
    uint64_t v72 = v71;
    uint64_t v74 = v73;
    uint64_t v75 = v123;
    sub_C50C((uint64_t)v64, (uint64_t)v123, &qword_99180);
    unint64_t v76 = &v75[*(int *)(v113 + 36)];
    unsigned char *v76 = v66;
    *((void *)v76 + 1) = v68;
    *((void *)v76 + 2) = v70;
    *((void *)v76 + 3) = v72;
    *((void *)v76 + 4) = v74;
    v76[40] = 0;
    sub_CA50((uint64_t)v64, &qword_99180);
    char v77 = sub_760F0();
    uint64_t v78 = v126;
    sub_1A89C((uint64_t)v126);
    uint64_t v79 = v129;
    sub_753E0();
    (*(void (**)(unsigned char *, uint64_t))(v127 + 8))(v78, v128);
    sub_753C0();
    (*(void (**)(unsigned char *, uint64_t))(v130 + 8))(v79, v107);
    sub_75DC0();
    uint64_t v81 = v80;
    uint64_t v83 = v82;
    uint64_t v85 = v84;
    uint64_t v87 = v86;
    char v88 = v124;
    sub_C50C((uint64_t)v75, (uint64_t)v124, &qword_99188);
    uint64_t v89 = &v88[*(int *)(v119 + 36)];
    unsigned char *v89 = v77;
    *((void *)v89 + 1) = v81;
    *((void *)v89 + 2) = v83;
    *((void *)v89 + 3) = v85;
    *((void *)v89 + 4) = v87;
    v89[40] = 0;
    sub_CA50((uint64_t)v75, &qword_99188);
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v91 = v125;
    sub_C50C((uint64_t)v88, (uint64_t)v125, &qword_99190);
    uint64_t v92 = &v91[*(int *)(v120 + 36)];
    *(void *)uint64_t v92 = KeyPath;
    v92[8] = 0;
    sub_CA50((uint64_t)v88, &qword_99190);
    uint64_t v93 = sub_76430();
    char v94 = v122;
    sub_1A5C4(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v122, 0.0, 1, 0.0, 1, v93, v95);
    sub_CA50((uint64_t)v91, &qword_98C48);
    uint64_t v96 = (uint64_t)v94;
    char v97 = v121;
    sub_2D488(v96, (uint64_t)v121);
    a2 = v108;
    sub_2D488((uint64_t)v97, v108);
    uint64_t v44 = 0;
  }
  else
  {
    uint64_t v44 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v131 + 56))(a2, v44, 1, v132);
}

uint64_t sub_2CD70()
{
  return swift_release();
}

uint64_t sub_2CE40()
{
  return swift_release();
}

uint64_t sub_2CF14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SpeakerContentView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2CF78()
{
  return sub_2D13C((uint64_t (*)(uint64_t))sub_2CD70);
}

uint64_t objectdestroyTm_0()
{
  uint64_t v1 = type metadata accessor for SpeakerContentView();
  uint64_t v2 = *(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(*(void *)(v1 - 8) + 64);
  swift_release();
  uint64_t v5 = v0 + v3 + *(int *)(v1 + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_753F0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  uint64_t v7 = v0 + v3 + *(int *)(v1 + 24);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v8 = sub_76020();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    swift_release();
  }

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_2D124()
{
  return sub_2D13C((uint64_t (*)(uint64_t))sub_2CE40);
}

uint64_t sub_2D13C(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for SpeakerContentView() - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_2D1B0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_983C8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v13 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_76160();
  uint64_t v4 = *(void *)(v3 - 8);
  __n128 v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v4 + 104))(v7, enum case for Font.TextStyle.footnote(_:), v3, v5);
  uint64_t v8 = enum case for Font.Design.default(_:);
  uint64_t v9 = sub_76110();
  uint64_t v10 = *(void *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 104))(v2, v8, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v2, 0, 1, v9);
  sub_76120();
  uint64_t v11 = sub_76150();
  sub_CA50((uint64_t)v2, &qword_983C8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  qword_99090 = v11;
  return result;
}

uint64_t sub_2D3A8()
{
  return sub_202E0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_2D3C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2D418(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_2D488(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_98C50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2D4F0()
{
  return sub_2D554(&qword_99198, &qword_99170, (void (*)(void))sub_2D52C);
}

uint64_t sub_2D52C()
{
  return sub_2D554(&qword_991A0, &qword_99160, (void (*)(void))sub_2D5D4);
}

uint64_t sub_2D554(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2D5D4()
{
  unint64_t result = qword_991A8;
  if (!qword_991A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_99158);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_991A8);
  }
  return result;
}

uint64_t sub_2D630()
{
  return sub_2D3A8();
}

uint64_t sub_2D648(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_2D67C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_2D6B0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t sub_2D6E4(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void))(a4 + 40))(a1, a2 & 1);
}

uint64_t sub_2D6FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_2D710(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t sub_2D744(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, void))(a4 + 64))(a1, a2 & 1);
}

uint64_t sub_2D75C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t sub_2D770(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t sub_2D784(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t sub_2D798(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t sub_2D7AC(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void))(a2 + 56))();
  if (v5) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2);
  }
  return result;
}

uint64_t sub_2D818(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void))(a2 + 32))();
  if (v5) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  }
  return result;
}

uint64_t sub_2D884(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a2 + 16))();
  if ((v5 & 1) != 0
    || (double v6 = *(double *)&v4,
        double v7 = COERCE_DOUBLE((*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(a1, a2)),
        (v8 & 1) != 0))
  {
    *(double *)&uint64_t result = 0.0;
  }
  else
  {
    *(double *)&uint64_t result = v7 - v6;
  }
  return result;
}

uint64_t sub_2D90C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (*(uint64_t (**)(void))(a2 + 16))();
  if (v5) {
    return 0;
  }
  double v6 = *(double *)&v4;
  uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  if (v8) {
    return 0;
  }
  double v9 = *(double *)&v7;
  type metadata accessor for TextContent(0);
  uint64_t v10 = swift_dynamicCastClass();
  if (v10)
  {
    uint64_t v11 = v10;
    swift_getKeyPath();
    sub_2DA20();
    sub_75540();
    swift_release();
    double v12 = v6
        - v9
        - *(double *)(v11
                    + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__durationFromPlayerStartTimeToFirstWordTime);
  }
  else
  {
    double v12 = v6 - v9;
  }
  return *(void *)&v12;
}

unint64_t sub_2DA20()
{
  unint64_t result = qword_9A1F0;
  if (!qword_9A1F0)
  {
    type metadata accessor for TextContent(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9A1F0);
  }
  return result;
}

Swift::tuple_OpaquePointer_OpaquePointer __swiftcall ContextActionsConfiguration.transcriptSelectionActions()()
{
  uint64_t v0 = sub_76670();
  long long v121 = *(void (***)(char *, uint64_t))(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v110 = (char *)&v109 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v109 - v3;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v109 - v6;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v109 - v9;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v109 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v109 - v15;
  sub_766E0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A200);
  sub_76790();
  swift_release();
  uint64_t v17 = v125;
  uint64_t v18 = v126;
  __swift_project_boxed_opaque_existential_1(v124, v125);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v124);
  swift_retain();
  unint64_t v20 = (unint64_t)sub_2E5C4(v19);
  swift_bridgeObjectRelease();
  swift_release();
  sub_76740();
  if (swift_dynamicCastClass())
  {
    if (!(v20 >> 62))
    {
      swift_bridgeObjectRetain();
      sub_77240();
      sub_2E6D4();
      swift_bridgeObjectRelease();
      uint64_t v21 = &_swiftEmptyArrayStorage;
      goto LABEL_92;
    }
    goto LABEL_86;
  }
  uint64_t v22 = v121;
  double v114 = v13;
  unint64_t v115 = v10;
  uint64_t v113 = v7;
  v124[0] = &_swiftEmptyArrayStorage;
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_77180();
    if (v23) {
      goto LABEL_6;
    }
LABEL_88:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v20 = (unint64_t)&_swiftEmptyArrayStorage;
    unint64_t v104 = (unint64_t)&_swiftEmptyArrayStorage;
    if (((unint64_t)&_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_93;
    }
    goto LABEL_89;
  }
  uint64_t v23 = *(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v23) {
    goto LABEL_88;
  }
LABEL_6:
  uint64_t v112 = v4;
  uint64_t v118 = v23;
  unint64_t v119 = v20 & 0xC000000000000001;
  unsigned int v117 = enum case for ContextActionType.playFromTranscript(_:);
  long long v121 = v22 + 1;
  v122 = (void (**)(char *, uint64_t, uint64_t))(v22 + 13);
  uint64_t v24 = 4;
  unint64_t v116 = v20;
  do
  {
    if (v119) {
      id v25 = (id)sub_77080();
    }
    else {
      id v25 = *(id *)(v20 + 8 * v24);
    }
    uint64_t v26 = v25;
    uint64_t v27 = v24 - 3;
    if (__OFADD__(v24 - 4, 1))
    {
      __break(1u);
LABEL_84:
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      sub_2E6D4();
      swift_bridgeObjectRetain();
      uint64_t v105 = sub_77170();
      swift_bridgeObjectRelease_n();
      uint64_t v21 = &_swiftEmptyArrayStorage;
      unint64_t v20 = v105;
      goto LABEL_92;
    }
    id v28 = [v25 identifier];
    uint64_t v29 = sub_76910();
    uint64_t v31 = v30;

    uint64_t v120 = *v122;
    v120(v16, v117, v0);
    uint64_t v32 = sub_76660();
    uint64_t v34 = v33;
    uint64_t v35 = *v121;
    (*v121)(v16, v0);
    BOOL v36 = v29 == v32 && v31 == v34;
    if (v36)
    {
      unint64_t v20 = v116;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_21;
    }
    char v37 = sub_77230();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v37)
    {
      unint64_t v20 = v116;
LABEL_21:
      swift_bridgeObjectRelease();
      id v38 = v26;
      sub_769B0();
      if (*(void *)((char *)&dword_10 + (v124[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                         + (v124[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
        goto LABEL_95;
      goto LABEL_22;
    }

    ++v24;
    BOOL v36 = v27 == v118;
    unint64_t v20 = v116;
  }
  while (!v36);
  while (1)
  {
    uint64_t v39 = enum case for ContextActionType.copyTranscriptSelection(_:);
    uint64_t v40 = 4;
    while (1)
    {
      if (v119) {
        id v41 = (id)sub_77080();
      }
      else {
        id v41 = *(id *)(v20 + 8 * v40);
      }
      int v42 = v41;
      double v43 = v114;
      uint64_t v44 = v40 - 3;
      if (__OFADD__(v40 - 4, 1)) {
        goto LABEL_84;
      }
      id v45 = [v41 identifier];
      uint64_t v46 = sub_76910();
      uint64_t v48 = v47;

      v120(v43, v39, v0);
      uint64_t v49 = sub_76660();
      uint64_t v50 = v43;
      uint64_t v51 = v49;
      uint64_t v53 = v52;
      v35(v50, v0);
      if (v46 == v51 && v48 == v53)
      {
        unint64_t v20 = v116;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
      char v55 = sub_77230();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v55) {
        break;
      }

      ++v40;
      uint64_t v56 = v118;
      BOOL v36 = v44 == v118;
      uint64_t v57 = v115;
      unint64_t v20 = v116;
      if (v36) {
        goto LABEL_41;
      }
    }
    unint64_t v20 = v116;
LABEL_38:
    uint64_t v56 = v118;
    swift_bridgeObjectRelease();
    id v58 = v42;
    sub_769B0();
    uint64_t v57 = v115;
    if (*(void *)((char *)&dword_10 + (v124[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                       + (v124[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
      sub_76A00();
    sub_76A20();
    sub_769F0();

    swift_bridgeObjectRetain();
LABEL_41:
    unsigned int v111 = v39;
    LODWORD(v114) = enum case for ContextActionType.iOSShareSheetEpisode(_:);
    uint64_t v59 = 4;
    while (1)
    {
      if (v119) {
        id v60 = (id)sub_77080();
      }
      else {
        id v60 = *(id *)(v20 + 8 * v59);
      }
      uint64_t v61 = v60;
      uint64_t v62 = v59 - 3;
      if (__OFADD__(v59 - 4, 1)) {
        goto LABEL_85;
      }
      id v63 = [v60 identifier];
      uint64_t v64 = sub_76910();
      id v38 = v65;

      v120(v57, v114, v0);
      uint64_t v66 = sub_76660();
      uint64_t v67 = v57;
      uint64_t v68 = v66;
      id v70 = v69;
      v35(v67, v0);
      if (v64 == v68 && v38 == v70)
      {
        unint64_t v20 = v116;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_56;
      }
      char v72 = sub_77230();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v72) {
        break;
      }

      ++v59;
      BOOL v36 = v62 == v56;
      uint64_t v57 = v115;
      unint64_t v20 = v116;
      if (v36)
      {
        swift_bridgeObjectRelease();
        uint64_t v73 = v113;
        goto LABEL_59;
      }
    }
    unint64_t v20 = v116;
LABEL_56:
    swift_bridgeObjectRelease();
    id v38 = v61;
    sub_769B0();
    uint64_t v73 = v113;
    if (*(void *)((char *)&dword_10 + (v124[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                       + (v124[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
      sub_76A00();
    sub_76A20();
    sub_769F0();

LABEL_59:
    unint64_t v123 = (unint64_t)&_swiftEmptyArrayStorage;
    if (v56 >= 1) {
      break;
    }
    __break(1u);
LABEL_95:
    sub_76A00();
LABEL_22:
    sub_76A20();
    sub_769F0();

    swift_bridgeObjectRetain();
  }
  uint64_t v74 = 0;
  while (2)
  {
    if (v119) {
      id v75 = (id)sub_77080();
    }
    else {
      id v75 = *(id *)(v20 + 8 * v74 + 32);
    }
    unint64_t v76 = v75;
    id v77 = [v75 identifier];
    uint64_t v78 = sub_76910();
    uint64_t v80 = v79;

    v120(v73, v117, v0);
    uint64_t v81 = sub_76660();
    uint64_t v83 = v82;
    v35(v73, v0);
    if (v78 == v81 && v80 == v83)
    {

      swift_bridgeObjectRelease_n();
      goto LABEL_62;
    }
    char v85 = sub_77230();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v85)
    {

      goto LABEL_62;
    }
    id v86 = [v76 identifier];
    uint64_t v87 = sub_76910();
    uint64_t v89 = v88;

    uint64_t v90 = v112;
    v120(v112, v111, v0);
    uint64_t v91 = sub_76660();
    uint64_t v93 = v92;
    v35(v90, v0);
    if (v87 == v91 && v89 == v93)
    {
LABEL_74:

      swift_bridgeObjectRelease_n();
      uint64_t v73 = v113;
    }
    else
    {
      char v94 = sub_77230();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v94) {
        goto LABEL_79;
      }
      id v95 = [v76 identifier];
      uint64_t v96 = sub_76910();
      uint64_t v98 = v97;

      uint64_t v99 = v110;
      v120(v110, v114, v0);
      uint64_t v100 = sub_76660();
      uint64_t v102 = v101;
      v35(v99, v0);
      if (v96 == v100 && v98 == v102) {
        goto LABEL_74;
      }
      char v103 = sub_77230();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v103)
      {
LABEL_79:

        uint64_t v73 = v113;
      }
      else
      {
        sub_770B0();
        sub_770E0();
        sub_770F0();
        sub_770C0();
        uint64_t v73 = v113;
      }
    }
LABEL_62:
    if (v118 != ++v74) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  unint64_t v104 = v123;
  unint64_t v20 = v124[0];
  if ((v123 & 0x8000000000000000) != 0)
  {
LABEL_93:
    sub_2E6D4();
    swift_bridgeObjectRetain();
    uint64_t v21 = (void *)sub_77170();
    swift_release();
    goto LABEL_91;
  }
LABEL_89:
  if ((v104 & 0x4000000000000000) != 0) {
    goto LABEL_93;
  }
  swift_bridgeObjectRetain();
  sub_77240();
  sub_2E6D4();
  uint64_t v21 = (void *)v104;
LABEL_91:
  swift_release();
LABEL_92:
  v106 = (void *)v20;
  uint64_t v107 = v21;
  result._1._rawValue = v107;
  result._0._rawValue = v106;
  return result;
}

void *sub_2E5C4(uint64_t a1)
{
  Swift::tuple_OpaquePointer_OpaquePointer result = &_swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = a1 + 40;
    do
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v5 = sub_765D0();
      swift_unknownObjectRelease();
      if (v5)
      {
        sub_769B0();
        if (*(void *)((char *)&dword_10 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8)) >> 1) {
          sub_76A00();
        }
        sub_76A20();
        sub_769F0();
      }
      v4 += 16;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return &_swiftEmptyArrayStorage;
  }
  return result;
}

unint64_t sub_2E6D4()
{
  unint64_t result = qword_991B0;
  if (!qword_991B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_991B0);
  }
  return result;
}

uint64_t static UIContentUnavailableConfiguration.playerTranscriptUnavailableConfig(error:isOffline:retryCallback:)@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v26 = a4;
  int v24 = a2;
  uint64_t v23 = a1;
  uint64_t v6 = sub_76F50();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v23 - v11;
  sub_76F30();
  uint64_t v13 = self;
  id v14 = [v13 quaternarySystemFillColor];
  sub_76EE0();
  id v15 = [self effectWithStyle:10];
  id v16 = [self effectForBlurEffect:v15];

  uint64_t v17 = (void (*)(unsigned char *, void))sub_76E80();
  sub_75960();
  v17(v27, 0);
  id v18 = [v13 whiteColor];
  sub_76EF0();
  uint64_t v19 = (void (*)(unsigned char *, void))sub_76E80();
  sub_75950();
  v19(v27, 0);
  sub_76D60();
  sub_76EC0();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  sub_2E9D4(v23, v24, (uint64_t)v9, v25, v26, a5);
  unint64_t v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v20(v9, v6);
  sub_FAEC(0, (unint64_t *)&qword_98D48);
  sub_76DD0();
  uint64_t v21 = (void (*)(unsigned char *, void))sub_75A10();
  sub_75A00();
  v21(v27, 0);
  return ((uint64_t (*)(char *, uint64_t))v20)(v12, v6);
}

uint64_t sub_2E9D4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v41 = a4;
  uint64_t v42 = a5;
  uint64_t v40 = a3;
  uint64_t v9 = sub_76F50();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_75A90();
  uint64_t v43 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v15 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_991B8);
  __chkstk_darwin(v16 - 8);
  id v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    v44[0] = a1;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_991C8);
    uint64_t v19 = sub_755F0();
    int v20 = swift_dynamicCast();
    uint64_t v21 = *(void *)(v19 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v21 + 56))(v18, v20 ^ 1u, 1, v19);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v18, 1, v19) != 1)
    {
      sub_2F104((uint64_t)v18);
      sub_75A50();
      uint64_t v22 = (objc_class *)[self mainBundle];
      v45._countAndFlagsBits = 0xD000000000000015;
      v36._countAndFlagsBits = 0xE000000000000000;
      v45._object = (void *)0x800000000007EA20;
      v50.value._countAndFlagsBits = 0;
      v50.value._object = 0;
      v23.super.Class isa = v22;
      v55._countAndFlagsBits = 0;
      v55._object = (void *)0xE000000000000000;
      sub_75060(v45, v50, v23, v55, v36);

      return sub_759F0();
    }
  }
  else
  {
    uint64_t v25 = sub_755F0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v18, 1, 1, v25);
  }
  sub_2F104((uint64_t)v18);
  sub_75A50();
  if (a2)
  {
    uint64_t v26 = (objc_class *)[self mainBundle];
    v46._countAndFlagsBits = 0xD000000000000014;
    v36._countAndFlagsBits = 0xE000000000000000;
    v46._object = (void *)0x800000000007E9E0;
    v51.value._countAndFlagsBits = 0;
    v51.value._object = 0;
    v27.super.Class isa = v26;
    v56._countAndFlagsBits = 0;
    v56._object = (void *)0xE000000000000000;
    sub_75060(v46, v51, v27, v56, v36);

    sub_75A40();
    v47._countAndFlagsBits = 0xD000000000000013;
    v47._object = (void *)0x800000000007EA00;
    v52._countAndFlagsBits = 0;
    v52._object = (void *)0xE000000000000000;
    sub_766F0(v47, v52);
    return sub_759F0();
  }
  else
  {
    id v28 = self;
    uint64_t v29 = (objc_class *)[v28 mainBundle];
    v48._countAndFlagsBits = 0xD00000000000001FLL;
    uint64_t v39 = a6;
    v36._countAndFlagsBits = 0xE000000000000000;
    v48._object = (void *)0x800000000007E9A0;
    v53.value._countAndFlagsBits = 0;
    v53.value._object = 0;
    v30.super.Class isa = v29;
    v57._countAndFlagsBits = 0;
    v57._object = (void *)0xE000000000000000;
    sub_75060(v48, v53, v30, v57, v36);

    sub_759F0();
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v40, v9);
    sub_75A70();
    uint64_t v31 = (objc_class *)[v28 mainBundle];
    v37._countAndFlagsBits = 0xE000000000000000;
    v49._object = (void *)0x800000000007E9C0;
    v49._countAndFlagsBits = 0xD000000000000010;
    v54.value._countAndFlagsBits = 0;
    v54.value._object = 0;
    v32.super.Class isa = v31;
    v58._countAndFlagsBits = 0;
    v58._object = (void *)0xE000000000000000;
    sub_75060(v49, v54, v32, v58, v37);

    uint64_t v33 = (void (*)(void *, void))sub_75A60();
    sub_76F20();
    v33(v44, 0);
    sub_FAEC(0, &qword_991C0);
    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v41;
    *(void *)(v34 + 24) = v42;
    swift_retain();
    sub_76E70();
    uint64_t v35 = (void (*)(void *, void))sub_75A30();
    sub_75A20();
    v35(v44, 0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v43 + 32))(v39, v15, v13);
  }
}

uint64_t static UIContentUnavailableConfiguration.episodeDetailTranscriptUnavailableConfig(error:isOffline:isMac:retryCallback:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_76F50();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    sub_76F40();
  }
  else {
    sub_76F10();
  }
  sub_2E9D4(a1, a2 & 1, (uint64_t)v15, a4, a5, a6);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_2F104(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_991B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_2F164()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_2F19C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

id sub_2F1C4()
{
  id result = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:0 curve:0 animations:0.2];
  qword_9F110 = (uint64_t)result;
  return result;
}

id sub_2F208()
{
  id result = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:125.0 damping:30.0 initialVelocity:0.0];
  qword_9F118 = (uint64_t)result;
  return result;
}

id sub_2F258()
{
  id result = [objc_allocWithZone((Class)UISpringTimingParameters) initWithMass:1.0 stiffness:225.0 damping:50.0 initialVelocity:0.0];
  qword_9F120 = (uint64_t)result;
  return result;
}

__n128 sub_2F2AC()
{
  __n128 result = *(__n128 *)&UIEdgeInsetsZero.top;
  long long v1 = *(_OWORD *)&UIEdgeInsetsZero.bottom;
  xmmword_9F130 = *(_OWORD *)&UIEdgeInsetsZero.top;
  *(_OWORD *)&qword_9F140 = v1;
  return result;
}

char *sub_2F364(uint64_t a1, CGFloat a2, CGFloat a3)
{
  v26.receiver = v3;
  v26.super_class = (Class)swift_getObjectType();
  [super hitTest:a1 withEvent:a2];
  if (v7) {
    return (char *)v7;
  }
  uint64_t v9 = sub_2F48C();
  if (!v9)
  {
LABEL_7:
    id v22 = v3;
    return (char *)v3;
  }
  uint64_t v8 = v9;
  uint64_t v10 = sub_2F48C();
  if (!v10) {
    goto LABEL_6;
  }
  uint64_t v11 = v10;
  [v10 frame];
  double v24 = v13;
  double v25 = v12;
  double v15 = v14;
  double v17 = v16;
  [v11 hitTestInsets];
  double v19 = v18;
  double v21 = v20;

  v28.origin.x = UIEdgeInsetsInsetRect(v25, v24, v15, v17, v19, v21);
  v27.x = a2;
  v27.y = a3;
  if (!CGRectContainsPoint(v28, v27))
  {
LABEL_6:

    goto LABEL_7;
  }
  return v8;
}

char *sub_2F48C()
{
  uint64_t v1 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptCollectionView____lazy_storage____verticalScrollIndicator;
  uint64_t v2 = *(char **)&v0[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptCollectionView____lazy_storage____verticalScrollIndicator];
  if (v2 == (unsigned char *)&def_1E2E4 + 1)
  {
    id v3 = [v0 subviews];
    sub_2FE48();
    unint64_t v4 = sub_769D0();

    if (v4 >> 62) {
      goto LABEL_21;
    }
    unint64_t v5 = *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v5)
    {
      while (!__OFSUB__(v5--, 1))
      {
        if ((v4 & 0xC000000000000001) != 0)
        {
          id v7 = (char *)sub_77080();
LABEL_12:
          uint64_t v2 = v7;
          self;
          if (swift_dynamicCastObjCClass())
          {
            [v2 bounds];
            double v9 = v8;
            [v2 bounds];
            if (v9 < v10)
            {
              swift_bridgeObjectRelease_n();
              goto LABEL_15;
            }
          }

          if (!v5) {
            goto LABEL_22;
          }
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0) {
            goto LABEL_19;
          }
          if (v5 < *(void *)((char *)&dword_10 + (v4 & 0xFFFFFFFFFFFFFF8)))
          {
            id v7 = (char *)*(id *)(v4 + 32 + 8 * v5);
            goto LABEL_12;
          }
LABEL_20:
          __break(1u);
LABEL_21:
          swift_bridgeObjectRetain();
          unint64_t v5 = sub_77180();
          if (!v5) {
            goto LABEL_22;
          }
        }
      }
      __break(1u);
LABEL_19:
      __break(1u);
      goto LABEL_20;
    }
LABEL_22:
    swift_bridgeObjectRelease_n();
    uint64_t v2 = 0;
LABEL_15:
    uint64_t v11 = *(void **)&v0[v1];
    *(void *)&v0[v1] = v2;
    double v12 = v2;
    sub_97D8(v11);
  }
  else
  {
    double v13 = v2;
  }
  return v2;
}

void sub_2F6B8(char a1)
{
  if (a1) {
    uint64_t v2 = 0x6C616D726F6ELL;
  }
  else {
    uint64_t v2 = 0x64656C616373;
  }
  if (v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptCollectionView_mode]) {
    uint64_t v3 = 0x6C616D726F6ELL;
  }
  else {
    uint64_t v3 = 0x64656C616373;
  }
  if (v2 == v3)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v4 = sub_77230();
    swift_bridgeObjectRelease_n();
    if ((v4 & 1) == 0)
    {
      if (qword_97FE8 != -1) {
        swift_once();
      }
      unint64_t v5 = (void *)qword_9F110;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v1;
      v10[4] = sub_2FEC0;
      v10[5] = v6;
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 1107296256;
      v10[2] = sub_4CF00;
      void v10[3] = &block_descriptor_2;
      id v7 = _Block_copy(v10);
      id v8 = v5;
      double v9 = v1;
      swift_release();
      [v8 addAnimations:v7];
      _Block_release(v7);
      [v8 startAnimation];
    }
  }
}

void sub_2F850()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_2F8A4();
  }
}

id sub_2F8A4()
{
  uint64_t v1 = sub_77210();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin();
  char v4 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_98000 != -1) {
    swift_once();
  }
  long long v5 = xmmword_9F130;
  double v7 = *(double *)&qword_9F140;
  double v6 = unk_9F148;
  [v0 contentInset];
  double v9 = v8;
  [v0 contentInset];
  double v11 = v10;
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptCollectionView_mode))
  {
    char v12 = sub_77230();
    swift_bridgeObjectRelease();
    if ((v12 & 1) == 0) {
      return [v0 setVerticalScrollIndicatorInsets:*(double *)&v5 + v9, *((double *)&v5 + 1), v7 + v11, v6];
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  [v0 bounds];
  CGRectGetWidth(v17);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for FloatingPointRoundingRule.up(_:), v1);
  sub_755D0();
  double v14 = v13;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  double v6 = v6 - v14;
  return [v0 setVerticalScrollIndicatorInsets:*(double *)&v5 + v9, *((double *)&v5 + 1), v7 + v11, v6];
}

id sub_2FAC0(unsigned char *a1)
{
  if ((a1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptCollectionView_mode] & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  char v2 = sub_77230();
  swift_bridgeObjectRelease();
  if (v2)
  {
LABEL_5:
    [a1 setAnchorPoint:0.57, 0.57];
    CGAffineTransformMakeScale(&v4, 0.86, 0.86);
    [a1 setTransform:&v4];
    return sub_2F8A4();
  }
  *(_OWORD *)&v4.a = 0x3FF0000000000000uLL;
  v4.c = 0.0;
  v4.d = 1.0;
  *(_OWORD *)&v4.tx = 0uLL;
  [a1 setTransform:&v4];
  [a1 setAnchorPoint:0.5, 0.5];
  return sub_2F8A4();
}

uint64_t type metadata accessor for TranscriptCollectionView()
{
  return self;
}

id sub_2FC9C()
{
  if (qword_97FF8 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_9F120;
  id v1 = [objc_allocWithZone((Class)CASpringAnimation) init];
  id v2 = [v0 springTimingParameters];
  if (v2)
  {
    uint64_t v3 = v2;
    [v2 mass];
    [v1 setMass:];
    [v3 stiffness];
    [v1 setStiffness:];
    [v3 damping];
    [v1 setDamping:];
  }
  id v4 = objc_allocWithZone((Class)CAMediaTimingFunction);
  id v5 = v1;
  LODWORD(v6) = 1045220557;
  LODWORD(v7) = 1.0;
  LODWORD(v8) = 1.0;
  id v9 = [v4 initWithControlPoints:v6 :0.0 :v7 :v8];
  [v5 setTimingFunction:v9];

  [v5 setInitialVelocity:0.0];
  id v10 = v5;
  [v10 settlingDuration];
  [v10 setDuration:];

  return v10;
}

double UIEdgeInsetsInsetRect(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

unint64_t sub_2FE48()
{
  unint64_t result = qword_984D8;
  if (!qword_984D8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_984D8);
  }
  return result;
}

uint64_t sub_2FE88()
{
  return _swift_deallocObject(v0, 24, 7);
}

id sub_2FEC0()
{
  return sub_2FAC0(*(unsigned char **)(v0 + 16));
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t NowPlayingStoreTranscriptIdentifierProvider.__allocating_init(asPartOf:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  NowPlayingStoreTranscriptIdentifierProvider.init(asPartOf:)(a1);
  return v2;
}

uint64_t NowPlayingStoreTranscriptIdentifierProvider.init(asPartOf:)(uint64_t a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_99210);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  double v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A3E0);
  __chkstk_darwin(v7);
  id v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v12 = (char *)&v17 - v11;
  uint64_t v13 = v1
      + OBJC_IVAR____TtC19PodcastsTranscripts43NowPlayingStoreTranscriptIdentifierProvider__transcriptRequestInformation;
  uint64_t v14 = sub_75840();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v12, 1, 1, v14);
  sub_C50C((uint64_t)v12, (uint64_t)v9, &qword_9A3E0);
  sub_75C00();
  sub_CA50((uint64_t)v12, &qword_9A3E0);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(v13, v6, v3);
  uint64_t v15 = v1 + OBJC_IVAR____TtC19PodcastsTranscripts43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID;
  *(void *)uint64_t v15 = 0;
  *(unsigned char *)(v15 + 8) = 1;
  *(void *)(v1 + OBJC_IVAR____TtC19PodcastsTranscripts43NowPlayingStoreTranscriptIdentifierProvider_subscriptions) = &_swiftEmptyArrayStorage;
  __swift_instantiateConcreteTypeFromMangledName(&qword_99230);
  sub_767A0();
  sub_767F0();
  sub_3015C(&v18, v1 + 16);
  *(void *)(v1 + 56) = a1;
  return v1;
}

uint64_t sub_3015C(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t NowPlayingStoreTranscriptIdentifierProvider.transcriptRequestInformation.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();

  return swift_release();
}

uint64_t sub_301EC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();

  return swift_release();
}

uint64_t sub_3026C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A3E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v9 - v6;
  sub_C50C(a1, (uint64_t)&v9 - v6, &qword_9A3E0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_C50C((uint64_t)v7, (uint64_t)v4, &qword_9A3E0);
  swift_retain();
  sub_75C50();
  return sub_CA50((uint64_t)v7, &qword_9A3E0);
}

uint64_t NowPlayingStoreTranscriptIdentifierProvider.transcriptRequestInformation.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A3E0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_C50C(a1, (uint64_t)v4, &qword_9A3E0);
  swift_retain();
  sub_75C50();
  return sub_CA50(a1, &qword_9A3E0);
}

void (*NowPlayingStoreTranscriptIdentifierProvider.transcriptRequestInformation.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_75C30();
  return sub_304E4;
}

void sub_304E4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t NowPlayingStoreTranscriptIdentifierProvider.$transcriptRequestInformation.getter()
{
  return swift_endAccess();
}

uint64_t sub_305B0()
{
  return swift_endAccess();
}

uint64_t sub_30618(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_99238);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16);
  v10((char *)&v12 - v8, a1, v2, v7);
  ((void (*)(char *, char *, uint64_t))v10)(v5, v9, v2);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_99210);
  sub_75C20();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
}

uint64_t NowPlayingStoreTranscriptIdentifierProvider.$transcriptRequestInformation.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_99238);
  uint64_t v3 = *(void *)(v2 - 8);
  __n128 v4 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v3 + 16))((char *)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2, v4);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_99210);
  sub_75C20();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*NowPlayingStoreTranscriptIdentifierProvider.$transcriptRequestInformation.modify(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_99238);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC19PodcastsTranscripts43NowPlayingStoreTranscriptIdentifierProvider__transcriptRequestInformation;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_99210);
  sub_75C10();
  swift_endAccess();
  return sub_309C8;
}

void sub_309C8(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_75C20();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_75C20();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

uint64_t NowPlayingStoreTranscriptIdentifierProvider.updateForEpisode(_:shouldForce:completion:)(void *a1, char a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A3E0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v40 - v14;
  uint64_t v16 = sub_76B70();
  if ((v17 & 1) != 0 || (uint64_t v18 = v16, v19 = sub_76B60(), !v20))
  {
LABEL_11:
    uint64_t v38 = sub_75840();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v15, 1, 1, v38);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_C50C((uint64_t)v15, (uint64_t)v12, &qword_9A3E0);
    swift_retain();
    sub_75C50();
    uint64_t result = sub_CA50((uint64_t)v15, &qword_9A3E0);
    uint64_t v39 = v5 + OBJC_IVAR____TtC19PodcastsTranscripts43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID;
    *(void *)uint64_t v39 = 0;
    *(unsigned char *)(v39 + 8) = 1;
    if (!a3) {
      return result;
    }
    return a3(result);
  }
  uint64_t v21 = v19;
  uint64_t v22 = v20;
  id v23 = [a1 transcriptIdentifier];
  if (v23)
  {

    if ((a2 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
  }
  uint64_t v24 = v5 + OBJC_IVAR____TtC19PodcastsTranscripts43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID;
  if ((*(unsigned char *)(v5
                 + OBJC_IVAR____TtC19PodcastsTranscripts43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID
                 + 8) & 1) != 0
    || *(void *)v24 != v18)
  {
    *(void *)uint64_t v24 = v18;
    *(unsigned char *)(v24 + 8) = 0;
    uint64_t v26 = sub_75840();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v15, 1, 1, v26);
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v41 = v21;
    sub_C50C((uint64_t)v15, (uint64_t)v12, &qword_9A3E0);
    swift_retain();
    sub_75C50();
    sub_CA50((uint64_t)v15, &qword_9A3E0);
    id v27 = [self sharedInstance];
    id v28 = [v27 privateQueueContext];

    uint64_t v29 = (void *)swift_allocObject();
    uint64_t v30 = v41;
    v29[2] = v28;
    v29[3] = v30;
    _OWORD v29[4] = v22;
    sub_2A2EC();
    id v31 = v28;
    swift_bridgeObjectRetain();
    NSBundle v32 = (void *)sub_76CA0();
    __swift_instantiateConcreteTypeFromMangledName(&qword_99240);
    uint64_t v33 = sub_76D50();
    swift_release();

    uint64_t v43 = v33;
    uint64_t v34 = swift_allocObject();
    swift_weakInit();
    uint64_t v35 = *(void *)(v5 + 56);
    sub_2A398(v5 + 16, (uint64_t)v42);
    Swift::String v36 = (void *)swift_allocObject();
    v36[2] = a3;
    v36[3] = a4;
    sub_3015C(v42, (uint64_t)(v36 + 4));
    v36[9] = v35;
    v36[10] = v18;
    v36[11] = v34;
    v36[12] = v31;
    v36[13] = v30;
    v36[14] = v22;
    id v37 = v31;
    swift_retain();
    sub_316A0((uint64_t)a3);
    __swift_instantiateConcreteTypeFromMangledName(&qword_99248);
    sub_D034(&qword_99250, &qword_99248);
    sub_75D80();
    swift_release();
    swift_release();
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A2D0);
    sub_D034(&qword_98528, (uint64_t *)&unk_9A2D0);
    sub_75BA0();
    swift_endAccess();

    return swift_release();
  }
  uint64_t result = swift_bridgeObjectRelease();
  if (a3) {
    return a3(result);
  }
  return result;
}

void sub_3102C(void *a1@<X0>, uint64_t *a2@<X8>)
{
  NSString v4 = sub_768D0();
  id v5 = [a1 episodeForUuid:v4];

  if (v5)
  {
    id v6 = [v5 priceType];
    if (v6)
    {
      uint64_t v7 = v6;
      uint64_t v8 = sub_76910();
      uint64_t v10 = v9;
    }
    else
    {

      uint64_t v8 = 0;
      uint64_t v10 = 0;
    }
    *a2 = v8;
    a2[1] = v10;
  }
  else
  {
    *a2 = 0;
    a2[1] = 0;
  }
}

uint64_t sub_310E8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void sub_31128(uint64_t *a1@<X8>)
{
  sub_3102C(*(void **)(v1 + 16), a1);
}

uint64_t sub_31134()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_3116C(uint64_t a1, void (*a2)(uint64_t, __n128), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v50 = a5;
  Swift::String_optional v51 = a8;
  Swift::String v48 = (char *)a4;
  uint64_t v49 = a6;
  uint64_t v52 = a3;
  Swift::String_optional v53 = a2;
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_99F50);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_99330);
  __chkstk_darwin(v15 - 8);
  char v17 = (char *)&v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_75880();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(void *)(v19 + 64);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v24 = __chkstk_darwin(v22);
  uint64_t v26 = (char *)&v45 - v25;
  if (*(void *)(a1 + 8))
  {
    swift_bridgeObjectRetain();
    sub_75870();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) != 1)
    {
      uint64_t v46 = a9;
      uint64_t v47 = a10;
      uint64_t v45 = a7 + 16;
      id v27 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
      v27(v26, v17, v18);
      sub_2A398((uint64_t)v48, (uint64_t)&v55);
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v21, v26, v18);
      sub_3015C(&v55, (uint64_t)v54);
      unint64_t v28 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
      unint64_t v29 = (v20 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v30 = swift_allocObject();
      Swift::String v48 = v26;
      uint64_t v31 = v49;
      *(void *)(v30 + 16) = v50;
      *(void *)(v30 + 24) = v31;
      v27((char *)(v30 + v28), v21, v18);
      sub_3015C(v54, v30 + v29);
      __swift_instantiateConcreteTypeFromMangledName(&qword_99348);
      swift_retain();
      uint64_t v32 = sub_76830();
      uint64_t v33 = sub_76A80();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v14, 1, 1, v33);
      uint64_t v34 = (void *)swift_allocObject();
      void v34[2] = 0;
      v34[3] = 0;
      v34[4] = &unk_99340;
      v34[5] = v30;
      v34[6] = v32;
      swift_retain();
      sub_335B8((uint64_t)v14, (uint64_t)&unk_99358, (uint64_t)v34);
      swift_release();
      uint64_t v35 = swift_allocObject();
      swift_beginAccess();
      swift_weakLoadStrong();
      swift_weakInit();
      swift_release();
      Swift::String v36 = (void *)swift_allocObject();
      uint64_t v37 = v52;
      uint64_t v38 = (uint64_t)v53;
      v36[2] = v53;
      v36[3] = v37;
      v36[4] = v35;
      uint64_t v39 = v51;
      uint64_t v40 = v46;
      uint64_t v41 = v47;
      v36[5] = v51;
      v36[6] = v40;
      v36[7] = v41;
      unint64_t v42 = sub_2A2EC();
      sub_316A0(v38);
      id v43 = v39;
      swift_bridgeObjectRetain();
      uint64_t v44 = sub_76CA0();
      unint64_t v56 = v42;
      Swift::String v57 = &protocol witness table for OS_dispatch_queue;
      *(void *)&long long v55 = v44;
      sub_76800();
      swift_release();
      swift_release();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)&v55);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v48, v18);
      return;
    }
    uint64_t v23 = sub_CA50((uint64_t)v17, &qword_99330);
  }
  if (v53) {
    v53(v23, v24);
  }
}

uint64_t sub_31600()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  __swift_destroy_boxed_opaque_existential_0(v0 + 32);
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 120, 7);
}

void sub_31668(uint64_t a1)
{
  sub_3116C(a1, *(void (**)(uint64_t, __n128))(v1 + 16), *(void *)(v1 + 24), v1 + 32, *(void *)(v1 + 72), *(void *)(v1 + 80), *(void *)(v1 + 88), *(void **)(v1 + 96), *(void *)(v1 + 104), *(void *)(v1 + 112));
}

uint64_t sub_316A0(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_316B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  uint64_t v6 = sub_75880();
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  uint64_t v7 = sub_76720();
  v5[10] = v7;
  v5[11] = *(void *)(v7 - 8);
  v5[12] = swift_task_alloc();
  uint64_t v8 = sub_76770();
  v5[13] = v8;
  v5[14] = *(void *)(v8 - 8);
  v5[15] = swift_task_alloc();
  v5[16] = swift_task_alloc();
  return _swift_task_switch(sub_31840, 0, 0);
}

uint64_t sub_31840()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[14];
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v6 = (void *)v0[6];
  uint64_t v18 = v0[7];
  uint64_t v7 = v0[5];
  sub_76760();
  sub_76750();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v0[17] = v8;
  v0[18] = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v8(v1, v2);
  sub_767E0();
  swift_retain();
  sub_767B0();
  uint64_t v9 = sub_767D0();
  v0[19] = v9;
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v4, v7, v18);
  sub_76710();
  uint64_t v10 = v6[3];
  uint64_t v11 = v6[4];
  __swift_project_boxed_opaque_existential_1(v6, v10);
  uint64_t v12 = (void *)swift_task_alloc();
  v0[20] = v12;
  unint64_t v13 = sub_33BE4();
  *uint64_t v12 = v0;
  v12[1] = sub_319E4;
  uint64_t v14 = v0[12];
  uint64_t v15 = v0[10];
  uint64_t v16 = v0[2];
  return dispatch thunk of IntentDispatcher.dispatch<A>(_:objectGraph:)(v16, v14, v9, v15, v13, v10, v11);
}

uint64_t sub_319E4()
{
  *(void *)(*(void *)v1 + 168) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_31BD4;
  }
  else {
    uint64_t v2 = sub_31AF8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_31AF8()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[17];
  uint64_t v4 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v2(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_31BD4()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = (void (*)(uint64_t, uint64_t))v0[17];
  uint64_t v4 = v0[12];
  uint64_t v3 = v0[13];
  uint64_t v5 = v0[10];
  uint64_t v6 = v0[11];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v2(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_31CB0(uint64_t a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v84 = a7;
  uint64_t v82 = a6;
  uint64_t v83 = a5;
  uint64_t v92 = a3;
  uint64_t v9 = sub_758C0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v90 = v9;
  uint64_t v91 = v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  char v85 = (char *)v78 - v14;
  __chkstk_darwin(v15);
  id v86 = (char *)v78 - v16;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A3E0);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)v78 - v21;
  uint64_t v23 = sub_75840();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t v88 = v23;
  uint64_t v89 = v24;
  uint64_t v25 = *(void *)(v24 + 64);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v81 = (char *)v78 - v28;
  __chkstk_darwin(v29);
  uint64_t v93 = (char *)v78 - v30;
  uint64_t v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_99360);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)v78 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (!result)
  {
    if (!a2) {
      return result;
    }
    return a2();
  }
  uint64_t v35 = result;
  uint64_t v87 = a2;
  sub_C50C(a1, (uint64_t)v33, &qword_99360);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_758A0();
    swift_retain();
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    Swift::String v36 = sub_758B0();
    os_log_type_t v37 = sub_76B90();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = swift_slowAlloc();
      uint64_t v39 = (void *)swift_slowAlloc();
      uint64_t v93 = (char *)swift_slowAlloc();
      uint64_t v100 = v93;
      *(_DWORD *)uint64_t v38 = 136315394;
      char v40 = *(unsigned char *)(v35
                     + OBJC_IVAR____TtC19PodcastsTranscripts43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID
                     + 8);
      uint64_t aBlock = *(void *)(v35
                         + OBJC_IVAR____TtC19PodcastsTranscripts43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID);
      LOBYTE(v95) = v40;
      __swift_instantiateConcreteTypeFromMangledName(&qword_99368);
      uint64_t v41 = sub_76920();
      uint64_t aBlock = sub_7D80(v41, v42, (uint64_t *)&v100);
      sub_76F90();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v38 + 12) = 2112;
      swift_errorRetain();
      uint64_t v43 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t aBlock = v43;
      sub_76F90();
      *uint64_t v39 = v43;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&def_1E2E4, v36, v37, "Unable to fetch transcript identifier for local episode with AdamID %s with error: %@", (uint8_t *)v38, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_98050);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      swift_release();
    }
    else
    {
      swift_release();
      swift_errorRelease();
      swift_release_n();
      swift_errorRelease();
      swift_errorRelease();
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v91 + 8))(v12, v90);
    a2 = v87;
    if (!v87) {
      return result;
    }
    return a2();
  }
  uint64_t v45 = v88;
  uint64_t v44 = v89;
  uint64_t v80 = *(void (**)(char *, char *, uint64_t))(v89 + 32);
  v80(v93, v33, v88);
  sub_75810();
  uint64_t v46 = sub_75860();
  uint64_t v47 = v35 + OBJC_IVAR____TtC19PodcastsTranscripts43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID;
  char v48 = *(unsigned char *)(v35
                 + OBJC_IVAR____TtC19PodcastsTranscripts43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID
                 + 8);
  if (v49)
  {
    if (*(unsigned char *)(v35
                  + OBJC_IVAR____TtC19PodcastsTranscripts43NowPlayingStoreTranscriptIdentifierProvider_currentEpisodeAdamID
                  + 8))
      goto LABEL_11;
LABEL_17:
    uint64_t v59 = v85;
    sub_758A0();
    id v60 = v93;
    (*(void (**)(char *, char *, uint64_t))(v44 + 16))(v26, v93, v45);
    uint64_t v61 = sub_758B0();
    os_log_type_t v62 = sub_76B80();
    if (os_log_type_enabled(v61, v62))
    {
      id v63 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)id v63 = 136315138;
      id v86 = (char *)(v63 + 4);
      uint64_t v64 = sub_75810();
      uint64_t v100 = (char *)sub_7D80(v64, v65, &aBlock);
      sub_76F90();
      swift_bridgeObjectRelease();
      uint64_t v66 = *(void (**)(char *, uint64_t))(v44 + 8);
      v66(v26, v45);
      _os_log_impl(&def_1E2E4, v61, v62, "Fetched transcript identifier from MAPI for local episode with AdamId %s, but this is no longer playing episode", v63, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();

      (*(void (**)(char *, uint64_t))(v91 + 8))(v85, v90);
      uint64_t v67 = v93;
    }
    else
    {

      uint64_t v66 = *(void (**)(char *, uint64_t))(v44 + 8);
      v66(v26, v45);
      swift_release();
      (*(void (**)(char *, uint64_t))(v91 + 8))(v59, v90);
      uint64_t v67 = v60;
    }
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v66)(v67, v45);
    a2 = v87;
    if (v87) {
      return a2();
    }
    return result;
  }
  if (v46 != *(void *)v47) {
    char v48 = 1;
  }
  if (v48) {
    goto LABEL_17;
  }
LABEL_11:
  uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v44 + 16);
  char v85 = (char *)(v44 + 16);
  uint64_t v79 = v50;
  v50(v22, v93, v45);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v44 + 56))(v22, 0, 1, v45);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_C50C((uint64_t)v22, (uint64_t)v19, &qword_9A3E0);
  swift_retain();
  sub_75C50();
  sub_CA50((uint64_t)v22, &qword_9A3E0);
  Swift::String_optional v51 = v86;
  sub_758A0();
  swift_retain_n();
  uint64_t v52 = sub_758B0();
  os_log_type_t v53 = sub_76B80();
  if (os_log_type_enabled(v52, v53))
  {
    Swift::String_optional v54 = (uint8_t *)swift_slowAlloc();
    uint64_t v55 = swift_slowAlloc();
    *(_DWORD *)Swift::String_optional v54 = 136315138;
    uint64_t v100 = (char *)v55;
    v78[1] = v54 + 4;
    char v56 = *(unsigned char *)(v47 + 8);
    uint64_t aBlock = *(void *)v47;
    LOBYTE(v95) = v56;
    __swift_instantiateConcreteTypeFromMangledName(&qword_99368);
    uint64_t v57 = sub_76920();
    uint64_t aBlock = sub_7D80(v57, v58, (uint64_t *)&v100);
    sub_76F90();
    swift_release_n();
    uint64_t v45 = v88;
    swift_bridgeObjectRelease();
    _os_log_impl(&def_1E2E4, v52, v53, "Successfully fetched transcript identifier from MAPI for local episode with AdamId %s", v54, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(char *, uint64_t))(v91 + 8))(v86, v90);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v91 + 8))(v51, v90);
  }
  uint64_t v68 = v81;
  uint64_t v69 = v93;
  v79(v81, v93, v45);
  uint64_t v70 = v89;
  unint64_t v71 = (*(unsigned __int8 *)(v89 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v89 + 80);
  char v72 = (char *)swift_allocObject();
  uint64_t v73 = v83;
  uint64_t v74 = v84;
  uint64_t v75 = v82;
  *((void *)v72 + 2) = v83;
  *((void *)v72 + 3) = v75;
  *((void *)v72 + 4) = v74;
  v80(&v72[v71], v68, v45);
  uint64_t v98 = sub_338A0;
  uint64_t v99 = v72;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v95 = 1107296256;
  uint64_t v96 = sub_4CF00;
  uint64_t v97 = &block_descriptor_3;
  unint64_t v76 = _Block_copy(&aBlock);
  id v77 = v73;
  swift_bridgeObjectRetain();
  swift_release();
  [v77 performBlock:v76];
  _Block_release(v76);
  swift_release();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v69, v45);
  a2 = v87;
  if (v87) {
    return a2();
  }
  return result;
}

void sub_327A4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A650);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v22 - v6;
  NSString v8 = sub_768D0();
  id v23 = [a1 episodeForUuid:v8];

  if (v23)
  {
    [v23 storeTrackId];
    uint64_t v9 = sub_75850();
    sub_75810();
    uint64_t v10 = sub_75860();
    if ((v11 & 1) == 0 && v9 == v10)
    {
      id v12 = [v23 podcast];
      if (v12)
      {
        uint64_t v13 = v12;
        id v14 = [v12 channel];

        if (v14)
        {
          if ([v14 subscriptionActive])
          {
            sub_75830();
            uint64_t v15 = sub_757A0();
            uint64_t v16 = *(void *)(v15 - 8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v7, 1, v15) == 1)
            {
              sub_CA50((uint64_t)v7, &qword_9A650);
              NSString v17 = 0;
            }
            else
            {
              sub_75790();
              (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v15);
              NSString v17 = sub_768D0();
              swift_bridgeObjectRelease();
            }
            [v23 setEntitledTranscriptProvider:v17];

LABEL_17:
            sub_75820();
            NSString v21 = sub_768D0();
            swift_bridgeObjectRelease();
            [v23 setTranscriptIdentifier:v21];

            return;
          }
        }
      }
      sub_75830();
      uint64_t v19 = sub_757A0();
      uint64_t v20 = *(void *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v4, 1, v19) == 1)
      {
        sub_CA50((uint64_t)v4, &qword_9A650);
        NSString v17 = 0;
      }
      else
      {
        sub_75790();
        (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v19);
        NSString v17 = sub_768D0();
        swift_bridgeObjectRelease();
      }
      [v23 setFreeTranscriptProvider:v17];
      goto LABEL_17;
    }
    id v18 = v23;
  }
}

uint64_t NowPlayingStoreTranscriptIdentifierProvider.deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_release();
  uint64_t v1 = v0
     + OBJC_IVAR____TtC19PodcastsTranscripts43NowPlayingStoreTranscriptIdentifierProvider__transcriptRequestInformation;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_99210);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t NowPlayingStoreTranscriptIdentifierProvider.__deallocating_deinit()
{
  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_release();
  uint64_t v1 = v0
     + OBJC_IVAR____TtC19PodcastsTranscripts43NowPlayingStoreTranscriptIdentifierProvider__transcriptRequestInformation;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_99210);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_32C98()
{
  return type metadata accessor for NowPlayingStoreTranscriptIdentifierProvider();
}

uint64_t type metadata accessor for NowPlayingStoreTranscriptIdentifierProvider()
{
  uint64_t result = qword_99280;
  if (!qword_99280) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_32CEC()
{
  sub_32DD8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for NowPlayingStoreTranscriptIdentifierProvider(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for NowPlayingStoreTranscriptIdentifierProvider);
}

uint64_t dispatch thunk of NowPlayingStoreTranscriptIdentifierProvider.__allocating_init(asPartOf:)()
{
  return (*(uint64_t (**)(void))(v0 + 120))();
}

void sub_32DD8()
{
  if (!qword_99290)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_9A3E0);
    unint64_t v0 = sub_75C60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_99290);
    }
  }
}

uint64_t sub_32E34()
{
  uint64_t v1 = sub_75880();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  __swift_destroy_boxed_opaque_existential_0(v0 + v6);

  return _swift_deallocObject(v0, v6 + 40, v5);
}

uint64_t sub_32F1C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_75880() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v8 = v1 + v5;
  uint64_t v9 = v1 + ((*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_33040;
  return sub_316B0(a1, v6, v7, v8, v9);
}

uint64_t sub_33040()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_33134(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a6;
  uint64_t v8 = sub_75840();
  v6[3] = v8;
  v6[4] = *(void *)(v8 - 8);
  uint64_t v9 = swift_task_alloc();
  v6[5] = v9;
  uint64_t v12 = (uint64_t (*)(uint64_t))((char *)a4 + *a4);
  uint64_t v10 = (void *)swift_task_alloc();
  v6[6] = v10;
  *uint64_t v10 = v6;
  v10[1] = sub_33278;
  return v12(v9);
}

uint64_t sub_33278()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_3341C;
  }
  else {
    uint64_t v2 = sub_3338C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_3338C()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[3];
  sub_76820();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_3341C()
{
  sub_76810();
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_33494()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_334DC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (int *)v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_33040;
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, int *, uint64_t, uint64_t))((char *)&dword_99350 + dword_99350);
  return v10(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_335B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_76A80();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_76A70();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_CA50(a1, (uint64_t *)&unk_99F50);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_76A40();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_33764()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  swift_release();

  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 64, 7);
}

uint64_t sub_337BC(uint64_t a1)
{
  return sub_31CB0(a1, *(uint64_t (**)(void))(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_337CC()
{
  uint64_t v1 = sub_75840();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_338A0()
{
  sub_75840();
  uint64_t v1 = *(void **)(v0 + 16);

  sub_327A4(v1);
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t sub_33920(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_339FC;
  return v6(a1);
}

uint64_t sub_339FC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_33AF4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_33B2C(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_33C3C;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_99370 + dword_99370);
  return v6(a1, v4);
}

unint64_t sub_33BE4()
{
  unint64_t result = qword_99380;
  if (!qword_99380)
  {
    sub_76720();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_99380);
  }
  return result;
}

uint64_t sub_33C40@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_36818((unint64_t *)&qword_9A3D0, (void (*)(uint64_t))type metadata accessor for TranscriptPresentationContext);
  sub_75540();
  swift_release();
  *a2 = *(void *)(v3 + 24);
  return swift_retain();
}

uint64_t sub_33CEC()
{
  return swift_release();
}

uint64_t sub_33DD0()
{
  swift_getKeyPath();
  sub_36818(&qword_99178, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  sub_75540();
  swift_release();
  return *(unsigned __int8 *)(v0 + 33);
}

BOOL sub_33E70()
{
  uint64_t v1 = *(void *)(v0 + 160);
  swift_getKeyPath();
  sub_36818((unint64_t *)&qword_9A3D0, (void (*)(uint64_t))type metadata accessor for TranscriptPresentationContext);
  sub_75540();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 24);
  if (!v2) {
    return 0;
  }
  unint64_t v3 = *(void *)(v2 + 16);
  if (v3 >> 62) {
    return 0;
  }
  double v5 = *(double *)(v3 + 32);
  double v4 = *(double *)(v3 + 40);
  double v7 = *(double *)(v0 + 56);
  double v6 = *(double *)(v0 + 64);
  if (*(void *)(v3 + 16) == *(void *)(v0 + 40) && *(void *)(v3 + 24) == *(void *)(v0 + 48))
  {
    if (v5 == v7) {
      return v4 == v6;
    }
    return 0;
  }
  char v9 = sub_77230();
  BOOL result = 0;
  if ((v9 & 1) != 0 && v5 == v7) {
    return v4 == v6;
  }
  return result;
}

uint64_t sub_33F88()
{
  swift_getKeyPath();
  sub_36818(&qword_99178, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  sub_75540();
  swift_release();
  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_34028@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_36818(&qword_99178, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  sub_75540();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 32);
  return result;
}

uint64_t sub_340D0()
{
  return swift_release();
}

uint64_t sub_341A0@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_36818(&qword_99178, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  sub_75540();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 33);
  return result;
}

uint64_t sub_34248()
{
  return swift_release();
}

uint64_t SpeakerContent.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  *(void *)a1 = *(void *)(v1 + 40);
  *(void *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t sub_3432C()
{
  swift_getKeyPath();
  sub_36818(&qword_99178, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  sub_75540();
  swift_release();
  return *(void *)(v0 + 72);
}

uint64_t sub_343D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_36818(&qword_99178, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  sub_75540();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + 80);
  *(void *)a2 = *(void *)(v3 + 72);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_34480()
{
  return swift_release();
}

uint64_t sub_34554()
{
  swift_getKeyPath();
  sub_36818(&qword_99178, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  sub_75540();
  swift_release();
  return *(void *)(v0 + 88);
}

uint64_t sub_345F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_36818(&qword_99178, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  sub_75540();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + 96);
  *(void *)a2 = *(void *)(v3 + 88);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_346A8()
{
  return swift_release();
}

uint64_t sub_3477C()
{
  swift_getKeyPath();
  sub_36818(&qword_99178, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  sub_75540();
  swift_release();
  return *(void *)(v0 + 104);
}

uint64_t sub_34820@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_36818(&qword_99178, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  sub_75540();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + 112);
  *(void *)a2 = *(void *)(v3 + 104);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_348D0()
{
  return swift_release();
}

uint64_t sub_349A4()
{
  swift_getKeyPath();
  sub_36818(&qword_99178, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  sub_75540();
  swift_release();
  return *(void *)(v0 + 120);
}

uint64_t sub_34A48@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_36818(&qword_99178, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  sub_75540();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + 128);
  *(void *)a2 = *(void *)(v3 + 120);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_34AF8()
{
  return swift_release();
}

void *sub_34BCC()
{
  swift_getKeyPath();
  sub_36818(&qword_99178, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  sub_75540();
  swift_release();
  uint64_t v1 = *(void **)(v0 + 136);
  sub_98C4(v1);
  return v1;
}

id sub_34C80@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_36818(&qword_99178, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  sub_75540();
  swift_release();
  double v4 = *(void **)(v3 + 136);
  uint64_t v5 = *(void *)(v3 + 144);
  *a2 = v4;
  a2[1] = v5;
  return sub_98C4(v4);
}

uint64_t sub_34D2C(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_98C4(v1);
  sub_36818(&qword_99178, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  sub_75530();
  sub_97D8(v1);
  return swift_release();
}

uint64_t sub_34E1C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_994B0);
  sub_75520();
  int v1 = sub_355DC(v5, v6) & 1;
  swift_getKeyPath();
  sub_36818(&qword_99178, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  sub_75540();
  swift_release();
  if (v1 == *(unsigned __int8 *)(v0 + 33)) {
    return swift_release();
  }
  swift_getKeyPath();
  sub_75540();
  uint64_t v2 = swift_release();
  if (*(unsigned char *)(v0 + 32) == 1)
  {
    __chkstk_darwin(v2);
    sub_76480();
    sub_75E90();
  }
  else
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_75530();
  }
  swift_release();
  return swift_release();
}

uint64_t sub_35084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 160);
  swift_getKeyPath();
  sub_36818((unint64_t *)&qword_9A3D0, (void (*)(uint64_t))type metadata accessor for TranscriptPresentationContext);
  sub_75540();
  swift_release();
  *(void *)a2 = *(void *)(v3 + 24);
  swift_getKeyPath();
  swift_retain();
  sub_75540();
  uint64_t result = swift_release();
  *(unsigned char *)(a2 + 8) = *(unsigned char *)(v3 + 32);
  return result;
}

uint64_t sub_35174()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_99F50);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_76A80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_beginAccess();
  swift_weakLoadStrong();
  swift_weakInit();
  swift_release();
  sub_76A60();
  swift_retain();
  uint64_t v5 = sub_76A50();
  unsigned __int8 v6 = (void *)swift_allocObject();
  v6[2] = v5;
  v6[3] = &protocol witness table for MainActor;
  v6[4] = v4;
  swift_release();
  sub_35430((uint64_t)v2, (uint64_t)&unk_994C0, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_352F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  sub_76A60();
  v4[7] = sub_76A50();
  uint64_t v6 = sub_76A40();
  return _swift_task_switch(sub_35388, v6, v5);
}

uint64_t sub_35388()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    sub_34E1C();
    swift_release();
  }
  **(unsigned char **)(v0 + 40) = Strong == 0;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_35430(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_76A80();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_76A70();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_366C0(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_76A40();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_994D8);
  return swift_task_create();
}

uint64_t sub_355DC(uint64_t result, unsigned __int8 a2)
{
  if (!result)
  {
LABEL_12:
    int v11 = a2;
    if (a2) {
      goto LABEL_13;
    }
    return 0;
  }
  unint64_t v4 = *(void *)(result + 16);
  if (!(v4 >> 62))
  {
    double v6 = *(double *)(v4 + 32);
    double v5 = *(double *)(v4 + 40);
    double v8 = *(double *)(v2 + 56);
    double v7 = *(double *)(v2 + 64);
    if (*(void *)(v4 + 16) != *(void *)(v2 + 40) || *(void *)(v4 + 24) != *(void *)(v2 + 48))
    {
      char v10 = sub_77230();
      uint64_t result = 0;
      if ((v10 & 1) == 0 || v6 != v8) {
        goto LABEL_12;
      }
LABEL_11:
      uint64_t result = v5 == v7;
      goto LABEL_12;
    }
    if (v6 == v8) {
      goto LABEL_11;
    }
  }
  uint64_t result = 0;
  int v11 = a2;
  if (!a2) {
    return 0;
  }
LABEL_13:
  if (v11 != 1) {
    return *(unsigned __int8 *)(v2 + 152);
  }
  return result;
}

uint64_t sub_35690()
{
  return swift_release();
}

uint64_t SpeakerContent.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_97D8(*(id *)(v0 + 136));
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19PodcastsTranscripts14SpeakerContent___observationRegistrar;
  uint64_t v2 = sub_75580();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SpeakerContent.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_97D8(v0[17]);
  swift_release();
  uint64_t v1 = (char *)v0 + OBJC_IVAR____TtC19PodcastsTranscripts14SpeakerContent___observationRegistrar;
  uint64_t v2 = sub_75580();
  (*(void (**)(char *, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *((unsigned int *)*v0 + 12);
  uint64_t v4 = *((unsigned __int16 *)*v0 + 26);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_358B0()
{
  return swift_release();
}

uint64_t sub_35988()
{
  return swift_release();
}

uint64_t sub_35A60(void *a1)
{
  return swift_release();
}

uint64_t sub_35B48@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 48);
  *(void *)a1 = *(void *)(*v1 + 40);
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 56);
  return swift_bridgeObjectRetain();
}

uint64_t SpeakerContent.ID.hash(into:)()
{
  Swift::UInt64 v1 = *(void *)(v0 + 16);
  Swift::UInt64 v2 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_76940();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_77310(v3);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_77310(v4);

  return swift_bridgeObjectRelease();
}

Swift::Int SpeakerContent.ID.hashValue.getter()
{
  Swift::UInt64 v1 = *(void *)(v0 + 16);
  Swift::UInt64 v2 = *(void *)(v0 + 24);
  sub_772D0();
  sub_76940();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_77310(v3);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_77310(v4);
  return sub_77320();
}

void sub_35C64()
{
  Swift::UInt64 v1 = *(void *)(v0 + 16);
  Swift::UInt64 v2 = *(void *)(v0 + 24);
  sub_76940();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_77310(v3);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_77310(v4);
}

Swift::Int sub_35CB4()
{
  Swift::UInt64 v1 = *(void *)(v0 + 16);
  Swift::UInt64 v2 = *(void *)(v0 + 24);
  sub_772D0();
  sub_76940();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_77310(v3);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_77310(v4);
  return sub_77320();
}

uint64_t sub_35D30(uint64_t a1, int *a2)
{
  *(void *)(v2 + 16) = a1;
  double v5 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  Swift::UInt64 v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v3;
  void *v3 = v2;
  v3[1] = sub_35E10;
  return v5(v2 + 32);
}

uint64_t sub_35E10()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(unsigned char **)(*v0 + 16);
  uint64_t v5 = *v0;
  swift_task_dealloc();
  *uint64_t v2 = *(unsigned char *)(v1 + 32);
  Swift::UInt64 v3 = *(uint64_t (**)(void))(v5 + 8);
  return v3();
}

BOOL _s19PodcastsTranscripts14SpeakerContentC2IDV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v3 = *(double *)(a1 + 16);
  double v2 = *(double *)(a1 + 24);
  double v5 = *(double *)(a2 + 16);
  double v4 = *(double *)(a2 + 24);
  BOOL v6 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  BOOL result = 0;
  if (v6 || (sub_77230()) && v3 == v5 && v2 == v4) {
    return 1;
  }
  return result;
}

uint64_t sub_35F94(uint64_t a1)
{
  uint64_t result = sub_36818(&qword_99390, (void (*)(uint64_t))type metadata accessor for SpeakerContent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t type metadata accessor for SpeakerContent()
{
  uint64_t result = qword_993D0;
  if (!qword_993D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_3603C()
{
  unint64_t result = qword_99398;
  if (!qword_99398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_99398);
  }
  return result;
}

unint64_t sub_36094()
{
  unint64_t result = qword_993A0;
  if (!qword_993A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_993A0);
  }
  return result;
}

uint64_t sub_360E8()
{
  return type metadata accessor for SpeakerContent();
}

uint64_t sub_360F0()
{
  uint64_t result = sub_75580();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for SpeakerContent(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for SpeakerContent);
}

uint64_t initializeWithCopy for TextContent.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for TextContent.ID(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  return a1;
}

uint64_t assignWithTake for TextContent.ID(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextContent.ID(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextContent.ID(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SpeakerContent.ID()
{
  return &type metadata for SpeakerContent.ID;
}

void sub_3635C()
{
}

void sub_36374()
{
  uint64_t v2 = v0[2];
  unint64_t v1 = (void *)v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = *(void **)(v2 + 136);
  *(void *)(v2 + 136) = v1;
  *(void *)(v2 + 144) = v3;
  sub_98C4(v1);
  sub_97D8(v4);
}

void sub_363C8()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 32);
  *(void *)(v1 + 120) = *(void *)(v0 + 24);
  *(unsigned char *)(v1 + 128) = v2;
}

void sub_363E4()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 32);
  *(void *)(v1 + 104) = *(void *)(v0 + 24);
  *(unsigned char *)(v1 + 112) = v2;
}

void sub_36400()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 32);
  *(void *)(v1 + 88) = *(void *)(v0 + 24);
  *(unsigned char *)(v1 + 96) = v2;
}

void sub_3641C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(unsigned char *)(v0 + 32);
  *(void *)(v1 + 72) = *(void *)(v0 + 24);
  *(unsigned char *)(v1 + 80) = v2;
}

uint64_t sub_36430(uint64_t *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v10 = *a1;
  uint64_t v11 = a1[1];
  uint64_t v12 = a1[2];
  uint64_t v13 = a1[3];
  *(_WORD *)(v5 + 32) = 0;
  *(void *)(v5 + 72) = 0;
  *(unsigned char *)(v5 + 80) = 1;
  *(void *)(v5 + 88) = 0;
  *(unsigned char *)(v5 + 96) = 1;
  *(void *)(v5 + 104) = 0;
  *(unsigned char *)(v5 + 112) = 1;
  *(void *)(v5 + 120) = 0;
  *(unsigned char *)(v5 + 128) = 1;
  *(_OWORD *)(v5 + 136) = xmmword_79880;
  sub_75570();
  *(void *)(v5 + 40) = v10;
  *(void *)(v5 + 48) = v11;
  *(void *)(v5 + 56) = v12;
  *(void *)(v5 + 64) = v13;
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  *(unsigned char *)(v5 + 152) = a4;
  *(void *)(v5 + 160) = a5;
  swift_retain();
  sub_34E1C();
  return v5;
}

uint64_t sub_364EC@<X0>(uint64_t a1@<X8>)
{
  return sub_35084(v1, a1);
}

uint64_t (*sub_364F4())()
{
  return sub_365C4;
}

void sub_3655C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 33) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_3656C()
{
  return sub_35690();
}

uint64_t sub_3658C()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_365C4()
{
  return sub_35174();
}

uint64_t sub_365CC()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_3660C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  double v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *double v7 = v2;
  v7[1] = sub_33040;
  return sub_352F0(a1, v4, v5, v6);
}

uint64_t sub_366C0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_99F50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_36720()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_36758(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_33040;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_994C8 + dword_994C8);
  return v6(a1, v4);
}

uint64_t sub_36818(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_36868()
{
  return sub_180BC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_36884()
{
}

void sub_3689C()
{
}

void sub_368B4()
{
}

NSString sub_368CC()
{
  NSString result = sub_768D0();
  qword_994E0 = (uint64_t)result;
  return result;
}

id static NSAttributedStringKey.contentType.getter()
{
  if (qword_98008 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_994E0;

  return v0;
}

BOOL static TranscriptSelectionContentType.== infix(_:_:)(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

void TranscriptSelectionContentType.hash(into:)(uint64_t a1, char a2)
{
}

Swift::Int TranscriptSelectionContentType.hashValue.getter(char a1)
{
  return sub_77320();
}

unint64_t sub_369E8()
{
  unint64_t result = qword_994E8;
  if (!qword_994E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_994E8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for TranscriptSelectionContentType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x36B08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptSelectionContentType()
{
  return &type metadata for TranscriptSelectionContentType;
}

uint64_t sub_36B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v28 = a2;
  uint64_t v29 = a3;
  uint64_t v27 = a1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_99060);
  __chkstk_darwin(v4 - 8);
  unsigned int v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v3 + 48);
  unint64_t v8 = *(void *)(v3 + 56);
  if ((v8 & 0x2000000000000000) != 0) {
    uint64_t v9 = HIBYTE(v8) & 0xF;
  }
  else {
    uint64_t v9 = v7 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v10 = 7;
  if (((v8 >> 60) & ((v7 & 0x800000000000000) == 0)) != 0) {
    uint64_t v10 = 11;
  }
  uint64_t v25 = v10 | (v9 << 16);
  uint64_t v26 = v7;
  uint64_t v11 = sub_75120();
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  unint64_t v23 = 4 * v9;
  uint64_t v12 = (char *)&_swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v32 = v26;
    unint64_t v33 = v8;
    uint64_t v30 = v27;
    uint64_t v31 = v28;
    v24(v6, 1, 1, v11);
    sub_C1AC();
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_76FB0();
    unint64_t v15 = v14;
    char v17 = v16;
    sub_36D68((uint64_t)v6);
    swift_bridgeObjectRelease();
    if (v17) {
      break;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = (uint64_t)sub_3EA74(0, *((void *)v12 + 2) + 1, 1, v12);
      uint64_t v12 = (char *)result;
    }
    unint64_t v20 = *((void *)v12 + 2);
    unint64_t v19 = *((void *)v12 + 3);
    if (v20 >= v19 >> 1)
    {
      uint64_t result = (uint64_t)sub_3EA74((char *)(v19 > 1), v20 + 1, 1, v12);
      uint64_t v12 = (char *)result;
    }
    *((void *)v12 + 2) = v20 + 1;
    NSString v21 = &v12[16 * v20];
    *((void *)v21 + 4) = v13;
    *((void *)v21 + 5) = v15;
    if (v23 < v15 >> 14)
    {
      __break(1u);
      return result;
    }
  }
  return (uint64_t)v12;
}

uint64_t sub_36D68(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_99060);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_36DC8(unint64_t a1)
{
  if (!(a1 >> 62))
  {
    uint64_t v2 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain_n();
    if (v2) {
      goto LABEL_3;
    }
LABEL_23:
    uint64_t v5 = (char *)&_swiftEmptyArrayStorage;
LABEL_24:
    swift_bridgeObjectRelease_n();
    return (uint64_t)v5;
  }
  swift_bridgeObjectRetain_n();
  uint64_t result = sub_77180();
  uint64_t v2 = result;
  if (!result) {
    goto LABEL_23;
  }
LABEL_3:
  if (v2 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      uint64_t v4 = 0;
      uint64_t v5 = (char *)&_swiftEmptyArrayStorage;
      do
      {
        uint64_t v6 = sub_77080();
        unint64_t v7 = *(void *)(v6 + 16);
        if (v7 >> 62)
        {
          swift_unknownObjectRelease();
        }
        else
        {
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v5 = sub_3E964(0, *((void *)v5 + 2) + 1, 1, v5);
          }
          unint64_t v9 = *((void *)v5 + 2);
          unint64_t v8 = *((void *)v5 + 3);
          if (v9 >= v8 >> 1) {
            uint64_t v5 = sub_3E964((char *)(v8 > 1), v9 + 1, 1, v5);
          }
          *((void *)v5 + 2) = v9 + 1;
          uint64_t v10 = &v5[16 * v9];
          *((void *)v10 + 4) = v6;
          *((void *)v10 + 5) = v7;
        }
        ++v4;
      }
      while (v2 != v4);
    }
    else
    {
      uint64_t v11 = (uint64_t *)(a1 + 32);
      uint64_t v5 = (char *)&_swiftEmptyArrayStorage;
      do
      {
        uint64_t v13 = *v11;
        unint64_t v14 = *(void *)(*v11 + 16);
        if (!(v14 >> 62))
        {
          swift_retain();
          swift_retain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v5 = sub_3E964(0, *((void *)v5 + 2) + 1, 1, v5);
          }
          unint64_t v16 = *((void *)v5 + 2);
          unint64_t v15 = *((void *)v5 + 3);
          if (v16 >= v15 >> 1) {
            uint64_t v5 = sub_3E964((char *)(v15 > 1), v16 + 1, 1, v5);
          }
          *((void *)v5 + 2) = v16 + 1;
          uint64_t v12 = &v5[16 * v16];
          *((void *)v12 + 4) = v13;
          *((void *)v12 + 5) = v14;
        }
        ++v11;
        --v2;
      }
      while (v2);
    }
    goto LABEL_24;
  }
  __break(1u);
  return result;
}

void sub_36FCC(char *a1, uint64_t a2)
{
  if (a2 == 2)
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_40514((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
    uint64_t v4 = a1;
    sub_75530();
    swift_release();

    if (*(void *)(*(void *)&v4[OBJC_IVAR____TtC19PodcastsTranscripts15StringTextRange_endPosition]
                   + OBJC_IVAR____TtC19PodcastsTranscripts18StringTextPosition_position) >> 14 >= *(void *)(*(void *)&v4[OBJC_IVAR____TtC19PodcastsTranscripts15StringTextRange_startPosition] + OBJC_IVAR____TtC19PodcastsTranscripts18StringTextPosition_position) >> 14)
    {
      uint64_t v5 = swift_getKeyPath();
      __chkstk_darwin(v5);
      sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
      sub_75530();
      swift_release();
      return;
    }
    __break(1u);
    goto LABEL_8;
  }
  unint64_t v6 = *(void *)(*(void *)&a1[OBJC_IVAR____TtC19PodcastsTranscripts15StringTextRange_startPosition]
                 + OBJC_IVAR____TtC19PodcastsTranscripts18StringTextPosition_position);
  unint64_t v7 = *(void *)(*(void *)&a1[OBJC_IVAR____TtC19PodcastsTranscripts15StringTextRange_endPosition]
                 + OBJC_IVAR____TtC19PodcastsTranscripts18StringTextPosition_position);
  if (v7 >> 14 < v6 >> 14)
  {
LABEL_8:
    __break(1u);
    return;
  }
  sub_3AEBC(v6, v7);
}

unint64_t sub_37250(char *a1, uint64_t a2)
{
  if (a2 == 2)
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_40514((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
    uint64_t v4 = a1;
    sub_75530();
    swift_release();

    uint64_t v5 = swift_getKeyPath();
    __chkstk_darwin(v5);
    sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
    sub_75530();
    return swift_release();
  }
  else
  {
    unint64_t result = *(void *)(*(void *)&a1[OBJC_IVAR____TtC19PodcastsTranscripts15StringTextRange_startPosition]
                       + OBJC_IVAR____TtC19PodcastsTranscripts18StringTextPosition_position);
    unint64_t v7 = *(void *)(*(void *)&a1[OBJC_IVAR____TtC19PodcastsTranscripts15StringTextRange_endPosition]
                   + OBJC_IVAR____TtC19PodcastsTranscripts18StringTextPosition_position);
    if (v7 >> 14 < result >> 14) {
      __break(1u);
    }
    else {
      return sub_3B018(result, v7);
    }
  }
  return result;
}

void *sub_37494()
{
  swift_getKeyPath();
  sub_40514((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  sub_75540();
  swift_release();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__activeSearchRange);
  id v2 = v1;
  return v1;
}

uint64_t sub_37544()
{
  return sub_3756C((uint64_t)&unk_7A848, &OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerEndTime);
}

uint64_t sub_37558()
{
  return sub_3756C((uint64_t)&unk_7A820, &OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerStartTime);
}

uint64_t sub_3756C(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_40514((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  sub_75540();
  swift_release();
  return *(void *)(v2 + *a2);
}

uint64_t sub_37614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_3E90C(a1, a2, a3, &qword_99990);
}

uint64_t sub_37620(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_99990);
}

void sub_3762C()
{
}

void sub_37654()
{
}

uint64_t sub_37670(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_3E90C(a1, a2, a3, &qword_99988);
}

uint64_t sub_3767C(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_99988);
}

uint64_t keypath_hashTm(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_76870();
}

void sub_376CC()
{
}

void sub_376F4()
{
}

double sub_37714()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_liveText);
  swift_getKeyPath();
  sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  swift_release();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__isActive) == 1
    && (uint64_t v2 = *(unsigned char **)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_presentationContext),
        swift_getKeyPath(),
        sub_40514((unint64_t *)&qword_9A3D0, (void (*)(uint64_t))type metadata accessor for TranscriptPresentationContext), sub_75540(), swift_release(), v2[16] == 1)&& !v2[48]&& v2[40] != 128)
  {
    return 1.05;
  }
  else
  {
    return 1.0;
  }
}

double sub_37878()
{
  swift_getKeyPath();
  sub_40514((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  sub_75540();
  swift_release();
  return *(double *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__durationFromPlayerStartTimeToFirstWordTime);
}

uint64_t sub_37920(uint64_t a1, uint64_t a2)
{
  uint64_t v90 = a2;
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_999A0);
  uint64_t v3 = __chkstk_darwin(v76);
  uint64_t v74 = (char *)&v66 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v73 = (char *)&v66 - v5;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_999A8);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v89 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v96 = (char *)&v66 - v9;
  uint64_t v98 = sub_74FF0();
  uint64_t v10 = *(void *)(v98 - 8);
  uint64_t v11 = __chkstk_darwin(v98);
  uint64_t v75 = (char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v88 = (char *)&v66 - v13;
  uint64_t v99 = sub_75020();
  uint64_t v14 = *(void *)(v99 - 8);
  uint64_t v15 = __chkstk_darwin(v99);
  uint64_t v95 = (char *)&v66 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v18 = (char *)&v66 - v17;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_98780);
  __chkstk_darwin(v19 - 8);
  uint64_t v87 = (uint64_t)&v66 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_98770);
  uint64_t v21 = __chkstk_darwin(v91);
  uint64_t v69 = (uint64_t)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  char v72 = (char *)&v66 - v24;
  __chkstk_darwin(v23);
  uint64_t v67 = (uint64_t)&v66 - v26;
  uint64_t v27 = *(void *)(a1 + 56);
  uint64_t v81 = a1 + 56;
  uint64_t v28 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v29 = -1;
  if (v28 < 64) {
    uint64_t v29 = ~(-1 << v28);
  }
  unint64_t v30 = v29 & v27;
  int64_t v82 = (unint64_t)(v28 + 63) >> 6;
  uint64_t v93 = (unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  char v94 = (void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v80 = (void (**)(char *, char *, uint64_t))(v10 + 32);
  unint64_t v71 = (void (**)(char *, char *, uint64_t))(v10 + 16);
  id v77 = (void (**)(char *, uint64_t))(v10 + 8);
  char v85 = (void (**)(char *, uint64_t))(v14 + 8);
  id v86 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
  uint64_t v68 = v25;
  uint64_t v84 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v32 = 0;
  uint64_t v70 = &_swiftEmptyArrayStorage;
  uint64_t v78 = v18;
  uint64_t v79 = a1;
  if (v30) {
    goto LABEL_9;
  }
LABEL_15:
  int64_t v42 = v32 + 1;
  if (!__OFADD__(v32, 1))
  {
    if (v42 < v82)
    {
      unint64_t v43 = *(void *)(v81 + 8 * v42);
      ++v32;
      if (v43) {
        goto LABEL_30;
      }
      int64_t v32 = v42 + 1;
      if (v42 + 1 >= v82) {
        goto LABEL_35;
      }
      unint64_t v43 = *(void *)(v81 + 8 * v32);
      if (v43) {
        goto LABEL_30;
      }
      int64_t v32 = v42 + 2;
      if (v42 + 2 >= v82) {
        goto LABEL_35;
      }
      unint64_t v43 = *(void *)(v81 + 8 * v32);
      if (v43) {
        goto LABEL_30;
      }
      int64_t v32 = v42 + 3;
      if (v42 + 3 >= v82) {
        goto LABEL_35;
      }
      unint64_t v43 = *(void *)(v81 + 8 * v32);
      if (v43)
      {
LABEL_30:
        uint64_t v97 = (v43 - 1) & v43;
        for (unint64_t i = __clz(__rbit64(v43)) + (v32 << 6); ; unint64_t i = __clz(__rbit64(v30)) | (v32 << 6))
        {
          uint64_t v92 = *(char **)(*(void *)(a1 + 48) + 16 * i + 8);
          uint64_t v45 = *v94;
          uint64_t v46 = v99;
          (*v94)(v18, v90, v99);
          v45(v95, (uint64_t)v18, v46);
          sub_40514(&qword_999B0, (void (*)(uint64_t))&type metadata accessor for AttributedString);
          uint64_t v47 = v96;
          sub_75000();
          char v48 = *v93;
          unsigned int v49 = (*v93)(v47, 1, v98);
          uint64_t v33 = (uint64_t)v47;
          uint64_t v50 = v88;
          if (v49 == 1) {
            goto LABEL_6;
          }
          int64_t v83 = v32;
          Swift::String_optional v51 = *v80;
          uint64_t v52 = v98;
          (*v80)(v88, v96, v98);
          v45(v95, (uint64_t)v18, v99);
          os_log_type_t v53 = v89;
          sub_75000();
          if (v48(v53, 1, v52) == 1) {
            break;
          }
          Swift::String_optional v54 = v75;
          uint64_t v55 = v98;
          v51(v75, v89, v98);
          sub_40514(&qword_999B8, (void (*)(uint64_t))&type metadata accessor for AttributedString.Index);
          uint64_t result = sub_76890();
          if ((result & 1) == 0) {
            goto LABEL_37;
          }
          uint64_t v56 = v76;
          uint64_t v57 = v73;
          unint64_t v58 = &v73[*(int *)(v76 + 48)];
          v51(v73, v50, v55);
          uint64_t v92 = v58;
          v51(v58, v54, v55);
          uint64_t v59 = v74;
          id v60 = &v74[*(int *)(v56 + 48)];
          uint64_t v61 = *v71;
          (*v71)(v74, v57, v55);
          v61(v60, v58, v55);
          os_log_type_t v62 = v72;
          v51(v72, v59, v55);
          id v63 = *v77;
          (*v77)(v60, v55);
          uint64_t v64 = &v59[*(int *)(v76 + 48)];
          v51(v59, v57, v55);
          v51(v64, v92, v55);
          v51(&v62[*(int *)(v91 + 36)], v64, v55);
          v63(v59, v55);
          uint64_t v65 = (uint64_t)v62;
          uint64_t v35 = v87;
          sub_C570(v65, v87, &qword_98770);
          uint64_t v34 = 0;
          id v18 = v78;
          a1 = v79;
          int64_t v32 = v83;
LABEL_7:
          uint64_t v36 = v91;
          (*v86)(v35, v34, 1, v91);
          (*v85)(v18, v99);
          if ((*v84)(v35, 1, v36) == 1)
          {
            uint64_t result = sub_CA50(v35, &qword_98780);
            unint64_t v30 = v97;
            if (!v97) {
              goto LABEL_15;
            }
          }
          else
          {
            uint64_t v38 = v67;
            sub_C570(v35, v67, &qword_98770);
            sub_C570(v38, v69, &qword_98770);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v70 = (void *)sub_3EB84(0, v70[2] + 1, 1, (unint64_t)v70);
            }
            unint64_t v40 = v70[2];
            unint64_t v39 = v70[3];
            if (v40 >= v39 >> 1) {
              uint64_t v70 = (void *)sub_3EB84(v39 > 1, v40 + 1, 1, (unint64_t)v70);
            }
            uint64_t v41 = v70;
            v70[2] = v40 + 1;
            uint64_t result = sub_C570(v69, (uint64_t)v41+ ((*(unsigned __int8 *)(v68 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80))+ *(void *)(v68 + 72) * v40, &qword_98770);
            unint64_t v30 = v97;
            if (!v97) {
              goto LABEL_15;
            }
          }
LABEL_9:
          uint64_t v97 = (v30 - 1) & v30;
        }
        (*v77)(v50, v98);
        uint64_t v33 = (uint64_t)v89;
        id v18 = v78;
        a1 = v79;
        int64_t v32 = v83;
LABEL_6:
        sub_CA50(v33, &qword_999A8);
        uint64_t v34 = 1;
        uint64_t v35 = v87;
        goto LABEL_7;
      }
      int64_t v44 = v42 + 4;
      if (v44 < v82)
      {
        unint64_t v43 = *(void *)(v81 + 8 * v44);
        if (v43)
        {
          int64_t v32 = v44;
          goto LABEL_30;
        }
        while (1)
        {
          int64_t v32 = v44 + 1;
          if (__OFADD__(v44, 1)) {
            goto LABEL_38;
          }
          if (v32 >= v82) {
            break;
          }
          unint64_t v43 = *(void *)(v81 + 8 * v32);
          ++v44;
          if (v43) {
            goto LABEL_30;
          }
        }
      }
    }
LABEL_35:
    swift_release();
    return (uint64_t)v70;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

void *sub_3839C(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_98780);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_98770);
  __chkstk_darwin(v28);
  uint64_t v26 = (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v25 = (uint64_t)&v21 - v12;
  uint64_t v13 = *(void *)(a3 + 16);
  if (!v13) {
    return &_swiftEmptyArrayStorage;
  }
  uint64_t v22 = v11;
  uint64_t v14 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  uint64_t v15 = 0;
  uint64_t v16 = &_swiftEmptyArrayStorage;
  uint64_t v23 = a1;
  uint64_t v24 = a3;
  do
  {
    long long v27 = *(_OWORD *)(a3 + 16 * v15 + 32);
    a1(&v27);
    if (v3)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v16;
    }
    if ((*v14)(v8, 1, v28) == 1)
    {
      sub_CA50((uint64_t)v8, &qword_98780);
    }
    else
    {
      uint64_t v17 = v25;
      sub_C570((uint64_t)v8, v25, &qword_98770);
      sub_C570(v17, v26, &qword_98770);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v16 = (void *)sub_3EB84(0, v16[2] + 1, 1, (unint64_t)v16);
      }
      unint64_t v19 = v16[2];
      unint64_t v18 = v16[3];
      if (v19 >= v18 >> 1) {
        uint64_t v16 = (void *)sub_3EB84(v18 > 1, v19 + 1, 1, (unint64_t)v16);
      }
      void v16[2] = v19 + 1;
      sub_C570(v26, (uint64_t)v16+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v19, &qword_98770);
      a1 = v23;
      a3 = v24;
    }
    ++v15;
  }
  while (v13 != v15);
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t sub_38660(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, char a8, double a9, double a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13 = v12;
  uint64_t v23 = v12 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerStartTime;
  *(void *)uint64_t v23 = 0;
  *(unsigned char *)(v23 + 8) = 1;
  uint64_t v24 = v12 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerEndTime;
  *(void *)uint64_t v24 = 0;
  uint64_t v54 = v24;
  *(unsigned char *)(v24 + 8) = 1;
  *(void *)(v12 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__durationFromPlayerStartTimeToFirstWordTime) = 0;
  *(unsigned char *)(v12 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__isSelected) = 0;
  *(void *)(v12 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__activeSearchRange) = 0;
  *(_OWORD *)(v12 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__viewState) = xmmword_79880;
  *(void *)(v12 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__subscriptions) = &_swiftEmptyArrayStorage;
  sub_75570();
  *(void *)(v12 + 16) = a1;
  *(void *)(v12 + 24) = a2;
  *(double *)(v12 + 32) = a9;
  *(double *)(v12 + 40) = a10;
  uint64_t v56 = a1;
  *(void *)(v12 + 48) = a1;
  *(void *)(v12 + 56) = a2;
  uint64_t v25 = *(void *)(a3 + 16);
  if (v25)
  {
    uint64_t v48 = v23;
    uint64_t v49 = a5;
    uint64_t v50 = a7;
    char v51 = a8;
    uint64_t v52 = v12;
    uint64_t v26 = *(void *)(sub_75670() - 8);
    uint64_t v27 = a3 + ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80));
    uint64_t v28 = *(void *)(v26 + 72);
    swift_bridgeObjectRetain_n();
    uint64_t v47 = a3;
    swift_bridgeObjectRetain();
    uint64_t v29 = 0;
    unint64_t v30 = (char *)&_swiftEmptyArrayStorage;
    uint64_t v31 = a2;
    uint64_t v55 = a2;
    while (1)
    {
      sub_75650();
      sub_75650();
      swift_bridgeObjectRelease();
      uint64_t v32 = sub_76990();
      swift_bridgeObjectRelease();
      unint64_t result = sub_75640();
      if (result)
      {
        unint64_t result = sub_76960();
        if (__OFADD__(v29, v32)) {
          goto LABEL_19;
        }
        unint64_t v34 = result;
        unint64_t result = sub_76960();
        if (result >> 14 < v34 >> 14) {
          goto LABEL_20;
        }
        unint64_t v35 = result;
        unint64_t result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          unint64_t result = (unint64_t)sub_3EA74(0, *((void *)v30 + 2) + 1, 1, v30);
          unint64_t v30 = (char *)result;
        }
        unint64_t v37 = *((void *)v30 + 2);
        unint64_t v36 = *((void *)v30 + 3);
        if (v37 >= v36 >> 1)
        {
          unint64_t result = (unint64_t)sub_3EA74((char *)(v36 > 1), v37 + 1, 1, v30);
          unint64_t v30 = (char *)result;
        }
        *((void *)v30 + 2) = v37 + 1;
        uint64_t v38 = &v30[16 * v37];
        *((void *)v38 + 4) = v34;
        *((void *)v38 + 5) = v35;
        uint64_t v31 = v55;
      }
      uint64_t v39 = v32 + 1;
      if (__OFADD__(v32, 1)) {
        break;
      }
      BOOL v40 = __OFADD__(v29, v39);
      v29 += v39;
      if (v40) {
        goto LABEL_18;
      }
      v27 += v28;
      if (!--v25)
      {
        uint64_t v41 = v47;
        swift_bridgeObjectRelease();
        uint64_t v13 = v52;
        a8 = v51;
        a7 = v50;
        a2 = v31;
        uint64_t v23 = v48;
        a5 = v49;
        goto LABEL_16;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain_n();
    uint64_t v41 = a3;
    unint64_t v30 = (char *)&_swiftEmptyArrayStorage;
LABEL_16:
    type metadata accessor for TextContent.LiveText(0);
    uint64_t v42 = swift_allocObject();
    sub_3B9CC(v56, a2, (uint64_t)v30);
    *(void *)(v13 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_liveText) = v42;
    *(void *)(v13 + 64) = v41;
    sub_C570(a4, v13 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_speaker, &qword_98580);
    uint64_t v43 = v13 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_referenceStartTime;
    *(double *)uint64_t v43 = a9;
    *(unsigned char *)(v43 + 8) = 0;
    uint64_t v44 = v13 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_referenceEndTime;
    *(double *)uint64_t v44 = a10;
    *(unsigned char *)(v44 + 8) = 0;
    *(void *)uint64_t v23 = a5;
    *(unsigned char *)(v23 + 8) = a6 & 1;
    *(void *)uint64_t v54 = a7;
    *(unsigned char *)(v54 + 8) = a8 & 1;
    uint64_t v45 = v13 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_splitStyle;
    uint64_t v46 = sub_756D0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 32))(v45, a11, v46);
    *(void *)(v13 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_presentationContext) = a12;
    return v13;
  }
  return result;
}

uint64_t TextContent.ID.description.getter()
{
  uint64_t v2 = *v0;
  unint64_t v1 = v0[1];
  sub_77060(35);
  v6._countAndFlagsBits = 0x746E6F4374786554;
  v6._object = (void *)0xEF2844492E746E65;
  sub_76970(v6);
  sub_76AD0();
  v7._countAndFlagsBits = 0x202E2E2E20;
  v7._object = (void *)0xE500000000000000;
  sub_76970(v7);
  sub_76AD0();
  v8._countAndFlagsBits = 44;
  v8._object = (void *)0xE100000000000000;
  sub_76970(v8);
  swift_bridgeObjectRetain();
  sub_40294(20, v2, v1, v3);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = sub_76930();
  sub_76970(v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0x202E2E2E20;
  v10._object = (void *)0xE500000000000000;
  sub_76970(v10);
  swift_bridgeObjectRetain();
  sub_40330(0x14uLL, v2, v1, v4);
  swift_bridgeObjectRelease();
  v11._countAndFlagsBits = sub_76930();
  sub_76970(v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 41;
  v12._object = (void *)0xE100000000000000;
  sub_76970(v12);
  return 0;
}

void TextContent.ID.hash(into:)()
{
  Swift::UInt64 v1 = *(void *)(v0 + 16);
  Swift::UInt64 v2 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  sub_76940();
  swift_bridgeObjectRelease();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_77310(v3);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_77310(v4);
}

uint64_t TextContent.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *(void *)a1 = *(void *)(v1 + 16);
  *(void *)(a1 + 8) = v2;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_38D04@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_38E00(a1, &OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerStartTime, a2);
}

uint64_t sub_38D18()
{
  return swift_release();
}

uint64_t sub_38DEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_38E00(a1, &OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerEndTime, a2);
}

uint64_t sub_38E00@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_40514((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  sub_75540();
  uint64_t result = swift_release();
  Swift::String v7 = (uint64_t *)(v5 + *a2);
  uint64_t v8 = *v7;
  LOBYTE(v7) = *((unsigned char *)v7 + 8);
  *(void *)a3 = v8;
  *(unsigned char *)(a3 + 8) = (_BYTE)v7;
  return result;
}

uint64_t sub_38EC0()
{
  return swift_release();
}

uint64_t sub_38F94(uint64_t result, double a2)
{
  *(double *)(result + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__durationFromPlayerStartTimeToFirstWordTime) = a2;
  return result;
}

uint64_t sub_38FA4()
{
  swift_getKeyPath();
  sub_40514((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  sub_75540();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__isSelected);
}

uint64_t sub_3904C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_40514((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  sub_75540();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__isSelected);
  return result;
}

uint64_t sub_390FC()
{
  return swift_release();
}

void sub_391CC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__activeSearchRange);
  *(void *)(a1 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__activeSearchRange) = a2;
  id v3 = a2;
}

id sub_39208()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_98580);
  __chkstk_darwin(v2 - 8);
  Swift::UInt64 v4 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_756A0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[0] = [objc_allocWithZone((Class)NSMutableAttributedString) init];
  sub_C50C(v1 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_speaker, (uint64_t)v4, &qword_98580);
  Swift::String v9 = &selRef_bottomAnchor;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    Swift::String v10 = &_sSo8UIButtonC5UIKitE13ConfigurationV5imageSo7UIImageCSgvs_ptr;
    sub_CA50((uint64_t)v4, &qword_98580);
    id v11 = v28[0];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_99978);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_78AC0;
    if (qword_98008 != -1) {
      swift_once();
    }
    uint64_t v13 = (void *)qword_994E0;
    *(void *)(inited + 32) = qword_994E0;
    *(void *)(inited + 64) = &type metadata for TranscriptSelectionContentType;
    *(unsigned char *)(inited + 40) = 0;
    id v14 = v13;
    sub_67988(inited);
    v28[1] = (id)sub_75690();
    v28[2] = v15;
    swift_bridgeObjectRetain();
    v29._countAndFlagsBits = 10;
    v29._object = (void *)0xE100000000000000;
    sub_76970(v29);
    swift_bridgeObjectRelease();
    Swift::String v10 = &_sSo8UIButtonC5UIKitE13ConfigurationV5imageSo7UIImageCSgvs_ptr;
    id v16 = objc_allocWithZone((Class)NSAttributedString);
    NSString v17 = sub_768D0();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_40514(&qword_981B0, type metadata accessor for Key);
    Class isa = sub_76840().super.isa;
    swift_bridgeObjectRelease();
    id v19 = [v16 initWithString:v17 attributes:isa];

    Swift::String v9 = &selRef_bottomAnchor;
    id v11 = v28[0];
    [v28[0] appendAttributedString:v19];

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_99978);
  uint64_t v20 = swift_initStackObject();
  *(_OWORD *)(v20 + 16) = xmmword_78AC0;
  if (qword_98008 != -1) {
    swift_once();
  }
  uint64_t v21 = (void *)qword_994E0;
  *(void *)(v20 + 32) = qword_994E0;
  *(void *)(v20 + 64) = &type metadata for TranscriptSelectionContentType;
  *(unsigned char *)(v20 + 40) = 1;
  id v22 = v21;
  sub_67988(v20);
  id v23 = objc_allocWithZone((Class)v10[467]);
  swift_bridgeObjectRetain();
  NSString v24 = sub_768D0();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_40514(&qword_981B0, type metadata accessor for Key);
  Class v25 = sub_76840().super.isa;
  swift_bridgeObjectRelease();
  id v26 = [v23 initWithString:v24 attributes:v25];

  [v11 v9[54] v26];
  return v11;
}

void sub_396B0()
{
  swift_getKeyPath();
  sub_40514((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  sub_75540();
  swift_release();
  uint64_t v1 = *(char **)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__viewState);
  swift_getKeyPath();
  if (v1 == (unsigned char *)&def_1E2E4 + 1)
  {
    sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
    sub_75530();
    swift_release();
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_75530();
    swift_release();
  }
  else
  {
    sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
    uint64_t v3 = v1;
    sub_75530();
    swift_release();
    if (v1)
    {
      if (*(void *)(*(void *)&v3[OBJC_IVAR____TtC19PodcastsTranscripts15StringTextRange_endPosition]
                     + OBJC_IVAR____TtC19PodcastsTranscripts18StringTextPosition_position) >> 14 < *(void *)(*(void *)&v3[OBJC_IVAR____TtC19PodcastsTranscripts15StringTextRange_startPosition] + OBJC_IVAR____TtC19PodcastsTranscripts18StringTextPosition_position) >> 14)
        __break(1u);
    }
    uint64_t v4 = swift_getKeyPath();
    __chkstk_darwin(v4);
    sub_75530();
    swift_release();
    sub_97D8(v1);
  }
}

void *sub_39A24()
{
  swift_getKeyPath();
  sub_40514((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  sub_75540();
  swift_release();
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__viewState);
  sub_98C4(v1);
  return v1;
}

id sub_39AE4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_40514((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  sub_75540();
  swift_release();
  uint64_t v4 = *(void **)(v3 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__viewState);
  uint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__viewState + 8);
  *a2 = v4;
  a2[1] = v5;
  return sub_98C4(v4);
}

uint64_t sub_39B9C(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_98C4(v1);
  sub_40514((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  sub_75530();
  sub_97D8(v1);
  return swift_release();
}

void sub_39C8C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = (void *)(a1 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__viewState);
  uint64_t v5 = *(void **)(a1 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__viewState);
  *uint64_t v4 = a2;
  v4[1] = a3;
  sub_98C4(a2);
  sub_98C4(a2);
  sub_97D8(v5);
  sub_396B0();
  sub_97D8(a2);
}

uint64_t sub_39D14()
{
  uint64_t v20 = sub_76500();
  uint64_t v23 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  id v19 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_76520();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_76540();
  uint64_t v18 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  id v11 = (char *)&v18 - v10;
  swift_getKeyPath();
  uint64_t v24 = v0;
  char v25 = 1;
  aBlock[0] = v0;
  sub_40514((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  sub_75530();
  swift_release();
  sub_2A2EC();
  Swift::String v12 = (void *)sub_76CA0();
  sub_76530();
  sub_76570();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v8, v5);
  aBlock[4] = sub_40B0C;
  uint64_t v27 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_4CF00;
  aBlock[3] = &block_descriptor_4;
  id v14 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  sub_76510();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_40514(&qword_98570, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_99F30);
  sub_D034((unint64_t *)&qword_98578, (uint64_t *)&unk_99F30);
  uint64_t v15 = v19;
  uint64_t v16 = v20;
  sub_76FE0();
  sub_76C50();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v15, v16);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v22);
  return ((uint64_t (*)(char *, uint64_t))v13)(v11, v18);
}

uint64_t sub_3A164()
{
  return swift_release();
}

uint64_t TextContent.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_CA50(v0 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_speaker, &qword_98580);
  uint64_t v1 = v0 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_splitStyle;
  uint64_t v2 = sub_756D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();

  sub_97D8(*(id *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__viewState));
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent___observationRegistrar;
  uint64_t v4 = sub_75580();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return v0;
}

uint64_t TextContent.__deallocating_deinit()
{
  TextContent.deinit();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_3A3B4()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_referenceStartTime);
}

uint64_t sub_3A3CC()
{
  return *(void *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_referenceEndTime);
}

uint64_t sub_3A3E4(uint64_t a1, uint64_t a2)
{
  return sub_3A4E4(a1, a2, (uint64_t)&unk_7A820, &OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerStartTime);
}

uint64_t sub_3A3F8()
{
  return swift_release();
}

uint64_t sub_3A4D0(uint64_t a1, uint64_t a2)
{
  return sub_3A4E4(a1, a2, (uint64_t)&unk_7A848, &OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerEndTime);
}

uint64_t sub_3A4E4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_getKeyPath();
  sub_40514((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  sub_75540();
  swift_release();
  return *(void *)(v4 + *a4);
}

uint64_t sub_3A590()
{
  return swift_release();
}

uint64_t sub_3A668(void *a1)
{
  return swift_release();
}

uint64_t sub_3A750@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 24);
  *(void *)a1 = *(void *)(*v1 + 16);
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v2 + 32);
  return swift_bridgeObjectRetain();
}

uint64_t sub_3A768@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__attributedContent;
  swift_beginAccess();
  uint64_t v4 = sub_75020();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_3A864@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__attributedContent;
  swift_beginAccess();
  uint64_t v5 = sub_75020();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_3A960(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_75020();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  uint64_t v9 = *a2;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75530();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_3AAE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__attributedContent;
  swift_beginAccess();
  uint64_t v4 = sub_75020();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(v3, a2, v4);
  return swift_endAccess();
}

uint64_t sub_3AB84()
{
  swift_getKeyPath();
  sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__isBeingDisplayed);
}

uint64_t sub_3AC2C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__isBeingDisplayed);
  return result;
}

uint64_t sub_3ACDC()
{
  return swift_release();
}

uint64_t sub_3ADAC(uint64_t a1, char a2)
{
  uint64_t v3 = OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__isBeingDisplayed;
  *(unsigned char *)(a1 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__isBeingDisplayed) = a2;
  swift_getKeyPath();
  sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  uint64_t result = swift_release();
  if (*(unsigned char *)(a1 + v3) == 1)
  {
    swift_getKeyPath();
    sub_75540();
    uint64_t result = swift_release();
    if (*(unsigned char *)(a1 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__dirtyString) == 1) {
      return sub_3C41C();
    }
  }
  return result;
}

uint64_t sub_3AEBC(unint64_t a1, unint64_t a2)
{
  swift_getKeyPath();
  sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  swift_release();
  swift_getKeyPath();
  sub_75560();
  swift_release();
  swift_beginAccess();
  LOBYTE(a2) = sub_3F1CC(&v5, a1, a2);
  swift_endAccess();
  swift_getKeyPath();
  sub_75550();
  uint64_t result = swift_release();
  if (a2) {
    return sub_3C41C();
  }
  return result;
}

uint64_t sub_3B018(unint64_t a1, unint64_t a2)
{
  swift_getKeyPath();
  sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  swift_release();
  swift_getKeyPath();
  sub_75560();
  swift_release();
  swift_beginAccess();
  sub_3FBB4(a1, a2);
  LOBYTE(a2) = v4;
  swift_endAccess();
  swift_getKeyPath();
  sub_75550();
  uint64_t result = swift_release();
  if ((a2 & 1) == 0) {
    return sub_3C41C();
  }
  return result;
}

uint64_t sub_3B170(unint64_t a1, unint64_t a2, char a3)
{
  swift_getKeyPath();
  sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  uint64_t result = swift_release();
  uint64_t v8 = v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeSearchRange;
  if (*(unsigned char *)(v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeSearchRange + 16))
  {
    if (a3) {
      return result;
    }
    goto LABEL_7;
  }
  if ((a3 & 1) != 0 || (*(void *)v8 ^ a1) >> 14 || (*(void *)(v8 + 8) ^ a2) >= 0x4000)
  {
LABEL_7:
    sub_3C41C();
    swift_getKeyPath();
    sub_75540();
    uint64_t result = swift_release();
    if (*(unsigned char *)(v8 + 16) == 1)
    {
      swift_retain();
      sub_75BD0();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_3B2E8()
{
  return sub_3B46C((uint64_t)&unk_7AB70, &OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeSearchRange);
}

uint64_t sub_3B2FC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4 = a1 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeSearchRange;
  unint64_t v5 = *(void *)(a1 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeSearchRange);
  unint64_t v6 = *(void *)(v4 + 8);
  char v7 = *(unsigned char *)(v4 + 16);
  *(void *)uint64_t v4 = a2;
  *(void *)(v4 + 8) = a3;
  *(unsigned char *)(v4 + 16) = a4 & 1;
  return sub_3B170(v5, v6, v7);
}

uint64_t sub_3B350(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeReadRange;
  unint64_t v6 = *(void *)(v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeReadRange);
  unint64_t v5 = *(void *)(v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeReadRange + 8);
  int v7 = *(unsigned __int8 *)(v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeReadRange + 16);
  *(void *)uint64_t v4 = a1;
  *(void *)(v4 + 8) = a2;
  *(unsigned char *)(v4 + 16) = a3 & 1;
  swift_getKeyPath();
  sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  uint64_t result = swift_release();
  if (*(unsigned char *)(v4 + 16))
  {
    if (v7) {
      return result;
    }
    return sub_3C41C();
  }
  if ((v7 & 1) != 0 || (*(void *)v4 ^ v6) >> 14 || (*(void *)(v4 + 8) ^ v5) >= 0x4000) {
    return sub_3C41C();
  }
  return result;
}

uint64_t sub_3B458()
{
  return sub_3B46C((uint64_t)&unk_7AB48, &OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeReadRange);
}

uint64_t sub_3B46C(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  swift_release();
  return *(void *)(v2 + *a2);
}

__n128 sub_3B514@<Q0>(uint64_t *a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  swift_release();
  unsigned __int8 v4 = *(unsigned char *)(v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeReadRange + 16);
  __n128 result = *(__n128 *)(v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeReadRange);
  *a2 = result;
  a2[1].n128_u8[0] = v4;
  return result;
}

uint64_t sub_3B5D0()
{
  return swift_release();
}

uint64_t sub_3B6B0()
{
  return sub_3B6C4((uint64_t)&unk_7AB20, &OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__isActive);
}

uint64_t sub_3B6C4(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  swift_release();
  return *(unsigned __int8 *)(v2 + *a2);
}

uint64_t sub_3B764@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_3B778(a1, &OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__isActive, a2);
}

uint64_t sub_3B778@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, unsigned char *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  uint64_t result = swift_release();
  *a3 = *(unsigned char *)(v5 + *a2);
  return result;
}

uint64_t sub_3B82C()
{
  return swift_release();
}

uint64_t sub_3B8FC(uint64_t a1, char a2)
{
  uint64_t v3 = OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__isActive;
  int v4 = *(unsigned __int8 *)(a1 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__isActive);
  *(unsigned char *)(a1 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__isActive) = a2;
  swift_getKeyPath();
  sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  uint64_t result = swift_release();
  if (v4 != *(unsigned __int8 *)(a1 + v3)) {
    return sub_3C41C();
  }
  return result;
}

uint64_t sub_3B9CC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v31 = a1;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_98770);
  uint64_t v5 = *(void *)(v34 - 8);
  __chkstk_darwin(v34);
  int v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_98780);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_75080();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = sub_75020();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__isBeingDisplayed) = 0;
  uint64_t v16 = v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeSearchRange;
  *(void *)uint64_t v16 = 0;
  *(void *)(v16 + 8) = 0;
  *(unsigned char *)(v16 + 16) = 1;
  uint64_t v17 = v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeReadRange;
  *(void *)uint64_t v17 = 0;
  *(void *)(v17 + 8) = 0;
  *(unsigned char *)(v17 + 16) = 1;
  *(unsigned char *)(v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__isActive) = 0;
  uint64_t v18 = OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText_activeSearchResultFrame;
  long long v37 = 0u;
  long long v38 = 0u;
  char v39 = 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A590);
  swift_allocObject();
  *(void *)(v3 + v18) = sub_75BE0();
  *(void *)(v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__searchRanges) = &_swiftEmptySetSingleton;
  *(unsigned char *)(v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__dirtyString) = 0;
  sub_75570();
  uint64_t v19 = v32;
  *(void *)(v3 + 16) = v31;
  *(void *)(v3 + 24) = v19;
  swift_bridgeObjectRetain();
  sub_75070();
  sub_75030();
  uint64_t v29 = v13;
  uint64_t v30 = v12;
  (*(void (**)(uint64_t, char *, uint64_t))(v13 + 16))(v3 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__attributedContent, v15, v12);
  uint64_t v28 = v15;
  unint64_t v36 = v15;
  uint64_t v20 = sub_3839C((void (*)(void))sub_40B34, (uint64_t)v35, v33);
  swift_bridgeObjectRelease();
  uint64_t v33 = v4;
  *(void *)(v4 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText_descriptorRanges) = v20;
  uint64_t v31 = v20;
  uint64_t v21 = v20[2];
  if (v21)
  {
    uint64_t v22 = (uint64_t)v31 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v32 = *(void *)(v5 + 72);
    uint64_t v23 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain_n();
    uint64_t v24 = v34;
    while (1)
    {
      sub_C50C(v22, (uint64_t)v10, &qword_98770);
      char v25 = *v23;
      (*v23)(v10, 0, 1, v24);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v24) == 1) {
        break;
      }
      sub_C570((uint64_t)v10, (uint64_t)v7, &qword_98770);
      sub_3DDF4((uint64_t)v7, v33);
      sub_CA50((uint64_t)v7, &qword_98770);
      v22 += v32;
      if (!--v21) {
        goto LABEL_7;
      }
    }
  }
  else
  {
    char v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
    swift_bridgeObjectRetain_n();
LABEL_7:
    v25(v10, 1, 1, v34);
  }
  swift_bridgeObjectRelease_n();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v28, v30);
  return v33;
}

uint64_t sub_3BE2C@<X0>(uint64_t a1@<X0>, char *a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v50 = a2;
  uint64_t v53 = a3;
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_999A0);
  uint64_t v4 = __chkstk_darwin(v48);
  uint64_t v46 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v44 = (char *)&v42 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_98770);
  uint64_t v51 = *(void *)(v7 - 8);
  uint64_t v52 = v7;
  __chkstk_darwin(v7);
  uint64_t v45 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_75020();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_999A8);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v42 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v42 - v17;
  uint64_t v19 = sub_74FF0();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v47 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v55 = (char *)&v42 - v23;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v49 = a1;
  v24(v12, a1, v9);
  sub_40514(&qword_999B0, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  sub_75000();
  uint64_t v54 = v20;
  char v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v25(v18, 1, v19) == 1)
  {
    uint64_t v16 = v18;
LABEL_5:
    sub_CA50((uint64_t)v16, &qword_999A8);
    uint64_t v26 = 1;
    uint64_t v28 = v52;
    uint64_t v27 = v53;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v27, v26, 1, v28);
  }
  uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
  v43(v55, v18, v19);
  v24(v12, v49, v9);
  sub_75000();
  if (v25(v16, 1, v19) == 1)
  {
    (*(void (**)(char *, uint64_t))(v54 + 8))(v55, v19);
    goto LABEL_5;
  }
  uint64_t v29 = v54;
  uint64_t v30 = v47;
  v43(v47, v16, v19);
  sub_40514(&qword_999B8, (void (*)(uint64_t))&type metadata accessor for AttributedString.Index);
  uint64_t result = sub_76890();
  if (result)
  {
    uint64_t v32 = v48;
    uint64_t v33 = v43;
    uint64_t v34 = v44;
    unint64_t v35 = &v44[*(int *)(v48 + 48)];
    v43(v44, v55, v19);
    uint64_t v50 = v35;
    v33(v35, v30, v19);
    unint64_t v36 = v46;
    long long v37 = &v46[*(int *)(v32 + 48)];
    long long v38 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
    v38(v46, v34, v19);
    v38(v37, v35, v19);
    uint64_t v39 = (uint64_t)v45;
    v33(v45, v36, v19);
    BOOL v40 = *(void (**)(char *, uint64_t))(v29 + 8);
    v40(v37, v19);
    uint64_t v41 = &v36[*(int *)(v48 + 48)];
    v33(v36, v34, v19);
    v33(v41, v50, v19);
    uint64_t v28 = v52;
    v33((char *)(v39 + *(int *)(v52 + 36)), v41, v19);
    v40(v36, v19);
    uint64_t v27 = v53;
    sub_C570(v39, v53, &qword_98770);
    uint64_t v26 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 56))(v27, v26, 1, v28);
  }
  __break(1u);
  return result;
}

uint64_t sub_3C41C()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_98780);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v100 = (char *)v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v85 = (uint64_t)v83 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v88 = (char *)v83 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v98 = (uint64_t)v83 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v83 - v11;
  uint64_t v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_98770);
  uint64_t v91 = *(void *)(v102 - 8);
  uint64_t v13 = __chkstk_darwin(v102);
  uint64_t v96 = (uint64_t)v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v86 = (uint64_t)v83 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v97 = (uint64_t (*)(void, void))((char *)v83 - v18);
  __chkstk_darwin(v17);
  uint64_t v101 = (char *)v83 - v19;
  uint64_t v20 = sub_75080();
  __chkstk_darwin(v20 - 8);
  uint64_t v21 = sub_75020();
  uint64_t v93 = *(void *)(v21 - 8);
  uint64_t v22 = __chkstk_darwin(v21);
  uint64_t v90 = (char *)v83 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  char v25 = (char *)v83 - v24;
  swift_getKeyPath();
  uint64_t v26 = v0 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText___observationRegistrar;
  v103[0] = v0;
  uint64_t v27 = sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  swift_release();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__isBeingDisplayed))
  {
    swift_bridgeObjectRetain();
    sub_75070();
    sub_75030();
    swift_getKeyPath();
    v103[0] = v0;
    uint64_t v92 = v27;
    uint64_t v28 = v26;
    sub_75540();
    swift_release();
    uint64_t v29 = v91;
    if ((*(unsigned char *)(v1 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeReadRange + 16) & 1) == 0)
    {
      uint64_t v30 = v28;
      uint64_t v31 = *(char **)(v1 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeReadRange + 8);
      uint64_t v32 = (uint64_t)v12;
      uint64_t v33 = v21;
      uint64_t v34 = v93;
      uint64_t v35 = (uint64_t)v90;
      (*(void (**)(char *, char *, uint64_t))(v93 + 16))(v90, v25, v33);
      sub_3BE2C(v35, v31, v32);
      uint64_t v36 = v34;
      uint64_t v21 = v33;
      (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v35, v33);
      uint64_t v37 = v102;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48))(v32, 1, v102) == 1)
      {
        long long v38 = &qword_98780;
        uint64_t v39 = v32;
      }
      else
      {
        uint64_t v42 = (uint64_t)v101;
        sub_C570(v32, (uint64_t)v101, &qword_98770);
        uint64_t v43 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v98;
        sub_C50C(v42, v98, &qword_98770);
        (*(void (**)(void, void, uint64_t, uint64_t))(v29 + 56))(v43, 0, 1, v37);
        sub_3D18C(v43, (void (*)(uint64_t))sub_14ABC, (uint64_t)&type metadata for TranscriptTextContentRenderer.Read);
        sub_CA50((uint64_t)v43, &qword_98780);
        uint64_t v39 = v42;
        long long v38 = &qword_98770;
      }
      sub_CA50(v39, v38);
      uint64_t v28 = v30;
    }
    swift_getKeyPath();
    v103[0] = v1;
    sub_75540();
    swift_release();
    swift_beginAccess();
    uint64_t v44 = swift_bridgeObjectRetain();
    uint64_t v101 = v25;
    uint64_t v45 = sub_37920(v44, (uint64_t)v25);
    uint64_t v84 = 0;
    swift_bridgeObjectRelease();
    uint64_t v46 = *(void *)(v45 + 16);
    uint64_t v99 = v1;
    uint64_t v87 = v21;
    uint64_t v89 = v28;
    if (v46)
    {
      uint64_t v47 = v45 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
      uint64_t v48 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
      uint64_t v94 = *(void *)(v29 + 72);
      uint64_t v95 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
      v83[2] = v45;
      swift_bridgeObjectRetain();
      v83[1] = (v29 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      uint64_t v49 = v102;
      uint64_t v50 = (uint64_t)v88;
      uint64_t v52 = v97;
      uint64_t v51 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v98;
      while (1)
      {
        sub_C50C(v47, v50, &qword_98770);
        uint64_t v53 = *v48;
        (*v48)((char *)v50, 0, 1, v49);
        if ((*v95)(v50, 1, v49) == 1) {
          break;
        }
        sub_C570(v50, (uint64_t)v52, &qword_98770);
        sub_C50C((uint64_t)v52, (uint64_t)v51, &qword_98770);
        v53((char *)v51, 0, 1, v49);
        sub_3D18C(v51, (void (*)(uint64_t))sub_14924, (uint64_t)&type metadata for TranscriptTextContentRenderer.SecondaryHighlight);
        uint64_t v49 = v102;
        sub_CA50((uint64_t)v51, &qword_98780);
        sub_CA50((uint64_t)v52, &qword_98770);
        v47 += v94;
        if (!--v46)
        {
          uint64_t v1 = v99;
          uint64_t v21 = v87;
          uint64_t v54 = v53;
          v53(v88, 1, 1, v49);
          goto LABEL_15;
        }
      }
      uint64_t v1 = v99;
      uint64_t v21 = v87;
      uint64_t v54 = v53;
    }
    else
    {
      uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
      swift_bridgeObjectRetain();
      v54(v88, 1, 1, v102);
    }
LABEL_15:
    swift_bridgeObjectRelease_n();
    swift_getKeyPath();
    v103[0] = v1;
    sub_75540();
    swift_release();
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeSearchRange + 16) == 1)
    {
      uint64_t v55 = v93;
      uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
      uint64_t v57 = (uint64_t)v101;
    }
    else
    {
      unint64_t v58 = *(char **)(v1 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeSearchRange + 8);
      uint64_t v59 = v93;
      uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v93 + 16);
      uint64_t v60 = (uint64_t)v90;
      v56(v90, v101, v21);
      uint64_t v61 = v85;
      sub_3BE2C(v60, v58, v85);
      (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v60, v21);
      uint64_t v62 = v102;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v61, 1, v102) == 1)
      {
        sub_CA50(v61, &qword_98780);
        uint64_t v55 = v93;
        uint64_t v57 = (uint64_t)v101;
      }
      else
      {
        uint64_t v63 = v86;
        sub_C570(v61, v86, &qword_98770);
        uint64_t v64 = (void (**)(char *, uint64_t, uint64_t, uint64_t))v98;
        sub_C50C(v63, v98, &qword_98770);
        v54((char *)v64, 0, 1, v62);
        sub_3D18C(v64, (void (*)(uint64_t))sub_148D0, (uint64_t)&type metadata for TranscriptTextContentRenderer.PrimaryHighlight);
        sub_CA50((uint64_t)v64, &qword_98780);
        uint64_t v65 = v97;
        sub_C50C(v63, (uint64_t)v97, &qword_98770);
        uint64_t KeyPath = swift_getKeyPath();
        v83[-2] = __chkstk_darwin(KeyPath);
        swift_getKeyPath();
        v103[4] = sub_76320();
        sub_D034((unint64_t *)&qword_98790, &qword_98770);
        uint64_t v67 = (uint64_t)v101;
        uint64_t v68 = (void (*)(void *, void))sub_75040();
        sub_40F14();
        sub_75090();
        v68(v103, 0);
        sub_CA50((uint64_t)v65, &qword_98770);
        sub_CA50(v86, &qword_98770);
        uint64_t v55 = v93;
        uint64_t v57 = v67;
      }
    }
    uint64_t v69 = v90;
    v56(v90, (char *)v57, v21);
    uint64_t v70 = swift_getKeyPath();
    __chkstk_darwin(v70);
    v83[-2] = v1;
    v83[-1] = v69;
    v103[0] = v1;
    uint64_t v71 = v84;
    sub_75530();
    swift_release();
    char v72 = *(void (**)(void, void))(v55 + 8);
    uint64_t v93 = v55 + 8;
    uint64_t v97 = (uint64_t (*)(void, void))v72;
    v72(v69, v21);
    uint64_t v98 = *(void *)(v1 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText_descriptorRanges);
    uint64_t v73 = *(void *)(v98 + 16);
    if (v73)
    {
      uint64_t v74 = v98 + ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80));
      uint64_t v75 = *(void *)(v91 + 72);
      uint64_t v76 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v91 + 48);
      swift_bridgeObjectRetain_n();
      uint64_t v77 = v102;
      while (1)
      {
        uint64_t v78 = (uint64_t)v100;
        sub_C50C(v74, (uint64_t)v100, &qword_98770);
        v54((char *)v78, 0, 1, v77);
        if ((*v76)(v78, 1, v77) == 1) {
          break;
        }
        uint64_t v79 = v78;
        uint64_t v80 = v96;
        sub_C570(v79, v96, &qword_98770);
        sub_3DDF4(v80, v99);
        sub_CA50(v80, &qword_98770);
        if (v71)
        {
          uint64_t result = swift_bridgeObjectRelease();
          __break(1u);
          return result;
        }
        v74 += v75;
        if (!--v73) {
          goto LABEL_27;
        }
      }
    }
    else
    {
      swift_bridgeObjectRetain_n();
LABEL_27:
      v54(v100, 1, 1, v102);
    }
    swift_bridgeObjectRelease_n();
    uint64_t v81 = swift_getKeyPath();
    __chkstk_darwin(v81);
    uint64_t v82 = v99;
    v83[-2] = v99;
    LOBYTE(v83[-1]) = 0;
    v103[0] = v82;
    sub_75530();
    swift_release();
    return v97(v101, v87);
  }
  else
  {
    uint64_t v40 = swift_getKeyPath();
    __chkstk_darwin(v40);
    v83[-2] = v0;
    LOBYTE(v83[-1]) = 1;
    v103[0] = v0;
    sub_75530();
    return swift_release();
  }
}

uint64_t sub_3D18C(void (**a1)(char *, uint64_t, uint64_t, uint64_t), void (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v102 = a2;
  uint64_t v103 = a3;
  uint64_t v97 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_999E0);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v101 = (char *)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v100 = (char *)&v74 - v6;
  uint64_t v98 = sub_761B0();
  uint64_t v78 = *(void (***)(char *, uint64_t))(v98 - 8);
  __chkstk_darwin(v98);
  uint64_t v99 = (char *)&v74 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_74FC0();
  uint64_t v77 = *(void (***)(char *, uint64_t))(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v9 = (char *)&v74 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_999E8);
  __chkstk_darwin(v10 - 8);
  uint64_t v110 = (char *)&v74 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_74FD0();
  uint64_t v111 = *(void *)(v104 - 8);
  uint64_t v12 = __chkstk_darwin(v104);
  uint64_t v108 = (char *)&v74 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v107 = (char *)&v74 - v14;
  uint64_t v106 = sub_74FE0();
  uint64_t v15 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v17 = (char *)&v74 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = (void (**)(char *, uint64_t))sub_750B0();
  uint64_t v94 = (uint64_t)*(v95 - 1);
  __chkstk_darwin(v95);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_999F0);
  uint64_t v20 = __chkstk_darwin(v96);
  uint64_t v22 = (char *)&v74 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v105 = (uint64_t)&v74 - v23;
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_98780);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)&v74 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_98770);
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)&v74 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)&v74 - v32;
  uint64_t v35 = v34;
  sub_C50C((uint64_t)v97, (uint64_t)v26, &qword_98780);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v35) == 1)
  {
    uint64_t v36 = &qword_98780;
    uint64_t v37 = (uint64_t)v26;
  }
  else
  {
    uint64_t v86 = v31;
    sub_C570((uint64_t)v26, (uint64_t)v33, &qword_98770);
    uint64_t v38 = sub_D034((unint64_t *)&qword_98790, &qword_98770);
    uint64_t v74 = v33;
    uint64_t v87 = v35;
    uint64_t v85 = v38;
    sub_75050();
    sub_750A0();
    (*(void (**)(char *, void))(v94 + 8))(v19, v95);
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v40 = v106;
    uint64_t v92 = v15 + 16;
    uint64_t v91 = v39;
    v39(v22, (uint64_t)v17, v106);
    uint64_t v41 = sub_40514(&qword_999F8, (void (*)(uint64_t))&type metadata accessor for AttributedString.Runs);
    uint64_t v76 = v9;
    uint64_t v42 = v41;
    uint64_t v43 = v107;
    sub_76B00();
    uint64_t v44 = *(void (**)(char *, uint64_t))(v15 + 8);
    uint64_t v93 = v17;
    uint64_t v94 = v15 + 8;
    uint64_t v90 = v44;
    v44(v17, v40);
    uint64_t v45 = v96;
    uint64_t v46 = v111;
    uint64_t v47 = v104;
    (*(void (**)(char *, char *, uint64_t))(v111 + 32))(&v22[*(int *)(v96 + 36)], v43, v104);
    uint64_t v48 = v105;
    sub_C570((uint64_t)v22, v105, &qword_999F0);
    uint64_t v49 = v48 + *(int *)(v45 + 36);
    uint64_t v50 = *(void (**)(char *, uint64_t, uint64_t))(v46 + 16);
    v46 += 16;
    uint64_t v96 = (uint64_t)v50;
    uint64_t v95 = (void (**)(char *, uint64_t))(v46 - 8);
    uint64_t v89 = (void (**)(char *))(v77 + 2);
    uint64_t v97 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 7);
    uint64_t v88 = (unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 6);
    uint64_t v82 = (void (**)(char *, char *, uint64_t))(v77 + 4);
    uint64_t v81 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 6);
    uint64_t v75 = (uint64_t (**)(char *, uint64_t, uint64_t))(v78 + 4);
    uint64_t v80 = (void (**)(char *, char *, uint64_t))(v78 + 2);
    uint64_t v79 = (void (**)(char *, void, uint64_t, uint64_t))(v78 + 7);
    ++v78;
    ++v77;
    uint64_t v51 = v47;
    uint64_t v52 = v46;
    uint64_t v53 = v108;
    uint64_t v54 = v40;
    uint64_t v111 = v52;
    uint64_t v84 = v42;
    uint64_t v83 = v49;
    v50(v43, v49, v51);
    while (1)
    {
      uint64_t v61 = v53;
      sub_76B20();
      sub_40514(&qword_99A00, (void (*)(uint64_t))&type metadata accessor for AttributedString.Runs.Index);
      char v62 = sub_768A0();
      uint64_t v63 = *v95;
      (*v95)(v61, v51);
      v63(v43, v51);
      if (v62) {
        break;
      }
      uint64_t v64 = (void (*)(char *, void))sub_76B40();
      uint64_t v66 = v109;
      uint64_t v65 = v110;
      (*v89)(v110);
      v64(v112, 0);
      uint64_t v67 = v93;
      v91(v93, v48, v54);
      sub_76B30();
      v90(v67, v54);
      (*v97)(v65, 0, 1, v66);
      if ((*v88)(v65, 1, v66) == 1) {
        goto LABEL_11;
      }
      uint64_t v68 = v76;
      uint64_t v69 = v66;
      (*v82)(v76, v65, v66);
      uint64_t KeyPath = swift_getKeyPath();
      *(&v74 - 2) = (char *)__chkstk_darwin(KeyPath);
      swift_getKeyPath();
      sub_40FEC();
      uint64_t v71 = (uint64_t)v100;
      sub_74FA0();
      swift_release();
      uint64_t v72 = v98;
      if ((*v81)(v71, 1, v98) == 1)
      {
        uint64_t v55 = v99;
        sub_761A0();
        uint64_t v56 = sub_CA50(v71, &qword_999E0);
      }
      else
      {
        uint64_t v55 = v99;
        uint64_t v56 = (*v75)(v99, v71, v72);
      }
      uint64_t v57 = (uint64_t)v86;
      v102(v56);
      sub_76190();
      sub_74FB0();
      uint64_t v58 = swift_getKeyPath();
      *(&v74 - 2) = (char *)__chkstk_darwin(v58);
      swift_getKeyPath();
      uint64_t v59 = v101;
      (*v80)(v101, v55, v72);
      (*v79)(v59, 0, 1, v72);
      uint64_t v60 = (void (*)(char *, void))sub_75040();
      sub_75090();
      v60(v112, 0);
      sub_CA50(v57, &qword_98770);
      (*v78)(v55, v72);
      (*v77)(v68, v69);
      uint64_t v51 = v104;
      uint64_t v48 = v105;
      uint64_t v43 = v107;
      uint64_t v53 = v108;
      uint64_t v54 = v106;
      ((void (*)(char *, uint64_t, uint64_t))v96)(v107, v83, v104);
    }
    (*v97)(v110, 1, 1, v109);
LABEL_11:
    sub_CA50(v48, &qword_999F0);
    uint64_t v36 = &qword_98770;
    uint64_t v37 = (uint64_t)v74;
  }
  return sub_CA50(v37, v36);
}

uint64_t sub_3DDF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_98770);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = a1;
  sub_C50C(a1, (uint64_t)v6, &qword_98770);
  uint64_t KeyPath = swift_getKeyPath();
  v14[1] = swift_getKeyPath();
  if (qword_97FC0 != -1) {
    swift_once();
  }
  uint64_t v18 = qword_9F0F8;
  swift_getKeyPath();
  v17[0] = a2;
  sub_40514(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  swift_retain();
  sub_75540();
  swift_release();
  v17[0] = a2;
  swift_getKeyPath();
  sub_75560();
  swift_release();
  swift_beginAccess();
  v14[3] = sub_D034((unint64_t *)&qword_98790, &qword_98770);
  uint64_t v7 = sub_75040();
  v14[2] = v4;
  uint64_t v8 = (void (*)(void *, void))v7;
  sub_16164();
  sub_75090();
  v8(v17, 0);
  sub_CA50((uint64_t)v6, &qword_98770);
  swift_endAccess();
  v17[0] = a2;
  swift_getKeyPath();
  sub_75550();
  swift_release();
  sub_C50C(v15, (uint64_t)v6, &qword_98770);
  uint64_t v9 = swift_getKeyPath();
  v14[-2] = __chkstk_darwin(v9);
  swift_getKeyPath();
  if (qword_97FD0 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_9F108;
  uint64_t v18 = qword_9F108;
  swift_getKeyPath();
  v17[0] = a2;
  id v11 = v10;
  sub_75540();
  swift_release();
  v17[0] = a2;
  swift_getKeyPath();
  sub_75560();
  swift_release();
  swift_beginAccess();
  uint64_t v12 = (void (*)(void *, void))sub_75040();
  sub_16254();
  sub_75090();
  v12(v17, 0);
  sub_CA50((uint64_t)v6, &qword_98770);
  swift_endAccess();
  v17[0] = a2;
  swift_getKeyPath();
  sub_75550();
  return swift_release();
}

uint64_t sub_3E230()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_3E2F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__searchRanges);
  swift_beginAccess();
  void *v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_3E364()
{
  return sub_3B6C4((uint64_t)&unk_7AAF8, &OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__dirtyString);
}

uint64_t sub_3E378()
{
  return swift_release();
}

uint64_t sub_3E448()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__attributedContent;
  uint64_t v2 = sub_75020();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText___observationRegistrar;
  uint64_t v4 = sub_75580();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v6 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v5, v6);
}

uint64_t TextContent.description.getter()
{
  sub_77060(104);
  v6._object = (void *)0x800000000007ED70;
  v6._countAndFlagsBits = 0xD000000000000014;
  sub_76970(v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_99510);
  v7._countAndFlagsBits = sub_76920();
  sub_76970(v7);
  swift_bridgeObjectRelease();
  v8._object = (void *)0x800000000007ED90;
  v8._countAndFlagsBits = 0xD000000000000014;
  sub_76970(v8);
  v9._countAndFlagsBits = sub_76920();
  sub_76970(v9);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = 0xD000000000000013;
  v10._object = (void *)0x800000000007EDB0;
  sub_76970(v10);
  swift_getKeyPath();
  sub_40514((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  sub_75540();
  swift_release();
  v11._countAndFlagsBits = sub_76920();
  sub_76970(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 0xD000000000000011;
  v12._object = (void *)0x800000000007EDD0;
  sub_76970(v12);
  swift_getKeyPath();
  sub_75540();
  swift_release();
  v13._countAndFlagsBits = sub_76920();
  sub_76970(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0x6E65746E6F43202CLL;
  v14._object = (void *)0xEB00000000203A74;
  sub_76970(v14);
  uint64_t v2 = *(void *)(v0 + 48);
  unint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  sub_40294(20, v2, v1, v3);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = sub_76930();
  sub_76970(v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0x202E2E2E20;
  v16._object = (void *)0xE500000000000000;
  sub_76970(v16);
  swift_bridgeObjectRetain();
  sub_40330(0x14uLL, v2, v1, v4);
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = sub_76930();
  sub_76970(v17);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_3E8E8()
{
  return TextContent.description.getter();
}

uint64_t sub_3E90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  return sub_768A0() & 1;
}

char *sub_3E964(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_99A20);
      Swift::String v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      Swift::String v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      Swift::String v10 = (char *)&_swiftEmptyArrayStorage;
      Swift::String v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_3FF40(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_3EA74(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_99980);
      Swift::String v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      Swift::String v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      Swift::String v10 = (char *)&_swiftEmptyArrayStorage;
      Swift::String v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_4004C(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_3EB84(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    Swift::String v13 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_99998);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_98770) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  Swift::String v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_77150();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_98770) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_40138(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

uint64_t sub_3EDF4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_3EF4C(a1, a2, a3, a4, &qword_999C0, (uint64_t (*)(void))&type metadata accessor for TranscriptModel.Word, (uint64_t (*)(void))&type metadata accessor for TranscriptModel.Word);
}

char *sub_3EE18(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_999D0);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 5);
      Swift::String v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      Swift::String v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[32 * v8 + 32]) {
          memmove(v13, a4 + 32, 32 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_40C90(0, v8, v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_3EF28(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_3EF4C(a1, a2, a3, a4, &qword_999C8, (uint64_t (*)(void))&type metadata accessor for QueueModel.Chapter, (uint64_t (*)(void))&type metadata accessor for QueueModel.Chapter);
}

uint64_t sub_3EF4C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_77150();
    __break(1u);
    return result;
  }
  v18[2] = v13;
  unint64_t v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_40D7C(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_3F1CC(_OWORD *a1, unint64_t a2, unint64_t a3)
{
  uint64_t v7 = *v3;
  sub_772D0();
  sub_77310(a2 >> 14);
  sub_77310(a3 >> 14);
  Swift::Int v8 = sub_77320();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      uint64_t v12 = (unint64_t *)(*(void *)(v7 + 48) + 16 * v10);
      unint64_t v13 = *v12;
      unint64_t v14 = v12[1] >> 14;
      if (a2 >> 14 == v13 >> 14 && v14 == a3 >> 14) {
        break;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_8;
      }
    }
    uint64_t result = 0;
    long long v17 = *(_OWORD *)(*(void *)(*v3 + 48) + 16 * v10);
  }
  else
  {
LABEL_8:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v3;
    uint64_t *v3 = 0x8000000000000000;
    sub_3F5FC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
    uint64_t *v3 = v19;
    swift_bridgeObjectRelease();
    *(void *)&long long v17 = a2;
    *((void *)&v17 + 1) = a3;
    uint64_t result = 1;
  }
  *a1 = v17;
  return result;
}

uint64_t sub_3F320()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_99968);
  uint64_t result = sub_77040();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v9) {
          goto LABEL_33;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v16 = v29[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v29 = -1 << v28;
                }
                unint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v29[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      unint64_t v18 = (unint64_t *)(*(void *)(v2 + 48) + 16 * v14);
      unint64_t v20 = *v18;
      unint64_t v19 = v18[1];
      sub_772D0();
      sub_77310(v20 >> 14);
      sub_77310(v19 >> 14);
      uint64_t result = sub_77320();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = (unint64_t *)(*(void *)(v4 + 48) + 16 * v11);
      *uint64_t v12 = v20;
      v12[1] = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *unint64_t v1 = v4;
  return result;
}

Swift::Int sub_3F5FC(Swift::Int result, unint64_t a2, unint64_t a3, char a4)
{
  unint64_t v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0) {
    goto LABEL_15;
  }
  if (a4)
  {
    sub_3F320();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (Swift::Int)sub_3F774();
      goto LABEL_15;
    }
    sub_3F90C();
  }
  uint64_t v10 = *v4;
  sub_772D0();
  sub_77310(v7 >> 14);
  sub_77310(a2 >> 14);
  uint64_t result = sub_77320();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a3 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v12 = ~v11;
    do
    {
      unint64_t v13 = (unint64_t *)(*(void *)(v10 + 48) + 16 * a3);
      unint64_t v14 = *v13;
      unint64_t v15 = v13[1] >> 14;
      if (v7 >> 14 == v14 >> 14 && v15 == a2 >> 14) {
        goto LABEL_18;
      }
      a3 = (a3 + 1) & v12;
    }
    while (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_15:
  uint64_t v17 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  unint64_t v18 = (unint64_t *)(*(void *)(v17 + 48) + 16 * a3);
  *unint64_t v18 = v7;
  v18[1] = a2;
  uint64_t v19 = *(void *)(v17 + 16);
  BOOL v20 = __OFADD__(v19, 1);
  uint64_t v21 = v19 + 1;
  if (!v20)
  {
    *(void *)(v17 + 16) = v21;
    return result;
  }
  __break(1u);
LABEL_18:
  __swift_instantiateConcreteTypeFromMangledName(&qword_99970);
  uint64_t result = sub_77250();
  __break(1u);
  return result;
}

void *sub_3F774()
{
  unint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_99968);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_77030();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *unint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(_OWORD *)(*(void *)(v4 + 48) + 16 * v15) = *(_OWORD *)(*(void *)(v2 + 48) + 16 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_3F90C()
{
  unint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_99968);
  uint64_t result = sub_77040();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *unint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    int64_t v18 = (unint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    unint64_t v19 = *v18;
    unint64_t v20 = v18[1];
    sub_772D0();
    sub_77310(v19 >> 14);
    sub_77310(v20 >> 14);
    uint64_t result = sub_77320();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    unint64_t v12 = (unint64_t *)(*(void *)(v4 + 48) + 16 * v11);
    *unint64_t v12 = v19;
    v12[1] = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_33:
    uint64_t result = swift_release();
    unint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_3FBB4(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v3;
  sub_772D0();
  sub_77310(a1 >> 14);
  unint64_t v7 = a2 >> 14;
  sub_77310(a2 >> 14);
  Swift::Int v8 = sub_77320();
  uint64_t v9 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
    return 0;
  }
  uint64_t v11 = ~v9;
  while (1)
  {
    unint64_t v12 = (unint64_t *)(*(void *)(v6 + 48) + 16 * v10);
    unint64_t v13 = *v12;
    unint64_t v14 = v12[1] >> 14;
    if (a1 >> 14 == v13 >> 14 && v14 == v7) {
      break;
    }
    unint64_t v10 = (v10 + 1) & v11;
    if (((*(void *)(v6 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
      return 0;
    }
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v3;
  uint64_t v20 = *v3;
  uint64_t *v3 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_3F774();
    uint64_t v18 = v20;
  }
  uint64_t v16 = *(void *)(*(void *)(v18 + 48) + 16 * v10);
  sub_3FD00(v10);
  uint64_t *v3 = v20;
  swift_bridgeObjectRelease();
  return v16;
}

unint64_t sub_3FD00(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_76FF0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        unint64_t v10 = (unint64_t *)(*(void *)(v3 + 48) + 16 * v6);
        unint64_t v11 = *v10;
        unint64_t v12 = v10[1];
        sub_772D0();
        sub_77310(v11 >> 14);
        sub_77310(v12 >> 14);
        unint64_t v13 = sub_77320() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 < v9) {
            goto LABEL_5;
          }
        }
        else if (v13 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v13)
        {
LABEL_11:
          uint64_t v14 = *(void *)(v3 + 48);
          int64_t v15 = (_OWORD *)(v14 + 16 * v2);
          uint64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v15 >= v16 + 1))
          {
            *int64_t v15 = *v16;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v17 = *(void *)(v3 + 16);
  BOOL v18 = __OFSUB__(v17, 1);
  uint64_t v19 = v17 - 1;
  if (v18)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v19;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

BOOL _s19PodcastsTranscripts11TextContentC2IDV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v3 = *(double *)(a1 + 16);
  double v2 = *(double *)(a1 + 24);
  double v5 = *(double *)(a2 + 16);
  double v4 = *(double *)(a2 + 24);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v3 != v5) {
      return 0;
    }
    return v2 == v4;
  }
  char v7 = sub_77230();
  BOOL result = 0;
  if ((v7 & 1) != 0 && v3 == v5) {
    return v2 == v4;
  }
  return result;
}

uint64_t sub_3FF40(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_99A28);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_771D0();
  __break(1u);
  return result;
}

char *sub_4004C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    char v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_771D0();
  __break(1u);
  return result;
}

uint64_t sub_40138(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_98770) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_771D0();
  __break(1u);
  return result;
}

uint64_t sub_40294(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v4 = a3;
    uint64_t v5 = a2;
    uint64_t v6 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0) {
      uint64_t v6 = a2;
    }
    uint64_t v7 = 7;
    if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
      uint64_t v7 = 11;
    }
    uint64_t v8 = v7 | (v6 << 16);
    uint64_t v9 = sub_76950();
    if (v10) {
      a2 = v8;
    }
    else {
      a2 = v9;
    }
    a1 = 15;
    a3 = v5;
    a4 = v4;
  }
  return String.subscript.getter(a1, a2, a3, a4);
}

uint64_t sub_40330(unint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_14:
    __break(1u);
    return String.subscript.getter(a1, a2, a3, a4);
  }
  unint64_t v4 = a3;
  uint64_t v5 = a2;
  if ((a3 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a3) & 0xF;
  }
  else {
    uint64_t v6 = a2 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v7 = 7;
  if (((a3 >> 60) & ((a2 & 0x800000000000000) == 0)) != 0) {
    uint64_t v7 = 11;
  }
  uint64_t v8 = v7 | (v6 << 16);
  a1 = sub_76950();
  if (a2) {
    a1 = 15;
  }
  if (4 * v6 < a1 >> 14) {
    goto LABEL_14;
  }
  a2 = v8;
  a3 = v5;
  a4 = v4;

  return String.subscript.getter(a1, a2, a3, a4);
}

uint64_t sub_403EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_38E00(a1, &OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerStartTime, a2);
}

uint64_t type metadata accessor for TextContent(uint64_t a1)
{
  return sub_1A170(a1, (uint64_t *)&unk_99578);
}

uint64_t sub_40438@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_38E00(a1, &OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerEndTime, a2);
}

unint64_t sub_40468()
{
  unint64_t result = qword_99528;
  if (!qword_99528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_99528);
  }
  return result;
}

uint64_t sub_404BC(uint64_t a1)
{
  uint64_t result = sub_40514(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_40514(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_4055C(uint64_t a1)
{
  uint64_t result = sub_40514(&qword_99530, (void (*)(uint64_t))type metadata accessor for TextContent);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_405B8()
{
  unint64_t result = qword_99538;
  if (!qword_99538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_99538);
  }
  return result;
}

uint64_t sub_4060C()
{
  return type metadata accessor for TextContent(0);
}

void sub_40614()
{
  sub_407A4();
  if (v0 <= 0x3F)
  {
    sub_756D0();
    if (v1 <= 0x3F)
    {
      sub_75580();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t method lookup function for TextContent(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for TextContent);
}

void sub_407A4()
{
  if (!qword_99588)
  {
    sub_756A0();
    unint64_t v0 = sub_76F80();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_99588);
    }
  }
}

ValueMetadata *type metadata accessor for TextContent.ID()
{
  return &type metadata for TextContent.ID;
}

uint64_t sub_4080C()
{
  return type metadata accessor for TextContent.LiveText(0);
}

uint64_t type metadata accessor for TextContent.LiveText(uint64_t a1)
{
  return sub_1A170(a1, qword_996F0);
}

uint64_t sub_40834()
{
  uint64_t result = sub_75020();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_75580();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_40940@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_3B778(a1, &OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__dirtyString, a2);
}

void sub_4096C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__dirtyString) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_40984@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_3B778(a1, &OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__isActive, a2);
}

uint64_t sub_409B0()
{
  return sub_3B8FC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_409D8()
{
  return sub_40A74();
}

uint64_t sub_40A08()
{
  return sub_3ADAC(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_40A30()
{
  return sub_3AAE8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_40A54()
{
  sub_39C8C(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_40A74()
{
  return sub_3B350(*(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned char *)(v0 + 40));
}

void *sub_40AAC()
{
  return sub_40ED8(&OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerEndTime);
}

void *sub_40ACC()
{
  return sub_40ED8(&OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerStartTime);
}

void sub_40AF4()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__isSelected) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_40B0C()
{
  return sub_3A164();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t sub_40B34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_3BE2C(*(void *)(v2 + 16), *(char **)(a1 + 8), a2);
}

void sub_40B68()
{
}

void sub_40B88()
{
}

uint64_t sub_40BB0()
{
  return 8;
}

uint64_t sub_40BBC()
{
  return swift_release();
}

uint64_t sub_40BC4(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_40BD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_3E90C(a1, a2, a3, &qword_99990) & 1;
}

uint64_t sub_40BF4(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_99990);
}

void *sub_40C00(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

void sub_40C0C()
{
}

void sub_40C2C()
{
}

uint64_t sub_40C54()
{
  return 8;
}

uint64_t sub_40C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_3E90C(a1, a2, a3, &qword_99988) & 1;
}

uint64_t sub_40C84(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_99988);
}

char *sub_40C90(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_771D0();
  __break(1u);
  return result;
}

uint64_t sub_40D7C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_771D0();
  __break(1u);
  return result;
}

void *sub_40ED8(void *result)
{
  char v2 = *(unsigned char *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 16) + *result;
  *(void *)uint64_t v3 = *(void *)(v1 + 24);
  *(unsigned char *)(v3 + 8) = v2;
  return result;
}

void sub_40EF4()
{
}

unint64_t sub_40F14()
{
  unint64_t result = qword_999D8;
  if (!qword_999D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_999D8);
  }
  return result;
}

void sub_40F68()
{
}

uint64_t sub_40F90()
{
  return 8;
}

uint64_t sub_40F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_3E90C(a1, a2, a3, &qword_99A18) & 1;
}

uint64_t sub_40FC0(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_99A18);
}

void sub_40FCC()
{
}

unint64_t sub_40FEC()
{
  unint64_t result = qword_99A08;
  if (!qword_99A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_99A08);
  }
  return result;
}

void sub_41040()
{
}

uint64_t sub_41068()
{
  return 8;
}

uint64_t sub_41074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_3E90C(a1, a2, a3, &qword_99A10) & 1;
}

uint64_t sub_41098(uint64_t a1, uint64_t a2)
{
  return keypath_hashTm(a1, a2, &qword_99A10);
}

void sub_410AC()
{
}

uint64_t sub_410C4()
{
  return sub_4111C();
}

void sub_410DC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  char v2 = *(void **)(v0 + 24);
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__activeSearchRange);
  *(void *)(v1 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__activeSearchRange) = v2;
  id v4 = v2;
}

uint64_t sub_4111C()
{
  char v1 = *(unsigned char *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 16) + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeSearchRange;
  unint64_t v3 = *(void *)v2;
  unint64_t v4 = *(void *)(v2 + 8);
  char v5 = *(unsigned char *)(v2 + 16);
  *(_OWORD *)uint64_t v2 = *(_OWORD *)(v0 + 24);
  *(unsigned char *)(v2 + 16) = v1;
  return sub_3B170(v3, v4, v5);
}

uint64_t sub_4119C()
{
  return sub_409B0();
}

uint64_t sub_411B4()
{
  return sub_40A30();
}

void sub_411CC()
{
}

void sub_411E4()
{
}

void sub_411FC()
{
}

uint64_t sub_41214()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_41288(unint64_t a1, unint64_t a2)
{
  unint64_t v4 = a2 >> 62;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_77180();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
  }
  unint64_t v6 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_77180();
    swift_bridgeObjectRelease();
    if (v5 != v11) {
      return 0;
    }
  }
  else if (v5 != *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8)))
  {
    return 0;
  }
  if (v4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_77180();
    if (!v7)
    {
LABEL_123:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v7) {
      goto LABEL_123;
    }
  }
  unint64_t v107 = a2 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = sub_77080();
    uint64_t v9 = a1 & 0xFFFFFFFFFFFFFF8;
    if (!v6) {
      goto LABEL_12;
    }
  }
  else
  {
    if (!*(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8))) {
      goto LABEL_140;
    }
    uint64_t v8 = *(void *)(a2 + 32);
    swift_retain();
    uint64_t v9 = a1 & 0xFFFFFFFFFFFFFF8;
    if (!v6)
    {
LABEL_12:
      uint64_t v10 = *(void *)(v9 + 16);
      if (!v10) {
        goto LABEL_124;
      }
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_77180();
  swift_bridgeObjectRelease();
  if (!v10)
  {
LABEL_124:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    return 1;
  }
LABEL_19:
  uint64_t v12 = 0;
  unint64_t v108 = a1 & 0xC000000000000001;
  uint64_t v103 = a2 & 0xFFFFFFFFFFFFFF8;
  unint64_t v104 = a1 + 32;
  uint64_t v105 = v10;
  uint64_t v106 = v7 - 1;
  unint64_t v102 = a2 + 40;
  while (2)
  {
    if (v108)
    {
      uint64_t v13 = sub_77080();
    }
    else
    {
      uint64_t v13 = *(void *)(v104 + 8 * v12);
      swift_retain();
    }
    uint64_t v109 = v12 + 1;
    unint64_t v14 = *(void *)(v8 + 16);
    unint64_t v15 = v14 >> 62;
    switch(v14 >> 62)
    {
      case 1uLL:
        uint64_t v17 = *(void *)((char *)&dword_10 + (v14 & 0x3FFFFFFFFFFFFFFFLL));
        swift_retain();
        uint64_t v16 = 0;
        *(double *)&uint64_t v110 = 0.0;
        goto LABEL_29;
      case 2uLL:
        uint64_t v20 = (void *)(v14 & 0x3FFFFFFFFFFFFFFFLL);
        uint64_t v17 = v20[5];
        uint64_t v16 = v20[6];
        uint64_t v18 = v20[7];
        uint64_t v19 = v20[8];
        goto LABEL_27;
      case 3uLL:
        uint64_t v21 = (void *)(v14 & 0x3FFFFFFFFFFFFFFFLL);
        uint64_t v17 = v21[14];
        uint64_t v16 = v21[15];
        uint64_t v110 = v21[16];
        swift_bridgeObjectRetain();
LABEL_29:
        *(double *)&uint64_t v19 = 0.0;
        goto LABEL_30;
      default:
        uint64_t v17 = *(void *)(v14 + 16);
        uint64_t v16 = *(void *)(v14 + 24);
        uint64_t v18 = *(void *)(v14 + 32);
        uint64_t v19 = *(uint64_t *)(v14 + 40);
LABEL_27:
        uint64_t v110 = v18;
        swift_bridgeObjectRetain();
LABEL_30:
        unint64_t v22 = *(void *)(v13 + 16);
        unint64_t v23 = v22 >> 62;
        switch(v22 >> 62)
        {
          case 1uLL:
            uint64_t v25 = *(void *)((char *)&dword_10 + (v22 & 0x3FFFFFFFFFFFFFFFLL));
            swift_retain();
            uint64_t v28 = 0;
            double v26 = 0.0;
            goto LABEL_36;
          case 2uLL:
            uint64_t v29 = v22 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v25 = *(void *)(v29 + 40);
            uint64_t v24 = *(void *)(v29 + 48);
            double v26 = *(double *)(v29 + 56);
            uint64_t v27 = *(uint64_t *)(v29 + 64);
            goto LABEL_34;
          case 3uLL:
            uint64_t v30 = v22 & 0x3FFFFFFFFFFFFFFFLL;
            uint64_t v25 = *(void *)(v30 + 112);
            double v26 = *(double *)(v30 + 128);
            uint64_t v28 = *(void *)(v30 + 120);
            swift_bridgeObjectRetain();
LABEL_36:
            *(double *)&uint64_t v27 = 0.0;
            goto LABEL_37;
          default:
            uint64_t v25 = *(void *)(v22 + 16);
            uint64_t v24 = *(void *)(v22 + 24);
            double v26 = *(double *)(v22 + 32);
            uint64_t v27 = *(uint64_t *)(v22 + 40);
LABEL_34:
            uint64_t v28 = v24;
            swift_bridgeObjectRetain();
            break;
        }
        break;
    }
LABEL_37:
    switch((int)v15)
    {
      case 1:
        if (v23 != 1) {
          goto LABEL_126;
        }
        if (!v17)
        {
          if (v25)
          {
LABEL_127:
            uint64_t v78 = v28;
            uint64_t v79 = v28;
            uint64_t v80 = v27;
            sub_8944(v25, v79, *(uint64_t *)&v26, v27, 1);
            uint64_t v62 = v110;
            sub_8944(v17, v16, v110, v19, 1);
            sub_8944(v25, v78, *(uint64_t *)&v26, v80, 1);
            sub_8944(v17, v16, v110, v19, 1);
            sub_8944(v25, v78, *(uint64_t *)&v26, v80, 1);
            sub_8944(v17, v16, v110, v19, 1);
            swift_release();
LABEL_129:
            swift_release();
            goto LABEL_130;
          }
          uint64_t v17 = 0;
          uint64_t v61 = v27;
          goto LABEL_80;
        }
        if (!v25) {
          goto LABEL_127;
        }
        break;
      case 2:
        if (v23 != 2) {
          goto LABEL_126;
        }
        if (v17 != v25 || v16 != v28)
        {
          uint64_t v49 = v28;
          char v33 = sub_77230();
          double v34 = *(double *)&v110;
          sub_88A0(v17, v16, v110, v19, 2);
          uint64_t v35 = v25;
          uint64_t v36 = v49;
          uint64_t v37 = *(void *)&v26;
          uint64_t v38 = v27;
          char v39 = 2;
          goto LABEL_60;
        }
        double v34 = *(double *)&v110;
        sub_88A0(v17, v16, v110, v19, 2);
        uint64_t v54 = v17;
        uint64_t v55 = v16;
        uint64_t v56 = *(void *)&v26;
        uint64_t v57 = v27;
        char v58 = 2;
        goto LABEL_71;
      case 3:
        if (v23 != 3) {
          goto LABEL_126;
        }
        if (v17 == v25 && v16 == v28)
        {
          double v53 = *(double *)&v110;
          sub_88A0(v17, v16, v110, v19, 3);
          sub_88A0(v17, v16, *(uint64_t *)&v26, v27, 3);
          swift_release();
          swift_release();
        }
        else
        {
          uint64_t v51 = v28;
          char v52 = sub_77230();
          double v53 = *(double *)&v110;
          sub_88A0(v17, v16, v110, v19, 3);
          sub_88A0(v25, v51, *(uint64_t *)&v26, v27, 3);
          swift_release();
          swift_release();
          if ((v52 & 1) == 0) {
            goto LABEL_134;
          }
        }
        double v59 = v53;
        double v60 = v26;
        goto LABEL_76;
      default:
        if (v23)
        {
LABEL_126:
          sub_88A0(v17, v16, v110, v19, v15);
          sub_88A0(v25, v28, *(uint64_t *)&v26, v27, v23);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return 0;
        }
        if (v17 == v25 && v16 == v28)
        {
          double v34 = *(double *)&v110;
          sub_88A0(v17, v16, v110, v19, 0);
          uint64_t v54 = v17;
          uint64_t v55 = v16;
          uint64_t v56 = *(void *)&v26;
          uint64_t v57 = v27;
          char v58 = 0;
LABEL_71:
          sub_88A0(v54, v55, v56, v57, v58);
          swift_release();
          swift_release();
        }
        else
        {
          uint64_t v32 = v28;
          char v33 = sub_77230();
          double v34 = *(double *)&v110;
          sub_88A0(v17, v16, v110, v19, 0);
          uint64_t v35 = v25;
          uint64_t v36 = v32;
          uint64_t v37 = *(void *)&v26;
          uint64_t v38 = v27;
          char v39 = 0;
LABEL_60:
          sub_88A0(v35, v36, v37, v38, v39);
          swift_release();
          swift_release();
          if ((v33 & 1) == 0) {
            goto LABEL_134;
          }
        }
        if (v34 != v26) {
          goto LABEL_134;
        }
        double v59 = *(double *)&v19;
        double v60 = *(double *)&v27;
LABEL_76:
        if (v59 != v60)
        {
LABEL_134:
          swift_bridgeObjectRelease();
          goto LABEL_135;
        }
        goto LABEL_113;
    }
    uint64_t v41 = *(void *)(v17 + 16);
    uint64_t v40 = *(void *)(v17 + 24);
    char v42 = *(unsigned char *)(v17 + 48);
    uint64_t v44 = *(void *)(v25 + 16);
    uint64_t v43 = *(void *)(v25 + 24);
    uint64_t v45 = *(uint64_t *)(v25 + 32);
    uint64_t v100 = *(uint64_t *)(v25 + 40);
    uint64_t v101 = *(uint64_t *)(v17 + 40);
    int v46 = *(unsigned __int8 *)(v25 + 48);
    uint64_t v95 = v40;
    uint64_t v96 = *(uint64_t *)(v17 + 32);
    uint64_t v97 = v44;
    uint64_t v98 = v45;
    uint64_t v99 = v43;
    uint64_t v92 = v28;
    uint64_t v93 = v41;
    *(double *)&uint64_t v94 = v26;
    switch(v42)
    {
      case 1:
        if (v46 != 1) {
          goto LABEL_128;
        }
        if (v41)
        {
          uint64_t v63 = v27;
          if (!v44) {
            goto LABEL_137;
          }
          char v64 = *(unsigned char *)(v41 + 48);
          char v65 = *(unsigned char *)(v44 + 48);
          long long v66 = *(_OWORD *)(v41 + 32);
          v113[0] = *(_OWORD *)(v41 + 16);
          v113[1] = v66;
          char v114 = v64;
          long long v67 = *(_OWORD *)(v44 + 32);
          v111[0] = *(_OWORD *)(v44 + 16);
          v111[1] = v67;
          char v112 = v65;
          uint64_t v68 = v40;
          uint64_t v69 = v28;
          uint64_t v70 = *(void *)&v26;
          uint64_t v71 = v45;
          uint64_t v72 = v44;
          uint64_t v73 = v43;
          sub_8944(v25, v69, v70, v27, 1);
          sub_8944(v17, v16, v110, v19, 1);
          uint64_t v91 = v27;
          sub_8944(v72, v73, v71, v100, 1);
          sub_8944(v93, v68, v96, v101, 1);
          sub_8944(v25, v92, v94, v27, 1);
          sub_8944(v17, v16, v110, v19, 1);
          sub_8944(v97, v99, v71, v100, 1);
          sub_8944(v93, v95, v96, v101, 1);
          sub_8944(v25, v92, v94, v27, 1);
          sub_8944(v17, v16, v110, v19, 1);
          sub_8944(v97, v99, v71, v100, 1);
          sub_8944(v93, v95, v96, v101, 1);
          char v88 = _s19PodcastsTranscripts26TranscriptContentViewModelC2IDO2eeoiySbAE_AEtFZ_0((uint64_t)v113, (uint64_t)v111);
          swift_release();
          swift_release();
          sub_88A0(v93, v95, v96, v101, 1);
          uint64_t v61 = v27;
          sub_88A0(v97, v99, v98, v100, 1);
          double v26 = *(double *)&v94;
          uint64_t v28 = v92;
          sub_88A0(v97, v99, v98, v100, 1);
          uint64_t v62 = v110;
          sub_88A0(v93, v95, v96, v101, 1);
          swift_release();
          swift_release();
          sub_88A0(v17, v16, v110, v19, 1);
          sub_88A0(v25, v92, v94, v91, 1);
          sub_88A0(v25, v92, v94, v91, 1);
          sub_88A0(v17, v16, v110, v19, 1);
          if ((v88 & 1) == 0) {
            goto LABEL_131;
          }
          goto LABEL_81;
        }
        uint64_t v63 = v27;
        if (!v44)
        {
          sub_8944(v25, v28, *(uint64_t *)&v26, v27, 1);
          sub_8944(v17, v16, v110, v19, 1);
          sub_8944(v25, v28, *(uint64_t *)&v26, v27, 1);
          sub_8944(v17, v16, v110, v19, 1);
          sub_8944(0, v99, v98, v100, 1);
          sub_8944(v25, v28, *(uint64_t *)&v26, v27, 1);
          uint64_t v61 = v27;
          sub_8944(v17, v16, v110, v19, 1);
          sub_8944(0, v99, v98, v100, 1);
          sub_88A0(0, v95, v96, v101, 1);
          sub_88A0(0, v99, v98, v100, 1);
          sub_88A0(0, v99, v98, v100, 1);
          sub_88A0(0, v95, v96, v101, 1);
          swift_release();
          swift_release();
LABEL_80:
          uint64_t v62 = v110;
          sub_88A0(v17, v16, v110, v19, 1);
          sub_88A0(v25, v28, *(uint64_t *)&v26, v61, 1);
          sub_88A0(v25, v28, *(uint64_t *)&v26, v61, 1);
          sub_88A0(v17, v16, v110, v19, 1);
LABEL_81:
          sub_88A0(v25, v28, *(uint64_t *)&v26, v61, 1);
          sub_88A0(v17, v16, v62, v19, 1);
          swift_release();
LABEL_112:
          swift_release();
LABEL_113:
          if (v106 == v12) {
            goto LABEL_123;
          }
          if (v107)
          {
            uint64_t v8 = sub_77080();
            uint64_t v76 = v105;
          }
          else
          {
            uint64_t v76 = v105;
            if ((unint64_t)(v12 + 1) >= *(void *)(v103 + 16)) {
              goto LABEL_139;
            }
            uint64_t v8 = *(void *)(v102 + 8 * v12);
            swift_retain();
          }
          if (v12 == 0x7FFFFFFFFFFFFFFELL)
          {
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
            JUMPOUT(0x42964);
          }
          ++v12;
          if (v76 == v109) {
            goto LABEL_124;
          }
          continue;
        }
LABEL_137:
        uint64_t v83 = *(void *)(v17 + 16);
        uint64_t v84 = v28;
        uint64_t v85 = *(void *)(v25 + 16);
        uint64_t v86 = v63;
        sub_8944(v25, v84, *(uint64_t *)&v26, v63, 1);
        uint64_t v62 = v110;
        sub_8944(v17, v16, v110, v19, 1);
        sub_8944(v85, v99, v98, v100, 1);
        sub_8944(v83, v95, v96, v101, 1);
        sub_8944(v25, v92, *(uint64_t *)&v26, v86, 1);
        sub_8944(v17, v16, v110, v19, 1);
        sub_8944(v85, v99, v98, v100, 1);
        sub_8944(v83, v95, v96, v101, 1);
        sub_8944(v25, v92, *(uint64_t *)&v26, v86, 1);
        sub_8944(v17, v16, v110, v19, 1);
        sub_8944(v85, v99, v98, v100, 1);
        sub_8944(v93, v95, v96, v101, 1);
        swift_release();
        swift_release();
        sub_88A0(v93, v95, v96, v101, 1);
        sub_88A0(v85, v99, v98, v100, 1);
        uint64_t v78 = v92;
        sub_88A0(v85, v99, v98, v100, 1);
        sub_88A0(v93, v95, v96, v101, 1);
        swift_release();
        swift_release();
        uint64_t v80 = v86;
LABEL_130:
        sub_88A0(v17, v16, v62, v19, 1);
        sub_88A0(v25, v78, *(uint64_t *)&v26, v80, 1);
        sub_88A0(v25, v78, *(uint64_t *)&v26, v80, 1);
        sub_88A0(v17, v16, v62, v19, 1);
        uint64_t v61 = v80;
        uint64_t v28 = v78;
LABEL_131:
        sub_88A0(v25, v28, *(uint64_t *)&v26, v61, 1);
        sub_88A0(v17, v16, v62, v19, 1);
        swift_release();
LABEL_132:
        swift_release();
        swift_bridgeObjectRelease();
LABEL_135:
        swift_bridgeObjectRelease();
        return 0;
      case 2:
        if (v46 != 2) {
          goto LABEL_128;
        }
        if (v41 == v44 && v40 == v43) {
          char v89 = 1;
        }
        else {
          char v89 = sub_77230();
        }
        sub_8944(v25, v28, *(uint64_t *)&v26, v27, 1);
        sub_8944(v17, v16, v110, v19, 1);
        sub_8944(v25, v28, *(uint64_t *)&v26, v27, 1);
        sub_8944(v17, v16, v110, v19, 1);
        sub_8944(v25, v28, *(uint64_t *)&v26, v27, 1);
        sub_8944(v17, v16, v110, v19, 1);
        sub_8944(v97, v99, v98, v100, 2);
        sub_8944(v93, v95, v96, v101, 2);
        sub_88A0(v93, v95, v96, v101, 2);
        sub_88A0(v97, v99, v98, v100, 2);
        swift_release();
        swift_release();
        sub_88A0(v17, v16, v110, v19, 1);
        sub_88A0(v25, v28, *(uint64_t *)&v26, v27, 1);
        sub_88A0(v25, v28, *(uint64_t *)&v26, v27, 1);
        sub_88A0(v17, v16, v110, v19, 1);
        sub_88A0(v25, v28, *(uint64_t *)&v26, v27, 1);
        sub_88A0(v17, v16, v110, v19, 1);
        swift_release();
        if ((v89 & 1) == 0 || *(double *)&v96 != *(double *)&v98) {
          goto LABEL_132;
        }
        if (*(double *)&v101 == *(double *)&v100) {
          goto LABEL_112;
        }
        swift_bridgeObjectRelease();
        swift_release();
        goto LABEL_135;
      case 3:
        if (v46 != 3) {
          goto LABEL_128;
        }
        if (v41 == v44 && v40 == v43) {
          char v90 = 1;
        }
        else {
          char v90 = sub_77230();
        }
        sub_8944(v25, v28, *(uint64_t *)&v26, v27, 1);
        sub_8944(v17, v16, v110, v19, 1);
        sub_8944(v25, v28, *(uint64_t *)&v26, v27, 1);
        sub_8944(v17, v16, v110, v19, 1);
        sub_8944(v25, v28, *(uint64_t *)&v26, v27, 1);
        sub_8944(v17, v16, v110, v19, 1);
        sub_8944(v97, v99, v98, v100, 3);
        sub_8944(v93, v95, v96, v101, 3);
        sub_88A0(v93, v95, v96, v101, 3);
        sub_88A0(v97, v99, v98, v100, 3);
        swift_release();
        swift_release();
        sub_88A0(v17, v16, v110, v19, 1);
        sub_88A0(v25, v28, *(uint64_t *)&v26, v27, 1);
        sub_88A0(v25, v28, *(uint64_t *)&v26, v27, 1);
        sub_88A0(v17, v16, v110, v19, 1);
        sub_88A0(v25, v28, *(uint64_t *)&v26, v27, 1);
        sub_88A0(v17, v16, v110, v19, 1);
        swift_release();
        if ((v90 & 1) != 0 && *(double *)&v96 == *(double *)&v98) {
          goto LABEL_112;
        }
        swift_release();
        goto LABEL_134;
      default:
        if (!*(unsigned char *)(v25 + 48))
        {
          if (v41 == v44 && v40 == v43) {
            char v87 = 1;
          }
          else {
            char v87 = sub_77230();
          }
          sub_8944(v25, v28, *(uint64_t *)&v26, v27, 1);
          sub_8944(v17, v16, v110, v19, 1);
          sub_8944(v25, v28, *(uint64_t *)&v26, v27, 1);
          sub_8944(v17, v16, v110, v19, 1);
          sub_8944(v25, v28, *(uint64_t *)&v26, v27, 1);
          sub_8944(v17, v16, v110, v19, 1);
          sub_8944(v97, v99, v98, v100, 0);
          sub_8944(v93, v95, v96, v101, 0);
          sub_88A0(v93, v95, v96, v101, 0);
          sub_88A0(v97, v99, v98, v100, 0);
          swift_release();
          swift_release();
          sub_88A0(v17, v16, v110, v19, 1);
          sub_88A0(v25, v28, *(uint64_t *)&v26, v27, 1);
          sub_88A0(v25, v28, *(uint64_t *)&v26, v27, 1);
          sub_88A0(v17, v16, v110, v19, 1);
          sub_88A0(v25, v28, *(uint64_t *)&v26, v27, 1);
          sub_88A0(v17, v16, v110, v19, 1);
          swift_release();
          if ((v87 & 1) == 0 || *(double *)&v96 != *(double *)&v98 || *(double *)&v101 != *(double *)&v100) {
            goto LABEL_132;
          }
          goto LABEL_112;
        }
LABEL_128:
        uint64_t v81 = v28;
        uint64_t v82 = v28;
        uint64_t v80 = v27;
        sub_8944(v25, v82, *(uint64_t *)&v26, v27, 1);
        uint64_t v62 = v110;
        sub_8944(v17, v16, v110, v19, 1);
        sub_8944(v25, v81, *(uint64_t *)&v26, v80, 1);
        sub_8944(v17, v16, v110, v19, 1);
        sub_8944(v25, v81, *(uint64_t *)&v26, v80, 1);
        sub_8944(v17, v16, v110, v19, 1);
        sub_8944(v97, v99, v98, v100, v46);
        sub_8944(v93, v95, v96, v101, v42);
        uint64_t v78 = v92;
        sub_88A0(v93, v95, v96, v101, v42);
        sub_88A0(v97, v99, v98, v100, v46);
        swift_release();
        goto LABEL_129;
    }
  }
}

double sub_429A4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_42A18()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_42A94()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_42B08()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_99D10);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_99D18);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14[0] = __swift_instantiateConcreteTypeFromMangledName(&qword_99D20);
  uint64_t v9 = *(void *)(v14[0] - 8);
  __chkstk_darwin(v14[0]);
  uint64_t v11 = (char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_99BF8);
  sub_75C10();
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_99D28);
  sub_D034((unint64_t *)&unk_9A4E0, &qword_99D10);
  sub_75CD0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_D034(&qword_99D30, &qword_99D18);
  sub_75CB0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_getKeyPath();
  v14[1] = *(void *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_presentationContext);
  sub_D034(&qword_99D38, &qword_99D20);
  swift_retain();
  uint64_t v12 = v14[0];
  sub_75D90();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v12);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A2D0);
  sub_D034(&qword_98528, (uint64_t *)&unk_9A2D0);
  sub_75BA0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_42F04()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_avObserver;
  swift_beginAccess();
  sub_C50C(v1, (uint64_t)&v19, &qword_99BE8);
  uint64_t v2 = v19;
  if (v19)
  {
    unint64_t v22 = v19;
    sub_26A78(&v20, v23);
    uint64_t v19 = v2;
    sub_8CBC((uint64_t)v23, (uint64_t)&v20);
    __swift_project_boxed_opaque_existential_1(&v20, v21);
    id v3 = v2;
    uint64_t v4 = sub_77220();
    __swift_destroy_boxed_opaque_existential_0((uint64_t)&v20);
    [v3 removeTimeObserver:v4];

    swift_unknownObjectRelease();
    uint64_t v5 = (uint64_t *)&unk_99C10;
    uint64_t v6 = &v22;
  }
  else
  {
    uint64_t v5 = &qword_99BE8;
    uint64_t v6 = &v19;
  }
  sub_CA50((uint64_t)v6, v5);
  uint64_t v7 = OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_displayLink;
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_displayLink);
  if (v8)
  {
    [v8 invalidate];
    uint64_t v9 = *(void **)(v0 + v7);
  }
  else
  {
    uint64_t v9 = 0;
  }
  *(void *)(v0 + v7) = 0;

  swift_release();
  uint64_t v10 = v0 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver__elapsedTime;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_99BF0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);
  uint64_t v12 = v0 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver__activeParagraph;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_99BF8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12, v13);
  uint64_t v14 = v0 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver__alignedViewModels;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_99C00);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
  uint64_t v16 = v0 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver__rawViewModels;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_99C08);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(v16, v17);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_chaptersProvider);
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  sub_CA50(v1, &qword_99BE8);
  swift_bridgeObjectRelease();
  swift_release();

  return v0;
}

uint64_t sub_4320C()
{
  sub_42F04();
  uint64_t v1 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v2 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v1, v2);
}

uint64_t sub_43264()
{
  return type metadata accessor for LiveTranscriptObserver();
}

uint64_t type metadata accessor for LiveTranscriptObserver()
{
  uint64_t result = qword_99AC0;
  if (!qword_99AC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_432B8()
{
  sub_4348C();
  if (v0 <= 0x3F)
  {
    sub_434E4(319, &qword_99AD8, &qword_9A550);
    if (v1 <= 0x3F)
    {
      sub_434E4(319, &qword_99AE0, (uint64_t *)&unk_9A540);
      if (v2 <= 0x3F)
      {
        sub_434E4(319, &qword_99AE8, (uint64_t *)&unk_99AF0);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_4348C()
{
  if (!qword_99AD0)
  {
    unint64_t v0 = sub_75C60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_99AD0);
    }
  }
}

void sub_434E4(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    unint64_t v4 = sub_75C60();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_43534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_43548(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t initializeWithCopy for LiveTranscriptObserver.ActiveParagraph(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for LiveTranscriptObserver.ActiveParagraph(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  long long v4 = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  return a1;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for LiveTranscriptObserver.ActiveParagraph(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveTranscriptObserver.ActiveParagraph(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 25)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveTranscriptObserver.ActiveParagraph(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 25) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveTranscriptObserver.ActiveParagraph()
{
  return &type metadata for LiveTranscriptObserver.ActiveParagraph;
}

void sub_436EC(uint64_t a1)
{
  uint64_t v59 = a1;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A410);
  uint64_t v53 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  int v46 = (char *)v39 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A460);
  uint64_t v50 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v44 = (char *)v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_99C18);
  uint64_t v54 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v45 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_99C20);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v55 = v4;
  uint64_t v56 = v5;
  __chkstk_darwin(v4);
  uint64_t v47 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_99C28);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  uint64_t v58 = v8;
  __chkstk_darwin(v7);
  uint64_t v49 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A280);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_99C30);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_99C38);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  long long v20 = (char *)v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_99C08);
  sub_75C10();
  swift_endAccess();
  v39[1] = sub_FAEC(0, (unint64_t *)&qword_99F20);
  *(void *)&long long v60 = sub_76CA0();
  uint64_t v41 = sub_76C60();
  uint64_t v21 = *(void *)(v41 - 8);
  uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v42 = v21 + 56;
  v40(v12, 1, 1, v41);
  sub_D034(&qword_99C40, &qword_99C30);
  v39[3] = sub_48C78();
  sub_75D40();
  sub_CA50((uint64_t)v12, &qword_9A280);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v22 = v39[0];
  swift_allocObject();
  swift_weakInit();
  uint64_t v43 = &protocol conformance descriptor for Publishers.ReceiveOn<A, B>;
  sub_D034(&qword_99C48, &qword_99C38);
  sub_75D80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A2D0);
  void v39[2] = sub_D034(&qword_98528, (uint64_t *)&unk_9A2D0);
  sub_75BA0();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_99C00);
  unint64_t v23 = v44;
  sub_75C10();
  swift_endAccess();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_99BF0);
  uint64_t v24 = v46;
  sub_75C10();
  swift_endAccess();
  sub_D034((unint64_t *)&unk_9A480, &qword_9A460);
  sub_D034(&qword_9A500, &qword_9A410);
  uint64_t v25 = v45;
  uint64_t v26 = v48;
  uint64_t v27 = v51;
  sub_75CA0();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v24, v27);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v23, v26);
  long long v60 = 0u;
  long long v61 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_99C50);
  sub_D034(&qword_99C58, &qword_99C18);
  uint64_t v28 = v47;
  uint64_t v29 = v52;
  sub_75CE0();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v25, v29);
  *(void *)&long long v60 = sub_76CA0();
  v40(v12, 1, 1, v41);
  sub_D034(&qword_99C60, &qword_99C20);
  uint64_t v30 = v49;
  uint64_t v31 = v55;
  sub_75D40();
  sub_CA50((uint64_t)v12, &qword_9A280);

  (*(void (**)(char *, uint64_t))(v56 + 8))(v28, v31);
  uint64_t v32 = swift_allocObject();
  swift_weakInit();
  uint64_t v33 = swift_allocObject();
  *(void *)(v33 + 16) = sub_48D20;
  *(void *)(v33 + 24) = v32;
  sub_D034(&qword_99C68, &qword_99C28);
  uint64_t v34 = v57;
  sub_75D80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v30, v34);
  swift_beginAccess();
  sub_75BA0();
  swift_endAccess();
  swift_release();
  sub_45030(v59);
  if (sub_755E0())
  {
    sub_FAEC(0, &qword_99C70);
    swift_allocObject();
    swift_weakInit();
    uint64_t v35 = (void *)sub_76B50();
    LOBYTE(v60) = 0;
    *(float *)&double v36 = sub_76BC0(10.0, 60.0, (Swift::Float_optional *)0x42700000);
    [v35 setPreferredFrameRateRange:v36];
    id v37 = [self currentRunLoop];
    [v35 addToRunLoop:v37 forMode:NSRunLoopCommonModes];

    uint64_t v38 = *(void **)(v22 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_displayLink);
    *(void *)(v22 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_displayLink) = v35;
  }
  else
  {
    sub_454B8();
  }
}

uint64_t sub_441F0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_44250(v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_44250(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A280);
  __chkstk_darwin(v4 - 8);
  uint64_t v58 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_99C78);
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_99CB8);
  uint64_t v51 = *(void *)(v8 - 8);
  uint64_t v52 = v8;
  __chkstk_darwin(v8);
  uint64_t v50 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_99CC0);
  uint64_t v48 = *(void *)(v10 - 8);
  uint64_t v49 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_99C30);
  uint64_t v44 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_99CC8);
  uint64_t v53 = *(void *)(v15 - 8);
  uint64_t v54 = v15;
  __chkstk_darwin(v15);
  uint64_t v59 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_99CD0);
  uint64_t v56 = *(void *)(v17 - 8);
  uint64_t v57 = v17;
  __chkstk_darwin(v17);
  uint64_t v55 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_76550();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (uint64_t *)((char *)&v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_FAEC(0, (unint64_t *)&qword_99F20);
  *uint64_t v22 = sub_76CA0();
  (*(void (**)(uint64_t *, void, uint64_t))(v20 + 104))(v22, enum case for DispatchPredicate.onQueue(_:), v19);
  char v23 = sub_76580();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v20 + 8))(v22, v19);
  if ((v23 & 1) == 0)
  {
    __break(1u);
    return result;
  }
  uint64_t v25 = OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_dynamicAdObserver;
  uint64_t result = *(void *)(v2 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_dynamicAdObserver);
  uint64_t v26 = v2;
  if (a1)
  {
    if (result) {
      return result;
    }
    uint64_t v43 = v2;
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_99C08);
    sub_75C10();
    swift_endAccess();
    sub_752C0();
    sub_752E0();
    swift_getKeyPath();
    sub_D034(&qword_99C88, &qword_99C78);
    uint64_t v27 = v50;
    uint64_t v28 = v47;
    sub_75CC0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v7, v28);
    sub_D034(&qword_99C40, &qword_99C30);
    sub_D034(&qword_99CD8, &qword_99CC0);
    sub_D034(&qword_99CE0, &qword_99CB8);
    uint64_t v29 = v46;
    uint64_t v30 = v49;
    uint64_t v31 = v52;
    sub_75C90();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v27, v31);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v12, v30);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v29);
    id v60 = (id)sub_76CA0();
    uint64_t v32 = sub_76C60();
    uint64_t v33 = (uint64_t)v58;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v58, 1, 1, v32);
    sub_D034(&qword_99CE8, &qword_99CC8);
    sub_48C78();
    uint64_t v34 = v54;
    uint64_t v35 = v55;
    double v36 = v59;
    sub_75D40();
    sub_CA50(v33, &qword_9A280);

    (*(void (**)(char *, uint64_t))(v53 + 8))(v36, v34);
    uint64_t v37 = swift_allocObject();
    swift_weakInit();
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = sub_49EF4;
    *(void *)(v38 + 24) = v37;
    sub_D034(&qword_99CF0, &qword_99CD0);
    uint64_t v39 = v57;
    uint64_t v40 = sub_75D80();
    uint64_t v26 = v43;
    uint64_t v41 = v40;
    swift_release();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v35, v39);
  }
  else
  {
    uint64_t v41 = 0;
  }
  *(void *)(v26 + v25) = v41;
  return swift_release();
}

uint64_t sub_44A68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a2;
  uint64_t v3 = a2[1];
  *(_OWORD *)a3 = *(_OWORD *)(a1 + 16);
  *(void *)(a3 + 16) = v4;
  *(void *)(a3 + 24) = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_44AB0(uint64_t result, uint64_t a2, void **a3, uint64_t a4)
{
  if (a3)
  {
    uint64_t v6 = result;
    swift_beginAccess();
    uint64_t result = swift_weakLoadStrong();
    if (result)
    {
      sub_44B34(a3, v6, *(double *)&a4);
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_44B34(void **a1, uint64_t a2, double a3)
{
  uint64_t v4 = v3;
  uint64_t v31 = a2;
  uint64_t v7 = sub_76500();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v33 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_76520();
  uint64_t v32 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_76550();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (uint64_t *)((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_FAEC(0, (unint64_t *)&qword_99F20);
  *uint64_t v16 = sub_76CA0();
  (*(void (**)(uint64_t *, void, uint64_t))(v14 + 104))(v16, enum case for DispatchPredicate.onQueue(_:), v13);
  char v17 = sub_76580();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v14 + 8))(v16, v13);
  if (v17)
  {
    uint64_t aBlock = a1;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A540);
    sub_D034(&qword_98D20, (uint64_t *)&unk_9A540);
    uint64_t result = sub_76B10();
    if (result)
    {
      uint64_t v28 = v10;
      uint64_t v29 = v8;
      uint64_t v30 = v7;
      if (*(void *)(v4 + 16))
      {
        char v19 = *(unsigned char *)(v4 + 40);
        uint64_t v20 = *(void ***)(v4 + 16);
        uint64_t v21 = *(void *)(v4 + 24);
        uint64_t v22 = *(uint64_t (**)(uint64_t))(v4 + 32);
      }
      else
      {
        swift_getKeyPath();
        swift_getKeyPath();
        sub_75C40();
        swift_release();
        swift_release();
        uint64_t v20 = aBlock;
        uint64_t v21 = v36;
        uint64_t v22 = v37;
        char v19 = (char)v38;
      }
      *(void *)(v4 + 16) = 0;
      *(void *)(v4 + 24) = 0;
      *(unsigned char *)(v4 + 40) = 0;
      *(void *)(v4 + 32) = 0;
      swift_retain();
      swift_release();
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v20;
      *(void *)(v23 + 24) = v21;
      *(void *)(v23 + 32) = v22;
      *(unsigned char *)(v23 + 40) = v19;
      *(void *)(v23 + 48) = v31;
      *(void *)(v23 + 56) = a1;
      *(double *)(v23 + 64) = a3;
      *(void *)(v23 + 72) = v4;
      uint64_t v39 = sub_490D0;
      uint64_t v40 = v23;
      uint64_t aBlock = _NSConcreteStackBlock;
      uint64_t v36 = 1107296256;
      uint64_t v37 = sub_4CF00;
      uint64_t v38 = &block_descriptor_43;
      uint64_t v24 = _Block_copy(&aBlock);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      sub_76510();
      uint64_t v34 = &_swiftEmptyArrayStorage;
      sub_45DA0(&qword_98570, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_99F30);
      sub_D034((unint64_t *)&qword_98578, (uint64_t *)&unk_99F30);
      uint64_t v25 = v33;
      uint64_t v26 = v30;
      sub_76FE0();
      sub_76CB0();
      _Block_release(v24);
      swift_release();
      (*(void (**)(char *, uint64_t))(v29 + 8))(v25, v26);
      (*(void (**)(char *, uint64_t))(v32 + 8))(v12, v28);
      return swift_release();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_45030(uint64_t a1)
{
  uint64_t v25 = a1;
  uint64_t v24 = sub_75370();
  uint64_t v1 = *(void *)(v24 - 8);
  uint64_t v23 = *(void *)(v1 + 64);
  __chkstk_darwin(v24);
  uint64_t v22 = (char *)&v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A280);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_99C78);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_99C80);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_752E0();
  sub_FAEC(0, (unint64_t *)&qword_99F20);
  id v26 = (id)sub_76CA0();
  uint64_t v14 = sub_76C60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v5, 1, 1, v14);
  sub_D034(&qword_99C88, &qword_99C78);
  sub_48C78();
  sub_75D40();
  sub_CA50((uint64_t)v5, &qword_9A280);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v16 = v22;
  uint64_t v17 = v24;
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v22, v25, v24);
  unint64_t v18 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v15;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 32))(v19 + v18, v16, v17);
  sub_D034(&qword_99C90, &qword_99C80);
  sub_75D80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A2D0);
  sub_D034(&qword_98528, (uint64_t *)&unk_9A2D0);
  sub_75BA0();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_454B8()
{
  uint64_t v1 = v0;
  unint64_t v2 = sub_76DB0(0.0166666667, 1000000000);
  unsigned int v4 = v3;
  uint64_t v6 = v5;
  unint64_t v7 = HIDWORD(v3);
  uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_player + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 56))(ObjectType, v8);
  [v10 currentTime];
  sub_76DC0();
  uint64_t v12 = v11;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t aBlock = v12;
  swift_retain();
  sub_75C50();
  id v26 = v10;
  sub_FAEC(0, (unint64_t *)&qword_99F20);
  id v13 = v10;
  uint64_t v14 = (void *)sub_76CA0();
  uint64_t v15 = swift_allocObject();
  swift_weakInit();
  uint64_t v24 = sub_48EA0;
  uint64_t v25 = v15;
  uint64_t aBlock = _NSConcreteStackBlock;
  unint64_t v21 = 1107296256;
  uint64_t v22 = sub_467A8;
  uint64_t v23 = &block_descriptor_5;
  uint64_t v16 = _Block_copy(&aBlock);
  swift_release();
  uint64_t aBlock = (void **)v2;
  unint64_t v21 = __PAIR64__(v7, v4);
  uint64_t v22 = v6;
  id v17 = [v13 addPeriodicTimeObserverForInterval:&aBlock queue:v14 usingBlock:v16];
  _Block_release(v16);

  sub_76FD0();
  swift_unknownObjectRelease();

  uint64_t v18 = v1 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_avObserver;
  swift_beginAccess();
  sub_48EC0((uint64_t)&v26, v18);
  return swift_endAccess();
}

uint64_t sub_45718(uint64_t a1, unint64_t a2, unint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  unint64_t v8 = *(void *)(a5 + 16);
  unint64_t v9 = v8 >> 62;
  switch(v8 >> 62)
  {
    case 1uLL:
      uint64_t v12 = *(void *)((char *)&dword_10 + (v8 & 0x3FFFFFFFFFFFFFFFLL));
      swift_retain();
      uint64_t v11 = 0;
      uint64_t v14 = 0;
      goto LABEL_7;
    case 2uLL:
      uint64_t v15 = (void *)(v8 & 0x3FFFFFFFFFFFFFFFLL);
      uint64_t v12 = v15[5];
      uint64_t v11 = v15[6];
      uint64_t v14 = v15[7];
      uint64_t v13 = v15[8];
      goto LABEL_4;
    case 3uLL:
      uint64_t v16 = (void *)(v8 & 0x3FFFFFFFFFFFFFFFLL);
      uint64_t v12 = v16[14];
      uint64_t v11 = v16[15];
      uint64_t v14 = v16[16];
      swift_bridgeObjectRetain();
LABEL_7:
      uint64_t v13 = 0;
      goto LABEL_8;
    default:
      uint64_t v12 = *(void *)(v8 + 16);
      uint64_t v11 = *(void *)(v8 + 24);
      uint64_t v14 = *(void *)(v8 + 32);
      uint64_t v13 = *(void *)(v8 + 40);
LABEL_4:
      swift_bridgeObjectRetain();
LABEL_8:
      v37[0] = v12;
      v37[1] = v11;
      v37[2] = v14;
      v37[3] = v13;
      char v38 = v9;
      unint64_t v17 = *(void *)(a1 + 16);
      unint64_t v18 = v17 >> 62;
      uint64_t v33 = v14;
      switch(v17 >> 62)
      {
        case 1uLL:
          uint64_t v19 = *(void *)((char *)&dword_10 + (v17 & 0x3FFFFFFFFFFFFFFFLL));
          swift_retain();
          uint64_t v20 = 0;
          uint64_t v21 = 0;
          goto LABEL_14;
        case 2uLL:
          uint64_t v23 = (void *)(v17 & 0x3FFFFFFFFFFFFFFFLL);
          uint64_t v19 = v23[5];
          uint64_t v20 = v23[6];
          uint64_t v21 = v23[7];
          uint64_t v22 = v23[8];
          goto LABEL_11;
        case 3uLL:
          uint64_t v24 = (void *)(v17 & 0x3FFFFFFFFFFFFFFFLL);
          uint64_t v19 = v24[14];
          uint64_t v20 = v24[15];
          uint64_t v21 = v24[16];
          swift_bridgeObjectRetain();
LABEL_14:
          uint64_t v22 = 0;
          goto LABEL_15;
        default:
          uint64_t v19 = *(void *)(v17 + 16);
          uint64_t v20 = *(void *)(v17 + 24);
          uint64_t v21 = *(void *)(v17 + 32);
          uint64_t v22 = *(void *)(v17 + 40);
LABEL_11:
          swift_bridgeObjectRetain();
LABEL_15:
          v35[0] = v19;
          v35[1] = v20;
          v35[2] = v21;
          v35[3] = v22;
          char v36 = v18;
          char v25 = _s19PodcastsTranscripts26TranscriptContentViewModelC2IDO2eeoiySbAE_AEtFZ_0((uint64_t)v37, (uint64_t)v35);
          sub_88A0(v19, v20, v21, v22, v18);
          sub_88A0(v12, v11, v33, v13, v9);
          char v26 = v25 & a4;
          if ((v25 & 1) != 0 && (a8 & 1) == 0)
          {
            if (a4)
            {
              char v26 = 0;
            }
            else if ((a6 ^ a2) >> 14)
            {
              char v26 = 0;
            }
            else
            {
              char v26 = (a7 ^ a3) < 0x4000;
            }
          }
          return v26 & 1;
      }
  }
}

uint64_t sub_45940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v5 = *(void *)(a5 + 16);
  unint64_t v6 = v5 >> 62;
  switch(v5 >> 62)
  {
    case 1uLL:
      uint64_t v9 = *(void *)((char *)&dword_10 + (v5 & 0x3FFFFFFFFFFFFFFFLL));
      swift_retain();
      uint64_t v8 = 0;
      uint64_t v10 = 0;
      goto LABEL_7;
    case 2uLL:
      uint64_t v12 = (void *)(v5 & 0x3FFFFFFFFFFFFFFFLL);
      uint64_t v9 = v12[5];
      uint64_t v8 = v12[6];
      uint64_t v10 = v12[7];
      uint64_t v11 = v12[8];
      goto LABEL_4;
    case 3uLL:
      uint64_t v13 = (void *)(v5 & 0x3FFFFFFFFFFFFFFFLL);
      uint64_t v9 = v13[14];
      uint64_t v8 = v13[15];
      uint64_t v10 = v13[16];
      swift_bridgeObjectRetain();
LABEL_7:
      uint64_t v11 = 0;
      goto LABEL_8;
    default:
      uint64_t v9 = *(void *)(v5 + 16);
      uint64_t v8 = *(void *)(v5 + 24);
      uint64_t v10 = *(void *)(v5 + 32);
      uint64_t v11 = *(void *)(v5 + 40);
LABEL_4:
      swift_bridgeObjectRetain();
LABEL_8:
      v27[0] = v9;
      v27[1] = v8;
      v27[2] = v10;
      v27[3] = v11;
      char v28 = v6;
      unint64_t v14 = *(void *)(a1 + 16);
      unint64_t v15 = v14 >> 62;
      uint64_t v24 = v10;
      switch(v14 >> 62)
      {
        case 1uLL:
          uint64_t v16 = *(void *)((char *)&dword_10 + (v14 & 0x3FFFFFFFFFFFFFFFLL));
          swift_retain();
          uint64_t v17 = 0;
          uint64_t v18 = 0;
          goto LABEL_14;
        case 2uLL:
          uint64_t v20 = (void *)(v14 & 0x3FFFFFFFFFFFFFFFLL);
          uint64_t v16 = v20[5];
          uint64_t v17 = v20[6];
          uint64_t v18 = v20[7];
          uint64_t v19 = v20[8];
          goto LABEL_11;
        case 3uLL:
          uint64_t v21 = (void *)(v14 & 0x3FFFFFFFFFFFFFFFLL);
          uint64_t v16 = v21[14];
          uint64_t v17 = v21[15];
          uint64_t v18 = v21[16];
          swift_bridgeObjectRetain();
LABEL_14:
          uint64_t v19 = 0;
          goto LABEL_15;
        default:
          uint64_t v16 = *(void *)(v14 + 16);
          uint64_t v17 = *(void *)(v14 + 24);
          uint64_t v18 = *(void *)(v14 + 32);
          uint64_t v19 = *(void *)(v14 + 40);
LABEL_11:
          swift_bridgeObjectRetain();
LABEL_15:
          v25[0] = v16;
          v25[1] = v17;
          v25[2] = v18;
          v25[3] = v19;
          char v26 = v15;
          char v22 = _s19PodcastsTranscripts26TranscriptContentViewModelC2IDO2eeoiySbAE_AEtFZ_0((uint64_t)v27, (uint64_t)v25);
          sub_88A0(v16, v17, v18, v19, v15);
          sub_88A0(v9, v8, v24, v11, v6);
          return v22 & 1;
      }
  }
}

uint64_t sub_45B10(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  sub_77060(43);
  v11._object = (void *)0x800000000007F190;
  v11._countAndFlagsBits = 0xD00000000000001BLL;
  sub_76970(v11);
  if (a4)
  {
    unint64_t v7 = (void *)0xE300000000000000;
    v6._countAndFlagsBits = 7104878;
  }
  else
  {
    sub_77100();
    v12._countAndFlagsBits = 3943982;
    v12._object = (void *)0xE300000000000000;
    sub_76970(v12);
    sub_77100();
    v6._countAndFlagsBits = 0;
    unint64_t v7 = (void *)0xE000000000000000;
  }
  v6._object = v7;
  sub_76970(v6);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 0x6E65746E6F63202CLL;
  v13._object = (void *)0xEB00000000203A74;
  sub_76970(v13);
  switch(*(void *)(a1 + 16) >> 62)
  {
    case 1:
      uint64_t v8 = (unint64_t *)&unk_99F90;
      uint64_t v9 = (void (*)(uint64_t))type metadata accessor for SilentContent;
      break;
    case 2:
      uint64_t v8 = (unint64_t *)&unk_98D10;
      uint64_t v9 = (void (*)(uint64_t))type metadata accessor for SpeakerContent;
      break;
    case 3:
      uint64_t v8 = (unint64_t *)&qword_99F80;
      uint64_t v9 = (void (*)(uint64_t))type metadata accessor for ChapterTitleContent;
      break;
    default:
      uint64_t v8 = (unint64_t *)&unk_98D18;
      uint64_t v9 = (void (*)(uint64_t))type metadata accessor for TextContent;
      break;
  }
  sub_45DA0(v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_99BE0);
  sub_77100();
  v14._countAndFlagsBits = 41;
  v14._object = (void *)0xE100000000000000;
  sub_76970(v14);
  return 0;
}

uint64_t sub_45D90()
{
  return sub_45B10(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_45DA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_45DE8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

BOOL sub_45DF4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*(void *)a1)
  {
    if (!v2) {
      return 0;
    }
    unint64_t v3 = *(void *)(*(void *)a1 + 16);
    unint64_t v4 = v3 >> 62;
    switch(v3 >> 62)
    {
      case 1uLL:
        uint64_t v5 = *(void *)((char *)&dword_10 + (v3 & 0x3FFFFFFFFFFFFFFFLL));
        swift_retain();
        uint64_t v6 = 0;
        uint64_t v7 = 0;
        goto LABEL_11;
      case 2uLL:
        Swift::String v11 = (void *)(v3 & 0x3FFFFFFFFFFFFFFFLL);
        uint64_t v5 = v11[5];
        uint64_t v6 = v11[6];
        uint64_t v7 = v11[7];
        uint64_t v8 = v11[8];
        goto LABEL_9;
      case 3uLL:
        Swift::String v12 = (void *)(v3 & 0x3FFFFFFFFFFFFFFFLL);
        uint64_t v5 = v12[14];
        uint64_t v6 = v12[15];
        uint64_t v7 = v12[16];
        swift_bridgeObjectRetain();
LABEL_11:
        uint64_t v8 = 0;
        goto LABEL_12;
      default:
        uint64_t v5 = *(void *)(v3 + 16);
        uint64_t v6 = *(void *)(v3 + 24);
        uint64_t v7 = *(void *)(v3 + 32);
        uint64_t v8 = *(void *)(v3 + 40);
LABEL_9:
        swift_bridgeObjectRetain();
LABEL_12:
        uint64_t v24 = v5;
        uint64_t v25 = v6;
        uint64_t v26 = v7;
        uint64_t v27 = v8;
        char v28 = v4;
        sub_772D0();
        swift_retain_n();
        swift_retain_n();
        TranscriptContentViewModel.ID.hash(into:)((uint64_t)v23);
        Swift::Int v13 = sub_77320();
        sub_88A0(v5, v6, v7, v8, v4);
        unint64_t v14 = *(void *)(v2 + 16);
        unint64_t v15 = v14 >> 62;
        switch(v14 >> 62)
        {
          case 1uLL:
            uint64_t v16 = *(void *)((char *)&dword_10 + (v14 & 0x3FFFFFFFFFFFFFFFLL));
            swift_retain();
            uint64_t v17 = 0;
            uint64_t v18 = 0;
            goto LABEL_18;
          case 2uLL:
            uint64_t v20 = (void *)(v14 & 0x3FFFFFFFFFFFFFFFLL);
            uint64_t v16 = v20[5];
            uint64_t v17 = v20[6];
            uint64_t v18 = v20[7];
            uint64_t v19 = v20[8];
            goto LABEL_16;
          case 3uLL:
            uint64_t v21 = (void *)(v14 & 0x3FFFFFFFFFFFFFFFLL);
            uint64_t v16 = v21[14];
            uint64_t v17 = v21[15];
            uint64_t v18 = v21[16];
            swift_bridgeObjectRetain();
LABEL_18:
            uint64_t v19 = 0;
            goto LABEL_19;
          default:
            uint64_t v16 = *(void *)(v14 + 16);
            uint64_t v17 = *(void *)(v14 + 24);
            uint64_t v18 = *(void *)(v14 + 32);
            uint64_t v19 = *(void *)(v14 + 40);
LABEL_16:
            swift_bridgeObjectRetain();
LABEL_19:
            uint64_t v24 = v16;
            uint64_t v25 = v17;
            uint64_t v26 = v18;
            uint64_t v27 = v19;
            char v28 = v15;
            sub_772D0();
            TranscriptContentViewModel.ID.hash(into:)((uint64_t)v23);
            Swift::Int v22 = sub_77320();
            swift_release_n();
            swift_release_n();
            sub_88A0(v16, v17, v18, v19, v15);
            BOOL v9 = v13 == v22;
            break;
        }
        break;
    }
  }
  else
  {
    return v2 == 0;
  }
  return v9;
}

uint64_t sub_46048(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_99C98);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_75770();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  Swift::String v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v13 = result;
    sub_C50C(a1, (uint64_t)v7, &qword_99C98);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_CA50((uint64_t)v7, &qword_99C98);
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v19 = 0;
      swift_retain();
      sub_75C50();
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v19 = &_swiftEmptyArrayStorage;
      swift_retain();
      sub_75C50();
      swift_getKeyPath();
      swift_getKeyPath();
      uint64_t v19 = 0;
      uint64_t v20 = 0;
      char v22 = 0;
      uint64_t v21 = 0;
      return sub_75C50();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      uint64_t v14 = *(void *)(v13 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_presentationContext);
      uint64_t v15 = *(void *)(v13 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_workQueue);
      sub_FAEC(0, (unint64_t *)&qword_99F20);
      uint64_t v16 = (void *)sub_76CA0();
      uint64_t v17 = swift_allocObject();
      swift_weakInit();
      swift_retain();
      sub_101A8(v14, a3, v15, v16, (uint64_t)sub_49078, v17);

      swift_release();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      swift_release();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_46380(unint64_t a1)
{
  uint64_t v2 = sub_758C0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_758A0();
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_758B0();
    os_log_type_t v8 = sub_76B80();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      v13[0] = swift_slowAlloc();
      unint64_t v14 = v13[0];
      *(_DWORD *)uint64_t v9 = 136315138;
      if (a1 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = sub_77180();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v10 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
      }
      if (v10) {
        uint64_t v11 = 0x64656E69666544;
      }
      else {
        uint64_t v11 = 0x7974706D45;
      }
      if (v10) {
        unint64_t v12 = 0xE700000000000000;
      }
      else {
        unint64_t v12 = 0xE500000000000000;
      }
      v13[1] = sub_7D80(v11, v12, (uint64_t *)&v14);
      sub_76F90();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&def_1E2E4, v7, v8, "Received updated transcript models: %s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_getKeyPath();
    swift_getKeyPath();
    unint64_t v14 = a1;
    swift_bridgeObjectRetain();
    return sub_75C50();
  }
  return result;
}

uint64_t sub_4664C()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_75200();
    if (v1)
    {
      return swift_release();
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      return sub_75C50();
    }
  }
  return result;
}

uint64_t sub_466F8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_76DC0();
    swift_getKeyPath();
    swift_getKeyPath();
    return sub_75C50();
  }
  return result;
}

uint64_t sub_467A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  uint64_t v3 = a2[1];
  uint64_t v4 = a2[2];
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v5(v2, v3, v4);

  return swift_release();
}

uint64_t sub_46814(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (result)
  {
    uint64_t v8 = result;
    sub_C50C(a2, (uint64_t)&v9, &qword_99CF8);
    if (v10)
    {
      sub_3015C(&v9, (uint64_t)v11);
      swift_beginAccess();
      if (swift_weakLoadStrong())
      {
        sub_468F8(v8, (uint64_t)v11, a3, a4, a5 & 1);
        swift_release();
      }
      return __swift_destroy_boxed_opaque_existential_0((uint64_t)v11);
    }
    else
    {
      return sub_CA50((uint64_t)&v9, &qword_99CF8);
    }
  }
  return result;
}

uint64_t sub_468F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6 = v5;
  int v42 = a5;
  uint64_t v40 = a3;
  uint64_t v41 = a4;
  uint64_t v39 = a2;
  uint64_t v43 = a1;
  uint64_t v7 = sub_76500();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_76520();
  uint64_t v44 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_76550();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (void *)((char *)v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_FAEC(0, (unint64_t *)&qword_99F20);
  *uint64_t v17 = sub_76CA0();
  (*(void (**)(uint64_t *, void, uint64_t))(v15 + 104))(v17, enum case for DispatchPredicate.onQueue(_:), v14);
  char v18 = sub_76580();
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t))(v15 + 8))(v17, v14);
  if (v18)
  {
    uint64_t v37 = v11;
    uint64_t v20 = (void *)sub_75210();
    sub_2A398(v6 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_chaptersProvider, (uint64_t)aBlock);
    if (v20)
    {
      __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v47);
      uint64_t v21 = (void *)sub_76620();

      __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_0((uint64_t)aBlock);
      uint64_t v21 = &_swiftEmptyArrayStorage;
    }
    uint64_t v22 = *(void *)(v6 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_player + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v24 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 208))(ObjectType, v22);
    uint64_t v38 = v8;
    uint64_t v36 = v7;
    if (v24)
    {
      uint64_t v25 = v24;
      [v24 duration];
    }
    uint64_t v26 = sub_773C0();
    uint64_t v28 = v27;
    v35[1] = *(void *)(v6 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_workQueue);
    uint64_t v29 = *(void *)(v6 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_presentationContext);
    uint64_t v30 = *(void *)(v6 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_alignmentCoordinator);
    sub_2A398(v39, (uint64_t)v50);
    uint64_t v31 = swift_allocObject();
    *(void *)(v31 + 16) = v43;
    sub_3015C(v50, v31 + 24);
    uint64_t v32 = v41;
    *(void *)(v31 + 64) = v40;
    *(void *)(v31 + 72) = v32;
    *(unsigned char *)(v31 + 80) = v42 & 1;
    *(void *)(v31 + 88) = v26;
    *(void *)(v31 + 96) = v28;
    *(void *)(v31 + 104) = v21;
    *(void *)(v31 + 112) = v30;
    *(void *)(v31 + 120) = v29;
    *(void *)(v31 + 128) = v6;
    uint64_t v48 = sub_49F9C;
    uint64_t v49 = v31;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_4CF00;
    uint64_t v47 = &block_descriptor_62;
    uint64_t v33 = _Block_copy(aBlock);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    sub_76510();
    uint64_t v45 = &_swiftEmptyArrayStorage;
    sub_45DA0(&qword_98570, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_99F30);
    sub_D034((unint64_t *)&qword_98578, (uint64_t *)&unk_99F30);
    uint64_t v34 = v36;
    sub_76FE0();
    sub_76CB0();
    _Block_release(v33);
    (*(void (**)(char *, uint64_t))(v38 + 8))(v10, v34);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v37);
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_46E44(unint64_t a1, void *a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v43 = a11;
  uint64_t v19 = sub_76500();
  uint64_t v48 = *(void *)(v19 - 8);
  uint64_t v49 = v19;
  __chkstk_darwin(v19);
  uint64_t v47 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_76520();
  uint64_t v45 = *(void *)(v21 - 8);
  uint64_t v46 = v21;
  __chkstk_darwin(v21);
  uint64_t v44 = (char *)&v42 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_99C98);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v42 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a5) {
    uint64_t v26 = a6;
  }
  else {
    uint64_t v26 = a3;
  }
  if (a5) {
    uint64_t v27 = a7;
  }
  else {
    uint64_t v27 = a4;
  }
  unint64_t v28 = sub_1D428(a2, v26, v27, a6, a7, a1);
  unint64_t v29 = (unint64_t)sub_1E4CC(a8, v28);
  swift_bridgeObjectRelease();
  sub_752D0();
  uint64_t v30 = sub_75770();
  uint64_t v31 = *(void *)(v30 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v25, 1, v30) == 1)
  {
    sub_CA50((uint64_t)v25, &qword_99C98);
  }
  else
  {
    uint64_t v32 = sub_75720();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v25, v30);
    aBlock[0] = v32;
    __swift_instantiateConcreteTypeFromMangledName(&qword_99D00);
    sub_D034(&qword_99D08, &qword_99D00);
    char v33 = sub_76B10();
    swift_bridgeObjectRelease();
    if (v33)
    {
      uint64_t v34 = sub_1F2AC(a10, v29);
      swift_bridgeObjectRelease();
      unint64_t v29 = v34;
    }
  }
  sub_FAEC(0, (unint64_t *)&qword_99F20);
  uint64_t v35 = (void *)sub_76CA0();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v43;
  *(void *)(v36 + 24) = v29;
  aBlock[4] = sub_4A05C;
  void aBlock[5] = v36;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_4CF00;
  void aBlock[3] = &block_descriptor_68;
  uint64_t v37 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  uint64_t v38 = v44;
  sub_76510();
  aBlock[0] = &_swiftEmptyArrayStorage;
  sub_45DA0(&qword_98570, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_99F30);
  sub_D034((unint64_t *)&qword_98578, (uint64_t *)&unk_99F30);
  uint64_t v39 = v47;
  uint64_t v40 = v49;
  sub_76FE0();
  sub_76CB0();
  _Block_release(v37);

  (*(void (**)(char *, uint64_t))(v48 + 8))(v39, v40);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v38, v46);
}

uint64_t sub_47300()
{
  uint64_t v24 = &_swiftEmptyDictionarySingleton;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();
  swift_release();
  uint64_t v0 = v25[0];
  if (v25[0] >> 62)
  {
LABEL_29:
    swift_bridgeObjectRetain_n();
    uint64_t v1 = sub_77180();
    swift_bridgeObjectRelease();
    if (v1) {
      goto LABEL_3;
    }
LABEL_25:
    swift_bridgeObjectRelease_n();
    unint64_t v21 = swift_bridgeObjectRetain();
    sub_4766C(v21, (uint64_t *)&v24);
    swift_bridgeObjectRelease();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_75C50();
    return swift_bridgeObjectRelease();
  }
  uint64_t v1 = *(void *)((char *)&dword_10 + (v25[0] & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v1) {
    goto LABEL_25;
  }
LABEL_3:
  unint64_t v2 = v0 & 0xC000000000000001;
  uint64_t v3 = 4;
  unint64_t v23 = v0 & 0xC000000000000001;
  while (1)
  {
    uint64_t v4 = v3 - 4;
    if (v2)
    {
      uint64_t v5 = sub_77080();
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v4, 1)) {
        goto LABEL_26;
      }
    }
    else
    {
      uint64_t v5 = *(void *)(v0 + 8 * v3);
      swift_retain();
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v4, 1))
      {
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
    }
    unint64_t v7 = *(void *)(v5 + 16);
    if (v7 >> 62 == 1) {
      break;
    }
    swift_release();
LABEL_5:
    ++v3;
    if (v6 == v1)
    {
      uint64_t v24 = &_swiftEmptyDictionarySingleton;
      goto LABEL_25;
    }
  }
  uint64_t v8 = v0;
  uint64_t v0 = v1;
  v25[0] = *(void *)((char *)&dword_10 + (v7 & 0x3FFFFFFFFFFFFFFFLL));
  memset(&v25[1], 0, 24);
  char v26 = 1;
  swift_retain();
  swift_retain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v11 = sub_6B400((uint64_t)v25);
  uint64_t v12 = *((void *)&_swiftEmptyDictionarySingleton + 2);
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_27;
  }
  char v15 = v10;
  if (*((void *)&_swiftEmptyDictionarySingleton + 3) >= v14)
  {
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v10) {
        goto LABEL_19;
      }
    }
    else
    {
      sub_6EBB8();
      if (v15) {
        goto LABEL_19;
      }
    }
LABEL_21:
    *((void *)&_swiftEmptyDictionarySingleton + (v11 >> 6) + 8) |= 1 << v11;
    sub_4A064((uint64_t)v25, *((void *)&_swiftEmptyDictionarySingleton + 6) + 40 * v11);
    *(void *)(*((void *)&_swiftEmptyDictionarySingleton + 7) + 8 * v11) = v5;
    uint64_t v18 = *((void *)&_swiftEmptyDictionarySingleton + 2);
    BOOL v19 = __OFADD__(v18, 1);
    uint64_t v20 = v18 + 1;
    if (v19) {
      goto LABEL_28;
    }
    *((void *)&_swiftEmptyDictionarySingleton + 2) = v20;
    swift_retain();
    goto LABEL_23;
  }
  sub_6E270(v14, isUniquelyReferenced_nonNull_native);
  unint64_t v16 = sub_6B400((uint64_t)v25);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_21;
    }
LABEL_19:
    *(void *)(*((void *)&_swiftEmptyDictionarySingleton + 7) + 8 * v11) = v5;
    swift_release();
LABEL_23:
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v1 = v0;
    uint64_t v0 = v8;
    unint64_t v2 = v23;
    goto LABEL_5;
  }
  uint64_t result = sub_77260();
  __break(1u);
  return result;
}

void *sub_4766C(unint64_t a1, uint64_t *a2)
{
  if (a1 >> 62) {
    goto LABEL_20;
  }
  uint64_t v3 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  while (1)
  {
    uint64_t result = &_swiftEmptyArrayStorage;
    if (!v3) {
      break;
    }
    uint64_t v22 = &_swiftEmptyArrayStorage;
    uint64_t result = (void *)sub_770D0();
    if (v3 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v5 = 0;
    while (v3 != v5)
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        uint64_t v6 = sub_77080();
      }
      else
      {
        uint64_t v6 = *(void *)(a1 + 8 * v5 + 32);
        swift_retain();
      }
      unint64_t v7 = *(void *)(v6 + 16);
      if (v7 >> 62 == 1)
      {
        uint64_t v8 = v7 & 0x3FFFFFFFFFFFFFFFLL;
        v20[0] = *(void *)((char *)&dword_10 + (v7 & 0x3FFFFFFFFFFFFFFFLL));
        memset(&v20[1], 0, 24);
        char v21 = 1;
        uint64_t v9 = *a2;
        if (*(void *)(*a2 + 16))
        {
          swift_retain();
          swift_retain();
          unint64_t v10 = sub_6B400((uint64_t)v20);
          if ((v11 & 1) != 0
            && (uint64_t v12 = *(void *)(*(void *)(v9 + 56) + 8 * v10),
                swift_retain(),
                swift_release(),
                unint64_t v13 = *(void *)(v12 + 16),
                v13 >> 62 == 1))
          {
            uint64_t v14 = v13 & 0x3FFFFFFFFFFFFFFFLL;
            char v15 = *(unsigned char *)(v8 + 32);
            *(void *)(v14 + 24) = *(void *)(v8 + 24);
            *(unsigned char *)(v14 + 32) = v15;
            char v16 = *(unsigned char *)(v8 + 48);
            *(void *)(v14 + 40) = *(void *)(v8 + 40);
            *(unsigned char *)(v14 + 48) = v16;
            char v17 = *(unsigned char *)(v8 + 64);
            *(void *)(v14 + 56) = *(void *)(v8 + 56);
            *(unsigned char *)(v14 + 64) = v17;
            char v18 = *(unsigned char *)(v8 + 80);
            *(void *)(v14 + 72) = *(void *)(v8 + 72);
            *(unsigned char *)(v14 + 80) = v18;
            swift_release();
            swift_release();
          }
          else
          {
            swift_release();
            swift_release();
          }
        }
      }
      ++v5;
      sub_770B0();
      sub_770E0();
      sub_770F0();
      sub_770C0();
      if (v3 == v5) {
        return v22;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_77180();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_478B0(uint64_t a1, double a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t v100 = a8;
  uint64_t v106 = sub_76500();
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v103 = (char *)&v97 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v104 = sub_76520();
  uint64_t v102 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v101 = (char *)&v97 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_75670();
  uint64_t v98 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  unint64_t v108 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_99060);
  __chkstk_darwin(v15 - 8);
  uint64_t v99 = (char *)&v97 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 && a6)
  {
    swift_retain();
    if (sub_41288(a7, a6))
    {
      uint64_t v17 = swift_retain();
      BOOL v18 = sub_48638(v17, a2);
      swift_release();
      if (v18)
      {
        uint64_t v19 = a1;
LABEL_52:
        swift_retain();
        unint64_t v61 = *(void *)(a1 + 16);
        if (v61 >> 62)
        {
          swift_release();
          swift_retain();
          uint64_t v78 = 0;
          uint64_t v79 = 0;
          char v80 = 1;
          uint64_t v81 = v19;
        }
        else
        {
          uint64_t v107 = v19;
          swift_retain();
          swift_retain();
          uint64_t v62 = swift_bridgeObjectRetain();
          uint64_t v63 = sub_49AF4(v62, a1, a2);
          swift_bridgeObjectRelease();
          uint64_t v114 = a1;
          swift_release();
          int64_t v64 = *((void *)v63 + 2);
          if (v64)
          {
            unint64_t v111 = v61;
            uint64_t aBlock = (void **)&_swiftEmptyArrayStorage;
            sub_4910C(0, v64, 0);
            char v65 = *(void (**)(char *, char *, uint64_t))(v98 + 16);
            uint64_t v66 = *(unsigned __int8 *)(v98 + 80);
            uint64_t v110 = (uint64_t)v63;
            long long v67 = &v63[(v66 + 32) & ~v66];
            uint64_t v112 = *(void *)(v98 + 72);
            uint64_t v113 = v65;
            uint64_t v68 = (void (**)(char *, uint64_t))(v98 + 8);
            do
            {
              uint64_t v70 = v108;
              uint64_t v69 = v109;
              v113(v108, v67, v109);
              uint64_t v71 = sub_75650();
              uint64_t v73 = v72;
              (*v68)(v70, v69);
              uint64_t v74 = aBlock;
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              {
                sub_4910C(0, (int64_t)v74[2] + 1, 1);
                uint64_t v74 = aBlock;
              }
              unint64_t v76 = (unint64_t)v74[2];
              unint64_t v75 = (unint64_t)v74[3];
              if (v76 >= v75 >> 1)
              {
                sub_4910C(v75 > 1, v76 + 1, 1);
                uint64_t v74 = aBlock;
              }
              v74[2] = (void *)(v76 + 1);
              uint64_t v77 = &v74[2 * v76];
              v77[4] = (void *)v71;
              v77[5] = v73;
              v67 += v112;
              --v64;
            }
            while (v64);
            swift_bridgeObjectRelease();
            unint64_t v61 = v111;
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v74 = (void **)&_swiftEmptyArrayStorage;
          }
          uint64_t aBlock = v74;
          __swift_instantiateConcreteTypeFromMangledName(&qword_99CA0);
          sub_D034(&qword_99CA8, &qword_99CA0);
          uint64_t v82 = sub_76880();
          uint64_t v84 = v83;
          swift_bridgeObjectRelease();
          uint64_t v85 = *(void *)(v61 + 56);
          uint64_t aBlock = *(void ***)(v61 + 48);
          uint64_t v118 = v85;
          uint64_t v115 = v82;
          uint64_t v116 = v84;
          uint64_t v86 = sub_75120();
          uint64_t v87 = (uint64_t)v99;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v99, 1, 1, v86);
          sub_C1AC();
          swift_bridgeObjectRetain();
          uint64_t v78 = sub_76FB0();
          uint64_t v79 = v88;
          LOBYTE(v82) = v89;
          swift_release();
          char v80 = v82 & 1;
          sub_CA50(v87, &qword_99060);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v81 = v114;
        }
        goto LABEL_69;
      }
    }
    swift_release();
  }
  if (!(a7 >> 62))
  {
    uint64_t v20 = *(void *)((char *)&dword_10 + (a7 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v20) {
      goto LABEL_9;
    }
LABEL_68:
    swift_bridgeObjectRelease();
    uint64_t v81 = 0;
    uint64_t v78 = 0;
    uint64_t v79 = 0;
    char v80 = 0;
    goto LABEL_69;
  }
LABEL_67:
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_77180();
  if (!v20) {
    goto LABEL_68;
  }
LABEL_9:
  uint64_t v107 = 0;
  unint64_t v21 = a7 & 0xC000000000000001;
  double v22 = INFINITY;
  uint64_t v23 = 4;
  uint64_t v112 = v20;
  uint64_t v113 = (void (*)(char *, char *, uint64_t))a7;
  unint64_t v111 = a7 & 0xC000000000000001;
  do
  {
    uint64_t v24 = v23 - 4;
    if (v21)
    {
      uint64_t v25 = sub_77080();
      uint64_t v26 = v23 - 3;
      if (__OFADD__(v24, 1)) {
        goto LABEL_66;
      }
    }
    else
    {
      uint64_t v25 = swift_retain();
      uint64_t v26 = v23 - 3;
      if (__OFADD__(v24, 1))
      {
LABEL_66:
        __break(1u);
        goto LABEL_67;
      }
    }
    uint64_t v27 = *(void *)(v25 + 16) >> 62;
    if (v27 > 1)
    {
      swift_release();
    }
    else
    {
      uint64_t v114 = v25;
      if (v27) {
        uint64_t v28 = sub_45DA0((unint64_t *)&unk_99F90, (void (*)(uint64_t))type metadata accessor for SilentContent);
      }
      else {
        uint64_t v28 = sub_45DA0(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
      }
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t))(v28 + 32);
      swift_retain();
      uint64_t v31 = v30(ObjectType, v28);
      char v33 = v32;
      swift_release();
      if ((v33 & 1) == 0)
      {
        uint64_t v110 = v31;
        uint64_t v34 = v27
            ? sub_45DA0((unint64_t *)&unk_99F90, (void (*)(uint64_t))type metadata accessor for SilentContent): sub_45DA0(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
        uint64_t v35 = swift_getObjectType();
        uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v34 + 56);
        swift_retain();
        v36(v35, v34);
        LOBYTE(v35) = v37;
        swift_release();
        if ((v35 & 1) == 0)
        {
          sub_76AC0();
          if (v38 <= a2)
          {
            sub_76AC0();
            if (v39 > a2)
            {
              swift_bridgeObjectRelease();
              swift_release();
              a1 = v114;
              uint64_t v19 = v114;
              goto LABEL_52;
            }
          }
        }
      }
      switch((int)v27)
      {
        case 1:
          uint64_t v41 = type metadata accessor for SilentContent;
          uint64_t v42 = (unint64_t *)&unk_99F90;
          goto LABEL_33;
        case 2:
          uint64_t v41 = type metadata accessor for SpeakerContent;
          uint64_t v42 = &qword_98D10;
          goto LABEL_33;
        case 3:
          uint64_t v41 = type metadata accessor for ChapterTitleContent;
          uint64_t v42 = (unint64_t *)&qword_99F80;
LABEL_33:
          uint64_t v40 = sub_45DA0(v42, (void (*)(uint64_t))v41);
          break;
        default:
          uint64_t v40 = sub_45DA0(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
          break;
      }
      uint64_t v43 = swift_getObjectType();
      uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t))(v40 + 32);
      swift_retain();
      uint64_t v45 = v44(v43, v40);
      char v47 = v46;
      swift_release();
      if (v47) {
        goto LABEL_48;
      }
      uint64_t v48 = v114;
      double v49 = *(double *)&v45;
      switch(*(void *)(v114 + 16) >> 62)
      {
        case 1:
          uint64_t v51 = type metadata accessor for SilentContent;
          uint64_t v52 = (unint64_t *)&unk_99F90;
          goto LABEL_41;
        case 2:
          uint64_t v51 = type metadata accessor for SpeakerContent;
          uint64_t v52 = &qword_98D10;
          goto LABEL_41;
        case 3:
          uint64_t v51 = type metadata accessor for ChapterTitleContent;
          uint64_t v52 = (unint64_t *)&qword_99F80;
LABEL_41:
          uint64_t v50 = sub_45DA0(v52, (void (*)(uint64_t))v51);
          break;
        default:
          uint64_t v50 = sub_45DA0(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
          break;
      }
      uint64_t v53 = swift_getObjectType();
      uint64_t v54 = *(uint64_t (**)(uint64_t, uint64_t))(v50 + 56);
      swift_retain();
      double v55 = COERCE_DOUBLE(v54(v53, v50));
      char v57 = v56;
      swift_release();
      if ((v57 & 1) != 0
        || ((double v58 = vabdd_f64(a2, v49), v59 = vabdd_f64(a2, v55), v59 >= v58) ? (v60 = v58) : (v60 = v59), v60 >= v22))
      {
LABEL_48:
        swift_release();
      }
      else
      {
        swift_release();
        double v22 = v60;
        uint64_t v107 = v48;
      }
      uint64_t v20 = v112;
      a7 = (unint64_t)v113;
      unint64_t v21 = v111;
    }
    ++v23;
  }
  while (v26 != v20);
  swift_bridgeObjectRelease();
  uint64_t v19 = v107;
  if (v107)
  {
    a1 = v107;
    goto LABEL_52;
  }
  uint64_t v81 = 0;
  uint64_t v78 = 0;
  uint64_t v79 = 0;
  char v80 = 0;
LABEL_69:
  sub_FAEC(0, (unint64_t *)&qword_99F20);
  char v90 = (void *)sub_76CA0();
  uint64_t v91 = swift_allocObject();
  *(void *)(v91 + 16) = v100;
  *(void *)(v91 + 24) = v81;
  *(void *)(v91 + 32) = v78;
  *(void *)(v91 + 40) = v79;
  *(unsigned char *)(v91 + 48) = v80;
  long long v121 = sub_49674;
  uint64_t v122 = v91;
  uint64_t aBlock = _NSConcreteStackBlock;
  uint64_t v118 = 1107296256;
  unint64_t v119 = sub_4CF00;
  uint64_t v120 = &block_descriptor_49;
  uint64_t v92 = _Block_copy(&aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  uint64_t v93 = v101;
  sub_76510();
  uint64_t aBlock = (void **)&_swiftEmptyArrayStorage;
  sub_45DA0(&qword_98570, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_99F30);
  sub_D034((unint64_t *)&qword_98578, (uint64_t *)&unk_99F30);
  uint64_t v94 = v103;
  uint64_t v95 = v106;
  sub_76FE0();
  sub_76CB0();
  _Block_release(v92);
  swift_release();

  swift_release();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v94, v95);
  return (*(uint64_t (**)(char *, uint64_t))(v102 + 8))(v93, v104);
}

BOOL sub_48638(uint64_t a1, double a2)
{
  uint64_t v2 = *(void *)(a1 + 16) >> 62;
  switch(v2)
  {
    case 1:
      uint64_t v5 = (unint64_t *)&unk_99F90;
      uint64_t v6 = type metadata accessor for SilentContent;
      goto LABEL_6;
    case 2:
      uint64_t v5 = &qword_98D10;
      uint64_t v6 = type metadata accessor for SpeakerContent;
      goto LABEL_6;
    case 3:
      uint64_t v5 = (unint64_t *)&qword_99F80;
      uint64_t v6 = type metadata accessor for ChapterTitleContent;
LABEL_6:
      uint64_t v4 = sub_45DA0(v5, (void (*)(uint64_t))v6);
      break;
    default:
      uint64_t v4 = sub_45DA0(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
      break;
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v4 + 32);
  swift_retain();
  v8(ObjectType, v4);
  char v10 = v9;
  swift_release();
  if (v10) {
    return 0;
  }
  switch((int)v2)
  {
    case 0:
      uint64_t v11 = sub_45DA0(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
      goto LABEL_14;
    case 1:
      uint64_t v12 = (unint64_t *)&unk_99F90;
      uint64_t v13 = type metadata accessor for SilentContent;
      goto LABEL_13;
    case 2:
      uint64_t v12 = &qword_98D10;
      uint64_t v13 = type metadata accessor for SpeakerContent;
      goto LABEL_13;
    case 3:
      uint64_t v12 = (unint64_t *)&qword_99F80;
      uint64_t v13 = type metadata accessor for ChapterTitleContent;
LABEL_13:
      uint64_t v11 = sub_45DA0(v12, (void (*)(uint64_t))v13);
LABEL_14:
      uint64_t v14 = swift_getObjectType();
      uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 56);
      swift_retain();
      v15(v14, v11);
      char v17 = v16;
      swift_release();
      if (v17) {
        return 0;
      }
      sub_76AC0();
      if (v18 > a2) {
        return 0;
      }
      sub_76AC0();
      BOOL result = v20 > a2;
      break;
    default:
      JUMPOUT(0);
  }
  return result;
}

uint64_t sub_48964(uint64_t a1, uint64_t a2, unint64_t a3, unint64_t a4, char a5)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A540);
  sub_D034(&qword_98D20, (uint64_t *)&unk_9A540);
  char v9 = sub_76B10();
  uint64_t result = swift_bridgeObjectRelease();
  if (v9)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_75C40();
    swift_release();
    uint64_t result = swift_release();
    if (v12)
    {
      if (a2)
      {
        swift_retain();
        swift_retain();
        char v11 = sub_45718(a2, a3, a4, a5 & 1, v12, v13, v14, v15 & 1);
        swift_release_n();
        uint64_t result = swift_release();
        if (v11) {
          return result;
        }
      }
      else
      {
        swift_release();
      }
LABEL_9:
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      swift_retain();
      return sub_75C50();
    }
    if (a2) {
      goto LABEL_9;
    }
  }
  return result;
}

uint64_t sub_48B74@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_48BF4()
{
  return sub_75C50();
}

unint64_t sub_48C78()
{
  unint64_t result = qword_9A2F0;
  if (!qword_9A2F0)
  {
    sub_FAEC(255, (unint64_t *)&qword_99F20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9A2F0);
  }
  return result;
}

uint64_t sub_48CE0()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_48D18(uint64_t *a1)
{
  return sub_441F0(a1);
}

uint64_t sub_48D20(uint64_t result, uint64_t a2, void **a3, uint64_t a4)
{
  return sub_44AB0(result, a2, a3, a4);
}

uint64_t sub_48D28()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_48D60(void *a1)
{
  return (*(uint64_t (**)(void, void, void, void))(v1 + 16))(*a1, a1[1], a1[2], a1[3]);
}

uint64_t sub_48D94()
{
  return sub_4664C();
}

double sub_48D9C@<D0>(double *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();
  swift_release();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_48E20()
{
  return sub_75C50();
}

uint64_t sub_48EA0()
{
  return sub_466F8();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t sub_48EC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_99BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_48F28()
{
  uint64_t v1 = sub_75370();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_48FF4(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_75370() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_46048(a1, v4, v5);
}

uint64_t sub_49078(unint64_t a1)
{
  return sub_46380(a1);
}

uint64_t sub_49080()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_490D0()
{
  return sub_478B0(*(void *)(v0 + 16), *(double *)(v0 + 64), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(void *)(v0 + 48), *(void *)(v0 + 56), *(void *)(v0 + 72));
}

uint64_t sub_490EC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_4914C(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_4910C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_492AC(a1, a2, a3, *v3);
  void *v3 = (char *)result;
  return result;
}

uint64_t sub_4912C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_49418(a1, a2, a3, (void *)*v3);
  uint64_t *v3 = result;
  return result;
}

uint64_t sub_4914C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_999D0);
    char v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    char v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    memcpy(v13, v14, 32 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_771D0();
  __break(1u);
  return result;
}

uint64_t sub_492AC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_99CB0);
    char v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    char v10 = (char *)&_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_771D0();
  __break(1u);
  return result;
}

uint64_t sub_49418(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_999C0);
  uint64_t v10 = *(void *)(sub_75670() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  void v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_75670() - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  double v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  unint64_t v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_771D0();
  __break(1u);
  return result;
}

uint64_t sub_49658()
{
  return objectdestroy_45Tm((void (*)(void))&_swift_release, 49);
}

uint64_t sub_49674()
{
  return sub_48964(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
}

uint64_t sub_49684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v7 = v6;
  uint64_t v44 = a5;
  uint64_t v45 = a6;
  uint64_t v42 = a3;
  uint64_t v43 = a4;
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_99C08);
  uint64_t v38 = *(void *)(v8 - 8);
  uint64_t v39 = v8;
  __chkstk_darwin(v8);
  char v37 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_99C00);
  uint64_t v10 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  unint64_t v12 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_99BF8);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_99BF0);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = 0;
  *(unsigned char *)(v7 + 40) = 0;
  *(void *)(v7 + 32) = 0;
  uint64_t v21 = v7 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver__elapsedTime;
  char v46 = 0;
  sub_75C00();
  (*(void (**)(uint64_t, char *, uint64_t))(v18 + 32))(v21, v20, v17);
  uint64_t v22 = v7 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver__activeParagraph;
  char v46 = 0;
  uint64_t v47 = 0;
  char v49 = 0;
  uint64_t v48 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A550);
  sub_75C00();
  (*(void (**)(uint64_t, char *, uint64_t))(v14 + 32))(v22, v16, v13);
  uint64_t v23 = v7 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver__alignedViewModels;
  char v46 = &_swiftEmptyArrayStorage;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A540);
  sub_75C00();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v23, v12, v36);
  uint64_t v24 = v7 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver__rawViewModels;
  char v46 = 0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_99AF0);
  uint64_t v25 = v37;
  sub_75C00();
  (*(void (**)(uint64_t, char *, uint64_t))(v38 + 32))(v24, v25, v39);
  uint64_t v26 = v7 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_avObserver;
  *(_OWORD *)uint64_t v26 = 0u;
  *(_OWORD *)(v26 + 16) = 0u;
  *(void *)(v26 + 32) = 0;
  *(void *)(v7 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_subscriptions) = &_swiftEmptyArrayStorage;
  *(void *)(v7 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_dynamicAdObserver) = 0;
  *(void *)(v7 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_displayLink) = 0;
  uint64_t v27 = (void *)(v7 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_player);
  uint64_t v28 = v41;
  *uint64_t v27 = v40;
  v27[1] = v28;
  uint64_t v29 = v43;
  *(void *)(v7 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_playbackController) = v42;
  *(void *)(v7 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_alignmentCoordinator) = v29;
  uint64_t v30 = v45;
  *(void *)(v7 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_presentationContext) = v44;
  *(void *)(v7 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_workQueue) = v30;
  uint64_t v31 = sub_766B0();
  swift_allocObject();
  swift_unknownObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  id v32 = v30;
  uint64_t v33 = sub_766A0();
  uint64_t v34 = (uint64_t *)(v7 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_chaptersProvider);
  v34[3] = v31;
  v34[4] = (uint64_t)&protocol witness table for ChaptersController;
  *uint64_t v34 = v33;
  sub_42B08();
  return v7;
}

char *sub_49AF4(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t v7 = sub_75670();
  __chkstk_darwin(v7);
  uint64_t v42 = (char *)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v35 - v12;
  uint64_t result = (char *)&_swiftEmptyArrayStorage;
  uint64_t v43 = (char *)&_swiftEmptyArrayStorage;
  uint64_t v15 = *(void *)(a1 + 16);
  if (v15)
  {
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16);
    uint64_t v16 = v10 + 16;
    unint64_t v37 = (*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64);
    uint64_t v38 = a2;
    uint64_t v18 = a1 + v37;
    v35[1] = v3;
    uint64_t v36 = (void (**)(char *, uint64_t))(v16 - 8);
    uint64_t v40 = (void (**)(char *, char *, uint64_t))(v16 + 16);
    uint64_t v41 = v17;
    uint64_t v19 = *(void *)(v16 + 56);
    uint64_t v39 = v16;
    v17(v13, a1 + v37, v7, v11);
    while (1)
    {
      sub_75660();
      double v22 = v21;
      switch(*(void *)(a2 + 16) >> 62)
      {
        case 1:
          uint64_t v24 = type metadata accessor for SilentContent;
          uint64_t v25 = (unint64_t *)&unk_99F90;
          goto LABEL_11;
        case 2:
          uint64_t v24 = type metadata accessor for SpeakerContent;
          uint64_t v25 = &qword_98D10;
          goto LABEL_11;
        case 3:
          uint64_t v24 = type metadata accessor for ChapterTitleContent;
          uint64_t v25 = (unint64_t *)&qword_99F80;
LABEL_11:
          uint64_t v23 = sub_45DA0(v25, (void (*)(uint64_t))v24);
          break;
        default:
          uint64_t v23 = sub_45DA0(&qword_98D18, (void (*)(uint64_t))type metadata accessor for TextContent);
          break;
      }
      uint64_t ObjectType = swift_getObjectType();
      swift_retain();
      *(double *)&uint64_t v27 = COERCE_DOUBLE(sub_2D90C(ObjectType, v23));
      char v29 = v28;
      swift_release();
      double v30 = *(double *)&v27;
      if (v29) {
        double v30 = 0.0;
      }
      if (v22 - v30 >= a3)
      {
        (*v36)(v13, v7);
      }
      else
      {
        uint64_t v31 = *v40;
        (*v40)(v42, v13, v7);
        id v32 = v43;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_4912C(0, *((void *)v32 + 2) + 1, 1);
          id v32 = v43;
        }
        unint64_t v34 = *((void *)v32 + 2);
        unint64_t v33 = *((void *)v32 + 3);
        if (v34 >= v33 >> 1)
        {
          sub_4912C(v33 > 1, v34 + 1, 1);
          id v32 = v43;
        }
        *((void *)v32 + 2) = v34 + 1;
        v31(&v32[v37 + v34 * v19], v42, v7);
        uint64_t v43 = v32;
        a2 = v38;
      }
      v18 += v19;
      if (!--v15) {
        return v43;
      }
      v41(v13, v18, v7, v20);
    }
  }
  return result;
}

uint64_t sub_49EC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_75710();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  return result;
}

uint64_t sub_49EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return sub_46814(a1, a2, a3, a4, a5 & 1);
}

uint64_t sub_49F00(uint64_t a1)
{
  return (*(uint64_t (**)(void, uint64_t, void, void, void))(v1 + 16))(*(void *)a1, a1 + 8, *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned __int8 *)(a1 + 64));
}

uint64_t sub_49F3C()
{
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(v0 + 24);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 136, 7);
}

uint64_t sub_49F9C()
{
  return sub_46E44(*(void *)(v0 + 16), (void *)(v0 + 24), *(void *)(v0 + 64), *(void *)(v0 + 72), *(unsigned char *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128));
}

uint64_t sub_49FE4()
{
  return objectdestroy_45Tm((void (*)(void))&_swift_bridgeObjectRelease, 32);
}

uint64_t objectdestroy_45Tm(void (*a1)(void), uint64_t a2)
{
  swift_release();
  a1(*(void *)(v2 + 24));

  return _swift_deallocObject(v2, a2, 7);
}

uint64_t sub_4A05C()
{
  return sub_47300();
}

uint64_t sub_4A064(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t type metadata accessor for StringTextPosition()
{
  return self;
}

void sub_4A1CC(uint64_t a1, char a2)
{
}

Swift::Int sub_4A200(uint64_t a1, char a2)
{
  return sub_77320();
}

unint64_t PlayerNotification_PeriodicUpdate.getter()
{
  return 0xD000000000000021;
}

unint64_t PlayerNotification_PlaystateDidChange.getter()
{
  return 0xD000000000000025;
}

unint64_t PlayerNotification_AutoStopModeDidChange.getter()
{
  return 0xD000000000000028;
}

unint64_t PlayerNotification_PlayerPathDidChange.getter()
{
  return 0xD000000000000026;
}

unint64_t PlayerNotification_CurrentChapterDidChange.getter()
{
  return 0xD00000000000002ALL;
}

unint64_t PlayerNotification_LoadedDurationDidChange.getter()
{
  return 0xD00000000000002ALL;
}

unint64_t PlayerNotification_PlayerVolumeDidChange.getter()
{
  return 0xD000000000000028;
}

unint64_t PlayerNotification_JumpDurationDidChange.getter()
{
  return 0xD000000000000028;
}

PodcastsTranscripts::PlayerPlaybackSpeed_optional __swiftcall PlayerPlaybackSpeed.init(rawValue:)(Swift::Float rawValue)
{
  if (rawValue == 0.75)
  {
    *uint64_t v1 = 0;
  }
  else if (rawValue == 1.0)
  {
    *uint64_t v1 = 1;
  }
  else if (rawValue == 1.25)
  {
    *uint64_t v1 = 2;
  }
  else if (rawValue == 1.5)
  {
    *uint64_t v1 = 3;
  }
  else
  {
    if (rawValue == 2.0) {
      char v2 = 5;
    }
    else {
      char v2 = 6;
    }
    if (rawValue == 1.75) {
      char v3 = 4;
    }
    else {
      char v3 = v2;
    }
    *uint64_t v1 = v3;
  }
  return result;
}

_UNKNOWN **static PlayerPlaybackSpeed.allCases.getter()
{
  return &off_8EF58;
}

float PlayerPlaybackSpeed.rawValue.getter()
{
  return flt_7B394[*v0];
}

Swift::Int sub_4A3D8()
{
  return sub_4A200(0, *v0);
}

void sub_4A3E4(uint64_t a1)
{
  sub_4A1CC(a1, *v1);
}

Swift::Int sub_4A3EC(uint64_t a1)
{
  return sub_4A200(a1, *v1);
}

PodcastsTranscripts::PlayerPlaybackSpeed_optional sub_4A3F4(Swift::Float *a1)
{
  return PlayerPlaybackSpeed.init(rawValue:)(*a1);
}

float sub_4A3FC@<S0>(float *a1@<X8>)
{
  float result = flt_7B394[*v1];
  *a1 = result;
  return result;
}

void sub_4A414(void *a1@<X8>)
{
  *a1 = &off_8EF58;
}

BOOL sub_4A424(char *a1, char *a2)
{
  return flt_7B394[*a1] == flt_7B394[*a2];
}

void PlayerAutoStopMode.hash(into:)()
{
  Swift::UInt64 v1 = *(void *)v0;
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    switch(v1)
    {
      case 1uLL:
        Swift::UInt v2 = 2;
        break;
      case 2uLL:
        Swift::UInt v2 = 3;
        break;
      case 3uLL:
        Swift::UInt v2 = 4;
        break;
      default:
        Swift::UInt v2 = 0;
        break;
    }
    sub_772E0(v2);
  }
  else
  {
    sub_772E0(1uLL);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v3 = v1;
    }
    else {
      Swift::UInt64 v3 = 0;
    }
    sub_77310(v3);
  }
}

BOOL static PlayerAutoStopMode.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    switch(*(void *)&v2)
    {
      case 1:
        if (*(void *)&v3 == 1) {
          char v8 = *(unsigned char *)(a2 + 8);
        }
        else {
          char v8 = 0;
        }
        if ((v8 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 2:
        if (*(void *)&v3 == 2) {
          char v6 = *(unsigned char *)(a2 + 8);
        }
        else {
          char v6 = 0;
        }
        if ((v6 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      case 3:
        if (*(void *)&v3 > 2uLL) {
          char v7 = *(unsigned char *)(a2 + 8);
        }
        else {
          char v7 = 0;
        }
        if ((v7 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
      default:
        if (v3 == 0.0) {
          char v4 = *(unsigned char *)(a2 + 8);
        }
        else {
          char v4 = 0;
        }
        if ((v4 & 1) == 0) {
          return 0;
        }
        BOOL result = 1;
        break;
    }
  }
  else
  {
    return (*(unsigned char *)(a2 + 8) & 1) == 0 && v2 == *(double *)a2;
  }
  return result;
}

Swift::Int PlayerAutoStopMode.hashValue.getter()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  sub_772D0();
  if (v2 == 1)
  {
    switch(v1)
    {
      case 1uLL:
        Swift::UInt v3 = 2;
        break;
      case 2uLL:
        Swift::UInt v3 = 3;
        break;
      case 3uLL:
        Swift::UInt v3 = 4;
        break;
      default:
        Swift::UInt v3 = 0;
        break;
    }
    sub_772E0(v3);
  }
  else
  {
    sub_772E0(1uLL);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v4 = v1;
    }
    else {
      Swift::UInt64 v4 = 0;
    }
    sub_77310(v4);
  }
  return sub_77320();
}

Swift::Int sub_4A678()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  sub_772D0();
  if (v2 == 1)
  {
    switch(v1)
    {
      case 1uLL:
        Swift::UInt v3 = 2;
        break;
      case 2uLL:
        Swift::UInt v3 = 3;
        break;
      case 3uLL:
        Swift::UInt v3 = 4;
        break;
      default:
        Swift::UInt v3 = 0;
        break;
    }
    sub_772E0(v3);
  }
  else
  {
    sub_772E0(1uLL);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v4 = v1;
    }
    else {
      Swift::UInt64 v4 = 0;
    }
    sub_77310(v4);
  }
  return sub_77320();
}

BOOL sub_4A740(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  if (*(unsigned char *)(a1 + 8) == 1)
  {
    switch(*(void *)&v2)
    {
      case 1:
        BOOL v4 = *(void *)&v3 == 1;
        goto LABEL_13;
      case 2:
        BOOL v4 = *(void *)&v3 == 2;
        goto LABEL_13;
      case 3:
        if (*(void *)&v3 > 2uLL) {
          int v6 = *(unsigned __int8 *)(a2 + 8);
        }
        else {
          int v6 = 0;
        }
        if (v6 != 1) {
          return 0;
        }
        goto LABEL_17;
      default:
        BOOL v4 = *(void *)&v3 == 0;
LABEL_13:
        if (v4) {
          char v7 = *(unsigned char *)(a2 + 8);
        }
        else {
          char v7 = 0;
        }
        if ((v7 & 1) == 0) {
          return 0;
        }
LABEL_17:
        BOOL result = 1;
        break;
    }
  }
  else
  {
    return (*(unsigned char *)(a2 + 8) & 1) == 0 && v2 == *(double *)a2;
  }
  return result;
}

uint64_t PlayerPlaybackSpeed.localizedName.getter()
{
  if (qword_98010 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_99D70;
  Class isa = sub_76AF0().super.super.isa;
  id v2 = [v0 stringForObjectValue:isa];

  if (v2)
  {
    uint64_t v3 = sub_76910();
    unint64_t v5 = v4;
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v5 = 0;
  }
  int v6 = (objc_class *)[self mainBundle];
  v13._countAndFlagsBits = 0x800000000007F400;
  v14._object = (void *)0x800000000007F3E0;
  v14._countAndFlagsBits = 0xD000000000000013;
  v15.value._countAndFlagsBits = 0;
  v15.value._object = 0;
  v7.super.Class isa = v6;
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  sub_75060(v14, v15, v7, v16, v13);

  __swift_instantiateConcreteTypeFromMangledName(&qword_98C08);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_78AC0;
  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 64) = sub_1C808();
  uint64_t v9 = 3157553;
  if (v5) {
    uint64_t v9 = v3;
  }
  unint64_t v10 = 0xE300000000000000;
  if (v5) {
    unint64_t v10 = v5;
  }
  *(void *)(v8 + 32) = v9;
  *(void *)(v8 + 40) = v10;
  uint64_t v11 = sub_768E0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t PlayerAutoStopMode.localizedName.getter()
{
  double v1 = *(double *)v0;
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    if ((unint64_t)(*(void *)&v1 - 2) >= 2)
    {
      if (v1 == 0.0)
      {
        id v2 = (objc_class *)[self mainBundle];
        v22._countAndFlagsBits = 0xE000000000000000;
        v9._countAndFlagsBits = 6710863;
        v9._object = (void *)0xE300000000000000;
LABEL_14:
        v26.value._countAndFlagsBits = 0;
        v26.value._object = 0;
        v16.super.Class isa = v2;
        v29._countAndFlagsBits = 0;
        v29._object = (void *)0xE000000000000000;
        uint64_t v17 = sub_75060(v9, v26, v16, v29, v22);

        return v17;
      }
      id v2 = (objc_class *)[self mainBundle];
      v22._countAndFlagsBits = 0xE000000000000000;
      uint64_t v3 = "When chapter ends";
    }
    else
    {
      id v2 = (objc_class *)[self mainBundle];
      v22._countAndFlagsBits = 0xE000000000000000;
      uint64_t v3 = "When episode ends";
    }
    v9._object = (void *)((unint64_t)(v3 - 32) | 0x8000000000000000);
    v9._countAndFlagsBits = 0xD000000000000011;
    goto LABEL_14;
  }
  if (*(double *)v0 == 3600.0)
  {
    unint64_t v4 = (objc_class *)[self mainBundle];
    v22._countAndFlagsBits = 0xE600000000000000;
    v23._countAndFlagsBits = 0x72756F68206925;
    v23._object = (void *)0xE700000000000000;
    v25.value._countAndFlagsBits = 0;
    v25.value._object = 0;
    v5.super.Class isa = v4;
    v28._countAndFlagsBits = 0;
    v28._object = (void *)0xE000000000000000;
    sub_75060(v23, v25, v5, v28, v22);

    __swift_instantiateConcreteTypeFromMangledName(&qword_98C08);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_78AC0;
    *(void *)(v6 + 56) = &type metadata for Int;
    *(void *)(v6 + 64) = &protocol witness table for Int;
    *(void *)(v6 + 32) = 1;
    uint64_t v7 = sub_768E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
    if (qword_98010 != -1) {
      swift_once();
    }
    unint64_t v10 = (void *)qword_99D70;
    Class isa = sub_76AB0().super.super.isa;
    id v12 = [v10 stringForObjectValue:isa];

    if (v12)
    {
      uint64_t v13 = sub_76910();
      unint64_t v15 = v14;
    }
    else
    {
      sub_76AD0();
      uint64_t v13 = 0;
      unint64_t v15 = 0xE000000000000000;
    }
    uint64_t v18 = (objc_class *)[self mainBundle];
    v22._countAndFlagsBits = 0xE000000000000000;
    v24._countAndFlagsBits = 0x74756E696D204025;
    v24._object = (void *)0xEA00000000007365;
    v27.value._countAndFlagsBits = 0;
    v27.value._object = 0;
    v19.super.Class isa = v18;
    v30._countAndFlagsBits = 0;
    v30._object = (void *)0xE000000000000000;
    sub_75060(v24, v27, v19, v30, v22);

    __swift_instantiateConcreteTypeFromMangledName(&qword_98C08);
    uint64_t v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_78AC0;
    *(void *)(v20 + 56) = &type metadata for String;
    *(void *)(v20 + 64) = sub_1C808();
    *(void *)(v20 + 32) = v13;
    *(void *)(v20 + 40) = v15;
    uint64_t v21 = sub_768E0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v21;
  }
}

id sub_4AD90()
{
  id v0 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v0 setMinimumFractionDigits:0];
  [v0 setMaximumFractionDigits:2];
  id result = [v0 setNumberStyle:1];
  qword_99D70 = (uint64_t)v0;
  return result;
}

unint64_t sub_4AE0C()
{
  unint64_t result = qword_99D78;
  if (!qword_99D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_99D78);
  }
  return result;
}

unint64_t sub_4AE64()
{
  unint64_t result = qword_99D80;
  if (!qword_99D80)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_99D88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_99D80);
  }
  return result;
}

unint64_t sub_4AEC4()
{
  unint64_t result = qword_99D90;
  if (!qword_99D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_99D90);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PlayerPlaybackSpeed(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PlayerPlaybackSpeed(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x4B074);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayerPlaybackSpeed()
{
  return &type metadata for PlayerPlaybackSpeed;
}

uint64_t getEnumTagSinglePayload for PlayerAutoStopMode(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for PlayerAutoStopMode(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)unint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_4B0FC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_4B118(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)unint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for PlayerAutoStopMode()
{
  return &type metadata for PlayerAutoStopMode;
}

uint64_t dispatch thunk of PlayerProtocol.playerPathCoordinator.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of PlayerProtocol.playbackPlayerPath.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of PlayerProtocol.route.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of PlayerProtocol.route.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PlayerProtocol.route.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of PlayerProtocol.playerID.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t dispatch thunk of PlayerProtocol.avPlayer.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of PlayerProtocol.isHandoffEnabled.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of PlayerProtocol.isHandoffEnabled.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 72))();
}

uint64_t dispatch thunk of PlayerProtocol.isHandoffEnabled.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of PlayerProtocol.isTargetPlaying.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of PlayerProtocol.isLocal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of PlayerProtocol.localPlaybackRequested.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of PlayerProtocol.localHasChapters.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of PlayerProtocol.localChapterIndex.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of PlayerProtocol.localChapterCount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 128))();
}

uint64_t dispatch thunk of PlayerProtocol.localLoadedDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of PlayerProtocol.localTotalDuration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of PlayerProtocol.currentItemDescriptionHasHTML.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 152))();
}

uint64_t dispatch thunk of PlayerProtocol.currentItemPlainEpisodeNotes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 160))();
}

uint64_t dispatch thunk of PlayerProtocol.currentItemEpisodeNotes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of PlayerProtocol.currentItemIsLocal.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t dispatch thunk of PlayerProtocol.volume.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 184))();
}

uint64_t dispatch thunk of PlayerProtocol.volume.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 192))();
}

uint64_t dispatch thunk of PlayerProtocol.volume.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 200))();
}

uint64_t dispatch thunk of PlayerProtocol.currentItem.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 208))();
}

uint64_t dispatch thunk of PlayerProtocol.infoCenterDataSourceQueue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 216))();
}

uint64_t dispatch thunk of PlayerProtocol.placeholderArtwork(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 224))();
}

uint64_t dispatch thunk of PlayerProtocol.explicitCharacter.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 232))();
}

uint64_t dispatch thunk of PlayerProtocol.isLocalVideo.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 240))();
}

uint64_t dispatch thunk of PlayerProtocol.videoViewController.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 248))();
}

uint64_t dispatch thunk of PlayerProtocol.presentationSize.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 256))();
}

uint64_t dispatch thunk of PlayerProtocol.playbackSpeed(for:)(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 264))();
}

uint64_t dispatch thunk of PlayerProtocol.incrementPlaybackSpeed(playbackSpeed:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 272))();
}

uint64_t dispatch thunk of PlayerProtocol.playbackSpeedMenu.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 280))();
}

uint64_t dispatch thunk of PlayerProtocol.playbackSpeedMenuPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 288))();
}

uint64_t dispatch thunk of PlayerProtocol.autoStopTimeRemaining.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 296))();
}

uint64_t dispatch thunk of PlayerProtocol.autoStopEnabled()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 304))();
}

uint64_t dispatch thunk of PlayerProtocol.autoStopMode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 312))();
}

uint64_t dispatch thunk of PlayerProtocol.autoStopMode.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 320))();
}

uint64_t dispatch thunk of PlayerProtocol.autoStopMode.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 328))();
}

uint64_t dispatch thunk of PlayerProtocol.isPlayingVideoFullScreen.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 336))();
}

uint64_t sub_4B538()
{
  uint64_t v1 = v0;
  sub_77060(19);
  swift_bridgeObjectRelease();
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts15StringTextRange_startPosition);
  id v3 = [v2 description];
  uint64_t v4 = sub_76910();
  unsigned int v6 = v5;

  v13._countAndFlagsBits = v4;
  v13._object = v6;
  sub_76970(v13);

  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0x203A646E45202CLL;
  v14._object = (void *)0xE700000000000000;
  sub_76970(v14);
  id v7 = *(id *)(v1 + OBJC_IVAR____TtC19PodcastsTranscripts15StringTextRange_endPosition);
  id v8 = [v7 description];
  uint64_t v9 = sub_76910();
  uint64_t v11 = v10;

  v15._countAndFlagsBits = v9;
  v15._object = v11;
  sub_76970(v15);

  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 46;
  v16._object = (void *)0xE100000000000000;
  sub_76970(v16);
  return 0x203A7472617453;
}

uint64_t type metadata accessor for StringTextRange()
{
  return self;
}

uint64_t sub_4B720()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_4B798(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t *a9)
{
  int v33 = a8;
  uint64_t v32 = a7;
  int v31 = a6;
  uint64_t v30 = a5;
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_99DD8);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *a9;
  uint64_t v28 = a9[1];
  uint64_t v29 = v18;
  uint64_t v19 = a9[2];
  uint64_t v26 = a9[3];
  uint64_t v27 = v19;
  int v20 = *((unsigned __int8 *)a9 + 32);
  *(void *)(v9 + 24) = 0;
  *(unsigned char *)(v9 + 32) = 1;
  *(void *)(v9 + 40) = 0;
  *(unsigned char *)(v9 + 48) = 1;
  *(void *)(v9 + 56) = 0;
  *(unsigned char *)(v9 + 64) = 1;
  *(void *)(v9 + 72) = 0;
  *(unsigned char *)(v9 + 80) = 1;
  uint64_t v21 = v9 + OBJC_IVAR____TtC19PodcastsTranscripts13SilentContent__viewState;
  long long v34 = xmmword_79880;
  sub_75C00();
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(v21, v17, v14);
  *(void *)(v9 + 24) = a1;
  *(unsigned char *)(v9 + 32) = a2 & 1;
  *(void *)(v9 + 40) = a3;
  *(unsigned char *)(v9 + 48) = a4 & 1;
  *(void *)(v9 + 56) = v30;
  *(unsigned char *)(v9 + 64) = v31 & 1;
  *(void *)(v9 + 72) = v32;
  *(unsigned char *)(v9 + 80) = v33 & 1;
  if (v20 == 255)
  {
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v22 = swift_allocObject();
    uint64_t v23 = v28;
    *(void *)(v22 + 16) = v29;
    *(void *)(v22 + 24) = v23;
    uint64_t v24 = v26;
    *(void *)(v22 + 32) = v27;
    *(void *)(v22 + 40) = v24;
    *(unsigned char *)(v22 + 48) = v20;
  }
  *(void *)(v9 + 16) = v22;
  return v9;
}

unint64_t SilentContent.ID.description.getter()
{
  uint64_t v1 = *v0;
  if (!*v0) {
    return 0xD000000000000018;
  }
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(v1 + 40);
  char v6 = *(unsigned char *)(v1 + 48);
  sub_8944(v2, v3, v4, v5, v6);
  sub_77060(26);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = TranscriptContentViewModel.ID.description.getter();
  sub_76970(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 41;
  v9._object = (void *)0xE100000000000000;
  sub_76970(v9);
  sub_88A0(v2, v3, v4, v5, v6);
  return 0xD000000000000017;
}

void SilentContent.ID.hash(into:)(uint64_t a1)
{
  if (*v1)
  {
    sub_772E0(1uLL);
    TranscriptContentViewModel.ID.hash(into:)(a1);
  }
  else
  {
    sub_772E0(0);
  }
}

Swift::Int SilentContent.ID.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_772D0();
  if (v1)
  {
    sub_772E0(1uLL);
    TranscriptContentViewModel.ID.hash(into:)((uint64_t)v3);
  }
  else
  {
    sub_772E0(0);
  }
  return sub_77320();
}

Swift::Int sub_4BBB0()
{
  uint64_t v1 = *v0;
  sub_772D0();
  if (v1)
  {
    sub_772E0(1uLL);
    TranscriptContentViewModel.ID.hash(into:)((uint64_t)v3);
  }
  else
  {
    sub_772E0(0);
  }
  return sub_77320();
}

uint64_t SilentContent.id.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_retain();
}

double sub_4BC4C@<D0>(_OWORD *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_4BCCC(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_98C4(v1);
  swift_retain();
  return sub_75C50();
}

uint64_t SilentContent.deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19PodcastsTranscripts13SilentContent__viewState;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_99DD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t SilentContent.__deallocating_deinit()
{
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC19PodcastsTranscripts13SilentContent__viewState;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_99DD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(unsigned int *)(*(void *)v0 + 48);
  uint64_t v4 = *(unsigned __int16 *)(*(void *)v0 + 52);

  return _swift_deallocClassInstance(v0, v3, v4);
}

uint64_t sub_4BE70()
{
  return *(void *)(v0 + 24);
}

uint64_t sub_4BE7C()
{
  return *(void *)(v0 + 40);
}

uint64_t sub_4BE88()
{
  return *(void *)(v0 + 56);
}

uint64_t sub_4BE94(uint64_t result, char a2)
{
  *(void *)(v2 + 56) = result;
  *(unsigned char *)(v2 + 64) = a2 & 1;
  return result;
}

uint64_t sub_4BEA4()
{
  return *(void *)(v0 + 72);
}

uint64_t sub_4BEB0(uint64_t result, char a2)
{
  *(void *)(v2 + 72) = result;
  *(unsigned char *)(v2 + 80) = a2 & 1;
  return result;
}

uint64_t sub_4BEC0()
{
  return sub_75C50();
}

uint64_t sub_4BF3C@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(*(void *)v1 + 16);
  return swift_retain();
}

uint64_t SilentContent.description.getter()
{
  sub_77060(108);
  v1._object = (void *)0x800000000007F550;
  v1._countAndFlagsBits = 0xD000000000000014;
  sub_76970(v1);
  swift_retain();
  v2._countAndFlagsBits = SilentContent.ID.description.getter();
  sub_76970(v2);
  swift_release();
  swift_bridgeObjectRelease();
  v3._countAndFlagsBits = 0xD000000000000016;
  v3._object = (void *)0x800000000007F570;
  sub_76970(v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_99510);
  v4._countAndFlagsBits = sub_76920();
  sub_76970(v4);
  swift_bridgeObjectRelease();
  v5._object = (void *)0x800000000007ED90;
  v5._countAndFlagsBits = 0xD000000000000014;
  sub_76970(v5);
  v6._countAndFlagsBits = sub_76920();
  sub_76970(v6);
  swift_bridgeObjectRelease();
  v7._countAndFlagsBits = 0xD000000000000013;
  v7._object = (void *)0x800000000007EDB0;
  sub_76970(v7);
  v8._countAndFlagsBits = sub_76920();
  sub_76970(v8);
  swift_bridgeObjectRelease();
  v9._countAndFlagsBits = 0xD000000000000011;
  v9._object = (void *)0x800000000007EDD0;
  sub_76970(v9);
  v10._countAndFlagsBits = sub_76920();
  sub_76970(v10);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_4C144()
{
  return SilentContent.description.getter();
}

uint64_t _s19PodcastsTranscripts13SilentContentC2IDO2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (!*a1)
  {
    if (!v3)
    {
      char v8 = 1;
      return v8 & 1;
    }
    goto LABEL_5;
  }
  if (!v3)
  {
LABEL_5:
    char v8 = 0;
    return v8 & 1;
  }
  char v4 = *(unsigned char *)(v2 + 48);
  char v5 = *(unsigned char *)(v3 + 48);
  long long v6 = *(_OWORD *)(v2 + 32);
  v12[0] = *(_OWORD *)(v2 + 16);
  v12[1] = v6;
  char v13 = v4;
  long long v7 = *(_OWORD *)(v3 + 32);
  v10[0] = *(_OWORD *)(v3 + 16);
  v10[1] = v7;
  char v11 = v5;
  swift_retain();
  swift_retain();
  char v8 = _s19PodcastsTranscripts26TranscriptContentViewModelC2IDO2eeoiySbAE_AEtFZ_0((uint64_t)v12, (uint64_t)v10);
  swift_release();
  swift_release();
  return v8 & 1;
}

unint64_t sub_4C210()
{
  unint64_t result = qword_99DE0;
  if (!qword_99DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_99DE0);
  }
  return result;
}

unint64_t sub_4C264(uint64_t a1)
{
  unint64_t result = sub_4C28C();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_4C28C()
{
  unint64_t result = qword_99DE8;
  if (!qword_99DE8)
  {
    type metadata accessor for SilentContent();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_99DE8);
  }
  return result;
}

uint64_t type metadata accessor for SilentContent()
{
  uint64_t result = qword_99E20;
  if (!qword_99E20) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_4C334()
{
  unint64_t result = qword_99DF0;
  if (!qword_99DF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_99DF0);
  }
  return result;
}

uint64_t sub_4C388()
{
  return type metadata accessor for SilentContent();
}

void sub_4C390()
{
  sub_4C454();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for SilentContent(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for SilentContent);
}

void sub_4C454()
{
  if (!qword_99E30)
  {
    unint64_t v0 = sub_75C60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_99E30);
    }
  }
}

void *initializeBufferWithCopyOfBuffer for SilentContent.ID(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

void *assignWithCopy for SilentContent.ID(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for SilentContent.ID(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SilentContent.ID(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SilentContent.ID(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_4C5F0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_4C608(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for SilentContent.ID()
{
  return &type metadata for SilentContent.ID;
}

uint64_t sub_4C640()
{
  sub_88A0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));

  return _swift_deallocObject(v0, 49, 7);
}

id sub_4C684()
{
  uint64_t v1 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___dataSource;
  unsigned int v2 = *(void **)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___dataSource);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___dataSource);
  }
  else
  {
    char v4 = (void *)sub_53B34();
    char v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    unsigned int v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_4C6E4()
{
  uint64_t v1 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___liveObserver;
  if (*(void *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___liveObserver))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___liveObserver);
  }
  else
  {
    uint64_t v3 = v0;
    uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_player);
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_player + 8);
    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_playbackController);
    uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_alignmentCoordinator);
    uint64_t v8 = *(void *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_presentationContext);
    sub_FAEC(0, (unint64_t *)&qword_99F20);
    swift_unknownObjectRetain();
    swift_retain();
    swift_retain();
    swift_retain();
    Swift::String v9 = (void *)sub_76C30();
    type metadata accessor for LiveTranscriptObserver();
    swift_allocObject();
    uint64_t v2 = sub_49684(v4, v5, v6, v7, v8, v9);
    swift_unknownObjectRelease();
    swift_release();
    swift_release();
    swift_release();

    *(void *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

unint64_t sub_4C830(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_98020);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_75190();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_OWORD *)uint64_t v16 = *(_OWORD *)a1;
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 24);
  char v11 = *(unsigned char *)(a1 + 32);
  id v12 = sub_4C684();
  *(_OWORD *)&v16[3] = *(_OWORD *)v16;
  v16[5] = v9;
  v16[6] = v10;
  char v17 = v11;
  sub_75AE0();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_CA50((uint64_t)v4, &qword_98020);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  uint64_t v13 = sub_4CA30();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v13) {
    return 0;
  }
  unint64_t v14 = *(void *)(v13 + 16);
  if (v14 >> 62)
  {
    swift_release();
    return 0;
  }
  swift_retain();
  swift_release();
  return v14;
}

uint64_t sub_4CA30()
{
  uint64_t v1 = sub_75170();
  uint64_t v2 = (uint64_t *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_viewModels);
  swift_beginAccess();
  if (!((unint64_t)*v2 >> 62))
  {
    if (v1 < *(void *)((char *)&dword_10 + (*v2 & 0xFFFFFFFFFFFFFF8))) {
      goto LABEL_3;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_77180();
  swift_bridgeObjectRelease();
  if (v1 >= v7) {
    return 0;
  }
LABEL_3:
  unint64_t v3 = sub_75170();
  uint64_t result = swift_beginAccess();
  uint64_t v5 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    uint64_t v6 = sub_77080();
    goto LABEL_7;
  }
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(void *)((char *)&dword_10 + (v5 & 0xFFFFFFFFFFFFFF8)))
  {
    uint64_t v6 = *(void *)(v5 + 8 * v3 + 32);
    swift_retain();
LABEL_7:
    swift_endAccess();
    return v6;
  }
  __break(1u);
  return result;
}

unsigned char *sub_4CB58()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A5F0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin();
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___collectionView;
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___collectionView);
  if (v7)
  {
    uint64_t v8 = *(unsigned char **)(v0
                   + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___collectionView);
  }
  else
  {
    id v9 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
    aBlock[4] = sub_62088;
    void aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_63130;
    void aBlock[3] = &block_descriptor_187;
    uint64_t v10 = _Block_copy(aBlock);
    id v11 = [v9 initWithSectionProvider:v10];
    _Block_release(v10);
    swift_release();
    id v12 = (objc_class *)type metadata accessor for TranscriptCollectionView();
    uint64_t v13 = objc_allocWithZone(v12);
    v13[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptCollectionView_mode] = 1;
    *(void *)&v13[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptCollectionView_subscriptions] = &_swiftEmptyArrayStorage;
    *(void *)&v13[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptCollectionView____lazy_storage____verticalScrollIndicator] = 1;
    v20.receiver = v13;
    v20.super_class = v12;
    id v14 = v11;
    uint64_t v15 = [super initWithFrame:v14 collectionViewLayout:0.0, 0.0, 0.0, 0.0];
    v15[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptCollectionView_mode] = 1;
    swift_getKeyPath();
    uint64_t v16 = v15;
    sub_750F0();
    swift_release();
    swift_allocObject();
    swift_unknownObjectWeakInit();
    sub_D034(&qword_9A5F8, &qword_9A5F0);
    sub_75D80();
    swift_release();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A2D0);
    sub_D034(&qword_98528, (uint64_t *)&unk_9A2D0);
    sub_75BA0();
    swift_endAccess();

    swift_release();
    [v16 setDelegate:v1];
    [v16 setClipsToBounds:0];
    [v16 setTranslatesAutoresizingMaskIntoConstraints:0];

    char v17 = *(void **)(v1 + v6);
    *(void *)(v1 + v6) = v16;
    uint64_t v8 = v16;

    uint64_t v7 = 0;
  }
  id v18 = v7;
  return v8;
}

uint64_t sub_4CF00(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_4CF44()
{
  return sub_75F50();
}

uint64_t sub_4CF68(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A648);
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_75F60();
}

uint64_t sub_4D034@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_64288((unint64_t *)&qword_9A3D0, 255, (void (*)(uint64_t))type metadata accessor for TranscriptPresentationContext);
  sub_75540();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 16);
  return result;
}

uint64_t sub_4D0E0()
{
  return swift_release();
}

uint64_t sub_4D1B4(uint64_t a1)
{
  uint64_t v2 = sub_753F0();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_75F40();
}

uint64_t sub_4D27C()
{
  return sub_75F70();
}

double sub_4D2A0@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_64288((unint64_t *)&qword_9A1F0, 255, (void (*)(uint64_t))type metadata accessor for TextContent);
  sub_75540();
  swift_release();
  double result = *(double *)(v3
                     + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__durationFromPlayerStartTimeToFirstWordTime);
  *a2 = result;
  return result;
}

uint64_t sub_4D354()
{
  return swift_release();
}

id TranscriptViewController.__allocating_init(asPartOf:nowPlayingViewModel:transcriptSyncingStateObserver:playerStylePublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_allocWithZone(v4);
  id v10 = sub_63C5C(a1, a2, a3, a4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v10;
}

id TranscriptViewController.init(asPartOf:nowPlayingViewModel:transcriptSyncingStateObserver:playerStylePublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v4 = sub_63C5C(a1, a2, a3, a4);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v4;
}

Swift::Void __swiftcall TranscriptViewController.viewDidLoad()()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_99EE8);
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24.receiver = v1;
  v24.super_class = ObjectType;
  [super viewDidLoad:v5];
  id v8 = [v1 view];
  if (!v8)
  {
    __break(1u);
    goto LABEL_8;
  }
  id v9 = v8;
  id v10 = sub_4D948();
  [v9 addInteraction:v10];

  id v11 = [v1 view];
  if (!v11)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v12 = v11;
  [v11 _setOverrideUserInterfaceRenderingMode:2];

  id v13 = [v1 view];
  if (!v13)
  {
LABEL_9:
    __break(1u);
    return;
  }
  id v14 = v13;
  [v13 _setOverrideVibrancyTrait:1];

  sub_4D9C0();
  sub_4F0B4();
  sub_4F86C();
  sub_4FD80();
  sub_5009C();
  id v15 = [self _applePodcastsFoundationSharedUserDefaults];
  swift_bridgeObjectRetain();
  NSString v16 = sub_768D0();
  swift_bridgeObjectRelease();
  unsigned __int8 v17 = [v15 BOOLForKey:v16];

  if ((v17 & 1) == 0)
  {
    Class isa = sub_76A30().super.super.isa;
    swift_bridgeObjectRetain();
    NSString v19 = sub_768D0();
    swift_bridgeObjectRelease();
    [v15 setValue:isa forKey:v19];

    id v15 = v19;
  }

  v23[1] = *(void *)&v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_playerStylePublisher];
  __swift_instantiateConcreteTypeFromMangledName(&qword_99EF8);
  sub_D034(&qword_99F00, &qword_99EF8);
  sub_64288(&qword_99F08, 255, (void (*)(uint64_t))&type metadata accessor for NowPlayingViewModel.PlayerStyle);
  sub_75D70();
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v21 = sub_50398();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v20;
  *(void *)(v22 + 24) = v21;
  sub_D034(&qword_99F10, &qword_99EE8);
  sub_75D80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  swift_beginAccess();
  sub_75B90();
  swift_endAccess();
  swift_release();
}

id sub_4D948()
{
  uint64_t v1 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___findInteraction;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___findInteraction);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___findInteraction);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIFindInteraction) initWithSessionDelegate:v0];
    double v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

uint64_t sub_4D9C0()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A3F8);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v115 = v1;
  uint64_t v116 = v2;
  __chkstk_darwin(v1);
  uint64_t v113 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A400);
  uint64_t v119 = *(void *)(v117 - 8);
  __chkstk_darwin(v117);
  uint64_t v114 = (char *)&v72 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v112 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A408);
  uint64_t v120 = *(void *)(v112 - 8);
  __chkstk_darwin(v112);
  unint64_t v111 = (char *)&v72 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A410);
  uint64_t v105 = *(void *)(v106 - 8);
  __chkstk_darwin(v106);
  uint64_t v102 = (char *)&v72 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A418);
  uint64_t v108 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v103 = (char *)&v72 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A420);
  uint64_t v110 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v104 = (char *)&v72 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_99D10);
  uint64_t v101 = *(void *)(v100 - 8);
  __chkstk_darwin(v100);
  uint64_t v99 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = (void *)sub_76C80();
  uint64_t v93 = *(v94 - 1);
  __chkstk_darwin(v94);
  char v90 = (char *)&v72 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A430);
  uint64_t v85 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  char v80 = (char *)&v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A438);
  uint64_t v87 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v81 = (char *)&v72 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A440);
  uint64_t v89 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v82 = (char *)&v72 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A448);
  uint64_t v92 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v83 = (char *)&v72 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A280);
  __chkstk_darwin(v15 - 8);
  uint64_t v77 = (char *)&v72 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A450);
  uint64_t v96 = *(void (***)(char *, uint64_t))(v17 - 8);
  __chkstk_darwin(v17);
  NSString v19 = (char *)&v72 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_99CC0);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A460);
  uint64_t v123 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  Swift::String_optional v25 = (char *)&v72 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A468);
  uint64_t v75 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v27 = (char *)&v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A470);
  uint64_t v78 = *(void *)(v76 - 8);
  __chkstk_darwin(v76);
  uint64_t v73 = (char *)&v72 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = v0;
  sub_4C6E4();
  swift_beginAccess();
  uint64_t v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_99C00);
  uint64_t v95 = v25;
  sub_75C10();
  swift_endAccess();
  swift_release();
  sub_752C0();
  sub_75340();
  uint64_t v79 = &protocol conformance descriptor for Published<A>.Publisher;
  uint64_t v97 = sub_D034((unint64_t *)&unk_9A480, &qword_9A460);
  sub_D034(&qword_99CD8, &qword_99CC0);
  sub_D034(&qword_9A490, (uint64_t *)&unk_9A450);
  uint64_t v29 = v121;
  sub_75C90();
  v96[1](v19, v17);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  uint64_t v30 = *(void (***)(char *, uint64_t))(v123 + 8);
  v123 += 8;
  uint64_t v96 = v30;
  ((void (*)(char *, uint64_t))v30)(v25, v29);
  sub_FAEC(0, (unint64_t *)&qword_99F20);
  id v124 = (id)sub_76CA0();
  uint64_t v31 = sub_76C60();
  uint64_t v32 = (uint64_t)v77;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v77, 1, 1, v31);
  sub_D034(&qword_9A498, &qword_9A468);
  sub_48C78();
  int v33 = v73;
  uint64_t v34 = v74;
  sub_75D40();
  sub_CA50(v32, &qword_9A280);

  (*(void (**)(char *, uint64_t))(v75 + 8))(v27, v34);
  uint64_t v35 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_66440;
  *(void *)(v36 + 24) = v35;
  sub_D034(&qword_9A4A0, (uint64_t *)&unk_9A470);
  uint64_t v37 = v76;
  sub_75D80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v33, v37);
  swift_beginAccess();
  sub_75B90();
  swift_endAccess();
  swift_release();
  id v124 = (id)sub_75470();
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A4A8);
  sub_D034(&qword_9A4B0, &qword_9A4A8);
  uint64_t v38 = v80;
  sub_75D20();
  swift_release();
  id v124 = (id)sub_75470();
  sub_D034(&qword_9A4B8, &qword_9A430);
  uint64_t v39 = v81;
  uint64_t v40 = v84;
  sub_75D00();
  swift_release();
  (*(void (**)(char *, uint64_t))(v85 + 8))(v38, v40);
  sub_D034(&qword_9A4C0, &qword_9A438);
  uint64_t v41 = v82;
  uint64_t v42 = v86;
  sub_75D60();
  (*(void (**)(char *, uint64_t))(v87 + 8))(v39, v42);
  uint64_t v43 = v90;
  sub_76C70();
  uint64_t v44 = (void *)sub_76CA0();
  id v124 = v44;
  sub_D034(&qword_9A4C8, &qword_9A440);
  uint64_t v45 = v83;
  uint64_t v46 = v88;
  sub_75D50();

  (*(void (**)(char *, void *))(v93 + 8))(v43, v94);
  (*(void (**)(char *, uint64_t))(v89 + 8))(v41, v46);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_D034((unint64_t *)&unk_9A4D0, &qword_9A448);
  uint64_t v47 = v91;
  sub_75D80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v92 + 8))(v45, v47);
  swift_beginAccess();
  sub_75B90();
  swift_endAccess();
  swift_release();
  sub_4C6E4();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_99BF8);
  uint64_t v48 = v99;
  sub_75C10();
  swift_endAccess();
  swift_release();
  sub_D034((unint64_t *)&unk_9A4E0, &qword_99D10);
  uint64_t v49 = v100;
  uint64_t v50 = sub_75CF0();
  uint64_t v94 = (void *)v50;
  (*(void (**)(char *, uint64_t))(v101 + 8))(v48, v49);
  uint64_t v130 = v50;
  sub_4C6E4();
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_99BF0);
  uint64_t v51 = v102;
  sub_75C10();
  swift_endAccess();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A4F0);
  sub_D034(&qword_9A4F8, &qword_9A4F0);
  sub_D034(&qword_9A500, &qword_9A410);
  uint64_t v52 = v103;
  uint64_t v53 = v106;
  sub_75CA0();
  (*(void (**)(char *, uint64_t))(v105 + 8))(v51, v53);
  id v124 = &def_1E2E4 + 1;
  long long v125 = 0u;
  long long v126 = 0u;
  uint64_t v127 = 1;
  long long v128 = 0u;
  long long v129 = 0u;
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A508);
  sub_D034(&qword_9A510, &qword_9A418);
  uint64_t v54 = v104;
  uint64_t v55 = v107;
  sub_75CE0();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v52, v55);
  uint64_t v56 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v57 = swift_allocObject();
  *(void *)(v57 + 16) = sub_66488;
  *(void *)(v57 + 24) = v56;
  sub_D034(&qword_9A518, (uint64_t *)&unk_9A420);
  uint64_t v58 = v109;
  sub_75D80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v110 + 8))(v54, v58);
  swift_beginAccess();
  sub_75B90();
  swift_endAccess();
  swift_release();
  sub_4C6E4();
  swift_beginAccess();
  double v59 = v95;
  sub_75C10();
  swift_endAccess();
  swift_release();
  uint64_t v60 = v121;
  unint64_t v61 = v111;
  sub_75C80();
  ((void (*)(char *, uint64_t))v96)(v59, v60);
  id v124 = v94;
  sub_D034(&qword_9A520, &qword_9A408);
  uint64_t v62 = v113;
  uint64_t v63 = v112;
  sub_75CA0();
  LOBYTE(v126) = 0;
  long long v125 = 0uLL;
  id v124 = 0;
  *((void *)&v126 + 1) = &_swiftEmptyArrayStorage;
  uint64_t v127 = 0;
  long long v128 = 0uLL;
  LOBYTE(v129) = 0;
  *((void *)&v129 + 1) = &_swiftEmptyArrayStorage;
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A528);
  sub_D034(&qword_9A530, &qword_9A3F8);
  char v65 = v114;
  uint64_t v64 = v115;
  sub_75CE0();
  swift_bridgeObjectRelease_n();
  (*(void (**)(char *, uint64_t))(v116 + 8))(v62, v64);
  uint64_t v66 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v67 = swift_allocObject();
  uint64_t v68 = ObjectType;
  *(void *)(v67 + 16) = v66;
  *(void *)(v67 + 24) = v68;
  uint64_t v69 = swift_allocObject();
  *(void *)(v69 + 16) = sub_664F8;
  *(void *)(v69 + 24) = v67;
  sub_D034(&qword_9A538, &qword_9A400);
  uint64_t v70 = v117;
  sub_75D80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v119 + 8))(v65, v70);
  swift_beginAccess();
  sub_75B90();
  swift_endAccess();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v120 + 8))(v61, v63);
}

uint64_t sub_4F0B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A280);
  __chkstk_darwin(v2 - 8);
  uint64_t v37 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A370);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A378);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A380);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v35 = v12;
  uint64_t v36 = v13;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A388);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v38 = v16;
  uint64_t v39 = v17;
  __chkstk_darwin(v16);
  int v33 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A390);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v40 = v19;
  uint64_t v41 = v20;
  __chkstk_darwin(v19);
  uint64_t v34 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = *(void *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_playbackController);
  sub_75220();
  uint64_t v22 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_player;
  *(_OWORD *)(swift_allocObject() + 16) = *(_OWORD *)(v1 + v22);
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A398);
  sub_D034(&qword_9A3A0, &qword_9A370);
  sub_75CD0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_D034(&qword_9A3A8, &qword_9A378);
  sub_75CB0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_FAEC(0, (unint64_t *)&qword_99F20);
  id v44 = (id)sub_76CA0();
  uint64_t v23 = sub_76C60();
  uint64_t v24 = (uint64_t)v37;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v37, 1, 1, v23);
  sub_D034(&qword_9A3B0, &qword_9A380);
  sub_48C78();
  Swift::String_optional v25 = v33;
  uint64_t v26 = v35;
  sub_75D40();
  sub_CA50(v24, &qword_9A280);

  (*(void (**)(char *, uint64_t))(v36 + 8))(v15, v26);
  id v44 = *(id *)(v1 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_retrySubject);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A1D0);
  sub_D034(&qword_9A3B8, &qword_9A388);
  sub_D034(&qword_9A3C0, (uint64_t *)&unk_9A1D0);
  uint64_t v27 = v34;
  uint64_t v28 = v38;
  sub_75CA0();
  (*(void (**)(char *, uint64_t))(v39 + 8))(v25, v28);
  uint64_t v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v30 = swift_allocObject();
  *(void *)(v30 + 16) = sub_663D8;
  *(void *)(v30 + 24) = v29;
  sub_D034(&qword_9A3C8, &qword_9A390);
  uint64_t v31 = v40;
  sub_75D80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v31);
  swift_beginAccess();
  sub_75B90();
  swift_endAccess();
  swift_release();
  id v44 = (id)sub_75240();
  swift_getKeyPath();
  uint64_t v43 = *(void *)(v1 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_presentationContext);
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A2A8);
  sub_D034(&qword_9A2B0, &qword_9A2A8);
  sub_75D90();
  swift_release();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_75B90();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_4F86C()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A280);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v19 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_76D20();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A350);
  uint64_t v26 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v25 = self;
  id v10 = [v25 defaultCenter];
  sub_76D30();

  sub_FAEC(0, (unint64_t *)&qword_99F20);
  id v27 = (id)sub_76CA0();
  uint64_t v11 = sub_76C60();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  uint64_t v24 = v12 + 56;
  v23(v2, 1, 1, v11);
  uint64_t v22 = sub_64288((unint64_t *)&unk_9A300, 255, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  unint64_t v21 = sub_48C78();
  v19[0] = v3;
  sub_75D40();
  sub_CA50((uint64_t)v2, &qword_9A280);

  uint64_t v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v19[2] = v4 + 8;
  uint64_t v20 = v13;
  v13(v6, v3);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v19[1] = sub_D034(&qword_9A358, &qword_9A350);
  uint64_t v14 = v7;
  sub_75D80();
  swift_release();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v26 + 8);
  v26 += 8;
  v15(v9, v14);
  swift_beginAccess();
  sub_75B90();
  swift_endAccess();
  swift_release();
  id v16 = [v25 defaultCenter];
  sub_76D30();

  id v27 = (id)sub_76CA0();
  v23(v2, 1, 1, v11);
  uint64_t v17 = v19[0];
  sub_75D40();
  sub_CA50((uint64_t)v2, &qword_9A280);

  v20(v6, v17);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_75D80();
  swift_release();
  v15(v9, v14);
  swift_beginAccess();
  sub_75B90();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_4FD80()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A328);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A330);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10[1] = sub_765F0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A338);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_78AC0;
  *(unsigned char *)(v8 + 32) = sub_765E0() & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A2A8);
  sub_D034(&qword_9A2B0, &qword_9A2A8);
  sub_75D30();
  swift_release();
  swift_bridgeObjectRelease();
  sub_D034(&qword_9A340, &qword_9A328);
  sub_75D70();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_D034(&qword_9A348, &qword_9A330);
  sub_75D80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_beginAccess();
  sub_75B90();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_5009C()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_76D20();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = self;
  id v6 = [v5 defaultCenter];
  sub_76D30();

  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = ObjectType;
  sub_64288((unint64_t *)&unk_9A300, 255, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  sub_75D80();
  swift_release();
  uint64_t v9 = *(void (**)(char *, uint64_t))(v2 + 8);
  v9(v4, v1);
  swift_beginAccess();
  sub_75B90();
  swift_endAccess();
  swift_release();
  id v10 = [v5 defaultCenter];
  sub_76D30();

  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = ObjectType;
  sub_75D80();
  swift_release();
  v9(v4, v1);
  swift_beginAccess();
  sub_75B90();
  swift_endAccess();
  return swift_release();
}

uint64_t sub_50398()
{
  uint64_t v1 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___stateMachine;
  if (*(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___stateMachine])
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___stateMachine];
  }
  else
  {
    uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_playbackController];
    uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_nowPlayingViewModel];
    uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_presentationContext];
    swift_retain();
    swift_retain();
    swift_retain();
    id v6 = v0;
    uint64_t v2 = sub_63A70(v3, v4, v5, (uint64_t)v6);
    swift_release();

    *(void *)&v0[v1] = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_50468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_75450();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v10 = (void *)Strong;
    if (*(void *)(a3 + 24) != 1)
    {
LABEL_5:

      return;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, v5);
    int v11 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v8, v5);
    if (v11 == enum case for NowPlayingViewModel.PlayerStyle.mini(_:))
    {
      *(unsigned char *)(a3 + 16) = 13;
      sub_285D4();
      sub_50700();
      goto LABEL_5;
    }
    if (v11 == enum case for NowPlayingViewModel.PlayerStyle.fullScreen(_:))
    {
      *(unsigned char *)(a3 + 16) = 2;
      sub_285D4();
      sub_50908(1);
      sub_4C6E4();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_75C40();
      swift_release();
      swift_release();
      swift_release();
      uint64_t v12 = *(void *)&v17;
      uint64_t v13 = v18;
      uint64_t v14 = v19;
      char v15 = v20;
      sub_4C6E4();
      swift_getKeyPath();
      swift_getKeyPath();
      sub_75C40();
      swift_release();
      swift_release();
      swift_release();
      sub_648B8(v12, v13, v14, v15, 0, v17);

      swift_release();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    }
  }
}

uint64_t sub_50700()
{
  sub_4C6E4();
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  if (v6)
  {
    switch(*(void *)(v6 + 16) >> 62)
    {
      case 1:
        uint64_t v2 = (unint64_t *)&unk_99F90;
        uint64_t v3 = type metadata accessor for SilentContent;
        goto LABEL_7;
      case 2:
        uint64_t v2 = &qword_98D10;
        uint64_t v3 = type metadata accessor for SpeakerContent;
        goto LABEL_7;
      case 3:
        uint64_t v2 = (unint64_t *)&qword_99F80;
        uint64_t v3 = type metadata accessor for ChapterTitleContent;
LABEL_7:
        uint64_t v1 = sub_64288(v2, 255, (void (*)(uint64_t))v3);
        break;
      default:
        uint64_t v1 = sub_64288(&qword_98D18, 255, (void (*)(uint64_t))type metadata accessor for TextContent);
        break;
    }
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 88);
    swift_retain();
    v5(1, 0, ObjectType, v1);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_50908(char a1)
{
  uint64_t v2 = sub_758C0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_50398();
  uint64_t v6 = sub_27F8C();
  char v8 = v7;
  uint64_t result = swift_release();
  switch(v8)
  {
    case 1:
    case 2:
    case 4:
      return result;
    case 3:
      uint64_t result = sub_18A70(v6, 3);
      break;
    default:
      if (v6 != 128)
      {
        sub_4C6E4();
        swift_getKeyPath();
        swift_getKeyPath();
        sub_75C40();
        swift_release();
        swift_release();
        uint64_t result = swift_release();
        uint64_t v10 = v38;
        if ((void)v38)
        {
          uint64_t v11 = *((void *)&v38 + 1);
          uint64_t v36 = v39;
          char v12 = v40;
          sub_758A0();
          swift_retain_n();
          uint64_t v13 = sub_758B0();
          os_log_type_t v14 = sub_76BB0();
          int v15 = v14;
          if (os_log_type_enabled(v13, v14))
          {
            int v33 = v12 & 1;
            uint64_t v16 = swift_slowAlloc();
            uint64_t v35 = swift_slowAlloc();
            *(void *)&long long v38 = v35;
            *(_DWORD *)uint64_t v16 = 136315650;
            uint64_t v32 = v11;
            uint64_t v37 = sub_7D80(0xD00000000000001BLL, 0x800000000007FDD0, (uint64_t *)&v38);
            os_log_t v34 = v13;
            sub_76F90();
            *(_WORD *)(v16 + 12) = 2080;
            uint64_t v31 = v16 + 14;
            uint64_t v17 = swift_retain();
            uint64_t v18 = sub_45B10(v17, v32, v36, v33);
            LODWORD(v36) = v15;
            uint64_t v19 = v18;
            unint64_t v21 = v20;
            swift_release();
            uint64_t v37 = sub_7D80(v19, v21, (uint64_t *)&v38);
            sub_76F90();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v16 + 22) = 1024;
            LODWORD(v37) = a1 & 1;
            sub_76F90();
            os_log_t v22 = v34;
            _os_log_impl(&def_1E2E4, v34, (os_log_type_t)v36, "%s scroll to paragraph from reset live tracking (new: %s, animated: %{BOOL}d)", (uint8_t *)v16, 0x1Cu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_release_n();
          }
          (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
          unint64_t v23 = *(void *)(v10 + 16);
          unint64_t v24 = v23 >> 62;
          switch(v23 >> 62)
          {
            case 1uLL:
              uint64_t v25 = *(void *)((char *)&dword_10 + (v23 & 0x3FFFFFFFFFFFFFFFLL));
              swift_retain();
              uint64_t v26 = 0;
              uint64_t v27 = 0;
              goto LABEL_17;
            case 2uLL:
              uint64_t v29 = (void *)(v23 & 0x3FFFFFFFFFFFFFFFLL);
              uint64_t v25 = v29[5];
              uint64_t v26 = v29[6];
              uint64_t v27 = v29[7];
              uint64_t v28 = v29[8];
              goto LABEL_15;
            case 3uLL:
              uint64_t v30 = (void *)(v23 & 0x3FFFFFFFFFFFFFFFLL);
              uint64_t v25 = v30[14];
              uint64_t v26 = v30[15];
              uint64_t v27 = v30[16];
              swift_bridgeObjectRetain();
LABEL_17:
              uint64_t v28 = 0;
              goto LABEL_18;
            default:
              uint64_t v25 = *(void *)(v23 + 16);
              uint64_t v26 = *(void *)(v23 + 24);
              uint64_t v27 = *(void *)(v23 + 32);
              uint64_t v28 = *(void *)(v23 + 40);
LABEL_15:
              swift_bridgeObjectRetain();
LABEL_18:
              *(void *)&long long v38 = v25;
              *((void *)&v38 + 1) = v26;
              uint64_t v39 = v27;
              uint64_t v40 = v28;
              char v41 = v24;
              sub_569F0(&v38, a1 & 1);
              swift_release();
              uint64_t result = sub_88A0(v25, v26, v27, v28, v24);
              break;
          }
        }
      }
      break;
  }
  return result;
}

Swift::Void __swiftcall TranscriptViewController.viewWillLayoutSubviews()()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = sub_75370();
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = __chkstk_darwin(v3).n128_u64[0];
  char v7 = (id *)((char *)&v28.receiver - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v28.receiver = v1;
  v28.super_class = ObjectType;
  [super viewWillLayoutSubviews:v5];
  char v8 = sub_4CB58();
  id v9 = [v8 superview];

  if (!v9)
  {
    sub_510C8();
    sub_4C6E4();
    sub_513FC();
    uint64_t v11 = v10;
    uint64_t v13 = v12;
    if (qword_97FC8 != -1) {
      swift_once();
    }
    os_log_type_t v14 = (void *)qword_9F100;
    *char v7 = v11;
    v7[1] = v13;
    v7[2] = v14;
    (*(void (**)(void *, void, uint64_t))(v4 + 104))(v7, enum case for TranscriptSentenceSplittingBehavior.splitMidSentence(_:), v3);
    id v15 = v14;
    sub_436EC((uint64_t)v7);
    swift_release();
    (*(void (**)(void *, uint64_t))(v4 + 8))(v7, v3);
  }
  id v16 = sub_517C8();
  id v17 = [v16 superview];

  if (!v17)
  {
    id v18 = [v1 view];
    if (!v18)
    {
      __break(1u);
      goto LABEL_15;
    }
    uint64_t v19 = v18;
    id v20 = sub_517C8();
    [v19 addSubview:v20];
  }
  id v21 = sub_518C8();
  id v22 = [v21 superview];

  if (v22) {
    goto LABEL_11;
  }
  id v23 = [v1 view];
  if (!v23)
  {
LABEL_15:
    __break(1u);
    return;
  }
  unint64_t v24 = v23;
  id v25 = sub_518C8();
  [v24 addSubview:v25];

LABEL_11:
  id v26 = sub_519B4();
  id v27 = [v26 superview];

  if (!v27) {
    sub_51AD8();
  }
}

void sub_510C8()
{
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = sub_53FC4();
    [v2 addSubview:v3];

    id v4 = sub_53FC4();
    double v5 = sub_4CB58();
    [v4 addSubview:v5];

    uint64_t v6 = self;
    __swift_instantiateConcreteTypeFromMangledName(&qword_99FB0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_78AD0;
    char v8 = sub_4CB58();
    id v9 = [v8 topAnchor];

    id v10 = sub_53FC4();
    id v11 = [v10 topAnchor];

    id v12 = [v9 constraintEqualToAnchor:v11];
    *(void *)(v7 + 32) = v12;
    uint64_t v13 = sub_4CB58();
    id v14 = [v13 leadingAnchor];

    id v15 = sub_53FC4();
    id v16 = [v15 leadingAnchor];

    id v17 = [v14 constraintEqualToAnchor:v16];
    *(void *)(v7 + 40) = v17;
    id v18 = sub_4CB58();
    id v19 = [v18 trailingAnchor];

    id v20 = sub_53FC4();
    id v21 = [v20 trailingAnchor];

    id v22 = [v19 constraintEqualToAnchor:v21];
    *(void *)(v7 + 48) = v22;
    id v23 = sub_4CB58();
    id v24 = [v23 bottomAnchor];

    id v25 = sub_53FC4();
    id v26 = [v25 bottomAnchor];

    id v27 = [v24 constraintEqualToAnchor:v26];
    *(void *)(v7 + 56) = v27;
    sub_769F0();
    sub_FAEC(0, &qword_98508);
    Class isa = sub_769C0().super.isa;
    swift_bridgeObjectRelease();
    [v6 activateConstraints:isa];

    sub_51C7C();
    sub_61B8C();
  }
  else
  {
    __break(1u);
  }
}

void sub_513FC()
{
  id v1 = v0;
  uint64_t v2 = sub_753D0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  double v5 = &v40[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A220);
  *(void *)&double v7 = __chkstk_darwin(v6 - 8).n128_u64[0];
  id v9 = &v40[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v10 = [v0 view];
  if (!v10)
  {
    __break(1u);
    goto LABEL_14;
  }
  id v11 = v10;
  [v10 frame];
  CGFloat v13 = v12;
  CGFloat v15 = v14;
  CGFloat v17 = v16;
  CGFloat v19 = v18;

  v43.origin.x = v13;
  v43.origin.y = v15;
  v43.size.width = v17;
  v43.size.height = v19;
  CGRectGetWidth(v43);
  sub_754D0();
  uint64_t v20 = sub_753F0();
  uint64_t v21 = *(void *)(v20 - 8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v21 + 48))(v9, 1, v20) == 1)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_753E0();
  (*(void (**)(unsigned char *, uint64_t))(v21 + 8))(v9, v20);
  sub_753C0();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  id v22 = [v1 view];
  if (!v22)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v23 = v22;
  id v24 = [v22 safeAreaLayoutGuide];

  id v25 = [v1 view];
  if (!v25)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v26 = v25;
  sub_FAEC(0, &qword_9A258);
  sub_76DA0();

  sub_C570((uint64_t)v40, (uint64_t)v41, (uint64_t *)&unk_9A260);
  if (v42)
  {
    id v27 = [v1 view];
    if (!v27)
    {
LABEL_18:
      __break(1u);
      return;
    }
    objc_super v28 = v27;
    [v27 frame];
    CGFloat v30 = v29;
    CGFloat v32 = v31;
    CGFloat v34 = v33;
    CGFloat v36 = v35;
  }
  else
  {
    CGFloat v30 = *(double *)v41;
    CGFloat v32 = *(double *)&v41[1];
    CGFloat v34 = *(double *)&v41[2];
    CGFloat v36 = *(double *)&v41[3];
  }
  v44.origin.x = v30;
  v44.origin.y = v32;
  v44.size.width = v34;
  v44.size.height = v36;
  CGRectGetHeight(v44);
  id v37 = [v1 view];
  if (!v37)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  long long v38 = v37;
  id v39 = [v37 window];

  if (v39)
  {
    [v39 bounds];
    CGRectGetHeight(v45);
  }
}

id sub_517C8()
{
  uint64_t v1 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___topGradientView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___topGradientView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___topGradientView);
  }
  else
  {
    uint64_t v4 = v0;
    sub_754A0();
    sub_754C0();
    double v5 = (void *)sub_75490();
    [v5 setHidden:1];
    id v6 = [v5 layer];
    id v7 = sub_54070(&OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___topGradientMask, (SEL *)&selRef_whiteColor, (SEL *)&selRef_clearColor);
    [v6 setMask:v7];

    [v5 setUserInteractionEnabled:0];
    uint64_t v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_518C8()
{
  uint64_t v1 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___bottomGradientView;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___bottomGradientView);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___bottomGradientView);
  }
  else
  {
    uint64_t v4 = v0;
    sub_754A0();
    sub_754C0();
    double v5 = (void *)sub_75490();
    id v6 = [v5 layer];
    id v7 = sub_54070(&OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___bottomGradientMask, (SEL *)&selRef_clearColor, (SEL *)&selRef_whiteColor);
    [v6 setMask:v7];

    [v5 setUserInteractionEnabled:0];
    uint64_t v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_519B4()
{
  uint64_t v1 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___searchButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___searchButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___searchButton);
  }
  else
  {
    uint64_t v4 = v0;
    sub_FAEC(0, &qword_991C0);
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v6 = (void *)sub_76E70();
    type metadata accessor for TranscriptSearchButton();
    id v7 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithFrame:v6 primaryAction:0.0, 0.0, 0.0, 0.0, 0, 0, 0, sub_660D4, v5];

    uint64_t v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

void sub_51AD8()
{
  swift_getObjectType();
  id v1 = [v0 view];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = sub_519B4();
    [v2 addSubview:v3];

    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A270);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_78AC0;
    *(void *)(v4 + 32) = sub_75B60();
    *(void *)(v4 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    sub_76C10();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    id v5 = sub_519B4();
    [v5 setTranslatesAutoresizingMaskIntoConstraints:1];

    sub_522CC(2u);
  }
  else
  {
    __break(1u);
  }
}

Swift::Void __swiftcall TranscriptViewController.viewDidLayoutSubviews()()
{
  v1.receiver = v0;
  v1.super_class = (Class)swift_getObjectType();
  [super viewDidLayoutSubviews];
  sub_51C7C();
  sub_522CC(2u);
  sub_52BEC();
}

void sub_51C7C()
{
  objc_super v1 = v0;
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_52;
  }
  id v3 = v2;
  [v2 bounds];
  CGFloat v5 = v4;
  CGFloat v7 = v6;
  CGFloat v9 = v8;
  CGFloat v11 = v10;

  v141.origin.CGFloat x = v5;
  v141.origin.CGFloat y = v7;
  v141.size.CGFloat width = v9;
  v141.size.height = v11;
  double Height = CGRectGetHeight(v141);
  id v13 = [v1 view];
  if (!v13)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  double v14 = v13;
  id v15 = [v13 safeAreaLayoutGuide];

  id v16 = [v1 view];
  if (!v16)
  {
LABEL_53:
    __break(1u);
    goto LABEL_54;
  }
  CGFloat v17 = v16;
  sub_FAEC(0, &qword_9A258);
  sub_76DA0();
  double v18 = *(double *)v139;
  double v19 = *(double *)&v139[1];
  double v20 = *(double *)&v139[2];
  double v21 = *(double *)&v139[3];

  sub_C570((uint64_t)v139, (uint64_t)v140, (uint64_t *)&unk_9A260);
  if (v140[32] == 1)
  {
    id v22 = [v1 view];
    if (!v22)
    {
LABEL_55:
      __break(1u);
      return;
    }
    id v23 = v22;
    [v22 bounds];
    double v18 = v24;
    double v19 = v25;
    double v20 = v26;
    double v21 = v27;
  }
  CGFloat rect = v21;
  CGFloat v28 = Height * 0.14 + Height * 0.14 + v21;
  id v29 = sub_53FC4();
  [v29 frame];
  CGFloat v31 = v30;
  CGFloat v33 = v32;
  CGFloat v35 = v34;
  CGFloat v37 = v36;

  v142.origin.CGFloat x = v31;
  v142.origin.CGFloat y = v33;
  v142.size.CGFloat width = v35;
  v142.size.height = v37;
  double v38 = CGRectGetHeight(v142);
  v143.origin.CGFloat x = v18;
  v143.origin.CGFloat y = v19;
  v143.size.CGFloat width = v20;
  v143.size.height = v28;
  double v39 = CGRectGetHeight(v143);
  if (v38 > v39) {
    double v40 = v38;
  }
  else {
    double v40 = v39;
  }
  id v41 = sub_53FC4();
  [v41 frame];
  CGFloat v43 = v42;
  CGFloat v45 = v44;
  CGFloat v47 = v46;
  CGFloat v49 = v48;

  v144.origin.CGFloat x = v43;
  v144.origin.CGFloat y = v45;
  v144.size.CGFloat width = v47;
  v144.size.height = v49;
  v156.origin.CGFloat x = v18;
  v156.origin.CGFloat y = v19;
  v156.size.CGFloat width = v20;
  v156.size.height = v40;
  if (!CGRectEqualToRect(v144, v156))
  {
    id v50 = sub_53FC4();
    [v50 setFrame:v18, v19, v20, v40];
  }
  v145.origin.CGFloat x = v18;
  v145.origin.CGFloat y = v19;
  v145.size.CGFloat width = v20;
  v145.size.height = v40;
  double MaxY = CGRectGetMaxY(v145);
  v146.origin.CGFloat x = v18;
  v146.origin.CGFloat y = v19;
  v146.size.CGFloat width = v20;
  v146.size.height = rect;
  double v52 = CGRectGetMaxY(v146);
  id v53 = sub_519B4();
  [v53 alpha];
  double v55 = v54;

  double recta = 0.0;
  double v56 = 0.0;
  double v57 = 0.0;
  if (v55 == 1.0)
  {
    id v58 = sub_519B4();
    [v58 frame];
    CGFloat v60 = v59;
    double v133 = v52;
    double v135 = MaxY;
    CGFloat v62 = v61;
    CGFloat v64 = v63;
    CGFloat v66 = v65;

    v147.origin.CGFloat x = v60;
    v147.origin.CGFloat y = v62;
    double v52 = v133;
    v147.size.CGFloat width = v64;
    v147.size.height = v66;
    double MinY = CGRectGetMinY(v147);
    v148.origin.CGFloat x = v18;
    v148.origin.CGFloat y = v19;
    v148.size.CGFloat width = v20;
    v148.size.height = v40;
    BOOL v68 = MinY < CGRectGetMaxY(v148);
    double MaxY = v135;
    double v56 = 0.0;
    double v57 = 0.0;
    if (v68)
    {
      v149.origin.CGFloat x = v18;
      v149.origin.CGFloat y = v19;
      v149.size.CGFloat width = v20;
      v149.size.height = v40;
      double v130 = CGRectGetMaxY(v149);
      id v69 = sub_519B4();
      [v69 frame];
      CGFloat v71 = v70;
      CGFloat v73 = v72;
      CGFloat v75 = v74;
      CGFloat v77 = v76;

      v150.origin.CGFloat x = v71;
      v150.origin.CGFloat y = v73;
      v150.size.CGFloat width = v75;
      v150.size.height = v77;
      double v52 = v133;
      double MaxY = v135;
      double v57 = v130 - CGRectGetMinY(v150);
      double v56 = v57 + 32.0;
    }
  }
  double v78 = MaxY - v52;
  uint64_t v79 = (CGRect *)&v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_keyboardState];
  double v136 = v57;
  if (v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_keyboardState + 32])
  {
    double v80 = 0.0;
  }
  else
  {
    CGRect v151 = *v79;
    CGFloat x = v79->origin.x;
    CGFloat y = v151.origin.y;
    CGFloat width = v151.size.width;
    CGFloat v131 = v151.size.height;
    double v82 = v78;
    double v83 = CGRectGetMinY(*v79);
    v152.origin.CGFloat x = v18;
    v152.origin.CGFloat y = v19;
    v152.size.CGFloat width = v20;
    v152.size.height = v40;
    BOOL v68 = v83 < CGRectGetMaxY(v152);
    double v78 = v82;
    double v80 = 0.0;
    if (v68)
    {
      v153.origin.CGFloat x = v18;
      v153.origin.CGFloat y = v19;
      v153.size.CGFloat width = v20;
      v153.size.height = v40;
      double v84 = CGRectGetMaxY(v153);
      v154.origin.CGFloat x = x;
      v154.origin.CGFloat y = y;
      v154.size.CGFloat width = width;
      v154.size.height = v131;
      double v80 = v84 - CGRectGetMinY(v154);
      double recta = v80 + 10.0;
    }
  }
  uint64_t v85 = sub_4CB58();
  [v85 contentInset];
  double v87 = v86;
  double v89 = v88;

  if (v78 > v56) {
    double v90 = v78;
  }
  else {
    double v90 = v56;
  }
  if (v90 > recta) {
    double v91 = v90;
  }
  else {
    double v91 = recta;
  }
  id v92 = [v1 view:y width:width];
  if (!v92)
  {
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  uint64_t v93 = v92;
  id v94 = [v92 window];

  double v132 = v80;
  double v134 = v78;
  if (v94)
  {
    [v94 bounds];
    double v95 = CGRectGetHeight(v155);

    double v96 = v95 * 0.06;
  }
  else
  {
    double v96 = 0.0;
  }
  uint64_t v97 = sub_4CB58();
  [v97 contentInset];
  double v99 = v98;
  double v101 = v100;
  double v103 = v102;
  double v105 = v104;

  if (v99 != v96 || v101 != v87 || (v103 == v91 ? (BOOL v106 = v105 == v89) : (BOOL v106 = 0), !v106))
  {
    uint64_t v107 = sub_4CB58();
    [v107 setContentInset:v96, v87, v91, v89];
  }
  uint64_t v108 = sub_4CB58();
  [v108 verticalScrollIndicatorInsets];
  double v110 = v109;
  double v112 = v111;
  double v114 = v113;

  double v115 = v136;
  if (v134 > v136) {
    double v115 = v134;
  }
  if (v115 > v132) {
    double v116 = v115;
  }
  else {
    double v116 = v132;
  }
  uint64_t v117 = sub_4CB58();
  [v117 verticalScrollIndicatorInsets];
  double v119 = v118;
  double v121 = v120;
  double v123 = v122;
  double v125 = v124;

  if (v119 != v110 || v121 != v112 || (v123 == v116 ? (BOOL v126 = v125 == v114) : (BOOL v126 = 0), !v126))
  {
    uint64_t v127 = sub_4CB58();
    [v127 setVerticalScrollIndicatorInsets:v110, v112, v116, v114];
  }
}

void sub_522CC(unsigned __int8 a1)
{
  int v2 = a1;
  uint64_t v3 = sub_753A0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v92 = (char *)&v91 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A228);
  __chkstk_darwin(v6);
  double v8 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A218);
  uint64_t v10 = __chkstk_darwin(v9 - 8);
  uint64_t v99 = (uint64_t)&v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  double v14 = (char *)&v91 - v13;
  __chkstk_darwin(v12);
  id v16 = (char *)&v91 - v15;
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A220);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  double v98 = (char *)&v91 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  double v21 = (char *)&v91 - v20;
  if (v2 == 2)
  {
    id v22 = sub_519B4();
    [v22 alpha];
    double v24 = v23;

    int v25 = v24 == 1.0;
  }
  else
  {
    int v25 = v2 & 1;
  }
  int v101 = v25;
  id v26 = [v1 view];
  if (!v26)
  {
    __break(1u);
    goto LABEL_40;
  }
  double v27 = v26;
  [v26 bounds];
  CGFloat v102 = v28;
  CGFloat v30 = v29;
  CGFloat v32 = v31;
  CGFloat v34 = v33;

  double v100 = v1;
  uint64_t v97 = *(void *)&v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_session];
  sub_754D0();
  uint64_t v35 = sub_753F0();
  uint64_t v36 = *(void *)(v35 - 8);
  double v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
  uint64_t v96 = v36 + 48;
  if (v95(v21, 1, v35) == 1)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  sub_753B0();
  CGFloat v37 = *(void (**)(char *, uint64_t))(v36 + 8);
  uint64_t v94 = v35;
  uint64_t v93 = v37;
  v37(v21, v35);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v14, enum case for DeviceMetrics.Layout.regularExtended(_:), v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v4 + 56))(v14, 0, 1, v3);
  uint64_t v38 = (uint64_t)&v8[*(int *)(v6 + 48)];
  sub_C50C((uint64_t)v16, (uint64_t)v8, &qword_9A218);
  sub_C50C((uint64_t)v14, v38, &qword_9A218);
  double v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v39((uint64_t)v8, 1, v3) == 1)
  {
    sub_CA50((uint64_t)v14, &qword_9A218);
    sub_CA50((uint64_t)v16, &qword_9A218);
    int v40 = v39(v38, 1, v3);
    id v41 = v100;
    if (v40 == 1)
    {
      sub_CA50((uint64_t)v8, &qword_9A218);
      double v42 = 15.0;
      CGFloat v43 = v102;
      CGFloat v44 = v30;
      CGFloat v45 = v32;
      CGFloat v46 = v34;
      int v47 = v101;
LABEL_32:
      CGFloat v65 = v43;
      CGFloat v66 = v44;
      CGFloat v67 = v45;
      CGFloat v68 = v46;
      goto LABEL_33;
    }
    goto LABEL_11;
  }
  uint64_t v48 = v99;
  sub_C50C((uint64_t)v8, v99, &qword_9A218);
  if (v39(v38, 1, v3) == 1)
  {
    sub_CA50((uint64_t)v14, &qword_9A218);
    sub_CA50((uint64_t)v16, &qword_9A218);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v48, v3);
    id v41 = v100;
LABEL_11:
    sub_CA50((uint64_t)v8, &qword_9A228);
    int v47 = v101;
    goto LABEL_13;
  }
  uint64_t v49 = v48;
  id v50 = v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v92, v38, v3);
  sub_64288(&qword_9A230, 255, (void (*)(uint64_t))&type metadata accessor for DeviceMetrics.Layout);
  char v51 = sub_768A0();
  double v52 = *(void (**)(char *, uint64_t))(v4 + 8);
  v52(v50, v3);
  sub_CA50((uint64_t)v14, &qword_9A218);
  sub_CA50((uint64_t)v16, &qword_9A218);
  v52((char *)v49, v3);
  sub_CA50((uint64_t)v8, &qword_9A218);
  double v42 = 15.0;
  CGFloat v43 = v102;
  CGFloat v44 = v30;
  CGFloat v45 = v32;
  CGFloat v46 = v34;
  id v41 = v100;
  int v47 = v101;
  if (v51) {
    goto LABEL_32;
  }
LABEL_13:
  id v53 = [v41 view];
  double v54 = v53;
  if (!v47)
  {
    if (v53)
    {
      id v61 = [v53 window];

      if (!v61)
      {
        double v42 = 0.0;
        CGFloat v65 = v102;
        CGFloat v66 = v30;
        CGFloat v67 = v32;
        CGFloat v68 = v34;
        goto LABEL_33;
      }
      id v62 = [v41 view];
      if (v62)
      {
        double v63 = v62;
        sub_FAEC(0, &qword_9A250);
        sub_76DA0();
        CGFloat v43 = v103;
        CGFloat v44 = v104;
        CGFloat v45 = v105;
        CGFloat v46 = v106;
        char v64 = v107;

        double v42 = 0.0;
        CGFloat v65 = v102;
        CGFloat v66 = v30;
        CGFloat v67 = v32;
        CGFloat v68 = v34;
        if (v64) {
          goto LABEL_33;
        }
        goto LABEL_32;
      }
LABEL_45:
      __break(1u);
      return;
    }
    goto LABEL_42;
  }
  if (!v53)
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  id v55 = [v53 window];

  double v56 = v98;
  if (v55)
  {
    id v57 = [v55 safeAreaLayoutGuide];

    id v58 = [v41 view];
    if (!v58)
    {
LABEL_44:
      __break(1u);
      goto LABEL_45;
    }
    double v59 = v58;
    sub_FAEC(0, &qword_9A258);
    sub_76DA0();
    CGFloat v43 = v103;
    CGFloat v44 = v104;
    CGFloat v45 = v105;
    CGFloat v46 = v106;
    char v60 = v107;
  }
  else
  {
    char v60 = 1;
    CGFloat v43 = 0.0;
    CGFloat v44 = 0.0;
    CGFloat v45 = 0.0;
    CGFloat v46 = 0.0;
  }
  sub_754D0();
  uint64_t v69 = v94;
  if (v95(v56, 1, v94) == 1)
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  uint64_t v70 = sub_75380();
  int v72 = v71 & 1;
  v93(v56, v69);
  if (v70 == 1 && v72 == 0) {
    double v42 = 33.0;
  }
  else {
    double v42 = 17.0;
  }
  CGFloat v65 = v102;
  CGFloat v66 = v30;
  CGFloat v67 = v32;
  CGFloat v68 = v34;
  if ((v60 & 1) == 0) {
    goto LABEL_32;
  }
LABEL_33:
  double MaxY = CGRectGetMaxY(*(CGRect *)&v65);
  id v75 = sub_519B4();
  [v75 intrinsicContentSize];
  double v77 = v76;
  double v79 = v78;

  if (v47) {
    double MaxY = MaxY - v42 - v79;
  }
  v108.origin.CGFloat x = v102;
  v108.origin.CGFloat y = v30;
  v108.size.CGFloat width = v32;
  v108.size.height = v34;
  double v80 = round((CGRectGetWidth(v108) - v77) * 0.5);
  id v81 = sub_519B4();
  [v81 frame];
  CGFloat v83 = v82;
  CGFloat v85 = v84;
  CGFloat v87 = v86;
  CGFloat v89 = v88;

  v109.origin.CGFloat x = v83;
  v109.origin.CGFloat y = v85;
  v109.size.CGFloat width = v87;
  v109.size.height = v89;
  v110.origin.CGFloat x = v80;
  v110.origin.CGFloat y = MaxY;
  v110.size.CGFloat width = v77;
  v110.size.height = v79;
  if (!CGRectEqualToRect(v109, v110))
  {
    id v90 = sub_519B4();
    [v90 setFrame:v80 MaxY:v77 v79];
  }
}

void sub_52BEC()
{
  objc_super v1 = v0;
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v3 = v2;
  id v4 = [v2 window];

  if (!v4) {
    return;
  }
  id v5 = [v1 parentViewController];
  if (v5)
  {
    uint64_t v6 = v5;
    id v100 = [v5 view];

    if (v100)
    {
      uint64_t v7 = self;
      [v7 begin];
      [v7 setDisableActions:1];
      id v8 = [v1 view];
      if (v8)
      {
        uint64_t v9 = v8;
        id v10 = [v1 view];
        if (v10)
        {
          uint64_t v11 = v10;
          [v10 bounds];
          double v13 = v12;
          double v15 = v14;
          double v17 = v16;
          double v19 = v18;

          [v9 convertRect:v100 toCoordinateSpace:v13, v15, v17, v19];
          CGFloat v21 = v20;
          double v23 = v22;
          CGFloat v25 = v24;
          double v27 = v26;

          id v28 = [v1 view];
          if (v28)
          {
            double v29 = v28;
            id v30 = [v28 window];

            CGFloat rect = v27;
            if (v30)
            {
              [v30 bounds];
              double Height = CGRectGetHeight(v102);

              double v32 = Height * 0.06;
            }
            else
            {
              double v32 = 0.0;
            }
            double v34 = v23 + v32;
            id v35 = sub_517C8();
            [v4 bounds];
            [v35 setFrame:CGRectMake(0.0, -v23, CGRectGetWidth(v103), v34)];

            id v36 = sub_54070(&OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___topGradientMask, (SEL *)&selRef_whiteColor, (SEL *)&selRef_clearColor);
            id v37 = sub_517C8();
            [v37 bounds];
            double v39 = v38;
            double v41 = v40;
            double v43 = v42;
            double v45 = v44;

            [v36 setFrame:v39, v41, v43, v45];
            id v46 = sub_54070(&OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___topGradientMask, (SEL *)&selRef_whiteColor, (SEL *)&selRef_clearColor);
            __swift_instantiateConcreteTypeFromMangledName(&qword_99FB0);
            uint64_t v47 = swift_allocObject();
            *(_OWORD *)(v47 + 16) = xmmword_78AE0;
            id v48 = objc_allocWithZone((Class)NSNumber);
            *(float *)&double v45 = v23 / v34;
            LODWORD(v49) = LODWORD(v45);
            *(void *)(v47 + 32) = [v48 initWithFloat:v49];
            sub_FAEC(0, &qword_9A240);
            *(NSNumber *)(v47 + 40) = sub_76E30(1.0);
            sub_769F0();
            Class isa = sub_769C0().super.isa;
            swift_bridgeObjectRelease();
            [v46 setLocations:isa];

            [v100 bounds];
            double MaxY = CGRectGetMaxY(v104);
            v105.origin.CGFloat x = v21;
            v105.origin.CGFloat y = v23;
            v105.size.CGFloat width = v25;
            v105.size.height = rect;
            double v52 = CGRectGetMaxY(v105);
            id v53 = [v1 view];
            if (v53)
            {
              double v54 = v53;
              id v55 = [v53 window];

              double v56 = 0.0;
              if (v55)
              {
                [v55 bounds];
                double v57 = CGRectGetHeight(v106);

                double v56 = v57 * 0.06;
              }
              id v58 = sub_518C8();
              id v59 = [v1 view];
              if (v59)
              {
                char v60 = v59;
                [v59 bounds];
                CGFloat v62 = v61;
                CGFloat v64 = v63;
                CGFloat v66 = v65;
                CGFloat v68 = v67;

                v107.origin.CGFloat x = v62;
                v107.origin.CGFloat y = v64;
                v107.size.CGFloat width = v66;
                v107.size.height = v68;
                double v69 = CGRectGetMaxY(v107);
                id v70 = [v1 view];
                if (v70)
                {
                  char v71 = v70;
                  double v72 = MaxY - v52 + v56;
                  id v73 = [v70 window];

                  if (v73)
                  {
                    [v73 bounds];
                    double v74 = CGRectGetHeight(v108);

                    double v75 = v74 * 0.06;
                  }
                  else
                  {
                    double v75 = 0.0;
                  }
                  double v76 = v69 - v75;
                  [v4 bounds:2, 5];
                  double v77 = 0.0;
                  [v58 setFrame:CGRectMake(0.0, v76, CGRectGetWidth(v109), v72)];

                  id v78 = sub_54070(&OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___bottomGradientMask, (SEL *)&selRef_clearColor, (SEL *)&selRef_whiteColor);
                  id v79 = sub_518C8();
                  [v79 bounds];
                  double v81 = v80;
                  double v83 = v82;
                  double v85 = v84;
                  double v87 = v86;

                  [v78 setFrame:v81, v83, v85, v87];
                  id v88 = [v1 view];
                  if (v88)
                  {
                    CGFloat v89 = v88;
                    id v90 = [v88 window];

                    if (v90)
                    {
                      [v90 bounds];
                      double v91 = CGRectGetHeight(v110);

                      double v77 = v91 * 0.06;
                    }
                    id v92 = sub_54070(&OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___bottomGradientMask, (SEL *)&selRef_clearColor, (SEL *)&selRef_whiteColor);
                    uint64_t v93 = swift_allocObject();
                    *(_OWORD *)(v93 + 16) = v98;
                    *(NSNumber *)(v93 + 32) = sub_76E30(0.0);
                    id v95 = objc_allocWithZone((Class)NSNumber);
                    float v94 = v77 / v72;
                    *(float *)&double v96 = v94;
                    *(void *)(v93 + 40) = [v95 initWithFloat:v96];
                    sub_769F0();
                    Class v97 = sub_769C0().super.isa;
                    swift_bridgeObjectRelease();
                    [v92 setLocations:v97];

                    [v7 commit];
                    double v33 = v100;
                    goto LABEL_25;
                  }
LABEL_35:
                  __break(1u);
                  return;
                }
LABEL_34:
                __break(1u);
                goto LABEL_35;
              }
LABEL_33:
              __break(1u);
              goto LABEL_34;
            }
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
LABEL_31:
          __break(1u);
          goto LABEL_32;
        }
LABEL_30:
        __break(1u);
        goto LABEL_31;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
  }
  double v33 = v4;
LABEL_25:
}

uint64_t TranscriptViewController.updateContentUnavailableConfiguration(using:)()
{
  uint64_t v1 = v0;
  uint64_t v30 = sub_76500();
  uint64_t v33 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_76520();
  uint64_t v31 = *(void *)(v4 - 8);
  uint64_t v32 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_76540();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  double v13 = (char *)&v28 - v12;
  sub_50398();
  uint64_t v14 = sub_27F8C();
  char v16 = v15;
  swift_release();
  if (v16 == 3)
  {
    *((void *)&v36 + 1) = sub_75A90();
    id v37 = (void (*)())&protocol witness table for UIContentUnavailableConfiguration;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&aBlock);
    uint64_t v19 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v20 = *(void *)(v1 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_retrySubject);
    uint64_t v21 = swift_allocObject();
    *(void *)(v21 + 16) = v19;
    *(void *)(v21 + 24) = v20;
    LOBYTE(v19) = *(unsigned char *)(v1 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_isNetworkReachable);
    sub_18A84(v14, 3);
    swift_retain();
    static UIContentUnavailableConfiguration.playerTranscriptUnavailableConfig(error:isOffline:retryCallback:)(v14, (v19 & 1) == 0, (uint64_t)sub_64338, v21, (uint64_t)boxed_opaque_existential_1);
    id v22 = [self clearColor];
    double v23 = (void (*)(unsigned char *, void))sub_759E0();
    sub_75970();
    v23(v34, 0);
    swift_release();
    sub_76C20();
    sub_18A70(v14, 3);
    return sub_18A70(v14, 3);
  }
  else if (v16 == 4 && !v14)
  {
    sub_FAEC(0, (unint64_t *)&qword_99F20);
    uint64_t v28 = sub_76CA0();
    sub_76530();
    sub_76570();
    double v29 = *(void (**)(char *, uint64_t))(v8 + 8);
    v29(v10, v7);
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v37 = sub_64268;
    uint64_t v38 = v24;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v36 = sub_4CF00;
    *((void *)&v36 + 1) = &block_descriptor_6;
    CGFloat v25 = _Block_copy(&aBlock);
    swift_release();
    sub_76510();
    *(void *)&long long aBlock = &_swiftEmptyArrayStorage;
    sub_64288(&qword_98570, 255, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_99F30);
    sub_D034((unint64_t *)&qword_98578, (uint64_t *)&unk_99F30);
    uint64_t v26 = v30;
    sub_76FE0();
    double v27 = (void *)v28;
    sub_76C50();
    _Block_release(v25);

    (*(void (**)(char *, uint64_t))(v33 + 8))(v3, v26);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v32);
    return ((uint64_t (*)(char *, uint64_t))v29)(v13, v7);
  }
  else
  {
    sub_18A70(v14, v16);
    id v37 = 0;
    long long aBlock = 0u;
    long long v36 = 0u;
    return sub_76C20();
  }
}

void sub_53928()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_50398();

    uint64_t v2 = sub_27F8C();
    char v4 = v3;
    int v5 = v3;
    swift_release();
    sub_18A70(v2, v4);
    if (v5 == 4 && !v2)
    {
      swift_beginAccess();
      uint64_t v6 = swift_unknownObjectWeakLoadStrong();
      if (v6)
      {
        uint64_t v7 = (void *)v6;
        swift_beginAccess();
        uint64_t v8 = swift_unknownObjectWeakLoadStrong();
        if (v8)
        {
          uint64_t v9 = (void *)v8;
          *((void *)&v11 + 1) = sub_75A90();
          uint64_t v12 = &protocol witness table for UIContentUnavailableConfiguration;
          __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v10);
          sub_75A80();
        }
        else
        {
          uint64_t v12 = 0;
          long long v10 = 0u;
          long long v11 = 0u;
        }
        sub_76C20();
      }
    }
  }
}

uint64_t sub_53B34()
{
  uint64_t v1 = v0;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A610);
  uint64_t v2 = *(void *)(v35 - 8);
  uint64_t v34 = *(void *)(v2 + 64);
  uint64_t v3 = __chkstk_darwin(v35);
  uint64_t v33 = (char *)v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v32 = (char *)v30 - v5;
  uint64_t v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A618);
  uint64_t v6 = *(void *)(v36 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = __chkstk_darwin(v36);
  uint64_t v9 = (char *)v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v11 = (char *)v30 - v10;
  uint64_t v31 = (char *)v30 - v10;
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = *(void *)(v1 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_session);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = v12;
  v30[1] = sub_FAEC(0, &qword_9A620);
  type metadata accessor for TranscriptContentViewModel();
  swift_retain();
  sub_76BD0();
  sub_4CB58();
  uint64_t v15 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v16 = v36;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v36);
  unint64_t v17 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v18 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v18 + v17, v9, v16);
  *(void *)(v18 + ((v7 + v17 + 7) & 0xFFFFFFFFFFFFFFF8)) = v15;
  id v19 = objc_allocWithZone((Class)__swift_instantiateConcreteTypeFromMangledName(&qword_9A628));
  uint64_t v20 = sub_75AA0();
  sub_76910();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v21 = v32;
  sub_76BE0();
  uint64_t v22 = swift_allocObject();
  swift_unknownObjectWeakInit();
  double v23 = v33;
  uint64_t v24 = v21;
  uint64_t v25 = v35;
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v33, v21, v35);
  unint64_t v26 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v27 = (v34 + v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v28 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v28 + v26, v23, v25);
  *(void *)(v28 + v27) = v22;
  swift_retain();
  sub_75AB0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v24, v25);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v31, v36);
  swift_release();
  return v20;
}

id sub_53FC4()
{
  uint64_t v1 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___collectionViewWrapper;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___collectionViewWrapper);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___collectionViewWrapper);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UIView) init];
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_54038()
{
  return sub_54070(&OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___topGradientMask, (SEL *)&selRef_whiteColor, (SEL *)&selRef_clearColor);
}

id sub_54054()
{
  return sub_54070(&OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___bottomGradientMask, (SEL *)&selRef_clearColor, (SEL *)&selRef_whiteColor);
}

id sub_54070(uint64_t *a1, SEL *a2, SEL *a3)
{
  uint64_t v4 = *a1;
  uint64_t v5 = *(void **)(v3 + *a1);
  if (v5)
  {
    id v6 = *(id *)(v3 + *a1);
  }
  else
  {
    id v7 = sub_64D4C(a2, a3);
    uint64_t v8 = *(void **)(v3 + v4);
    *(void *)(v3 + v4) = v7;
    id v6 = v7;

    uint64_t v5 = 0;
  }
  id v9 = v5;
  return v6;
}

BOOL sub_540D4(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 32);
  unsigned int v3 = *(unsigned __int8 *)(a2 + 32);
  uint64_t v4 = v2 & v3;
  if ((v2 & 1) == 0 && (v3 & 1) == 0) {
    return CGRectEqualToRect(*(CGRect *)a1, *(CGRect *)a2);
  }
  return v4;
}

id sub_54118()
{
  uint64_t v1 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___timestampView;
  int v2 = *(void **)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___timestampView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___timestampView);
  }
  else
  {
    uint64_t v4 = v0;
    char v11 = 0;
    uint64_t v5 = sub_4CB58();
    id v6 = objc_allocWithZone((Class)type metadata accessor for TranscriptTimestampView());
    id v7 = TranscriptTimestampView.init(enclosingViewType:enclosingScrollView:)(&v11, v5);
    uint64_t v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    id v3 = v7;

    int v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id TranscriptViewController.__allocating_init(nibName:bundle:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  if (a2)
  {
    NSString v6 = sub_768D0();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v6 = 0;
  }
  id v7 = [objc_allocWithZone(v4) initWithNibName:v6 bundle:a3];

  return v7;
}

void TranscriptViewController.init(nibName:bundle:)()
{
}

uint64_t sub_544B4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v44[1] = a4;
  uint64_t v7 = sub_758C0();
  uint64_t v46 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v9 = (char *)v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v44 - v11;
  uint64_t v48 = 0;
  unint64_t v49 = 0xE000000000000000;
  sub_77060(34);
  swift_bridgeObjectRelease();
  uint64_t v48 = 0x203A736C65646F4DLL;
  unint64_t v49 = 0xE800000000000000;
  double v45 = v9;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_77180();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  uint64_t v14 = 3026478;
  if (v13) {
    v15._countAndFlagsBits = 8756450;
  }
  else {
    v15._countAndFlagsBits = 3026478;
  }
  uint64_t v16 = (void *)0xE300000000000000;
  if (v13) {
    unint64_t v17 = (void *)0xA300000000000000;
  }
  else {
    unint64_t v17 = (void *)0xE300000000000000;
  }
  v15._object = v17;
  sub_76970(v15);
  swift_bridgeObjectRelease();
  v50._countAndFlagsBits = 0x656D6E67696C410ALL;
  v50._object = (void *)0xEC000000203A746ELL;
  sub_76970(v50);
  uint64_t v18 = *(void *)(a2 + 24);
  if (v18) {
    v19._countAndFlagsBits = 8756450;
  }
  else {
    v19._countAndFlagsBits = 3026478;
  }
  if (v18) {
    uint64_t v20 = (void *)0xA300000000000000;
  }
  else {
    uint64_t v20 = (void *)0xE300000000000000;
  }
  v19._object = v20;
  sub_76970(v19);
  swift_bridgeObjectRelease();
  v51._countAndFlagsBits = 0x203A726F7272450ALL;
  v51._object = (void *)0xE800000000000000;
  sub_76970(v51);
  if (a3)
  {
    uint64_t v47 = a3;
    swift_errorRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_991C8);
    uint64_t v14 = sub_76920();
    uint64_t v16 = v21;
  }
  v52._countAndFlagsBits = v14;
  v52._object = v16;
  sub_76970(v52);
  swift_bridgeObjectRelease();
  uint64_t v22 = v48;
  unint64_t v23 = v49;
  sub_758A0();
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_758B0();
  os_log_type_t v25 = sub_76B80();
  if (os_log_type_enabled(v24, v25))
  {
    v44[0] = v7;
    unint64_t v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v48 = swift_slowAlloc();
    *(_DWORD *)unint64_t v26 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v47 = sub_7D80(v22, v23, &v48);
    uint64_t v7 = v44[0];
    sub_76F90();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&def_1E2E4, v24, v25, "Alignment status:\n%s", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v46 + 8);
  uint64_t result = v27(v12, v7);
  double v29 = v45;
  if (a3)
  {
    swift_errorRetain();
    sub_758A0();
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v30 = sub_758B0();
    os_log_type_t v31 = sub_76B90();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      uint64_t v47 = a3;
      uint64_t v48 = v33;
      *(_DWORD *)uint64_t v32 = 136315138;
      swift_errorRetain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_991C8);
      uint64_t v34 = sub_76920();
      v44[0] = v7;
      uint64_t v47 = sub_7D80(v34, v35, &v48);
      sub_76F90();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&def_1E2E4, v30, v31, "Failed to complete alignment: %s", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      uint64_t v36 = v45;
      uint64_t v37 = v44[0];
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();

      uint64_t v36 = v29;
      uint64_t v37 = v7;
    }
    v27(v36, v37);
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      double v39 = (void *)Strong;
      uint64_t v40 = sub_50398();

      uint64_t v41 = *(void *)(v40 + 24);
      *(void *)(v40 + 24) = a3;
      swift_errorRetain();
      swift_errorRetain();
      sub_2A1C0(v41);
      sub_2A1AC(v41);
      uint64_t v42 = *(void *)(v40 + 24);
      sub_2A1C0(v42);
      char v43 = sub_29CD4(v42, v41);
      sub_2A1AC(v42);
      if ((v43 & 1) == 0) {
        sub_285D4();
      }
      swift_errorRelease();
      sub_2A1AC(v41);
      swift_errorRelease();
      return swift_release();
    }
    else
    {
      return swift_errorRelease();
    }
  }
  return result;
}

uint64_t sub_54A7C()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    uint64_t v2 = sub_50398();

    *(unsigned char *)(v2 + 16) = 14;
    sub_285D4();
    return swift_release();
  }
  return result;
}

uint64_t sub_54AEC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = a1[5];
  uint64_t v5 = a1[6];
  uint64_t v6 = a1[7];
  uint64_t v7 = a1[8];
  uint64_t v8 = a1[9];
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v15 = *(void *)(a2 + 8);
  uint64_t v12 = *(void *)a2;
  uint64_t v13 = *(unsigned __int8 *)(a2 + 24);
  uint64_t v10 = *a1;
  uint64_t v11 = *(void *)(a2 + 32);
  sub_6661C(*a1);
  sub_6661C(v4);
  sub_6660C(v10);
  *a3 = v4;
  a3[1] = v5;
  a3[2] = v6;
  a3[3] = v7;
  a3[4] = v8;
  a3[5] = v12;
  a3[6] = v15;
  a3[7] = v14;
  a3[8] = v13;
  a3[9] = v11;

  return swift_retain();
}

void sub_54BE8(uint64_t a1, uint64_t *a2)
{
  sub_C570((uint64_t)a2, (uint64_t)v18, &qword_9A5D8);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    sub_C570((uint64_t)a2, (uint64_t)v20, &qword_9A5D8);
    uint64_t v6 = v20[0];
    if (v20[0] != 1)
    {
      uint64_t v7 = v20[2];
      uint64_t v17 = v20[1];
      char v8 = v21;
      double v9 = v22;
      swift_retain();
      sub_50398();
      uint64_t v10 = sub_27F8C();
      char v12 = v11;
      int v13 = v11;
      swift_release();
      sub_18A70(v10, v12);
      if (!v14 || v10)
      {
        sub_50398();
        uint64_t v15 = sub_27F8C();
        swift_release();
        switch(v13)
        {
          case 0:
            if (v15 != 128) {
              break;
            }
            goto LABEL_11;
          case 1:
          case 2:
            break;
          case 3:
            sub_18A70(v15, 3);
            goto LABEL_11;
          case 4:
            goto LABEL_11;
          default:
            JUMPOUT(0);
        }
      }
      sub_C570(a1, (uint64_t)&v19, &qword_9A5D8);
      uint64_t v16 = v19;
      if (v19 == 1) {
        uint64_t v16 = 0;
      }
      sub_648B8(v6, v17, v7, v8, v16, v9);
LABEL_11:
      sub_665D8(a2);
    }
  }
}

uint64_t sub_54DD0(unint64_t *a1)
{
  uint64_t v2 = sub_758C0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = *a1;
  sub_758A0();
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_758B0();
  os_log_type_t v8 = sub_76B80();
  if (os_log_type_enabled(v7, v8))
  {
    double v9 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)double v9 = 136315138;
    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = sub_77180();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v10 = *(void *)((char *)&dword_10 + (v6 & 0xFFFFFFFFFFFFFF8));
    }
    if (v10) {
      uint64_t v11 = 0;
    }
    else {
      uint64_t v11 = 7632239;
    }
    if (v10) {
      unint64_t v12 = 0xE000000000000000;
    }
    else {
      unint64_t v12 = 0xE300000000000000;
    }
    uint64_t v14 = sub_7D80(v11, v12, &v15);
    sub_76F90();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&def_1E2E4, v7, v8, "Updated observer viewModels paragraphs: with%s content", v9, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_5501C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 56);
  char v4 = *(unsigned char *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  *(_OWORD *)a3 = *(_OWORD *)(a1 + 40);
  *(void *)(a3 + 16) = v3;
  *(unsigned char *)(a3 + 24) = v4;
  *(void *)(a3 + 32) = v5;
  *(_OWORD *)(a3 + 40) = *(_OWORD *)a2;
  *(void *)(a3 + 56) = v6;
  *(unsigned char *)(a3 + 64) = v7;
  *(void *)(a3 + 72) = v8;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();

  return swift_bridgeObjectRetain();
}

void sub_550B0(NSObject *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_758C0();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)v76 - v11;
  uint64_t v13 = *(void *)a2;
  if (!*(void *)a2) {
    return;
  }
  uint64_t v14 = *(void *)(a2 + 8);
  uint64_t v82 = v10;
  uint64_t v83 = v14;
  char v15 = *(unsigned char *)(a2 + 24);
  unint64_t v16 = *(void *)(a2 + 32);
  uint64_t v84 = *(void *)(a2 + 16);
  *(void *)&long long v85 = v16;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A540);
  sub_D034(&qword_98D20, (uint64_t *)&unk_9A540);
  if ((sub_76B10() & 1) == 0) {
    goto LABEL_29;
  }
  uint64_t v79 = v6;
  uint64_t v17 = a3 + 16;
  int v80 = v15 & 1;
  double v81 = a1;
  unint64_t isa = (unint64_t)a1[4].isa;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v20 = (void *)Strong;
    sub_50398();

    uint64_t v21 = sub_27F8C();
    char v23 = v22;
    uint64_t v24 = v12;
    uint64_t v25 = v17;
    unint64_t v26 = v16;
    uint64_t v27 = v13;
    uint64_t v28 = v8;
    unint64_t v29 = isa;
    int v30 = v22;
    swift_release();
    BOOL v31 = v30 == 4;
    unint64_t isa = v29;
    uint64_t v8 = v28;
    uint64_t v13 = v27;
    unint64_t v16 = v26;
    uint64_t v17 = v25;
    unint64_t v12 = v24;
    BOOL v31 = v31 && v21 == 0;
    int v32 = v31;
    sub_18A70(v21, v23);
  }
  else
  {
    int v32 = 0;
  }
  unsigned __int8 v33 = sub_41288(v16, isa);
  if ((v33 & 1) == 0 || v32)
  {
    swift_beginAccess();
    uint64_t v34 = swift_unknownObjectWeakLoadStrong();
    if (v34)
    {
      unint64_t v35 = (void *)v34;
      sub_559EC(v16);
    }
    if (v32) {
      goto LABEL_24;
    }
  }
  Class v36 = v81->isa;
  if ((v33 & (v81->isa != 0)) == 0)
  {
LABEL_24:
    LODWORD(v81) = v32;
    sub_758A0();
    swift_retain_n();
    double v57 = sub_758B0();
    os_log_type_t v58 = sub_76BB0();
    if (os_log_type_enabled(v57, v58))
    {
      uint64_t v59 = swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      *(void *)&long long v85 = v77;
      *(_DWORD *)uint64_t v59 = 136315650;
      uint64_t v90 = sub_7D80(0xD00000000000001BLL, 0x800000000007FDD0, (uint64_t *)&v85);
      uint64_t v78 = v17;
      sub_76F90();
      *(_WORD *)(v59 + 12) = 1024;
      LODWORD(v90) = v81 ^ 1;
      sub_76F90();
      *(_WORD *)(v59 + 18) = 2080;
      uint64_t v60 = swift_retain();
      uint64_t v61 = sub_45B10(v60, v83, v84, v80);
      unint64_t v63 = v62;
      swift_release();
      uint64_t v90 = sub_7D80(v61, v63, (uint64_t *)&v85);
      sub_76F90();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&def_1E2E4, v57, v58, "%s updating the data source (animated: %{BOOL}d, activeParagraph: %s)", (uint8_t *)v59, 0x1Cu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v82 + 8))(v12, v79);
    swift_beginAccess();
    uint64_t v64 = swift_unknownObjectWeakLoadStrong();
    if (v64)
    {
      double v65 = (void *)v64;
      sub_5603C(v16, v13, v83, v84, v80, v81 ^ 1);
    }
    goto LABEL_29;
  }
  uint64_t v37 = (uint64_t)v81[1].isa;
  uint64_t v38 = (uint64_t)v81[2].isa;
  char v39 = (char)v81[3].isa;
  swift_beginAccess();
  uint64_t v40 = swift_unknownObjectWeakLoadStrong();
  if (!v40)
  {
LABEL_29:
    swift_release();
    return;
  }
  uint64_t v41 = (void *)v40;
  uint64_t v78 = v17;
  sub_50398();

  uint64_t v42 = sub_27F8C();
  char v44 = v43;
  swift_release();
  switch(v44)
  {
    case 1:
    case 2:
    case 4:
      goto LABEL_29;
    case 3:
      sub_18A70(v42, 3);
      goto LABEL_29;
    default:
      if (v42 == 128) {
        goto LABEL_29;
      }
      uint64_t v45 = swift_retain();
      char v46 = sub_45940(v45, v37, v38, v39 & 1, v13);
      swift_release();
      if (v46) {
        goto LABEL_29;
      }
      sub_758A0();
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      uint64_t v47 = sub_758B0();
      os_log_type_t v48 = sub_76BB0();
      double v81 = v47;
      if (os_log_type_enabled(v47, v48))
      {
        uint64_t v49 = swift_slowAlloc();
        uint64_t v77 = swift_slowAlloc();
        v89[0] = v77;
        *(_DWORD *)uint64_t v49 = 136315650;
        v76[1] = isa;
        *(void *)&long long v85 = sub_7D80(0xD00000000000001BLL, 0x800000000007FDD0, v89);
        sub_76F90();
        *(_WORD *)(v49 + 12) = 2080;
        *(void *)&long long v85 = v36;
        *((void *)&v85 + 1) = v37;
        uint64_t v86 = v38;
        LOBYTE(v87) = v39;
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName(&qword_9A550);
        uint64_t v50 = sub_76920();
        *(void *)&long long v85 = sub_7D80(v50, v51, v89);
        sub_76F90();
        swift_bridgeObjectRelease_n();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v49 + 22) = 2080;
        uint64_t v52 = swift_retain();
        uint64_t v53 = sub_45B10(v52, v83, v84, v80);
        unint64_t v55 = v54;
        swift_release();
        *(void *)&long long v85 = sub_7D80(v53, v55, v89);
        sub_76F90();
        swift_release_n();
        swift_bridgeObjectRelease();
        double v56 = v81;
        _os_log_impl(&def_1E2E4, v81, v48, "%s scroll to paragraph (old: %s, new: %s)", (uint8_t *)v49, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_release_n();
      }
      (*(void (**)(char *, uint64_t))(v82 + 8))(v8, v79);
      swift_beginAccess();
      uint64_t v66 = swift_unknownObjectWeakLoadStrong();
      if (!v66) {
        goto LABEL_29;
      }
      unint64_t v67 = *(void *)(v13 + 16);
      unint64_t v68 = v67 >> 62;
      double v69 = (void *)v66;
      switch(v67 >> 62)
      {
        case 1uLL:
          uint64_t v70 = *(void *)((char *)&dword_10 + (v67 & 0x3FFFFFFFFFFFFFFFLL));
          swift_retain();
          uint64_t v71 = 0;
          uint64_t v72 = 0;
          goto LABEL_40;
        case 2uLL:
          double v74 = (void *)(v67 & 0x3FFFFFFFFFFFFFFFLL);
          uint64_t v70 = v74[5];
          uint64_t v71 = v74[6];
          uint64_t v72 = v74[7];
          uint64_t v73 = v74[8];
          goto LABEL_38;
        case 3uLL:
          double v75 = (void *)(v67 & 0x3FFFFFFFFFFFFFFFLL);
          uint64_t v70 = v75[14];
          uint64_t v71 = v75[15];
          uint64_t v72 = v75[16];
          swift_bridgeObjectRetain();
LABEL_40:
          uint64_t v73 = 0;
          goto LABEL_41;
        default:
          uint64_t v70 = *(void *)(v67 + 16);
          uint64_t v71 = *(void *)(v67 + 24);
          uint64_t v72 = *(void *)(v67 + 32);
          uint64_t v73 = *(void *)(v67 + 40);
LABEL_38:
          swift_bridgeObjectRetain();
LABEL_41:
          *(void *)&long long v85 = v70;
          *((void *)&v85 + 1) = v71;
          uint64_t v86 = v72;
          uint64_t v87 = v73;
          char v88 = v68;
          sub_569F0(&v85, 1);
          swift_release();

          sub_88A0(v70, v71, v72, v73, v68);
          break;
      }
      break;
  }
}

uint64_t sub_559EC(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A280);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A578);
  uint64_t v51 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A580);
  uint64_t v41 = *(void (***)(char *, uint64_t))(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A588);
  uint64_t v40 = *(void (***)(char *, uint64_t))(v13 - 8);
  __chkstk_darwin(v13);
  char v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v16 = v6;
  if (((unint64_t)&_swiftEmptyArrayStorage & 0xC000000000000000) != 0 && sub_77180()) {
    uint64_t v17 = (void *)sub_64E94((unint64_t)&_swiftEmptyArrayStorage);
  }
  else {
    uint64_t v17 = &_swiftEmptySetSingleton;
  }
  uint64_t v47 = v10;
  uint64_t v48 = v7;
  uint64_t v18 = (void *)(v2 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_searchSubscriptions);
  swift_beginAccess();
  uint64_t v50 = v18;
  *uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  uint64_t v39 = sub_36DC8(a1);
  uint64_t v19 = *(void *)(v39 + 16);
  uint64_t v49 = v2;
  uint64_t v46 = v13;
  if (v19)
  {
    uint64_t v20 = (uint64_t)v16;
    uint64_t v21 = v15;
    uint64_t v45 = sub_FAEC(0, (unint64_t *)&qword_99F20);
    type metadata accessor for CGRect(0);
    uint64_t v44 = v22;
    uint64_t v23 = sub_D034(&qword_9A598, &qword_9A590);
    uint64_t v42 = (void (**)(char *, uint64_t))(v51 + 8);
    uint64_t v43 = v23;
    ++v40;
    ++v41;
    uint64_t v24 = (uint64_t *)(v39 + 40);
    do
    {
      uint64_t v25 = *(v24 - 1);
      uint64_t v26 = *(void *)(*v24 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_liveText);
      uint64_t v51 = *v24;
      id v52 = *(id *)(v26 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText_activeSearchResultFrame);
      swift_retain();
      swift_retain();
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_9A590);
      sub_75C70();
      swift_release();
      sub_D034(&qword_9A5A0, &qword_9A578);
      sub_64288(&qword_9A5A8, 255, type metadata accessor for CGRect);
      uint64_t v27 = v48;
      sub_75D70();
      (*v42)(v9, v27);
      id v52 = (id)sub_76CA0();
      uint64_t v28 = sub_76C60();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v20, 1, 1, v28);
      sub_D034(&qword_9A5B0, &qword_9A580);
      sub_48C78();
      uint64_t v29 = v47;
      sub_75D40();
      sub_CA50(v20, &qword_9A280);

      (*v41)(v12, v29);
      uint64_t v30 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v31 = swift_allocObject();
      *(void *)(v31 + 16) = v30;
      *(void *)(v31 + 24) = v25;
      sub_D034(&qword_9A5B8, &qword_9A588);
      swift_retain();
      int v32 = v21;
      uint64_t v33 = v20;
      uint64_t v34 = v12;
      unint64_t v35 = v9;
      uint64_t v36 = v46;
      sub_75D80();
      swift_release();
      uint64_t v37 = v36;
      uint64_t v9 = v35;
      unint64_t v12 = v34;
      uint64_t v20 = v33;
      uint64_t v21 = v32;
      (*v40)(v32, v37);
      swift_beginAccess();
      sub_75B90();
      swift_endAccess();
      swift_release();
      swift_release();
      swift_release();
      v24 += 2;
      --v19;
    }
    while (v19);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_5603C(unint64_t isUniquelyReferenced_nonNull_native, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v103 = a6;
  int v102 = a5;
  uint64_t v101 = a4;
  uint64_t v100 = a3;
  uint64_t v104 = a2;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A558);
  uint64_t v106 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  CGRect v105 = (char *)&v99 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v99 - v10;
  sub_6655C();
  sub_8A0C();
  sub_759C0();
  v12._rawValue = &off_8EF80;
  double v112 = v11;
  uint64_t v113 = v7;
  sub_759B0(v12);
  uint64_t v13 = (void *)sub_67AA4((uint64_t)&_swiftEmptyArrayStorage);
  if (isUniquelyReferenced_nonNull_native >> 62) {
    goto LABEL_69;
  }
  uint64_t v14 = *(void *)((char *)&dword_10 + (isUniquelyReferenced_nonNull_native & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  while (1)
  {
    unint64_t v111 = isUniquelyReferenced_nonNull_native;
    if (!v14) {
      break;
    }
    unint64_t v110 = isUniquelyReferenced_nonNull_native & 0xC000000000000001;
    uint64_t v15 = 4;
    long long v108 = xmmword_78AC0;
    *(void *)&long long v109 = v14;
    while (2)
    {
      uint64_t v21 = v15 - 4;
      if (v110)
      {
        uint64_t v22 = sub_77080();
        uint64_t v23 = v15 - 3;
        if (__OFADD__(v21, 1)) {
          goto LABEL_66;
        }
      }
      else
      {
        uint64_t v22 = *(void *)(isUniquelyReferenced_nonNull_native + 8 * v15);
        swift_retain();
        uint64_t v23 = v15 - 3;
        if (__OFADD__(v21, 1))
        {
LABEL_66:
          __break(1u);
LABEL_67:
          __break(1u);
          break;
        }
      }
      unint64_t v114 = v15;
      uint64_t v115 = v23;
      unint64_t v24 = *(void *)(v22 + 16);
      unint64_t v25 = v24 >> 62;
      switch(v24 >> 62)
      {
        case 1uLL:
          uint64_t v26 = *(void *)((char *)&dword_10 + (v24 & 0x3FFFFFFFFFFFFFFFLL));
          swift_retain();
          uint64_t v27 = 0;
          uint64_t v29 = 0;
          goto LABEL_20;
        case 2uLL:
          uint64_t v30 = (void *)(v24 & 0x3FFFFFFFFFFFFFFFLL);
          uint64_t v26 = v30[5];
          uint64_t v27 = v30[6];
          uint64_t v29 = v30[7];
          uint64_t v28 = v30[8];
          goto LABEL_17;
        case 3uLL:
          uint64_t v31 = (void *)(v24 & 0x3FFFFFFFFFFFFFFFLL);
          uint64_t v26 = v31[14];
          uint64_t v27 = v31[15];
          uint64_t v29 = v31[16];
          swift_bridgeObjectRetain();
LABEL_20:
          uint64_t v28 = 0;
          goto LABEL_21;
        default:
          uint64_t v26 = *(void *)(v24 + 16);
          uint64_t v27 = *(void *)(v24 + 24);
          uint64_t v29 = *(void *)(v24 + 32);
          uint64_t v28 = *(void *)(v24 + 40);
LABEL_17:
          swift_bridgeObjectRetain();
LABEL_21:
          uint64_t v32 = v26;
          v118[0] = v26;
          v118[1] = v27;
          uint64_t v33 = v29;
          v118[2] = v29;
          v118[3] = v28;
          char v119 = v25;
          uint64_t v34 = v22;
          swift_retain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v116[0] = v13;
          unint64_t v36 = sub_6B400((uint64_t)v118);
          uint64_t v37 = v13[2];
          BOOL v38 = (v35 & 1) == 0;
          uint64_t v39 = v37 + v38;
          if (__OFADD__(v37, v38)) {
            goto LABEL_67;
          }
          char v40 = v35;
          if (v13[3] >= v39)
          {
            if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
              sub_6EBB8();
            }
          }
          else
          {
            sub_6E270(v39, isUniquelyReferenced_nonNull_native);
            unint64_t v41 = sub_6B400((uint64_t)v118);
            if ((v40 & 1) != (v42 & 1)) {
              goto LABEL_73;
            }
            unint64_t v36 = v41;
          }
          char isUniquelyReferenced_nonNull_native = v111;
          uint64_t v13 = (void *)v116[0];
          if (v40)
          {
            *(void *)(*(void *)(v116[0] + 56) + 8 * v36) = v34;
            swift_release();
LABEL_31:
            swift_bridgeObjectRelease();
            sub_88A0(v32, v27, v33, v28, v25);
            __swift_instantiateConcreteTypeFromMangledName(&qword_9A570);
            uint64_t v46 = swift_allocObject();
            *(_OWORD *)(v46 + 16) = v108;
            unint64_t v47 = *(void *)(v34 + 16);
            unint64_t v48 = v114;
            uint64_t v49 = v46;
            uint64_t v50 = v109;
            switch(v47 >> 62)
            {
              case 1uLL:
                unint64_t v16 = v13;
                *(void *)(v46 + 32) = *(void *)((char *)&dword_10 + (v47 & 0x3FFFFFFFFFFFFFFFLL));
                *(void *)(v46 + 40) = 0;
                *(void *)(v46 + 48) = 0;
                *(void *)(v46 + 56) = 0;
                *(unsigned char *)(v46 + 64) = 1;
                swift_retain();
                goto LABEL_8;
              case 2uLL:
                unint64_t v16 = v13;
                uint64_t v17 = v47 & 0x3FFFFFFFFFFFFFFFLL;
                uint64_t v18 = *(void *)(v17 + 48);
                long long v19 = *(_OWORD *)(v17 + 56);
                *(void *)(v49 + 32) = *(void *)(v17 + 40);
                *(void *)(v49 + 40) = v18;
                *(_OWORD *)(v49 + 48) = v19;
                char v20 = 2;
                goto LABEL_6;
              case 3uLL:
                unint64_t v16 = v13;
                uint64_t v53 = (void *)(v47 & 0x3FFFFFFFFFFFFFFFLL);
                uint64_t v55 = v53[14];
                uint64_t v54 = v53[15];
                uint64_t v56 = v53[16];
                *(void *)(v49 + 32) = v55;
                *(void *)(v49 + 40) = v54;
                *(void *)(v49 + 48) = v56;
                *(void *)(v49 + 56) = 0;
                char v20 = 3;
LABEL_6:
                *(unsigned char *)(v49 + 64) = v20;
                goto LABEL_7;
              default:
                unint64_t v16 = v13;
                uint64_t v51 = *(void *)(v47 + 24);
                long long v52 = *(_OWORD *)(v47 + 32);
                *(void *)(v49 + 32) = *(void *)(v47 + 16);
                *(void *)(v49 + 40) = v51;
                *(_OWORD *)(v49 + 48) = v52;
                *(unsigned char *)(v49 + 64) = 0;
LABEL_7:
                swift_bridgeObjectRetain();
LABEL_8:
                LOBYTE(v116[0]) = 0;
                sub_75990();
                swift_bridgeObjectRelease();
                swift_release();
                uint64_t v15 = v48 + 1;
                uint64_t v13 = v16;
                if (v115 != v50) {
                  continue;
                }
                goto LABEL_35;
            }
          }
          *(void *)(v116[0] + 8 * (v36 >> 6) + 64) |= 1 << v36;
          sub_4A064((uint64_t)v118, v13[6] + 40 * v36);
          *(void *)(v13[7] + 8 * v36) = v34;
          uint64_t v43 = v13[2];
          BOOL v44 = __OFADD__(v43, 1);
          uint64_t v45 = v43 + 1;
          if (!v44)
          {
            void v13[2] = v45;
            sub_8944(v32, v27, v33, v28, v25);
            goto LABEL_31;
          }
          break;
      }
      break;
    }
    __break(1u);
LABEL_69:
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_77180();
  }
LABEL_35:
  swift_bridgeObjectRelease();
  double v57 = (unint64_t *)&v107[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_viewModels];
  swift_beginAccess();
  *(void *)&long long v108 = v57;
  unint64_t v58 = *v57;
  if (*v57 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v59 = sub_77180();
    if (v59) {
      goto LABEL_37;
    }
  }
  else
  {
    uint64_t v59 = *(void *)((char *)&dword_10 + (v58 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain_n();
    if (v59)
    {
LABEL_37:
      if (v59 >= 1)
      {
        uint64_t v60 = 0;
        unint64_t v114 = v58 & 0xC000000000000001;
        long long v109 = xmmword_78AC0;
        unint64_t v110 = v58;
        uint64_t v115 = v59;
        while (1)
        {
          if (v114)
          {
            uint64_t v62 = sub_77080();
          }
          else
          {
            uint64_t v62 = *(void *)(v58 + 8 * v60 + 32);
            swift_retain();
          }
          unint64_t v63 = *(void *)(v62 + 16);
          unint64_t v64 = v63 >> 62;
          switch(v63 >> 62)
          {
            case 1uLL:
              uint64_t v66 = *(void *)((char *)&dword_10 + (v63 & 0x3FFFFFFFFFFFFFFFLL));
              swift_retain();
              uint64_t v65 = 0;
              uint64_t v67 = 0;
              goto LABEL_51;
            case 2uLL:
              double v69 = (void *)(v63 & 0x3FFFFFFFFFFFFFFFLL);
              uint64_t v66 = v69[5];
              uint64_t v65 = v69[6];
              uint64_t v67 = v69[7];
              uint64_t v68 = v69[8];
              goto LABEL_48;
            case 3uLL:
              uint64_t v70 = (void *)(v63 & 0x3FFFFFFFFFFFFFFFLL);
              uint64_t v66 = v70[14];
              uint64_t v65 = v70[15];
              uint64_t v67 = v70[16];
              swift_bridgeObjectRetain();
LABEL_51:
              uint64_t v68 = 0;
              goto LABEL_52;
            default:
              uint64_t v66 = *(void *)(v63 + 16);
              uint64_t v65 = *(void *)(v63 + 24);
              uint64_t v67 = *(void *)(v63 + 32);
              uint64_t v68 = *(void *)(v63 + 40);
LABEL_48:
              swift_bridgeObjectRetain();
LABEL_52:
              v116[0] = v66;
              v116[1] = v65;
              v116[2] = v67;
              v116[3] = v68;
              char v117 = v64;
              if (!v13[2] || (unint64_t v71 = sub_6B400((uint64_t)v116), (v72 & 1) == 0))
              {
                sub_88A0(v66, v65, v67, v68, v64);
LABEL_40:
                uint64_t v61 = v115;
                goto LABEL_41;
              }
              uint64_t v73 = v13;
              uint64_t v74 = *(void *)(v13[7] + 8 * v71);
              swift_retain();
              sub_88A0(v66, v65, v67, v68, v64);
              unint64_t v75 = *(void *)(v74 + 16);
              if ((v75 >> 62) >= 2)
              {
                uint64_t v80 = swift_retain();
                if (_s19PodcastsTranscripts26TranscriptContentViewModelC2eeoiySbAC_ACtFZ_0(v80, v62))
                {
LABEL_59:
                  swift_release();
                  swift_release();
                  uint64_t v13 = v73;
                  unint64_t v58 = v110;
                  goto LABEL_40;
                }
              }
              else
              {
                swift_retain();
                if (v74 == v62) {
                  goto LABEL_59;
                }
              }
              __swift_instantiateConcreteTypeFromMangledName(&qword_9A570);
              uint64_t v76 = swift_allocObject();
              *(_OWORD *)(v76 + 16) = v109;
              uint64_t v77 = v76;
              switch(v75 >> 62)
              {
                case 1uLL:
                  *(void *)(v76 + 32) = *(void *)((char *)&dword_10 + (v75 & 0x3FFFFFFFFFFFFFFFLL));
                  *(void *)(v76 + 40) = 0;
                  *(void *)(v76 + 48) = 0;
                  *(void *)(v76 + 56) = 0;
                  *(unsigned char *)(v76 + 64) = 1;
                  swift_retain();
                  goto LABEL_65;
                case 2uLL:
                  uint64_t v81 = *(void *)&stru_20.segname[(v75 & 0x3FFFFFFFFFFFFFFFLL) + 8];
                  long long v82 = *(_OWORD *)&stru_20.segname[(v75 & 0x3FFFFFFFFFFFFFFFLL) + 16];
                  *(void *)(v77 + 32) = *(void *)&stru_20.segname[v75 & 0x3FFFFFFFFFFFFFFFLL];
                  *(void *)(v77 + 40) = v81;
                  *(_OWORD *)(v77 + 48) = v82;
                  char v83 = 2;
                  goto LABEL_62;
                case 3uLL:
                  uint64_t v84 = *(void *)&stru_68.segname[v75 & 0x3FFFFFFFFFFFFFFFLL];
                  uint64_t v85 = *(void *)&stru_68.segname[(v75 & 0x3FFFFFFFFFFFFFFFLL) + 8];
                  *(void *)(v77 + 32) = *(void *)&stru_68.segname[(v75 & 0x3FFFFFFFFFFFFFFFLL) - 8];
                  *(void *)(v77 + 40) = v84;
                  *(void *)(v77 + 48) = v85;
                  *(void *)(v77 + 56) = 0;
                  char v83 = 3;
LABEL_62:
                  *(unsigned char *)(v77 + 64) = v83;
                  goto LABEL_63;
                default:
                  uint64_t v78 = *(void *)(v75 + 24);
                  long long v79 = *(_OWORD *)(v75 + 32);
                  *(void *)(v77 + 32) = *(void *)(v75 + 16);
                  *(void *)(v77 + 40) = v78;
                  *(_OWORD *)(v77 + 48) = v79;
                  *(unsigned char *)(v77 + 64) = 0;
LABEL_63:
                  swift_bridgeObjectRetain();
LABEL_65:
                  uint64_t v61 = v115;
                  v86._rawValue = (void *)v77;
                  sub_759A0(v86);
                  swift_release();
                  swift_bridgeObjectRelease();
                  swift_release();
                  uint64_t v13 = v73;
                  unint64_t v58 = v110;
                  break;
              }
LABEL_41:
              swift_release();
              if (v61 == ++v60) {
                goto LABEL_71;
              }
              break;
          }
        }
      }
      __break(1u);
LABEL_73:
      sub_77260();
      __break(1u);
      JUMPOUT(0x569B0);
    }
  }
LABEL_71:
  swift_bridgeObjectRelease_n();
  *(void *)long long v108 = v111;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v87 = v107;
  id v88 = sub_4C684();
  uint64_t v89 = v106;
  uint64_t v90 = v105;
  id v92 = v112;
  uint64_t v91 = v113;
  (*(void (**)(char *, char *, uint64_t))(v106 + 16))(v105, v112, v113);
  uint64_t v93 = swift_allocObject();
  uint64_t v94 = v104;
  *(void *)(v93 + 16) = v87;
  *(void *)(v93 + 24) = v94;
  uint64_t v95 = v101;
  *(void *)(v93 + 32) = v100;
  *(void *)(v93 + 40) = v95;
  *(unsigned char *)(v93 + 48) = v102 & 1;
  *(unsigned char *)(v93 + 49) = v103 & 1;
  id v96 = v87;
  swift_retain();
  sub_75AD0();

  swift_release();
  Class v97 = *(void (**)(char *, uint64_t))(v89 + 8);
  v97(v90, v91);
  swift_bridgeObjectRelease();
  return ((uint64_t (*)(char *, uint64_t))v97)(v92, v91);
}

uint64_t sub_569F0(long long *a1, int a2)
{
  uint64_t v3 = v2;
  int v28 = a2;
  uint64_t v5 = sub_758C0();
  uint64_t v26 = *(void *)(v5 - 8);
  uint64_t v27 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_98020);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_75190();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v30 = *a1;
  uint64_t v16 = *((void *)a1 + 2);
  uint64_t v17 = *((void *)a1 + 3);
  char v18 = *((unsigned char *)a1 + 32);
  uint64_t v29 = v3;
  long long v19 = (void *)sub_4C684(v13);
  long long v31 = v30;
  uint64_t v32 = v16;
  uint64_t v33 = v17;
  char v34 = v18;
  sub_75AE0();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    uint64_t v21 = v26;
    uint64_t v20 = v27;
    sub_CA50((uint64_t)v10, &qword_98020);
    sub_758A0();
    uint64_t v22 = sub_758B0();
    os_log_type_t v23 = sub_76B90();
    if (os_log_type_enabled(v22, v23))
    {
      unint64_t v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v24 = 0;
      _os_log_impl(&def_1E2E4, v22, v23, "Attempted to scroll to an identifier that is not in the data source", v24, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v7, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v15, v10, v11);
    sub_56CD0((uint64_t)v15, v28 & 1);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v15, v11);
  }
}

void sub_56CD0(uint64_t a1, char a2)
{
  uint64_t v3 = sub_758C0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (void *)sub_4C684(v5);
  sub_75AC0();

  LODWORD(v8) = v15;
  sub_8994(v14[1], v14[2], v14[3], v14[4], v15);
  if (v8 == 255)
  {
    sub_758A0();
    uint64_t v11 = sub_758B0();
    os_log_type_t v12 = sub_76B90();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&def_1E2E4, v11, v12, "Attempted to scroll to an index that is not in the data source", v13, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  }
  else
  {
    uint64_t v9 = sub_4CB58();
    Class isa = sub_75130().super.isa;
    [v9 _scrollToItemAtIndexPath:isa atScrollPosition:1 additionalInsets:a2 & 1 animated:20.0];
  }
}

uint64_t sub_56EA4(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v47 = a1;
  uint64_t v7 = sub_757F0();
  uint64_t v45 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  __chkstk_darwin(v7);
  uint64_t v51 = (uint64_t)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_758C0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  os_log_type_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  BOOL v44 = (char *)&v42 - v14;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v42 - v16;
  uint64_t v18 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_playTask;
  if (*(void *)(v4 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_playTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_991C8);
    sub_76A90();
    swift_release();
  }
  *(void *)(v4 + v18) = 0;
  swift_release();
  sub_758A0();
  id v19 = a3;
  uint64_t v20 = sub_758B0();
  os_log_type_t v21 = sub_76B80();
  BOOL v22 = os_log_type_enabled(v20, v21);
  uint64_t v49 = v10;
  uint64_t v50 = v9;
  unint64_t v48 = v12;
  if (v22)
  {
    uint64_t v43 = a2;
    uint64_t v23 = swift_slowAlloc();
    uint64_t v54 = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 141558275;
    uint64_t v52 = 1752392040;
    sub_76F90();
    *(_WORD *)(v23 + 12) = 2081;
    id v24 = [v19 transcriptIdentifier];
    if (v24)
    {
      unint64_t v25 = v24;
      uint64_t v26 = sub_76910();
      uint64_t v28 = v27;
    }
    else
    {
      uint64_t v26 = 0;
      uint64_t v28 = 0;
    }
    uint64_t v52 = v26;
    uint64_t v53 = v28;
    __swift_instantiateConcreteTypeFromMangledName(&qword_99240);
    uint64_t v30 = sub_76920();
    uint64_t v52 = sub_7D80(v30, v31, &v54);
    sub_76F90();

    swift_bridgeObjectRelease();
    _os_log_impl(&def_1E2E4, v20, v21, "Beginning alignment with transcripts content %{private,mask.hash}s", (uint8_t *)v23, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v9 = v50;
    uint64_t v29 = *(void (**)(char *, uint64_t))(v49 + 8);
    v29(v17, v50);
    a2 = v43;
  }
  else
  {

    uint64_t v29 = *(void (**)(char *, uint64_t))(v10 + 8);
    v29(v17, v9);
  }
  uint64_t v32 = sub_50398();
  uint64_t v33 = *(void *)(v32 + 24);
  *(void *)(v32 + 24) = 2;
  sub_2A1C0(v33);
  sub_2A1AC(v33);
  uint64_t v34 = *(void *)(v32 + 24);
  sub_2A1C0(v34);
  char v35 = sub_29CD4(v34, v33);
  sub_2A1AC(v34);
  if ((v35 & 1) == 0) {
    sub_285D4();
  }
  sub_2A1AC(v33);
  swift_release();
  uint64_t v36 = v51;
  sub_576B4(a2, v51);
  sub_75310();
  (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v36, v46);
  uint64_t v37 = v44;
  sub_758A0();
  BOOL v38 = sub_758B0();
  os_log_type_t v39 = sub_76B80();
  if (os_log_type_enabled(v38, v39))
  {
    char v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)char v40 = 0;
    _os_log_impl(&def_1E2E4, v38, v39, "Alignment for episode began", v40, 2u);
    swift_slowDealloc();
  }

  return ((uint64_t (*)(char *, uint64_t))v29)(v37, v9);
}

uint64_t sub_576B4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A3E0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_75840();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_76B70();
  if (v12)
  {
    uint64_t v13 = sub_75800();
    sub_64288(&qword_9A3E8, 255, (void (*)(uint64_t))&type metadata accessor for AlignmentCoordinatorError);
    swift_allocError();
    uint64_t v15 = v14;
    uint64_t v16 = (unsigned int *)&enum case for AlignmentCoordinatorError.invalidAdamID(_:);
    goto LABEL_5;
  }
  uint64_t v31 = a2;
  uint64_t v32 = v11;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_CA50((uint64_t)v6, &qword_9A3E0);
LABEL_12:
    id v24 = [a1 transcriptIdentifier];
    if (v24)
    {
      unint64_t v25 = v24;
      sub_76910();

      id v26 = [a1 priceType];
      if (v26)
      {
        uint64_t v27 = v26;
        sub_76910();
      }
      return sub_757E0();
    }
    uint64_t v13 = sub_75800();
    sub_64288(&qword_9A3E8, 255, (void (*)(uint64_t))&type metadata accessor for AlignmentCoordinatorError);
    swift_allocError();
    uint64_t v15 = v30;
    uint64_t v16 = (unsigned int *)&enum case for AlignmentCoordinatorError.noTranscriptForEpisode(_:);
LABEL_5:
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v13 - 8) + 104))(v15, *v16, v13);
    return swift_willThrow();
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  uint64_t v18 = sub_75810();
  uint64_t v20 = v19;
  uint64_t v33 = v32;
  sub_65D20();
  if (v18 == sub_76FC0() && v20 == v21)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v23 = sub_77230();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v23 & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      goto LABEL_12;
    }
  }
  id v28 = [a1 priceType];
  if (v28)
  {
    uint64_t v29 = v28;
    sub_76910();
  }
  sub_75820();
  sub_757E0();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_57B34(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_757F0();
  uint64_t v40 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v46 = (uint64_t)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_758C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v42 = (char *)&v39 - v11;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v39 - v13;
  uint64_t v15 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_playTask;
  if (*(void *)(v2 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_playTask))
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_991C8);
    sub_76A90();
    swift_release();
  }
  *(void *)(v2 + v15) = 0;
  swift_release();
  sub_758A0();
  id v16 = a1;
  uint64_t v17 = sub_758B0();
  os_log_type_t v18 = sub_76B80();
  BOOL v19 = os_log_type_enabled(v17, v18);
  uint64_t v44 = v7;
  uint64_t v45 = v6;
  uint64_t v43 = v9;
  uint64_t v41 = v4;
  if (v19)
  {
    uint64_t v20 = swift_slowAlloc();
    uint64_t v49 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 141558275;
    uint64_t v47 = 1752392040;
    sub_76F90();
    *(_WORD *)(v20 + 12) = 2081;
    id v21 = [v16 transcriptIdentifier];
    if (v21)
    {
      BOOL v22 = v21;
      uint64_t v23 = sub_76910();
      uint64_t v25 = v24;
    }
    else
    {
      uint64_t v23 = 0;
      uint64_t v25 = 0;
    }
    uint64_t v47 = v23;
    uint64_t v48 = v25;
    __swift_instantiateConcreteTypeFromMangledName(&qword_99240);
    uint64_t v27 = sub_76920();
    uint64_t v47 = sub_7D80(v27, v28, &v49);
    sub_76F90();

    swift_bridgeObjectRelease();
    _os_log_impl(&def_1E2E4, v17, v18, "Beginning alignment with transcripts content %{private,mask.hash}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v6 = v45;
    id v26 = *(void (**)(char *, uint64_t))(v44 + 8);
    v26(v14, v45);
  }
  else
  {

    id v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    v26(v14, v6);
  }
  uint64_t v29 = sub_50398();
  uint64_t v30 = *(void *)(v29 + 24);
  *(void *)(v29 + 24) = 2;
  sub_2A1C0(v30);
  sub_2A1AC(v30);
  uint64_t v31 = *(void *)(v29 + 24);
  sub_2A1C0(v31);
  char v32 = sub_29CD4(v31, v30);
  sub_2A1AC(v31);
  if ((v32 & 1) == 0) {
    sub_285D4();
  }
  sub_2A1AC(v30);
  swift_release();
  uint64_t v33 = v46;
  sub_576B4(v16, v46);
  sub_75320();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v33, v41);
  uint64_t v34 = v42;
  sub_758A0();
  char v35 = sub_758B0();
  os_log_type_t v36 = sub_76B80();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v37 = 0;
    _os_log_impl(&def_1E2E4, v35, v36, "Alignment for episode began", v37, 2u);
    swift_slowDealloc();
  }

  return ((uint64_t (*)(char *, uint64_t))v26)(v34, v6);
}

void TranscriptViewController.collectionView(_:didSelectItemAt:)(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_99F50);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_98020);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_75190();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_588AC(a2, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_CA50((uint64_t)v11, &qword_98020);
    return;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
  Class isa = sub_75130().super.isa;
  id v17 = [a1 cellForItemAtIndexPath:isa];

  if (!v17) {
    goto LABEL_20;
  }
  uint64_t v18 = sub_4CA30();
  if (!v18)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

    return;
  }
  uint64_t v19 = v18;
  id v20 = [self feedbackGeneratorForView:v17];
  [v20 selectionChanged];

  uint64_t v21 = sub_4C6E4();
  *(void *)(v21 + 24) = 0;
  *(void *)(v21 + 32) = 0;
  *(void *)(v21 + 16) = v19;
  *(unsigned char *)(v21 + 40) = 1;
  swift_retain();
  swift_release();
  swift_release();
  uint64_t v22 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_playTask;
  if (*(void *)&v3[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_playTask])
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_991C8);
    sub_76A90();
    swift_release();
  }
  uint64_t v23 = sub_76A80();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v8, 1, 1, v23);
  sub_76A60();
  swift_retain();
  uint64_t v24 = v3;
  uint64_t v25 = sub_76A50();
  id v26 = (void *)swift_allocObject();
  v26[2] = v25;
  v26[3] = &protocol witness table for MainActor;
  v26[4] = v19;
  v26[5] = v24;
  *(void *)&v3[v22] = sub_604C0((uint64_t)v8, (uint64_t)&unk_99F78, (uint64_t)v26);
  swift_release();
  unint64_t v27 = *(void *)(v19 + 16);
  switch(v27 >> 62)
  {
    case 1uLL:
      uint64_t v28 = v27 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v29 = (unint64_t *)&unk_99F90;
      uint64_t v30 = type metadata accessor for SilentContent;
      goto LABEL_13;
    case 2uLL:
      uint64_t v28 = v27 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v29 = &qword_98D10;
      uint64_t v30 = type metadata accessor for SpeakerContent;
      goto LABEL_13;
    case 3uLL:
      uint64_t v28 = v27 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v29 = (unint64_t *)&qword_99F80;
      uint64_t v30 = type metadata accessor for ChapterTitleContent;
LABEL_13:
      sub_64288(v29, 255, (void (*)(uint64_t))v30);
      break;
    default:
      sub_64288(&qword_98D18, 255, (void (*)(uint64_t))type metadata accessor for TextContent);
      uint64_t v28 = v27;
      break;
  }
  swift_getObjectType();
  if (!swift_conformsToProtocol2()) {
    uint64_t v28 = 0;
  }
  if (v28)
  {
    swift_retain();
    sub_39D14();
    swift_release();
  }
  sub_58A74();
  if (sub_755E0())
  {
    *(unsigned char *)(sub_50398() + 16) = 6;
    sub_285D4();
    swift_release();

    swift_release();
LABEL_20:
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);

  swift_release();
}

uint64_t sub_588AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_75190();
  uint64_t v13 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4CA30();
  if (v7)
  {
    if (*(void *)(v7 + 16) >> 62 == 3)
    {
      uint64_t result = sub_75170();
      if (__OFADD__(result, 1))
      {
        __break(1u);
      }
      else
      {
        sub_75180();
        sub_75160();
        sub_588AC(v6);
        (*(void (**)(char *, uint64_t))(v13 + 8))(v6, v4);
        return swift_release();
      }
      return result;
    }
    swift_release();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(a2, a1, v4);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 56);
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }

  return v9(v10, v11, 1, v4);
}

uint64_t sub_58A74()
{
  uint64_t v0 = sub_76780();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = (void *)sub_75210();
  if (v4)
  {
    uint64_t v5 = sub_76B70();
    char v7 = v6;

    if ((v7 & 1) == 0)
    {
      v9[1] = v5;
      sub_65D20();
      sub_76FC0();
    }
  }
  sub_76650();
  sub_76630();
  swift_bridgeObjectRelease();
  sub_765C0();
  sub_76680();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t TranscriptViewController.collectionView(_:didDeselectItemAt:)()
{
  uint64_t result = sub_755E0();
  if ((result & 1) == 0)
  {
    *(unsigned char *)(sub_50398() + 16) = 0;
    sub_285D4();
    return swift_release();
  }
  return result;
}

uint64_t TranscriptViewController.collectionView(_:shouldSelectItemAt:)()
{
  uint64_t result = sub_4CA30();
  if (result)
  {
    unint64_t v1 = *(void *)(result + 16);
    swift_release();
    return !(v1 >> 62) || v1 >> 62 == 3;
  }
  return result;
}

uint64_t TranscriptViewController.collectionView(_:willDisplay:forItemAt:)(uint64_t a1, void *a2)
{
  return sub_65150(a2);
}

void **sub_58FF0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return (void **)&_swiftEmptyArrayStorage;
  }
  unint64_t v1 = (void *)Strong;
  __swift_instantiateConcreteTypeFromMangledName(&qword_99FB0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_79870;
  uint64_t v3 = self;
  uint64_t v4 = (objc_class *)[v3 mainBundle];
  v34._countAndFlagsBits = 0xD000000000000029;
  v25._countAndFlagsBits = 0x800000000007FC60;
  v34._object = (void *)0x800000000007FC30;
  v37.value._countAndFlagsBits = 0;
  v37.value._object = 0;
  v5.super.Class isa = v4;
  v40._countAndFlagsBits = 0;
  v40._object = (void *)0xE000000000000000;
  sub_75060(v34, v37, v5, v40, v25);

  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v7 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  swift_retain();
  NSString v8 = sub_768D0();
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_65FA0;
  uint64_t v32 = v6;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v28 = 1107296256;
  uint64_t v29 = sub_630D8;
  uint64_t v30 = &block_descriptor_55;
  uint64_t v9 = _Block_copy(&aBlock);
  id v10 = [v7 initWithName:v8 actionHandler:v9];

  _Block_release(v9);
  swift_release();
  swift_release();
  *(void *)(v2 + 32) = v10;
  long long aBlock = (void **)v2;
  sub_769F0();
  uint64_t v33 = aBlock;
  sub_50398();
  uint64_t v11 = sub_27F8C();
  unsigned __int8 v13 = v12;
  swift_release();
  if (v13 >= 3u)
  {
    if (v13 == 3) {
      sub_18A70(v11, 3);
    }
    goto LABEL_8;
  }
  if ((v11 & 0xC0) == 0x40)
  {
LABEL_8:
    uint64_t v21 = (objc_class *)[v3 mainBundle];
    v26._countAndFlagsBits = 0x800000000007FD00;
    v36._object = (void *)0x800000000007FCD0;
    v36._countAndFlagsBits = 0xD00000000000002DLL;
    v39.value._countAndFlagsBits = 0;
    v39.value._object = 0;
    v22.super.Class isa = v21;
    v42._countAndFlagsBits = 0;
    v42._object = (void *)0xE000000000000000;
    sub_75060(v36, v39, v22, v42, v26);

    uint64_t v23 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v17 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
    swift_retain();
    NSString v18 = sub_768D0();
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_65FA8;
    uint64_t v32 = v23;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v28 = 1107296256;
    uint64_t v19 = &block_descriptor_59;
    goto LABEL_9;
  }
  uint64_t v14 = (objc_class *)[v3 mainBundle];
  v26._countAndFlagsBits = 0x800000000007FD80;
  v35._object = (void *)0x800000000007FD50;
  v35._countAndFlagsBits = 0xD00000000000002DLL;
  v38.value._countAndFlagsBits = 0;
  v38.value._object = 0;
  v15.super.Class isa = v14;
  v41._countAndFlagsBits = 0;
  v41._object = (void *)0xE000000000000000;
  sub_75060(v35, v38, v15, v41, v26);

  uint64_t v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v17 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
  swift_retain();
  NSString v18 = sub_768D0();
  swift_bridgeObjectRelease();
  uint64_t v31 = sub_65FB0;
  uint64_t v32 = v16;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v28 = 1107296256;
  uint64_t v19 = &block_descriptor_63;
LABEL_9:
  uint64_t v29 = sub_630D8;
  uint64_t v30 = v19;
  uint64_t v24 = _Block_copy(&aBlock);
  [v17 initWithName:v18 actionHandler:v24];

  _Block_release(v24);
  swift_release();
  swift_release();
  sub_769B0();
  if (*(void *)((char *)&dword_10 + ((unint64_t)v33 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18 + ((unint64_t)v33 & 0xFFFFFFFFFFFFFF8)) >> 1) {
    sub_76A00();
  }
  sub_76A20();
  sub_769F0();

  return v33;
}

BOOL sub_5952C()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  unint64_t v1 = Strong;
  if (Strong)
  {
    [Strong _accessibilityShowContextMenuForElement:Strong targetPointValue:0];
  }
  return v1 != 0;
}

uint64_t sub_5959C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (void *)Strong;
    uint64_t v2 = sub_50398();

    *(unsigned char *)(v2 + 16) = 11;
    sub_285D4();
    swift_release();
  }
  return 1;
}

uint64_t sub_59610()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (void *)Strong;
    uint64_t v2 = sub_50398();

    *(unsigned char *)(v2 + 16) = 10;
    sub_285D4();
    swift_release();
  }
  return 1;
}

Class sub_59684(uint64_t a1)
{
  unint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_FAEC(0, &qword_9A210);
    v4.super.Class isa = sub_769C0().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }

  return v4.super.isa;
}

uint64_t TranscriptViewController.collectionView(_:didEndDisplaying:forItemAt:)()
{
  return sub_653C0();
}

Swift::Bool __swiftcall TranscriptViewController.scrollViewShouldScrollToTop(_:)(UIScrollView a1)
{
  *(unsigned char *)(sub_50398() + 16) = 3;
  sub_285D4();
  swift_release();
  return 1;
}

Swift::Void __swiftcall TranscriptViewController.scrollViewDidScrollToTop(_:)(UIScrollView a1)
{
  *(unsigned char *)(sub_50398() + 16) = 12;
  sub_285D4();

  swift_release();
}

Swift::Void __swiftcall TranscriptViewController.scrollViewWillBeginDragging(_:)(UIScrollView a1)
{
  *(unsigned char *)(sub_50398() + 16) = 3;
  sub_285D4();

  swift_release();
}

Swift::Void __swiftcall TranscriptViewController.scrollViewDidScroll(_:)(UIScrollView a1)
{
  [(objc_class *)a1.super.super.super.isa contentOffset];
  double v4 = v3;
  [(objc_class *)a1.super.super.super.isa contentInset];
  BOOL v6 = floor(v4 + v5) > 0.0;
  id v7 = self;
  uint64_t v8 = swift_allocObject();
  *(unsigned char *)(v8 + 16) = v6;
  *(void *)(v8 + 24) = v1;
  v13[4] = sub_655E4;
  v13[5] = v8;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  void v13[2] = sub_4CF00;
  v13[3] = &block_descriptor_18;
  uint64_t v9 = _Block_copy(v13);
  id v10 = v1;
  swift_release();
  [v7 animateWithDuration:v9 animations:0.3];
  _Block_release(v9);
  [(objc_class *)a1.super.super.super.isa contentOffset];
  sub_59E30(v11, v12);
  sub_5A2F4(a1.super.super.super.isa);
}

void sub_59D78(char a1)
{
  id v2 = sub_517C8();
  double v3 = v2;
  if (a1)
  {
    [v2 setHidden:0];

    id v4 = sub_517C8();
    [v4 setAlpha:1.0];
  }
  else
  {
    [v2 setAlpha:0.0];

    id v4 = sub_517C8();
    [v4 setHidden:1];
  }
}

void sub_59E30(double a1, double a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_98020);
  __chkstk_darwin(v4 - 8);
  BOOL v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_75190();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  id v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unsigned __int8 v13 = (char *)&v38 - v12;
  uint64_t v14 = sub_4CB58();
  [v14 _contentMargin];
  double v16 = v15;

  double v17 = v16 + a2;
  if (v17 <= 0.0)
  {
    uint64_t v23 = (char *)sub_54118();
    uint64_t v24 = sub_773B0();
    uint64_t v26 = v25;
    unint64_t v27 = (uint64_t *)&v23[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_duration];
    swift_beginAccess();
    *unint64_t v27 = v24;
    v27[1] = v26;
    sub_E684(v24, v26);

    return;
  }
  NSString v18 = sub_4CB58();
  id v19 = [v18 indexPathForItemAtPoint:a1, v17];

  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
    goto LABEL_9;
  }
  sub_75140();

  id v20 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v20(v6, v10, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
LABEL_9:
    sub_CA50((uint64_t)v6, &qword_98020);
    return;
  }
  v20(v13, v6, v7);
  uint64_t v21 = sub_4CA30();
  if (!v21)
  {
LABEL_16:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
    return;
  }
  switch(*(void *)(v21 + 16) >> 62)
  {
    case 1:
      uint64_t v28 = (unint64_t *)&unk_99F90;
      uint64_t v29 = type metadata accessor for SilentContent;
      goto LABEL_13;
    case 2:
      uint64_t v28 = &qword_98D10;
      uint64_t v29 = type metadata accessor for SpeakerContent;
      goto LABEL_13;
    case 3:
      uint64_t v28 = (unint64_t *)&qword_99F80;
      uint64_t v29 = type metadata accessor for ChapterTitleContent;
LABEL_13:
      uint64_t v22 = sub_64288(v28, 255, (void (*)(uint64_t))v29);
      break;
    default:
      uint64_t v22 = sub_64288(&qword_98D18, 255, (void (*)(uint64_t))type metadata accessor for TextContent);
      break;
  }
  uint64_t ObjectType = swift_getObjectType();
  swift_retain();
  sub_2D818(ObjectType, v22);
  char v32 = v31;
  swift_release();
  if ((v32 & 1) == 0)
  {
    uint64_t v33 = (char *)sub_54118();
    uint64_t v34 = sub_773C0();
    uint64_t v36 = v35;
    Swift::String_optional v37 = (uint64_t *)&v33[OBJC_IVAR____TtC19PodcastsTranscripts23TranscriptTimestampView_duration];
    swift_beginAccess();
    uint64_t *v37 = v34;
    v37[1] = v36;
    sub_E684(v34, v36);

    swift_release();
    goto LABEL_16;
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v13, v7);
  swift_release();
}

void sub_5A2F4(void *a1)
{
  if ([a1 isDragging]
    && ([a1 _isScrubbing] & 1) == 0
    && ([a1 isDecelerating] & 1) == 0)
  {
    id v2 = [a1 panGestureRecognizer];
    [v2 velocityInView:a1];
    double v4 = v3;

    if (qword_98018 != -1) {
      swift_once();
    }
    if (*(double *)&qword_99EE0 >= v4)
    {
      if (v4 >= -*(double *)&qword_99EE0) {
        return;
      }
      char v5 = 5;
    }
    else
    {
      char v5 = 4;
    }
    *(unsigned char *)(sub_50398() + 16) = v5;
    sub_285D4();
    swift_release();
  }
}

Class sub_5A48C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5, uint64_t a6)
{
  v166 = a5;
  uint64_t v8 = sub_76670();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  v159 = (char *)&v149 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  v158 = (char *)&v149 - v12;
  __chkstk_darwin(v13);
  v157 = (char *)&v149 - v14;
  __chkstk_darwin(v15);
  double v17 = (char *)&v149 - v16;
  __chkstk_darwin(v18);
  CGRect v153 = (char *)&v149 - v19;
  __chkstk_darwin(v20);
  v160 = (char *)&v149 - v21;
  uint64_t v22 = sub_751F0();
  __chkstk_darwin(v22 - 8);
  v167 = (id *)((char *)&v149 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A1E0);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (uint64_t *)((char *)&v149 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v156 = sub_752A0();
  uint64_t v155 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  uint64_t v28 = (char *)&v149 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  CGRect v154 = (char *)&v149 - v30;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    sub_FAEC(0, &qword_9A1E8);
    v174._countAndFlagsBits = 0;
    v174._object = (void *)0xE000000000000000;
    v176.value._countAndFlagsBits = 0;
    v176.value._object = 0;
    v172.value.super.Class isa = 0;
    v172.is_nil = 0;
    v43.value = 0;
    return (Class)sub_76E00(v174, v176, v172, v43, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)&_swiftEmptyArrayStorage, v147);
  }
  char v32 = (void *)Strong;
  Class isa = sub_75130().super.isa;
  id v34 = [a3 layoutAttributesForItemAtIndexPath:isa];

  CGRect v150 = v17;
  uint64_t v149 = v9;
  if (v34)
  {
    [v34 frame];
    uint64_t v36 = v35;
    uint64_t v38 = v37;
    uint64_t v40 = v39;
    uint64_t v42 = v41;
  }
  else
  {
    [a3 bounds];
    uint64_t v36 = v45;
    uint64_t v38 = v46;
    uint64_t v40 = v47;
    uint64_t v42 = v48;
  }
  void *v26 = a3;
  v26[1] = v36;
  v26[2] = v38;
  v26[3] = v40;
  v26[4] = v42;
  uint64_t v49 = enum case for PresentationSource.Position.view(_:);
  uint64_t v50 = sub_75290();
  uint64_t v51 = *(void *)(v50 - 8);
  (*(void (**)(void *, uint64_t, uint64_t))(v51 + 104))(v26, v49, v50);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v51 + 56))(v26, 0, 1, v50);
  uint64_t v52 = v32;
  id v162 = a3;
  uint64_t v53 = v154;
  sub_75280();
  swift_retain();
  v166 = v166;
  v165 = (void (*)(char *, void, uint64_t))sub_39208();
  v164 = *(void (**)(char *, uint64_t))(a6
                                                + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_referenceStartTime);
  LODWORD(v163) = *(unsigned __int8 *)(a6 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_referenceStartTime + 8);
  unsigned int v161 = *(unsigned __int8 *)(a6 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_referenceEndTime + 8);
  swift_getKeyPath();
  v169[0] = a6;
  sub_64288((unint64_t *)&qword_9A1F0, 255, (void (*)(uint64_t))type metadata accessor for TextContent);
  sub_75540();
  swift_release();
  id v152 = v52;
  uint64_t v54 = *(void *)&v52[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_alignmentCoordinator];
  uint64_t v170 = sub_75350();
  uint64_t v171 = sub_64288(&qword_9A1F8, 255, (void (*)(uint64_t))&type metadata accessor for NowPlayingAlignmentCoordinator);
  v169[0] = v54;
  (*(void (**)(char *, char *, uint64_t))(v155 + 16))(v28, v53, v156);
  swift_retain();
  uint64_t v55 = v167;
  sub_76E10();
  sub_76740();
  swift_allocObject();
  v148._rawValue = v55;
  uint64_t v56 = sub_76730();
  sub_766E0();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A200);
  sub_76790();
  swift_release();
  uint64_t v57 = v170;
  uint64_t v58 = v171;
  __swift_project_boxed_opaque_existential_1(v169, v170);
  uint64_t v59 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8))(v57, v58);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v169);
  swift_retain();
  UIMenuElementSize v60 = (UIMenuElementSize)sub_2E5C4(v59);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v151 = v56;
  if (swift_dynamicCastClass())
  {
    if (!((unint64_t)v60 >> 62))
    {
      swift_bridgeObjectRetain();
      sub_77240();
      sub_FAEC(0, (unint64_t *)&qword_991B0);
      swift_bridgeObjectRelease();
LABEL_9:
      uint64_t v61 = v152;
      goto LABEL_94;
    }
LABEL_87:
    sub_FAEC(0, (unint64_t *)&qword_991B0);
    swift_bridgeObjectRetain();
    uint64_t v144 = sub_77170();
    swift_bridgeObjectRelease_n();
    UIMenuElementSize v60 = v144;
    goto LABEL_9;
  }
  v169[0] = &_swiftEmptyArrayStorage;
  if (!((unint64_t)v60 >> 62))
  {
    uint64_t v62 = *(void **)((char *)&dword_10 + (v60 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    id v162 = v62;
    unint64_t v63 = v159;
    uint64_t v64 = v149;
    if (v62) {
      goto LABEL_12;
    }
LABEL_89:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    UIMenuElementSize v60 = (UIMenuElementSize)&_swiftEmptyArrayStorage;
    unint64_t v143 = (unint64_t)&_swiftEmptyArrayStorage;
    goto LABEL_90;
  }
  swift_bridgeObjectRetain();
  id v162 = (id)sub_77180();
  unint64_t v63 = v159;
  uint64_t v64 = v149;
  if (!v162) {
    goto LABEL_89;
  }
LABEL_12:
  unint64_t v65 = v60 & 0xC000000000000001;
  unsigned int v161 = enum case for ContextActionType.playFromTranscript(_:);
  v166 = (void *)(v64 + 8);
  v167 = (id *)(v64 + 104);
  uint64_t v66 = 4;
  UIMenuElementSize v163 = v60;
  do
  {
    if (v65) {
      id v67 = (id)sub_77080();
    }
    else {
      id v67 = *(id *)(v60 + 8 * v66);
    }
    uint64_t v68 = v67;
    id v69 = (id)(v66 - 3);
    if (__OFADD__(v66 - 4, 1))
    {
      __break(1u);
LABEL_85:
      __break(1u);
LABEL_86:
      __break(1u);
      goto LABEL_87;
    }
    id v70 = [v67 identifier];
    uint64_t v71 = sub_76910();
    uint64_t v73 = v72;

    v165 = (void (*)(char *, void, uint64_t))*v167;
    v165(v63, v161, v8);
    uint64_t v74 = sub_76660();
    uint64_t v76 = v75;
    v164 = (void (*)(char *, uint64_t))*v166;
    v164(v63, v8);
    if (v71 == v74 && v73 == v76)
    {
      UIMenuElementSize v60 = v163;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    char v78 = sub_77230();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v78)
    {
      UIMenuElementSize v60 = v163;
LABEL_26:
      swift_bridgeObjectRelease();
      uint64_t v79 = v68;
      sub_769B0();
      if (*(void *)((char *)&dword_10 + (v169[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                         + (v169[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
        goto LABEL_98;
      goto LABEL_27;
    }

    ++v66;
    UIMenuElementSize v60 = v163;
  }
  while (v69 != v162);
  while (1)
  {
    LODWORD(v159) = enum case for ContextActionType.copyTranscriptSelection(_:);
    uint64_t v80 = 4;
    uint64_t v81 = v158;
    while (1)
    {
      if (v65) {
        id v82 = (id)sub_77080();
      }
      else {
        id v82 = *(id *)(v60 + 8 * v80);
      }
      char v83 = v82;
      id v84 = (id)(v80 - 3);
      if (__OFADD__(v80 - 4, 1)) {
        goto LABEL_85;
      }
      id v85 = [v82 identifier];
      uint64_t v86 = sub_76910();
      uint64_t v88 = v87;

      v165(v81, v159, v8);
      uint64_t v89 = sub_76660();
      uint64_t v91 = v90;
      v164(v81, v8);
      if (v86 == v89 && v88 == v91)
      {
        UIMenuElementSize v60 = v163;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_42;
      }
      char v93 = sub_77230();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v93) {
        break;
      }

      ++v80;
      UIMenuElementSize v60 = v163;
      if (v84 == v162) {
        goto LABEL_45;
      }
    }
    UIMenuElementSize v60 = v163;
LABEL_42:
    swift_bridgeObjectRelease();
    id v94 = v83;
    sub_769B0();
    if (*(void *)((char *)&dword_10 + (v169[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                       + (v169[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
      sub_76A00();
    sub_76A20();
    sub_769F0();

    swift_bridgeObjectRetain();
LABEL_45:
    LODWORD(v158) = enum case for ContextActionType.iOSShareSheetEpisode(_:);
    uint64_t v95 = 4;
    while (1)
    {
      uint64_t v96 = v95 - 4;
      if (v65)
      {
        id v97 = (id)sub_77080();
        id v98 = (id)(v95 - 3);
        if (__OFADD__(v96, 1)) {
          goto LABEL_86;
        }
      }
      else
      {
        id v97 = *(id *)(v60 + 8 * v95);
        id v98 = (id)(v95 - 3);
        if (__OFADD__(v96, 1)) {
          goto LABEL_86;
        }
      }
      unint64_t v99 = v65;
      uint64_t v100 = v97;
      id v101 = [v97 identifier:v149];
      uint64_t v102 = sub_76910();
      uint64_t v104 = v103;

      uint64_t v105 = v8;
      uint64_t v106 = v157;
      v165(v157, v158, v105);
      uint64_t v107 = sub_76660();
      uint64_t v109 = v108;
      unint64_t v110 = v106;
      uint64_t v8 = v105;
      v164(v110, v105);
      if (v102 == v107 && v104 == v109)
      {
        UIMenuElementSize v60 = v163;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_60;
      }
      uint64_t v79 = sub_77230();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v79) {
        break;
      }

      ++v95;
      UIMenuElementSize v60 = v163;
      unint64_t v65 = v99;
      if (v98 == v162)
      {
        swift_bridgeObjectRelease();
        goto LABEL_63;
      }
    }
    UIMenuElementSize v60 = v163;
LABEL_60:
    swift_bridgeObjectRelease();
    uint64_t v79 = v100;
    sub_769B0();
    if (*(void *)((char *)&dword_10 + (v169[0] & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                       + (v169[0] & 0xFFFFFFFFFFFFFF8)) >> 1)
      sub_76A00();
    sub_76A20();
    sub_769F0();

    unint64_t v65 = v99;
LABEL_63:
    v168 = &_swiftEmptyArrayStorage;
    if ((uint64_t)v162 >= 1) {
      break;
    }
    __break(1u);
LABEL_98:
    sub_76A00();
LABEL_27:
    sub_76A20();
    sub_769F0();

    swift_bridgeObjectRetain();
  }
  double v112 = 0;
  while (2)
  {
    if (v65) {
      id v113 = (id)sub_77080();
    }
    else {
      id v113 = *(id *)(v60 + 8 * (void)v112 + 32);
    }
    unint64_t v114 = v113;
    id v115 = [v113 identifier];
    uint64_t v116 = sub_76910();
    uint64_t v118 = v117;

    char v119 = v160;
    v165(v160, v161, v105);
    uint64_t v120 = sub_76660();
    uint64_t v122 = v121;
    v164(v119, v105);
    if (v116 == v120 && v118 == v122) {
      goto LABEL_65;
    }
    char v124 = sub_77230();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v124) {
      goto LABEL_75;
    }
    id v125 = [v114 identifier];
    uint64_t v126 = sub_76910();
    uint64_t v128 = v127;

    long long v129 = v153;
    v165(v153, v159, v105);
    uint64_t v130 = sub_76660();
    uint64_t v132 = v131;
    v164(v129, v105);
    if (v126 == v130 && v128 == v132) {
      goto LABEL_65;
    }
    char v133 = sub_77230();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v133)
    {
LABEL_75:

      goto LABEL_66;
    }
    id v134 = [v114 identifier];
    uint64_t v135 = sub_76910();
    uint64_t v137 = v136;

    v138 = v150;
    v165(v150, v158, v105);
    uint64_t v139 = sub_76660();
    uint64_t v141 = v140;
    v164(v138, v105);
    if (v135 == v139 && v137 == v141)
    {
LABEL_65:

      swift_bridgeObjectRelease_n();
      goto LABEL_66;
    }
    char v142 = sub_77230();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v142) {
      goto LABEL_75;
    }
    sub_770B0();
    sub_770E0();
    sub_770F0();
    sub_770C0();
LABEL_66:
    double v112 = (char *)v112 + 1;
    UIMenuElementSize v60 = v163;
    if (v162 != v112) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  unint64_t v143 = (unint64_t)v168;
  UIMenuElementSize v60 = v169[0];
LABEL_90:
  uint64_t v61 = v152;
  if ((v143 & 0x8000000000000000) != 0 || (v143 & 0x4000000000000000) != 0)
  {
    sub_FAEC(0, (unint64_t *)&qword_991B0);
    swift_bridgeObjectRetain();
    sub_77170();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_77240();
    sub_FAEC(0, (unint64_t *)&qword_991B0);
  }
  swift_release_n();
LABEL_94:
  sub_FAEC(0, &qword_9A1E8);
  v175._countAndFlagsBits = 0;
  v175._object = (void *)0xE000000000000000;
  v177.value._countAndFlagsBits = 0;
  v177.value._object = 0;
  v173.value.super.Class isa = 0;
  v173.is_nil = 0;
  v145.value = (UIMenuIdentifier)(&def_1E2E4 + 1);
  v44.super.super.Class isa = sub_76E00(v175, v177, v173, v145, 0xFFFFFFFFFFFFFFFFLL, v60, v148).super.super.isa;

  swift_release();
  (*(void (**)(char *, uint64_t))(v155 + 8))(v154, v156);
  return v44.super.super.isa;
}

uint64_t TranscriptViewController.collectionView(_:willDisplayContextMenu:animator:)()
{
  *(unsigned char *)(sub_50398() + 16) = 8;
  sub_285D4();

  return swift_release();
}

uint64_t TranscriptViewController.collectionView(_:willEndContextMenuInteraction:animator:)()
{
  *(unsigned char *)(sub_50398() + 16) = 9;
  sub_285D4();

  return swift_release();
}

uint64_t sub_5B820()
{
  uint64_t v1 = sub_75190();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  char v31 = (char *)v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_98020);
  __chkstk_darwin(v4 - 8);
  BOOL v6 = (char *)v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_4CB58();
  id v8 = [v7 indexPathsForVisibleItems];

  uint64_t v9 = sub_769D0();
  uint64_t v10 = *(void *)(v9 + 16);
  v30[1] = v9;
  if (v10)
  {
    unint64_t v11 = v9 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
    uint64_t v41 = (uint64_t *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_viewModels);
    swift_beginAccess();
    uint64_t v13 = *(void (**)(char *, unint64_t, uint64_t))(v2 + 16);
    uint64_t v12 = v2 + 16;
    uint64_t v14 = *(void *)(v12 + 56);
    uint64_t v39 = v13;
    uint64_t v40 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 40);
    uint64_t v38 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 32);
    uint64_t v36 = v14;
    uint64_t v37 = (void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v34 = 0;
    uint64_t v35 = (void (**)(char *, uint64_t))(v12 - 8);
    void v30[2] = (char *)&type metadata for () + 8;
    uint64_t v15 = v31;
    v13(v6, v11, v1);
    while (1)
    {
      uint64_t v16 = *v40;
      (*v40)(v6, 0, 1, v1);
      if ((*v38)(v6, 1, v1) == 1) {
        return swift_bridgeObjectRelease();
      }
      (*v37)(v15, v6, v1);
      uint64_t v17 = sub_75170();
      uint64_t v18 = v17;
      if ((unint64_t)*v41 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v29 = sub_77180();
        swift_bridgeObjectRelease();
        if (v18 >= v29) {
          goto LABEL_4;
        }
      }
      else if (v17 >= *(void *)((char *)&dword_10 + (*v41 & 0xFFFFFFFFFFFFFF8)))
      {
        goto LABEL_4;
      }
      unint64_t v19 = sub_75170();
      uint64_t v20 = v41;
      uint64_t result = swift_beginAccess();
      uint64_t v22 = *v20;
      if ((*v20 & 0xC000000000000001) != 0)
      {
        uint64_t v23 = sub_77080();
      }
      else
      {
        if ((v19 & 0x8000000000000000) != 0)
        {
          __break(1u);
LABEL_23:
          __break(1u);
          return result;
        }
        if (v19 >= *(void *)((char *)&dword_10 + (v22 & 0xFFFFFFFFFFFFFF8))) {
          goto LABEL_23;
        }
        uint64_t v23 = *(void *)(v22 + 8 * v19 + 32);
        swift_retain();
      }
      swift_endAccess();
      unint64_t v24 = *(void *)(v23 + 16);
      if (v24 >> 62)
      {
        swift_release();
LABEL_4:
        (*v35)(v15, v1);
        goto LABEL_5;
      }
      swift_retain();
      swift_release();
      uint64_t v25 = v12;
      uint64_t v26 = *(void *)(v24 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_liveText);
      uint64_t KeyPath = swift_getKeyPath();
      uint64_t v33 = v30;
      __chkstk_darwin(KeyPath);
      v30[-2] = v26;
      LOBYTE(v30[-1]) = 1;
      uint64_t v32 = v26 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText___observationRegistrar;
      uint64_t v42 = v26;
      uint64_t v12 = v25;
      sub_64288(&qword_98040, 255, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
      uint64_t v28 = v34;
      sub_75530();
      uint64_t v34 = v28;
      uint64_t v15 = v31;
      swift_release();
      (*v35)(v15, v1);
      swift_release();
LABEL_5:
      v11 += v36;
      if (!--v10)
      {
        v16(v6, 1, 1, v1);
        return swift_bridgeObjectRelease();
      }
      v39(v6, v11, v1);
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(v6, 1, 1, v1);
  return swift_bridgeObjectRelease();
}

uint64_t TranscriptViewController.interactionContextPage.getter()
{
  sub_751D0();

  return swift_storeEnumTagMultiPayload();
}

uint64_t TranscriptViewController.interactionContextOrigin.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for InteractionContext.Origin.none(_:);
  uint64_t v3 = sub_751E0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

UIFindSession_optional __swiftcall TranscriptViewController.findInteraction(_:sessionFor:)(UIFindInteraction _, UIView sessionFor)
{
  swift_getObjectType();
  sub_FAEC(0, &qword_99FA0);
  sub_64288(&qword_99FA8, v3, (void (*)(uint64_t))type metadata accessor for TranscriptViewController);
  id v4 = v2;
  uint64_t v5 = (objc_class *)sub_76D90();
  result.value.super.Class isa = v5;
  result.is_nil = v6;
  return result;
}

Swift::Void __swiftcall TranscriptViewController.findInteraction(_:didBegin:)(UIFindInteraction _, UIFindSession didBegin)
{
  *(unsigned char *)(sub_50398() + 16) = 7;
  sub_285D4();

  swift_release();
}

uint64_t sub_5C004()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_4CA30();
  }
  sub_FAEC(0, &qword_9A620);
  type metadata accessor for TranscriptContentViewModel();
  uint64_t v2 = sub_76BF0();
  swift_release();
  return v2;
}

void *sub_5C0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (sub_76910() == a2 && v4 == a3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v6 = sub_77230();
    swift_bridgeObjectRelease();
    if ((v6 & 1) == 0) {
      return 0;
    }
  }
  sub_FAEC(0, &qword_9A620);
  uint64_t v7 = (void *)sub_76C00();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = (void *)Strong;
    type metadata accessor for TranscriptViewController();
    uint64_t v9 = sub_77220();
  }
  else
  {
    uint64_t v9 = 0;
  }
  id v10 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v9 action:"didTapEmptySpace"];
  swift_unknownObjectRelease();
  [v7 addGestureRecognizer:v10];

  return v7;
}

void *sub_5C258@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

void sub_5C26C(void *a1@<X8>)
{
  *a1 = 0;
}

void sub_5C274(void *a1@<X8>)
{
  *a1 = &off_8EFA8;
}

uint64_t sub_5C284(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A668);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = &v13[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = *a3;
  uint64_t v15 = a4;
  uint64_t v16 = a5;
  type metadata accessor for TranscriptViewController.ContentView();
  sub_64288(&qword_9A670, 255, (void (*)(uint64_t))type metadata accessor for TranscriptViewController.ContentView);
  sub_76070();
  sub_760C0();
  v17[3] = v8;
  void v17[4] = sub_D034(&qword_9A678, &qword_9A668);
  __swift_allocate_boxed_opaque_existential_1(v17);
  sub_76060();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
  return sub_76D40();
}

uint64_t sub_5C43C@<X0>(uint64_t a1@<X0>, uint64_t (*a2)()@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A220);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TranscriptViewController.ContentView();
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v19 - v13;
  sub_754D0();
  uint64_t v15 = sub_753F0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48))(v8, 1, v15);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    *(void *)uint64_t v12 = a1;
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(&v12[*(int *)(v9 + 20)], v8, v15);
    uint64_t v18 = (uint64_t (**)())&v12[*(int *)(v9 + 24)];
    *uint64_t v18 = sub_66A5C;
    v18[1] = a2;
    sub_6750C((uint64_t)v12, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for TranscriptViewController.ContentView);
    sub_6750C((uint64_t)v14, a3, (uint64_t (*)(void))type metadata accessor for TranscriptViewController.ContentView);
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_5C630()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    *(unsigned char *)(sub_50398() + 16) = 10;
    sub_285D4();

    return swift_release();
  }
  return result;
}

void sub_5C6A0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A630);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    v6[-2] = __chkstk_darwin(Strong);
    type metadata accessor for FooterView(0);
    sub_64288(&qword_9A638, 255, (void (*)(uint64_t))type metadata accessor for FooterView);
    sub_76070();
    sub_760C0();
    v6[3] = v0;
    v6[4] = sub_D034(&qword_9A640, &qword_9A630);
    __swift_allocate_boxed_opaque_existential_1(v6);
    sub_76060();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    sub_76D40();
  }
}

uint64_t sub_5C89C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for FooterViewModel(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5C958((uint64_t)v4);
  *(void *)a1 = swift_getKeyPath();
  *(unsigned char *)(a1 + 8) = 0;
  uint64_t v5 = type metadata accessor for FooterView(0);
  return sub_6750C((uint64_t)v4, a1 + *(int *)(v5 + 20), type metadata accessor for FooterViewModel);
}

uint64_t sub_5C958@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A650);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)sub_75210();
  if (!v5)
  {
    uint64_t v9 = sub_757A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
LABEL_11:
    uint64_t v13 = 0;
    goto LABEL_12;
  }
  id v6 = v5;
  id v7 = [v6 transcriptSource];
  if (v7)
  {
    uint64_t v8 = v7;
    sub_76910();

    sub_75780();
  }
  else
  {
    uint64_t v10 = sub_757A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
  }

  id v11 = v6;
  id v12 = [v11 author];
  uint64_t v13 = v12;
  if (!v12)
  {

LABEL_12:
    uint64_t v16 = 0;
    goto LABEL_13;
  }
  id v14 = [v12 name];

  if (!v14)
  {

    goto LABEL_11;
  }
  uint64_t v13 = (void *)sub_76910();
  uint64_t v16 = v15;

LABEL_13:
  uint64_t v17 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_C570((uint64_t)v4, a1, &qword_9A650);
  uint64_t result = type metadata accessor for FooterViewModel(0);
  uint64_t v19 = (void *)(a1 + *(int *)(result + 20));
  *uint64_t v19 = v13;
  v19[1] = v16;
  uint64_t v20 = (void (**)())(a1 + *(int *)(result + 24));
  *uint64_t v20 = sub_669A0;
  v20[1] = (void (*)())v17;
  return result;
}

uint64_t sub_5CBA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A718);
  __chkstk_darwin(v51);
  uint64_t v3 = (uint64_t *)((char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A720);
  __chkstk_darwin(v57);
  uint64_t v53 = (char *)&v50 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = type metadata accessor for SpeakerContentView();
  __chkstk_darwin(v52);
  id v6 = (uint64_t *)((char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v50 - v8;
  uint64_t v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A728);
  __chkstk_darwin(v54);
  uint64_t v56 = (uint64_t)&v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A730);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v50 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A738);
  __chkstk_darwin(v55);
  uint64_t v50 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for TextContentView();
  __chkstk_darwin(v15);
  uint64_t v17 = (unint64_t *)((char *)&v50 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v50 - v19;
  unint64_t v21 = *(void *)(*(void *)v1 + 16);
  switch(v21 >> 62)
  {
    case 1uLL:
      uint64_t v39 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TranscriptViewController.ContentView() + 24));
      uint64_t v41 = *v39;
      uint64_t v40 = v39[1];
      type metadata accessor for SilentContent();
      sub_64288(&qword_983B0, 255, (void (*)(uint64_t))type metadata accessor for SilentContent);
      swift_retain_n();
      swift_retain();
      uint64_t v42 = sub_75EA0();
      uint64_t v44 = v43;
      uint64_t v59 = 0x3FF0000000000000;
      sub_76380();
      uint64_t v45 = v60;
      uint64_t v46 = v61;
      LOBYTE(v59) = 1;
      sub_76380();
      char v47 = v60;
      uint64_t v48 = v61;
      *(void *)uint64_t v13 = v42;
      *((void *)v13 + 1) = v44;
      *((void *)v13 + 2) = v45;
      *((void *)v13 + 3) = v46;
      v13[32] = v47;
      *((void *)v13 + 5) = v48;
      *((void *)v13 + 6) = v41;
      *((void *)v13 + 7) = v40;
      swift_storeEnumTagMultiPayload();
      sub_64288((unint64_t *)&unk_9A760, 255, (void (*)(uint64_t))type metadata accessor for TextContentView);
      sub_9BEC();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      uint64_t v49 = (uint64_t)v50;
      sub_76040();
      sub_C50C(v49, v56, &qword_9A738);
      swift_storeEnumTagMultiPayload();
      sub_67360();
      sub_67410();
      sub_76040();
      swift_release();
      sub_CA50(v49, &qword_9A738);
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    case 2uLL:
      uint64_t v29 = v52;
      uint64_t v30 = (uint64_t *)((char *)v6 + *(int *)(v52 + 20));
      *uint64_t v30 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
      swift_storeEnumTagMultiPayload();
      char v31 = (uint64_t *)((char *)v6 + *(int *)(v29 + 24));
      uint64_t *v31 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
      swift_storeEnumTagMultiPayload();
      *id v6 = v21 & 0x3FFFFFFFFFFFFFFFLL;
      sub_6750C((uint64_t)v6, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for SpeakerContentView);
      uint64_t v26 = type metadata accessor for SpeakerContentView;
      sub_67574((uint64_t)v9, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for SpeakerContentView);
      swift_storeEnumTagMultiPayload();
      sub_64288(&qword_99150, 255, (void (*)(uint64_t))type metadata accessor for SpeakerContentView);
      sub_6730C();
      swift_retain_n();
      uint64_t v32 = (uint64_t)v53;
      sub_76040();
      sub_C50C(v32, v56, &qword_9A720);
      swift_storeEnumTagMultiPayload();
      sub_67360();
      sub_67410();
      sub_76040();
      swift_release();
      sub_CA50(v32, &qword_9A720);
      uint64_t v28 = (uint64_t)v9;
      return sub_675DC(v28, (uint64_t (*)(void))v26);
    case 3uLL:
      uint64_t v34 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TranscriptViewController.ContentView() + 24));
      uint64_t v36 = *v34;
      uint64_t v35 = v34[1];
      type metadata accessor for ChapterTitleContent();
      sub_64288((unint64_t *)&unk_9A740, 255, (void (*)(uint64_t))type metadata accessor for ChapterTitleContent);
      swift_retain_n();
      swift_retain();
      uint64_t *v3 = sub_75EA0();
      v3[1] = v37;
      void v3[2] = v36;
      v3[3] = v35;
      swift_storeEnumTagMultiPayload();
      sub_64288(&qword_99150, 255, (void (*)(uint64_t))type metadata accessor for SpeakerContentView);
      sub_6730C();
      swift_retain();
      swift_retain();
      uint64_t v38 = (uint64_t)v53;
      sub_76040();
      sub_C50C(v38, v56, &qword_9A720);
      swift_storeEnumTagMultiPayload();
      sub_67360();
      sub_67410();
      sub_76040();
      swift_release();
      sub_CA50(v38, &qword_9A720);
      swift_release();
      return swift_release();
    default:
      uint64_t v22 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TranscriptViewController.ContentView() + 24));
      uint64_t v23 = *v22;
      uint64_t v24 = v22[1];
      *uint64_t v17 = v21;
      v17[1] = v23;
      void v17[2] = v24;
      uint64_t v25 = (uint64_t *)((char *)v17 + *(int *)(v15 + 24));
      uint64_t *v25 = swift_getKeyPath();
      __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
      swift_storeEnumTagMultiPayload();
      sub_6750C((uint64_t)v17, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for TextContentView);
      uint64_t v26 = type metadata accessor for TextContentView;
      sub_67574((uint64_t)v20, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for TextContentView);
      swift_storeEnumTagMultiPayload();
      sub_64288((unint64_t *)&unk_9A760, 255, (void (*)(uint64_t))type metadata accessor for TextContentView);
      sub_9BEC();
      swift_retain_n();
      swift_retain();
      uint64_t v27 = (uint64_t)v50;
      sub_76040();
      sub_C50C(v27, v56, &qword_9A738);
      swift_storeEnumTagMultiPayload();
      sub_67360();
      sub_67410();
      sub_76040();
      swift_release();
      sub_CA50(v27, &qword_9A738);
      uint64_t v28 = (uint64_t)v20;
      return sub_675DC(v28, (uint64_t (*)(void))v26);
  }
}

void sub_5D57C()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    id v2 = [Strong view];
    if (v2)
    {
      uint64_t v3 = v2;
      [v2 becomeFirstResponder];

      id v4 = sub_4D948();
      [v4 presentFindNavigatorShowingReplace:0];

      sub_5D61C();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_5D61C()
{
  uint64_t v0 = sub_76780();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = (void *)sub_75210();
  if (v4)
  {
    uint64_t v5 = sub_76B70();
    char v7 = v6;

    if ((v7 & 1) == 0)
    {
      v9[1] = v5;
      sub_65D20();
      sub_76FC0();
    }
  }
  sub_76650();
  sub_76640();
  swift_bridgeObjectRelease();
  sub_765C0();
  sub_76680();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void sub_5D834(char a1)
{
  id v3 = sub_519B4();
  [v3 alpha];
  double v5 = v4;

  if (v5 != 1.0)
  {
    uint64_t v6 = self;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v1;
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = sub_65FC8;
    *(void *)(v8 + 24) = v7;
    uint64_t v24 = sub_2F19C;
    uint64_t v25 = v8;
    uint64_t v20 = _NSConcreteStackBlock;
    uint64_t v21 = 1107296256;
    uint64_t v22 = sub_5E048;
    uint64_t v23 = &block_descriptor_85;
    uint64_t v9 = _Block_copy(&v20);
    id v10 = v1;
    swift_retain();
    swift_release();
    [(id)v6 performWithoutAnimation:v9];
    _Block_release(v9);
    LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if (v6)
    {
      __break(1u);
    }
    else
    {
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 16) = v10;
      if ((a1 & 1) == 0)
      {
        id v18 = v10;
        id v19 = sub_519B4();
        [v19 setAlpha:1.0];

        sub_522CC(1u);
        sub_51C7C();
        swift_release();
        goto LABEL_7;
      }
      uint64_t v11 = qword_97FF0;
      id v12 = v10;
      if (v11 == -1)
      {
LABEL_5:
        uint64_t v13 = qword_9F118;
        [(id)qword_9F118 settlingDuration];
        id v15 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:v13 timingParameters:v14];
        uint64_t v16 = swift_allocObject();
        *(void *)(v16 + 16) = sub_65FE0;
        *(void *)(v16 + 24) = v8;
        uint64_t v24 = sub_6776C;
        uint64_t v25 = v16;
        uint64_t v20 = _NSConcreteStackBlock;
        uint64_t v21 = 1107296256;
        uint64_t v22 = sub_4CF00;
        uint64_t v23 = &block_descriptor_94;
        uint64_t v17 = _Block_copy(&v20);
        swift_retain();
        swift_release();
        [v15 addAnimations:v17];
        _Block_release(v17);
        [v15 startAnimation];
        swift_release();

LABEL_7:
        swift_release();
        return;
      }
    }
    swift_once();
    goto LABEL_5;
  }
}

void sub_5DB74(uint64_t a1)
{
  uint64_t v2 = sub_753A0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v30 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A228);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A218);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v31 = (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v29 - v12;
  __chkstk_darwin(v11);
  id v15 = (char *)&v29 - v14;
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A220);
  __chkstk_darwin(v16 - 8);
  id v18 = (char *)&v29 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1;
  sub_754D0();
  uint64_t v19 = sub_753F0();
  uint64_t v20 = *(void *)(v19 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    __break(1u);
  }
  else
  {
    sub_753B0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v18, v19);
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v13, enum case for DeviceMetrics.Layout.regularExtended(_:), v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v13, 0, 1, v2);
    uint64_t v21 = (uint64_t)&v7[*(int *)(v5 + 48)];
    sub_C50C((uint64_t)v15, (uint64_t)v7, &qword_9A218);
    sub_C50C((uint64_t)v13, v21, &qword_9A218);
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
    if (v22((uint64_t)v7, 1, v2) == 1)
    {
      sub_CA50((uint64_t)v13, &qword_9A218);
      sub_CA50((uint64_t)v15, &qword_9A218);
      int v23 = v22(v21, 1, v2);
      if (v23 == 1) {
        uint64_t v24 = &qword_9A218;
      }
      else {
        uint64_t v24 = &qword_9A228;
      }
      if (v23 == 1) {
        char v25 = -1;
      }
      else {
        char v25 = 0;
      }
    }
    else
    {
      uint64_t v26 = v31;
      sub_C50C((uint64_t)v7, v31, &qword_9A218);
      if (v22(v21, 1, v2) == 1)
      {
        sub_CA50((uint64_t)v13, &qword_9A218);
        sub_CA50((uint64_t)v15, &qword_9A218);
        (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v26, v2);
        char v25 = 0;
        uint64_t v24 = &qword_9A228;
      }
      else
      {
        uint64_t v27 = v30;
        (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v30, v21, v2);
        sub_64288(&qword_9A230, 255, (void (*)(uint64_t))&type metadata accessor for DeviceMetrics.Layout);
        char v25 = sub_768A0();
        uint64_t v28 = *(void (**)(char *, uint64_t))(v3 + 8);
        v28(v27, v2);
        uint64_t v24 = &qword_9A218;
        sub_CA50((uint64_t)v13, &qword_9A218);
        sub_CA50((uint64_t)v15, &qword_9A218);
        v28((char *)v26, v2);
      }
    }
    sub_CA50((uint64_t)v7, v24);
    sub_522CC(v25 & 1);
  }
}

uint64_t sub_5E048(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

void sub_5E070()
{
  id v0 = sub_519B4();
  [v0 setAlpha:1.0];

  sub_522CC(1u);
  sub_51C7C();
}

void sub_5E0B8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = sub_519B4();
    [v2 setAlpha:0.0];
  }
  swift_beginAccess();
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    sub_51C7C();
  }
}

__n128 sub_5E158@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(a1 + 32);
  __n128 result = *(__n128 *)a1;
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v4;
  *(unsigned char *)(a2 + 32) = v2;
  return result;
}

void sub_5E16C(double *a1, uint64_t a2, uint64_t a3)
{
  double v4 = *a1;
  double v5 = a1[1];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    sub_5E1F0(a3, v4, v5);
  }
}

void sub_5E1F0(uint64_t a1, double a2, double a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_98020);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_75190();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v13 = sub_4C684();
  unint64_t v14 = *(void *)(a1 + 16);
  unint64_t v15 = v14 >> 62;
  uint64_t v16 = v13;
  char v47 = v12;
  uint64_t v48 = v3;
  switch(v14 >> 62)
  {
    case 1uLL:
      uint64_t v17 = *(void *)((char *)&dword_10 + (v14 & 0x3FFFFFFFFFFFFFFFLL));
      swift_retain();
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      goto LABEL_7;
    case 2uLL:
      uint64_t v21 = (void *)(v14 & 0x3FFFFFFFFFFFFFFFLL);
      uint64_t v17 = v21[5];
      uint64_t v18 = v21[6];
      uint64_t v19 = v21[7];
      uint64_t v20 = v21[8];
      goto LABEL_5;
    case 3uLL:
      uint64_t v22 = (void *)(v14 & 0x3FFFFFFFFFFFFFFFLL);
      uint64_t v17 = v22[14];
      uint64_t v18 = v22[15];
      uint64_t v19 = v22[16];
      swift_bridgeObjectRetain();
LABEL_7:
      uint64_t v20 = 0;
      goto LABEL_8;
    default:
      uint64_t v17 = *(void *)(v14 + 16);
      uint64_t v18 = *(void *)(v14 + 24);
      uint64_t v19 = *(void *)(v14 + 32);
      uint64_t v20 = *(void *)(v14 + 40);
LABEL_5:
      swift_bridgeObjectRetain();
LABEL_8:
      uint64_t v49 = v17;
      uint64_t v50 = v18;
      uint64_t v51 = v19;
      uint64_t v52 = v20;
      char v53 = v15;
      sub_75AE0();

      sub_88A0(v17, v18, v19, v20, v15);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {
        sub_CA50((uint64_t)v8, &qword_98020);
        return;
      }
      int v23 = v47;
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v47, v8, v9);
      uint64_t v24 = v48;
      char v25 = sub_4CB58();
      Class isa = sub_75130().super.isa;
      id v27 = [v25 cellForItemAtIndexPath:isa];

      if (!v27) {
        goto LABEL_14;
      }
      if (*(unsigned char *)(v24 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_keyboardState + 32)) {
        goto LABEL_15;
      }
      double v45 = a3;
      [v27 frame];
      double v46 = CGRectGetHeight(v54) + 20.0;
      uint64_t v28 = sub_4CB58();
      [v28 frame];
      double v30 = v29;
      double v32 = v31;
      double v34 = v33;
      double v36 = v35;
      [v28 contentInset];
      double v38 = v37;
      double v40 = v39;

      v55.origin.CGFloat x = UIEdgeInsetsInsetRect(v30, v32, v34, v36, v38, v40);
      if (CGRectGetHeight(v55) >= v46)
      {
LABEL_15:
        (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
      }
      else
      {
        double v41 = 20.0 - v45;
        uint64_t v42 = sub_4CB58();
        Class v43 = sub_75130().super.isa;
        [v42 _scrollToItemAtIndexPath:v43 atScrollPosition:1 additionalInsets:fmin(v41, 20.0) animated:0.0];

LABEL_14:
        (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
      }
      return;
  }
}

uint64_t TranscriptViewController.keyCommands.getter()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_99FB0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_79870;
  NSString v1 = sub_768D0();
  id v2 = [self keyCommandWithInput:v1 modifierFlags:0x100000 action:"commandFKeyboardSearch"];

  *(void *)(v0 + 32) = v2;
  sub_769F0();
  return v0;
}

void sub_5E7A8()
{
  id v0 = [self _applePodcastsFoundationSharedUserDefaults];
  NSString v1 = sub_768D0();
  [v0 doubleForKey:v1];
  double v3 = v2;

  double v4 = 50.0;
  if (v3 != 0.0) {
    double v4 = v3;
  }
  qword_99EE0 = *(void *)&v4;
}

uint64_t sub_5E848(void *a1, uint64_t *a2)
{
  double v2 = (void *)a1[1];
  uint64_t v4 = *a2;
  double v3 = (void *)a2[1];
  if (!*a1)
  {
    if (!v4 || (sub_76B70(), (v12 & 1) != 0))
    {
LABEL_11:
      id v13 = [v2 asset];
      id v14 = [v3 asset];
      id v15 = v14;
      if (v13)
      {
        if (!v14)
        {
          char v11 = 0;
          goto LABEL_20;
        }
        sub_FAEC(0, &qword_9A3F0);
        id v16 = v13;
        char v11 = sub_76E50();
      }
      else
      {
        if (!v14)
        {
          char v11 = 1;
          return v11 & 1;
        }
        char v11 = 0;
      }
      id v13 = v15;
LABEL_20:

      return v11 & 1;
    }
LABEL_9:
    char v11 = 0;
    return v11 & 1;
  }
  uint64_t v5 = sub_76B70();
  char v7 = v6;
  if (!v4)
  {
    if (v6) {
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  uint64_t v8 = v5;
  uint64_t v9 = sub_76B70();
  if (v7)
  {
    if (v10) {
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  char v11 = 0;
  if ((v10 & 1) == 0 && v8 == v9) {
    goto LABEL_11;
  }
  return v11 & 1;
}

void sub_5E974(void *a1, void *a2)
{
  if (a1)
  {
    id v3 = a1;
    if (sub_755E0())
    {
      swift_beginAccess();
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        uint64_t v5 = (void *)Strong;
        sub_57B34(v3);
      }
      return;
    }
    if (a2)
    {
      id v6 = a2;
      id v7 = [v6 asset];
      if (v7)
      {
        uint64_t v8 = v7;
        swift_beginAccess();
        uint64_t v9 = swift_unknownObjectWeakLoadStrong();
        if (v9)
        {
          char v10 = (void *)v9;
          sub_56EA4((uint64_t)v8, v3, v6);
        }
        return;
      }
    }
    else
    {
      id v6 = v3;
    }
  }
  swift_beginAccess();
  uint64_t v11 = swift_unknownObjectWeakLoadStrong();
  if (v11)
  {
    char v12 = (void *)v11;
    swift_retain();

    sub_75330();
    swift_release();
  }
}

void sub_5EABC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  NSString v1 = (char *)Strong;
  uint64_t v2 = sub_74F20();
  if (!v2)
  {

    return;
  }
  uint64_t v3 = v2;
  sub_74F10();
  if (!v36)
  {

    swift_bridgeObjectRelease();
    sub_CA50((uint64_t)v35, &qword_9A360);
    return;
  }
  sub_FAEC(0, &qword_9A368);
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_20:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v4 = (void *)v43;
  *(void *)&long long v41 = sub_76910();
  *((void *)&v41 + 1) = v5;
  sub_77020();
  if (*(void *)(v3 + 16) && (unint64_t v6 = sub_6B474((uint64_t)v35), (v7 & 1) != 0))
  {
    sub_8CBC(*(void *)(v3 + 56) + 32 * v6, (uint64_t)&v43);
  }
  else
  {
    long long v43 = 0u;
    long long v44 = 0u;
  }
  sub_66248((uint64_t)v35);
  if (!*((void *)&v44 + 1))
  {

    swift_bridgeObjectRelease();
    sub_CA50((uint64_t)&v43, &qword_9A360);
    return;
  }
  type metadata accessor for CGRect(0);
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_20;
  }
  long long v8 = v41;
  long long v9 = v42;
  id v10 = [v4 coordinateSpace];
  id v11 = [v1 view];
  if (v11)
  {
    char v12 = v11;
    [v10 convertRect:v11 toCoordinateSpace:v8];
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;
    CGFloat v20 = v19;
    swift_unknownObjectRelease();

    *(CGFloat *)&long long v43 = v14;
    *((CGFloat *)&v43 + 1) = v16;
    *(CGFloat *)&long long v44 = v18;
    *((CGFloat *)&v44 + 1) = v20;
    char v45 = 0;
    uint64_t v21 = (CGRect *)&v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_keyboardState];
    if ((v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_keyboardState + 32] & 1) == 0)
    {
      v46.origin.CGFloat x = v14;
      v46.origin.CGFloat y = v16;
      v46.size.CGFloat width = v18;
      v46.size.height = v20;
      if (CGRectEqualToRect(v46, *v21))
      {

        swift_bridgeObjectRelease();
        return;
      }
    }
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v1;
    sub_662D4(&v43, v22 + 24);
    *(double *)&uint64_t v39 = COERCE_DOUBLE(sub_76910());
    uint64_t v40 = v23;
    uint64_t v24 = v1;
    sub_77020();
    if (*(void *)(v3 + 16) && (unint64_t v25 = sub_6B474((uint64_t)v35), (v26 & 1) != 0))
    {
      sub_8CBC(*(void *)(v3 + 56) + 32 * v25, (uint64_t)&v41);
    }
    else
    {
      long long v41 = 0u;
      long long v42 = 0u;
    }
    sub_66248((uint64_t)v35);
    if (*((void *)&v42 + 1))
    {
      if ((swift_dynamicCast() & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_38:
        sub_662D4(&v43, (uint64_t)v21);
        sub_51C7C();

        swift_release();
        return;
      }
      uint64_t v27 = v39;
      *(double *)&uint64_t v39 = COERCE_DOUBLE(sub_76910());
      uint64_t v40 = v28;
      sub_77020();
      if (*(void *)(v3 + 16) && (unint64_t v29 = sub_6B474((uint64_t)v35), (v30 & 1) != 0))
      {
        sub_8CBC(*(void *)(v3 + 56) + 32 * v29, (uint64_t)&v41);
      }
      else
      {
        long long v41 = 0u;
        long long v42 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_66248((uint64_t)v35);
      if (*((void *)&v42 + 1))
      {
        if (swift_dynamicCast())
        {
          double v31 = *(double *)&v39;
          double v32 = self;
          uint64_t v33 = swift_allocObject();
          *(void *)(v33 + 16) = sub_662EC;
          *(void *)(v33 + 24) = v22;
          double v37 = sub_6776C;
          uint64_t v38 = v33;
          v35[0] = _NSConcreteStackBlock;
          v35[1] = 1107296256;
          void v35[2] = sub_4CF00;
          double v36 = &block_descriptor_142;
          double v34 = _Block_copy(v35);
          swift_retain();
          swift_release();
          [v32 animateWithDuration:v27 << 16 delay:v34 options:0 animations:v31 completion:0.0];

          swift_release();
          _Block_release(v34);
          return;
        }
        goto LABEL_38;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    sub_CA50((uint64_t)&v41, &qword_9A360);
    goto LABEL_38;
  }
  __break(1u);
}

void sub_5F01C()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    NSString v1 = &Strong[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_keyboardState];
    *(_OWORD *)NSString v1 = 0u;
    *((_OWORD *)v1 + 1) = 0u;
    v1[32] = 1;
  }
}

uint64_t sub_5F084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[14] = a4;
  v5[15] = a5;
  uint64_t v6 = sub_758C0();
  v5[16] = v6;
  v5[17] = *(void *)(v6 - 8);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  sub_76A60();
  v5[20] = sub_76A50();
  uint64_t v8 = sub_76A40();
  v5[21] = v8;
  v5[22] = v7;
  return _swift_task_switch(sub_5F188, v8, v7);
}

uint64_t sub_5F188()
{
  NSString v1 = v0 + 12;
  unint64_t v2 = *(void *)(v0[14] + 16);
  unint64_t v3 = v2 >> 62;
  switch(v2 >> 62)
  {
    case 1uLL:
      uint64_t v5 = (unint64_t *)&unk_99F90;
      uint64_t v6 = type metadata accessor for SilentContent;
      goto LABEL_6;
    case 2uLL:
      uint64_t v5 = &qword_98D10;
      uint64_t v6 = type metadata accessor for SpeakerContent;
      goto LABEL_6;
    case 3uLL:
      uint64_t v5 = (unint64_t *)&qword_99F80;
      uint64_t v6 = type metadata accessor for ChapterTitleContent;
LABEL_6:
      uint64_t v4 = sub_64288(v5, 255, (void (*)(uint64_t))v6);
      break;
    default:
      uint64_t v4 = sub_64288(&qword_98D18, 255, (void (*)(uint64_t))type metadata accessor for TextContent);
      break;
  }
  uint64_t ObjectType = swift_getObjectType();
  swift_retain();
  uint64_t v8 = sub_2D818(ObjectType, v4);
  char v10 = v9;
  swift_release();
  if (v10)
  {
    swift_release();
    sub_758A0();
    double v13 = sub_758B0();
    os_log_type_t v14 = sub_76B90();
    if (os_log_type_enabled(v13, v14))
    {
      double v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v15 = 0;
      _os_log_impl(&def_1E2E4, v13, v14, "Unable to seek to selected cell, no timestamp available", v15, 2u);
      swift_slowDealloc();
    }
    uint64_t v16 = v0[19];
    goto LABEL_34;
  }
  v0[23] = v8;
  double v11 = *(double *)&v8;
  if (sub_76AA0())
  {
LABEL_19:
    if (v3)
    {
      double v23 = v11 + 0.0;
    }
    else
    {
      swift_getKeyPath();
      v0[13] = v2;
      sub_64288((unint64_t *)&qword_9A1F0, 255, (void (*)(uint64_t))type metadata accessor for TextContent);
      swift_retain();
      sub_75540();
      swift_release();
      double v24 = *(double *)(v2
                      + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__durationFromPlayerStartTimeToFirstWordTime);
      swift_release();
      double v23 = v24 + v11;
      swift_getKeyPath();
      *NSString v1 = v2;
      swift_retain();
      sub_75540();
      swift_release();
      double v25 = *(double *)(v2 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerStartTime);
      char v26 = *(unsigned char *)(v2 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__playerStartTime + 8);
      swift_release();
      if (!(v26 & 1 | (v23 - v25 < 0.1))) {
        double v23 = v23 + -0.1;
      }
    }
    v0[27] = *(void *)(v0[15] + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_playbackController);
    uint64_t v27 = (void *)sub_75210();
    v0[28] = v27;
    if (v27)
    {
      uint64_t v28 = v27;
      [v27 duration];
      if (v23 < v29)
      {
        if ((sub_76AA0() & 1) == 0)
        {
          uint64_t v38 = sub_75230();
          v0[29] = v38;
          v0[5] = v38;
          v0[6] = &protocol witness table for PlaybackController.TransportCommand;
          *(double *)__swift_allocate_boxed_opaque_existential_1(v0 + 2) = v23;
          uint64_t v39 = *(void *)(v38 - 8);
          uint64_t v40 = *(void (**)(void))(v39 + 104);
          v0[30] = v40;
          v0[31] = (v39 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
          v40();
          long long v43 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
              + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
          long long v41 = (void *)swift_task_alloc();
          v0[32] = v41;
          *long long v41 = v0;
          v41[1] = sub_5FD08;
          return ((uint64_t (*)(void *, void))v43)(v0 + 2, 0);
        }
        swift_release();

LABEL_35:
        swift_task_dealloc();
        swift_task_dealloc();
        double v37 = (uint64_t (*)(void))v0[1];
        return v37();
      }
    }
    swift_release();
    sub_758A0();
    double v13 = sub_758B0();
    os_log_type_t v33 = sub_76B90();
    if (os_log_type_enabled(v13, v33))
    {
      double v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v34 = 0;
      _os_log_impl(&def_1E2E4, v13, v33, "Attempting to seek to offset beyond the item's duration can cause undefined behavior. Ignoring command.", v34, 2u);
      swift_slowDealloc();
    }
    uint64_t v16 = v0[18];
LABEL_34:
    uint64_t v35 = v0[16];
    uint64_t v36 = v0[17];

    (*(void (**)(uint64_t, uint64_t))(v36 + 8))(v16, v35);
    goto LABEL_35;
  }
  switch((int)v3)
  {
    case 0:
      uint64_t v12 = sub_64288(&qword_98D18, 255, (void (*)(uint64_t))type metadata accessor for TextContent);
      goto LABEL_18;
    case 1:
      double v17 = (unint64_t *)&unk_99F90;
      CGFloat v18 = type metadata accessor for SilentContent;
      goto LABEL_17;
    case 2:
      double v17 = &qword_98D10;
      CGFloat v18 = type metadata accessor for SpeakerContent;
      goto LABEL_17;
    case 3:
      double v17 = (unint64_t *)&qword_99F80;
      CGFloat v18 = type metadata accessor for ChapterTitleContent;
LABEL_17:
      uint64_t v12 = sub_64288(v17, 255, (void (*)(uint64_t))v18);
LABEL_18:
      uint64_t v19 = swift_getObjectType();
      CGFloat v20 = *(void (**)(uint64_t, uint64_t))(v12 + 32);
      swift_retain();
      v20(v19, v12);
      char v22 = v21;
      swift_release();
      NSString v1 = v0 + 12;
      if ((v22 & 1) == 0) {
        goto LABEL_19;
      }
      uint64_t v30 = v0[15];
      *(unsigned char *)(sub_50398() + 16) = 16;
      sub_285D4();
      swift_release();
      v0[24] = *(void *)(v30
                         + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_transcriptSyncingStateObserver);
      sub_75360();
      double v31 = (void *)swift_task_alloc();
      v0[25] = v31;
      void *v31 = v0;
      v31[1] = sub_5F968;
      v32.n128_f64[0] = v11;
      uint64_t result = NowPlayingAlignmentCoordinator.fetchPlayerTimestamp(for:)(v32);
      break;
    default:
      JUMPOUT(0);
  }
  return result;
}

uint64_t sub_5F968(double a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v5 = *(void *)(v4 + 168);
    uint64_t v6 = *(void *)(v4 + 176);
    uint64_t v7 = sub_60138;
  }
  else
  {
    *(double *)(v4 + 208) = a1;
    uint64_t v5 = *(void *)(v4 + 168);
    uint64_t v6 = *(void *)(v4 + 176);
    uint64_t v7 = sub_5FA94;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_5FA94()
{
  uint64_t v1 = *(uint64_t *)(v0 + 208);
  sub_75360();
  *(void *)(v0 + 216) = *(void *)(*(void *)(v0 + 120)
                                    + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_playbackController);
  unint64_t v2 = (void *)sub_75210();
  *(void *)(v0 + 224) = v2;
  if (!v2) {
    goto LABEL_6;
  }
  unint64_t v3 = v2;
  [v2 duration];
  if (*(double *)&v1 >= v4)
  {

LABEL_6:
    swift_release();
    sub_758A0();
    uint64_t v5 = sub_758B0();
    os_log_type_t v6 = sub_76B90();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&def_1E2E4, v5, v6, "Attempting to seek to offset beyond the item's duration can cause undefined behavior. Ignoring command.", v7, 2u);
      swift_slowDealloc();
    }
    uint64_t v9 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 144);
    uint64_t v10 = *(void *)(v0 + 128);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    goto LABEL_9;
  }
  if (sub_76AA0())
  {
    swift_release();

LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    double v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  uint64_t v13 = sub_75230();
  *(void *)(v0 + 232) = v13;
  *(void *)(v0 + 40) = v13;
  *(void *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
  *__swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16)) = v1;
  uint64_t v14 = *(void *)(v13 - 8);
  double v15 = *(void (**)(void))(v14 + 104);
  *(void *)(v0 + 240) = v15;
  *(void *)(v0 + 248) = (v14 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v15();
  double v17 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
      + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_5FD08;
  return ((uint64_t (*)(uint64_t, void))v17)(v0 + 16, 0);
}

uint64_t sub_5FD08(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 264) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 168);
    uint64_t v6 = *(void *)(v4 + 176);
    uint64_t v7 = sub_603B0;
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_0(v4 + 16);
    uint64_t v5 = *(void *)(v4 + 168);
    uint64_t v6 = *(void *)(v4 + 176);
    uint64_t v7 = sub_5FE38;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_5FE38()
{
  if (sub_75260())
  {
    uint64_t v1 = (void *)v0[28];
    swift_release();

    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v2 = (uint64_t (*)(void))v0[1];
    return v2();
  }
  else
  {
    uint64_t v4 = (void (*)(uint64_t *, void, uint64_t))v0[30];
    uint64_t v5 = v0[29];
    v0[10] = v5;
    v0[11] = &protocol witness table for PlaybackController.TransportCommand;
    boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v0 + 7);
    v4(boxed_opaque_existential_1, enum case for PlaybackController.TransportCommand.play(_:), v5);
    uint64_t v8 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
       + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[34] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_5FF8C;
    return ((uint64_t (*)(void *, void))v8)(v0 + 7, 0);
  }
}

uint64_t sub_5FF8C(void *a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 280) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 168);
    uint64_t v6 = *(void *)(v4 + 176);
    uint64_t v7 = sub_60438;
  }
  else
  {

    __swift_destroy_boxed_opaque_existential_0(v4 + 56);
    uint64_t v5 = *(void *)(v4 + 168);
    uint64_t v6 = *(void *)(v4 + 176);
    uint64_t v7 = sub_600BC;
  }
  return _swift_task_switch(v7, v5, v6);
}

uint64_t sub_600BC()
{
  uint64_t v1 = *(void **)(v0 + 224);
  swift_release();

  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_60138()
{
  uint64_t v1 = *(uint64_t *)(v0 + 184);
  sub_75360();
  *(void *)(v0 + 216) = *(void *)(*(void *)(v0 + 120)
                                    + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_playbackController);
  unint64_t v2 = (void *)sub_75210();
  *(void *)(v0 + 224) = v2;
  if (!v2) {
    goto LABEL_6;
  }
  unint64_t v3 = v2;
  [v2 duration];
  if (*(double *)&v1 >= v4)
  {

LABEL_6:
    swift_release();
    sub_758A0();
    uint64_t v5 = sub_758B0();
    os_log_type_t v6 = sub_76B90();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl(&def_1E2E4, v5, v6, "Attempting to seek to offset beyond the item's duration can cause undefined behavior. Ignoring command.", v7, 2u);
      swift_slowDealloc();
    }
    uint64_t v9 = *(void *)(v0 + 136);
    uint64_t v8 = *(void *)(v0 + 144);
    uint64_t v10 = *(void *)(v0 + 128);

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    goto LABEL_9;
  }
  if (sub_76AA0())
  {

    swift_release();
LABEL_9:
    swift_task_dealloc();
    swift_task_dealloc();
    double v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
  uint64_t v13 = sub_75230();
  *(void *)(v0 + 232) = v13;
  *(void *)(v0 + 40) = v13;
  *(void *)(v0 + 48) = &protocol witness table for PlaybackController.TransportCommand;
  *__swift_allocate_boxed_opaque_existential_1((uint64_t *)(v0 + 16)) = v1;
  uint64_t v14 = *(void *)(v13 - 8);
  double v15 = *(void (**)(void))(v14 + 104);
  *(void *)(v0 + 240) = v15;
  *(void *)(v0 + 248) = (v14 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v15();
  double v17 = (char *)&async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:)
      + async function pointer to dispatch thunk of PlaybackController.performCommand(_:options:);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_5FD08;
  return ((uint64_t (*)(uint64_t, void))v17)(v0 + 16, 0);
}

uint64_t sub_603B0()
{
  uint64_t v1 = *(void **)(v0 + 224);
  swift_release();

  __swift_destroy_boxed_opaque_existential_0(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_60438()
{
  uint64_t v1 = *(void **)(v0 + 224);
  swift_release();

  __swift_destroy_boxed_opaque_existential_0(v0 + 56);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_604C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_76A80();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_76A70();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_CA50(a1, (uint64_t *)&unk_99F50);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_76A40();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void sub_60648()
{
  uint64_t v0 = sub_754B0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  CGRect v46 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_99018);
  __chkstk_darwin(v49);
  uint64_t v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A310);
  __chkstk_darwin(v5 - 8);
  uint64_t v47 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v42 - v8;
  __chkstk_darwin(v10);
  uint64_t v50 = (char *)&v42 - v11;
  uint64_t v48 = sub_758C0();
  uint64_t v12 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_758A0();
  double v15 = sub_758B0();
  os_log_type_t v16 = sub_76BB0();
  if (os_log_type_enabled(v15, v16))
  {
    long long v43 = v9;
    uint64_t v17 = swift_slowAlloc();
    char v45 = v4;
    uint64_t v18 = (uint8_t *)v17;
    v51[0] = swift_slowAlloc();
    uint64_t v44 = v0;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v53 = sub_7D80(0xD00000000000001BLL, 0x800000000007FDD0, v51);
    uint64_t v9 = v43;
    uint64_t v0 = v44;
    sub_76F90();
    _os_log_impl(&def_1E2E4, v15, v16, "%s App will enter foreground.", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v4 = v45;
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v48);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v20 = (uint64_t)v50;
  if (Strong)
  {
    char v21 = (void *)Strong;
    swift_retain();

    sub_75460();
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v50, 1, 1, v0);
  }
  if (qword_97F88 != -1) {
    swift_once();
  }
  uint64_t v22 = __swift_project_value_buffer(v0, (uint64_t)qword_98558);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v9, v22, v0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v1 + 56))(v9, 0, 1, v0);
  uint64_t v23 = (uint64_t)&v4[*(int *)(v49 + 48)];
  sub_C50C(v20, (uint64_t)v4, &qword_9A310);
  sub_C50C((uint64_t)v9, v23, &qword_9A310);
  double v24 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v24((uint64_t)v4, 1, v0) != 1)
  {
    uint64_t v25 = v47;
    sub_C50C((uint64_t)v4, v47, &qword_9A310);
    if (v24(v23, 1, v0) != 1)
    {
      char v26 = v46;
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v46, v23, v0);
      sub_64288((unint64_t *)&qword_9A320, 255, (void (*)(uint64_t))&type metadata accessor for NowPlayingHostedContentID);
      LODWORD(v49) = sub_768A0();
      uint64_t v27 = *(void (**)(char *, uint64_t))(v1 + 8);
      v27(v26, v0);
      sub_CA50((uint64_t)v9, &qword_9A310);
      sub_CA50(v20, &qword_9A310);
      v27((char *)v25, v0);
      sub_CA50((uint64_t)v4, &qword_9A310);
      if ((v49 & 1) == 0) {
        return;
      }
      goto LABEL_15;
    }
    sub_CA50((uint64_t)v9, &qword_9A310);
    sub_CA50(v20, &qword_9A310);
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v25, v0);
LABEL_13:
    sub_CA50((uint64_t)v4, &qword_99018);
    return;
  }
  sub_CA50((uint64_t)v9, &qword_9A310);
  sub_CA50(v20, &qword_9A310);
  if (v24(v23, 1, v0) != 1) {
    goto LABEL_13;
  }
  sub_CA50((uint64_t)v4, &qword_9A310);
LABEL_15:
  swift_beginAccess();
  uint64_t v28 = swift_unknownObjectWeakLoadStrong();
  if (v28)
  {
    double v29 = (void *)v28;
    sub_50398();

    uint64_t v30 = sub_27F8C();
    char v32 = v31;
    swift_release();
    switch(v32)
    {
      case 1:
      case 2:
      case 4:
        break;
      case 3:
        sub_18A70(v30, 3);
        break;
      default:
        if (v30 != 128)
        {
          swift_beginAccess();
          uint64_t v33 = swift_unknownObjectWeakLoadStrong();
          if (v33)
          {
            double v34 = (void *)v33;
            sub_50908(0);
          }
        }
        break;
    }
  }
  swift_beginAccess();
  uint64_t v35 = swift_unknownObjectWeakLoadStrong();
  if (v35)
  {
    uint64_t v36 = (void *)v35;
    swift_retain();

    sub_752F0();
    swift_release();
    if (v52)
    {
      __swift_project_boxed_opaque_existential_1(v51, v52);
      sub_75610();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v51);
    }
    else
    {
      sub_CA50((uint64_t)v51, &qword_9A318);
    }
  }
  swift_beginAccess();
  uint64_t v37 = swift_unknownObjectWeakLoadStrong();
  if (v37)
  {
    uint64_t v38 = (void *)v37;
    uint64_t v39 = sub_4C6E4();

    uint64_t v40 = *(void **)(v39 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_displayLink);
    id v41 = v40;
    swift_release();
    if (v40)
    {
      [v41 setPaused:0];
    }
  }
}

void sub_60ED4()
{
  uint64_t v0 = sub_754B0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v42 = (char *)&v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_99018);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A310);
  __chkstk_darwin(v6 - 8);
  uint64_t v43 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  char v45 = (char *)&v38 - v9;
  __chkstk_darwin(v10);
  CGRect v46 = (char *)&v38 - v11;
  uint64_t v44 = sub_758C0();
  uint64_t v12 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_758A0();
  double v15 = sub_758B0();
  os_log_type_t v16 = sub_76BB0();
  if (os_log_type_enabled(v15, v16))
  {
    uint64_t v39 = v3;
    uint64_t v17 = swift_slowAlloc();
    id v41 = v5;
    uint64_t v18 = (uint8_t *)v17;
    v47[0] = swift_slowAlloc();
    uint64_t v40 = v0;
    *(_DWORD *)uint64_t v18 = 136315138;
    uint64_t v49 = sub_7D80(0xD00000000000001BLL, 0x800000000007FDD0, v47);
    uint64_t v3 = v39;
    uint64_t v0 = v40;
    sub_76F90();
    _os_log_impl(&def_1E2E4, v15, v16, "%s App did enter background.", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v5 = v41;
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v44);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v21 = (uint64_t)v45;
  uint64_t v20 = (uint64_t)v46;
  if (Strong)
  {
    uint64_t v22 = (void *)Strong;
    swift_retain();

    sub_75460();
    swift_release();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(v46, 1, 1, v0);
  }
  if (qword_97F88 != -1) {
    swift_once();
  }
  uint64_t v23 = __swift_project_value_buffer(v0, (uint64_t)qword_98558);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v1 + 16))(v21, v23, v0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v1 + 56))(v21, 0, 1, v0);
  uint64_t v24 = (uint64_t)&v5[*(int *)(v3 + 48)];
  sub_C50C(v20, (uint64_t)v5, &qword_9A310);
  sub_C50C(v21, v24, &qword_9A310);
  uint64_t v25 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48);
  if (v25((uint64_t)v5, 1, v0) != 1)
  {
    uint64_t v26 = v43;
    sub_C50C((uint64_t)v5, v43, &qword_9A310);
    if (v25(v24, 1, v0) != 1)
    {
      uint64_t v27 = v26;
      uint64_t v28 = v42;
      (*(void (**)(char *, uint64_t, uint64_t))(v1 + 32))(v42, v24, v0);
      sub_64288((unint64_t *)&qword_9A320, 255, (void (*)(uint64_t))&type metadata accessor for NowPlayingHostedContentID);
      char v29 = sub_768A0();
      uint64_t v30 = *(void (**)(char *, uint64_t))(v1 + 8);
      v30(v28, v0);
      sub_CA50(v21, &qword_9A310);
      sub_CA50(v20, &qword_9A310);
      v30((char *)v27, v0);
      sub_CA50((uint64_t)v5, &qword_9A310);
      if ((v29 & 1) == 0) {
        return;
      }
      goto LABEL_15;
    }
    sub_CA50(v21, &qword_9A310);
    sub_CA50(v20, &qword_9A310);
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v26, v0);
LABEL_13:
    sub_CA50((uint64_t)v5, &qword_99018);
    return;
  }
  sub_CA50(v21, &qword_9A310);
  sub_CA50(v20, &qword_9A310);
  if (v25(v24, 1, v0) != 1) {
    goto LABEL_13;
  }
  sub_CA50((uint64_t)v5, &qword_9A310);
LABEL_15:
  swift_beginAccess();
  uint64_t v31 = swift_unknownObjectWeakLoadStrong();
  if (v31)
  {
    char v32 = (void *)v31;
    swift_retain();

    sub_752F0();
    swift_release();
    if (v48)
    {
      __swift_project_boxed_opaque_existential_1(v47, v48);
      sub_75600();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v47);
    }
    else
    {
      sub_CA50((uint64_t)v47, &qword_9A318);
    }
  }
  swift_beginAccess();
  uint64_t v33 = swift_unknownObjectWeakLoadStrong();
  if (v33)
  {
    double v34 = (void *)v33;
    uint64_t v35 = sub_4C6E4();

    uint64_t v36 = *(void **)(v35 + OBJC_IVAR____TtC19PodcastsTranscripts22LiveTranscriptObserver_displayLink);
    id v37 = v36;
    swift_release();
    if (v36)
    {
      [v37 setPaused:1];
    }
  }
}

void sub_61650()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    uint64_t v2 = sub_75210();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      __swift_project_boxed_opaque_existential_1(&v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_libraryActionController], *(void *)&v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_libraryActionController + 24]);
      uint64_t v4 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v5 = swift_allocObject();
      *(void *)(v5 + 16) = v3;
      *(void *)(v5 + 24) = v4;
      id v6 = v3;
      swift_retain();
      sub_76700();

      swift_release();
      swift_release();
    }
    else
    {
    }
  }
}

void sub_61784(uint64_t a1, void *a2)
{
  id v31 = a2;
  uint64_t v32 = sub_75110();
  uint64_t v3 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_758C0();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A658);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_C50C(a1, (uint64_t)v12, (uint64_t *)&unk_9A658);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v30 = v7;
    uint64_t v32 = v6;
    swift_errorRelease();
    sub_758A0();
    uint64_t v13 = v31;
    uint64_t v14 = sub_758B0();
    os_log_type_t v15 = sub_76B90();
    id v16 = v9;
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v17 = swift_slowAlloc();
      id v31 = v9;
      uint64_t v18 = v17;
      uint64_t v19 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v18 = 141558275;
      uint64_t v33 = 1752392040;
      sub_76F90();
      *(_WORD *)(v18 + 12) = 2113;
      uint64_t v33 = (uint64_t)v13;
      uint64_t v20 = v13;
      sub_76F90();
      *uint64_t v19 = v13;

      _os_log_impl(&def_1E2E4, v14, v15, "Unable to create a report a concern URL for episode %{private,mask.hash}@.", (uint8_t *)v18, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName(&qword_98050);
      swift_arrayDestroy();
      swift_slowDealloc();
      id v16 = v31;
      swift_slowDealloc();
    }
    else
    {

      uint64_t v14 = v13;
    }
    uint64_t v26 = v32;
    uint64_t v27 = v30;

    (*(void (**)(id, uint64_t))(v27 + 8))(v16, v26);
  }
  else
  {
    uint64_t v21 = v32;
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v12, v32);
    id v22 = [self sharedApplication];
    sub_75100(v23);
    uint64_t v25 = v24;
    [v22 openURL:v24 withCompletionHandler:0];

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  }
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v29 = Strong;
    [Strong resignFirstResponder];
  }
}

void sub_61B8C()
{
  id v1 = [objc_allocWithZone((Class)UIView) init];
  uint64_t v2 = self;
  id v3 = [v2 clearColor];
  [v1 setBackgroundColor:v3];

  uint64_t v4 = sub_4CB58();
  [v4 setBackgroundView:v1];

  uint64_t v5 = sub_4CB58();
  id v6 = [v2 clearColor];
  [v5 setBackgroundColor:v6];

  id v7 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"didTapEmptySpace"];
  [v1 addGestureRecognizer:v7];
}

void sub_61D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_758C0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_758A0();
  id v7 = sub_758B0();
  os_log_type_t v8 = sub_76B80();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v9 = 0;
    _os_log_impl(&def_1E2E4, v7, v8, "Retry button tapped - initiating retry", v9, 2u);
    swift_slowDealloc();
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v11 = (void *)Strong;
    uint64_t v12 = sub_75210();
    if (v12)
    {
      uint64_t v13 = (void *)v12;
      uint64_t v14 = sub_50398();
      uint64_t v15 = *(void *)(v14 + 24);
      *(void *)(v14 + 24) = 2;
      sub_2A1C0(v15);
      sub_2A1AC(v15);
      uint64_t v16 = *(void *)(v14 + 24);
      sub_2A1C0(v16);
      char v17 = sub_29CD4(v16, v15);
      sub_2A1AC(v16);
      if ((v17 & 1) == 0) {
        sub_285D4();
      }
      sub_2A1AC(v15);
      swift_release();
      swift_retain();
      swift_retain();
      NowPlayingStoreTranscriptIdentifierProvider.updateForEpisode(_:shouldForce:completion:)(v13, 1, (uint64_t (*)(uint64_t))sub_65FF0, a2);

      swift_release();
      swift_release();
    }
    else
    {
    }
  }
}

void sub_61F68(unsigned __int8 *a1)
{
  int v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    *(unsigned char *)(Strong + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_isNetworkReachable) = v1;
    sub_50398();
    uint64_t v4 = sub_27F8C();
    char v6 = v5;
    int v7 = v5;
    swift_release();
    if (v7 == 3)
    {
      sub_18A70(v4, 3);
      if (v1)
      {
        swift_retain();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A1D0);
        sub_D034(&qword_9A238, (uint64_t *)&unk_9A1D0);
        sub_75BF0();

        swift_release();
        return;
      }
    }
    else
    {
      sub_18A70(v4, v6);
    }
  }
}

void sub_62088()
{
  uint64_t v0 = sub_75B00();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin();
  uint64_t v3 = (char *)v31 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_75AF0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin();
  int v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_75B50();
  uint64_t v34 = *(void *)(v8 - 8);
  __chkstk_darwin();
  uint64_t v10 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for UICollectionLayoutListConfiguration.Appearance.plain(_:), v4);
  sub_75B10();
  sub_75B40();
  id v11 = [self clearColor];
  sub_75B30();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for UICollectionLayoutListConfiguration.FooterMode.supplementary(_:), v0);
  sub_75B20();
  sub_FAEC(0, &qword_9A600);
  uint64_t v33 = v10;
  uint64_t v12 = (void *)sub_76D80();
  id v13 = [v12 boundarySupplementaryItems];
  sub_FAEC(0, &qword_9A608);
  unint64_t v14 = sub_769D0();

  unint64_t v35 = (unint64_t)&_swiftEmptyArrayStorage;
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v15 = sub_77180();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_3;
    }
LABEL_20:
    swift_bridgeObjectRelease();
    unint64_t v26 = (unint64_t)&_swiftEmptyArrayStorage;
    if (((unint64_t)&_swiftEmptyArrayStorage & 0x8000000000000000) != 0) {
      goto LABEL_29;
    }
    goto LABEL_21;
  }
  uint64_t v15 = *(void *)((char *)&dword_10 + (v14 & 0xFFFFFFFFFFFFFF8));
  if (!v15) {
    goto LABEL_20;
  }
LABEL_3:
  if (v15 < 1)
  {
    __break(1u);
    goto LABEL_32;
  }
  v31[1] = v12;
  uint64_t v32 = v8;
  for (uint64_t i = 0; i != v15; ++i)
  {
    if ((v14 & 0xC000000000000001) != 0) {
      id v17 = (id)sub_77080();
    }
    else {
      id v17 = *(id *)(v14 + 8 * i + 32);
    }
    uint64_t v18 = v17;
    id v19 = [v17 elementKind];
    uint64_t v20 = sub_76910();
    uint64_t v22 = v21;

    if (v20 == sub_76910() && v22 == v23)
    {
      swift_bridgeObjectRelease_n();
LABEL_6:
      sub_770B0();
      sub_770E0();
      sub_770F0();
      sub_770C0();
      continue;
    }
    char v25 = sub_77230();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25) {
      goto LABEL_6;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v26 = v35;
  uint64_t v8 = v32;
  if ((v35 & 0x8000000000000000) == 0)
  {
LABEL_21:
    if ((v26 & 0x4000000000000000) != 0) {
      goto LABEL_29;
    }
    uint64_t v27 = *(void *)(v26 + 16);
    swift_retain();
    if (v27) {
      goto LABEL_23;
    }
LABEL_30:
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v34 + 8))(v33, v8);
    return;
  }
LABEL_29:
  swift_retain();
  uint64_t v27 = sub_77180();
  if (!v27) {
    goto LABEL_30;
  }
LABEL_23:
  if (v27 >= 1)
  {
    for (uint64_t j = 0; j != v27; ++j)
    {
      if ((v26 & 0xC000000000000001) != 0) {
        id v29 = (id)sub_77080();
      }
      else {
        id v29 = *(id *)(v26 + 8 * j + 32);
      }
      uint64_t v30 = v29;
      [v29 setPinToVisibleBounds:0];
    }
    goto LABEL_30;
  }
LABEL_32:
  __break(1u);
}

uint64_t sub_62560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  sub_50398();
  uint64_t v8 = sub_27F8C();
  char v10 = v9;
  int v11 = v9;
  swift_release();
  sub_18A70(v8, v10);
  if (v11 == 4 && v8 == 0)
  {
LABEL_7:
    unint64_t v16 = *(void *)(a2 + 16);
    unint64_t v17 = v16 >> 62;
    switch(v16 >> 62)
    {
      case 1uLL:
        uint64_t v18 = *(void *)((char *)&dword_10 + (v16 & 0x3FFFFFFFFFFFFFFFLL));
        swift_retain();
        uint64_t v19 = 0;
        uint64_t v20 = 0;
        goto LABEL_13;
      case 2uLL:
        uint64_t v22 = (void *)(v16 & 0x3FFFFFFFFFFFFFFFLL);
        uint64_t v18 = v22[5];
        uint64_t v19 = v22[6];
        uint64_t v20 = v22[7];
        uint64_t v21 = v22[8];
        goto LABEL_10;
      case 3uLL:
        uint64_t v23 = (void *)(v16 & 0x3FFFFFFFFFFFFFFFLL);
        uint64_t v18 = v23[14];
        uint64_t v19 = v23[15];
        uint64_t v20 = v23[16];
        swift_bridgeObjectRetain();
LABEL_13:
        uint64_t v21 = 0;
        goto LABEL_14;
      default:
        uint64_t v18 = *(void *)(v16 + 16);
        uint64_t v19 = *(void *)(v16 + 24);
        uint64_t v20 = *(void *)(v16 + 32);
        uint64_t v21 = *(void *)(v16 + 40);
LABEL_10:
        swift_bridgeObjectRetain();
LABEL_14:
        *(void *)&long long v30 = v18;
        *((void *)&v30 + 1) = v19;
        uint64_t v31 = v20;
        uint64_t v32 = v21;
        char v33 = v17;
        sub_569F0(&v30, a6 & 1);
        sub_88A0(v18, v19, v20, v21, v17);
        break;
    }
  }
  else
  {
    sub_50398();
    uint64_t v13 = sub_27F8C();
    char v15 = v14;
    swift_release();
    switch(v15)
    {
      case 1:
      case 2:
      case 4:
        break;
      case 3:
        sub_18A70(v13, 3);
        break;
      default:
        if (v13 != 128) {
          goto LABEL_7;
        }
        break;
    }
  }
  sub_5B820();
  uint64_t v24 = *(void *)(sub_50398() + 24);
  uint64_t result = swift_release();
  if (v24 != 1)
  {
    *(unsigned char *)(sub_50398() + 16) = 2;
    sub_285D4();
    swift_release();
    uint64_t v26 = sub_50398();
    uint64_t v27 = *(void *)(v26 + 24);
    *(void *)(v26 + 24) = 1;
    sub_2A1C0(v27);
    sub_2A1AC(v27);
    uint64_t v28 = *(void *)(v26 + 24);
    sub_2A1C0(v28);
    char v29 = sub_29CD4(v28, v27);
    sub_2A1AC(v28);
    if ((v29 & 1) == 0) {
      sub_285D4();
    }
    sub_2A1AC(v27);
    return swift_release();
  }
  return result;
}

Swift::Void __swiftcall TranscriptViewController.willPresentHostedContent()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_player + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void, uint64_t, uint64_t))(v1 + 72))(0, ObjectType, v1);
}

Swift::Void __swiftcall TranscriptViewController.willDismissHostedContent()()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_player + 8);
  uint64_t ObjectType = swift_getObjectType();
  char v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 240))(ObjectType, v1);
  (*(void (**)(BOOL, uint64_t, uint64_t))(v1 + 72))((v3 & 1) == 0, ObjectType, v1);
  *(unsigned char *)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_userInitiatedSearchDismissal) = 0;
  id v4 = sub_4D948();
  [v4 dismissFindNavigator];

  sub_75330();
}

void TranscriptViewController.didUpdateDeviceMetrics(_:)()
{
}

void sub_62900()
{
  swift_getObjectType();

  NowPlayingHostedViewController.didPresentHostedContent()();
}

void sub_62940()
{
  swift_getObjectType();

  NowPlayingHostedViewController.didDismissHostedContent()();
}

uint64_t sub_6297C(uint64_t a1, unsigned __int8 a2, char a3)
{
  id v4 = v3;
  unsigned int v7 = a2;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A218);
  __chkstk_darwin(v8 - 8);
  char v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A220);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_753A0();
  uint64_t v14 = *(void *)(v46 - 8);
  uint64_t v15 = __chkstk_darwin(v46);
  uint64_t v44 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  char v45 = (char *)&v43 - v17;
  if (v7)
  {
    [v4 setNeedsUpdateContentUnavailableConfiguration];
    uint64_t v18 = sub_4CB58();
    if (v7 == 3 || v7 == 4 && !a1)
    {
      uint64_t v19 = 1;
      goto LABEL_12;
    }
  }
  else
  {
    if (a3 != 6) {
      sub_50908(1);
    }
    id v20 = sub_4D948();
    unsigned int v21 = [v20 isFindNavigatorVisible];

    if (v21)
    {
      *((unsigned char *)v4 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_userInitiatedSearchDismissal) = 0;
      id v22 = sub_4D948();
      [v22 dismissFindNavigator];

      TranscriptViewController.clearAllDecoratedFoundText()();
    }
    [v4 setNeedsUpdateContentUnavailableConfiguration];
    uint64_t v18 = sub_4CB58();
  }
  uint64_t v19 = 0;
LABEL_12:
  [v18 setHidden:v19];

  sub_754D0();
  uint64_t v23 = sub_753F0();
  uint64_t v24 = *(void *)(v23 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 48))(v13, 1, v23);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_753B0();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v13, v23);
    uint64_t v26 = v46;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v10, 1, v46);
    if (result != 1)
    {
      uint64_t v27 = v45;
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v45, v10, v26);
      uint64_t v28 = a1;
      if ([v4 isViewLoaded])
      {
        char v29 = v44;
        (*(void (**)(char *, void, uint64_t))(v14 + 104))(v44, enum case for DeviceMetrics.Layout.regularExtended(_:), v26);
        sub_75390();
        (*(void (**)(char *, uint64_t))(v14 + 8))(v29, v26);
        sub_754E0();
      }
      long long v30 = sub_4CB58();
      uint64_t v31 = v30;
      if (v7 - 1 > 1 || v28 >> 6 && v28 >> 6 != 1) {
        char v32 = 1;
      }
      else {
        char v32 = v28 & 1;
      }
      char v33 = v30[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptCollectionView_mode];
      v31[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptCollectionView_mode] = v32;
      sub_2F6B8(v33);

      if (v7 >= 3)
      {
        if (v7 == 3 || !v28) {
          goto LABEL_29;
        }
      }
      else
      {
        if (!(v28 >> 6)) {
          goto LABEL_28;
        }
        if (v28 >> 6 != 1)
        {
LABEL_29:
          id v36 = sub_519B4();
          [v36 alpha];
          double v38 = v37;

          if (v38 == 1.0)
          {
            uint64_t v39 = swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v40 = self;
            uint64_t v41 = swift_allocObject();
            *(void *)(v41 + 16) = sub_65FB8;
            *(void *)(v41 + 24) = v39;
            aBlock[4] = sub_2F19C;
            void aBlock[5] = v41;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_4CF00;
            void aBlock[3] = &block_descriptor_70;
            uint64_t v42 = _Block_copy(aBlock);
            swift_retain();
            swift_release();
            [v40 animateWithDuration:v42 animations:0.2];
            swift_release();
            _Block_release(v42);
          }
          return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v27, v26);
        }
      }
      uint64_t v34 = v44;
      (*(void (**)(char *, void, uint64_t))(v14 + 104))(v44, enum case for DeviceMetrics.Layout.regularExtended(_:), v26);
      char v35 = sub_75390();
      (*(void (**)(char *, uint64_t))(v14 + 8))(v34, v26);
      if ((v35 & 1) == 0) {
        goto LABEL_29;
      }
LABEL_28:
      sub_5D834(1);
      return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v27, v26);
    }
  }
  __break(1u);
  return result;
}

double sub_62FAC@<D0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_75C40();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_6303C()
{
  return sub_75C50();
}

uint64_t sub_630D8(uint64_t a1, void *a2)
{
  long long v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  LOBYTE(v3) = v3();
  swift_release();

  return v3 & 1;
}

id sub_63130(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v6 = (void *)v5(a2, a3);
  swift_release();
  swift_unknownObjectRelease();

  return v6;
}

id sub_631AC(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  sub_FAEC(0, (unint64_t *)&qword_991B0);
  uint64_t v2 = sub_769D0();
  swift_retain();
  long long v3 = (void *)v1(v2);
  swift_release();
  swift_bridgeObjectRelease();

  return v3;
}

void sub_6323C(void *a1)
{
  id v2 = [self mainRunLoop];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  v6[4] = sub_660AC;
  uint64_t v6[5] = v3;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_4CF00;
  v6[3] = &block_descriptor_108;
  id v4 = _Block_copy(v6);
  id v5 = a1;
  swift_release();
  [v2 performBlock:v4];
  _Block_release(v4);
}

uint64_t sub_6333C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v31 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A280);
  __chkstk_darwin(v9 - 8);
  uint64_t v34 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A288);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v36 = v11;
  uint64_t v37 = v12;
  __chkstk_darwin(v11);
  char v35 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A290);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A298);
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v32 = v18;
  uint64_t v33 = v19;
  __chkstk_darwin(v18);
  unsigned int v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_75270();
  uint64_t v43 = &off_8FEF0;
  v41[0] = a1;
  v40[3] = sub_75480();
  v40[4] = &off_8FF10;
  v40[0] = a2;
  *(unsigned char *)(a5 + 16) = 2;
  *(void *)(a5 + 24) = 2;
  *(void *)(a5 + 128) = 0;
  swift_unknownObjectWeakInit();
  *(void *)(a5 + 136) = 0;
  *(_WORD *)(a5 + 144) = 16895;
  *(void *)(a5 + 152) = 0;
  *(void *)(a5 + 160) = &_swiftEmptyArrayStorage;
  id v22 = [self currentRunLoop];
  *(void *)(a5 + 192) = sub_FAEC(0, &qword_9A2A0);
  *(void *)(a5 + 200) = &off_8FF20;
  *(void *)(a5 + 168) = v22;
  sub_2A398((uint64_t)v41, a5 + 32);
  sub_2A398((uint64_t)v40, a5 + 72);
  *(void *)(a5 + 112) = a3;
  *(void *)(a5 + 128) = &off_90E70;
  swift_unknownObjectWeakAssign();
  __swift_project_boxed_opaque_existential_1(v41, v42);
  swift_retain();
  uint64_t v39 = sub_75240();
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A2A8);
  sub_D034(&qword_9A2B0, &qword_9A2A8);
  sub_75D70();
  swift_release();
  LOWORD(v39) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A2B8);
  sub_D034(&qword_9A2C0, &qword_9A290);
  sub_75CE0();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  uint64_t v23 = swift_allocObject();
  swift_weakInit();
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = sub_6616C;
  *(void *)(v24 + 24) = v23;
  sub_D034(&qword_9A2C8, &qword_9A298);
  uint64_t v25 = v32;
  sub_75D80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v21, v25);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A2D0);
  sub_D034(&qword_98528, (uint64_t *)&unk_9A2D0);
  sub_75BA0();
  swift_endAccess();
  swift_release();
  __swift_project_boxed_opaque_existential_1(v41, v42);
  uint64_t v39 = sub_75250();
  sub_FAEC(0, (unint64_t *)&qword_99F20);
  id v38 = (id)sub_76CA0();
  uint64_t v26 = sub_76C60();
  uint64_t v27 = (uint64_t)v34;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v34, 1, 1, v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A2E0);
  sub_D034(&qword_9A2E8, &qword_9A2E0);
  sub_48C78();
  uint64_t v28 = v35;
  sub_75D40();
  sub_CA50(v27, &qword_9A280);

  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_D034(&qword_9A2F8, &qword_9A288);
  uint64_t v29 = v36;
  sub_75D80();
  swift_release();
  (*(void (**)(char *, uint64_t))(v37 + 8))(v28, v29);
  swift_beginAccess();
  sub_75BA0();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v40);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v41);
  return a5;
}

uint64_t sub_63A70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = sub_75270();
  uint64_t v24 = &off_8FEF0;
  v22[0] = a1;
  uint64_t v20 = sub_75480();
  unsigned int v21 = &off_8FF10;
  v19[0] = a2;
  type metadata accessor for TranscriptStateMachine();
  uint64_t v8 = swift_allocObject();
  uint64_t v9 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v22, v23);
  __chkstk_darwin(v9);
  uint64_t v11 = (void *)((char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v12 + 16))(v11);
  uint64_t v13 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v19, v20);
  __chkstk_darwin(v13);
  uint64_t v15 = (void *)((char *)v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  uint64_t v17 = sub_6333C(*v11, *v15, a3, a4, v8);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v19);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v22);
  return v17;
}

id sub_63C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v23 = a4;
  uint64_t v24 = a3;
  uint64_t v22 = a2;
  uint64_t v25 = a1;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v21 = sub_76C90();
  uint64_t v5 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  unsigned int v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_76C40();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_76520();
  __chkstk_darwin(v9 - 8);
  *(void *)&v4[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___dataSource] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___collectionViewWrapper] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___collectionView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___searchButton] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___topGradientMask] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___topGradientView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___bottomGradientMask] = 0;
  *(void *)&v4[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___bottomGradientView] = 0;
  uint64_t v20 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_searchQueue;
  uint64_t v19 = sub_FAEC(0, (unint64_t *)&qword_99F20);
  uint64_t v10 = v4;
  sub_76510();
  *(void *)&v28[0] = &_swiftEmptyArrayStorage;
  sub_64288(&qword_9A1B8, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A1C0);
  sub_D034(&qword_9A1C8, &qword_9A1C0);
  sub_76FE0();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v21);
  *(void *)&v4[v20] = sub_76CC0();
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_playTask] = 0;
  uint64_t v11 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_networkObserver;
  sub_76610();
  *(void *)&v10[v11] = sub_76600();
  v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_isNetworkReachable] = 1;
  uint64_t v12 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_retrySubject;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A1D0);
  swift_allocObject();
  *(void *)&v10[v12] = sub_75BE0();
  uint64_t v13 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_presentationContext;
  type metadata accessor for TranscriptPresentationContext();
  uint64_t v14 = swift_allocObject();
  *(_WORD *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  *(unsigned char *)(v14 + 32) = 0;
  *(void *)(v14 + 40) = 0;
  *(unsigned char *)(v14 + 48) = 4;
  sub_75570();
  *(void *)&v10[v13] = v14;
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_subscriptions] = &_swiftEmptySetSingleton;
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_searchSubscriptions] = &_swiftEmptySetSingleton;
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_viewModels] = &_swiftEmptyArrayStorage;
  v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_userInitiatedSearchDismissal] = 1;
  uint64_t v15 = &v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_keyboardState];
  *(_OWORD *)uint64_t v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  v15[32] = 1;
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___stateMachine] = 0;
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___timestampView] = 0;
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___collectionViewBottomConstraint] = 0;
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___findInteraction] = 0;
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___liveObserver] = 0;
  uint64_t v16 = v23;
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_nowPlayingViewModel] = v22;
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_playerStylePublisher] = v16;
  uint64_t v17 = v25;
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_transcriptSyncingStateObserver] = v24;
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_objectGraph] = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A5E0);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_76790();
  *(_OWORD *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_player] = v28[0];
  sub_76690();
  sub_76790();
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_metricsController] = *(void *)&v28[0];
  sub_75270();
  sub_76790();
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_playbackController] = *(void *)&v28[0];
  sub_754F0();
  sub_76790();
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_session] = *(void *)&v28[0];
  sub_75350();
  sub_76790();
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_alignmentCoordinator] = *(void *)&v28[0];
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A5E8);
  sub_76790();
  sub_3015C(v28, (uint64_t)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_libraryActionController]);
  type metadata accessor for NowPlayingStoreTranscriptIdentifierProvider();
  sub_76790();
  *(void *)&v10[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_storeTranscriptIdentifierProvider] = *(void *)&v28[0];

  v27.receiver = v10;
  v27.super_class = ObjectType;
  return [super initWithNibName:0 bundle:0];
}

uint64_t sub_64224()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

void sub_64260(uint64_t a1)
{
  sub_50468(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_64268()
{
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t sub_64288(unint64_t *a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a3(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void sub_64338()
{
  sub_61D1C(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_64340()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_64388(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_33040;
  return sub_5F084(a1, v4, v5, v7, v6);
}

void sub_64448()
{
  uint64_t v1 = v0;
  uint64_t v13 = sub_76C90();
  uint64_t v2 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_76C40();
  __chkstk_darwin(v5);
  uint64_t v6 = sub_76520();
  __chkstk_darwin(v6 - 8);
  *(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___dataSource] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___collectionViewWrapper] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___collectionView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___searchButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___topGradientMask] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___topGradientView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___bottomGradientMask] = 0;
  *(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___bottomGradientView] = 0;
  uint64_t v12 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_searchQueue;
  sub_FAEC(0, (unint64_t *)&qword_99F20);
  sub_76510();
  uint64_t v14 = &_swiftEmptyArrayStorage;
  sub_64288(&qword_9A1B8, 255, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A1C0);
  sub_D034(&qword_9A1C8, &qword_9A1C0);
  sub_76FE0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v13);
  *(void *)&v0[v12] = sub_76CC0();
  *(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_playTask] = 0;
  uint64_t v7 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_networkObserver;
  sub_76610();
  *(void *)&v0[v7] = sub_76600();
  v0[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_isNetworkReachable] = 1;
  uint64_t v8 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_retrySubject;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A1D0);
  swift_allocObject();
  *(void *)&v0[v8] = sub_75BE0();
  uint64_t v9 = OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_presentationContext;
  type metadata accessor for TranscriptPresentationContext();
  uint64_t v10 = swift_allocObject();
  *(_WORD *)(v10 + 16) = 0;
  *(void *)(v10 + 24) = 0;
  *(unsigned char *)(v10 + 32) = 0;
  *(void *)(v10 + 40) = 0;
  *(unsigned char *)(v10 + 48) = 4;
  sub_75570();
  *(void *)&v1[v9] = v10;
  *(void *)&v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_subscriptions] = &_swiftEmptySetSingleton;
  *(void *)&v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_searchSubscriptions] = &_swiftEmptySetSingleton;
  *(void *)&v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_viewModels] = &_swiftEmptyArrayStorage;
  v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_userInitiatedSearchDismissal] = 1;
  uint64_t v11 = &v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_keyboardState];
  *(_OWORD *)uint64_t v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  v11[32] = 1;
  *(void *)&v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___stateMachine] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___timestampView] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___collectionViewBottomConstraint] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___findInteraction] = 0;
  *(void *)&v1[OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController____lazy_storage___liveObserver] = 0;

  uint64_t v14 = 0;
  unint64_t v15 = 0xE000000000000000;
  sub_77060(27);
  swift_bridgeObjectRelease();
  sub_77160();
  __break(1u);
}

uint64_t sub_648B8(uint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5, double a6)
{
  uint64_t v10 = result;
  if (!a5) {
    goto LABEL_14;
  }
  if (!result)
  {
    swift_retain();
    goto LABEL_7;
  }
  int v12 = a4 & 1;
  swift_retain();
  uint64_t v13 = swift_retain();
  char v14 = sub_45940(v13, a2, a3, a4 & 1, a5);
  swift_release();
  if ((v14 & 1) == 0)
  {
LABEL_7:
    switch(*(void *)(a5 + 16) >> 62)
    {
      case 1:
        uint64_t v24 = (unint64_t *)&unk_99F90;
        uint64_t v25 = type metadata accessor for SilentContent;
        goto LABEL_12;
      case 2:
        uint64_t v24 = &qword_98D10;
        uint64_t v25 = type metadata accessor for SpeakerContent;
        goto LABEL_12;
      case 3:
        uint64_t v24 = (unint64_t *)&qword_99F80;
        uint64_t v25 = type metadata accessor for ChapterTitleContent;
LABEL_12:
        uint64_t v23 = sub_64288(v24, 255, (void (*)(uint64_t))v25);
        break;
      default:
        uint64_t v23 = sub_64288(&qword_98D18, 255, (void (*)(uint64_t))type metadata accessor for TextContent);
        break;
    }
    uint64_t ObjectType = swift_getObjectType();
    objc_super v27 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v23 + 88);
    swift_retain();
    v27(1, 0, ObjectType, v23);
    swift_release();
    uint64_t result = swift_release();
LABEL_14:
    if (!v10) {
      return result;
    }
    if ((a4 & 1) == 0) {
      goto LABEL_5;
    }
LABEL_16:
    swift_retain();
    id v22 = 0;
    goto LABEL_17;
  }
  swift_release();
  if (v12) {
    goto LABEL_16;
  }
LABEL_5:
  unint64_t v15 = (objc_class *)type metadata accessor for StringTextPosition();
  uint64_t v16 = (char *)objc_allocWithZone(v15);
  *(void *)&v16[OBJC_IVAR____TtC19PodcastsTranscripts18StringTextPosition_position] = a2;
  v36.receiver = v16;
  v36.super_class = v15;
  swift_retain();
  [super init];
  uint64_t v18 = (char *)objc_allocWithZone(v15);
  *(void *)&v18[OBJC_IVAR____TtC19PodcastsTranscripts18StringTextPosition_position] = a3;
  v35.receiver = v18;
  v35.super_class = v15;
  id v19 = [super init];
  uint64_t v20 = (objc_class *)type metadata accessor for StringTextRange();
  uint64_t v21 = (char *)objc_allocWithZone(v20);
  *(void *)&v21[OBJC_IVAR____TtC19PodcastsTranscripts15StringTextRange_startPosition] = v17;
  *(void *)&v21[OBJC_IVAR____TtC19PodcastsTranscripts15StringTextRange_endPosition] = v19;
  v34.receiver = v21;
  v34.super_class = v20;
  [super init];
LABEL_17:
  switch(*(void *)(v10 + 16) >> 62)
  {
    case 1:
      uint64_t v29 = (unint64_t *)&unk_99F90;
      long long v30 = type metadata accessor for SilentContent;
      goto LABEL_22;
    case 2:
      uint64_t v29 = &qword_98D10;
      long long v30 = type metadata accessor for SpeakerContent;
      goto LABEL_22;
    case 3:
      uint64_t v29 = (unint64_t *)&qword_99F80;
      long long v30 = type metadata accessor for ChapterTitleContent;
LABEL_22:
      uint64_t v28 = sub_64288(v29, 255, (void (*)(uint64_t))v30);
      break;
    default:
      uint64_t v28 = sub_64288(&qword_98D18, 255, (void (*)(uint64_t))type metadata accessor for TextContent);
      break;
  }
  uint64_t v31 = swift_getObjectType();
  uint64_t v32 = *(void (**)(id, void, uint64_t, uint64_t))(v28 + 88);
  id v33 = v22;
  swift_retain();
  v32(v22, *(void *)&a6, v31, v28);

  swift_release();
  return swift_release();
}

id sub_64D4C(SEL *a1, SEL *a2)
{
  id v4 = [objc_allocWithZone((Class)CAGradientLayer) init];
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A248);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_7B650;
  uint64_t v6 = self;
  id v7 = [v6 *a1];
  id v8 = [v7 CGColor];

  type metadata accessor for CGColor(0);
  uint64_t v10 = v9;
  *(void *)(v5 + 56) = v9;
  *(void *)(v5 + 32) = v8;
  id v11 = [v6 *a2];
  id v12 = [v11 CGColor];

  *(void *)(v5 + 88) = v10;
  *(void *)(v5 + 64) = v12;
  Class isa = sub_769C0().super.isa;
  swift_bridgeObjectRelease();
  [v4 setColors:isa];

  return v4;
}

unint64_t sub_64E94(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_77180();
    uint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_9A5C0);
      uint64_t result = sub_77050();
      uint64_t v3 = (unsigned char *)result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_77180();
      uint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return (unint64_t)v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((char *)&dword_10 + (result & 0xFFFFFFFFFFFFFF8)))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return (unint64_t)v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  id v8 = v3 + 56;
  unint64_t v21 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  while (v21)
  {
    uint64_t result = sub_77080();
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_25;
    }
LABEL_18:
    sub_75BB0();
    sub_64288(&qword_9A5C8, 255, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    uint64_t result = sub_76860();
    uint64_t v11 = -1 << v3[32];
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_64288(&qword_9A5D0, 255, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
      while (1)
      {
        uint64_t result = sub_768A0();
        if (result) {
          break;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0) {
          goto LABEL_22;
        }
      }
      uint64_t result = swift_release();
    }
    else
    {
LABEL_22:
      *(void *)&v8[8 * v13] = v15 | v14;
      *(void *)(*((void *)v3 + 6) + 8 * v12) = v9;
      uint64_t v17 = *((void *)v3 + 2);
      BOOL v10 = __OFADD__(v17, 1);
      uint64_t v18 = v17 + 1;
      if (v10) {
        goto LABEL_26;
      }
      *((void *)v3 + 2) = v18;
    }
    if (v7 == v5) {
      return (unint64_t)v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_27;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  uint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_65150(void *a1)
{
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = a1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_65F70;
  *(void *)(v4 + 24) = v3;
  aBlock[4] = sub_65F78;
  void aBlock[5] = v4;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_59684;
  void aBlock[3] = &block_descriptor_48;
  uint64_t v5 = _Block_copy(aBlock);
  id v6 = a1;
  swift_release();
  [v6 setAccessibilityCustomActionsBlock:v5];
  _Block_release(v5);
  uint64_t result = sub_4CA30();
  if (result)
  {
    unint64_t v8 = *(void *)(result + 16);
    if (!(v8 >> 62))
    {
      uint64_t v9 = *(void *)(v8 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent_liveText);
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      aBlock[0] = v9;
      sub_64288(&qword_98040, 255, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
      swift_retain();
      swift_retain();
      sub_75530();
      swift_release();
      swift_release();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_653C0()
{
  uint64_t result = sub_4CA30();
  if (result)
  {
    if (*(void *)(result + 16) >> 62)
    {
      return swift_release();
    }
    else
    {
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      sub_64288(&qword_98040, 255, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
      swift_retain();
      swift_retain();
      sub_75530();
      swift_release();
      swift_release();
      swift_release();
      return swift_release();
    }
  }
  return result;
}

void _s19PodcastsTranscripts24TranscriptViewControllerC06scrollD15WillEndDragging_12withVelocity19targetContentOffsetySo08UIScrollD0C_So7CGPointVSpyAJGtF_0(double a1, double a2)
{
  if (a2 <= 0.0)
  {
    if (a2 >= 0.0) {
      return;
    }
    char v2 = 4;
  }
  else
  {
    char v2 = 5;
  }
  *(unsigned char *)(sub_50398() + 16) = v2;
  sub_285D4();

  swift_release();
}

uint64_t sub_655AC()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_655E4()
{
  sub_59D78(*(unsigned char *)(v0 + 16));
}

id _s19PodcastsTranscripts24TranscriptViewControllerC010collectionD0_34contextMenuConfigurationForItemsAt5pointSo09UIContexthI0CSgSo012UICollectionD0C_Say10Foundation9IndexPathVGSo7CGPointVtF_0(void *a1, uint64_t a2)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_98020);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_75190();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = __chkstk_darwin(v12);
  id v15 = 0;
  if (*(void *)(a2 + 16) == 1)
  {
    uint64_t v40 = v2;
    uint64_t v41 = (char *)&v32 - v13;
    id v39 = a1;
    uint64_t v16 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v17 = a2 + ((v16 + 32) & ~v16);
    uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v9 + 16);
    v18(v7, v17, v8, v14);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v7, 0, 1, v8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_CA50((uint64_t)v7, &qword_98020);
      return 0;
    }
    uint64_t v37 = (void (*)(char *, char *, uint64_t))v18;
    uint64_t v38 = (v16 + 32) & ~v16;
    unint64_t v19 = v41;
    objc_super v36 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
    v36(v41, v7, v8);
    uint64_t v20 = sub_4CA30();
    if (!v20)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v19, v8);
      return 0;
    }
    if (*(void *)(v20 + 16) >> 62)
    {
      swift_release();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v41, v8);
      return 0;
    }
    uint64_t v34 = *(void *)(v20 + 16);
    uint64_t v35 = v20;
    swift_retain();
    uint64_t v21 = sub_75210();
    if (!v21)
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v41, v8);
      swift_release();
      swift_release();
      return 0;
    }
    id v33 = (void *)v21;
    uint64_t v32 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v37(v11, v41, v8);
    uint64_t v22 = v38;
    unint64_t v23 = (v10 + v38 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = swift_allocObject();
    id v25 = v39;
    *(void *)(v24 + 16) = v32;
    *(void *)(v24 + 24) = v25;
    v36((char *)(v24 + v22), v11, v8);
    uint64_t v26 = v33;
    *(void *)(v24 + v23) = v33;
    *(void *)(v24 + ((v23 + 15) & 0xFFFFFFFFFFFFFFF8)) = v34;
    objc_super v27 = self;
    aBlock[4] = sub_65E74;
    void aBlock[5] = v24;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_631AC;
    void aBlock[3] = &block_descriptor_34;
    uint64_t v28 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    id v29 = v39;
    id v30 = v26;
    swift_retain();
    swift_release();
    id v15 = [v27 configurationWithIdentifier:0 previewProvider:0 actionProvider:v28];
    swift_release();
    _Block_release(v28);

    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v41, v8);
    swift_release();
  }
  return v15;
}

uint64_t type metadata accessor for TranscriptViewController()
{
  return self;
}

id _s19PodcastsTranscripts24TranscriptViewControllerC15findInteraction_6didEndySo06UIFindG0C_So0J7SessionCtF_0(void *a1)
{
  id result = [a1 isFindNavigatorVisible];
  if (result)
  {
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_userInitiatedSearchDismissal) == 1)
    {
      *(unsigned char *)(sub_50398() + 16) = 0;
      sub_285D4();
      return (id)swift_release();
    }
    else
    {
      *(unsigned char *)(v1 + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_userInitiatedSearchDismissal) = 1;
    }
  }
  return result;
}

uint64_t method lookup function for TranscriptViewController(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for TranscriptViewController);
}

uint64_t dispatch thunk of TranscriptViewController.__allocating_init(asPartOf:nowPlayingViewModel:transcriptSyncingStateObserver:playerStylePublisher:)()
{
  return (*(uint64_t (**)(void))(v0 + 360))();
}

uint64_t getEnumTagSinglePayload for TranscriptViewController.KeyboardState(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for TranscriptViewController.KeyboardState(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(unsigned char *)(result + 32) = 0;
    *(_OWORD *)id result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)id result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 33) = v3;
  return result;
}

uint64_t sub_65B68(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_65B84(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)id result = (a2 - 1);
    *(void *)(result + 8) = 0;
    *(unsigned char *)(result + 32) = 1;
  }
  else
  {
    *(unsigned char *)(result + 32) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptViewController.KeyboardState()
{
  return &type metadata for TranscriptViewController.KeyboardState;
}

unsigned char *storeEnumTagSinglePayload for TranscriptViewController.Section(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *id result = a2;
        return result;
      case 2:
        *(_WORD *)id result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)id result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *id result = 0;
      break;
    case 2:
      *(_WORD *)id result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x65C54);
    case 4:
      *(_DWORD *)id result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptViewController.Section()
{
  return &type metadata for TranscriptViewController.Section;
}

uint64_t sub_65C8C()
{
  return sub_D034(&qword_9A190, &qword_9A198);
}

unint64_t sub_65CCC()
{
  unint64_t result = qword_9A1A0;
  if (!qword_9A1A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9A1A0);
  }
  return result;
}

unint64_t sub_65D20()
{
  unint64_t result = qword_9A1B0;
  if (!qword_9A1B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9A1B0);
  }
  return result;
}

uint64_t sub_65D74()
{
  uint64_t v1 = sub_75190();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();

  return _swift_deallocObject(v0, ((v6 + 15) & 0xFFFFFFFFFFFFFFF8) + 8, v5);
}

Class sub_65E74(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_75190() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 16);
  unint64_t v7 = *(void **)(v1 + 24);
  uint64_t v8 = *(void **)(v1 + v5);
  uint64_t v9 = *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_5A48C(a1, v6, v7, v1 + v4, v8, v9);
}

uint64_t sub_65F30()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void **sub_65F70()
{
  return sub_58FF0();
}

uint64_t sub_65F78()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

BOOL sub_65FA0()
{
  return sub_5952C();
}

uint64_t sub_65FA8()
{
  return sub_5959C();
}

uint64_t sub_65FB0()
{
  return sub_59610();
}

void sub_65FB8()
{
}

void sub_65FC8()
{
  sub_5DB74(*(void *)(v0 + 16));
}

uint64_t sub_65FD0()
{
  return _swift_deallocObject(v0, 32, 7);
}

void sub_65FE0()
{
}

uint64_t sub_65FF0()
{
  sub_D034(&qword_9A238, (uint64_t *)&unk_9A1D0);

  return sub_75BF0();
}

uint64_t sub_66074()
{
  return _swift_deallocObject(v0, 24, 7);
}

void sub_660AC()
{
}

void sub_660D4()
{
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_66134()
{
  swift_weakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_6616C(char a1, char a2)
{
  return sub_28AAC(a1, a2);
}

uint64_t sub_66174()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_661AC(unsigned __int8 *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_661E0(uint64_t a1)
{
  return sub_28B3C(a1);
}

uint64_t sub_661E8()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_66220()
{
}

void sub_66228()
{
}

void sub_66230(unsigned __int8 *a1)
{
}

void sub_66238()
{
}

void sub_66240()
{
}

uint64_t sub_66248(uint64_t a1)
{
  return a1;
}

uint64_t sub_6629C()
{
  return _swift_deallocObject(v0, 57, 7);
}

uint64_t sub_662D4(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(unsigned char *)(a2 + 32) = *((unsigned char *)a1 + 32);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_662EC()
{
  sub_662D4((long long *)(v0 + 24), *(void *)(v0 + 16) + OBJC_IVAR____TtC19PodcastsTranscripts24TranscriptViewController_keyboardState);
  sub_51C7C();
}

uint64_t sub_66328()
{
  swift_unknownObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_66360@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 24);
  unint64_t v5 = *a1;
  *a2 = *a1;
  uint64_t ObjectType = swift_getObjectType();
  unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 208);
  id v8 = v5;
  uint64_t result = v7(ObjectType, v4);
  a2[1] = (void *)result;
  return result;
}

void sub_663D8(void *a1, void *a2)
{
}

uint64_t sub_663E0(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]);
}

uint64_t sub_66418()
{
  return sub_17EB8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_66440(unint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_544B4(a1, a2, a3, v3);
}

uint64_t sub_66448(void *a1)
{
  return (*(uint64_t (**)(void, void *, void))(v1 + 16))(*a1, a1 + 1, a1[6]);
}

uint64_t sub_66480()
{
  return sub_54A7C();
}

void sub_66488(uint64_t a1, uint64_t *a2)
{
}

uint64_t sub_66490(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(unsigned char *, unsigned char *))(v1 + 16);
  sub_C570(a1, (uint64_t)v5, &qword_9A5D8);
  sub_C570(a1 + 40, (uint64_t)v6, &qword_9A5D8);
  return v3(v5, v6);
}

void sub_664F8(NSObject *a1, uint64_t a2)
{
  sub_550B0(a1, a2, *(void *)(v2 + 16));
}

uint64_t sub_66500(uint64_t a1)
{
  uint64_t v2 = *(uint64_t (**)(_OWORD *, _OWORD *))(v1 + 16);
  long long v3 = *(_OWORD *)(a1 + 16);
  v6[0] = *(_OWORD *)a1;
  v6[1] = v3;
  uint64_t v7 = *(void *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 56);
  v8[0] = *(_OWORD *)(a1 + 40);
  v8[1] = v4;
  uint64_t v9 = *(void *)(a1 + 72);
  return v2(v6, v8);
}

unint64_t sub_6655C()
{
  unint64_t result = qword_9A560;
  if (!qword_9A560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9A560);
  }
  return result;
}

uint64_t sub_665B0()
{
  return objectdestroy_178Tm(50);
}

uint64_t sub_665B8()
{
  return sub_62560(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(unsigned __int8 *)(v0 + 48), *(unsigned char *)(v0 + 49));
}

void sub_665D0(double *a1)
{
  sub_5E16C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t *sub_665D8(uint64_t *a1)
{
  return a1;
}

uint64_t sub_6660C(uint64_t result)
{
  if (result != 1) {
    return swift_release();
  }
  return result;
}

uint64_t sub_6661C(uint64_t result)
{
  if (result != 1) {
    return swift_retain();
  }
  return result;
}

const char *keypath_get_selector_contentInset()
{
  return "contentInset";
}

id sub_66638@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 contentInset];
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  return result;
}

id sub_66670(double *a1, id *a2)
{
  return [*a2 setContentInset:*a1, a1[1], a1[2], a1[3]];
}

void sub_66688()
{
}

uint64_t objectdestroy_2Tm()
{
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_666D4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_5C284(a1, a2, a3, *(void *)(v3 + 16), *(void *)(v3 + 24));
}

uint64_t sub_666DC()
{
  return objectdestroy_201Tm(&qword_9A618);
}

uint64_t sub_666E8()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A618);

  return sub_5C004();
}

void sub_667A0()
{
}

uint64_t sub_667A8()
{
  return objectdestroy_201Tm(&qword_9A610);
}

uint64_t objectdestroy_201Tm(uint64_t *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(a1);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 16) & ~v4;
  uint64_t v6 = v4 | 7;
  unint64_t v7 = ((*(void *)(v3 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1 + v5, v2);
  swift_release();

  return _swift_deallocObject(v1, v7, v6);
}

void *sub_66854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A610);

  return sub_5C0D8(a1, a2, a3);
}

uint64_t sub_6691C@<X0>(uint64_t a1@<X8>)
{
  return sub_5C89C(a1);
}

uint64_t sub_66924()
{
  return sub_75F50();
}

uint64_t sub_6694C@<X0>(void *a1@<X8>)
{
  uint64_t result = sub_75420();
  *a1 = v3;
  return result;
}

uint64_t sub_66978()
{
  return sub_75430();
}

void sub_669A0()
{
}

uint64_t sub_669A8()
{
  return objectdestroy_178Tm(32);
}

uint64_t objectdestroy_178Tm(uint64_t a1)
{
  swift_release();

  return _swift_deallocObject(v1, a1, 7);
}

void sub_669FC(uint64_t a1)
{
  sub_61784(a1, *(void **)(v1 + 16));
}

uint64_t sub_66A04@<X0>(uint64_t a1@<X8>)
{
  return sub_5C43C(*(void *)(v1 + 16), *(uint64_t (**)())(v1 + 32), a1);
}

uint64_t type metadata accessor for TranscriptViewController.ContentView()
{
  uint64_t result = qword_9A6D8;
  if (!qword_9A6D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_66A5C()
{
  return sub_5C630();
}

uint64_t *sub_66A64(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    unint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
  }
  else
  {
    unint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_753F0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    __n128 v14 = (uint64_t *)((char *)v7 + v13);
    id v15 = (uint64_t *)((char *)a2 + v13);
    uint64_t v16 = v15[1];
    *__n128 v14 = *v15;
    v14[1] = v16;
  }
  swift_retain();
  return v7;
}

uint64_t sub_66B6C(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_753F0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);

  return swift_release();
}

void *sub_66BFC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  unint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_753F0();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v14 = v13[1];
  *uint64_t v12 = *v13;
  v12[1] = v14;
  swift_retain();
  return a1;
}

void *sub_66CBC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  unint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_753F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  uint64_t v13 = v12[1];
  void *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_66D7C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  unint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_753F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

void *sub_66E14(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  unint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_753F0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_release();
  return a1;
}

uint64_t sub_66EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_66ED4);
}

uint64_t sub_66ED4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_753F0();
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_66F84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_66F98);
}

void *sub_66F98(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_753F0();
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_67040()
{
  uint64_t result = sub_753F0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for TranscriptViewController._State()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TranscriptViewController._State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TranscriptViewController._State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  long long v4 = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for TranscriptViewController._State(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptViewController._State(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptViewController._State(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptViewController._State()
{
  return &type metadata for TranscriptViewController._State;
}

uint64_t sub_672F0()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_6730C()
{
  unint64_t result = qword_9A750;
  if (!qword_9A750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9A750);
  }
  return result;
}

unint64_t sub_67360()
{
  unint64_t result = qword_9A758;
  if (!qword_9A758)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_9A738);
    sub_64288((unint64_t *)&unk_9A760, 255, (void (*)(uint64_t))type metadata accessor for TextContentView);
    sub_9BEC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9A758);
  }
  return result;
}

unint64_t sub_67410()
{
  unint64_t result = qword_9A770;
  if (!qword_9A770)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_9A720);
    sub_64288(&qword_99150, 255, (void (*)(uint64_t))type metadata accessor for SpeakerContentView);
    sub_6730C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9A770);
  }
  return result;
}

uint64_t sub_674C0()
{
  return sub_75F30();
}

uint64_t sub_674E8()
{
  return sub_75F70();
}

uint64_t sub_6750C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_67574(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_675DC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_67640()
{
  unint64_t result = qword_9A790;
  if (!qword_9A790)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_9A798);
    sub_67360();
    sub_67410();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9A790);
  }
  return result;
}

uint64_t sub_67754()
{
  return sub_40A08();
}

unint64_t sub_67770(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A928);
  unint64_t v2 = (void *)sub_771C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  long long v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_6B2DC((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_6787C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    unint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A920);
  unint64_t v2 = (void *)sub_771C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  long long v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_6B370((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_67988(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A908);
  uint64_t v2 = sub_771C0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_6F7A4(v6, (uint64_t)&v13);
    uint64_t v7 = v13;
    unint64_t result = sub_6B370(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_26A78(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    void v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_67AA4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A918);
  uint64_t v2 = (void *)sub_771C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 72);
  while (1)
  {
    uint64_t v5 = *(v4 - 4);
    uint64_t v6 = *(v4 - 3);
    uint64_t v7 = *(v4 - 2);
    uint64_t v8 = *v4;
    v15[0] = *(v4 - 5);
    v15[1] = v5;
    v15[2] = v6;
    void v15[3] = v7;
    char v16 = *((unsigned char *)v4 - 8);
    sub_8944(v15[0], v5, v6, v7, v16);
    swift_retain();
    unint64_t result = sub_6B400((uint64_t)v15);
    if (v10) {
      break;
    }
    unint64_t v11 = result;
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t result = sub_4A064((uint64_t)v15, v2[6] + 40 * result);
    *(void *)(v2[7] + 8 * v11) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 6;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_67BE0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A8D0);
  uint64_t v2 = (void *)sub_771C0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_unknownObjectRetain();
    unint64_t result = sub_6B4B8((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_67CEC(void *a1, uint64_t a2)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      unint64_t v6 = sub_6B4B8((uint64_t)a1);
      if (v7)
      {
        uint64_t v5 = *(void *)(*(void *)(a2 + 56) + 8 * v6);
        swift_unknownObjectRetain();
        return v5;
      }
    }
    return 0;
  }
  id v3 = a1;
  uint64_t v4 = sub_77130();

  if (!v4) {
    return 0;
  }
  swift_unknownObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A8D8);
  swift_dynamicCast();
  uint64_t v5 = v9;
  swift_unknownObjectRelease();
  return v5;
}

char *PlayerPathCoordinator.__allocating_init(playerID:bundleID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v9 = objc_allocWithZone(v4);
  return PlayerPathCoordinator.init(playerID:bundleID:)(a1, a2, a3, a4);
}

char *PlayerPathCoordinator.init(playerID:bundleID:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v52 = a1;
  uint64_t v53 = a3;
  uint64_t v51 = a2;
  uint64_t v6 = sub_76500();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v58 = v6;
  uint64_t v59 = v7;
  __chkstk_darwin(v6);
  uint64_t v57 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_76C90();
  uint64_t v9 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  BOOL v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_76C40();
  __chkstk_darwin(v12);
  uint64_t v13 = sub_76520();
  uint64_t v55 = *(void *)(v13 - 8);
  uint64_t v56 = v13;
  __chkstk_darwin(v13);
  uint64_t v60 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = v4;
  v4[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_needsInitialPath] = 1;
  uint64_t v49 = OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_invalidationQueue;
  uint64_t v47 = sub_FAEC(0, (unint64_t *)&qword_99F20);
  id v15 = v4;
  sub_76510();
  long long aBlock = (void **)&_swiftEmptyArrayStorage;
  sub_6F6A4(&qword_9A1B8, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A1C0);
  CGRect v54 = &protocol conformance descriptor for [A];
  sub_D034(&qword_9A1C8, &qword_9A1C0);
  sub_76FE0();
  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v50);
  *(void *)&v48[v49] = sub_76CC0();
  uint64_t v16 = OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_failingPlayerPathTimers;
  *(void *)&v15[v16] = sub_67BE0((uint64_t)&_swiftEmptyArrayStorage);
  *(void *)&v15[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_activeSystemRouteDidChangeNotificationObserver] = 0;
  *(void *)&v15[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_playerPathInvalidationObserver] = 0;
  *(void *)&v15[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_applicationDidBecomeActiveNotificationObserver] = 0;
  *(void *)&v15[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_applicationWillResignActiveNotificationObserver] = 0;
  v15[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_isUpdating] = 0;
  *(void *)&v15[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_updateBlocks] = &_swiftEmptyArrayStorage;
  v15[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator__needsUpdate] = 0;
  *(void *)&v15[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_routingController] = 0;
  uint64_t v17 = &v15[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_playerID];
  uint64_t v18 = v51;
  *uint64_t v17 = v52;
  v17[1] = v18;
  unint64_t v19 = &v15[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_bundleID];
  *unint64_t v19 = v53;
  v19[1] = a4;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  NSString v20 = sub_768D0();
  swift_bridgeObjectRelease();
  NSString v21 = sub_768D0();
  swift_bridgeObjectRelease();
  uint64_t v22 = self;
  id v23 = [v22 pathWithRoute:0 bundleID:v20 playerID:v21];

  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v24 = sub_768D0();
  swift_bridgeObjectRelease();
  NSString v25 = sub_768D0();
  swift_bridgeObjectRelease();
  id v26 = [v22 pathWithRoute:0 bundleID:v24 playerID:v25];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  *(void *)&v15[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_metadataPlayerPath] = v23;
  *(void *)&v15[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_playbackPlayerPath] = v26;

  objc_super v27 = (objc_class *)type metadata accessor for PlayerPathCoordinator();
  v68.receiver = v15;
  v68.super_class = v27;
  id v28 = [super init];
  uint64_t v29 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v66 = sub_688D0;
  uint64_t v67 = v29;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v63 = 1107296256;
  uint64_t v64 = sub_4CF00;
  unint64_t v65 = &block_descriptor_7;
  id v30 = _Block_copy(&aBlock);
  uint64_t v31 = v28;
  swift_retain();
  uint64_t v32 = v60;
  sub_76510();
  uint64_t v61 = &_swiftEmptyArrayStorage;
  sub_6F6A4(&qword_98570, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_99F30);
  sub_D034((unint64_t *)&qword_98578, (uint64_t *)&unk_99F30);
  id v33 = v57;
  uint64_t v34 = v58;
  sub_76FE0();
  sub_76CB0();
  _Block_release(v30);
  (*(void (**)(char *, uint64_t))(v59 + 8))(v33, v34);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v32, v56);
  swift_release();
  swift_release();
  LOBYTE(v29) = v31[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_isUpdating];
  v31[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_isUpdating] = 1;
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v31;
  *(unsigned char *)(v35 + 24) = v29;
  objc_super v36 = self;
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = sub_6AA34;
  *(void *)(v37 + 24) = v35;
  uint64_t v66 = sub_6AA40;
  uint64_t v67 = v37;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v63 = 1107296256;
  uint64_t v64 = sub_69594;
  unint64_t v65 = &block_descriptor_9_0;
  uint64_t v38 = _Block_copy(&aBlock);
  id v39 = v31;
  swift_retain();
  swift_release();
  [v36 getActiveRouteWithTimeout:v38 completion:1.0];
  swift_release();
  _Block_release(v38);
  uint64_t v40 = (void *)MPAVRoutingControllerActiveSystemRouteDidChangeNotification;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_766D0();
  swift_allocObject();
  id v41 = v40;
  *(void *)&v39[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_activeSystemRouteDidChangeNotificationObserver] = sub_766C0();
  swift_release();
  uint64_t v42 = (void *)MTApplicationDidBecomeActiveNotification;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_allocObject();
  id v43 = v42;
  *(void *)&v39[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_applicationDidBecomeActiveNotificationObserver] = sub_766C0();
  swift_release();
  uint64_t v44 = (void *)MTApplicationWillResignActiveNotification;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_allocObject();
  id v45 = v44;
  *(void *)&v39[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_applicationWillResignActiveNotificationObserver] = sub_766C0();
  swift_release();
  sub_6AB20();

  return v39;
}

uint64_t type metadata accessor for PlayerPathCoordinator()
{
  return self;
}

uint64_t sub_687EC()
{
  swift_unknownObjectWeakDestroy();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_68824(uint64_t a1)
{
  id v2 = [self systemRoute];
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  swift_retain();
  id v4 = v2;
  sub_752B0();

  return swift_release();
}

uint64_t sub_688D0()
{
  return sub_68824(v0);
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

void sub_688F0(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = Strong;
    if (*((unsigned char *)Strong + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_needsInitialPath) == 1)
    {
      char v5 = *((unsigned char *)Strong + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_isUpdating);
      *((unsigned char *)Strong + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_isUpdating) = 1;
      uint64_t v6 = swift_allocObject();
      *(void *)(v6 + 16) = v4;
      *(void *)(v6 + 24) = a2;
      *(unsigned char *)(v6 + 32) = v5;
      id v7 = v4;
      id v8 = a2;
      id v9 = v7;
      id v10 = v8;
      sub_752B0();

      swift_release();
    }
    else
    {
    }
  }
}

void sub_689E8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (void *)Strong;
    char v2 = *(unsigned char *)(Strong + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_isUpdating);
    *(unsigned char *)(Strong + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_isUpdating) = 1;
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(unsigned char *)(v3 + 24) = v2;
    id v4 = self;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_6F908;
    *(void *)(v5 + 24) = v3;
    aBlock[4] = sub_6F90C;
    void aBlock[5] = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_69594;
    void aBlock[3] = &block_descriptor_103;
    uint64_t v6 = _Block_copy(aBlock);
    id v7 = v1;
    swift_retain();
    swift_release();
    [v4 getActiveRouteWithTimeout:v6 completion:1.0];
    swift_release();
    _Block_release(v6);
  }
}

void sub_68B5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v5 = (void *)Strong;
    uint64_t v6 = *(void **)(Strong + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_routingController);
    id v7 = v6;

    if (v6)
    {
      [v7 setDiscoveryMode:a3];
    }
  }
}

id sub_68C34()
{
  unint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_metadataPlayerPath);
  swift_beginAccess();
  char v2 = *v1;

  return v2;
}

void sub_68CE4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = (void *)Strong;
    char v2 = *(unsigned char *)(Strong + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_isUpdating);
    *(unsigned char *)(Strong + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_isUpdating) = 1;
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v1;
    *(unsigned char *)(v3 + 24) = v2;
    id v4 = self;
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = sub_6F908;
    *(void *)(v5 + 24) = v3;
    aBlock[4] = sub_6F90C;
    void aBlock[5] = v5;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_69594;
    void aBlock[3] = &block_descriptor_85_0;
    uint64_t v6 = _Block_copy(aBlock);
    id v7 = v1;
    swift_retain();
    swift_release();
    [v4 getActiveRouteWithTimeout:v6 completion:1.0];
    swift_release();
    _Block_release(v6);
  }
}

id sub_68EA4()
{
  unint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_playbackPlayerPath);
  swift_beginAccess();
  char v2 = *v1;

  return v2;
}

void sub_68F7C(void *a1)
{
  char v3 = v1[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_isUpdating];
  v1[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_isUpdating] = 1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v1;
  *(unsigned char *)(v4 + 24) = v3;
  if (a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v1;
    *(void *)(v5 + 24) = a1;
    *(unsigned char *)(v5 + 32) = v3;
    uint64_t v6 = v1;
    id v7 = a1;
    id v8 = v6;
    id v9 = v7;
    sub_752B0();

    swift_release();
    swift_release();
  }
  else
  {
    id v10 = self;
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = sub_6F908;
    *(void *)(v11 + 24) = v4;
    void v14[4] = sub_6F90C;
    uint64_t v14[5] = v11;
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 1107296256;
    v14[2] = sub_69594;
    v14[3] = &block_descriptor_23;
    uint64_t v12 = _Block_copy(v14);
    uint64_t v13 = v1;
    swift_retain();
    swift_release();
    [v10 getActiveRouteWithTimeout:v12 completion:1.0];
    swift_release();
    _Block_release(v12);
  }
}

uint64_t sub_69158(void *a1, void *a2, char a3)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a2;
  *(void *)(v6 + 24) = a1;
  *(unsigned char *)(v6 + 32) = a3;
  id v7 = a2;
  id v8 = a1;
  sub_752B0();

  return swift_release();
}

void sub_691E0(void *a1, void *a2, char a3)
{
  id v6 = [a1 metadataPlayerPath];
  id v24 = [v6 route];

  id v7 = [a1 metadataPlayerPath];
  id v8 = [v7 route];

  if (v8 && (id v9 = [v8 connection], v8, v9))
  {
    unsigned __int8 v10 = [v9 isInvalidated];

    if (!v24) {
      goto LABEL_7;
    }
  }
  else
  {
    unsigned __int8 v10 = 0;
    if (!v24)
    {
LABEL_7:
      *((unsigned char *)a1 + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_needsInitialPath) = 0;
      uint64_t v14 = &selRef_bottomAnchor;
      if ([a2 isDeviceRoute])
      {
        char v23 = a3;
        id v15 = a2;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        NSString v16 = sub_768D0();
        swift_bridgeObjectRelease();
        NSString v17 = sub_768D0();
        swift_bridgeObjectRelease();
        id v18 = [self pathWithRoute:v15 bundleID:v16 playerID:v17];

        uint64_t v14 = &selRef_bottomAnchor;
        a3 = v23;
      }
      else
      {
        id v18 = [self pathWithRoute:a2 bundleID:0 playerID:0];
      }
      id v19 = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      NSString v20 = sub_768D0();
      swift_bridgeObjectRelease();
      NSString v21 = sub_768D0();
      swift_bridgeObjectRelease();
      id v22 = [self v14[147] v19, v20, v21];

      [a1 setMetadataPlayerPath:v18];
      [a1 setPlaybackPlayerPath:v22];

      goto LABEL_11;
    }
  }
  sub_FAEC(0, &qword_9A900);
  id v11 = a2;
  id v12 = v24;
  char v13 = sub_76E50();

  if (v10 & 1 | ((v13 & 1) == 0)) {
    goto LABEL_7;
  }
LABEL_11:
  sub_6A948(a3 & 1);
}

void sub_69508(void *a1, void (*a2)(id))
{
  if (a1) {
    id v5 = a1;
  }
  else {
    id v5 = [self systemRoute];
  }
  id v4 = a1;
  a2(v5);
}

void sub_69594(uint64_t a1, void *a2)
{
  char v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_69600(void *a1)
{
  uint64_t v3 = sub_76500();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_76520();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  unsigned __int8 v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16[0] = *(void *)&v1[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_invalidationQueue];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v1;
  *(void *)(v11 + 24) = a1;
  aBlock[4] = sub_6AD94;
  void aBlock[5] = v11;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_4CF00;
  void aBlock[3] = &block_descriptor_32;
  id v12 = _Block_copy(aBlock);
  char v13 = v1;
  id v14 = a1;
  sub_76510();
  v16[1] = &_swiftEmptyArrayStorage;
  sub_6F6A4(&qword_98570, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_99F30);
  sub_D034((unint64_t *)&qword_98578, (uint64_t *)&unk_99F30);
  sub_76FE0();
  sub_76CB0();
  _Block_release(v12);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return swift_release();
}

uint64_t sub_698C8(uint64_t a1, unint64_t a2)
{
  swift_beginAccess();
  uint64_t v3 = sub_6DE28(a2);
  uint64_t result = swift_endAccess();
  if (v3)
  {
    swift_getObjectType();
    sub_76D00();
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_6993C(void *a1)
{
  char v2 = v1;
  uint64_t v4 = sub_76500();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_76520();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = (void *)sub_750E0();
  char v13 = sub_69C28();

  if (v13)
  {
    v18[0] = *(void *)&v2[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_invalidationQueue];
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v2;
    *(void *)(v14 + 24) = a1;
    aBlock[4] = sub_6AD9C;
    void aBlock[5] = v14;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_4CF00;
    void aBlock[3] = &block_descriptor_38;
    id v15 = _Block_copy(aBlock);
    NSString v16 = v2;
    id v17 = a1;
    sub_76510();
    v18[1] = &_swiftEmptyArrayStorage;
    sub_6F6A4(&qword_98570, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_99F30);
    sub_D034((unint64_t *)&qword_98578, (uint64_t *)&unk_99F30);
    sub_76FE0();
    sub_76CB0();
    _Block_release(v15);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    swift_release();
  }
}

uint64_t sub_69C28()
{
  unint64_t v1 = v0;
  id v2 = [v0 domain];
  uint64_t v3 = sub_76910();
  uint64_t v5 = v4;

  uint64_t v6 = (char *)[v1 code];
  if (sub_76910() == v3 && v7 == v5)
  {
    swift_bridgeObjectRelease_n();
    if (v6 == (unsigned char *)&def_1E2E4 + 2) {
      return 1;
    }
  }
  else
  {
    char v9 = sub_77230();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v9 & 1) != 0 && v6 == (unsigned char *)&def_1E2E4 + 2) {
      return 1;
    }
  }
  unint64_t v35 = (unint64_t)&_swiftEmptyArrayStorage;
  id v11 = [v1 userInfo];
  uint64_t v12 = sub_76850();

  uint64_t v13 = sub_76910();
  if (*(void *)(v12 + 16) && (unint64_t v15 = sub_6B4FC(v13, v14), (v16 & 1) != 0))
  {
    sub_8CBC(*(void *)(v12 + 56) + 32 * v15, (uint64_t)&v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v34 + 1))
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_9A8F0);
      if (swift_dynamicCast()) {
        sub_6B108((unint64_t)v32, (uint64_t (*)(uint64_t, void, unint64_t))sub_6F360);
      }
      goto LABEL_16;
    }
  }
  else
  {
    long long v33 = 0u;
    long long v34 = 0u;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_6F6F8((uint64_t)&v33);
LABEL_16:
  id v17 = [v1 userInfo];
  uint64_t v18 = sub_76850();

  uint64_t v19 = sub_76910();
  if (*(void *)(v18 + 16) && (unint64_t v21 = sub_6B4FC(v19, v20), (v22 & 1) != 0))
  {
    sub_8CBC(*(void *)(v18 + 56) + 32 * v21, (uint64_t)&v33);
  }
  else
  {
    long long v33 = 0u;
    long long v34 = 0u;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)&v34 + 1))
  {
    sub_FAEC(0, &qword_9A8E8);
    if (swift_dynamicCast())
    {
      id v23 = v32;
      sub_769B0();
      if (*(void *)((char *)&dword_10 + (v35 & 0xFFFFFFFFFFFFFF8)) >= *(void *)((char *)&dword_18
                                                                                     + (v35 & 0xFFFFFFFFFFFFFF8)) >> 1)
        sub_76A00();
      sub_76A20();
      sub_769F0();
    }
  }
  else
  {
    sub_6F6F8((uint64_t)&v33);
  }
  unint64_t v24 = v35;
  if (v35 >> 62) {
    goto LABEL_44;
  }
  uint64_t v25 = *(void *)((char *)&dword_10 + (v35 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain_n();
  if (v25)
  {
    while (1)
    {
      id v26 = (v24 & 0xC000000000000001) != 0 ? (id)sub_77080() : *(id *)(v24 + 32);
      objc_super v27 = v26;
      if (sub_69C28()) {
        break;
      }

      if (v25 != 1)
      {
        uint64_t v28 = 5;
        while (1)
        {
          id v29 = (v24 & 0xC000000000000001) != 0 ? (id)sub_77080() : *(id *)(v24 + 8 * v28);
          objc_super v27 = v29;
          uint64_t v30 = v28 - 3;
          if (__OFADD__(v28 - 4, 1)) {
            break;
          }
          if (sub_69C28()) {
            goto LABEL_31;
          }

          ++v28;
          if (v30 == v25) {
            goto LABEL_40;
          }
        }
        __break(1u);
LABEL_44:
        swift_bridgeObjectRetain_n();
        uint64_t v25 = sub_77180();
        if (v25) {
          continue;
        }
      }
      goto LABEL_40;
    }
LABEL_31:
    swift_bridgeObjectRelease_n();

    uint64_t v10 = 1;
  }
  else
  {
LABEL_40:
    swift_bridgeObjectRelease_n();
    uint64_t v10 = 0;
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_6A054(char *a1, void *a2)
{
  uint64_t v4 = sub_764F0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v56 = (void *)((char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v7);
  char v9 = (void *)((char *)v43 - v8);
  uint64_t v10 = sub_76540();
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v55 = v10;
  __chkstk_darwin(v10);
  uint64_t v52 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v53 = (char *)v43 - v13;
  uint64_t v14 = sub_76500();
  uint64_t v49 = *(void *)(v14 - 8);
  uint64_t v50 = v14;
  __chkstk_darwin(v14);
  uint64_t v46 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_76520();
  uint64_t v45 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  id v17 = (char *)v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_76CD0();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  unint64_t v21 = (char *)v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v48 = a1;
  char v22 = (uint64_t *)&a1[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_failingPlayerPathTimers];
  swift_beginAccess();
  uint64_t v51 = v22;
  uint64_t v23 = *v22;
  id v24 = a2;
  swift_bridgeObjectRetain();
  uint64_t v25 = sub_67CEC(v24, v23);

  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  if (!v25)
  {
    sub_FAEC(0, &qword_9A8A8);
    aBlock[0] = &_swiftEmptyArrayStorage;
    sub_6F6A4(&qword_9A8B0, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_source.TimerFlags);
    uint64_t v44 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_9A8B8);
    uint64_t v57 = v5;
    sub_D034(&qword_9A8C0, &qword_9A8B8);
    sub_76FE0();
    uint64_t v26 = sub_76CE0();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    v43[1] = v26;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v28 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v28;
    *(void *)(v29 + 24) = v24;
    aBlock[4] = sub_6F6F0;
    void aBlock[5] = v29;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_4CF00;
    void aBlock[3] = &block_descriptor_92;
    uint64_t v30 = _Block_copy(aBlock);
    id v48 = v24;
    swift_retain();
    sub_76510();
    uint64_t v31 = v46;
    v43[0] = ObjectType;
    sub_6A86C();
    sub_76CF0();
    _Block_release(v30);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v50);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v17, v47);
    swift_release();
    swift_release();
    uint64_t v32 = v52;
    sub_76530();
    void *v9 = 5;
    uint64_t v33 = v57;
    long long v34 = *(void (**)(void *, void, uint64_t))(v57 + 104);
    uint64_t v35 = v44;
    v34(v9, enum case for DispatchTimeInterval.seconds(_:), v44);
    objc_super v36 = v53;
    sub_76560();
    uint64_t v37 = *(void (**)(void *, uint64_t))(v33 + 8);
    uint64_t v57 = v33 + 8;
    v37(v9, v35);
    uint64_t v38 = v55;
    id v39 = *(void (**)(char *, uint64_t))(v54 + 8);
    v39(v32, v55);
    v34(v9, enum case for DispatchTimeInterval.never(_:), v35);
    uint64_t v40 = v56;
    *uint64_t v56 = 0;
    v34(v40, enum case for DispatchTimeInterval.nanoseconds(_:), v35);
    sub_76D70();
    v37(v40, v35);
    v37(v9, v35);
    v39(v36, v38);
    sub_76D10();
    swift_beginAccess();
    id v41 = v48;
    uint64_t v42 = swift_unknownObjectRetain();
    sub_6DF78(v42, v41);
    swift_endAccess();
    swift_unknownObjectRelease();
  }
}

void sub_6A788(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    swift_beginAccess();
    id v5 = a2;
    sub_6DE28((unint64_t)v5);
    swift_endAccess();

    swift_unknownObjectRelease();
  }
  uint64_t v6 = self;
  id v7 = [v6 systemRoute];
  [v6 setActiveRoute:v7 completion:0];
}

uint64_t sub_6A86C()
{
  return sub_76FE0();
}

uint64_t sub_6A948(uint64_t result)
{
  int v2 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_isUpdating);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_isUpdating) = result;
  if (v2 == 1 && (result & 1) == 0)
  {
    *(unsigned char *)(v1 + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator__needsUpdate) = 0;
    uint64_t v3 = OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_updateBlocks;
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_updateBlocks);
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = v4 + 40;
      do
      {
        id v7 = *(void (**)(uint64_t))(v6 - 8);
        uint64_t v8 = swift_retain();
        v7(v8);
        swift_release();
        v6 += 16;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
    }
    *(void *)(v1 + v3) = &_swiftEmptyArrayStorage;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_6AA34(void *a1)
{
  return sub_69158(a1, *(void **)(v1 + 16), *(unsigned char *)(v1 + 24));
}

void sub_6AA40(void *a1)
{
  sub_69508(a1, *(void (**)(id))(v1 + 16));
}

void sub_6AA48()
{
}

void sub_6AA50(uint64_t a1)
{
  sub_68B5C(a1, v1, 2);
}

void sub_6AA70(uint64_t a1)
{
  sub_68B5C(a1, v1, 0);
}

void sub_6AA90(void *a1)
{
  id v3 = *(id *)(v1 + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_routingController);
  *(void *)(v1 + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_routingController) = a1;
  id v4 = a1;
  id v7 = v4;
  if (a1)
  {
    if (v4 == v3 && v3 != 0 || v3 == 0) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  if (v3) {
LABEL_9:
  }
    [v3 setDiscoveryMode:0];
LABEL_10:
}

void sub_6AB20()
{
  id v1 = [v0 playbackPlayerPath];
  id v12 = [v1 route];

  if (!v12)
  {
LABEL_4:
    sub_6AA90(0);
    return;
  }
  if ([v12 isDeviceRoute])
  {

    goto LABEL_4;
  }
  if (*(void *)&v0[OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_routingController])
  {
    int v2 = v12;
  }
  else
  {
    id v10 = [objc_allocWithZone((Class)MPAVEndpointRoutingDataSource) init];
    id v3 = objc_allocWithZone((Class)MPAVRoutingController);
    NSString v4 = sub_768D0();
    id v5 = [v3 initWithDataSource:v10 name:v4];

    id v6 = v5;
    sub_6AA90(v5);
    id v7 = [self sharedApplication];
    id v8 = [v7 applicationState];

    if (v8) {
      uint64_t v9 = 0;
    }
    else {
      uint64_t v9 = 2;
    }
    [v6 setDiscoveryMode:v9, v10];

    int v2 = v11;
  }
}

uint64_t sub_6ACD8()
{
  return _swift_deallocObject(v0, 25, 7);
}

uint64_t sub_6AD10()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void sub_6AD48()
{
  sub_691E0(*(void **)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_6AD54()
{
  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_6AD94()
{
  return sub_698C8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_6AD9C()
{
  sub_6A054(*(char **)(v0 + 16), *(void **)(v0 + 24));
}

id PlayerPathCoordinator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void PlayerPathCoordinator.init()()
{
}

id PlayerPathCoordinator.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlayerPathCoordinator();
  [super dealloc];
}

const char *keypath_get_selector_metadataPlayerPath()
{
  return "metadataPlayerPath";
}

id sub_6AE78@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 metadataPlayerPath];
  *a2 = result;
  return result;
}

id sub_6AEB4(void *a1, id *a2)
{
  return [*a2 setMetadataPlayerPath:*a1];
}

const char *keypath_get_selector_playbackPlayerPath()
{
  return "playbackPlayerPath";
}

id sub_6AED4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 playbackPlayerPath];
  *a2 = result;
  return result;
}

id sub_6AF10(void *a1, id *a2)
{
  return [*a2 setPlaybackPlayerPath:*a1];
}

uint64_t method lookup function for PlayerPathCoordinator(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for PlayerPathCoordinator);
}

uint64_t dispatch thunk of PlayerPathCoordinator.__allocating_init(playerID:bundleID:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of PlayerPathCoordinator.updatePlayerPaths(with:)()
{
  return (*(uint64_t (**)(void))((char *)&stru_B8.reloff + (swift_isaMask & *v0)))();
}

uint64_t dispatch thunk of PlayerPathCoordinator.didReceiveResponse(for:)()
{
  return (*(uint64_t (**)(void))&stru_108.segname[(swift_isaMask & *v0) - 8])();
}

uint64_t dispatch thunk of PlayerPathCoordinator.didReceiveErrorLoadingResponse(for:error:)()
{
  return (*(uint64_t (**)(void))&stru_108.segname[swift_isaMask & *v0])();
}

uint64_t sub_6B0F0(unint64_t a1)
{
  return sub_6B108(a1, (uint64_t (*)(uint64_t, void, unint64_t))sub_6F13C);
}

uint64_t sub_6B108(unint64_t a1, uint64_t (*a2)(uint64_t, void, unint64_t))
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_77180();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((char *)&dword_10 + (a1 & 0xFFFFFFFFFFFFFF8));
  }
  if (!((unint64_t)*v2 >> 62))
  {
    uint64_t v6 = *(void *)((char *)&dword_10 + (*v2 & 0xFFFFFFFFFFFFFF8));
    uint64_t v7 = v6 + v5;
    if (!__OFADD__(v6, v5)) {
      goto LABEL_5;
    }
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_77180();
  swift_bridgeObjectRelease();
  uint64_t v7 = v17 + v5;
  if (__OFADD__(v17, v5)) {
    goto LABEL_21;
  }
LABEL_5:
  unint64_t v8 = *v2;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *objc_super v2 = v8;
  if (isUniquelyReferenced_nonNull_bridgeObject)
  {
    if ((v8 & 0x8000000000000000) == 0 && (v8 & 0x4000000000000000) == 0)
    {
      uint64_t v10 = v8 & 0xFFFFFFFFFFFFFF8;
      if (v7 <= *(void *)((char *)&dword_18 + (v8 & 0xFFFFFFFFFFFFFF8)) >> 1) {
        goto LABEL_11;
      }
    }
  }
  if (v8 >> 62) {
    goto LABEL_23;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_77090();
    swift_bridgeObjectRelease();
    *objc_super v2 = v11;
    uint64_t v10 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_11:
    uint64_t result = a2(v10 + 8 * *(void *)(v10 + 16) + 32, (*(void *)(v10 + 24) >> 1) - *(void *)(v10 + 16), a1);
    if (v13 >= v5) {
      break;
    }
LABEL_22:
    __break(1u);
LABEL_23:
    swift_bridgeObjectRetain();
    sub_77180();
    swift_bridgeObjectRelease();
  }
  if (v13 >= 1)
  {
    uint64_t v14 = *(void *)((char *)&dword_10 + (*v2 & 0xFFFFFFFFFFFFFF8));
    BOOL v15 = __OFADD__(v14, v13);
    uint64_t v16 = v14 + v13;
    if (v15)
    {
      __break(1u);
      return result;
    }
    *(void *)((char *)&dword_10 + (*v2 & 0xFFFFFFFFFFFFFF8)) = v16;
  }
  swift_bridgeObjectRelease();

  return sub_769F0();
}

unint64_t sub_6B2DC(uint64_t a1)
{
  sub_76910();
  sub_772D0();
  sub_76940();
  Swift::Int v2 = sub_77320();
  swift_bridgeObjectRelease();

  return sub_6B574(a1, v2);
}

unint64_t sub_6B370(uint64_t a1)
{
  sub_76910();
  sub_772D0();
  sub_76940();
  Swift::Int v2 = sub_77320();
  swift_bridgeObjectRelease();
  return sub_6B574(a1, v2);
}

unint64_t sub_6B400(uint64_t a1)
{
  sub_4A064(a1, (uint64_t)v5);
  sub_772D0();
  TranscriptContentViewModel.ID.hash(into:)((uint64_t)&v4);
  Swift::Int v2 = sub_77320();
  return sub_6B6EC(a1, v2);
}

unint64_t sub_6B474(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_77000(*(void *)(v2 + 40));

  return sub_6DB60(a1, v4);
}

unint64_t sub_6B4B8(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = sub_76E40(*(void *)(v2 + 40));

  return sub_6DC28(a1, v4);
}

unint64_t sub_6B4FC(uint64_t a1, uint64_t a2)
{
  sub_772D0();
  sub_76940();
  Swift::Int v4 = sub_77320();

  return sub_6DD44(a1, a2, v4);
}

unint64_t sub_6B574(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_76910();
    uint64_t v8 = v7;
    if (v6 == sub_76910() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_77230();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_76910();
          uint64_t v15 = v14;
          if (v13 == sub_76910() && v15 == v16) {
            break;
          }
          char v18 = sub_77230();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

unint64_t sub_6B6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1;
  sub_4A064(a1, (uint64_t)&v164);
  uint64_t v158 = v2 + 64;
  uint64_t v159 = v2;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v6 = a2 & ~v5;
  if (((*(void *)(v2 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return v6;
  }
  uint64_t v8 = v164;
  uint64_t v7 = v165;
  uint64_t v9 = v166;
  uint64_t v157 = v167;
  uint64_t v155 = ~v5;
  char v156 = v168;
  uint64_t v152 = v166;
  uint64_t v153 = v164;
  uint64_t v141 = v165;
  while (2)
  {
    uint64_t v15 = *(void *)(v159 + 48) + 40 * v6;
    uint64_t v16 = *(void *)v15;
    uint64_t v17 = *(void *)(v15 + 8);
    uint64_t v19 = *(uint64_t *)(v15 + 16);
    uint64_t v18 = *(void *)(v15 + 24);
    char v20 = *(unsigned char *)(v15 + 32);
    switch(v20)
    {
      case 1:
        sub_4A064(v4, (uint64_t)v171);
        if (v172 != 1) {
          goto LABEL_4;
        }
        uint64_t v154 = v17;
        uint64_t v21 = v19;
        if (!v16)
        {
          if (!v171[0])
          {
            sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
            uint64_t v104 = v154;
            sub_8944(0, v154, v19, v18, 1);
            sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
            uint64_t v16 = 0;
            uint64_t v8 = v153;
            goto LABEL_134;
          }
          goto LABEL_52;
        }
        if (!v171[0])
        {
LABEL_52:
          sub_8944(v16, v154, v19, v18, 1);
          sub_8944(v16, v154, v19, v18, 1);
          sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
          sub_8944(v16, v154, v19, v18, 1);
          sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
          sub_8944(v16, v154, v19, v18, 1);
          sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
          swift_release();
          swift_release();
          sub_88A0(v16, v154, v19, v18, 1);
          uint64_t v9 = v152;
          uint64_t v8 = v153;
          sub_88A0(v153, v7, v152, v157, v156);
          sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_88A0);
          sub_88A0(v16, v154, v19, v18, 1);
          uint64_t v10 = v16;
          uint64_t v11 = v154;
          uint64_t v12 = v19;
          uint64_t v13 = v18;
          char v14 = 1;
LABEL_5:
          sub_88A0(v10, v11, v12, v13, v14);
LABEL_6:
          unint64_t v6 = (v6 + 1) & v155;
          if (((*(void *)(v158 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
            return v6;
          }
          continue;
        }
        uint64_t v23 = *(void *)(v16 + 16);
        uint64_t v22 = *(void *)(v16 + 24);
        uint64_t v148 = *(uint64_t *)(v16 + 32);
        uint64_t v149 = *(void *)(v16 + 40);
        char v24 = *(unsigned char *)(v16 + 48);
        uint64_t v26 = *(void *)(v171[0] + 16);
        uint64_t v25 = *(void *)(v171[0] + 24);
        uint64_t v27 = *(void *)(v171[0] + 32);
        uint64_t v150 = *(void *)(v171[0] + 40);
        int v28 = *(unsigned __int8 *)(v171[0] + 48);
        uint64_t v142 = v23;
        uint64_t v143 = v18;
        uint64_t v144 = v19;
        uint64_t v145 = v22;
        uint64_t v146 = v27;
        uint64_t v147 = v25;
        switch(v24)
        {
          case 1:
            uint64_t v29 = v18;
            if (v28 != 1) {
              goto LABEL_75;
            }
            if (!v23)
            {
              uint64_t v151 = v4;
              if (!v26)
              {
                uint64_t v115 = *(void *)(v171[0] + 24);
                uint64_t v116 = v29;
                sub_8944(v16, v154, v19, v29, 1);
                sub_8944(v16, v154, v19, v116, 1);
                sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                sub_8944(v16, v154, v19, v116, 1);
                sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                uint64_t v117 = v27;
                uint64_t v118 = v150;
                sub_8944(0, v115, v27, v150, 1);
                uint64_t v119 = v116;
                uint64_t v120 = v115;
                sub_8944(v16, v154, v19, v119, 1);
                sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                sub_8944(0, v115, v27, v150, 1);
                uint64_t v121 = 0;
                uint64_t v122 = 0;
                goto LABEL_137;
              }
              uint64_t v84 = *(void *)(v171[0] + 16);
              uint64_t v85 = *(void *)(v171[0] + 24);
              goto LABEL_95;
            }
            if (!v26)
            {
              uint64_t v84 = 0;
              uint64_t v85 = *(void *)(v171[0] + 24);
              uint64_t v151 = v4;
LABEL_95:
              uint64_t v7 = v141;
              uint64_t v86 = *(void *)(v16 + 16);
              uint64_t v87 = v29;
              sub_8944(v16, v154, v21, v29, 1);
              sub_8944(v16, v154, v21, v87, 1);
              sub_6F80C(v151, (void (*)(void, void, void, void, void))sub_8944);
              uint64_t v88 = v85;
              sub_8944(v84, v85, v27, v150, 1);
              uint64_t v89 = v86;
              uint64_t v90 = v86;
              uint64_t v4 = v151;
              sub_8944(v90, v145, v148, v149, 1);
              sub_8944(v16, v154, v21, v143, 1);
              sub_6F80C(v151, (void (*)(void, void, void, void, void))sub_8944);
              sub_8944(v84, v88, v27, v150, 1);
              sub_8944(v89, v145, v148, v149, 1);
              uint64_t v91 = v89;
              sub_8944(v16, v154, v21, v143, 1);
              sub_6F80C(v151, (void (*)(void, void, void, void, void))sub_8944);
              sub_8944(v84, v88, v27, v150, 1);
              uint64_t v92 = v89;
              uint64_t v93 = v149;
              sub_8944(v92, v145, v148, v149, 1);
              swift_release();
              swift_release();
              uint64_t v9 = v152;
              uint64_t v8 = v153;
LABEL_115:
              sub_88A0(v91, v145, v148, v93, 1);
              sub_88A0(v84, v147, v146, v150, 1);
              sub_88A0(v84, v147, v146, v150, 1);
              sub_88A0(v142, v145, v148, v149, 1);
LABEL_116:
              swift_release();
              swift_release();
              uint64_t v104 = v154;
              uint64_t v18 = v143;
              uint64_t v19 = v144;
              sub_88A0(v16, v154, v144, v143, 1);
              sub_88A0(v8, v7, v9, v157, v156);
              sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_88A0);
LABEL_117:
              sub_88A0(v16, v104, v19, v18, 1);
              uint64_t v10 = v16;
              uint64_t v11 = v104;
              uint64_t v12 = v19;
              uint64_t v13 = v18;
              char v14 = 1;
              goto LABEL_5;
            }
            uint64_t v55 = *(void *)(v23 + 16);
            uint64_t v56 = *(void *)(v23 + 24);
            uint64_t v130 = v56;
            uint64_t v131 = *(void *)(v23 + 40);
            uint64_t v57 = *(void *)(v26 + 16);
            uint64_t v58 = *(void *)(v26 + 24);
            uint64_t v133 = v58;
            uint64_t v134 = *(void *)(v26 + 40);
            int v59 = *(unsigned __int8 *)(v26 + 48);
            uint64_t v7 = v141;
            uint64_t v9 = v152;
            uint64_t v128 = v55;
            uint64_t v129 = *(uint64_t *)(v23 + 32);
            uint64_t v135 = *(void *)(v171[0] + 16);
            uint64_t v137 = *(uint64_t *)(v26 + 32);
            uint64_t v132 = v57;
            switch(*(unsigned char *)(v23 + 48))
            {
              case 1:
                if (v59 != 1) {
                  goto LABEL_113;
                }
                uint64_t v151 = v4;
                uint64_t v94 = *(void *)(v171[0] + 16);
                if (v55)
                {
                  if (v57)
                  {
                    char v95 = *(unsigned char *)(v55 + 48);
                    char v96 = *(unsigned char *)(v57 + 48);
                    long long v97 = *(_OWORD *)(v55 + 32);
                    v162[0] = *(_OWORD *)(v55 + 16);
                    v162[1] = v97;
                    char v163 = v95;
                    long long v98 = *(_OWORD *)(v57 + 32);
                    v160[0] = *(_OWORD *)(v57 + 16);
                    v160[1] = v98;
                    char v161 = v96;
                    uint64_t v99 = v57;
                    sub_8944(v16, v154, v21, v143, 1);
                    sub_8944(v16, v154, v21, v143, 1);
                    sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                    sub_8944(v94, v147, v146, v150, 1);
                    sub_8944(v142, v145, v148, v149, 1);
                    sub_8944(v99, v133, v137, v134, 1);
                    sub_8944(v128, v130, v129, v131, 1);
                    sub_8944(v16, v154, v21, v143, 1);
                    sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                    sub_8944(v135, v147, v146, v150, 1);
                    sub_8944(v142, v145, v148, v149, 1);
                    sub_8944(v132, v133, v137, v134, 1);
                    sub_8944(v128, v130, v129, v131, 1);
                    sub_8944(v16, v154, v21, v143, 1);
                    sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                    sub_8944(v135, v147, v146, v150, 1);
                    sub_8944(v142, v145, v148, v149, 1);
                    sub_8944(v132, v133, v137, v134, 1);
                    sub_8944(v128, v130, v129, v131, 1);
                    char v126 = _s19PodcastsTranscripts26TranscriptContentViewModelC2IDO2eeoiySbAE_AEtFZ_0((uint64_t)v162, (uint64_t)v160);
                    swift_release();
                    swift_release();
                    sub_88A0(v128, v130, v129, v131, 1);
                    sub_88A0(v132, v133, v137, v134, 1);
                    sub_88A0(v132, v133, v137, v134, 1);
                    sub_88A0(v128, v130, v129, v131, 1);
                    swift_release();
                    swift_release();
                    sub_88A0(v142, v145, v148, v149, 1);
                    sub_88A0(v135, v147, v146, v150, 1);
                    sub_88A0(v135, v147, v146, v150, 1);
                    sub_88A0(v142, v145, v148, v149, 1);
                    uint64_t v8 = v153;
                    if ((v126 & 1) == 0) {
                      goto LABEL_116;
                    }
                    goto LABEL_138;
                  }
LABEL_131:
                  uint64_t v112 = *(void *)(v23 + 16);
                  sub_8944(v16, v154, v21, v143, 1);
                  sub_8944(v16, v154, v21, v143, 1);
                  sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                  sub_8944(v94, v147, v146, v150, 1);
                  sub_8944(v142, v145, v148, v149, 1);
                  sub_8944(v132, v133, v137, v134, 1);
                  sub_8944(v112, v130, v129, v131, 1);
                  sub_8944(v16, v154, v21, v143, 1);
                  sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                  sub_8944(v94, v147, v146, v150, 1);
                  sub_8944(v142, v145, v148, v149, 1);
                  sub_8944(v132, v133, v137, v134, 1);
                  sub_8944(v112, v130, v129, v131, 1);
                  sub_8944(v16, v154, v21, v143, 1);
                  sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                  uint64_t v113 = v94;
                  sub_8944(v94, v147, v146, v150, 1);
                  uint64_t v93 = v149;
                  sub_8944(v142, v145, v148, v149, 1);
                  sub_8944(v132, v133, v137, v134, 1);
                  sub_8944(v128, v130, v129, v131, 1);
                  swift_release();
                  swift_release();
                  sub_88A0(v128, v130, v129, v131, 1);
                  sub_88A0(v132, v133, v137, v134, 1);
                  sub_88A0(v132, v133, v137, v134, 1);
                  uint64_t v91 = v142;
                  sub_88A0(v128, v130, v129, v131, 1);
                  uint64_t v84 = v113;
                  goto LABEL_114;
                }
                if (v57) {
                  goto LABEL_131;
                }
                sub_8944(v16, v154, v21, v18, 1);
                sub_8944(v16, v154, v21, v18, 1);
                sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                uint64_t v117 = v146;
                uint64_t v120 = v147;
                uint64_t v118 = v150;
                sub_8944(v94, v147, v146, v150, 1);
                sub_8944(v142, v145, v148, v149, 1);
                sub_8944(v16, v154, v144, v18, 1);
                sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                sub_8944(v94, v147, v146, v150, 1);
                sub_8944(v142, v145, v148, v149, 1);
                sub_8944(0, v133, v137, v134, 1);
                sub_8944(v16, v154, v144, v18, 1);
                sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                sub_8944(v135, v147, v146, v150, 1);
                sub_8944(v142, v145, v148, v149, 1);
                sub_8944(0, v133, v137, v134, 1);
                sub_88A0(0, v130, v129, v131, 1);
                sub_88A0(0, v133, v137, v134, 1);
                uint64_t v122 = v135;
                sub_88A0(0, v133, v137, v134, 1);
                sub_88A0(0, v130, v129, v131, 1);
                swift_release();
                uint64_t v121 = v142;
                swift_release();
LABEL_137:
                sub_88A0(v121, v145, v148, v149, 1);
                sub_88A0(v122, v120, v117, v118, 1);
                sub_88A0(v122, v120, v117, v118, 1);
                sub_88A0(v121, v145, v148, v149, 1);
                uint64_t v7 = v141;
                uint64_t v9 = v152;
                uint64_t v8 = v153;
                uint64_t v4 = v151;
LABEL_138:
                swift_release();
                swift_release();
                uint64_t v18 = v143;
                uint64_t v19 = v144;
                uint64_t v104 = v154;
                break;
              case 2:
                if (v59 != 2) {
                  goto LABEL_113;
                }
                if (v55 == v57 && v56 == v58) {
                  char v124 = 1;
                }
                else {
                  char v124 = sub_77230();
                }
                uint64_t v8 = v153;
                sub_8944(v16, v154, v19, v18, 1);
                sub_8944(v16, v154, v19, v18, 1);
                sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                sub_8944(v135, v147, v146, v150, 1);
                sub_8944(v142, v145, v148, v149, 1);
                sub_8944(v16, v154, v19, v18, 1);
                sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                sub_8944(v135, v147, v146, v150, 1);
                sub_8944(v142, v145, v148, v149, 1);
                sub_8944(v16, v154, v19, v18, 1);
                sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                sub_8944(v135, v147, v146, v150, 1);
                sub_8944(v142, v145, v148, v149, 1);
                sub_8944(v132, v133, v137, v134, 2);
                sub_8944(v128, v130, v129, v131, 2);
                sub_88A0(v128, v130, v129, v131, 2);
                uint64_t v105 = v132;
                uint64_t v106 = v133;
                uint64_t v107 = v137;
                uint64_t v108 = v134;
                char v109 = 2;
                goto LABEL_125;
              case 3:
                if (v59 != 3) {
                  goto LABEL_113;
                }
                if (v55 == v57 && v56 == v58) {
                  char v125 = 1;
                }
                else {
                  char v125 = sub_77230();
                }
                uint64_t v8 = v153;
                sub_8944(v16, v154, v19, v18, 1);
                sub_8944(v16, v154, v19, v18, 1);
                sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                sub_8944(v135, v147, v146, v150, 1);
                sub_8944(v142, v145, v148, v149, 1);
                sub_8944(v16, v154, v19, v18, 1);
                sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                sub_8944(v135, v147, v146, v150, 1);
                sub_8944(v142, v145, v148, v149, 1);
                sub_8944(v16, v154, v19, v18, 1);
                sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                sub_8944(v135, v147, v146, v150, 1);
                sub_8944(v142, v145, v148, v149, 1);
                sub_8944(v132, v133, v137, v134, 3);
                sub_8944(v128, v130, v129, v131, 3);
                sub_88A0(v128, v130, v129, v131, 3);
                sub_88A0(v132, v133, v137, v134, 3);
                swift_release();
                swift_release();
                sub_88A0(v142, v145, v148, v149, 1);
                sub_88A0(v135, v147, v146, v150, 1);
                uint64_t v104 = v154;
                sub_88A0(v135, v147, v146, v150, 1);
                sub_88A0(v142, v145, v148, v149, 1);
                swift_release();
                swift_release();
                sub_88A0(v16, v154, v19, v18, 1);
                sub_88A0(v153, v141, v152, v157, v156);
                sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_88A0);
                if ((v125 & 1) == 0) {
                  goto LABEL_117;
                }
                double v110 = *(double *)&v129;
                double v111 = *(double *)&v137;
                goto LABEL_128;
              default:
                if (*(unsigned char *)(v26 + 48))
                {
LABEL_113:
                  uint64_t v102 = *(void *)(v16 + 16);
                  uint64_t v103 = *(void *)(v171[0] + 24);
                  char v123 = *(unsigned char *)(v23 + 48);
                  char v127 = *(unsigned char *)(v26 + 48);
                  sub_8944(v16, v154, v19, v18, 1);
                  sub_8944(v16, v154, v19, v18, 1);
                  sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                  sub_8944(v135, v103, v146, v150, 1);
                  sub_8944(v102, v145, v148, v149, 1);
                  sub_8944(v16, v154, v19, v18, 1);
                  sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                  sub_8944(v135, v147, v146, v150, 1);
                  sub_8944(v142, v145, v148, v149, 1);
                  sub_8944(v16, v154, v19, v18, 1);
                  sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                  sub_8944(v135, v147, v146, v150, 1);
                  sub_8944(v142, v145, v148, v149, 1);
                  sub_8944(v132, v133, v137, v134, v127);
                  sub_8944(v128, v130, v129, v131, v123);
                  sub_88A0(v128, v130, v129, v131, v123);
                  uint64_t v93 = v149;
                  uint64_t v91 = v142;
                  sub_88A0(v132, v133, v137, v134, v127);
                  uint64_t v84 = v135;
LABEL_114:
                  swift_release();
                  swift_release();
                  uint64_t v8 = v153;
                  goto LABEL_115;
                }
                if (v55 == v57 && v56 == v58) {
                  char v124 = 1;
                }
                else {
                  char v124 = sub_77230();
                }
                uint64_t v8 = v153;
                sub_8944(v16, v154, v19, v18, 1);
                sub_8944(v16, v154, v19, v18, 1);
                sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                sub_8944(v135, v147, v146, v150, 1);
                sub_8944(v142, v145, v148, v149, 1);
                sub_8944(v16, v154, v19, v18, 1);
                sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                sub_8944(v135, v147, v146, v150, 1);
                sub_8944(v142, v145, v148, v149, 1);
                sub_8944(v16, v154, v19, v18, 1);
                sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
                sub_8944(v135, v147, v146, v150, 1);
                sub_8944(v142, v145, v148, v149, 1);
                sub_8944(v132, v133, v137, v134, 0);
                sub_8944(v128, v130, v129, v131, 0);
                sub_88A0(v128, v130, v129, v131, 0);
                uint64_t v105 = v132;
                uint64_t v106 = v133;
                uint64_t v107 = v137;
                uint64_t v108 = v134;
                char v109 = 0;
LABEL_125:
                sub_88A0(v105, v106, v107, v108, v109);
                swift_release();
                swift_release();
                sub_88A0(v142, v145, v148, v149, 1);
                sub_88A0(v135, v147, v146, v150, 1);
                uint64_t v104 = v154;
                sub_88A0(v135, v147, v146, v150, 1);
                sub_88A0(v142, v145, v148, v149, 1);
                swift_release();
                swift_release();
                sub_88A0(v16, v154, v19, v18, 1);
                sub_88A0(v8, v141, v152, v157, v156);
                sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_88A0);
                if ((v124 & 1) != 0 && *(double *)&v129 == *(double *)&v137)
                {
                  double v110 = *(double *)&v131;
                  double v111 = *(double *)&v134;
LABEL_128:
                  if (v110 == v111) {
                    goto LABEL_135;
                  }
                }
                goto LABEL_117;
            }
LABEL_134:
            sub_88A0(v16, v104, v19, v18, 1);
            sub_88A0(v8, v7, v9, v157, v156);
            sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_88A0);
LABEL_135:
            sub_88A0(v16, v104, v19, v18, 1);
            sub_88A0(v16, v104, v19, v18, 1);
            return v6;
          case 2:
            uint64_t v29 = v18;
            if (v28 != 2) {
              goto LABEL_75;
            }
            if (v23 == v26 && v22 == v25)
            {
              char v138 = 1;
              uint64_t v8 = v153;
              uint64_t v64 = v154;
              uint64_t v62 = *(void *)(v171[0] + 16);
            }
            else
            {
              uint64_t v62 = *(void *)(v171[0] + 16);
              char v63 = sub_77230();
              uint64_t v29 = v18;
              char v138 = v63;
              uint64_t v8 = v153;
              uint64_t v64 = v154;
            }
            uint64_t v75 = v29;
            sub_8944(v16, v64, v21, v29, 1);
            sub_8944(v16, v64, v21, v75, 1);
            sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
            sub_8944(v16, v64, v21, v75, 1);
            sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
            sub_8944(v16, v64, v21, v75, 1);
            sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
            sub_8944(v62, v147, v146, v150, 2);
            sub_8944(v142, v145, v148, v149, 2);
            sub_88A0(v142, v145, v148, v149, 2);
            sub_88A0(v62, v147, v146, v150, 2);
            swift_release();
            swift_release();
            sub_88A0(v16, v154, v21, v143, 1);
            uint64_t v7 = v141;
            uint64_t v9 = v152;
            sub_88A0(v8, v141, v152, v157, v156);
            sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_88A0);
            sub_88A0(v16, v154, v21, v143, 1);
            sub_88A0(v16, v154, v21, v143, 1);
            if ((v138 & 1) == 0) {
              goto LABEL_6;
            }
            double v76 = *(double *)&v148;
            double v77 = *(double *)&v149;
            double v78 = *(double *)&v146;
            double v79 = *(double *)&v150;
            goto LABEL_86;
          case 3:
            uint64_t v29 = v18;
            if (v28 != 3) {
              goto LABEL_75;
            }
            BOOL v65 = v23 == v26 && v22 == v25;
            uint64_t v66 = v19;
            if (v65)
            {
              char v139 = 1;
              uint64_t v8 = v153;
              uint64_t v69 = v154;
              uint64_t v67 = *(void *)(v171[0] + 16);
            }
            else
            {
              uint64_t v67 = *(void *)(v171[0] + 16);
              char v68 = sub_77230();
              uint64_t v29 = v18;
              char v139 = v68;
              uint64_t v8 = v153;
              uint64_t v69 = v154;
            }
            uint64_t v80 = v21;
            uint64_t v81 = v29;
            sub_8944(v16, v69, v80, v29, 1);
            sub_8944(v16, v69, v66, v81, 1);
            sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
            sub_8944(v16, v69, v66, v81, 1);
            sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
            sub_8944(v16, v69, v66, v81, 1);
            sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
            sub_8944(v67, v147, v27, v150, 3);
            sub_8944(v142, v145, v148, v149, 3);
            sub_88A0(v142, v145, v148, v149, 3);
            sub_88A0(v67, v147, v27, v150, 3);
            swift_release();
            swift_release();
            sub_88A0(v16, v154, v144, v143, 1);
            uint64_t v7 = v141;
            uint64_t v9 = v152;
            sub_88A0(v8, v141, v152, v157, v156);
            sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_88A0);
            sub_88A0(v16, v154, v144, v143, 1);
            sub_88A0(v16, v154, v144, v143, 1);
            if ((v139 & 1) != 0 && *(double *)&v148 == *(double *)&v146) {
              return v6;
            }
            goto LABEL_6;
          default:
            uint64_t v29 = v18;
            if (*(unsigned char *)(v171[0] + 48))
            {
LABEL_75:
              uint64_t v70 = v19;
              uint64_t v71 = *(void *)(v171[0] + 16);
              uint64_t v72 = v19;
              uint64_t v73 = *(void *)(v171[0] + 24);
              uint64_t v74 = v29;
              char v140 = *(unsigned char *)(v171[0] + 48);
              sub_8944(v16, v154, v72, v29, 1);
              sub_8944(v16, v154, v70, v74, 1);
              sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
              sub_8944(v16, v154, v70, v74, 1);
              sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
              sub_8944(v16, v154, v70, v74, 1);
              sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
              sub_8944(v71, v73, v27, v150, v140);
              sub_8944(v142, v145, v148, v149, v24);
              sub_88A0(v142, v145, v148, v149, v24);
              sub_88A0(v71, v147, v27, v150, v140);
              swift_release();
              swift_release();
              sub_88A0(v16, v154, v144, v143, 1);
              uint64_t v9 = v152;
              uint64_t v8 = v153;
              uint64_t v7 = v141;
              sub_88A0(v153, v141, v152, v157, v156);
              sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_88A0);
              sub_88A0(v16, v154, v144, v143, 1);
              uint64_t v10 = v16;
              uint64_t v11 = v154;
              uint64_t v12 = v144;
              uint64_t v13 = v143;
              char v14 = 1;
              goto LABEL_5;
            }
            if (v23 == v26 && v22 == v25)
            {
              char v136 = 1;
              uint64_t v8 = v153;
              uint64_t v33 = v154;
              uint64_t v31 = *(void *)(v171[0] + 16);
            }
            else
            {
              uint64_t v31 = *(void *)(v171[0] + 16);
              char v32 = sub_77230();
              uint64_t v29 = v18;
              char v136 = v32;
              uint64_t v8 = v153;
              uint64_t v33 = v154;
            }
            uint64_t v82 = v29;
            sub_8944(v16, v33, v21, v29, 1);
            sub_8944(v16, v33, v21, v82, 1);
            sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
            sub_8944(v16, v33, v21, v82, 1);
            sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
            sub_8944(v16, v33, v21, v82, 1);
            sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
            sub_8944(v31, v147, v146, v150, 0);
            sub_8944(v142, v145, v148, v149, 0);
            sub_88A0(v142, v145, v148, v149, 0);
            sub_88A0(v31, v147, v146, v150, 0);
            swift_release();
            swift_release();
            sub_88A0(v16, v154, v21, v143, 1);
            uint64_t v7 = v141;
            uint64_t v9 = v152;
            sub_88A0(v8, v141, v152, v157, v156);
            sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_88A0);
            sub_88A0(v16, v154, v21, v143, 1);
            sub_88A0(v16, v154, v21, v143, 1);
            if (v136)
            {
              double v76 = *(double *)&v148;
              double v77 = *(double *)&v149;
              double v78 = *(double *)&v146;
              double v79 = *(double *)&v150;
LABEL_86:
              if (v76 == v78 && v77 == v79) {
                return v6;
              }
            }
            goto LABEL_6;
        }
      case 2:
        sub_4A064(v4, (uint64_t)v173);
        if (v174 != 2) {
          goto LABEL_4;
        }
        double v34 = *(double *)&v19;
        double v35 = *(double *)&v18;
        double v37 = *(double *)&v173[2];
        double v36 = *(double *)&v173[3];
        if (v16 != v173[0] || v17 != v173[1])
        {
          char v39 = sub_77230();
          sub_8944(v16, v17, v19, v18, 2);
          sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
          uint64_t v40 = v16;
          uint64_t v41 = v17;
          uint64_t v42 = v19;
          uint64_t v43 = v18;
          char v44 = 2;
          goto LABEL_37;
        }
        sub_8944(v16, v17, v19, v18, 2);
        sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
        uint64_t v49 = v16;
        uint64_t v50 = v17;
        uint64_t v51 = v19;
        uint64_t v52 = v18;
        char v53 = 2;
        goto LABEL_45;
      case 3:
        sub_4A064(v4, (uint64_t)v175);
        if (v176 != 3) {
          goto LABEL_4;
        }
        double v45 = *(double *)&v175[2];
        if (v16 == v175[0] && v17 == v175[1])
        {
          sub_8944(v16, v17, v19, v18, 3);
          sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
          sub_88A0(v16, v17, v19, v18, 3);
          sub_88A0(v8, v7, v9, v157, v156);
          if (v45 == *(double *)&v19) {
            return v6;
          }
        }
        else
        {
          char v47 = sub_77230();
          sub_8944(v16, v17, v19, v18, 3);
          sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
          sub_88A0(v16, v17, v19, v18, 3);
          sub_88A0(v8, v7, v9, v157, v156);
          if ((v47 & 1) != 0 && v45 == *(double *)&v19) {
            return v6;
          }
        }
        goto LABEL_6;
      default:
        sub_4A064(v4, (uint64_t)v169);
        if (v170)
        {
LABEL_4:
          sub_8944(v16, v17, v19, v18, v20);
          sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
          sub_88A0(v16, v17, v19, v18, v20);
          uint64_t v10 = v8;
          uint64_t v11 = v7;
          uint64_t v12 = v9;
          uint64_t v13 = v157;
          char v14 = v156;
          goto LABEL_5;
        }
        double v34 = *(double *)&v19;
        double v35 = *(double *)&v18;
        double v37 = *(double *)&v169[2];
        double v36 = *(double *)&v169[3];
        if (v16 == v169[0] && v17 == v169[1])
        {
          sub_8944(v16, v17, v19, v18, 0);
          sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
          uint64_t v49 = v16;
          uint64_t v50 = v17;
          uint64_t v51 = v19;
          uint64_t v52 = v18;
          char v53 = 0;
LABEL_45:
          sub_88A0(v49, v50, v51, v52, v53);
          sub_88A0(v8, v7, v9, v157, v156);
LABEL_46:
          if (v37 == v34 && v36 == v35) {
            return v6;
          }
          goto LABEL_6;
        }
        char v39 = sub_77230();
        sub_8944(v16, v17, v19, v18, 0);
        sub_6F80C(v4, (void (*)(void, void, void, void, void))sub_8944);
        uint64_t v40 = v16;
        uint64_t v41 = v17;
        uint64_t v42 = v19;
        uint64_t v43 = v18;
        char v44 = 0;
LABEL_37:
        sub_88A0(v40, v41, v42, v43, v44);
        sub_88A0(v8, v7, v9, v157, v156);
        if (v39) {
          goto LABEL_46;
        }
        goto LABEL_6;
    }
  }
}

unint64_t sub_6DB60(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    do
    {
      sub_6F84C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v8);
      char v6 = sub_77010();
      sub_66248((uint64_t)v8);
      if (v6) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v5;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_6DC28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_FAEC(0, &qword_9A8C8);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_76E50();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_76E50();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_6DD44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_77230() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_77230() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_6DE28(unint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((v4 & 0xC000000000000001) == 0)
  {
LABEL_8:
    swift_bridgeObjectRetain();
    a1 = sub_6B4B8(a1);
    char v13 = v12;
    swift_bridgeObjectRelease();
    if (v13)
    {
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      Swift::Int v9 = *v2;
      Swift::Int v17 = *v2;
      *uint64_t v2 = 0x8000000000000000;
      if (!isUniquelyReferenced_nonNull_native)
      {
        sub_6ED6C();
        Swift::Int v9 = v17;
      }
      goto LABEL_11;
    }
    return 0;
  }
  if (v4 < 0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = v4 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  id v6 = (id)a1;
  uint64_t v7 = sub_77130();

  if (!v7)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_unknownObjectRelease();
  uint64_t v8 = sub_77120();
  Swift::Int v9 = sub_6E02C(v5, v8);
  swift_retain();
  a1 = sub_6B4B8((uint64_t)v6);
  char v11 = v10;
  swift_release();
  if ((v11 & 1) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
LABEL_11:

  uint64_t v15 = *(void *)(*(void *)(v9 + 56) + 8 * a1);
  sub_6E890(a1, v9);
  *uint64_t v2 = v9;
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_6DF78(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t result = sub_77120();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    Swift::Int *v3 = sub_6E02C(v7, result + 1);
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  Swift::Int v10 = *v3;
  Swift::Int *v3 = 0x8000000000000000;
  sub_6EA44(a1, a2, isUniquelyReferenced_nonNull_native);
  Swift::Int *v3 = v10;

  return swift_bridgeObjectRelease();
}

Swift::Int sub_6E02C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_9A8D0);
    uint64_t v2 = sub_771B0();
    uint64_t v18 = v2;
    sub_77110();
    uint64_t v3 = sub_77140();
    if (v3)
    {
      uint64_t v4 = v3;
      sub_FAEC(0, &qword_9A8C8);
      do
      {
        swift_dynamicCast();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A8D8);
        swift_dynamicCast();
        uint64_t v2 = v18;
        unint64_t v12 = *(void *)(v18 + 16);
        if (*(void *)(v18 + 24) <= v12)
        {
          sub_6E5B8(v12 + 1, 1);
          uint64_t v2 = v18;
        }
        Swift::Int result = sub_76E40(*(void *)(v2 + 40));
        uint64_t v6 = v2 + 64;
        uint64_t v7 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v8 = result & ~v7;
        unint64_t v9 = v8 >> 6;
        if (((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6))) != 0)
        {
          unint64_t v10 = __clz(__rbit64((-1 << v8) & ~*(void *)(v2 + 64 + 8 * (v8 >> 6)))) | v8 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v13 = 0;
          unint64_t v14 = (unint64_t)(63 - v7) >> 6;
          do
          {
            if (++v9 == v14 && (v13 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v15 = v9 == v14;
            if (v9 == v14) {
              unint64_t v9 = 0;
            }
            v13 |= v15;
            uint64_t v16 = *(void *)(v6 + 8 * v9);
          }
          while (v16 == -1);
          unint64_t v10 = __clz(__rbit64(~v16)) + (v9 << 6);
        }
        *(void *)(v6 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
        uint64_t v11 = 8 * v10;
        *(void *)(*(void *)(v2 + 48) + v11) = v17;
        *(void *)(*(void *)(v2 + 56) + v11) = v4;
        ++*(void *)(v2 + 16);
        uint64_t v4 = sub_77140();
      }
      while (v4);
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return (Swift::Int)_swiftEmptyDictionarySingleton;
  }
  return v2;
}

uint64_t sub_6E270(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A918);
  char v41 = a2;
  uint64_t v6 = sub_771A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  char v39 = (void *)(v5 + 64);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  double v37 = v3;
  int64_t v38 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  uint64_t v40 = v5;
  while (1)
  {
    if (v10)
    {
      uint64_t v42 = (v10 - 1) & v10;
      unint64_t v19 = __clz(__rbit64(v10)) | (v13 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v13++, 1)) {
      goto LABEL_40;
    }
    if (v13 >= v38) {
      break;
    }
    uint64_t v21 = v39;
    unint64_t v22 = v39[v13];
    if (!v22)
    {
      int64_t v23 = v13 + 1;
      if (v13 + 1 >= v38)
      {
LABEL_31:
        swift_release();
        uint64_t v3 = v37;
        if ((v41 & 1) == 0) {
          goto LABEL_38;
        }
        goto LABEL_34;
      }
      unint64_t v22 = v39[v23];
      if (!v22)
      {
        while (1)
        {
          int64_t v13 = v23 + 1;
          if (__OFADD__(v23, 1)) {
            break;
          }
          if (v13 >= v38) {
            goto LABEL_31;
          }
          unint64_t v22 = v39[v13];
          ++v23;
          if (v22) {
            goto LABEL_20;
          }
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        return result;
      }
      ++v13;
    }
LABEL_20:
    uint64_t v42 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_21:
    uint64_t v24 = *(void *)(v5 + 56);
    uint64_t v25 = *(void *)(v5 + 48) + 40 * v19;
    uint64_t v27 = *(void *)v25;
    uint64_t v26 = *(void *)(v25 + 8);
    uint64_t v29 = *(void *)(v25 + 16);
    uint64_t v28 = *(void *)(v25 + 24);
    char v30 = *(unsigned char *)(v25 + 32);
    uint64_t v31 = *(void *)(v24 + 8 * v19);
    if ((v41 & 1) == 0)
    {
      sub_8944(*(void *)v25, *(void *)(v25 + 8), *(void *)(v25 + 16), *(void *)(v25 + 24), *(unsigned char *)(v25 + 32));
      swift_retain();
    }
    uint64_t v44 = v27;
    uint64_t v45 = v26;
    uint64_t v46 = v29;
    uint64_t v47 = v28;
    char v48 = v30;
    sub_772D0();
    TranscriptContentViewModel.ID.hash(into:)((uint64_t)v43);
    uint64_t result = sub_77320();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v32 = 0;
      unint64_t v33 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v34 = v16 == v33;
        if (v16 == v33) {
          unint64_t v16 = 0;
        }
        v32 |= v34;
        uint64_t v35 = *(void *)(v11 + 8 * v16);
      }
      while (v35 == -1);
      unint64_t v17 = __clz(__rbit64(~v35)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = *(void *)(v7 + 48) + 40 * v17;
    *(void *)uint64_t v18 = v27;
    *(void *)(v18 + 8) = v26;
    *(void *)(v18 + 16) = v29;
    *(void *)(v18 + 24) = v28;
    *(unsigned char *)(v18 + 32) = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v31;
    ++*(void *)(v7 + 16);
    uint64_t v5 = v40;
    unint64_t v10 = v42;
  }
  swift_release();
  uint64_t v3 = v37;
  uint64_t v21 = v39;
  if ((v41 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v36 = 1 << *(unsigned char *)(v5 + 32);
  if (v36 >= 64) {
    bzero(v21, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v21 = -1 << v36;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

uint64_t sub_6E5B8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A8D0);
  uint64_t v6 = sub_771A0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v2;
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v20 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v21 = v20 | (v14 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v11) {
      break;
    }
    int64_t v23 = (void *)(v5 + 64);
    unint64_t v24 = *(void *)(v36 + 8 * v22);
    ++v14;
    if (!v24)
    {
      int64_t v14 = v22 + 1;
      if (v22 + 1 >= v11) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v36 + 8 * v14);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v11)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((a2 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v36 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v14 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v14 >= v11) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v36 + 8 * v14);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v14 = v25;
      }
    }
LABEL_30:
    unint64_t v10 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v14 << 6);
LABEL_31:
    uint64_t v30 = 8 * v21;
    uint64_t v31 = *(void **)(*(void *)(v5 + 48) + v30);
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + v30);
    if ((a2 & 1) == 0)
    {
      id v33 = v31;
      swift_unknownObjectRetain();
    }
    uint64_t result = sub_76E40(*(void *)(v7 + 40));
    uint64_t v15 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v16 = result & ~v15;
    unint64_t v17 = v16 >> 6;
    if (((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v12 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v15) >> 6;
      do
      {
        if (++v17 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v17 == v27;
        if (v17 == v27) {
          unint64_t v17 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v17);
      }
      while (v29 == -1);
      unint64_t v18 = __clz(__rbit64(~v29)) + (v17 << 6);
    }
    *(void *)(v12 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    uint64_t v19 = 8 * v18;
    *(void *)(*(void *)(v7 + 48) + v19) = v31;
    *(void *)(*(void *)(v7 + 56) + v19) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  int64_t v23 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v23, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v3 = v7;
  return result;
}

void sub_6E890(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_76FF0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(a2 + 40);
        id v11 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        Swift::Int v12 = sub_76E40(v10);

        Swift::Int v13 = v12 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v3 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(a2 + 48);
            unint64_t v17 = (void *)(v16 + 8 * v3);
            unint64_t v18 = (void *)(v16 + 8 * v6);
            if (v3 != v6 || v17 >= v18 + 1) {
              *unint64_t v17 = *v18;
            }
            uint64_t v19 = *(void *)(a2 + 56);
            unint64_t v20 = (void *)(v19 + 8 * v3);
            unint64_t v21 = (void *)(v19 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v20 >= v21 + 1))
            {
              *unint64_t v20 = *v21;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v9 || v3 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v22 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v23 = *v22;
    uint64_t v24 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v22 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v24 = *v22;
    uint64_t v23 = (-1 << a1) - 1;
  }
  *int64_t v22 = v24 & v23;
  uint64_t v25 = *(void *)(a2 + 16);
  BOOL v26 = __OFSUB__(v25, 1);
  uint64_t v27 = v25 - 1;
  if (v26)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v27;
    ++*(_DWORD *)(a2 + 36);
  }
}

id sub_6EA44(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = *v3;
  unint64_t v9 = sub_6B4B8((uint64_t)a2);
  uint64_t v10 = *(void *)(v7 + 16);
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v13 = v8;
  uint64_t v14 = *(void *)(v7 + 24);
  if (v14 >= v12 && (a3 & 1) != 0) {
    goto LABEL_7;
  }
  if (v14 >= v12 && (a3 & 1) == 0)
  {
    sub_6ED6C();
LABEL_7:
    uint64_t v15 = (void *)*v4;
    if (v13)
    {
LABEL_8:
      uint64_t v16 = v15[7];
      id result = (id)swift_unknownObjectRelease();
      *(void *)(v16 + 8 * v9) = a1;
      return result;
    }
    goto LABEL_11;
  }
  sub_6E5B8(v12, a3 & 1);
  unint64_t v18 = sub_6B4B8((uint64_t)a2);
  if ((v13 & 1) != (v19 & 1))
  {
LABEL_17:
    sub_FAEC(0, &qword_9A8C8);
    id result = (id)sub_77260();
    __break(1u);
    return result;
  }
  unint64_t v9 = v18;
  uint64_t v15 = (void *)*v4;
  if (v13) {
    goto LABEL_8;
  }
LABEL_11:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  uint64_t v20 = 8 * v9;
  *(void *)(v15[6] + v20) = a2;
  *(void *)(v15[7] + v20) = a1;
  uint64_t v21 = v15[2];
  BOOL v22 = __OFADD__(v21, 1);
  uint64_t v23 = v21 + 1;
  if (v22)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v15[2] = v23;

  return a2;
}

void *sub_6EBB8()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A918);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_77190();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    if (__OFADD__(v9++, 1)) {
      goto LABEL_26;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    if (!v27) {
      break;
    }
LABEL_23:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + 40 * v15;
    uint64_t v18 = *(void *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = 8 * v15;
    uint64_t v21 = *(void *)(*(void *)(v2 + 56) + v20);
    uint64_t v22 = *(void *)(v17 + 16);
    uint64_t v23 = *(void *)(v17 + 24);
    uint64_t v24 = *(void *)(v4 + 48) + v16;
    char v25 = *(unsigned char *)(v17 + 32);
    *(void *)uint64_t v24 = *(void *)v17;
    *(void *)(v24 + 8) = v19;
    *(void *)(v24 + 16) = v22;
    *(void *)(v24 + 24) = v23;
    *(unsigned char *)(v24 + 32) = v25;
    *(void *)(*(void *)(v4 + 56) + v20) = v21;
    sub_8944(v18, v19, v22, v23, v25);
    id result = (void *)swift_retain();
  }
  int64_t v28 = v9 + 1;
  if (v9 + 1 >= v13) {
    goto LABEL_24;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    ++v9;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_24;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_23;
    }
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

void *sub_6ED6C()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A8D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_77190();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void **)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(void *)(*(void *)(v4 + 56) + v16) = v18;
    id v19 = v17;
    id result = (void *)swift_unknownObjectRetain();
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t (*sub_6EF18(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_6F034(v6, a2, a3);
  return sub_6EF80;
}

uint64_t (*sub_6EF84(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_6F0B4(v6, a2, a3);
  return sub_6EF80;
}

void sub_6EFEC(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t (*sub_6F034(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_77080();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)) > a2)
  {
    uint64_t v4 = swift_retain();
LABEL_5:
    uint64_t *v3 = v4;
    return destroy for SilentContent.ID;
  }
  __break(1u);
  return result;
}

void (*sub_6F0B4(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)sub_77080();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8)) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return sub_6F134;
  }
  __break(1u);
  return result;
}

void sub_6F134(id *a1)
{
}

uint64_t sub_6F13C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_77180();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_77180();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_D034(&qword_98D20, (uint64_t *)&unk_9A540);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A540);
          unint64_t v12 = sub_6EF18(v16, i, a3);
          uint64_t v14 = *v13;
          swift_retain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for TranscriptContentViewModel();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_771D0();
  __break(1u);
  return result;
}

uint64_t sub_6F360(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_77180();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_77180();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_D034(&qword_9A8F8, &qword_9A8F0);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_9A8F0);
          unint64_t v12 = sub_6EF84(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((char *)&dword_10 + (a3 & 0xFFFFFFFFFFFFFF8));
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_FAEC(0, &qword_9A8E8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_771D0();
  __break(1u);
  return result;
}

uint64_t sub_6F594(void *a1)
{
  uint64_t v2 = v1;
  id v4 = (void **)(v2 + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_metadataPlayerPath);
  swift_beginAccess();
  uint64_t v5 = *v4;
  *id v4 = a1;
  id v6 = a1;

  uint64_t v7 = (void *)_MPAVRouteConnectionDidInvalidateNotification;
  uint64_t v8 = *v4;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_766D0();
  swift_allocObject();
  id v9 = v7;
  id v10 = v8;
  *(void *)(v2 + OBJC_IVAR____TtC19PodcastsTranscripts21PlayerPathCoordinator_playerPathInvalidationObserver) = sub_766C0();
  return swift_release();
}

void sub_6F69C()
{
}

uint64_t sub_6F6A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_6F6F0()
{
  sub_6A788(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_6F6F8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A360);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_6F758()
{
  return _swift_deallocObject(v0, 33, 7);
}

void sub_6F79C()
{
  sub_688F0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_6F7A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A910);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_6F80C(uint64_t a1, void (*a2)(void, void, void, void, void))
{
  return a1;
}

uint64_t sub_6F84C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t _s11ContentViewVwxx()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t _s11ContentViewVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 40);
  char v4 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v3;
  *(unsigned char *)(a1 + 48) = v4;
  char v5 = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = v5;
  char v6 = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = v6;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s11ContentViewVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  char v4 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v4;
  swift_retain();
  swift_release();
  char v5 = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = v5;
  swift_retain();
  swift_release();
  char v6 = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = v6;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t _s11ContentViewVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  char v4 = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = v4;
  swift_release();
  char v5 = *(unsigned char *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = v5;
  swift_release();
  char v6 = *(unsigned char *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = v6;
  swift_release();
  return a1;
}

uint64_t _s11ContentViewVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s11ContentViewVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s11ContentViewVMa()
{
  return &_s11ContentViewVN;
}

uint64_t sub_6FC88()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_6FCA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v46 = a1;
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A930);
  __chkstk_darwin(v3 - 8);
  char v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A938);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_98C58);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_98C60);
  __chkstk_darwin(v13 - 8);
  unint64_t v15 = (char *)&v43 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A940);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A948);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v44 = v19;
  uint64_t v45 = v20;
  __chkstk_darwin(v19);
  int64_t v22 = (char *)&v43 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_702B8(v2);
  sub_C50C((uint64_t)v5, (uint64_t)v8, &qword_9A930);
  sub_CA50((uint64_t)v5, &qword_9A930);
  sub_C50C((uint64_t)v8, (uint64_t)v12, &qword_9A938);
  *(_WORD *)&v12[*(int *)(v10 + 44)] = 256;
  sub_CA50((uint64_t)v8, &qword_9A938);
  uint64_t v23 = sub_76430();
  sub_1A620(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v15, 0.0, 1, 0.0, 1, v23, v24);
  sub_CA50((uint64_t)v12, &qword_98C58);
  long long v51 = *(_OWORD *)(v2 + 24);
  __swift_instantiateConcreteTypeFromMangledName(&qword_98338);
  sub_763B0();
  uint64_t v25 = v47;
  BOOL v26 = v48;
  char v27 = v49;
  sub_C50C((uint64_t)v15, (uint64_t)v18, &qword_98C60);
  int64_t v28 = &v18[*(int *)(v16 + 36)];
  *(void *)int64_t v28 = v25;
  *((void *)v28 + 1) = v26;
  v28[16] = v27;
  sub_CA50((uint64_t)v15, &qword_98C60);
  LOBYTE(v25) = *(unsigned char *)(v2 + 48);
  uint64_t v29 = swift_retain();
  uint64_t v30 = sub_1ADA0(v29, v25);
  swift_release();
  swift_getKeyPath();
  uint64_t v47 = v30;
  sub_70E94((unint64_t *)&qword_9A1F0, (void (*)(uint64_t))type metadata accessor for TextContent);
  sub_75540();
  swift_release();
  LOBYTE(v15) = *(unsigned char *)(v30 + OBJC_IVAR____TtC19PodcastsTranscripts11TextContent__isSelected);
  swift_release();
  LOBYTE(v47) = (_BYTE)v15;
  uint64_t v31 = swift_allocObject();
  long long v32 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v31 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v31 + 64) = v32;
  *(_OWORD *)(v31 + 80) = *(_OWORD *)(v2 + 64);
  *(unsigned char *)(v31 + 96) = *(unsigned char *)(v2 + 80);
  long long v33 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v31 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v31 + 32) = v33;
  sub_70A54(v2);
  unint64_t v34 = sub_70AC8();
  sub_76300();
  swift_release();
  sub_CA50((uint64_t)v18, &qword_9A940);
  char v35 = *(unsigned char *)(v2 + 64);
  uint64_t v36 = swift_retain();
  uint64_t v37 = sub_1A884(v36, v35);
  swift_release();
  swift_getKeyPath();
  uint64_t v47 = v37;
  sub_70E94(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  swift_release();
  LOBYTE(v25) = *(unsigned char *)(v37 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__isActive);
  swift_release();
  LOBYTE(v51) = v25;
  uint64_t v38 = swift_allocObject();
  long long v39 = *(_OWORD *)(v2 + 48);
  *(_OWORD *)(v38 + 48) = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v38 + 64) = v39;
  *(_OWORD *)(v38 + 80) = *(_OWORD *)(v2 + 64);
  *(unsigned char *)(v38 + 96) = *(unsigned char *)(v2 + 80);
  long long v40 = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v38 + 16) = *(_OWORD *)v2;
  *(_OWORD *)(v38 + 32) = v40;
  sub_70A54(v2);
  uint64_t v47 = v16;
  char v48 = &type metadata for Bool;
  unint64_t v49 = v34;
  uint64_t v50 = &protocol witness table for Bool;
  swift_getOpaqueTypeConformance2();
  uint64_t v41 = v44;
  sub_76300();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v22, v41);
}

uint64_t sub_702B8(uint64_t a1)
{
  uint64_t v2 = _s10StaticTextVMa();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v39 = (uint64_t)&v36 - v6;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A9A0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s8LiveTextVMa();
  __chkstk_darwin(v10);
  unint64_t v12 = (uint64_t *)((char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v36 - v14;
  long long v40 = *(_OWORD *)(a1 + 8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_98338);
  sub_76390();
  if (v41) {
    goto LABEL_3;
  }
  uint64_t v37 = v4;
  char v16 = *(unsigned char *)(a1 + 80);
  uint64_t v17 = swift_retain();
  uint64_t v18 = sub_1ADC0(v17, v16);
  uint64_t v38 = v10;
  uint64_t v19 = (int *)v2;
  uint64_t v20 = v18;
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v40 = v20;
  uint64_t v36 = sub_70E94((unint64_t *)&qword_9A3D0, (void (*)(uint64_t))type metadata accessor for TranscriptPresentationContext);
  sub_75540();
  uint64_t v21 = v37;
  swift_release();
  int v22 = *(unsigned __int8 *)(v20 + 17);
  uint64_t v10 = v38;
  swift_release();
  if (v22 == 1)
  {
LABEL_3:
    *unint64_t v12 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
    swift_storeEnumTagMultiPayload();
    uint64_t v23 = (char *)v12 + *(int *)(v10 + 20);
    type metadata accessor for TextContent.LiveText(0);
    sub_70E94(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
    *(void *)uint64_t v23 = sub_75DF0();
    v23[8] = v24 & 1;
    uint64_t v25 = (char *)v12 + *(int *)(v10 + 24);
    type metadata accessor for TranscriptPresentationContext();
    sub_70E94((unint64_t *)&qword_9A3D0, (void (*)(uint64_t))type metadata accessor for TranscriptPresentationContext);
    *(void *)uint64_t v25 = sub_75DF0();
    v25[8] = v26 & 1;
    sub_70EE0((uint64_t)v12, (uint64_t)v15, (uint64_t (*)(void))_s8LiveTextVMa);
    char v27 = _s8LiveTextVMa;
    sub_71A98((uint64_t)v15, (uint64_t)v9, (uint64_t (*)(void))_s8LiveTextVMa);
    swift_storeEnumTagMultiPayload();
    sub_70E94(&qword_9A988, (void (*)(uint64_t))_s8LiveTextVMa);
    sub_70E94(&qword_9A990, (void (*)(uint64_t))_s10StaticTextVMa);
    sub_76040();
    uint64_t v28 = (uint64_t)v15;
  }
  else
  {
    *uint64_t v21 = *(void *)a1;
    uint64_t v29 = (void *)((char *)v21 + v19[5]);
    uint64_t *v29 = swift_getKeyPath();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
    swift_storeEnumTagMultiPayload();
    uint64_t v30 = (char *)v21 + v19[6];
    type metadata accessor for TextContent.LiveText(0);
    sub_70E94(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
    swift_bridgeObjectRetain();
    *(void *)uint64_t v30 = sub_75DF0();
    v30[8] = v31 & 1;
    long long v32 = (char *)v21 + v19[7];
    type metadata accessor for TranscriptPresentationContext();
    *(void *)long long v32 = sub_75DF0();
    v32[8] = v33 & 1;
    uint64_t v34 = v39;
    sub_70EE0((uint64_t)v21, v39, (uint64_t (*)(void))_s10StaticTextVMa);
    char v27 = _s10StaticTextVMa;
    sub_71A98(v34, (uint64_t)v9, (uint64_t (*)(void))_s10StaticTextVMa);
    swift_storeEnumTagMultiPayload();
    sub_70E94(&qword_9A988, (void (*)(uint64_t))_s8LiveTextVMa);
    sub_70E94(&qword_9A990, (void (*)(uint64_t))_s10StaticTextVMa);
    sub_76040();
    uint64_t v28 = v34;
  }
  return sub_71B00(v28, (uint64_t (*)(void))v27);
}

uint64_t sub_708D0()
{
  return swift_release();
}

uint64_t sub_70938(uint64_t a1, char a2)
{
  int v2 = a2 & 1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_98338);
  uint64_t result = sub_76390();
  if (v4 != v2) {
    return sub_763A0();
  }
  return result;
}

uint64_t sub_709CC@<X0>(uint64_t a1@<X8>)
{
  return sub_6FCA4(a1);
}

uint64_t sub_70A24()
{
  return sub_708D0();
}

uint64_t sub_70A54(uint64_t a1)
{
  return a1;
}

unint64_t sub_70AC8()
{
  unint64_t result = qword_9A950;
  if (!qword_9A950)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_9A940);
    sub_71BD4(&qword_9A958, &qword_98C60, (void (*)(void))sub_70B70);
    sub_70D20();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9A950);
  }
  return result;
}

uint64_t sub_70B70()
{
  return sub_71BD4(&qword_9A960, &qword_98C58, (void (*)(void))sub_70BA0);
}

uint64_t sub_70BA0()
{
  return sub_71BD4(&qword_9A968, &qword_9A938, (void (*)(void))sub_70BD0);
}

unint64_t sub_70BD0()
{
  unint64_t result = qword_9A970;
  if (!qword_9A970)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_9A930);
    sub_70C44();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9A970);
  }
  return result;
}

unint64_t sub_70C44()
{
  unint64_t result = qword_9A978;
  if (!qword_9A978)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_9A980);
    sub_70E94(&qword_9A988, (void (*)(uint64_t))_s8LiveTextVMa);
    sub_70E94(&qword_9A990, (void (*)(uint64_t))_s10StaticTextVMa);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9A978);
  }
  return result;
}

unint64_t sub_70D20()
{
  unint64_t result = qword_9A998;
  if (!qword_9A998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9A998);
  }
  return result;
}

uint64_t objectdestroyTm_1()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 97, 7);
}

uint64_t sub_70DE0()
{
  return sub_708D0();
}

uint64_t sub_70E10()
{
  return sub_70938(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_70E30()
{
  return sub_763A0();
}

uint64_t sub_70E94(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_70EE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t _s11ContentViewV19SelectionBackgroundVwxx()
{
  swift_release();

  return swift_release();
}

uint64_t _s11ContentViewV19SelectionBackgroundVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t _s11ContentViewV19SelectionBackgroundVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s11ContentViewV19SelectionBackgroundVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  return a1;
}

uint64_t _s11ContentViewV19SelectionBackgroundVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 17)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s11ContentViewV19SelectionBackgroundVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 17) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s11ContentViewV19SelectionBackgroundVMa()
{
  return &_s11ContentViewV19SelectionBackgroundVN;
}

uint64_t sub_71124()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_711C8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_711E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v26 = a5;
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A9A8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A9B0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A9B8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  char v29 = a4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_9A9C0);
  sub_763D0();
  if (v30 == 1)
  {
    uint64_t v18 = sub_76420();
    uint64_t v20 = v19;
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v17, v25, v8);
    uint64_t v21 = (uint64_t *)&v17[*(int *)(v15 + 36)];
    *uint64_t v21 = v18;
    v21[1] = v20;
    sub_C50C((uint64_t)v17, (uint64_t)v14, &qword_9A9B8);
    swift_storeEnumTagMultiPayload();
    sub_714F0();
    sub_D034(&qword_9A9D0, &qword_9A9A8);
    sub_76040();
    return sub_CA50((uint64_t)v17, &qword_9A9B8);
  }
  else
  {
    uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v23(v11, v25, v8);
    v23(v14, (uint64_t)v11, v8);
    swift_storeEnumTagMultiPayload();
    sub_714F0();
    sub_D034(&qword_9A9D0, &qword_9A9A8);
    sub_76040();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
}

uint64_t sub_714E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_711E4(a1, *(void *)v2, *(void *)(v2 + 8), *(unsigned char *)(v2 + 16), a2);
}

unint64_t sub_714F0()
{
  unint64_t result = qword_9A9C8;
  if (!qword_9A9C8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_9A9B8);
    sub_D034(&qword_9A9D0, &qword_9A9A8);
    sub_D034(&qword_9A9D8, &qword_9A9E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9A9C8);
  }
  return result;
}

ValueMetadata *_s11ContentViewV23SelectionBackgroundViewVMa()
{
  return &_s11ContentViewV23SelectionBackgroundViewVN;
}

unint64_t sub_715C8()
{
  unint64_t result = qword_9A9E8;
  if (!qword_9A9E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_9A9F0);
    sub_714F0();
    sub_D034(&qword_9A9D0, &qword_9A9A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9A9E8);
  }
  return result;
}

uint64_t sub_71668()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_71684@<X0>(uint64_t a1@<X8>)
{
  uint64_t v53 = a1;
  uint64_t v52 = sub_764B0();
  uint64_t v1 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  long long v51 = (char *)&v50 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_75F00();
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (_OWORD *)((char *)&v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_9A9F8);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_9AA00);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v50 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_9AA08);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = (char *)v6 + *(int *)(v4 + 28);
  uint64_t v20 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v21 = sub_76000();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(v19, v20, v21);
  __asm { FMOV            V0.2D, #12.0 }
  *uint64_t v6 = _Q0;
  sub_76340();
  uint64_t v27 = sub_76350();
  swift_release();
  sub_71A98((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  *(void *)&v10[*(int *)(v8 + 60)] = v27;
  *(_WORD *)&v10[*(int *)(v8 + 64)] = 256;
  sub_71B00((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  char v29 = v51;
  uint64_t v28 = v52;
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v51, enum case for BlendMode.plusLighter(_:), v52);
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(&v14[*(int *)(v12 + 44)], v29, v28);
  sub_C50C((uint64_t)v10, (uint64_t)v14, &qword_9A9F8);
  (*(void (**)(char *, uint64_t))(v1 + 8))(v29, v28);
  sub_CA50((uint64_t)v10, &qword_9A9F8);
  LOBYTE(v12) = sub_76100();
  sub_75DC0();
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v37 = v36;
  sub_C50C((uint64_t)v14, (uint64_t)v18, &qword_9AA00);
  uint64_t v38 = &v18[*(int *)(v16 + 44)];
  *uint64_t v38 = v12;
  *((void *)v38 + 1) = v31;
  *((void *)v38 + 2) = v33;
  *((void *)v38 + 3) = v35;
  *((void *)v38 + 4) = v37;
  v38[40] = 0;
  sub_CA50((uint64_t)v14, &qword_9AA00);
  LOBYTE(v12) = sub_760B0();
  sub_75DC0();
  uint64_t v40 = v39;
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v47 = v53;
  sub_C50C((uint64_t)v18, v53, &qword_9AA08);
  uint64_t v48 = v47 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_9AA10) + 36);
  *(unsigned char *)uint64_t v48 = v12;
  *(void *)(v48 + 8) = v40;
  *(void *)(v48 + 16) = v42;
  *(void *)(v48 + 24) = v44;
  *(void *)(v48 + 32) = v46;
  *(unsigned char *)(v48 + 40) = 0;
  return sub_CA50((uint64_t)v18, &qword_9AA08);
}

uint64_t sub_71A98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_71B00(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_71B60()
{
  return sub_71BD4(&qword_9AA18, &qword_9AA10, (void (*)(void))sub_71BA4);
}

uint64_t sub_71BA4()
{
  return sub_71BD4(&qword_9AA20, &qword_9AA08, (void (*)(void))sub_71C50);
}

uint64_t sub_71BD4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_71C50()
{
  unint64_t result = qword_9AA28;
  if (!qword_9AA28)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_9AA00);
    sub_D034(&qword_9AA30, &qword_9A9F8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9AA28);
  }
  return result;
}

uint64_t *sub_71CF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_76020();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    }
    else
    {
      *uint64_t v4 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = *(int *)(a3 + 24);
    uint64_t v11 = (char *)v4 + v9;
    uint64_t v12 = (char *)a2 + v9;
    uint64_t v13 = *(void *)v12;
    LOBYTE(v12) = v12[8];
    *(void *)uint64_t v11 = v13;
    v11[8] = (char)v12;
    uint64_t v14 = (char *)v4 + v10;
    uint64_t v15 = (char *)a2 + v10;
    uint64_t v16 = *(void *)v15;
    LOBYTE(v15) = v15[8];
    *(void *)uint64_t v14 = v16;
    v14[8] = (char)v15;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_71E3C(uint64_t a1)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v2 = sub_76020();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  }
  else
  {
    swift_release();
  }
  swift_release();

  return swift_release();
}

void *sub_71EE8(void *a1, void *a2, uint64_t a3)
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_76020();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (char *)a1 + v7;
  uint64_t v10 = (char *)a2 + v7;
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  uint64_t v12 = (char *)a1 + v8;
  uint64_t v13 = (char *)a2 + v8;
  uint64_t v14 = *(void *)v13;
  LOBYTE(v13) = v13[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = (char)v13;
  swift_retain();
  swift_retain();
  return a1;
}

void *sub_71FE8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_CA50((uint64_t)a1, (uint64_t *)&unk_9A780);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_76020();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = *(void *)v9;
  LOBYTE(v9) = v9[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = (char)v9;
  swift_retain();
  swift_release();
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = *(void *)v13;
  LOBYTE(v13) = v13[8];
  *(void *)uint64_t v12 = v14;
  v12[8] = (char)v13;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_72118(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = sub_76020();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = &a1[v8];
  uint64_t v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = &a1[v9];
  uint64_t v13 = &a2[v9];
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  return a1;
}

char *sub_72214(char *a1, char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_CA50((uint64_t)a1, (uint64_t *)&unk_9A780);
    uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_76020();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  swift_release();
  uint64_t v12 = *(int *)(a3 + 24);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void *)v14;
  LOBYTE(v14) = v14[8];
  *(void *)uint64_t v13 = v15;
  v13[8] = (char)v14;
  swift_release();
  return a1;
}

uint64_t sub_7233C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_72350);
}

uint64_t sub_72350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_986C8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 > 1) {
      return (v10 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_72414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_72428);
}

uint64_t sub_72428(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = __swift_instantiateConcreteTypeFromMangledName(&qword_986C8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20) + 8) = -(char)a2;
  }
  return result;
}

uint64_t _s8LiveTextVMa()
{
  uint64_t result = qword_9AA90;
  if (!qword_9AA90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_72538()
{
  sub_15488();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_725D0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_725EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v39 = a1;
  uint64_t v3 = _s8LiveTextVMa();
  uint64_t v36 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v37 = v4;
  uint64_t v38 = (uint64_t)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_9AAD0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_9AAD8);
  __chkstk_darwin(v8);
  unsigned int v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_9AAE0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *uint64_t v7 = sub_76420();
  v7[1] = v14;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_9AAE8);
  uint64_t v16 = v2;
  sub_72A1C(v2, (uint64_t)v7 + *(int *)(v15 + 44));
  if (qword_97FB8 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_9F0F0;
  uint64_t KeyPath = swift_getKeyPath();
  sub_C50C((uint64_t)v7, (uint64_t)v10, &qword_9AAD0);
  uint64_t v19 = (uint64_t *)&v10[*(int *)(v8 + 36)];
  *uint64_t v19 = KeyPath;
  v19[1] = v17;
  swift_retain();
  sub_CA50((uint64_t)v7, &qword_9AAD0);
  uint64_t v20 = sub_76490();
  char v21 = *(unsigned char *)(v16 + *(int *)(v3 + 20) + 8);
  uint64_t v22 = swift_retain();
  uint64_t v23 = sub_1A884(v22, v21);
  swift_release();
  swift_getKeyPath();
  uint64_t v40 = v23;
  sub_74188(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  swift_release();
  uint64_t v24 = *(void *)(v23 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeReadRange);
  uint64_t v25 = *(void *)(v23 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeReadRange + 8);
  char v26 = *(unsigned char *)(v23 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeReadRange + 16);
  swift_release();
  sub_C50C((uint64_t)v10, (uint64_t)v13, &qword_9AAD8);
  uint64_t v27 = &v13[*(int *)(v11 + 36)];
  *(void *)uint64_t v27 = v20;
  *((void *)v27 + 1) = v24;
  *((void *)v27 + 2) = v25;
  v27[24] = v26;
  sub_CA50((uint64_t)v10, &qword_9AAD8);
  uint64_t v28 = v38;
  sub_741D8(v16, v38, (uint64_t (*)(void))_s8LiveTextVMa);
  unint64_t v29 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  uint64_t v30 = swift_allocObject();
  sub_74054(v28, v30 + v29);
  uint64_t v31 = swift_allocObject();
  *(void *)(v31 + 16) = sub_740B8;
  *(void *)(v31 + 24) = v30;
  uint64_t v32 = v39;
  sub_C50C((uint64_t)v13, v39, &qword_9AAE0);
  uint64_t v33 = (void *)(v32 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_9AAF0) + 36));
  void *v33 = sub_74154;
  v33[1] = v31;
  return sub_CA50((uint64_t)v13, &qword_9AAE0);
}

uint64_t sub_72A1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v116 = a2;
  uint64_t v117 = a1;
  uint64_t v115 = sub_76020();
  uint64_t v113 = *(void *)(v115 - 8);
  __chkstk_darwin(v115);
  uint64_t v112 = (char *)v90 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v110 = (uint64_t)v90 - v5;
  uint64_t v123 = type metadata accessor for TranscriptTextContentRenderer() - 8;
  __chkstk_darwin(v123);
  uint64_t v122 = (char *)v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_75F10();
  __chkstk_darwin(v7 - 8);
  uint64_t v120 = (char *)v90 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v118 = sub_764B0();
  uint64_t v9 = *(void **)(v118 - 8);
  __chkstk_darwin(v118);
  uint64_t v108 = (char *)v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  long long v97 = (char *)v90 - v12;
  uint64_t v13 = sub_75020();
  uint64_t v91 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_9AAF8) - 8;
  __chkstk_darwin(v121);
  uint64_t v107 = (char *)v90 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v90 - v19;
  uint64_t v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_9AB00) - 8;
  __chkstk_darwin(v124);
  uint64_t v114 = (uint64_t)v90 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  char v109 = (char *)v90 - v23;
  __chkstk_darwin(v24);
  uint64_t v111 = (uint64_t)v90 - v25;
  __chkstk_darwin(v26);
  uint64_t v119 = (uint64_t)v90 - v27;
  __chkstk_darwin(v28);
  uint64_t v125 = (uint64_t)v90 - v29;
  uint64_t v30 = _s8LiveTextVMa();
  uint64_t v94 = a1 + *(int *)(v30 + 20);
  char v31 = *(unsigned char *)(v94 + 8);
  uint64_t v32 = swift_retain();
  uint64_t v33 = sub_1A884(v32, v31);
  swift_release();
  swift_getKeyPath();
  uint64_t v127 = v33;
  uint64_t v93 = sub_74188(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  swift_release();
  uint64_t v34 = v33 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__attributedContent;
  swift_beginAccess();
  uint64_t v35 = *(void (**)(void, uint64_t, uint64_t))(v14 + 16);
  v90[1] = v14 + 16;
  uint64_t v92 = v35;
  v90[0] = v16;
  v35(v16, v34, v13);
  swift_release();
  uint64_t v36 = sub_76250();
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  LOBYTE(v33) = v41 & 1;
  unsigned int v102 = enum case for BlendMode.normal(_:);
  uint64_t v42 = (void (*)(char *, uint64_t, uint64_t))v9[13];
  uint64_t v105 = v9 + 13;
  uint64_t v106 = v42;
  uint64_t v43 = v97;
  uint64_t v44 = v118;
  ((void (*)(char *))v42)(v97);
  uint64_t v45 = (void (*)(char *, char *, uint64_t))v9[2];
  uint64_t v103 = v9 + 2;
  uint64_t v104 = v45;
  uint64_t v46 = (uint64_t)v120;
  v45(v120, v43, v44);
  uint64_t v47 = (uint64_t)&v20[*(int *)(v121 + 44)];
  id v101 = &type metadata accessor for _BlendModeEffect;
  sub_741D8(v46, v47, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  *(void *)uint64_t v20 = v36;
  *((void *)v20 + 1) = v38;
  v20[16] = v33;
  *((void *)v20 + 3) = v40;
  sub_160F0(v36, v38, v33);
  swift_bridgeObjectRetain();
  uint64_t v100 = &type metadata accessor for _BlendModeEffect;
  sub_74240(v46, (uint64_t (*)(void))&type metadata accessor for _BlendModeEffect);
  uint64_t v48 = (void (*)(char *, uint64_t))v9[1];
  long long v98 = v9 + 1;
  uint64_t v99 = v48;
  v48(v43, v44);
  sub_1607C(v36, v38, v33);
  swift_bridgeObjectRelease();
  unint64_t v49 = v122;
  uint64_t v50 = v123;
  uint64_t v51 = v117;
  sub_1A84C((uint64_t)&v122[*(int *)(v123 + 28)]);
  long long v97 = (char *)(v51 + *(int *)(v30 + 24));
  LOBYTE(v30) = v97[8];
  uint64_t v52 = swift_retain();
  uint64_t v53 = sub_1ADC0(v52, v30);
  swift_release();
  *unint64_t v49 = 0;
  *(void *)&v49[*(int *)(v50 + 32)] = v53;
  uint64_t v54 = v119;
  uint64_t v55 = v119 + *(int *)(v124 + 44);
  char v96 = type metadata accessor for TranscriptTextContentRenderer;
  sub_741D8((uint64_t)v49, v55, (uint64_t (*)(void))type metadata accessor for TranscriptTextContentRenderer);
  sub_C50C((uint64_t)v20, v54, &qword_9AAF8);
  char v95 = type metadata accessor for TranscriptTextContentRenderer;
  sub_74240((uint64_t)v49, (uint64_t (*)(void))type metadata accessor for TranscriptTextContentRenderer);
  sub_CA50((uint64_t)v20, &qword_9AAF8);
  sub_C570(v54, v125, &qword_9AB00);
  LOBYTE(v54) = *(unsigned char *)(v94 + 8);
  uint64_t v56 = swift_retain();
  uint64_t v57 = sub_1A884(v56, v54);
  swift_release();
  swift_getKeyPath();
  uint64_t v126 = v57;
  sub_75540();
  swift_release();
  uint64_t v58 = v57 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__attributedContent;
  swift_beginAccess();
  v92(v90[0], v58, v91);
  swift_release();
  uint64_t v59 = sub_76250();
  uint64_t v61 = v60;
  char v63 = v62;
  uint64_t v65 = v64;
  uint64_t v66 = v110;
  sub_1A84C(v110);
  uint64_t v67 = v112;
  uint64_t v68 = v113;
  uint64_t v69 = v115;
  (*(void (**)(char *, void, uint64_t))(v113 + 104))(v112, enum case for ColorSchemeContrast.standard(_:), v115);
  LOBYTE(v36) = sub_76010();
  uint64_t v70 = *(void (**)(char *, uint64_t))(v68 + 8);
  v70(v67, v69);
  v70((char *)v66, v69);
  if (v36) {
    uint64_t v71 = enum case for BlendMode.plusLighter(_:);
  }
  else {
    uint64_t v71 = v102;
  }
  uint64_t v72 = v108;
  uint64_t v73 = v118;
  v106(v108, v71, v118);
  char v74 = v63 & 1;
  uint64_t v75 = (uint64_t)v120;
  v104(v120, v72, v73);
  uint64_t v76 = (uint64_t)v107;
  sub_741D8(v75, (uint64_t)&v107[*(int *)(v121 + 44)], (uint64_t (*)(void))v101);
  *(void *)uint64_t v76 = v59;
  *(void *)(v76 + 8) = v61;
  *(unsigned char *)(v76 + 16) = v74;
  *(void *)(v76 + 24) = v65;
  sub_160F0(v59, v61, v74);
  swift_bridgeObjectRetain();
  sub_74240(v75, (uint64_t (*)(void))v100);
  v99(v72, v73);
  sub_1607C(v59, v61, v74);
  swift_bridgeObjectRelease();
  double v78 = v122;
  uint64_t v77 = v123;
  sub_1A84C((uint64_t)&v122[*(int *)(v123 + 28)]);
  char v79 = v97[8];
  uint64_t v80 = swift_retain();
  uint64_t v81 = sub_1ADC0(v80, v79);
  swift_release();
  unsigned char *v78 = 1;
  *(void *)&v78[*(int *)(v77 + 32)] = v81;
  uint64_t v82 = (uint64_t)v109;
  sub_741D8((uint64_t)v78, (uint64_t)&v109[*(int *)(v124 + 44)], (uint64_t (*)(void))v96);
  sub_C50C(v76, v82, &qword_9AAF8);
  sub_74240((uint64_t)v78, (uint64_t (*)(void))v95);
  sub_CA50(v76, &qword_9AAF8);
  uint64_t v83 = v111;
  sub_C570(v82, v111, &qword_9AB00);
  uint64_t v84 = v125;
  uint64_t v85 = v119;
  sub_C50C(v125, v119, &qword_9AB00);
  uint64_t v86 = v114;
  sub_C50C(v83, v114, &qword_9AB00);
  uint64_t v87 = v116;
  sub_C50C(v85, v116, &qword_9AB00);
  uint64_t v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_9AB08);
  sub_C50C(v86, v87 + *(int *)(v88 + 48), &qword_9AB00);
  sub_CA50(v83, &qword_9AB00);
  sub_CA50(v84, &qword_9AB00);
  sub_CA50(v86, &qword_9AB00);
  return sub_CA50(v85, &qword_9AB00);
}

uint64_t sub_7352C(void (**a1)(char *))
{
  uint64_t v80 = a1;
  uint64_t v71 = sub_761E0();
  double v78 = *(void (**)(char *))(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v70 = (char *)v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v82 = (char *)v61 - v4;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_98690);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v61 - v9;
  uint64_t v11 = sub_76200();
  uint64_t v77 = *(void (***)(char *, uint64_t))(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v81 = (char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v61 - v14;
  uint64_t v72 = sub_76210();
  uint64_t v75 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v73 = (char *)v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_98698);
  __chkstk_darwin(v79);
  uint64_t v18 = (char *)v61 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v74 = (uint64_t)v61 - v20;
  uint64_t v69 = v1 + *(int *)(_s8LiveTextVMa() + 20);
  char v21 = *(unsigned char *)(v69 + 8);
  uint64_t v22 = swift_retain();
  uint64_t v23 = sub_1A884(v22, v21);
  swift_release();
  swift_getKeyPath();
  *(void *)&long long v88 = v23;
  sub_74188(&qword_98040, (void (*)(uint64_t))type metadata accessor for TextContent.LiveText);
  sub_75540();
  swift_release();
  char v24 = *(unsigned char *)(v23 + OBJC_IVAR____TtCC19PodcastsTranscripts11TextContent8LiveText__activeSearchRange + 16);
  uint64_t result = swift_release();
  if ((v24 & 1) == 0 && v80[2])
  {
    uint64_t v67 = v15;
    uint64_t v68 = v7;
    sub_76230();
    uint64_t v26 = v73;
    sub_76220();
    uint64_t v27 = v75;
    uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v75 + 16);
    uint64_t v29 = v72;
    uint64_t v66 = v75 + 16;
    uint64_t v65 = v28;
    v28(v18, (uint64_t)v26, v72);
    uint64_t v30 = sub_74188(&qword_986A0, (void (*)(uint64_t))&type metadata accessor for Text.Layout);
    sub_76B00();
    char v31 = *(void (**)(char *, uint64_t))(v27 + 8);
    uint64_t v75 = v27 + 8;
    uint64_t v64 = v31;
    v31(v26, v29);
    uint64_t v32 = v79;
    *(void *)&v18[*(int *)(v79 + 36)] = v88;
    uint64_t v33 = (uint64_t)v18;
    uint64_t v34 = v30;
    uint64_t v35 = v74;
    sub_C570(v33, v74, &qword_98698);
    uint64_t v36 = (uint64_t *)(v35 + *(int *)(v32 + 36));
    uint64_t v37 = *v36;
    sub_76B20();
    if (v37 == (void)v88)
    {
LABEL_4:
      sub_CA50(v35, &qword_98698);
      char v38 = *(unsigned char *)(v69 + 8);
      uint64_t v39 = swift_retain();
      sub_1A884(v39, v38);
      swift_release();
      swift_retain();
      swift_release();
      long long v88 = 0u;
      long long v89 = 0u;
      LOBYTE(v90) = 1;
      sub_75BD0();
      return swift_release();
    }
    else
    {
      uint64_t v79 = (uint64_t)(v77 + 1);
      uint64_t v80 = (void (**)(char *))(v77 + 2);
      uint64_t v40 = (void (**)(char *, char *, uint64_t))((char *)v78 + 32);
      uint64_t v76 = (void (**)(char *))((char *)v78 + 16);
      uint64_t v77 = (void (**)(char *, uint64_t))((char *)v78 + 8);
      uint64_t v63 = v5;
      v61[1] = v34;
      v61[0] = v36;
      char v62 = v10;
      while (1)
      {
        uint64_t v42 = (void (*)(long long *, void))sub_76B40();
        uint64_t v43 = *v80;
        uint64_t v44 = v67;
        (*v80)(v67);
        v42(&v88, 0);
        uint64_t v45 = v73;
        v65(v73, v35, v29);
        sub_76B30();
        v64(v45, v29);
        uint64_t v46 = (uint64_t)v68;
        double v78 = v43;
        ((void (*)(char *, char *, uint64_t))v43)(v68, v44, v11);
        sub_74188(&qword_986A8, (void (*)(uint64_t))&type metadata accessor for Text.Layout.Line);
        sub_76B00();
        uint64_t v47 = *(void (**)(char *, uint64_t))v79;
        (*(void (**)(char *, uint64_t))v79)(v44, v11);
        uint64_t v48 = v63;
        *(void *)(v46 + *(int *)(v63 + 36)) = v88;
        uint64_t v49 = v46;
        uint64_t v50 = (uint64_t)v62;
        sub_C570(v49, (uint64_t)v62, &qword_98690);
        uint64_t v51 = (uint64_t *)(v50 + *(int *)(v48 + 36));
        uint64_t v52 = *v51;
        sub_76B20();
        uint64_t v53 = v71;
        uint64_t v54 = v70;
        if (v52 != (void)v88) {
          break;
        }
LABEL_6:
        sub_CA50(v50, &qword_98690);
        uint64_t v41 = *(void *)v61[0];
        uint64_t v35 = v74;
        uint64_t v29 = v72;
        sub_76B20();
        if (v41 == (void)v88) {
          goto LABEL_4;
        }
      }
      while (1)
      {
        uint64_t v55 = (void (*)(long long *, void))sub_76B40();
        uint64_t v56 = v82;
        (*v76)(v82);
        v55(&v88, 0);
        uint64_t v57 = v81;
        ((void (*)(char *, uint64_t, uint64_t))v78)(v81, v50, v11);
        sub_76B30();
        v47(v57, v11);
        (*v40)(v54, v56, v53);
        sub_148D0();
        sub_761F0();
        if ((v88 & 1) == 0) {
          break;
        }
        (*v77)(v54, v53);
        uint64_t v58 = *v51;
        sub_76B20();
        if (v58 == (void)v88) {
          goto LABEL_6;
        }
      }
      char v59 = *(unsigned char *)(v69 + 8);
      uint64_t v60 = swift_retain();
      sub_1A884(v60, v59);
      swift_release();
      swift_retain();
      swift_release();
      sub_761D0();
      uint64_t v83 = v88;
      double v84 = *((double *)&v88 + 1) - *((double *)&v89 + 1);
      uint64_t v85 = v89;
      double v86 = *((double *)&v89 + 1) + v90;
      char v87 = 0;
      sub_75BD0();
      swift_release();
      (*v77)(v54, v53);
      sub_CA50(v50, &qword_98690);
      return sub_CA50(v74, &qword_98698);
    }
  }
  return result;
}

uint64_t sub_73F28()
{
  uint64_t v1 = *(void *)(_s8LiveTextVMa() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_9A780);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = sub_76020();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, v3 + v4, v2 | 7);
}

uint64_t sub_74054(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s8LiveTextVMa();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_740B8(void (**a1)(char *))
{
  return sub_7352C(a1);
}

uint64_t sub_7411C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_74154(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_74188(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_741D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_74240(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_742A4()
{
  unint64_t result = qword_9AB10;
  if (!qword_9AB10)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_9AAF0);
    sub_74344();
    sub_D034(&qword_9AB40, &qword_9AB48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9AB10);
  }
  return result;
}

unint64_t sub_74344()
{
  unint64_t result = qword_9AB18;
  if (!qword_9AB18)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_9AAE0);
    sub_743E4();
    sub_D034(&qword_9AB30, &qword_9AB38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9AB18);
  }
  return result;
}

unint64_t sub_743E4()
{
  unint64_t result = qword_9AB20;
  if (!qword_9AB20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_9AAD8);
    sub_D034(&qword_9AB28, &qword_9AAD0);
    sub_D034(&qword_98418, &qword_98420);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9AB20);
  }
  return result;
}

uint64_t destroy for ChapterTitleView()
{
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for ChapterTitleView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ChapterTitleView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ChapterTitleView(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(void *)(a1 + 24) = v4;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for ChapterTitleView()
{
  return &type metadata for ChapterTitleView;
}

unint64_t sub_745FC()
{
  unint64_t result = qword_99F80;
  if (!qword_99F80)
  {
    type metadata accessor for ChapterTitleContent();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_99F80);
  }
  return result;
}

unint64_t sub_74654(uint64_t a1)
{
  unint64_t result = sub_6730C();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_7467C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_74698()
{
  return sub_75400();
}

uint64_t sub_746BC(uint64_t a1)
{
  uint64_t v2 = sub_753F0();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return sub_75410();
}

uint64_t sub_74784@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_9AB70);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_9AB78);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v10 = sub_75FE0();
  *((void *)v10 + 1) = 0;
  v10[16] = 0;
  uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_9AB80);
  sub_7496C(a1, a2, a3, (uint64_t)&v10[*(int *)(v15 + 44)]);
  LOBYTE(a3) = sub_760D0();
  sub_75DC0();
  uint64_t v17 = v16;
  uint64_t v19 = v18;
  uint64_t v21 = v20;
  uint64_t v23 = v22;
  sub_C50C((uint64_t)v10, (uint64_t)v14, &qword_9AB70);
  char v24 = &v14[*(int *)(v12 + 44)];
  char *v24 = a3;
  *((void *)v24 + 1) = v17;
  *((void *)v24 + 2) = v19;
  *((void *)v24 + 3) = v21;
  *((void *)v24 + 4) = v23;
  v24[40] = 0;
  sub_CA50((uint64_t)v10, &qword_9AB70);
  char v25 = sub_760E0();
  sub_75DC0();
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  sub_C50C((uint64_t)v14, a4, &qword_9AB78);
  uint64_t v34 = a4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_9AB88) + 36);
  *(unsigned char *)uint64_t v34 = v25;
  *(void *)(v34 + 8) = v27;
  *(void *)(v34 + 16) = v29;
  *(void *)(v34 + 24) = v31;
  *(void *)(v34 + 32) = v33;
  *(unsigned char *)(v34 + 40) = 0;
  return sub_CA50((uint64_t)v14, &qword_9AB78);
}

uint64_t sub_7496C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v60 = a2;
  uint64_t v64 = a4;
  uint64_t v7 = sub_751C0();
  uint64_t v61 = *(void *)(v7 - 8);
  uint64_t v62 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = &v52[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v12 = &v52[-v11];
  uint64_t v13 = type metadata accessor for TappablePaddingView() - 8;
  uint64_t v59 = v13;
  __chkstk_darwin(v13);
  uint64_t v63 = &v52[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v17 = (uint64_t *)&v52[-v16];
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t *)&v52[-v19];
  __chkstk_darwin(v21);
  uint64_t v23 = &v52[-v22];
  uint64_t v58 = &v52[-v22];
  *uint64_t v20 = sub_76430();
  v20[1] = v24;
  v20[2] = a2;
  void v20[3] = a3;
  uint64_t v56 = a3;
  char v25 = (uint64_t *)((char *)v20 + *(int *)(v13 + 32));
  uint64_t *v25 = swift_getKeyPath();
  uint64_t v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_98368);
  swift_storeEnumTagMultiPayload();
  sub_C268((uint64_t)v20, (uint64_t)v23);
  uint64_t v26 = *(void *)(a1 + 16);
  uint64_t v27 = *(void *)(a1 + 24);
  uint64_t v65 = v26;
  uint64_t v66 = v27;
  sub_C1AC();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v28 = sub_76260();
  uint64_t v30 = v29;
  LOBYTE(v25) = v31 & 1;
  sub_751B0();
  sub_751A0();
  uint64_t v32 = *(void (**)(unsigned char *, uint64_t))(v61 + 8);
  uint64_t v33 = v12;
  uint64_t v34 = v62;
  v32(v33, v62);
  uint64_t v35 = sub_76180();
  uint64_t v54 = v36;
  uint64_t v55 = v35;
  uint64_t v61 = v37;
  int v53 = v38 & 1;
  sub_1607C(v28, v30, (char)v25);
  swift_bridgeObjectRelease();
  v32(v9, v34);
  uint64_t KeyPath = swift_getKeyPath();
  *uint64_t v17 = sub_76440();
  v17[1] = v40;
  uint64_t v41 = v56;
  void v17[2] = v60;
  v17[3] = v41;
  uint64_t v42 = (uint64_t *)((char *)v17 + *(int *)(v59 + 32));
  *uint64_t v42 = swift_getKeyPath();
  swift_storeEnumTagMultiPayload();
  sub_C268((uint64_t)v17, (uint64_t)v20);
  uint64_t v43 = v58;
  sub_C2CC((uint64_t)v58, (uint64_t)v17);
  uint64_t v44 = v63;
  sub_C2CC((uint64_t)v20, (uint64_t)v63);
  uint64_t v45 = v64;
  sub_C2CC((uint64_t)v17, v64);
  uint64_t v46 = (int *)__swift_instantiateConcreteTypeFromMangledName(&qword_9AB90);
  uint64_t v47 = v45 + v46[12];
  uint64_t v49 = v54;
  uint64_t v48 = v55;
  *(void *)uint64_t v47 = v55;
  *(void *)(v47 + 8) = v49;
  LOBYTE(v9) = v53;
  *(unsigned char *)(v47 + 16) = v53;
  *(void *)(v47 + 24) = v61;
  *(void *)(v47 + 32) = KeyPath;
  *(unsigned char *)(v47 + 40) = 0;
  uint64_t v50 = v45 + v46[16];
  *(void *)uint64_t v50 = 0;
  *(unsigned char *)(v50 + 8) = 1;
  sub_C2CC((uint64_t)v44, v45 + v46[20]);
  swift_retain();
  sub_160F0(v48, v49, (char)v9);
  swift_bridgeObjectRetain();
  swift_retain();
  sub_C330((uint64_t)v20);
  sub_C330((uint64_t)v43);
  sub_C330((uint64_t)v44);
  sub_1607C(v48, v49, (char)v9);
  swift_release();
  swift_bridgeObjectRelease();
  return sub_C330((uint64_t)v17);
}

uint64_t sub_74D7C@<X0>(uint64_t a1@<X8>)
{
  return sub_74784(v1[1], v1[2], v1[3], a1);
}

uint64_t sub_74D90()
{
  return sub_75400();
}

uint64_t sub_74DC0()
{
  return sub_74E24(&qword_9AB98, &qword_9AB88, (void (*)(void))sub_74DFC);
}

uint64_t sub_74DFC()
{
  return sub_74E24(&qword_9ABA0, &qword_9AB78, (void (*)(void))sub_74EA4);
}

uint64_t sub_74E24(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_74EA4()
{
  unint64_t result = qword_9ABA8;
  if (!qword_9ABA8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_9AB70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_9ABA8);
  }
  return result;
}

uint64_t sub_74F00()
{
  return static FormatStyle<>.time(pattern:)();
}

uint64_t sub_74F10()
{
  return Notification.object.getter();
}

uint64_t sub_74F20()
{
  return Notification.userInfo.getter();
}

uint64_t sub_74F30()
{
  return AttributeScopes.UIKitAttributes.foregroundColor.getter();
}

uint64_t sub_74F40()
{
  return AttributeScopes.UIKitAttributes.font.getter();
}

uint64_t sub_74F50()
{
  return AttributeScopes.SwiftUIAttributes.foregroundColor.getter();
}

uint64_t sub_74F60()
{
  return AttributeScopes.SwiftUIAttributes.customAttributes.getter();
}

uint64_t sub_74F70()
{
  return AttributeScopes.SwiftUIAttributes.font.getter();
}

uint64_t sub_74F80()
{
  return AttributedString.subscript.setter();
}

uint64_t sub_74F90()
{
  return type metadata accessor for AttributedString.FormattingOptions();
}

uint64_t sub_74FA0()
{
  return AttributedString.Runs.Run.subscript.getter();
}

uint64_t sub_74FB0()
{
  return AttributedString.Runs.Run.range.getter();
}

uint64_t sub_74FC0()
{
  return type metadata accessor for AttributedString.Runs.Run();
}

uint64_t sub_74FD0()
{
  return type metadata accessor for AttributedString.Runs.Index();
}

uint64_t sub_74FE0()
{
  return type metadata accessor for AttributedString.Runs();
}

uint64_t sub_74FF0()
{
  return type metadata accessor for AttributedString.Index();
}

uint64_t sub_75000()
{
  return AttributedString.Index.init<A>(_:within:)();
}

uint64_t sub_75010()
{
  return AttributedString.init(localized:options:table:bundle:locale:comment:)();
}

uint64_t sub_75020()
{
  return type metadata accessor for AttributedString();
}

uint64_t sub_75030()
{
  return AttributedString.init(_:attributes:)();
}

uint64_t sub_75040()
{
  return AttributedString.subscript.modify();
}

uint64_t sub_75050()
{
  return AttributedString.subscript.getter();
}

uint64_t sub_75060(Swift::String _, Swift::String_optional tableName, NSBundle bundle, Swift::String value, Swift::String comment)
{
  return NSLocalizedString(_:tableName:bundle:value:comment:)(_, tableName, bundle, value, comment)._countAndFlagsBits;
}

uint64_t sub_75070()
{
  return AttributeContainer.init()();
}

uint64_t sub_75080()
{
  return type metadata accessor for AttributeContainer();
}

uint64_t sub_75090()
{
  return AttributedSubstring.subscript.setter();
}

uint64_t sub_750A0()
{
  return AttributedSubstring.runs.getter();
}

uint64_t sub_750B0()
{
  return type metadata accessor for AttributedSubstring();
}

uint64_t sub_750C0()
{
  return AttributeDynamicLookup.subscript.getter();
}

uint64_t sub_750D0()
{
  return AttributeDynamicLookup.subscript.getter();
}

uint64_t sub_750E0()
{
  return _convertErrorToNSError(_:)();
}

uint64_t sub_750F0()
{
  return _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();
}

void sub_75100(NSURL *retstr@<X8>)
{
}

uint64_t sub_75110()
{
  return type metadata accessor for URL();
}

uint64_t sub_75120()
{
  return type metadata accessor for Locale();
}

NSIndexPath sub_75130()
{
  return IndexPath._bridgeToObjectiveC()();
}

uint64_t sub_75140()
{
  return static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_75150()
{
  return IndexPath.row.getter();
}

uint64_t sub_75160()
{
  return IndexPath.init(item:section:)();
}

uint64_t sub_75170()
{
  return IndexPath.item.getter();
}

uint64_t sub_75180()
{
  return IndexPath.section.getter();
}

uint64_t sub_75190()
{
  return type metadata accessor for IndexPath();
}

uint64_t sub_751A0()
{
  return PUITextStyle.emph.getter();
}

uint64_t sub_751B0()
{
  return static PUITextStyle.title3.getter();
}

uint64_t sub_751C0()
{
  return type metadata accessor for PUITextStyle();
}

uint64_t sub_751D0()
{
  return type metadata accessor for InteractionContext.Page();
}

uint64_t sub_751E0()
{
  return type metadata accessor for InteractionContext.Origin();
}

uint64_t sub_751F0()
{
  return type metadata accessor for InteractionContext();
}

uint64_t sub_75200()
{
  return PlaybackController.currentTime.getter();
}

uint64_t sub_75210()
{
  return dispatch thunk of PlaybackController.nowPlayingItem.getter();
}

uint64_t sub_75220()
{
  return dispatch thunk of PlaybackController.$nowPlayingItem.getter();
}

uint64_t sub_75230()
{
  return type metadata accessor for PlaybackController.TransportCommand();
}

uint64_t sub_75240()
{
  return dispatch thunk of PlaybackController.isPlayingPublisher.getter();
}

uint64_t sub_75250()
{
  return dispatch thunk of PlaybackController.transportCommandPerformedPublisher.getter();
}

uint64_t sub_75260()
{
  return dispatch thunk of PlaybackController.isPlaying.getter();
}

uint64_t sub_75270()
{
  return type metadata accessor for PlaybackController();
}

uint64_t sub_75280()
{
  return PresentationSource.init(viewController:position:)();
}

uint64_t sub_75290()
{
  return type metadata accessor for PresentationSource.Position();
}

uint64_t sub_752A0()
{
  return type metadata accessor for PresentationSource();
}

uint64_t sub_752B0()
{
  return dispatch_to_main_queue(_:)();
}

uint64_t sub_752C0()
{
  return NowPlayingAlignmentCoordinator.$alignment.getter();
}

uint64_t sub_752D0()
{
  return NowPlayingAlignmentCoordinator.transcriptModel.getter();
}

uint64_t sub_752E0()
{
  return NowPlayingAlignmentCoordinator.$transcriptModel.getter();
}

uint64_t sub_752F0()
{
  return NowPlayingAlignmentCoordinator.fullTimelineAligner.getter();
}

uint64_t sub_75310()
{
  return NowPlayingAlignmentCoordinator.align(asset:to:)();
}

uint64_t sub_75320()
{
  return NowPlayingAlignmentCoordinator.align(_:)();
}

void sub_75330()
{
}

uint64_t sub_75340()
{
  return NowPlayingAlignmentCoordinator.$error.getter();
}

uint64_t sub_75350()
{
  return type metadata accessor for NowPlayingAlignmentCoordinator();
}

uint64_t sub_75360()
{
  return dispatch thunk of TranscriptSyncingStateObserver.isSyncing.setter();
}

uint64_t sub_75370()
{
  return type metadata accessor for TranscriptSentenceSplittingBehavior();
}

uint64_t sub_75380()
{
  return DeviceMetrics.userInterfaceIdiom.getter();
}

uint64_t sub_75390()
{
  return static DeviceMetrics.Layout.== infix(_:_:)();
}

uint64_t sub_753A0()
{
  return type metadata accessor for DeviceMetrics.Layout();
}

uint64_t sub_753B0()
{
  return DeviceMetrics.layout.getter();
}

uint64_t sub_753C0()
{
  return DeviceMetrics.Padding.horizontal.getter();
}

uint64_t sub_753D0()
{
  return type metadata accessor for DeviceMetrics.Padding();
}

uint64_t sub_753E0()
{
  return DeviceMetrics.padding.getter();
}

uint64_t sub_753F0()
{
  return type metadata accessor for DeviceMetrics();
}

uint64_t sub_75400()
{
  return MCUINamespace<A>.deviceMetrics.getter();
}

uint64_t sub_75410()
{
  return MCUINamespace<A>.deviceMetrics.setter();
}

uint64_t sub_75420()
{
  return MCUINamespace<A>.nowPlayingHorizontalPadding.getter();
}

uint64_t sub_75430()
{
  return MCUINamespace<A>.nowPlayingHorizontalPadding.setter();
}

uint64_t sub_75440()
{
  return type metadata accessor for NowPlayingButtonID();
}

uint64_t sub_75450()
{
  return type metadata accessor for NowPlayingViewModel.PlayerStyle();
}

uint64_t sub_75460()
{
  return dispatch thunk of NowPlayingViewModel.selectedContent.getter();
}

uint64_t sub_75470()
{
  return dispatch thunk of NowPlayingViewModel.activeScrubPosition.getter();
}

uint64_t sub_75480()
{
  return type metadata accessor for NowPlayingViewModel();
}

uint64_t sub_75490()
{
  return BackdropLayerHostView.__allocating_init(groupName:)();
}

uint64_t sub_754A0()
{
  return type metadata accessor for BackdropLayerHostView();
}

uint64_t sub_754B0()
{
  return type metadata accessor for NowPlayingHostedContentID();
}

uint64_t sub_754C0()
{
  return NowPlayingBackdropGroupName.getter();
}

uint64_t sub_754D0()
{
  return dispatch thunk of NowPlayingHostedContentSession.deviceMetrics.getter();
}

uint64_t sub_754E0()
{
  return dispatch thunk of NowPlayingHostedContentSession.controlsHidden.setter();
}

uint64_t sub_754F0()
{
  return type metadata accessor for NowPlayingHostedContentSession();
}

uint64_t sub_75520()
{
  return withObservationTracking<A>(_:onChange:)();
}

uint64_t sub_75530()
{
  return ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
}

uint64_t sub_75540()
{
  return ObservationRegistrar.access<A, B>(_:keyPath:)();
}

uint64_t sub_75550()
{
  return ObservationRegistrar.didSet<A, B>(_:keyPath:)();
}

uint64_t sub_75560()
{
  return ObservationRegistrar.willSet<A, B>(_:keyPath:)();
}

uint64_t sub_75570()
{
  return ObservationRegistrar.init()();
}

uint64_t sub_75580()
{
  return type metadata accessor for ObservationRegistrar();
}

uint64_t sub_755A0()
{
  return static CGFloat._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_755B0()
{
  return static CGFloat._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_755C0()
{
  return static CGFloat._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_755D0()
{
  return CGFloat.rounded(_:toScaleOf:)();
}

uint64_t sub_755E0()
{
  return static Podcasts.isBlueMoonEnabled()();
}

uint64_t sub_755F0()
{
  return type metadata accessor for TTMLParserError();
}

uint64_t sub_75600()
{
  return dispatch thunk of TimelineAligner.pauseReadingIfNeeded()();
}

uint64_t sub_75610()
{
  return dispatch thunk of TimelineAligner.resumeReadingIfNeeded()();
}

uint64_t sub_75620()
{
  return TranscriptModel.createParagraphs(with:includeShortDescriptors:completion:)();
}

uint64_t sub_75630()
{
  return static TranscriptModel.maxSecondsBetweenSentencesInParagraph.getter();
}

uint64_t sub_75640()
{
  return TranscriptModel.Word.isDescriptor.getter();
}

uint64_t sub_75650()
{
  return TranscriptModel.Word.text.getter();
}

uint64_t sub_75660()
{
  return TranscriptModel.Word.startTime.getter();
}

uint64_t sub_75670()
{
  return type metadata accessor for TranscriptModel.Word();
}

uint64_t sub_75680()
{
  return TranscriptModel.Speaker.id.getter();
}

uint64_t sub_75690()
{
  return TranscriptModel.Speaker.name.getter();
}

uint64_t sub_756A0()
{
  return type metadata accessor for TranscriptModel.Speaker();
}

uint64_t sub_756B0()
{
  return TranscriptModel.speaker(for:)();
}

uint64_t sub_756C0()
{
  return TranscriptModel.Sentence.SplitStyle.containsStartOfOriginalSentence.getter();
}

uint64_t sub_756D0()
{
  return type metadata accessor for TranscriptModel.Sentence.SplitStyle();
}

uint64_t sub_756E0()
{
  return TranscriptModel.Sentence.splitStyle.getter();
}

uint64_t sub_756F0()
{
  return TranscriptModel.Sentence.words.getter();
}

uint64_t sub_75700()
{
  return type metadata accessor for TranscriptModel.Sentence();
}

uint64_t sub_75710()
{
  return TranscriptModel.duration.getter();
}

uint64_t sub_75720()
{
  return TranscriptModel.speakers.getter();
}

uint64_t sub_75730()
{
  return TranscriptModel.Paragraph.endTime.getter();
}

uint64_t sub_75740()
{
  return TranscriptModel.Paragraph.sentences.getter();
}

uint64_t sub_75750()
{
  return TranscriptModel.Paragraph.startTime.getter();
}

uint64_t sub_75760()
{
  return type metadata accessor for TranscriptModel.Paragraph();
}

uint64_t sub_75770()
{
  return type metadata accessor for TranscriptModel();
}

uint64_t sub_75780()
{
  return TranscriptSource.init(rawValue:)();
}

uint64_t sub_75790()
{
  return TranscriptSource.rawValue.getter();
}

uint64_t sub_757A0()
{
  return type metadata accessor for TranscriptSource();
}

uint64_t sub_757B0()
{
  return dispatch thunk of TimelineAlignment.playerTimestamp(for:)();
}

uint64_t sub_757C0()
{
  return dispatch thunk of TimelineAlignment.nonMatchingRangesInPlayer(with:)();
}

uint64_t sub_757D0()
{
  return dispatch thunk of TimelineAlignment.nonMatchingRangesInReference(with:)();
}

uint64_t sub_757E0()
{
  return TranscriptEpisodeContext.init(adamID:priceType:transcriptIdentifier:)();
}

uint64_t sub_757F0()
{
  return type metadata accessor for TranscriptEpisodeContext();
}

uint64_t sub_75800()
{
  return type metadata accessor for AlignmentCoordinatorError();
}

uint64_t sub_75810()
{
  return TranscriptRequestInformation.episodeAdamId.getter();
}

uint64_t sub_75820()
{
  return TranscriptRequestInformation.ttmlIdentifier.getter();
}

uint64_t sub_75830()
{
  return TranscriptRequestInformation.source.getter();
}

uint64_t sub_75840()
{
  return type metadata accessor for TranscriptRequestInformation();
}

uint64_t sub_75850()
{
  return AdamID.init(rawValue:)();
}

uint64_t sub_75860()
{
  return AdamID.init(_:)();
}

uint64_t sub_75870()
{
  return PriceType.init(rawValue:)();
}

uint64_t sub_75880()
{
  return type metadata accessor for PriceType();
}

uint64_t sub_75890()
{
  return os_log(_:dso:log:_:_:)();
}

uint64_t sub_758A0()
{
  return static Logger.transcripts.getter();
}

uint64_t sub_758B0()
{
  return Logger.logObject.getter();
}

uint64_t sub_758C0()
{
  return type metadata accessor for Logger();
}

uint64_t sub_75930()
{
  return UITextSearchAggregator.foundRange(_:searchString:document:)();
}

void sub_75940()
{
}

uint64_t sub_75950()
{
  return UIBackgroundConfiguration.cornerRadius.setter();
}

uint64_t sub_75960()
{
  return UIBackgroundConfiguration.visualEffect.setter();
}

uint64_t sub_75970()
{
  return UIBackgroundConfiguration.backgroundColor.setter();
}

uint64_t sub_75980()
{
  return type metadata accessor for UITraitUserInterfaceStyle();
}

uint64_t sub_75990()
{
  return NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
}

void sub_759A0(Swift::OpaquePointer a1)
{
}

void sub_759B0(Swift::OpaquePointer a1)
{
}

uint64_t sub_759C0()
{
  return NSDiffableDataSourceSnapshot.init()();
}

uint64_t sub_759D0()
{
  return type metadata accessor for UITraitAccessibilityContrast();
}

uint64_t sub_759E0()
{
  return UIContentUnavailableConfiguration.background.modify();
}

uint64_t sub_759F0()
{
  return UIContentUnavailableConfiguration.secondaryText.setter();
}

uint64_t sub_75A00()
{
  return UIContentUnavailableConfiguration.TextProperties.font.setter();
}

uint64_t sub_75A10()
{
  return UIContentUnavailableConfiguration.textProperties.modify();
}

uint64_t sub_75A20()
{
  return UIContentUnavailableConfiguration.ButtonProperties.primaryAction.setter();
}

uint64_t sub_75A30()
{
  return UIContentUnavailableConfiguration.buttonProperties.modify();
}

uint64_t sub_75A40()
{
  return UIContentUnavailableConfiguration.text.setter();
}

uint64_t sub_75A50()
{
  return static UIContentUnavailableConfiguration.empty()();
}

uint64_t sub_75A60()
{
  return UIContentUnavailableConfiguration.button.modify();
}

uint64_t sub_75A70()
{
  return UIContentUnavailableConfiguration.button.setter();
}

uint64_t sub_75A80()
{
  return static UIContentUnavailableConfiguration.loading()();
}

uint64_t sub_75A90()
{
  return type metadata accessor for UIContentUnavailableConfiguration();
}

uint64_t sub_75AA0()
{
  return UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
}

uint64_t sub_75AB0()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
}

uint64_t sub_75AC0()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
}

uint64_t sub_75AD0()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
}

uint64_t sub_75AE0()
{
  return dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();
}

uint64_t sub_75AF0()
{
  return type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
}

uint64_t sub_75B00()
{
  return type metadata accessor for UICollectionLayoutListConfiguration.FooterMode();
}

uint64_t sub_75B10()
{
  return UICollectionLayoutListConfiguration.init(appearance:)();
}

uint64_t sub_75B20()
{
  return UICollectionLayoutListConfiguration.footerMode.setter();
}

uint64_t sub_75B30()
{
  return UICollectionLayoutListConfiguration.backgroundColor.setter();
}

uint64_t sub_75B40()
{
  return UICollectionLayoutListConfiguration.showsSeparators.setter();
}

uint64_t sub_75B50()
{
  return type metadata accessor for UICollectionLayoutListConfiguration();
}

uint64_t sub_75B60()
{
  return type metadata accessor for UITraitPreferredContentSizeCategory();
}

uint64_t sub_75B70()
{
  return static UIContentUnavailableConfigurationState._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_75B80()
{
  return type metadata accessor for UIContentUnavailableConfigurationState();
}

uint64_t sub_75B90()
{
  return AnyCancellable.store(in:)();
}

uint64_t sub_75BA0()
{
  return AnyCancellable.store<A>(in:)();
}

uint64_t sub_75BB0()
{
  return type metadata accessor for AnyCancellable();
}

uint64_t sub_75BC0()
{
  return ObservableObject<>.objectWillChange.getter();
}

uint64_t sub_75BD0()
{
  return CurrentValueSubject.send(_:)();
}

uint64_t sub_75BE0()
{
  return CurrentValueSubject.init(_:)();
}

uint64_t sub_75BF0()
{
  return Subject<>.send()();
}

uint64_t sub_75C00()
{
  return Published.init(initialValue:)();
}

uint64_t sub_75C10()
{
  return Published.projectedValue.getter();
}

uint64_t sub_75C20()
{
  return Published.projectedValue.setter();
}

uint64_t sub_75C30()
{
  return static Published.subscript.modify();
}

uint64_t sub_75C40()
{
  return static Published.subscript.getter();
}

uint64_t sub_75C50()
{
  return static Published.subscript.setter();
}

uint64_t sub_75C60()
{
  return type metadata accessor for Published();
}

uint64_t sub_75C70()
{
  return Publisher.compactMap<A>(_:)();
}

uint64_t sub_75C80()
{
  return Publisher.handleEvents(receiveSubscription:receiveOutput:receiveCompletion:receiveCancel:receiveRequest:)();
}

uint64_t sub_75C90()
{
  return Publisher.combineLatest<A, B>(_:_:)();
}

uint64_t sub_75CA0()
{
  return Publisher.combineLatest<A>(_:)();
}

uint64_t sub_75CB0()
{
  return Publisher.removeDuplicates(by:)();
}

uint64_t sub_75CC0()
{
  return Publisher.map<A>(_:)();
}

uint64_t sub_75CD0()
{
  return Publisher.map<A>(_:)();
}

uint64_t sub_75CE0()
{
  return Publisher.scan<A>(_:_:)();
}

uint64_t sub_75CF0()
{
  return Publisher.share()();
}

uint64_t sub_75D00()
{
  return Publisher.append<A>(_:)();
}

uint64_t sub_75D10()
{
  return Publisher.filter(_:)();
}

uint64_t sub_75D20()
{
  return Publisher.prefix(_:)();
}

uint64_t sub_75D30()
{
  return Publisher.prepend(_:)();
}

uint64_t sub_75D40()
{
  return Publisher.receive<A>(on:options:)();
}

uint64_t sub_75D50()
{
  return Publisher.throttle<A>(for:scheduler:latest:)();
}

uint64_t sub_75D60()
{
  return Publisher.dropFirst(_:)();
}

uint64_t sub_75D70()
{
  return Publisher<>.removeDuplicates()();
}

uint64_t sub_75D80()
{
  return Publisher<>.sink(receiveValue:)();
}

uint64_t sub_75D90()
{
  return Publisher<>.assign<A>(to:on:)();
}

uint64_t sub_75DA0()
{
  return Animatable<>.animatableData.modify();
}

uint64_t sub_75DB0()
{
  return static Animatable<>._makeAnimatable(value:inputs:)();
}

uint64_t sub_75DC0()
{
  return EdgeInsets.init(_all:)();
}

uint64_t sub_75DD0()
{
  return static ShapeStyle<>.vibrantSecondary.getter();
}

uint64_t sub_75DE0()
{
  return type metadata accessor for Environment.Content();
}

uint64_t sub_75DF0()
{
  return Environment.init<A>(_:)();
}

uint64_t sub_75E00()
{
  return static ViewModifier._makeView(modifier:inputs:body:)();
}

uint64_t sub_75E10()
{
  return static ViewModifier._makeViewList(modifier:inputs:body:)();
}

uint64_t sub_75E20()
{
  return static ViewModifier._viewListCount(inputs:body:)();
}

uint64_t sub_75E30()
{
  return _FrameLayout.init(width:height:alignment:)();
}

uint64_t sub_75E40()
{
  return static AnyTransition.asymmetric(insertion:removal:)();
}

uint64_t sub_75E50()
{
  return AnyTransition.combined(with:)();
}

uint64_t sub_75E60()
{
  return static AnyTransition.identity.getter();
}

uint64_t sub_75E70()
{
  return static AnyTransition.modifier<A>(active:identity:)();
}

uint64_t sub_75E80()
{
  return AnyTransition.animation(_:)();
}

uint64_t sub_75E90()
{
  return withAnimation<A>(_:_:)();
}

uint64_t sub_75EA0()
{
  return ObservedObject.init(wrappedValue:)();
}

uint64_t sub_75EB0()
{
  return GraphicsContext.draw(_:options:)();
}

uint64_t sub_75EC0()
{
  return GraphicsContext.fill(_:with:style:)();
}

uint64_t sub_75ED0()
{
  return static GraphicsContext.Shading.color(_:)();
}

uint64_t sub_75EE0()
{
  return type metadata accessor for GraphicsContext.Shading();
}

uint64_t sub_75EF0()
{
  return GraphicsContext.opacity.setter();
}

uint64_t sub_75F00()
{
  return type metadata accessor for RoundedRectangle();
}

uint64_t sub_75F10()
{
  return type metadata accessor for _BlendModeEffect();
}

uint64_t sub_75F20()
{
  return _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
}

uint64_t sub_75F30()
{
  return EnvironmentValues.deviceMetrics.getter();
}

uint64_t sub_75F40()
{
  return EnvironmentValues.deviceMetrics.setter();
}

uint64_t sub_75F50()
{
  return EnvironmentValues.mcui.getter();
}

uint64_t sub_75F60()
{
  return EnvironmentValues.mcui.setter();
}

uint64_t sub_75F70()
{
  return EnvironmentValues.colorSchemeContrast.getter();
}

uint64_t sub_75F80()
{
  return EnvironmentValues.multilineTextAlignment.getter();
}

uint64_t sub_75F90()
{
  return EnvironmentValues.multilineTextAlignment.setter();
}

uint64_t sub_75FA0()
{
  return EnvironmentValues.font.getter();
}

uint64_t sub_75FB0()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_75FC0()
{
  return EnvironmentValues.init()();
}

uint64_t sub_75FD0()
{
  return type metadata accessor for EnvironmentValues();
}

uint64_t sub_75FE0()
{
  return static VerticalAlignment.center.getter();
}

uint64_t sub_75FF0()
{
  return LocalizedStringKey.init(stringLiteral:)();
}

uint64_t sub_76000()
{
  return type metadata accessor for RoundedCornerStyle();
}

uint64_t sub_76010()
{
  return static ColorSchemeContrast.== infix(_:_:)();
}

uint64_t sub_76020()
{
  return type metadata accessor for ColorSchemeContrast();
}

uint64_t sub_76030()
{
  return static HorizontalAlignment.leading.getter();
}

uint64_t sub_76040()
{
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_76050()
{
  return static HierarchicalShapeStyle.primary.getter();
}

uint64_t sub_76060()
{
  return UIHostingConfiguration.margins(_:_:)();
}

uint64_t sub_76070()
{
  return UIHostingConfiguration<>.init(content:)();
}

uint64_t sub_76080()
{
  return static AccessibilityChildBehavior.combine.getter();
}

uint64_t sub_76090()
{
  return type metadata accessor for AccessibilityChildBehavior();
}

uint64_t sub_760A0()
{
  return static Log.runtimeIssuesLog.getter();
}

uint64_t sub_760B0()
{
  return static Edge.Set.horizontal.getter();
}

uint64_t sub_760C0()
{
  return static Edge.Set.all.getter();
}

uint64_t sub_760D0()
{
  return static Edge.Set.top.getter();
}

uint64_t sub_760E0()
{
  return static Edge.Set.bottom.getter();
}

uint64_t sub_760F0()
{
  return static Edge.Set.leading.getter();
}

uint64_t sub_76100()
{
  return static Edge.Set.vertical.getter();
}

uint64_t sub_76110()
{
  return type metadata accessor for Font.Design();
}

uint64_t sub_76120()
{
  return static Font.Weight.medium.getter();
}

uint64_t sub_76130()
{
  return static Font.Weight.regular.getter();
}

uint64_t sub_76140()
{
  return Font.italic()();
}

uint64_t sub_76150()
{
  return static Font.system(_:design:weight:)();
}

uint64_t sub_76160()
{
  return type metadata accessor for Font.TextStyle();
}

uint64_t sub_76170()
{
  return Path.init(roundedRect:cornerRadius:style:)();
}

uint64_t sub_76180()
{
  return Text.puiFont(_:)();
}

uint64_t sub_76190()
{
  return Text.CustomAttributes.add<A>(_:)();
}

uint64_t sub_761A0()
{
  return Text.CustomAttributes.init()();
}

uint64_t sub_761B0()
{
  return type metadata accessor for Text.CustomAttributes();
}

uint64_t sub_761C0()
{
  return Text.font(_:)();
}

uint64_t sub_761D0()
{
  return Text.Layout.Run.typographicBounds.getter();
}

uint64_t sub_761E0()
{
  return type metadata accessor for Text.Layout.Run();
}

uint64_t sub_761F0()
{
  return Text.Layout.Run.subscript.getter();
}

uint64_t sub_76200()
{
  return type metadata accessor for Text.Layout.Line();
}

uint64_t sub_76210()
{
  return type metadata accessor for Text.Layout();
}

uint64_t sub_76220()
{
  return Text.LayoutKey.AnchoredLayout.layout.getter();
}

uint64_t sub_76230()
{
  return type metadata accessor for Text.LayoutKey.AnchoredLayout();
}

uint64_t sub_76240()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_76250()
{
  return Text.init(_:)();
}

uint64_t sub_76260()
{
  return Text.init<A>(_:)();
}

uint64_t sub_76270()
{
  return static View._makeView(view:inputs:)();
}

uint64_t sub_76280()
{
  return static View._makeViewList(view:inputs:)();
}

uint64_t sub_76290()
{
  return View.environment<A>(_:)();
}

uint64_t sub_762A0()
{
  return View.onTapGesture(count:perform:)();
}

uint64_t sub_762B0()
{
  return static View._viewListCount(inputs:)();
}

uint64_t sub_762C0()
{
  return View.accessibilityLabel<A>(_:)();
}

uint64_t sub_762D0()
{
  return View.accessibilityValue<A>(_:)();
}

uint64_t sub_762E0()
{
  return View.accessibilityElement(children:)();
}

uint64_t sub_762F0()
{
  return View.accessibilityCustomAttribute(_:value:)();
}

uint64_t sub_76300()
{
  return View.onChange<A>(of:initial:_:)();
}

uint64_t sub_76310()
{
  return View.animation<A>(_:body:)();
}

uint64_t sub_76320()
{
  return static Color.black.getter();
}

uint64_t sub_76330()
{
  return static Color.clear.getter();
}

uint64_t sub_76340()
{
  return static Color.white.getter();
}

uint64_t sub_76350()
{
  return Color.opacity(_:)();
}

uint64_t sub_76360()
{
  return Color.init(_:)();
}

uint64_t sub_76370()
{
  return Image.init(systemName:)();
}

uint64_t sub_76380()
{
  return State.init(wrappedValue:)();
}

uint64_t sub_76390()
{
  return State.wrappedValue.getter();
}

uint64_t sub_763A0()
{
  return State.wrappedValue.setter();
}

uint64_t sub_763B0()
{
  return State.projectedValue.getter();
}

uint64_t sub_763C0()
{
  return Button.init(action:label:)();
}

uint64_t sub_763D0()
{
  return Binding.wrappedValue.getter();
}

uint64_t sub_763E0()
{
  return Divider.init()();
}

uint64_t sub_763F0()
{
  return type metadata accessor for Divider();
}

uint64_t sub_76400()
{
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_76410()
{
  return static Alignment.== infix(_:_:)();
}

uint64_t sub_76420()
{
  return static Alignment.center.getter();
}

uint64_t sub_76430()
{
  return static Alignment.leading.getter();
}

uint64_t sub_76440()
{
  return static Alignment.trailing.getter();
}

uint64_t sub_76450()
{
  return Animation.delay(_:)();
}

uint64_t sub_76460()
{
  return static Animation.easeIn(duration:)();
}

uint64_t sub_76470()
{
  return static Animation.linear(duration:)();
}

uint64_t sub_76480()
{
  return static Animation.default.getter();
}

uint64_t sub_76490()
{
  return static Animation.easeInOut(duration:)();
}

uint64_t sub_764A0()
{
  return static Animation.easeInOut.getter();
}

uint64_t sub_764B0()
{
  return type metadata accessor for BlendMode();
}

uint64_t sub_764C0()
{
  return TextProxy.sizeThatFits(_:)();
}

uint64_t sub_764D0()
{
  return static UnitPoint.center.getter();
}

uint64_t sub_764E0()
{
  return static UnitPoint.leading.getter();
}

uint64_t sub_764F0()
{
  return type metadata accessor for DispatchTimeInterval();
}

uint64_t sub_76500()
{
  return type metadata accessor for DispatchWorkItemFlags();
}

uint64_t sub_76510()
{
  return static DispatchQoS.unspecified.getter();
}

uint64_t sub_76520()
{
  return type metadata accessor for DispatchQoS();
}

uint64_t sub_76530()
{
  return static DispatchTime.now()();
}

uint64_t sub_76540()
{
  return type metadata accessor for DispatchTime();
}

uint64_t sub_76550()
{
  return type metadata accessor for DispatchPredicate();
}

uint64_t sub_76560()
{
  return + infix(_:_:)();
}

uint64_t sub_76570()
{
  return + infix(_:_:)();
}

uint64_t sub_76580()
{
  return _dispatchPreconditionTest(_:)();
}

uint64_t sub_76590()
{
  return QueueModel.Chapter.name.getter();
}

uint64_t sub_765A0()
{
  return QueueModel.Chapter.startTime.getter();
}

uint64_t sub_765B0()
{
  return type metadata accessor for QueueModel.Chapter();
}

uint64_t sub_765C0()
{
  return dispatch thunk of MetricsEvent.metricsData.getter();
}

uint64_t sub_765D0()
{
  return dispatch thunk of ContextAction.menuElement(configuration:)();
}

uint64_t sub_765E0()
{
  return dispatch thunk of NetworkObserver.isLikelyToReachRemoteServer.getter();
}

uint64_t sub_765F0()
{
  return NetworkObserver.remoteServerReachabilityPublisher.getter();
}

uint64_t sub_76600()
{
  return NetworkObserver.__allocating_init()();
}

uint64_t sub_76610()
{
  return type metadata accessor for NetworkObserver();
}

uint64_t sub_76620()
{
  return dispatch thunk of ChaptersProviding.chapters(for:)();
}

uint64_t sub_76630()
{
  return static ClickMetricsEvent.makeTranscriptTextClickEvent(for:)();
}

uint64_t sub_76640()
{
  return static ClickMetricsEvent.makeTranscriptSearchClickEvent(adamId:)();
}

uint64_t sub_76650()
{
  return type metadata accessor for ClickMetricsEvent();
}

uint64_t sub_76660()
{
  return ContextActionType.rawValue.getter();
}

uint64_t sub_76670()
{
  return type metadata accessor for ContextActionType();
}

uint64_t sub_76680()
{
  return MetricsController.process(_:)();
}

uint64_t sub_76690()
{
  return type metadata accessor for MetricsController();
}

uint64_t sub_766A0()
{
  return ChaptersController.init()();
}

uint64_t sub_766B0()
{
  return type metadata accessor for ChaptersController();
}

uint64_t sub_766C0()
{
  return NotificationObserver.init(name:object:dispatchOnMainThread:handler:)();
}

uint64_t sub_766D0()
{
  return type metadata accessor for NotificationObserver();
}

uint64_t sub_766E0()
{
  return ContextActionsConfiguration.objectGraph.getter();
}

uint64_t sub_766F0(Swift::String _, Swift::String comment)
{
  return localizedStringReferencingWiFi(_:comment:)(_, comment)._countAndFlagsBits;
}

uint64_t sub_76700()
{
  return dispatch thunk of LibraryActionControllerProtocol.transcriptReportAConcern(episode:completion:)();
}

uint64_t sub_76710()
{
  return FetchTranscriptRequestInformationIntent.init(adamID:priceType:)();
}

uint64_t sub_76720()
{
  return type metadata accessor for FetchTranscriptRequestInformationIntent();
}

uint64_t sub_76730()
{
  return NowPlayingTranscriptSelectionContextActionConfiguration.init(asPartOf:modelObject:selectedText:referenceStartTime:referenceEndTime:playerStartTime:alignmentCoordinator:presentationSource:context:)();
}

uint64_t sub_76740()
{
  return type metadata accessor for NowPlayingTranscriptSelectionContextActionConfiguration();
}

uint64_t sub_76750()
{
  return JSONContext.withActionKinds()();
}

uint64_t sub_76760()
{
  return JSONContext.init()();
}

uint64_t sub_76770()
{
  return type metadata accessor for JSONContext();
}

uint64_t sub_76780()
{
  return type metadata accessor for MetricsData();
}

uint64_t sub_76790()
{
  return BaseObjectGraph.inject<A>(_:)();
}

uint64_t sub_767A0()
{
  return type metadata accessor for BaseObjectGraph();
}

uint64_t sub_767B0()
{
  return BaseObjectGraph.__allocating_init(_:)();
}

uint64_t sub_767D0()
{
  return IntentDispatchOptions.withJSONContext(_:)();
}

uint64_t sub_767E0()
{
  return type metadata accessor for IntentDispatchOptions();
}

uint64_t sub_767F0()
{
  return inject<A, B>(_:from:)();
}

uint64_t sub_76800()
{
  return Promise.then(getResult:on:)();
}

uint64_t sub_76810()
{
  return Promise.reject(_:)();
}

uint64_t sub_76820()
{
  return Promise.resolve(_:)();
}

uint64_t sub_76830()
{
  return Promise.__allocating_init()();
}

NSDictionary sub_76840()
{
  return Dictionary._bridgeToObjectiveC()();
}

uint64_t sub_76850()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_76860()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_76870()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

uint64_t sub_76880()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_76890()
{
  return dispatch thunk of static Comparable.<= infix(_:_:)();
}

uint64_t sub_768A0()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

uint64_t sub_768B0()
{
  return String.LocalizationValue.init(stringLiteral:)();
}

uint64_t sub_768C0()
{
  return type metadata accessor for String.LocalizationValue();
}

NSString sub_768D0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_768E0()
{
  return static String.localizedStringWithFormat(_:_:)();
}

uint64_t sub_768F0()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_76900()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_76910()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_76920()
{
  return String.init<A>(describing:)();
}

uint64_t sub_76930()
{
  return static String._fromSubstring(_:)();
}

uint64_t sub_76940()
{
  return String.hash(into:)();
}

uint64_t sub_76950()
{
  return String.index(_:offsetBy:limitedBy:)();
}

uint64_t sub_76960()
{
  return String.index(_:offsetBy:)();
}

void sub_76970(Swift::String a1)
{
}

Swift::Int sub_76980()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_76990()
{
  return String.distance(from:to:)();
}

uint64_t sub_769B0()
{
  return specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
}

NSArray sub_769C0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_769D0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_769E0()
{
  return Array<A>.content.getter();
}

uint64_t sub_769F0()
{
  return specialized Array._endMutation()();
}

uint64_t sub_76A00()
{
  return specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_76A10()
{
  return static Array.+= infix(_:_:)();
}

uint64_t sub_76A20()
{
  return specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

NSNumber sub_76A30()
{
  return Bool._bridgeToObjectiveC()();
}

uint64_t sub_76A40()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_76A50()
{
  return static MainActor.shared.getter();
}

uint64_t sub_76A60()
{
  return type metadata accessor for MainActor();
}

uint64_t sub_76A70()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_76A80()
{
  return type metadata accessor for TaskPriority();
}

void sub_76A90()
{
}

uint64_t sub_76AA0()
{
  return static Task<>.isCancelled.getter();
}

NSNumber sub_76AB0()
{
  return Double._bridgeToObjectiveC()();
}

uint64_t sub_76AC0()
{
  return Double.roundedDownToNearestMillisecond.getter();
}

uint64_t sub_76AD0()
{
  return Double.write<A>(to:)();
}

NSNumber sub_76AF0()
{
  return Float._bridgeToObjectiveC()();
}

uint64_t sub_76B00()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t sub_76B10()
{
  return Collection.isNotEmpty.getter();
}

uint64_t sub_76B20()
{
  return dispatch thunk of Collection.endIndex.getter();
}

uint64_t sub_76B30()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t sub_76B40()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t sub_76B50()
{
  return CADisplayLink.init(handler:)();
}

uint64_t sub_76B60()
{
  return MPModelObject.uuid.getter();
}

uint64_t sub_76B70()
{
  return MPModelObject.adamID.getter();
}

uint64_t sub_76B80()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_76B90()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_76BA0()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_76BB0()
{
  return static os_log_type_t.default.getter();
}

float sub_76BC0(Swift::Float minimum, Swift::Float maximum, Swift::Float_optional *preferred)
{
  LODWORD(result) = CAFrameRateRange.init(minimum:maximum:preferred:)(minimum, maximum, preferred);
  return result;
}

uint64_t sub_76BD0()
{
  return UICollectionView.CellRegistration.init(handler:)();
}

uint64_t sub_76BE0()
{
  return UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
}

uint64_t sub_76BF0()
{
  return UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
}

uint64_t sub_76C00()
{
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
}

uint64_t sub_76C10()
{
  return UIViewController.registerForTraitChanges<A>(_:handler:)();
}

uint64_t sub_76C20()
{
  return UIViewController.contentUnavailableConfiguration.setter();
}

uint64_t sub_76C30()
{
  return static OS_dispatch_queue.transcriptsPreparationQueue.getter();
}

uint64_t sub_76C40()
{
  return type metadata accessor for OS_dispatch_queue.Attributes();
}

uint64_t sub_76C50()
{
  return OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
}

uint64_t sub_76C60()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerOptions();
}

uint64_t sub_76C70()
{
  return OS_dispatch_queue.SchedulerTimeType.Stride.init(floatLiteral:)();
}

uint64_t sub_76C80()
{
  return type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
}

uint64_t sub_76C90()
{
  return type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
}

uint64_t sub_76CA0()
{
  return static OS_dispatch_queue.main.getter();
}

uint64_t sub_76CB0()
{
  return OS_dispatch_queue.async(group:qos:flags:execute:)();
}

uint64_t sub_76CC0()
{
  return OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
}

uint64_t sub_76CD0()
{
  return type metadata accessor for OS_dispatch_source.TimerFlags();
}

uint64_t sub_76CE0()
{
  return static OS_dispatch_source.makeTimerSource(flags:queue:)();
}

uint64_t sub_76CF0()
{
  return OS_dispatch_source.setEventHandler(qos:flags:handler:)();
}

void sub_76D00()
{
}

void sub_76D10()
{
}

uint64_t sub_76D20()
{
  return type metadata accessor for NSNotificationCenter.Publisher();
}

uint64_t sub_76D30()
{
  return NSNotificationCenter.publisher(for:object:)();
}

uint64_t sub_76D40()
{
  return UICollectionViewCell.contentConfiguration.setter();
}

uint64_t sub_76D50()
{
  return NSManagedObjectContext.performAndPublish<A>(queue:_:)();
}

uint64_t sub_76D60()
{
  return NSDirectionalEdgeInsets.init(topBottom:sides:)();
}

uint64_t sub_76D70()
{
  return OS_dispatch_source_timer.schedule(deadline:repeating:leeway:)();
}

uint64_t sub_76D80()
{
  return static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
}

uint64_t sub_76D90()
{
  return UITextSearchingFindSession.init<A>(searchableObject:)();
}

uint64_t sub_76DA0()
{
  return UIPopoverPresentationControllerSourceItem.frame(in:)();
}

unint64_t sub_76DB0(Swift::Double seconds, Swift::Int32 preferredTimescale)
{
  return (unint64_t)CMTime.init(seconds:preferredTimescale:)(seconds, preferredTimescale);
}

uint64_t sub_76DC0()
{
  return CMTime.seconds.getter();
}

uint64_t sub_76DD0()
{
  return static UIFont.calloutEmph.getter();
}

uint64_t sub_76DE0()
{
  return static UIFont.title3.getter();
}

uint64_t sub_76DF0()
{
  return static UIFont.emphasizedPreferredFont(forTextStyle:)();
}

UIMenu sub_76E00(Swift::String title, Swift::String_optional subtitle, UIImage_optional image, UIMenuIdentifier_optional identifier, UIMenuOptions options, UIMenuElementSize preferredElementSize, Swift::OpaquePointer children)
{
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(title, subtitle, image, identifier, options, preferredElementSize, children);
}

uint64_t sub_76E10()
{
  return UIView.interactionContext.getter();
}

uint64_t sub_76E20()
{
  return UIView.registerForTraitChanges<A>(_:handler:)();
}

NSNumber sub_76E30(Swift::Double floatLiteral)
{
  return NSNumber.init(floatLiteral:)(floatLiteral);
}

Swift::Int sub_76E40(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t sub_76E50()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_76E60()
{
  return NSObject.hash(into:)();
}

uint64_t sub_76E70()
{
  return UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
}

uint64_t sub_76E80()
{
  return UIButton.Configuration.background.modify();
}

uint64_t sub_76E90()
{
  return type metadata accessor for UIButton.Configuration.CornerStyle();
}

uint64_t sub_76EA0()
{
  return UIButton.Configuration.cornerStyle.setter();
}

uint64_t sub_76EB0()
{
  return UIButton.Configuration.imagePadding.setter();
}

uint64_t sub_76EC0()
{
  return UIButton.Configuration.contentInsets.setter();
}

uint64_t sub_76ED0()
{
  return UIButton.Configuration.attributedTitle.setter();
}

uint64_t sub_76EE0()
{
  return UIButton.Configuration.baseBackgroundColor.setter();
}

uint64_t sub_76EF0()
{
  return UIButton.Configuration.baseForegroundColor.setter();
}

uint64_t sub_76F00()
{
  return UIButton.Configuration.image.setter();
}

uint64_t sub_76F10()
{
  return static UIButton.Configuration.plain()();
}

uint64_t sub_76F20()
{
  return UIButton.Configuration.title.setter();
}

uint64_t sub_76F30()
{
  return static UIButton.Configuration.filled()();
}

uint64_t sub_76F40()
{
  return static UIButton.Configuration.bordered()();
}

uint64_t sub_76F50()
{
  return type metadata accessor for UIButton.Configuration();
}

uint64_t sub_76F60()
{
  return UIButton.configuration.setter();
}

uint64_t sub_76F70()
{
  return Optional.debugDescription.getter();
}

uint64_t sub_76F80()
{
  return type metadata accessor for Optional();
}

uint64_t sub_76F90()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_76FA0()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_76FB0()
{
  return StringProtocol.range<A>(of:options:range:locale:)();
}

uint64_t sub_76FC0()
{
  return BinaryInteger.description.getter();
}

uint64_t sub_76FD0()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_76FE0()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_76FF0()
{
  return _HashTable.previousHole(before:)();
}

Swift::Int sub_77000(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_77010()
{
  return static AnyHashable.== infix(_:_:)();
}

uint64_t sub_77020()
{
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_77030()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_77040()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_77050()
{
  return static _SetStorage.allocate(capacity:)();
}

void sub_77060(Swift::Int a1)
{
}

uint64_t sub_77070()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_77080()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_77090()
{
  return specialized _ArrayBuffer._consumeAndCreateNew(bufferIsUnique:minimumCapacity:growForAppend:)();
}

uint64_t sub_770A0()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_770B0()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_770C0()
{
  return specialized ContiguousArray._endMutation()();
}

uint64_t sub_770D0()
{
  return specialized ContiguousArray.reserveCapacity(_:)();
}

uint64_t sub_770E0()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_770F0()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_77100()
{
  return _print_unlocked<A, B>(_:_:)();
}

uint64_t sub_77110()
{
  return __CocoaDictionary.makeIterator()();
}

uint64_t sub_77120()
{
  return __CocoaDictionary.count.getter();
}

uint64_t sub_77130()
{
  return __CocoaDictionary.lookup(_:)();
}

uint64_t sub_77140()
{
  return __CocoaDictionary.Iterator.next()();
}

uint64_t sub_77150()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_77160()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_77170()
{
  return _bridgeCocoaArray<A>(_:)();
}

uint64_t sub_77180()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_77190()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_771A0()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_771B0()
{
  return static _DictionaryStorage.convert(_:capacity:)();
}

uint64_t sub_771C0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_771D0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

uint64_t sub_771E0()
{
  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()();
}

Swift::Int sub_771F0(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_77200()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_77210()
{
  return type metadata accessor for FloatingPointRoundingRule();
}

uint64_t sub_77220()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_77230()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_77240()
{
  return dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
}

uint64_t sub_77250()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_77260()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_77270()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_77280()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_77290()
{
  return Error._code.getter();
}

uint64_t sub_772A0()
{
  return Error._domain.getter();
}

uint64_t sub_772B0()
{
  return Error._userInfo.getter();
}

uint64_t sub_772D0()
{
  return Hasher.init(_seed:)();
}

void sub_772E0(Swift::UInt a1)
{
}

void sub_772F0(Swift::UInt8 a1)
{
}

void sub_77300(Swift::UInt32 a1)
{
}

void sub_77310(Swift::UInt64 a1)
{
}

Swift::Int sub_77320()
{
  return Hasher._finalize()();
}

uint64_t sub_77330()
{
  return static Duration.TimeFormatStyle.Pattern.minuteSecond(padMinuteToLength:fractionalSecondsLength:roundFractionalSeconds:)();
}

uint64_t sub_77340()
{
  return static Duration.TimeFormatStyle.Pattern.hourMinuteSecond(padHourToLength:fractionalSecondsLength:roundFractionalSeconds:)();
}

uint64_t sub_77350()
{
  return type metadata accessor for Duration.TimeFormatStyle.Pattern();
}

uint64_t sub_77360()
{
  return type metadata accessor for Duration.TimeFormatStyle();
}

uint64_t sub_77370()
{
  return Duration.formatted<A>(_:)();
}

uint64_t sub_77380()
{
  return Duration.components.getter();
}

uint64_t sub_77390()
{
  return static Duration.< infix(_:_:)();
}

uint64_t sub_773A0()
{
  return static Duration.- infix(_:_:)();
}

uint64_t sub_773B0()
{
  return static Duration.zero.getter();
}

uint64_t sub_773C0()
{
  return static Duration.seconds(_:)();
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return _CGAffineTransformMakeScale(retstr, sx, sy);
}

CGAffineTransform *__cdecl CGAffineTransformMakeTranslation(CGAffineTransform *__return_ptr retstr, CGFloat tx, CGFloat ty)
{
  return _CGAffineTransformMakeTranslation(retstr, tx, ty);
}

BOOL CGRectContainsPoint(CGRect rect, CGPoint point)
{
  return _CGRectContainsPoint(rect, point);
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return _CGRectEqualToRect(rect1, rect2);
}

CGFloat CGRectGetHeight(CGRect rect)
{
  return _CGRectGetHeight(rect);
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  return _CGRectGetMaxY(rect);
}

CGFloat CGRectGetMinY(CGRect rect)
{
  return _CGRectGetMinY(rect);
}

CGFloat CGRectGetWidth(CGRect rect)
{
  return _CGRectGetWidth(rect);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return _malloc(__size);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return _a1;
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_conformsToProtocol2()
{
  return _swift_conformsToProtocol2();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return _swift_getOpaqueTypeConformance2();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return _swift_isEscapingClosureAtFileLocation();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return _swift_isUniquelyReferenced_nonNull_bridgeObject();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return _swift_unknownObjectWeakAssign();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return _swift_unknownObjectWeakDestroy();
}

uint64_t swift_unknownObjectWeakInit()
{
  return _swift_unknownObjectWeakInit();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return _swift_unknownObjectWeakLoadStrong();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_weakDestroy()
{
  return _swift_weakDestroy();
}

uint64_t swift_weakInit()
{
  return _swift_weakInit();
}

uint64_t swift_weakLoadStrong()
{
  return _swift_weakLoadStrong();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}