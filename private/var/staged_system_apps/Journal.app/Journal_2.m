id sub_100162D88()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullScreenUnsupportedItemView();
  return [super dealloc];
}

uint64_t type metadata accessor for FullScreenUnsupportedItemView()
{
  return self;
}

uint64_t sub_100162F38()
{
  v1[3] = v0;
  uint64_t v2 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[7] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[8] = v4;
  v1[9] = v3;
  return _swift_task_switch(sub_10016302C, v4, v3);
}

uint64_t sub_10016302C()
{
  uint64_t v1 = *(void *)(v0[3] + OBJC_IVAR____TtC7Journal16EntryDebugInfoVC_entry);
  uint64_t v2 = *(void **)(v1 + 32);
  v0[10] = v2;
  id v3 = v2;
  id v4 = [v3 managedObjectContext];
  if (!v4) {
    id v4 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:2];
  }
  uint64_t v6 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v7 = v0[4];
  type metadata accessor for Journaling.EntryViewModel();
  swift_allocObject();
  uint64_t v8 = sub_10057F170(v3, 0, 0, v4);
  v0[11] = v8;
  v9 = *(void **)(v1 + 24);
  v0[12] = v9;
  uint64_t v10 = swift_allocObject();
  v0[13] = v10;
  *(void *)(v10 + 16) = v3;
  *(void *)(v10 + 24) = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v7);
  id v11 = v3;
  v9;
  swift_retain();
  v12 = (void *)swift_task_alloc();
  v0[14] = v12;
  uint64_t v13 = sub_100010218(&qword_1007FFE70);
  void *v12 = v0;
  v12[1] = sub_100163214;
  uint64_t v14 = v0[6];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 2, v14, sub_100166D44, v10, v13);
}

uint64_t sub_100163214()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 96);
  uint64_t v3 = *(void *)(*v0 + 48);
  uint64_t v4 = *(void *)(*v0 + 40);
  uint64_t v5 = *(void *)(*v0 + 32);
  swift_task_dealloc();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  uint64_t v6 = *(void *)(v1 + 72);
  uint64_t v7 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_1001633D4, v7, v6);
}

uint64_t sub_1001633D4()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

void sub_100163460(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v252 = a2;
  v240 = a3;
  uint64_t v4 = type metadata accessor for Date.FormatStyle.TimeStyle();
  uint64_t v259 = *(void *)(v4 - 8);
  uint64_t v260 = v4;
  __chkstk_darwin(v4);
  v257 = (char *)&v239 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v258 = type metadata accessor for Date.FormatStyle.DateStyle();
  uint64_t v256 = *(void *)(v258 - 8);
  __chkstk_darwin(v258);
  v255 = (char *)&v239 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v263 = type metadata accessor for Date();
  unint64_t v261 = *(void *)(v263 - 8);
  __chkstk_darwin(v263);
  v254 = (char *)&v239 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v8 - 8);
  v250 = (char *)&v239 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v251 = (uint64_t)&v239 - v11;
  __chkstk_darwin(v12);
  v248 = (char *)&v239 - v13;
  __chkstk_darwin(v14);
  uint64_t v249 = (uint64_t)&v239 - v15;
  __chkstk_darwin(v16);
  v246 = (char *)&v239 - v17;
  __chkstk_darwin(v18);
  uint64_t v247 = (uint64_t)&v239 - v19;
  __chkstk_darwin(v20);
  v244 = (char *)&v239 - v21;
  __chkstk_darwin(v22);
  uint64_t v245 = (uint64_t)&v239 - v23;
  __chkstk_darwin(v24);
  v242 = (char *)&v239 - v25;
  __chkstk_darwin(v26);
  uint64_t v243 = (uint64_t)&v239 - v27;
  __chkstk_darwin(v28);
  v265 = (char *)&v239 - v29;
  __chkstk_darwin(v30);
  uint64_t v241 = (uint64_t)&v239 - v31;
  uint64_t v32 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v32 - 8);
  v272 = (char *)&v239 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v262 = (void *)type metadata accessor for URL();
  uint64_t v34 = *(v262 - 1);
  __chkstk_darwin(v262);
  v36 = (char *)&v239 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = type metadata accessor for UUID();
  uint64_t v38 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  v40 = (char *)&v239 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v41 - 8);
  v43 = (char *)&v239 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v44);
  v46 = (char *)&v239 - v45;
  uint64_t v253 = sub_100010218(&qword_1007FC1C8);
  uint64_t v47 = swift_allocObject();
  *(_OWORD *)(v47 + 16) = xmmword_1006D7C30;
  *(void *)(v47 + 32) = 25705;
  *(void *)(v47 + 40) = 0xE200000000000000;
  id v264 = a1;
  id v48 = [a1 id];
  if (v48)
  {
    v49 = v48;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v38 + 56))(v43, 0, 1, v37);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56))(v43, 1, 1, v37);
  }
  sub_10002C4EC((uint64_t)v43, (uint64_t)v46, &qword_100800950);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v46, 1, v37))
  {
    sub_10001457C((uint64_t)v46, &qword_100800950);
    unint64_t v50 = 0xE300000000000000;
    uint64_t v51 = 7104878;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v40, v46, v37);
    sub_10001457C((uint64_t)v46, &qword_100800950);
    uint64_t v51 = UUID.uuidString.getter();
    unint64_t v50 = v52;
    (*(void (**)(char *, uint64_t))(v38 + 8))(v40, v37);
  }
  *(void *)(v47 + 48) = v51;
  *(void *)(v47 + 56) = v50;
  *(void *)(v47 + 64) = 4805205;
  *(void *)(v47 + 72) = 0xE300000000000000;
  id v53 = [v264 objectID];
  id v54 = [v53 URIRepresentation];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v55 = URL.absoluteString.getter();
  uint64_t v57 = v56;
  v58 = *(void (**)(char *, void *))(v34 + 8);
  v59 = v262;
  v58(v36, v262);
  *(void *)(v47 + 80) = v55;
  *(void *)(v47 + 88) = v57;
  *(void *)(v47 + 96) = 0x656D686361747441;
  *(void *)(v47 + 104) = 0xEF7269442073746ELL;
  sub_1005E7338();
  if (v60)
  {
    type metadata accessor for Journaling();
    v61 = v272;
    sub_1005E6B0C((uint64_t)v272);
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, void *))(v34 + 48))(v61, 1, v59) != 1)
    {
      Swift::String v62 = URL.path(percentEncoded:)(1);
      uint64_t countAndFlagsBits = v62._countAndFlagsBits;
      object = v62._object;
      v58(v61, v59);
      goto LABEL_12;
    }
  }
  else
  {
    v61 = v272;
    (*(void (**)(char *, uint64_t, uint64_t, void *))(v34 + 56))(v272, 1, 1, v59);
  }
  sub_10001457C((uint64_t)v61, (uint64_t *)&unk_100800A60);
  object = (void *)0xE300000000000000;
  uint64_t countAndFlagsBits = 7104878;
LABEL_12:
  unint64_t v65 = v263;
  unint64_t v66 = v261;
  *(void *)(v47 + 112) = countAndFlagsBits;
  *(void *)(v47 + 120) = object;
  v67 = sub_1002A63D8(0, 1, 1, _swiftEmptyArrayStorage);
  unint64_t v69 = v67[2];
  unint64_t v68 = v67[3];
  int64_t v70 = v69 + 1;
  if (v69 >= v68 >> 1) {
    goto LABEL_89;
  }
  while (1)
  {
    v67[2] = v70;
    v71 = &v67[3 * v69];
    v71[4] = 0x7972746E45;
    v71[5] = 0xE500000000000000;
    v71[6] = v47;
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = xmmword_1006DB990;
    strcpy((char *)(v72 + 32), "Created Date");
    *(unsigned char *)(v72 + 45) = 0;
    *(_WORD *)(v72 + 46) = -5120;
    id v73 = v264;
    id v74 = [v264 createdDate];
    if (v74)
    {
      v75 = v74;
      uint64_t v76 = (uint64_t)v265;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      v77 = *(char **)(v66 + 56);
      v78 = (char *)v76;
      uint64_t v79 = 0;
    }
    else
    {
      v77 = *(char **)(v66 + 56);
      uint64_t v76 = (uint64_t)v265;
      v78 = v265;
      uint64_t v79 = 1;
    }
    v272 = v77;
    ((void (*)(char *, uint64_t, uint64_t, unint64_t))v77)(v78, v79, 1, v65);
    uint64_t v80 = v241;
    sub_10002C4EC(v76, v241, (uint64_t *)&unk_1007FC470);
    v81 = (void *)(v66 + 48);
    v265 = *(char **)(v66 + 48);
    if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v265)(v80, 1, v65))
    {
      sub_10001457C(v80, (uint64_t *)&unk_1007FC470);
      unint64_t v82 = 0xE300000000000000;
      uint64_t v83 = 7104878;
    }
    else
    {
      v84 = v254;
      (*(void (**)(char *, uint64_t, unint64_t))(v66 + 16))(v254, v80, v65);
      sub_10001457C(v80, (uint64_t *)&unk_1007FC470);
      v85 = v255;
      static Date.FormatStyle.DateStyle.long.getter();
      v86 = v257;
      static Date.FormatStyle.TimeStyle.shortened.getter();
      uint64_t v83 = Date.formatted(date:time:)();
      unint64_t v82 = v87;
      v88 = v86;
      unint64_t v65 = v263;
      (*(void (**)(char *, uint64_t))(v259 + 8))(v88, v260);
      v89 = v85;
      unint64_t v66 = v261;
      (*(void (**)(char *, uint64_t))(v256 + 8))(v89, v258);
      (*(void (**)(char *, unint64_t))(v66 + 8))(v84, v65);
    }
    *(void *)(v72 + 48) = v83;
    *(void *)(v72 + 56) = v82;
    strcpy((char *)(v72 + 64), "Updated Date");
    *(unsigned char *)(v72 + 77) = 0;
    *(_WORD *)(v72 + 78) = -5120;
    id v90 = [v73 updatedDate];
    v262 = v67;
    if (v90)
    {
      v91 = v90;
      uint64_t v92 = (uint64_t)v242;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v93 = 0;
    }
    else
    {
      uint64_t v93 = 1;
      uint64_t v92 = (uint64_t)v242;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, unint64_t))v272)(v92, v93, 1, v65);
    uint64_t v94 = v243;
    sub_10002C4EC(v92, v243, (uint64_t *)&unk_1007FC470);
    if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v265)(v94, 1, v65))
    {
      sub_10001457C(v94, (uint64_t *)&unk_1007FC470);
      unint64_t v95 = 0xE300000000000000;
      uint64_t v96 = 7104878;
    }
    else
    {
      v97 = v254;
      (*(void (**)(char *, uint64_t, unint64_t))(v66 + 16))(v254, v94, v65);
      sub_10001457C(v94, (uint64_t *)&unk_1007FC470);
      v98 = v255;
      static Date.FormatStyle.DateStyle.long.getter();
      v99 = v257;
      static Date.FormatStyle.TimeStyle.shortened.getter();
      uint64_t v96 = Date.formatted(date:time:)();
      unint64_t v95 = v100;
      v101 = v99;
      unint64_t v65 = v263;
      (*(void (**)(char *, uint64_t))(v259 + 8))(v101, v260);
      v102 = v98;
      unint64_t v66 = v261;
      (*(void (**)(char *, uint64_t))(v256 + 8))(v102, v258);
      (*(void (**)(char *, unint64_t))(v66 + 8))(v97, v65);
    }
    *(void *)(v72 + 80) = v96;
    *(void *)(v72 + 88) = v95;
    *(void *)(v72 + 96) = 0x6144207972746E45;
    *(void *)(v72 + 104) = 0xEA00000000006574;
    id v103 = [v73 entryDate];
    if (v103)
    {
      v104 = v103;
      uint64_t v105 = (uint64_t)v244;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v106 = 0;
    }
    else
    {
      uint64_t v106 = 1;
      uint64_t v105 = (uint64_t)v244;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, unint64_t))v272)(v105, v106, 1, v65);
    uint64_t v107 = v245;
    sub_10002C4EC(v105, v245, (uint64_t *)&unk_1007FC470);
    if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v265)(v107, 1, v65))
    {
      sub_10001457C(v107, (uint64_t *)&unk_1007FC470);
      unint64_t v108 = 0xE300000000000000;
      uint64_t v109 = 7104878;
    }
    else
    {
      v110 = v254;
      (*(void (**)(char *, uint64_t, unint64_t))(v66 + 16))(v254, v107, v65);
      sub_10001457C(v107, (uint64_t *)&unk_1007FC470);
      v111 = v255;
      static Date.FormatStyle.DateStyle.long.getter();
      v112 = v257;
      static Date.FormatStyle.TimeStyle.shortened.getter();
      uint64_t v109 = Date.formatted(date:time:)();
      unint64_t v108 = v113;
      v114 = v112;
      unint64_t v65 = v263;
      (*(void (**)(char *, uint64_t))(v259 + 8))(v114, v260);
      v115 = v111;
      unint64_t v66 = v261;
      (*(void (**)(char *, uint64_t))(v256 + 8))(v115, v258);
      (*(void (**)(char *, unint64_t))(v66 + 8))(v110, v65);
    }
    *(void *)(v72 + 112) = v109;
    *(void *)(v72 + 120) = v108;
    *(void *)(v72 + 128) = 0xD000000000000011;
    *(void *)(v72 + 136) = 0x800000010068C9D0;
    id v116 = [v73 dateSource];
    if (v116)
    {
      v117 = v116;
      uint64_t v118 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v120 = v119;
    }
    else
    {
      unint64_t v120 = 0xE300000000000000;
      uint64_t v118 = 7104878;
    }
    *(void *)(v72 + 144) = v118;
    *(void *)(v72 + 152) = v120;
    *(void *)(v72 + 160) = 0xD000000000000011;
    *(void *)(v72 + 168) = 0x800000010068C9F0;
    id v121 = v264;
    id v122 = [v264 bundleDate];
    if (v122)
    {
      v123 = v122;
      uint64_t v124 = (uint64_t)v246;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v125 = 0;
    }
    else
    {
      uint64_t v125 = 1;
      uint64_t v124 = (uint64_t)v246;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, unint64_t))v272)(v124, v125, 1, v65);
    uint64_t v126 = v247;
    sub_10002C4EC(v124, v247, (uint64_t *)&unk_1007FC470);
    if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v265)(v126, 1, v65))
    {
      sub_10001457C(v126, (uint64_t *)&unk_1007FC470);
      unint64_t v127 = 0xE300000000000000;
      uint64_t v128 = 7104878;
    }
    else
    {
      v129 = v254;
      (*(void (**)(char *, uint64_t, unint64_t))(v66 + 16))(v254, v126, v65);
      sub_10001457C(v126, (uint64_t *)&unk_1007FC470);
      v130 = v255;
      static Date.FormatStyle.DateStyle.long.getter();
      v131 = v257;
      static Date.FormatStyle.TimeStyle.shortened.getter();
      uint64_t v128 = Date.formatted(date:time:)();
      unint64_t v127 = v132;
      v133 = v131;
      unint64_t v65 = v263;
      (*(void (**)(char *, uint64_t))(v259 + 8))(v133, v260);
      v134 = v130;
      unint64_t v66 = v261;
      (*(void (**)(char *, uint64_t))(v256 + 8))(v134, v258);
      (*(void (**)(char *, unint64_t))(v66 + 8))(v129, v65);
    }
    *(void *)(v72 + 176) = v128;
    *(void *)(v72 + 184) = v127;
    *(void *)(v72 + 192) = 0x4520656C646E7542;
    *(void *)(v72 + 200) = 0xEF6574614420646ELL;
    id v135 = [v121 bundleEndDate];
    if (v135)
    {
      v136 = v135;
      uint64_t v137 = (uint64_t)v248;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v138 = 0;
    }
    else
    {
      uint64_t v138 = 1;
      uint64_t v137 = (uint64_t)v248;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, unint64_t))v272)(v137, v138, 1, v65);
    uint64_t v139 = v249;
    sub_10002C4EC(v137, v249, (uint64_t *)&unk_1007FC470);
    if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v265)(v139, 1, v65))
    {
      sub_10001457C(v139, (uint64_t *)&unk_1007FC470);
      unint64_t v140 = 0xE300000000000000;
      uint64_t v141 = 7104878;
    }
    else
    {
      v142 = v254;
      (*(void (**)(char *, uint64_t, unint64_t))(v66 + 16))(v254, v139, v65);
      sub_10001457C(v139, (uint64_t *)&unk_1007FC470);
      v143 = v255;
      static Date.FormatStyle.DateStyle.long.getter();
      v144 = v257;
      static Date.FormatStyle.TimeStyle.shortened.getter();
      uint64_t v141 = Date.formatted(date:time:)();
      unint64_t v140 = v145;
      v146 = v144;
      unint64_t v65 = v263;
      (*(void (**)(char *, uint64_t))(v259 + 8))(v146, v260);
      v147 = v143;
      unint64_t v66 = v261;
      (*(void (**)(char *, uint64_t))(v256 + 8))(v147, v258);
      (*(void (**)(char *, unint64_t))(v66 + 8))(v142, v65);
    }
    *(void *)(v72 + 208) = v141;
    *(void *)(v72 + 216) = v140;
    *(void *)(v72 + 224) = 0xD000000000000013;
    *(void *)(v72 + 232) = 0x800000010068CA10;
    id v148 = [v121 momentDateForSorting];
    if (v148)
    {
      v149 = v148;
      uint64_t v150 = (uint64_t)v250;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v151 = 0;
    }
    else
    {
      uint64_t v151 = 1;
      uint64_t v150 = (uint64_t)v250;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, unint64_t))v272)(v150, v151, 1, v65);
    uint64_t v152 = v251;
    sub_10002C4EC(v150, v251, (uint64_t *)&unk_1007FC470);
    if (((unsigned int (*)(uint64_t, uint64_t, unint64_t))v265)(v152, 1, v65))
    {
      sub_10001457C(v152, (uint64_t *)&unk_1007FC470);
      unint64_t v153 = 0xE300000000000000;
      v154 = v262;
      uint64_t v155 = 7104878;
    }
    else
    {
      v156 = v254;
      (*(void (**)(char *, uint64_t, unint64_t))(v66 + 16))(v254, v152, v65);
      sub_10001457C(v152, (uint64_t *)&unk_1007FC470);
      unint64_t v157 = v66;
      v158 = v255;
      static Date.FormatStyle.DateStyle.long.getter();
      unint64_t v159 = v65;
      v160 = v257;
      static Date.FormatStyle.TimeStyle.shortened.getter();
      uint64_t v155 = Date.formatted(date:time:)();
      unint64_t v153 = v161;
      (*(void (**)(char *, uint64_t))(v259 + 8))(v160, v260);
      (*(void (**)(char *, uint64_t))(v256 + 8))(v158, v258);
      v162 = *(void (**)(char *, unint64_t))(v157 + 8);
      v81 = (void *)(v157 + 8);
      v162(v156, v159);
      v154 = v262;
    }
    *(void *)(v72 + 240) = v155;
    *(void *)(v72 + 248) = v153;
    *(void *)(v72 + 256) = 0xD000000000000012;
    *(void *)(v72 + 264) = 0x800000010068CA30;
    if (qword_1007F6CD8 != -1) {
      swift_once();
    }
    swift_retain();
    AppStorage.wrappedValue.getter();
    swift_release();
    uint64_t v163 = 0x7461447972746E65;
    if ((_BYTE)v268) {
      uint64_t v163 = 0x6144746E656D6F6DLL;
    }
    unint64_t v164 = 0xEA00000000006574;
    if (!(_BYTE)v268) {
      unint64_t v164 = 0xE900000000000065;
    }
    *(void *)(v72 + 272) = v163;
    *(void *)(v72 + 280) = v164;
    *(void *)(v72 + 288) = 0xD000000000000010;
    *(void *)(v72 + 296) = 0x800000010068CA50;
    swift_retain();
    AppStorage.wrappedValue.getter();
    swift_release();
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v165 = swift_allocObject();
    *(_OWORD *)(v165 + 16) = xmmword_1006D6D00;
    sub_100166D60();
    swift_getKeyPath();
    *(void *)(v165 + 32) = NSSortDescriptor.init<A, B>(keyPath:ascending:)();
    uint64_t v268 = v165;
    specialized Array._endMutation()();
    uint64_t v166 = Array.description.getter();
    uint64_t v168 = v167;
    swift_bridgeObjectRelease();
    *(void *)(v72 + 304) = v166;
    *(void *)(v72 + 312) = v168;
    *(void *)(v72 + 320) = 0xD000000000000019;
    *(void *)(v72 + 328) = 0x800000010068CA70;
    LOWORD(v268) = (unsigned __int16)[v121 minimumSupportedAppVersion];
    *(void *)(v72 + 336) = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v72 + 344) = v169;
    unint64_t v171 = v154[2];
    unint64_t v170 = v154[3];
    if (v171 >= v170 >> 1) {
      v154 = sub_1002A63D8((void *)(v170 > 1), v171 + 1, 1, v154);
    }
    v154[2] = v171 + 1;
    v262 = v154;
    v172 = &v154[3 * v171];
    v173 = (void *)0xE500000000000000;
    v172[4] = 0x7365746144;
    v172[5] = 0xE500000000000000;
    v172[6] = v72;
    int64_t v70 = swift_allocObject();
    *(_OWORD *)(v70 + 16) = xmmword_1006D70D0;
    *(void *)(v70 + 32) = 1954047316;
    *(void *)(v70 + 40) = 0xE400000000000000;
    unint64_t v66 = 0xE000000000000000;
    uint64_t v268 = 0;
    unint64_t v269 = 0xE000000000000000;
    id v174 = [v121 text];
    if (v174)
    {
      v175 = v174;
      uint64_t v176 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v178 = v177;

      switch(v178 >> 62)
      {
        case 1uLL:
          sub_100040DD0(v176, v178);
          if (__OFSUB__(HIDWORD(v176), v176))
          {
            __break(1u);
LABEL_146:
            __break(1u);
            JUMPOUT(0x10016539CLL);
          }
          return;
        case 2uLL:
          v81 = *(void **)(v176 + 16);
          uint64_t v179 = *(void *)(v176 + 24);
          sub_100040DD0(v176, v178);
          if (__OFSUB__(v179, v81))
          {
            __break(1u);
            goto LABEL_67;
          }
          break;
        default:
LABEL_67:
          sub_100040DD0(v176, v178);
          break;
      }
    }
    id v180 = v264;
    v181._uint64_t countAndFlagsBits = sub_1005879C4();
    String.append(_:)(v181);
    swift_bridgeObjectRelease();
    v182._uint64_t countAndFlagsBits = 0x736574796220;
    v182._object = (void *)0xE600000000000000;
    String.append(_:)(v182);
    unint64_t v183 = v269;
    *(void *)(v70 + 48) = v268;
    *(void *)(v70 + 56) = v183;
    *(void *)(v70 + 64) = 0x656C746954;
    *(void *)(v70 + 72) = 0xE500000000000000;
    uint64_t v268 = 0;
    unint64_t v269 = 0xE000000000000000;
    id v184 = [v180 title];
    if (v184)
    {
      v185 = v184;
      uint64_t v186 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v188 = v187;

      switch(v188 >> 62)
      {
        case 1uLL:
          sub_100040DD0(v186, v188);
          if (!__OFSUB__(HIDWORD(v186), v186)) {
            break;
          }
          goto LABEL_146;
        case 2uLL:
          v173 = *(void **)(v186 + 16);
          uint64_t v189 = *(void *)(v186 + 24);
          sub_100040DD0(v186, v188);
          if (!__OFSUB__(v189, v173)) {
            break;
          }
          __break(1u);
LABEL_75:
          sub_100040DD0(v186, v188);
          break;
        default:
          goto LABEL_75;
      }
    }
    v190._uint64_t countAndFlagsBits = sub_1005879C4();
    String.append(_:)(v190);
    swift_bridgeObjectRelease();
    v191._uint64_t countAndFlagsBits = 0x736574796220;
    v191._object = (void *)0xE600000000000000;
    String.append(_:)(v191);
    unint64_t v192 = v269;
    *(void *)(v70 + 80) = v268;
    *(void *)(v70 + 88) = v192;
    *(void *)(v70 + 96) = 0xD000000000000020;
    *(void *)(v70 + 104) = 0x800000010068CA90;
    uint64_t v193 = v252;
    sub_100585038();
    uint64_t v268 = sub_1005879C4();
    unint64_t v269 = v194;
    v195._uint64_t countAndFlagsBits = 0x736574796220;
    v195._object = (void *)0xE600000000000000;
    String.append(_:)(v195);
    unint64_t v196 = v269;
    *(void *)(v70 + 112) = v268;
    *(void *)(v70 + 120) = v196;
    *(void *)(v70 + 128) = 0x53206C6175746341;
    *(void *)(v70 + 136) = 0xEB00000000657A69;
    uint64_t v270 = 0;
    unint64_t v271 = 0xE000000000000000;
    v197 = (unint64_t *)(v193 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
    swift_beginAccess();
    unint64_t v65 = *v197;
    if (*v197 >> 62) {
      break;
    }
    uint64_t v47 = *(void *)((v65 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v47) {
      goto LABEL_91;
    }
LABEL_78:
    if (v47 < 1)
    {
      __break(1u);
LABEL_143:
      __break(1u);
      goto LABEL_144;
    }
    v67 = 0;
    v81 = 0;
    while (1)
    {
      v199 = (v65 & 0xC000000000000001) != 0
           ? (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v65 + 8 * (void)v81 + 32);
      unint64_t v69 = (unint64_t)v199;
      if ((sub_1005419E4(v199[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type], (uint64_t)&_swiftEmptySetSingleton) & 1) == 0) {
        break;
      }

LABEL_81:
      v81 = (void *)((char *)v81 + 1);
      if ((void *)v47 == v81) {
        goto LABEL_91;
      }
    }
    unint64_t v66 = sub_10057DBBC();

    BOOL v200 = __OFADD__(v67, v66);
    v67 = (void *)((char *)v67 + v66);
    if (!v200) {
      goto LABEL_81;
    }
    __break(1u);
LABEL_89:
    v67 = sub_1002A63D8((void *)(v68 > 1), v70, 1, v67);
  }
  swift_bridgeObjectRetain();
  uint64_t v47 = _CocoaArrayWrapper.endIndex.getter();
  if (v47) {
    goto LABEL_78;
  }
LABEL_91:
  swift_bridgeObjectRelease();
  v201._uint64_t countAndFlagsBits = sub_1005879C4();
  String.append(_:)(v201);
  swift_bridgeObjectRelease();
  v202._uint64_t countAndFlagsBits = 0x736574796220;
  v202._object = (void *)0xE600000000000000;
  String.append(_:)(v202);
  unint64_t v203 = v271;
  *(void *)(v70 + 144) = v270;
  *(void *)(v70 + 152) = v203;
  v173 = v262;
  unint64_t v65 = v262[2];
  unint64_t v204 = v262[3];
  uint64_t v47 = v65 + 1;
  if (v65 >= v204 >> 1) {
    v173 = sub_1002A63D8((void *)(v204 > 1), v65 + 1, 1, v262);
  }
  v197 = (unint64_t *)v264;
  v173[2] = v47;
  v205 = &v173[3 * v65];
  v205[4] = 0x73657A6953;
  v205[5] = 0xE500000000000000;
  v205[6] = v70;
  unint64_t v206 = sub_1000E5020();
  int64_t v70 = v206;
  if (v206 >> 62)
  {
    uint64_t v207 = _CocoaArrayWrapper.endIndex.getter();
    v262 = v173;
    if (!v207) {
      goto LABEL_128;
    }
LABEL_95:
    if (v207 >= 1)
    {
      v208 = 0;
      unint64_t v263 = v70 & 0xC000000000000001;
      v272 = (char *)_swiftEmptyArrayStorage;
      id v264 = (id)v207;
      v265 = (char *)v70;
      do
      {
        if (v263) {
          id v209 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v209 = *(id *)(v70 + 8 * (void)v208 + 32);
        }
        v210 = v209;
        v208 = (char *)v208 + 1;
        unint64_t v211 = 0xE500000000000000;
        uint64_t v212 = 0x6F746F6870;
        v213 = sub_10017E76C();
        switch(v213[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type])
        {
          case 1:
            unint64_t v211 = 0xE90000000000006FLL;
            uint64_t v212 = 0x746F68506576696CLL;
            break;
          case 2:
            uint64_t v212 = 0x6F65646976;
            break;
          case 3:
            uint64_t v212 = 0x636973756DLL;
            break;
          case 4:
            unint64_t v211 = 0xE700000000000000;
            uint64_t v212 = 0x74736163646F70;
            break;
          case 5:
            unint64_t v211 = 0xE400000000000000;
            uint64_t v212 = 1802465122;
            break;
          case 6:
            uint64_t v212 = 0x6F69647561;
            break;
          case 7:
            uint64_t v212 = 0x7469736976;
            break;
          case 8:
            unint64_t v211 = 0xEB0000000070614DLL;
            uint64_t v212 = 0x6E695069746C756DLL;
            break;
          case 9:
            unint64_t v211 = 0xEA00000000007061;
            uint64_t v212 = 0x4D636972656E6567;
            break;
          case 0xA:
            unint64_t v211 = 0xE400000000000000;
            uint64_t v212 = 1802398060;
            break;
          case 0xB:
            unint64_t v211 = 0xE700000000000000;
            uint64_t v212 = 0x746361746E6F63;
            break;
          case 0xC:
            unint64_t v211 = 0xEB000000006E6F63;
            uint64_t v212 = 0x4974756F6B726F77;
            break;
          case 0xD:
            unint64_t v211 = 0xEC0000006574756FLL;
            uint64_t v212 = 0x5274756F6B726F77;
            break;
          case 0xE:
            uint64_t v212 = 0x697463656C666572;
            unint64_t v211 = 0xEA00000000006E6FLL;
            break;
          case 0xF:
            unint64_t v211 = 0xEB00000000646E69;
            uint64_t v212 = 0x4D664F6574617473;
            break;
          case 0x10:
            unint64_t v211 = 0xEE00797469766974;
            uint64_t v212 = 0x63416E6F69746F6DLL;
            break;
          case 0x11:
            unint64_t v211 = 0xEF616964654D7974;
            uint64_t v212 = 0x7261506472696874;
            break;
          case 0x12:
            unint64_t v211 = 0xEB00000000726564;
            uint64_t v212 = 0x6C6F686563616C70;
            break;
          case 0x13:
            unint64_t v211 = 0xEB00000000746E65;
            uint64_t v212 = 0x76456B6165727473;
            break;
          case 0x14:
            unint64_t v211 = 0xE700000000000000;
            uint64_t v212 = 0x6E776F6E6B6E75;
            break;
          default:
            break;
        }
        uint64_t v214 = sub_100165410();
        uint64_t v216 = v215;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v272 = (char *)sub_1002A63C4(0, *((void *)v272 + 2) + 1, 1, v272);
        }
        unint64_t v218 = *((void *)v272 + 2);
        unint64_t v217 = *((void *)v272 + 3);
        if (v218 >= v217 >> 1) {
          v272 = (char *)sub_1002A63C4((void *)(v217 > 1), v218 + 1, 1, v272);
        }
        v219 = v272;
        *((void *)v272 + 2) = v218 + 1;
        v220 = &v219[32 * v218];
        *((void *)v220 + 4) = v212;
        *((void *)v220 + 5) = v211;
        *((void *)v220 + 6) = v214;
        *((void *)v220 + 7) = v216;

        int64_t v70 = (int64_t)v265;
      }
      while (v264 != v208);
      goto LABEL_129;
    }
    goto LABEL_143;
  }
  unint64_t v198 = v206 & 0xFFFFFFFFFFFFFF8;
  uint64_t v207 = *(void *)((v206 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v262 = v173;
  if (v207) {
    goto LABEL_95;
  }
LABEL_128:
  v272 = (char *)_swiftEmptyArrayStorage;
LABEL_129:
  swift_bridgeObjectRelease();
  v221 = v262;
  unint64_t v223 = v262[2];
  unint64_t v222 = v262[3];
  if (v223 >= v222 >> 1) {
    v221 = sub_1002A63D8((void *)(v222 > 1), v223 + 1, 1, v262);
  }
  v221[2] = v223 + 1;
  v224 = &v221[3 * v223];
  v224[4] = 0x737465737341;
  v224[5] = 0xE600000000000000;
  v224[6] = v272;
  v225 = (void *)sub_100339674();
  if (v225)
  {
    v81 = v221;
    uint64_t v226 = sub_10033AA5C(v225);
    int64_t v70 = v227;
    uint64_t v270 = 0;
    unint64_t v271 = 0xE000000000000000;
    uint64_t v266 = v226;
    char v267 = v228 & 1;
    _print_unlocked<A, B>(_:_:)();
    uint64_t v47 = v270;
    v173 = (void *)v271;
    v197 = sub_1002A63C4(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v66 = v197[2];
    unint64_t v198 = v197[3];
    unint64_t v65 = v66 + 1;
    if (v66 < v198 >> 1)
    {
LABEL_133:
      v197[2] = v65;
      v229 = &v197[4 * v66];
      v229[4] = 1701869908;
      v229[5] = 0xE400000000000000;
      v229[6] = v47;
      v229[7] = (unint64_t)v173;
      if (v70)
      {
        id v230 = [(id)v70 string];
        uint64_t v231 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v233 = v232;

        unint64_t v65 = v197[2];
      }
      else
      {
        uint64_t v231 = 0;
        unint64_t v233 = 0xE000000000000000;
      }
      unint64_t v234 = v197[3];
      if (v65 >= v234 >> 1) {
        v197 = sub_1002A63C4((void *)(v234 > 1), v65 + 1, 1, v197);
      }
      v197[2] = v65 + 1;
      v235 = &v197[4 * v65];
      v235[4] = 0x74706D6F7250;
      v235[5] = 0xE600000000000000;
      v235[6] = v231;
      v235[7] = v233;
      v221 = v81;
      unint64_t v237 = v81[2];
      unint64_t v236 = v81[3];
      if (v237 >= v236 >> 1) {
        v221 = sub_1002A63D8((void *)(v236 > 1), v237 + 1, 1, v81);
      }
      v221[2] = v237 + 1;
      v238 = &v221[3 * v237];
      v238[4] = 0x697463656C666552;
      v238[5] = 0xEA00000000006E6FLL;
      v238[6] = v197;

      goto LABEL_141;
    }
LABEL_144:
    v197 = sub_1002A63C4((void *)(v198 > 1), v65, 1, v197);
    goto LABEL_133;
  }
LABEL_141:
  void *v240 = v221;
}

uint64_t sub_100165410()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v2 - 8);
  uint64_t v189 = (char *)&v173 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  unint64_t v188 = (char *)&v173 - v5;
  uint64_t v187 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v187);
  uint64_t v190 = (uint64_t)&v173 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218((uint64_t *)&unk_100804090);
  __chkstk_darwin(v7 - 8);
  v185 = (void (**)(char *, uint64_t))((char *)&v173 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_100010218(&qword_1007F9E10);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v173 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date.FormatStyle.TimeStyle();
  uint64_t v181 = *(void *)(v12 - 8);
  unint64_t v182 = v12;
  __chkstk_darwin(v12);
  uint64_t v179 = (char *)&v173 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = type metadata accessor for Date.FormatStyle.DateStyle();
  uint64_t v178 = *(void *)(v180 - 8);
  __chkstk_darwin(v180);
  unint64_t v177 = (char *)&v173 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100010218((uint64_t *)&unk_100804080);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v173 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v18 - 8);
  uint64_t v176 = (uint64_t)&v173 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v175 = (uint64_t)&v173 - v21;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v173 - v23;
  uint64_t v25 = type metadata accessor for URL();
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v173 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = 540697705;
  unint64_t v194 = 0xE400000000000000;
  v29._uint64_t countAndFlagsBits = UUID.uuidString.getter();
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  v30._uint64_t countAndFlagsBits = 2570;
  v30._object = (void *)0xE200000000000000;
  String.append(_:)(v30);
  uint64_t v183 = OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO;
  uint64_t v31 = *(void **)&v0[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
  if (v31)
  {
    id v32 = [v31 objectID];
    id v33 = [v32 URIRepresentation];

    static URL._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v34 = URL.absoluteString.getter();
    v36 = v35;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
    v192._uint64_t countAndFlagsBits = 0x203A697275;
    v192._object = (void *)0xE500000000000000;
    v37._uint64_t countAndFlagsBits = v34;
    v37._object = v36;
    String.append(_:)(v37);
    swift_bridgeObjectRelease();
    v38._uint64_t countAndFlagsBits = 2570;
    v38._object = (void *)0xE200000000000000;
    String.append(_:)(v38);
    String.append(_:)(v192);
    swift_bridgeObjectRelease();
  }
  uint64_t v184 = v26;
  uint64_t v186 = v25;
  uint64_t v39 = 7104878;
  _s10PhotoAssetCMa(0);
  if (swift_dynamicCastClass())
  {
    id v174 = v11;
    v192._uint64_t countAndFlagsBits = 0x203A65746144;
    v192._object = (void *)0xE600000000000000;
    v40 = v1;
    sub_1003F2F2C((uint64_t)v17);
    uint64_t v41 = _s10PhotoAssetC9PhotoDataVMa(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v41 - 8) + 48))(v17, 1, v41) == 1)
    {
      uint64_t v42 = (uint64_t *)&unk_100804080;
      uint64_t v43 = (uint64_t)v17;
    }
    else
    {
      sub_100045944((uint64_t)&v17[*(int *)(v41 + 20)], (uint64_t)v24);
      sub_100166E14((uint64_t)v17, _s10PhotoAssetC9PhotoDataVMa);
      uint64_t v44 = type metadata accessor for Date();
      uint64_t v45 = *(void *)(v44 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v24, 1, v44) != 1)
      {
        id v48 = v177;
        static Date.FormatStyle.DateStyle.long.getter();
        v49 = v179;
        static Date.FormatStyle.TimeStyle.shortened.getter();
        uint64_t v47 = Date.formatted(date:time:)();
        v46 = v50;
        uint64_t v51 = v49;
        uint64_t v39 = 7104878;
        (*(void (**)(char *, unint64_t))(v181 + 8))(v51, v182);
        (*(void (**)(char *, uint64_t))(v178 + 8))(v48, v180);
        (*(void (**)(char *, uint64_t))(v45 + 8))(v24, v44);
        goto LABEL_10;
      }
      uint64_t v42 = (uint64_t *)&unk_1007FC470;
      uint64_t v43 = (uint64_t)v24;
    }
    sub_10001457C(v43, v42);
    v46 = (void *)0xE300000000000000;
    uint64_t v47 = 7104878;
LABEL_10:
    v52._uint64_t countAndFlagsBits = v47;
    v52._object = v46;
    String.append(_:)(v52);
    swift_bridgeObjectRelease();
    v53._uint64_t countAndFlagsBits = 10;
    v53._object = (void *)0xE100000000000000;
    String.append(_:)(v53);
    String.append(_:)(v192);

    swift_bridgeObjectRelease();
    uint64_t v11 = v174;
  }
  _s10VideoAssetCMa(0);
  if (!swift_dynamicCastClass()) {
    goto LABEL_19;
  }
  v192._uint64_t countAndFlagsBits = 0x203A65746144;
  v192._object = (void *)0xE600000000000000;
  id v54 = v1;
  sub_1003F3154((uint64_t)v11);
  uint64_t v55 = _s10VideoAssetC9VideoDataVMa(0);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v55 - 8) + 48))(v11, 1, v55) == 1)
  {
    uint64_t v56 = &qword_1007F9E10;
    uint64_t v57 = (uint64_t)v11;
  }
  else
  {
    uint64_t v58 = v175;
    sub_100045944((uint64_t)&v11[*(int *)(v55 + 20)], v175);
    sub_100166E14((uint64_t)v11, _s10VideoAssetC9VideoDataVMa);
    uint64_t v59 = type metadata accessor for Date();
    uint64_t v60 = *(void *)(v59 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59) != 1)
    {
      v63 = v177;
      static Date.FormatStyle.DateStyle.long.getter();
      v64 = v179;
      static Date.FormatStyle.TimeStyle.shortened.getter();
      uint64_t v62 = Date.formatted(date:time:)();
      v61 = v65;
      unint64_t v66 = v64;
      uint64_t v39 = 7104878;
      (*(void (**)(char *, unint64_t))(v181 + 8))(v66, v182);
      (*(void (**)(char *, uint64_t))(v178 + 8))(v63, v180);
      (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v59);
      goto LABEL_18;
    }
    uint64_t v56 = (uint64_t *)&unk_1007FC470;
    uint64_t v57 = v58;
  }
  sub_10001457C(v57, v56);
  v61 = (void *)0xE300000000000000;
  uint64_t v62 = 7104878;
LABEL_18:
  v67._uint64_t countAndFlagsBits = v62;
  v67._object = v61;
  String.append(_:)(v67);
  swift_bridgeObjectRelease();
  v68._uint64_t countAndFlagsBits = 10;
  v68._object = (void *)0xE100000000000000;
  String.append(_:)(v68);
  String.append(_:)(v192);

  swift_bridgeObjectRelease();
LABEL_19:
  _s14LivePhotoAssetCMa(0);
  if (!swift_dynamicCastClass()) {
    goto LABEL_27;
  }
  v192._uint64_t countAndFlagsBits = 0x203A65746144;
  v192._object = (void *)0xE600000000000000;
  unint64_t v69 = v1;
  int64_t v70 = v185;
  sub_1003F337C((uint64_t)v185);
  uint64_t v71 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  if ((*(unsigned int (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))(*(void *)(v71 - 8)
                                                                                               + 48))(v70, 1, v71) == 1)
  {
    uint64_t v72 = (uint64_t *)&unk_100804090;
    uint64_t v73 = (uint64_t)v70;
  }
  else
  {
    uint64_t v74 = v176;
    sub_100045944((uint64_t)v70 + *(int *)(v71 + 20), v176);
    sub_100166E14((uint64_t)v70, _s14LivePhotoAssetC13LivePhotoDataVMa);
    uint64_t v75 = type metadata accessor for Date();
    uint64_t v76 = *(void *)(v75 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75) != 1)
    {
      uint64_t v79 = v177;
      static Date.FormatStyle.DateStyle.long.getter();
      uint64_t v80 = v179;
      static Date.FormatStyle.TimeStyle.shortened.getter();
      uint64_t v78 = Date.formatted(date:time:)();
      v77 = v81;
      (*(void (**)(char *, unint64_t))(v181 + 8))(v80, v182);
      (*(void (**)(char *, uint64_t))(v178 + 8))(v79, v180);
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v74, v75);
      goto LABEL_26;
    }
    uint64_t v72 = (uint64_t *)&unk_1007FC470;
    uint64_t v73 = v74;
  }
  sub_10001457C(v73, v72);
  v77 = (void *)0xE300000000000000;
  uint64_t v78 = 7104878;
LABEL_26:
  v82._uint64_t countAndFlagsBits = v78;
  v82._object = v77;
  String.append(_:)(v82);
  swift_bridgeObjectRelease();
  v83._uint64_t countAndFlagsBits = 10;
  v83._object = (void *)0xE100000000000000;
  String.append(_:)(v83);
  String.append(_:)(v192);

  swift_bridgeObjectRelease();
LABEL_27:
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    v84 = v1;
  }
  else {
    v84 = 0;
  }
  if (v84)
  {
    v192._uint64_t countAndFlagsBits = 0;
    v192._object = (void *)0xE000000000000000;
    v85 = v1;
    _StringGuts.grow(_:)(25);
    uint64_t v86 = swift_bridgeObjectRelease();
    v192._uint64_t countAndFlagsBits = 0x617461646174654DLL;
    v192._object = (void *)0xEF203A657A697320;
    unint64_t v87 = (void *)(*(uint64_t (**)(uint64_t))((swift_isaMask & *v84) + 0x140))(v86);
    if (v87)
    {
      v88 = v87;
      id v89 = [v87 assetMetaData];

      if (v89)
      {
        uint64_t v90 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v92 = v91;

        uint64_t v39 = 7104878;
        switch(v92 >> 62)
        {
          case 1uLL:
            sub_100040DD0(v90, v92);
            if (!__OFSUB__(HIDWORD(v90), v90)) {
              break;
            }
            goto LABEL_101;
          case 2uLL:
            uint64_t v94 = *(void *)(v90 + 16);
            uint64_t v93 = *(void *)(v90 + 24);
            sub_100040DD0(v90, v92);
            if (!__OFSUB__(v93, v94)) {
              break;
            }
            __break(1u);
LABEL_40:
            sub_100040DD0(v90, v92);
            break;
          default:
            goto LABEL_40;
        }
      }
      else
      {
        uint64_t v39 = 7104878;
      }
    }
    v95._uint64_t countAndFlagsBits = sub_1005879C4();
    String.append(_:)(v95);
    swift_bridgeObjectRelease();
    v96._uint64_t countAndFlagsBits = 0xA0A736574796220;
    v96._object = (void *)0xE800000000000000;
    String.append(_:)(v96);
    String.append(_:)(v192);

    swift_bridgeObjectRelease();
  }
  _s9LinkAssetCMa(0);
  if (swift_dynamicCastClass())
  {
    v97 = v1;
    id v98 = sub_1000D05AC();
    if (v98)
    {
      v99 = v98;
      v192._uint64_t countAndFlagsBits = 0;
      v192._object = (void *)0xE000000000000000;
      _StringGuts.grow(_:)(40);
      swift_bridgeObjectRelease();
      v192._uint64_t countAndFlagsBits = 0xD000000000000015;
      v192._object = (void *)0x800000010068CB40;
      id v100 = [v99 itemType];
      if (v100)
      {
        v101 = v100;
        uint64_t v102 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v104 = v103;
      }
      else
      {
        v104 = (void *)0xE300000000000000;
        uint64_t v102 = 7104878;
      }
      v105._uint64_t countAndFlagsBits = v102;
      v105._object = v104;
      String.append(_:)(v105);
      swift_bridgeObjectRelease();
      v106._uint64_t countAndFlagsBits = 0x614E65746973203BLL;
      v106._object = (void *)0xED0000203D20656DLL;
      String.append(_:)(v106);
      id v107 = [v99 siteName];
      if (v107)
      {
        unint64_t v108 = v107;
        uint64_t v109 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        v111 = v110;
      }
      else
      {
        v111 = (void *)0xE300000000000000;
        uint64_t v109 = 7104878;
      }
      v112._uint64_t countAndFlagsBits = v109;
      v112._object = v111;
      String.append(_:)(v112);
      swift_bridgeObjectRelease();
      v113._uint64_t countAndFlagsBits = 2570;
      v113._object = (void *)0xE200000000000000;
      String.append(_:)(v113);
      String.append(_:)(v192);

      swift_bridgeObjectRelease();
      uint64_t v39 = 7104878;
    }
    else
    {
    }
  }
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    v114 = v1;
  }
  else {
    v114 = 0;
  }
  if (v114)
  {
    v192._uint64_t countAndFlagsBits = 0;
    v192._object = (void *)0xE000000000000000;
    v115 = v1;
    _StringGuts.grow(_:)(50);
    swift_bridgeObjectRelease();
    v192._uint64_t countAndFlagsBits = 0xD000000000000013;
    v192._object = (void *)0x800000010068CB00;
    unint64_t v116 = 0xE400000000000000;
    unint64_t v117 = 1802465122;
    switch(v114[OBJC_IVAR____TtCC7Journal10Journaling9LinkAsset_contentType])
    {
      case 1:
        unint64_t v116 = 0xE700000000000000;
        unint64_t v117 = 0x74736163646F70;
        break;
      case 2:
        unint64_t v116 = 0xE700000000000000;
        unint64_t v117 = 0x656C6369747261;
        break;
      case 3:
        break;
      case 4:
        unint64_t v116 = 0xE200000000000000;
        unint64_t v117 = 30324;
        break;
      case 5:
        unint64_t v117 = 0xD000000000000010;
        unint64_t v116 = 0x80000001006856C0;
        break;
      case 6:
        unint64_t v116 = 0xE300000000000000;
        unint64_t v117 = 7104878;
        break;
      default:
        unint64_t v116 = 0xE500000000000000;
        unint64_t v117 = 0x636973756DLL;
        break;
    }
    unint64_t v118 = v116;
    String.append(_:)(*(Swift::String *)&v117);
    swift_bridgeObjectRelease();
    v119._object = (void *)0x800000010068CB20;
    v119._uint64_t countAndFlagsBits = 0xD000000000000018;
    String.append(_:)(v119);
    unint64_t v120 = *(void **)&v1[v183];
    if (v120 && (id v121 = [v120 contentType]) != 0)
    {
      id v122 = v121;
      uint64_t v39 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v124 = v123;
    }
    else
    {
      uint64_t v124 = (void *)0xE300000000000000;
    }
    v125._uint64_t countAndFlagsBits = v39;
    v125._object = v124;
    String.append(_:)(v125);
    swift_bridgeObjectRelease();
    v126._uint64_t countAndFlagsBits = 658013;
    v126._object = (void *)0xE300000000000000;
    String.append(_:)(v126);
    String.append(_:)(v192);

    swift_bridgeObjectRelease();
  }
  uint64_t v127 = OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments;
  unint64_t v128 = *(void *)&v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments];
  if (v128 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v171 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v171) {
      return v193;
    }
LABEL_70:
    v129._uint64_t countAndFlagsBits = 0xD000000000000017;
    v129._object = (void *)0x800000010068CAC0;
    String.append(_:)(v129);
    v192._uint64_t countAndFlagsBits = 0;
    v192._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(33);
    swift_bridgeObjectRelease();
    v192._uint64_t countAndFlagsBits = 0xD000000000000018;
    v192._object = (void *)0x800000010068CAE0;
    sub_10057DBBC();
    v130._uint64_t countAndFlagsBits = sub_1005879C4();
    String.append(_:)(v130);
    swift_bridgeObjectRelease();
    v131._uint64_t countAndFlagsBits = 0xA736574796220;
    v131._object = (void *)0xE700000000000000;
    String.append(_:)(v131);
    String.append(_:)(v192);
    swift_bridgeObjectRelease();
    unint64_t v132 = *(void *)&v1[v127];
    if (v132 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v133 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v134 = v184;
      if (v133) {
        goto LABEL_72;
      }
    }
    else
    {
      uint64_t v133 = *(void *)((v132 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      uint64_t v134 = v184;
      if (v133)
      {
LABEL_72:
        if (v133 < 1)
        {
          __break(1u);
LABEL_101:
          __break(1u);
          JUMPOUT(0x1001669F4);
        }
        uint64_t v135 = 0;
        unint64_t v182 = v132 & 0xC000000000000001;
        v136 = (unsigned int (**)(char *, uint64_t, uint64_t))(v134 + 48);
        v185 = (void (**)(char *, uint64_t))(v134 + 8);
        uint64_t v137 = &type metadata for Int;
        uint64_t v183 = v133;
        uint64_t v184 = v132;
        do
        {
          if (v182)
          {
            uint64_t v142 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            uint64_t v142 = *(void *)(v132 + 8 * v135 + 32);
            swift_retain();
          }
          ++v135;
          v192._uint64_t countAndFlagsBits = 0;
          v192._object = (void *)0xE000000000000000;
          _StringGuts.grow(_:)(22);
          swift_bridgeObjectRelease();
          v192._uint64_t countAndFlagsBits = 10;
          v192._object = (void *)0xE100000000000000;
          sub_100166DB0(v142 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, v190);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 1u:
              v143 = type metadata accessor for AssetAttachment.AssetType;
              goto LABEL_82;
            case 2u:
              sub_100166E14(v190, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              uint64_t v144 = 0x6F65646976;
              break;
            case 3u:
              sub_100166E14(v190, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              uint64_t v144 = 0x6F69647561;
              break;
            case 4u:
              uint64_t v145 = v190;
              swift_bridgeObjectRelease();
              uint64_t v146 = sub_100010218(&qword_10080B3F0);
              sub_100166E14(v145 + *(int *)(v146 + 48), type metadata accessor for AssetAttachment.AssetType.FilePathType);
              uint64_t v144 = 0x726568746FLL;
              break;
            default:
              v143 = type metadata accessor for AssetAttachment.AssetType.FilePathType;
LABEL_82:
              sub_100166E14(v190, v143);
              uint64_t v144 = 0x6567616D69;
              break;
          }
          unint64_t v147 = 0xE500000000000000;
          String.append(_:)(*(Swift::String *)&v144);
          swift_bridgeObjectRelease();
          v148._uint64_t countAndFlagsBits = 91;
          v148._object = (void *)0xE100000000000000;
          String.append(_:)(v148);
          uint64_t v191 = *(void *)(v142 + 16);
          v149 = v137;
          v150._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v150);
          swift_bridgeObjectRelease();
          v151._uint64_t countAndFlagsBits = 2112093;
          v151._object = (void *)0xE300000000000000;
          String.append(_:)(v151);
          uint64_t v152 = v188;
          sub_1005DA2EC(v188);
          unint64_t v153 = *v136;
          uint64_t v154 = v186;
          if ((*v136)(v152, 1, v186) == 1)
          {
            sub_10001457C((uint64_t)v152, (uint64_t *)&unk_100800A60);
            uint64_t v155 = 0;
            v156 = (void *)0xE000000000000000;
          }
          else
          {
            uint64_t v157 = URL.lastPathComponent.getter();
            v158 = v152;
            uint64_t v155 = v157;
            v156 = v159;
            (*v185)(v158, v154);
          }
          v160._uint64_t countAndFlagsBits = v155;
          v160._object = v156;
          String.append(_:)(v160);
          swift_bridgeObjectRelease();
          v161._uint64_t countAndFlagsBits = 10272;
          v161._object = (void *)0xE200000000000000;
          String.append(_:)(v161);
          v162 = v189;
          sub_1005DA2EC(v189);
          if (v153(v162, 1, v154) == 1)
          {
            sub_10001457C((uint64_t)v162, (uint64_t *)&unk_100800A60);
            uint64_t v163 = 0;
          }
          else
          {
            uint64_t v164 = sub_100464660();
            uint64_t v165 = v162;
            uint64_t v163 = v164;
            char v167 = v166;
            (*v185)(v165, v154);
            if (v167) {
              uint64_t v163 = 0;
            }
          }
          id v168 = [objc_allocWithZone((Class)NSNumberFormatter) init];
          [v168 setNumberStyle:1];
          uint64_t v191 = v163;
          uint64_t v137 = v149;
          id v169 = [v168 stringForObjectValue:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];
          swift_unknownObjectRelease();
          if (v169)
          {
            uint64_t v138 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v139 = v170;
          }
          else
          {

            uint64_t v138 = 0;
            uint64_t v139 = (void *)0xE000000000000000;
          }
          v140._uint64_t countAndFlagsBits = v138;
          v140._object = v139;
          String.append(_:)(v140);
          swift_bridgeObjectRelease();
          v141._uint64_t countAndFlagsBits = 0x29736574796220;
          v141._object = (void *)0xE700000000000000;
          String.append(_:)(v141);
          String.append(_:)(v192);
          swift_release();
          swift_bridgeObjectRelease();
          unint64_t v132 = v184;
        }
        while (v183 != v135);
      }
    }
    swift_bridgeObjectRelease();
    return v193;
  }
  if (*(void *)((v128 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_70;
  }
  return v193;
}

uint64_t sub_100166A98()
{
  return swift_release();
}

id sub_100166AA8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EntryDebugInfoVC();
  return [super dealloc];
}

uint64_t type metadata accessor for EntryDebugInfoVC()
{
  return self;
}

uint64_t sub_100166B10@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = [*a1 momentDateForSorting];
  if (v3)
  {
    uint64_t v4 = v3;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v5 = type metadata accessor for Date();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_100166BD8(uint64_t a1, void **a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100045944(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    Class isa = Date._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  [v7 setMomentDateForSorting:isa];
}

uint64_t sub_100166D04()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100166D44(void *a1@<X8>)
{
  sub_100163460(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

unint64_t sub_100166D60()
{
  unint64_t result = qword_10080F990;
  if (!qword_10080F990)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10080F990);
  }
  return result;
}

uint64_t sub_100166DB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetAttachment.AssetType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100166E14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100166E74()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1007FFE78);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1007FFE78);
  if (qword_1007F7D48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EBD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100166F3C()
{
  v1[4] = v0;
  sub_100010218((uint64_t *)&unk_100800A60);
  v1[5] = swift_task_alloc();
  uint64_t v2 = type metadata accessor for URL();
  v1[6] = v2;
  v1[7] = *(void *)(v2 - 8);
  v1[8] = swift_task_alloc();
  uint64_t v3 = (void *)swift_task_alloc();
  v1[9] = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100167058;
  return sub_100527E94();
}

uint64_t sub_100167058(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100167158, 0, 0);
}

uint64_t sub_100167158()
{
  uint64_t v1 = *(void *)(v0 + 80);
  if (!v1)
  {
    id v2 = *(id *)(v0 + 32);
    unint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v4 = sub_1001679F8(v3, (uint64_t)v2);

    swift_bridgeObjectRelease();
    if (v4
      || (id v5 = *(id *)(v0 + 32),
          unint64_t v6 = swift_bridgeObjectRetain(),
          uint64_t v7 = sub_1001679F8(v6, (uint64_t)v5),
          v5,
          swift_bridgeObjectRelease(),
          v7))
    {
      uint64_t v8 = *(void *)(v0 + 48);
      uint64_t v9 = *(void *)(v0 + 56);
      uint64_t v10 = *(char **)(v0 + 40);
      sub_1005DA2EC(v10);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v10, 1, v8) != 1)
      {
        uint64_t v11 = *(void *)(v0 + 32);
        (*(void (**)(void, void, void))(*(void *)(v0 + 56) + 32))(*(void *)(v0 + 64), *(void *)(v0 + 40), *(void *)(v0 + 48));
        *(unsigned char *)(v0 + 112) = *(unsigned char *)(v11 + qword_100810B20);
        sub_100187574();
        double v13 = v12;
        id v14 = [self mainScreen];
        [v14 scale];
        double v16 = v15;

        uint64_t v21 = (uint64_t (*)(uint64_t, double))((char *)&dword_1007FD568 + dword_1007FD568);
        uint64_t v17 = (void *)swift_task_alloc();
        *(void *)(v0 + 88) = v17;
        *uint64_t v17 = v0;
        v17[1] = sub_1001673F8;
        uint64_t v18 = *(void *)(v0 + 64);
        return v21(v18, v13 * v16);
      }
    }
    else
    {
      (*(void (**)(void, uint64_t, uint64_t, void))(*(void *)(v0 + 56) + 56))(*(void *)(v0 + 40), 1, 1, *(void *)(v0 + 48));
    }
    sub_10001457C(*(void *)(v0 + 40), (uint64_t *)&unk_100800A60);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v20(v1);
}

uint64_t sub_1001673F8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1001676D4;
  }
  else {
    uint64_t v4 = sub_10016750C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10016750C()
{
  switch(*(unsigned char *)(v0 + 112))
  {
    case 5:
      swift_bridgeObjectRelease();
      break;
    default:
      char v1 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v1 & 1) == 0)
      {
        if (qword_1007F6BA0 != -1) {
          swift_once();
        }
        sub_100529CC4(*(void **)(v0 + 96), *(void *)(*(void *)(v0 + 32) + qword_100810AF0), *(void *)(*(void *)(v0 + 32) + qword_100810AF0 + 8));
      }
      break;
  }
  uint64_t v2 = *(void *)(v0 + 96);
  (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1001676D4()
{
  if (qword_1007F6A40 != -1) {
    swift_once();
  }
  char v1 = (void *)v0[4];
  uint64_t v2 = type metadata accessor for Logger();
  sub_100026A54(v2, (uint64_t)qword_1007FFE78);
  id v3 = v1;
  swift_errorRetain();
  id v4 = v3;
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  BOOL v7 = os_log_type_enabled(v5, v6);
  uint64_t v8 = v0[4];
  if (v7)
  {
    os_log_type_t type = v6;
    uint64_t v9 = swift_slowAlloc();
    double v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412546;
    v0[2] = v8;
    uint64_t v10 = v8;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *double v15 = v8;

    *(_WORD *)(v9 + 12) = 2112;
    swift_errorRetain();
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v11;
    double v12 = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v15[1] = v11;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, type, "%@ - error generating video preview image: %@", (uint8_t *)v9, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();

    double v12 = v8;
  }

  swift_errorRelease();
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  swift_task_dealloc();
  double v13 = (uint64_t (*)(void))v0[1];
  return v13(0);
}

uint64_t type metadata accessor for VideoThumbnailCacheOperation()
{
  uint64_t result = qword_1007FFEB8;
  if (!qword_1007FFEB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001679B8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1001679F0()
{
  return type metadata accessor for VideoThumbnailCacheOperation();
}

uint64_t sub_1001679F8(unint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100010218(&qword_1007F99B8);
  __chkstk_darwin(v6 - 8);
  uint64_t v78 = (char *)&v64 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = type metadata accessor for UTType();
  uint64_t v8 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v10 = (char *)&v64 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  double v13 = (char *)&v64 - v12;
  __chkstk_darwin(v14);
  v77 = (char *)&v64 - v15;
  uint64_t v80 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  __chkstk_darwin(v80);
  uint64_t v90 = (char *)&v64 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v93 = (uint64_t)&v64 - v18;
  uint64_t v19 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v19 - 8);
  uint64_t v76 = (uint64_t)&v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  v84 = (char *)&v64 - v22;
  uint64_t v91 = type metadata accessor for URL();
  unint64_t v23 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v71 = (char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v86 = (char *)&v64 - v26;
  uint64_t v27 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v27);
  unint64_t v87 = (id *)((char *)&v64 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v29);
  uint64_t v31 = (void **)((char *)&v64 - v30);
  unint64_t v95 = a1;
  if (a1 >> 62) {
    goto LABEL_43;
  }
  uint64_t v32 = *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v32)
  {
LABEL_44:
    swift_bridgeObjectRelease();
    return 0;
  }
  while (1)
  {
    uint64_t v64 = v3;
    uint64_t v88 = *(void *)(a2 + qword_100810B28);
    int v89 = *(unsigned __int8 *)(a2 + qword_100810B28 + 8);
    unint64_t v92 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    Swift::String v82 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
    Swift::String v83 = (void (**)(char *, char *, uint64_t))(v23 + 32);
    uint64_t v74 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    unint64_t v66 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
    uint64_t v73 = (void (**)(char *, uint64_t))(v8 + 8);
    unint64_t v65 = (void (**)(char *, char *, uint64_t))(v8 + 16);
    uint64_t v72 = (void (**)(char *, uint64_t))(v23 + 8);
    unint64_t v23 = v95 & 0xC000000000000001;
    uint64_t v3 = 4;
    Swift::String v67 = v10;
    uint64_t v75 = v13;
    uint64_t v10 = v90;
    uint64_t v79 = v27;
    uint64_t v81 = v32;
    unint64_t v94 = v95 & 0xC000000000000001;
LABEL_6:
    uint64_t v8 = v3 - 4;
    if (v23) {
      break;
    }
    a2 = *(void *)(v95 + 8 * v3);
    swift_retain();
    double v13 = (char *)(v3 - 3);
    if (!__OFADD__(v8, 1)) {
      goto LABEL_11;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    swift_bridgeObjectRetain();
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
    if (!v32) {
      goto LABEL_44;
    }
  }
  a2 = specialized _ArrayBuffer._getElementSlowPath(_:)();
  double v13 = (char *)(v3 - 3);
  if (__OFADD__(v8, 1)) {
    goto LABEL_42;
  }
LABEL_11:
  uint64_t v34 = a2 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType;
  sub_100168580(a2 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, (uint64_t)v31, type metadata accessor for AssetAttachment.AssetType);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      id v33 = *v31;
      swift_release();

      goto LABEL_5;
    case 2u:
      uint64_t v35 = (uint64_t)v31;
      if ((v89 & 1) == 0) {
        goto LABEL_14;
      }
      uint64_t v35 = (uint64_t)v31;
      goto LABEL_40;
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v37 = v34;
      Swift::String v38 = v87;
      sub_100168580(v37, (uint64_t)v87, type metadata accessor for AssetAttachment.AssetType);
      uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v40 = (uint64_t)v38;
      switch(EnumCaseMultiPayload)
      {
        case 1:

          uint64_t v41 = (uint64_t)v84;
          uint64_t v42 = v91;
          (*v82)(v84, 1, 1, v91);
          break;
        case 4:
          swift_bridgeObjectRelease();
          uint64_t v40 = (uint64_t)v38 + *(int *)(sub_100010218(&qword_10080B3F0) + 48);
          goto LABEL_19;
        default:
LABEL_19:
          uint64_t v43 = v93;
          sub_10016851C(v40, v93);
          sub_100168580(v43, (uint64_t)v10, type metadata accessor for AssetAttachment.AssetType.FilePathType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            uint64_t v41 = (uint64_t)v84;
            uint64_t v42 = v91;
            (*v83)(v84, v10, v91);
            uint64_t v44 = 0;
          }
          else
          {
            type metadata accessor for Journaling();
            uint64_t v45 = v76;
            sub_1005E6B0C(v76);
            uint64_t v46 = v45;
            swift_bridgeObjectRelease();
            uint64_t v42 = v91;
            if ((*v92)(v45, 1, v91) == 1)
            {
              sub_10001457C(v45, (uint64_t *)&unk_100800A60);
              uint64_t v44 = 1;
              uint64_t v10 = v90;
              uint64_t v41 = (uint64_t)v84;
            }
            else
            {
              uint64_t v47 = *v83;
              id v48 = v71;
              (*v83)(v71, (char *)v46, v42);
              v49 = v84;
              v47(v84, v48, v42);
              uint64_t v41 = (uint64_t)v49;
              uint64_t v44 = 0;
              uint64_t v10 = v90;
            }
            uint64_t v27 = v79;
          }
          (*v82)((char *)v41, v44, 1, v42);
          sub_1001684C0(v93);
          break;
      }
      uint64_t v35 = (uint64_t)v31 + *(int *)(sub_100010218(&qword_10080B3F0) + 48);
      if ((*v92)(v41, 1, v42) == 1)
      {
        sub_10001457C(v41, (uint64_t *)&unk_100800A60);
LABEL_30:
        uint64_t v32 = v81;
        goto LABEL_31;
      }
      (*v83)(v86, (char *)v41, v42);
      URL.pathExtension.getter();
      uint64_t v51 = v50;
      swift_bridgeObjectRetain();
      Swift::String v52 = v75;
      static UTType.data.getter();
      uint64_t v53 = (uint64_t)v78;
      UTType.init(filenameExtension:conformingTo:)();
      if ((*v74)(v53, 1, v85) == 1)
      {
        sub_10001457C(v53, &qword_1007F99B8);
        swift_bridgeObjectRelease();
        (*v72)(v86, v42);
        uint64_t v10 = v90;
        uint64_t v27 = v79;
        goto LABEL_30;
      }
      uint64_t v69 = v51;
      id v54 = v77;
      uint64_t v55 = v85;
      (*v66)(v77, v53, v85);
      static UTType.video.getter();
      int v70 = UTType.conforms(to:)();
      Swift::String v68 = *v73;
      v68(v52, v55);
      uint64_t v56 = v67;
      (*v65)(v67, v54, v55);
      if ((v70 & 1) == 0)
      {
        static UTType.movie.getter();
        int v70 = UTType.conforms(to:)();
        uint64_t v60 = v52;
        uint64_t v61 = v85;
        uint64_t v62 = v68;
        v68(v60, v85);
        v62(v56, v61);
        v62(v77, v61);
        swift_bridgeObjectRelease();
        (*v72)(v86, v91);
        uint64_t v10 = v90;
        uint64_t v27 = v79;
        uint64_t v32 = v81;
        if (v70) {
          goto LABEL_36;
        }
LABEL_31:
        sub_1001684C0(v35);
LABEL_32:
        swift_release();
        unint64_t v23 = v94;
LABEL_5:
        ++v3;
        if (v13 == (char *)v32) {
          goto LABEL_44;
        }
        goto LABEL_6;
      }
      uint64_t v57 = v56;
      uint64_t v58 = v85;
      uint64_t v59 = v68;
      v68(v57, v85);
      v59(v77, v58);
      swift_bridgeObjectRelease();
      (*v72)(v86, v91);
      uint64_t v10 = v90;
      uint64_t v27 = v79;
      uint64_t v32 = v81;
LABEL_36:
      if ((v89 & 1) == 0)
      {
LABEL_14:
        uint64_t v36 = *(void *)(a2 + 16);
        sub_1001684C0(v35);
        if (v36 == v88) {
          goto LABEL_41;
        }
        goto LABEL_32;
      }
LABEL_40:
      sub_1001684C0(v35);
LABEL_41:
      swift_bridgeObjectRelease();
      return a2;
    default:
      sub_1001684C0((uint64_t)v31);
      swift_release();
      goto LABEL_5;
  }
}

uint64_t sub_1001684C0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10016851C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100168580(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void *sub_1001685E8(uint64_t a1)
{
  uint64_t result = _swiftEmptyArrayStorage;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = sub_100010218(&qword_1007FC1E8);
    uint64_t v5 = *(void *)(v4 - 8);
    uint64_t v6 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    sub_10001B284(0, &qword_100800778);
    uint64_t v7 = *(void *)(v5 + 72);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v8 = *(void *)(v6 + *(int *)(v4 + 48) + 8);
      Date.timeIntervalSinceReferenceDate.getter();
      double v9 = (double)v8;
      double v10 = (double)v8;
      AXDataPoint.init(x:y:additionalValues:label:)(v11, *(Swift::Double_optional *)&v9, 0, (Swift::String_optional)(unint64_t)_swiftEmptyArrayStorage);
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      v6 += v7;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_100168784(uint64_t a1)
{
  uint64_t v20 = sub_100010218(&qword_1007FC8E0);
  __chkstk_darwin(v20);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v18 - v6;
  uint64_t v19 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  double v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = type metadata accessor for UniformDateBins(0);
  uint64_t v12 = *(int *)(result + 24);
  uint64_t v21 = a1;
  int64_t v13 = *(void *)(a1 + v12);
  if ((v13 & 0x8000000000000000) == 0)
  {
    uint64_t v14 = _swiftEmptyArrayStorage;
    if (!v13) {
      return (uint64_t)v14;
    }
    v18[0] = v1;
    uint64_t v22 = _swiftEmptyArrayStorage;
    uint64_t result = sub_100095C5C(0, v13, 0);
    uint64_t v15 = 0;
    v18[1] = v8 + 32;
    while (v13 != v15)
    {
      sub_10066AC8C(v15, (uint64_t)v7);
      sub_10002C4EC((uint64_t)v7, (uint64_t)v4, &qword_1007FC8E0);
      Date.timeIntervalSince(_:)();
      static Date.+ infix(_:_:)();
      sub_10001457C((uint64_t)v4, &qword_1007FC8E0);
      uint64_t v14 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100095C5C(0, v14[2] + 1, 1);
        uint64_t v14 = v22;
      }
      unint64_t v17 = v14[2];
      unint64_t v16 = v14[3];
      if (v17 >= v16 >> 1)
      {
        sub_100095C5C(v16 > 1, v17 + 1, 1);
        uint64_t v14 = v22;
      }
      ++v15;
      v14[2] = v17 + 1;
      uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v8 + 32))((unint64_t)v14+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * v17, v10, v19);
      uint64_t v22 = v14;
      if (v13 == v15) {
        return (uint64_t)v14;
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_100168A28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v65 = a1;
  uint64_t v67 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v66 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  uint64_t v64 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for ContainerBackgroundPlacement();
  uint64_t v61 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v60 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100010218(&qword_1008000E0);
  __chkstk_darwin(v63);
  uint64_t v59 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = type metadata accessor for ColorResource();
  uint64_t v52 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v51 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_100010218(&qword_1008000E8);
  __chkstk_darwin(v50);
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for ColorScheme();
  uint64_t v8 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  double v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_1008000F0);
  __chkstk_darwin(v11 - 8);
  int64_t v13 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100010218(&qword_1008000F8);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100010218(&qword_100800100);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100010218(&qword_100800108);
  uint64_t v54 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  v49 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100010218(&qword_100800110);
  uint64_t v57 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  uint64_t v56 = (char *)&v49 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *(void *)(v1 + *(int *)(type metadata accessor for InsightsYearlyEntriesView(0) + 56));
  *(void *)int64_t v13 = static HorizontalAlignment.center.getter();
  *((void *)v13 + 1) = v23;
  v13[16] = 0;
  uint64_t v24 = sub_100010218(&qword_100800118);
  sub_1001694F0(v1, (uint64_t)&v13[*(int *)(v24 + 44)]);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001B220((uint64_t)v13, (uint64_t)v17, &qword_1008000F0);
  uint64_t v26 = &v17[*(int *)(v15 + 44)];
  *(void *)uint64_t v26 = KeyPath;
  v26[8] = 0;
  sub_10001457C((uint64_t)v13, &qword_1008000F0);
  uint64_t v27 = v68;
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for ColorScheme.dark(_:), v68);
  uint64_t v28 = swift_getKeyPath();
  uint64_t v29 = (uint64_t *)&v20[*(int *)(v18 + 36)];
  uint64_t v30 = sub_100010218(&qword_100800120);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v29 + *(int *)(v30 + 28), v10, v27);
  *uint64_t v29 = v28;
  sub_10001B220((uint64_t)v17, (uint64_t)v20, &qword_1008000F8);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v27);
  sub_10001457C((uint64_t)v17, &qword_1008000F8);
  uint64_t v31 = enum case for DynamicTypeSize.accessibility3(_:);
  uint64_t v32 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 104))(v7, v31, v32);
  sub_100177434(&qword_100800128, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  if (dispatch thunk of static Equatable.== infix(_:_:)())
  {
    sub_10017909C();
    sub_100014488(&qword_100800160, &qword_1008000E8);
    unint64_t v17 = v49;
    View.dynamicTypeSize<A>(_:)();
    sub_10001457C((uint64_t)v7, &qword_1008000E8);
    sub_10001457C((uint64_t)v20, &qword_100800100);
    sub_100010218(&qword_100800168);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1006D6270;
    if (qword_1007F7F50 == -1) {
      goto LABEL_3;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_3:
  uint64_t v33 = v53;
  uint64_t v34 = sub_100026A54(v53, (uint64_t)qword_10083EF10);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 16);
  uint64_t v36 = v51;
  v35(v51, v34, v33);
  *(void *)(v31 + 32) = Color.init(_:)();
  if (qword_1007F7F70 != -1) {
    swift_once();
  }
  uint64_t v37 = sub_100026A54(v33, (uint64_t)qword_10083EF70);
  v35(v36, v37, v33);
  *(void *)(v31 + 40) = Color.init(_:)();
  *(void *)&long long v69 = v31;
  specialized Array._endMutation()();
  static UnitPoint.top.getter();
  static UnitPoint.bottom.getter();
  swift_bridgeObjectRetain();
  Gradient.init(colors:)();
  LinearGradient.init(gradient:startPoint:endPoint:)();
  swift_bridgeObjectRelease();
  long long v73 = v76;
  long long v74 = v77;
  uint64_t v75 = v78;
  long long v69 = v76;
  long long v70 = v77;
  uint64_t v71 = v78;
  __int16 v72 = 256;
  swift_bridgeObjectRetain();
  sub_100010218(&qword_100800170);
  sub_100014488(&qword_100800178, &qword_100800170);
  uint64_t v38 = AnyView.init<A>(_:)();
  uint64_t v39 = v54;
  uint64_t v40 = (uint64_t)v59;
  uint64_t v41 = v55;
  (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v59, v17, v55);
  uint64_t v42 = v63;
  *(void *)(v40 + *(int *)(v63 + 36)) = v38;
  uint64_t v43 = v60;
  static ContainerBackgroundPlacement.widget.getter();
  unint64_t v44 = sub_100179200();
  uint64_t v45 = v56;
  View.containerBackground<A>(_:for:)();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v43, v62);
  sub_10001457C(v40, &qword_1008000E0);
  sub_100179324((uint64_t)&v76);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v17, v41);
  uint64_t v46 = v64;
  static AccessibilityChildBehavior.contain.getter();
  *(void *)&long long v69 = v42;
  *((void *)&v69 + 1) = &type metadata for LinearGradient;
  *(void *)&long long v70 = v44;
  *((void *)&v70 + 1) = &protocol witness table for LinearGradient;
  swift_getOpaqueTypeConformance2();
  uint64_t v47 = v58;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v66 + 8))(v46, v67);
  return (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v45, v47);
}

uint64_t sub_1001694F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v226 = a2;
  uint64_t v196 = type metadata accessor for Calendar();
  uint64_t v195 = *(void *)(v196 - 8);
  __chkstk_darwin(v196);
  Swift::String v192 = (char *)v173 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = v3;
  __chkstk_darwin(v4);
  uint64_t v215 = (uint64_t)v173 - v5;
  uint64_t v194 = type metadata accessor for Calendar.Component();
  uint64_t v193 = *(void *)(v194 - 8);
  __chkstk_darwin(v194);
  uint64_t v190 = (char *)v173 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v188 = v6;
  __chkstk_darwin(v7);
  uint64_t v214 = (char *)v173 - v8;
  uint64_t v186 = sub_100010218(&qword_100800198);
  __chkstk_darwin(v186);
  uint64_t v187 = (char *)v173 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v213 = (uint64_t)v173 - v11;
  uint64_t v197 = sub_100010218(&qword_1008001A0);
  __chkstk_darwin(v197);
  uint64_t v198 = (uint64_t)v173 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v204 = sub_100010218(&qword_1008001A8);
  uint64_t v203 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  Swift::String v202 = (char *)v173 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v199 = sub_100010218(&qword_1008001B0);
  __chkstk_darwin(v199);
  v205 = (char *)v173 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100010218(&qword_1008001B8);
  uint64_t v218 = *(void *)(v15 - 8);
  uint64_t v219 = v15;
  __chkstk_darwin(v15);
  uint64_t v201 = (uint64_t)v173 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v200 = (uint64_t)v173 - v18;
  uint64_t v19 = sub_100010218(&qword_1008001C0);
  __chkstk_darwin(v19 - 8);
  uint64_t v220 = (uint64_t)v173 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  unint64_t v217 = (char *)v173 - v22;
  uint64_t v212 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v211 = *(void *)(v212 - 8);
  __chkstk_darwin(v212);
  uint64_t v189 = (char *)v173 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v207 = (char *)v173 - v25;
  uint64_t v178 = sub_100010218(&qword_1008001C8);
  uint64_t v177 = *(void *)(v178 - 8);
  __chkstk_darwin(v178);
  unint64_t v206 = (char *)v173 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_100010218(&qword_1008001D0);
  uint64_t v183 = *(void *)(v185 - 8);
  __chkstk_darwin(v185);
  unint64_t v182 = (char *)v173 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v179 = sub_100010218(&qword_1008001D8);
  __chkstk_darwin(v179);
  uint64_t v184 = (char *)v173 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v209 = sub_100010218(&qword_1008001E0);
  uint64_t v208 = *(void *)(v209 - 8);
  __chkstk_darwin(v209);
  uint64_t v181 = (uint64_t)v173 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v180 = (uint64_t)v173 - v31;
  uint64_t v32 = sub_100010218(&qword_1008001E8);
  __chkstk_darwin(v32 - 8);
  uint64_t v216 = (uint64_t)v173 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v34);
  unint64_t v222 = (char *)v173 - v35;
  uint64_t v36 = sub_100010218((uint64_t *)&unk_1007FF080);
  __chkstk_darwin(v36 - 8);
  uint64_t v176 = (uint64_t)v173 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  __chkstk_darwin(v174);
  uint64_t v175 = (uint64_t)v173 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v39 - 8);
  uint64_t v41 = (char *)v173 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for Date();
  uint64_t v221 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  unint64_t v44 = (char *)v173 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100010218(&qword_1008001F0);
  __chkstk_darwin(v45 - 8);
  v225 = (char *)v173 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  uint64_t v224 = (uint64_t)v173 - v48;
  uint64_t v49 = sub_100010218(&qword_1008001F8);
  __chkstk_darwin(v49);
  uint64_t v223 = (uint64_t)v173 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v51);
  uint64_t v53 = (void *)((char *)v173 - v52);
  __chkstk_darwin(v54);
  uint64_t v227 = (uint64_t)v173 - v55;
  uint64_t v56 = (int *)type metadata accessor for InsightsYearlyEntriesView(0);
  uint64_t v57 = a1;
  uint64_t v58 = a1 + v56[7];
  uint64_t v59 = *(void *)v58;
  uint64_t v210 = v58;
  LOBYTE(a1) = *(unsigned char *)(v58 + 8);
  sub_100026CCC(v59, a1);
  char v60 = sub_100666714(v59, a1);
  sub_100026DF8(v59, a1);
  if (v60)
  {
    uint64_t v61 = static HorizontalAlignment.leading.getter();
    uint64_t v62 = *(void *)(v57 + v56[14]);
    uint64_t v228 = v61;
    uint64_t v229 = v62;
    char v230 = 0;
    sub_1001796A4();
  }
  else
  {
    uint64_t v228 = static VerticalAlignment.center.getter();
    uint64_t v229 = 0;
    char v230 = 1;
    sub_100179350();
    uint64_t v63 = AnyLayout.init<A>(_:)();
    uint64_t v228 = 0x4028000000000000;
    uint64_t v229 = v63;
    sub_1001793A4();
  }
  uint64_t v64 = AnyLayout.init<A>(_:)();
  *uint64_t v53 = v64;
  uint64_t v65 = (char *)v53 + *(int *)(v49 + 44);
  swift_retain();
  sub_10016AF1C(v57, v65);
  sub_10002C4EC((uint64_t)v53, v227, &qword_1008001F8);
  uint64_t v66 = v57 + v56[5];
  uint64_t v67 = *(void *)v66;
  LOBYTE(v65) = *(unsigned char *)(v66 + 8);
  sub_100026CCC(*(void *)v66, (char)v65);
  uint64_t v68 = v57;
  char v69 = sub_100666714(v67, (char)v65);
  sub_100026DF8(v67, (char)v65);
  if (v69)
  {
    long long v70 = v56;
    v173[3] = v64;
    uint64_t v71 = v68 + v56[10];
    v173[1] = sub_100010218(&qword_1007FC8F0);
    v173[2] = v71;
    State.wrappedValue.getter();
    uint64_t v72 = v221;
    uint64_t v73 = v68;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v221 + 48))(v41, 1, v42) == 1)
    {
      sub_10001457C((uint64_t)v41, (uint64_t *)&unk_1007FC470);
      char v74 = *(unsigned char *)(v68 + v56[9] + 8);
      uint64_t v75 = swift_retain();
      uint64_t v76 = sub_100666C70(v75, v74);
      swift_release();
      swift_getKeyPath();
      uint64_t v228 = v76;
      sub_100177434((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      long long v77 = *(void **)(v76 + OBJC_IVAR____TtC7Journal19InsightsDataManager__allTime);
      swift_bridgeObjectRetain();
      swift_release();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v44, v41, v42);
      char v81 = *(unsigned char *)(v68 + v56[9] + 8);
      uint64_t v82 = swift_retain();
      uint64_t v83 = sub_100666C70(v82, v81);
      swift_release();
      swift_getKeyPath();
      uint64_t v228 = v83;
      sub_100177434((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v84 = v83 + OBJC_IVAR____TtC7Journal19InsightsDataManager__byEntryDate;
      swift_beginAccess();
      uint64_t v85 = v84;
      uint64_t v86 = v175;
      sub_1001796F8(v85, v175, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
      swift_release();
      uint64_t v87 = v176;
      sub_10001B220(v86 + *(int *)(v174 + 28), v176, (uint64_t *)&unk_1007FF080);
      sub_100179644(v86, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
      sub_100650BCC((uint64_t)v44);
      uint64_t v89 = v88;
      long long v77 = v90;
      sub_10001457C(v87, (uint64_t *)&unk_1007FF080);
      if (v89) {
        swift_bridgeObjectRelease();
      }
      else {
        long long v77 = _swiftEmptyArrayStorage;
      }
      (*(void (**)(char *, uint64_t))(v221 + 8))(v44, v42);
    }
    if (v77[2] < 3uLL)
    {
      swift_bridgeObjectRelease();
      uint64_t v118 = 1;
      uint64_t v96 = (uint64_t)v222;
      uint64_t v97 = v209;
    }
    else
    {
      uint64_t v91 = static Axis.Set.horizontal.getter();
      __chkstk_darwin(v91);
      v173[-2] = v68;
      v173[-1] = v77;
      sub_100010218(&qword_100800230);
      uint64_t v92 = sub_100014440(&qword_100800238);
      uint64_t v93 = sub_100014488(&qword_100800240, &qword_100800238);
      uint64_t v231 = v92;
      uint64_t v232 = v93;
      swift_getOpaqueTypeConformance2();
      ScrollView.init(_:showsIndicators:content:)();
      swift_bridgeObjectRelease();
      static ScrollIndicatorVisibility.hidden.getter();
      unsigned __int8 v94 = static Axis.Set.vertical.getter();
      unsigned __int8 v95 = static Axis.Set.horizontal.getter();
      Axis.Set.init(rawValue:)();
      Axis.Set.init(rawValue:)();
      if (Axis.Set.init(rawValue:)() != v94) {
        Axis.Set.init(rawValue:)();
      }
      Axis.Set.init(rawValue:)();
      if (Axis.Set.init(rawValue:)() != v95) {
        Axis.Set.init(rawValue:)();
      }
      uint64_t v96 = (uint64_t)v222;
      uint64_t v97 = v209;
      sub_100014488(&qword_100800248, &qword_1008001C8);
      id v98 = v182;
      v99 = v207;
      uint64_t v100 = v178;
      v101 = v206;
      View.scrollIndicators(_:axes:)();
      (*(void (**)(char *, uint64_t))(v211 + 8))(v99, v212);
      (*(void (**)(char *, uint64_t))(v177 + 8))(v101, v100);
      uint64_t v102 = *(void *)v210;
      LOBYTE(v101) = *(unsigned char *)(v210 + 8);
      sub_100026CCC(*(void *)v210, (char)v101);
      sub_100666714(v102, (char)v101);
      sub_100026DF8(v102, (char)v101);
      LOBYTE(v102) = static Edge.Set.all.getter();
      EdgeInsets.init(_all:)();
      uint64_t v104 = v103;
      uint64_t v106 = v105;
      uint64_t v108 = v107;
      uint64_t v110 = v109;
      uint64_t v111 = v183;
      uint64_t v112 = (uint64_t)v184;
      uint64_t v113 = v185;
      (*(void (**)(char *, char *, uint64_t))(v183 + 16))(v184, v98, v185);
      uint64_t v114 = v112 + *(int *)(v179 + 36);
      *(unsigned char *)uint64_t v114 = v102;
      *(void *)(v114 + 8) = v104;
      *(void *)(v114 + 16) = v106;
      *(void *)(v114 + 24) = v108;
      *(void *)(v114 + 32) = v110;
      *(unsigned char *)(v114 + 40) = 0;
      (*(void (**)(char *, uint64_t))(v111 + 8))(v98, v113);
      if (qword_1007F6BD8 != -1) {
        swift_once();
      }
      uint64_t v115 = qword_10083D1D0;
      uint64_t v116 = v181;
      sub_10001B220(v112, v181, &qword_1008001D8);
      *(void *)(v116 + *(int *)(v97 + 36)) = v115;
      swift_retain();
      sub_10001457C(v112, &qword_1008001D8);
      uint64_t v117 = v180;
      sub_10002C4EC(v116, v180, &qword_1008001E0);
      sub_10002C4EC(v117, v96, &qword_1008001E0);
      uint64_t v118 = 0;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v208 + 56))(v96, v118, 1, v97);
    char v119 = *(unsigned char *)(v73 + v70[9] + 8);
    uint64_t v120 = swift_retain();
    uint64_t v121 = sub_100666C70(v120, v119);
    swift_release();
    swift_getKeyPath();
    uint64_t v231 = v121;
    sub_100177434((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v122 = *(void *)(v121 + OBJC_IVAR____TtC7Journal19InsightsDataManager__allTime + 8);
    swift_bridgeObjectRetain();
    swift_release();
    if (*(void *)(v122 + 16) < 2uLL)
    {
      swift_bridgeObjectRelease();
      uint64_t v163 = 1;
      uint64_t v161 = v219;
      uint64_t v144 = (uint64_t)v217;
      uint64_t v80 = (uint64_t)v225;
    }
    else
    {
      uint64_t v123 = (uint64_t)v187;
      State.projectedValue.getter();
      static Animation.spring(response:dampingFraction:blendDuration:)();
      uint64_t v221 = v122;
      uint64_t v124 = v213;
      Binding.animation(_:)();
      swift_release();
      sub_10001457C(v123, &qword_100800198);
      uint64_t v125 = v193;
      Swift::String v126 = v214;
      uint64_t v127 = v194;
      (*(void (**)(char *, void, uint64_t))(v193 + 104))(v214, enum case for Calendar.Component.year(_:), v194);
      uint64_t v128 = v215;
      sub_100666410(v215);
      sub_10001B220(v124, v123, &qword_100800198);
      uint64_t v129 = v195;
      Swift::String v130 = v192;
      uint64_t v131 = v128;
      uint64_t v132 = v196;
      (*(void (**)(char *, uint64_t, uint64_t))(v195 + 16))(v192, v131, v196);
      uint64_t v133 = v190;
      (*(void (**)(char *, char *, uint64_t))(v125 + 16))(v190, v126, v127);
      unint64_t v134 = (*(unsigned __int8 *)(v129 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v129 + 80);
      unint64_t v135 = (v191 + *(unsigned __int8 *)(v125 + 80) + v134) & ~(unint64_t)*(unsigned __int8 *)(v125 + 80);
      uint64_t v136 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v129 + 32))(v136 + v134, v130, v132);
      (*(void (**)(unint64_t, char *, uint64_t))(v125 + 32))(v136 + v135, v133, v127);
      uint64_t v137 = v198;
      sub_10002C4EC(v123, v198, &qword_100800198);
      uint64_t v138 = v197;
      sub_100174F64(v221, v137 + *(int *)(v197 + 52));
      uint64_t v139 = (BOOL (**)(uint64_t, uint64_t))(v137 + *(int *)(v138 + 56));
      *uint64_t v139 = sub_100179550;
      v139[1] = (BOOL (*)(uint64_t, uint64_t))v136;
      *(void *)(v137 + *(int *)(v138 + 60)) = 0;
      (*(void (**)(uint64_t, uint64_t))(v129 + 8))(v215, v132);
      (*(void (**)(char *, uint64_t))(v125 + 8))(v214, v127);
      sub_10001457C(v213, &qword_100800198);
      swift_bridgeObjectRelease();
      Swift::String v140 = v189;
      static ScrollIndicatorVisibility.hidden.getter();
      LOBYTE(v127) = static Axis.Set.vertical.getter();
      char v141 = static Axis.Set.horizontal.getter();
      Axis.Set.init(rawValue:)();
      Axis.Set.init(rawValue:)();
      if (Axis.Set.init(rawValue:)() != v127) {
        Axis.Set.init(rawValue:)();
      }
      Axis.Set.init(rawValue:)();
      char v142 = Axis.Set.init(rawValue:)();
      uint64_t v143 = (uint64_t)v205;
      if (v142 != v141) {
        Axis.Set.init(rawValue:)();
      }
      uint64_t v144 = (uint64_t)v217;
      sub_100014488(&qword_100800228, &qword_1008001A0);
      uint64_t v145 = v202;
      View.scrollIndicators(_:axes:)();
      (*(void (**)(char *, uint64_t))(v211 + 8))(v140, v212);
      sub_10001457C(v137, &qword_1008001A0);
      uint64_t v146 = *(void *)v210;
      char v147 = *(unsigned char *)(v210 + 8);
      sub_100026CCC(*(void *)v210, v147);
      sub_100666714(v146, v147);
      sub_100026DF8(v146, v147);
      LOBYTE(v146) = static Edge.Set.all.getter();
      EdgeInsets.init(_all:)();
      uint64_t v149 = v148;
      uint64_t v151 = v150;
      uint64_t v153 = v152;
      uint64_t v155 = v154;
      uint64_t v156 = v203;
      uint64_t v157 = v204;
      (*(void (**)(uint64_t, char *, uint64_t))(v203 + 16))(v143, v145, v204);
      uint64_t v158 = v143 + *(int *)(v199 + 36);
      *(unsigned char *)uint64_t v158 = v146;
      *(void *)(v158 + 8) = v149;
      *(void *)(v158 + 16) = v151;
      *(void *)(v158 + 24) = v153;
      *(void *)(v158 + 32) = v155;
      *(unsigned char *)(v158 + 40) = 0;
      (*(void (**)(char *, uint64_t))(v156 + 8))(v145, v157);
      if (qword_1007F6BD8 != -1) {
        swift_once();
      }
      uint64_t v159 = qword_10083D1D0;
      uint64_t v160 = v201;
      sub_10001B220(v143, v201, &qword_1008001B0);
      uint64_t v161 = v219;
      *(void *)(v160 + *(int *)(v219 + 36)) = v159;
      swift_retain();
      sub_10001457C(v143, &qword_1008001B0);
      uint64_t v162 = v200;
      sub_10002C4EC(v160, v200, &qword_1008001B8);
      sub_10002C4EC(v162, v144, &qword_1008001B8);
      uint64_t v163 = 0;
      uint64_t v80 = (uint64_t)v225;
      uint64_t v96 = (uint64_t)v222;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v218 + 56))(v144, v163, 1, v161);
    uint64_t v164 = v216;
    sub_10001B220(v96, v216, &qword_1008001E8);
    uint64_t v165 = v220;
    sub_10001B220(v144, v220, &qword_1008001C0);
    sub_10001B220(v164, v80, &qword_1008001E8);
    uint64_t v166 = sub_100010218(&qword_100800220);
    sub_10001B220(v165, v80 + *(int *)(v166 + 48), &qword_1008001C0);
    sub_10001457C(v144, &qword_1008001C0);
    sub_10001457C(v96, &qword_1008001E8);
    sub_10001457C(v165, &qword_1008001C0);
    sub_10001457C(v164, &qword_1008001E8);
    uint64_t v167 = sub_100010218(&qword_100800210);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v167 - 8) + 56))(v80, 0, 1, v167);
    uint64_t v79 = v224;
    sub_10002C4EC(v80, v224, &qword_1008001F0);
  }
  else
  {
    uint64_t v78 = sub_100010218(&qword_100800210);
    uint64_t v79 = v224;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v224, 1, 1, v78);
    uint64_t v80 = (uint64_t)v225;
  }
  uint64_t v168 = v227;
  uint64_t v169 = v223;
  sub_10001B220(v227, v223, &qword_1008001F8);
  sub_10001B220(v79, v80, &qword_1008001F0);
  uint64_t v170 = v226;
  sub_10001B220(v169, v226, &qword_1008001F8);
  uint64_t v171 = sub_100010218(&qword_100800218);
  sub_10001B220(v80, v170 + *(int *)(v171 + 48), &qword_1008001F0);
  swift_release();
  sub_10001457C(v79, &qword_1008001F0);
  sub_10001457C(v168, &qword_1008001F8);
  sub_10001457C(v80, &qword_1008001F0);
  return sub_10001457C(v169, &qword_1008001F8);
}

uint64_t sub_10016AF1C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  Swift::String v192 = a2;
  uint64_t v191 = type metadata accessor for InsightsYearlyEntriesChartRepresentable(0);
  __chkstk_darwin(v191);
  uint64_t v190 = (uint64_t *)((char *)&v140 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v187 = type metadata accessor for AutomaticScaleDomain();
  uint64_t v189 = *(void *)(v187 - 8);
  __chkstk_darwin(v187);
  uint64_t v181 = (char *)&v140 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_1008003A0);
  __chkstk_darwin(v5 - 8);
  uint64_t v197 = (char *)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PlotDimensionScaleRange();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v198 = v7;
  uint64_t v199 = v8;
  __chkstk_darwin(v7);
  uint64_t v153 = (char *)&v140 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_100010218(&qword_1007FC8E0);
  __chkstk_darwin(v157);
  uint64_t v147 = (uint64_t)&v140 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v142 = (void *)sub_100010218(&qword_1008003A8);
  uint64_t v143 = *(v142 - 1);
  __chkstk_darwin(v142);
  Swift::String v140 = (char *)&v140 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = (void *)sub_100010218(&qword_1008003B0);
  uint64_t v145 = *(v144 - 1);
  __chkstk_darwin(v144);
  char v141 = (char *)&v140 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v148 = sub_100010218(&qword_1008003B8);
  uint64_t v152 = *(void *)(v148 - 8);
  __chkstk_darwin(v148);
  uint64_t v195 = (char *)&v140 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_100010218(&qword_1008003C0);
  uint64_t v156 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  uint64_t v194 = (char *)&v140 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v158 = sub_100010218(&qword_1008003C8);
  uint64_t v160 = *(void *)(v158 - 8);
  __chkstk_darwin(v158);
  uint64_t v151 = (char *)&v140 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_100010218(&qword_1008003D0);
  uint64_t v166 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  uint64_t v154 = (char *)&v140 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_100010218(&qword_1008003D8);
  uint64_t v173 = *(void *)(v171 - 8);
  __chkstk_darwin(v171);
  uint64_t v159 = (char *)&v140 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = sub_100010218(&qword_1008003E0);
  uint64_t v174 = *(void *)(v176 - 8);
  __chkstk_darwin(v176);
  uint64_t v162 = (char *)&v140 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_100010218(&qword_1008003E8) - 8;
  __chkstk_darwin(v164);
  uint64_t v163 = (char *)&v140 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_100010218(&qword_1008003F0) - 8;
  __chkstk_darwin(v169);
  uint64_t v165 = (uint64_t)&v140 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = sub_100010218(&qword_1008003F8);
  __chkstk_darwin(v178);
  uint64_t v172 = (uint64_t)&v140 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v180 = sub_100010218(&qword_100800400);
  uint64_t v183 = *(void *)(v180 - 8);
  __chkstk_darwin(v180);
  uint64_t v175 = (char *)&v140 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_100010218(&qword_100800408);
  uint64_t v188 = *(void *)(v185 - 8);
  __chkstk_darwin(v185);
  uint64_t v177 = (char *)&v140 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100010218(&qword_100800410);
  __chkstk_darwin(v24 - 8);
  uint64_t v186 = (uint64_t)&v140 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  unint64_t v182 = (char *)&v140 - v27;
  __chkstk_darwin(v28);
  uint64_t v184 = (uint64_t)&v140 - v29;
  uint64_t v196 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v30 = *(void *)(v196 - 8);
  __chkstk_darwin(v196);
  uint64_t v32 = (char *)&v140 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_100010218(&qword_100800418);
  __chkstk_darwin(v33);
  uint64_t v35 = (char *)&v140 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_100010218(&qword_100800420);
  uint64_t v168 = v36;
  uint64_t v167 = *(void *)(v36 - 8);
  uint64_t v37 = v167;
  __chkstk_darwin(v36);
  uint64_t v179 = (char *)&v140 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v39);
  uint64_t v41 = (char *)&v140 - v40;
  __chkstk_darwin(v42);
  unint64_t v44 = (char *)&v140 - v43;
  uint64_t v170 = (char *)&v140 - v43;
  *(void *)uint64_t v35 = static HorizontalAlignment.leading.getter();
  *((void *)v35 + 1) = 0;
  v35[16] = 0;
  uint64_t v45 = sub_100010218(&qword_100800428);
  sub_10016C7B8(a1, (uint64_t)&v35[*(int *)(v45 + 44)]);
  uint64_t v146 = v32;
  static AccessibilityChildBehavior.combine.getter();
  sub_100014488(&qword_100800430, &qword_100800418);
  View.accessibilityElement(children:)();
  uint64_t v46 = *(void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v149 = v30 + 8;
  uint64_t v150 = v46;
  v46(v32, v196);
  sub_10001457C((uint64_t)v35, &qword_100800418);
  (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v44, v41, v36);
  uint64_t v202 = a1;
  sub_100010218(&qword_100800438);
  uint64_t v47 = sub_100014440(&qword_100800440);
  uint64_t v48 = sub_100014440(&qword_100800448);
  unint64_t v49 = sub_100179B44();
  uint64_t v203 = v48;
  uint64_t v204 = (void *)v49;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v203 = v47;
  uint64_t v204 = &type metadata for HierarchicalShapeStyle;
  uint64_t v205 = OpaqueTypeConformance2;
  unint64_t v206 = &protocol witness table for HierarchicalShapeStyle;
  swift_getOpaqueTypeConformance2();
  uint64_t v51 = v140;
  Chart.init(content:)();
  uint64_t v201 = a1;
  uint64_t v193 = a1;
  uint64_t v52 = sub_100010218(&qword_100800468);
  uint64_t v53 = sub_100014488(&qword_100800470, &qword_1008003A8);
  unint64_t v54 = sub_100179BE4();
  uint64_t v55 = v141;
  uint64_t v56 = v142;
  View.chartXAxis<A>(content:)();
  (*(void (**)(char *, void *))(v143 + 8))(v51, v56);
  uint64_t v57 = sub_100010218(&qword_1008004C0);
  uint64_t v203 = (uint64_t)v56;
  uint64_t v204 = (void *)v52;
  uint64_t v205 = v53;
  unint64_t v206 = (void *)v54;
  uint64_t v58 = swift_getOpaqueTypeConformance2();
  unint64_t v59 = sub_100179D44();
  char v60 = v144;
  View.chartXAxisStyle<A>(content:)();
  (*(void (**)(char *, void *))(v145 + 8))(v55, v60);
  uint64_t v61 = v147;
  sub_100170AD8(v147);
  uint64_t v62 = v153;
  static PositionScaleRange<>.plotDimension(padding:)();
  uint64_t v143 = type metadata accessor for ScaleType();
  uint64_t v63 = *(void *)(v143 - 8);
  char v142 = *(void **)(v63 + 56);
  uint64_t v145 = v63 + 56;
  uint64_t v64 = (uint64_t)v197;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v142)(v197, 1, 1, v143);
  uint64_t v203 = (uint64_t)v60;
  uint64_t v204 = (void *)v57;
  uint64_t v205 = v58;
  unint64_t v206 = (void *)v59;
  uint64_t v65 = swift_getOpaqueTypeConformance2();
  unint64_t v66 = sub_100179DF0();
  uint64_t v67 = v61;
  uint64_t v68 = v62;
  uint64_t v69 = v148;
  long long v70 = (void *)v157;
  uint64_t v71 = v198;
  uint64_t v72 = v195;
  View.chartXScale<A, B>(domain:range:type:)();
  sub_10001457C(v64, &qword_1008003A0);
  uint64_t v73 = *(void **)(v199 + 8);
  v199 += 8;
  uint64_t v144 = v73;
  ((void (*)(char *, uint64_t))v73)(v68, v71);
  sub_10001457C(v67, &qword_1007FC8E0);
  (*(void (**)(char *, uint64_t))(v152 + 8))(v72, v69);
  uint64_t v200 = v193;
  uint64_t v74 = sub_100010218(&qword_1008004E0);
  uint64_t v203 = v69;
  uint64_t v204 = v70;
  uint64_t v205 = v71;
  unint64_t v206 = (void *)v65;
  uint64_t v207 = (void *)v66;
  uint64_t v208 = &protocol witness table for PlotDimensionScaleRange;
  uint64_t v75 = swift_getOpaqueTypeConformance2();
  uint64_t v76 = sub_100014488(&qword_1008004E8, &qword_1008004E0);
  long long v77 = v151;
  uint64_t v78 = v155;
  uint64_t v79 = v194;
  View.chartYAxis<A>(content:)();
  (*(void (**)(char *, uint64_t))(v156 + 8))(v79, v78);
  uint64_t v80 = sub_100010218(&qword_1008004F0);
  uint64_t v203 = v78;
  uint64_t v204 = (void *)v74;
  uint64_t v205 = v75;
  unint64_t v206 = (void *)v76;
  uint64_t v81 = swift_getOpaqueTypeConformance2();
  uint64_t v82 = sub_100179FE0(&qword_1008004F8, &qword_1008004F0, (void (*)(void))sub_100179E64);
  uint64_t v83 = v154;
  uint64_t v84 = v158;
  View.chartYAxisStyle<A>(content:)();
  uint64_t v85 = v77;
  uint64_t v86 = v84;
  (*(void (**)(char *, uint64_t))(v160 + 8))(v85, v84);
  uint64_t v87 = v181;
  static ScaleDomain<>.automatic<A>(includesZero:reversed:dataType:modifyInferredDomain:)();
  uint64_t v88 = v68;
  static PositionScaleRange<>.plotDimension(padding:)();
  uint64_t v89 = v197;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v142)(v197, 1, 1, v143);
  uint64_t v203 = v86;
  uint64_t v204 = (void *)v80;
  uint64_t v205 = v81;
  unint64_t v206 = (void *)v82;
  uint64_t v90 = swift_getOpaqueTypeConformance2();
  uint64_t v91 = v159;
  uint64_t v92 = (uint64_t)v89;
  uint64_t v93 = v161;
  uint64_t v94 = v187;
  uint64_t v95 = v198;
  View.chartYScale<A, B>(domain:range:type:)();
  sub_10001457C(v92, &qword_1008003A0);
  ((void (*)(char *, uint64_t))v144)(v88, v95);
  (*(void (**)(char *, uint64_t))(v189 + 8))(v87, v94);
  (*(void (**)(char *, uint64_t))(v166 + 8))(v83, v93);
  sub_100010218(&qword_100800510);
  uint64_t v203 = v93;
  uint64_t v204 = (void *)v94;
  uint64_t v205 = v95;
  unint64_t v206 = (void *)v90;
  uint64_t v207 = &protocol witness table for AutomaticScaleDomain;
  uint64_t v208 = &protocol witness table for PlotDimensionScaleRange;
  swift_getOpaqueTypeConformance2();
  sub_100179F34();
  uint64_t v96 = v162;
  uint64_t v97 = v171;
  View.chartPlotStyle<A>(content:)();
  (*(void (**)(char *, uint64_t))(v173 + 8))(v91, v97);
  uint64_t v98 = type metadata accessor for InsightsYearlyEntriesView(0);
  uint64_t v99 = v193;
  uint64_t v100 = v163;
  sub_100010218(&qword_1007FC8F0);
  State.wrappedValue.getter();
  (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v100, v96, v176);
  LODWORD(v87) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v101 = (uint64_t)v100;
  uint64_t v102 = (uint64_t)v100;
  uint64_t v103 = v165;
  sub_10001B220(v101, v165, &qword_1008003E8);
  *(_DWORD *)(v103 + *(int *)(v169 + 44)) = v87;
  sub_10001457C(v102, &qword_1008003E8);
  uint64_t v104 = v99 + *(int *)(v98 + 28);
  uint64_t v105 = *(void *)v104;
  LOBYTE(v87) = *(unsigned char *)(v104 + 8);
  sub_100026CCC(*(void *)v104, (char)v87);
  LOBYTE(v94) = sub_100666714(v105, (char)v87);
  sub_100026DF8(v105, (char)v87);
  char v106 = v94 & 1;
  if (v94) {
    double v107 = 0.0;
  }
  else {
    double v107 = 82.0;
  }
  uint64_t v108 = static Alignment.top.getter();
  uint64_t v109 = v172;
  sub_1001A3D08(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v172, v107, v106, 0.0, 1, v108, v110);
  sub_10001457C(v103, &qword_1008003F0);
  uint64_t v111 = v146;
  static AccessibilityChildBehavior.ignore.getter();
  uint64_t v112 = sub_100179FE0(&qword_100800528, &qword_1008003F8, (void (*)(void))sub_10017A05C);
  uint64_t v113 = v175;
  uint64_t v114 = v178;
  View.accessibilityElement(children:)();
  v150(v111, v196);
  sub_10001457C(v109, &qword_1008003F8);
  uint64_t v115 = sub_10016EBA8();
  uint64_t v116 = v191;
  uint64_t v117 = v190;
  sub_100170AD8((uint64_t)v190 + *(int *)(v191 + 20));
  uint64_t *v117 = v115;
  uint64_t v203 = v114;
  uint64_t v204 = (void *)v112;
  uint64_t v118 = swift_getOpaqueTypeConformance2();
  uint64_t v119 = sub_100177434(&qword_100800540, (void (*)(uint64_t))type metadata accessor for InsightsYearlyEntriesChartRepresentable);
  uint64_t v120 = v177;
  uint64_t v121 = v180;
  uint64_t v122 = (void *)v116;
  View.accessibilityChartDescriptor<A>(_:)();
  sub_100179644((uint64_t)v117, type metadata accessor for InsightsYearlyEntriesChartRepresentable);
  (*(void (**)(char *, uint64_t))(v183 + 8))(v113, v121);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v123 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v125 = v124;
  uint64_t v203 = v121;
  uint64_t v204 = v122;
  LOBYTE(v122) = v126 & 1;
  uint64_t v205 = v118;
  unint64_t v206 = (void *)v119;
  swift_getOpaqueTypeConformance2();
  uint64_t v127 = (uint64_t)v182;
  uint64_t v128 = v185;
  View.accessibilityLabel(_:)();
  sub_10002B8D0(v123, v125, (char)v122);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v188 + 8))(v120, v128);
  uint64_t v129 = v184;
  sub_10002C4EC(v127, v184, &qword_100800410);
  uint64_t v130 = v167;
  uint64_t v131 = *(void (**)(char *, char *, uint64_t))(v167 + 16);
  uint64_t v132 = v179;
  uint64_t v133 = v170;
  uint64_t v134 = v168;
  v131(v179, v170, v168);
  uint64_t v135 = v186;
  sub_10001B220(v129, v186, &qword_100800410);
  uint64_t v136 = v192;
  v131(v192, v132, v134);
  uint64_t v137 = sub_100010218(&qword_100800548);
  sub_10001B220(v135, (uint64_t)&v136[*(int *)(v137 + 48)], &qword_100800410);
  sub_10001457C(v129, &qword_100800410);
  uint64_t v138 = *(void (**)(char *, uint64_t))(v130 + 8);
  v138(v133, v134);
  sub_10001457C(v135, &qword_100800410);
  return ((uint64_t (*)(char *, uint64_t))v138)(v132, v134);
}

uint64_t sub_10016C7B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v139 = a2;
  uint64_t v137 = sub_100010218(&qword_100800610);
  __chkstk_darwin(v137);
  uint64_t v138 = (char *)v120 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v136 = type metadata accessor for Font.Leading();
  uint64_t v135 = *(void *)(v136 - 8);
  __chkstk_darwin(v136);
  uint64_t v134 = (char *)v120 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_100010218(&qword_100800618);
  __chkstk_darwin(v126);
  uint64_t v131 = (void *)((char *)v120 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v132 = type metadata accessor for ContentTransition();
  uint64_t v129 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  uint64_t v121 = (char *)v120 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100800590);
  __chkstk_darwin(v7 - 8);
  uint64_t v140 = (uint64_t)v120 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120[0] = type metadata accessor for NumberFormatStyleConfiguration.Notation();
  uint64_t v9 = *(void *)(v120[0] - 8);
  __chkstk_darwin(v120[0]);
  uint64_t v11 = (char *)v120 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  char v142 = (char *)v120 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_100010218(&qword_1007F8E58);
  uint64_t v14 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  uint64_t v16 = (char *)v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  char v141 = (char *)v120 - v18;
  uint64_t v122 = sub_100010218(&qword_100800620);
  __chkstk_darwin(v122);
  uint64_t v124 = (char *)v120 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v123 = sub_100010218(&qword_100800628);
  __chkstk_darwin(v123);
  uint64_t v125 = (uint64_t)v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = sub_100010218(&qword_100800630);
  __chkstk_darwin(v128);
  uint64_t v130 = (uint64_t)v120 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100010218(&qword_100800638);
  __chkstk_darwin(v22 - 8);
  uint64_t v133 = (uint64_t)v120 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v127 = (char *)v120 - v25;
  __chkstk_darwin(v26);
  uint64_t v144 = (uint64_t)v120 - v27;
  uint64_t v28 = type metadata accessor for InsightsYearlyEntriesView(0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)v120 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a1 + *(int *)(v31 + 20);
  uint64_t v33 = *(void *)v32;
  char v34 = *(unsigned char *)(v32 + 8);
  sub_100026CCC(*(void *)v32, v34);
  char v35 = sub_100666714(v33, v34);
  sub_100026DF8(v33, v34);
  sub_1001796F8(a1, (uint64_t)v30, type metadata accessor for InsightsYearlyEntriesView);
  if (v35) {
    sub_10016D634();
  }
  sub_100179644((uint64_t)v30, type metadata accessor for InsightsYearlyEntriesView);
  uint64_t v145 = sub_10016D98C();
  static Locale.autoupdatingCurrent.getter();
  v120[1] = sub_100014398();
  IntegerFormatStyle.init(locale:)();
  static NumberFormatStyleConfiguration.Notation.compactName.getter();
  uint64_t v36 = v143;
  IntegerFormatStyle.notation(_:)();
  (*(void (**)(char *, void))(v9 + 8))(v11, v120[0]);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v36);
  v120[0] = sub_100014488(&qword_1008002E8, &qword_1007F8E58);
  uint64_t v37 = Text.init<A>(_:format:)();
  uint64_t v39 = v38;
  LOBYTE(v36) = v40;
  v120[2] = a1;
  sub_100010218(&qword_1007FD6E0);
  ScaledMetric.wrappedValue.getter();
  char v41 = v36 & 1;
  static Font.Weight.bold.getter();
  uint64_t v42 = type metadata accessor for Font.Design();
  uint64_t v43 = v140;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v140, 1, 1, v42);
  static Font.system(size:weight:design:)();
  sub_10001457C(v43, &qword_100800590);
  uint64_t v44 = Text.font(_:)();
  uint64_t v46 = v45;
  char v48 = v47;
  swift_release();
  sub_10002B8D0(v37, v39, v41);
  swift_bridgeObjectRelease();
  uint64_t v140 = Text.tracking(_:)();
  uint64_t v50 = v49;
  uint64_t v52 = v51;
  char v54 = v53 & 1;
  sub_10002B8D0(v44, v46, v48 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v56 = swift_getKeyPath();
  uint64_t v57 = v121;
  static ContentTransition.numericText(countsDown:)();
  uint64_t v58 = swift_getKeyPath();
  unint64_t v59 = v131;
  uint64_t v60 = v129;
  uint64_t v61 = v132;
  (*(void (**)(char *, char *, uint64_t))(v129 + 16))((char *)v131 + *(int *)(v126 + 28), v57, v132);
  uint64_t *v59 = v58;
  uint64_t v62 = (uint64_t)v124;
  sub_10001B220((uint64_t)v59, (uint64_t)&v124[*(int *)(v122 + 36)], &qword_100800618);
  uint64_t v63 = v140;
  *(void *)uint64_t v62 = v140;
  *(void *)(v62 + 8) = v50;
  *(unsigned char *)(v62 + 16) = v54;
  *(void *)(v62 + 24) = v52;
  *(void *)(v62 + 32) = KeyPath;
  *(void *)(v62 + 40) = 1;
  *(unsigned char *)(v62 + 48) = 0;
  *(void *)(v62 + 56) = v56;
  *(void *)(v62 + 64) = 0x3FB999999999999ALL;
  sub_1000C04A4(v63, v50, v54);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_10001457C((uint64_t)v59, &qword_100800618);
  (*(void (**)(char *, uint64_t))(v60 + 8))(v57, v61);
  sub_10002B8D0(v140, v50, v54);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v57) = static Edge.Set.top.getter();
  EdgeInsets.init(_all:)();
  uint64_t v65 = v64;
  uint64_t v67 = v66;
  uint64_t v69 = v68;
  uint64_t v71 = v70;
  uint64_t v72 = v125;
  sub_10001B220(v62, v125, &qword_100800620);
  uint64_t v73 = v72 + *(int *)(v123 + 36);
  *(unsigned char *)uint64_t v73 = (_BYTE)v57;
  *(void *)(v73 + 8) = v65;
  *(void *)(v73 + 16) = v67;
  *(void *)(v73 + 24) = v69;
  *(void *)(v73 + 32) = v71;
  *(unsigned char *)(v73 + 40) = 0;
  sub_10001457C(v62, &qword_100800620);
  LOBYTE(v57) = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v75 = v74;
  uint64_t v77 = v76;
  uint64_t v79 = v78;
  uint64_t v81 = v80;
  uint64_t v82 = v130;
  sub_10001B220(v72, v130, &qword_100800628);
  uint64_t v83 = v82 + *(int *)(v128 + 36);
  *(unsigned char *)uint64_t v83 = (_BYTE)v57;
  *(void *)(v83 + 8) = v75;
  *(void *)(v83 + 16) = v77;
  *(void *)(v83 + 24) = v79;
  *(void *)(v83 + 32) = v81;
  *(unsigned char *)(v83 + 40) = 0;
  sub_10001457C(v72, &qword_100800628);
  uint64_t v145 = sub_10016D98C();
  static Locale.autoupdatingCurrent.getter();
  IntegerFormatStyle.init(locale:)();
  uint64_t v84 = Text.init<A>(_:format:)();
  uint64_t v86 = v85;
  char v88 = v87 & 1;
  sub_100179FE0(&qword_100800640, &qword_100800630, (void (*)(void))sub_10017A8F4);
  uint64_t v89 = (uint64_t)v127;
  View.accessibilityLabel(_:)();
  sub_10002B8D0(v84, v86, v88);
  swift_bridgeObjectRelease();
  sub_10001457C(v82, &qword_100800630);
  sub_10002C4EC(v89, v144, &qword_100800638);
  uint64_t v90 = sub_10016DDD0();
  uint64_t v92 = v91;
  LOBYTE(v89) = v93 & 1;
  static Font.headline.getter();
  uint64_t v94 = v135;
  uint64_t v95 = v134;
  uint64_t v96 = v136;
  (*(void (**)(char *, void, uint64_t))(v135 + 104))(v134, enum case for Font.Leading.tight(_:), v136);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v95, v96);
  char v142 = (char *)Text.font(_:)();
  uint64_t v143 = v97;
  uint64_t v99 = v98;
  LOBYTE(v56) = v100;
  swift_release();
  char v101 = v56 & 1;
  sub_10002B8D0(v90, v92, v89);
  swift_bridgeObjectRelease();
  LODWORD(v90) = static HierarchicalShapeStyle.tertiary.getter();
  uint64_t v103 = v137;
  uint64_t v102 = v138;
  uint64_t v104 = &v138[*(int *)(v137 + 36)];
  uint64_t v105 = enum case for BlendMode.plusDarker(_:);
  uint64_t v106 = type metadata accessor for BlendMode();
  double v107 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v106 - 8) + 104);
  v107(v104, v105, v106);
  v107(&v102[*(int *)(v103 + 40)], enum case for BlendMode.plusLighter(_:), v106);
  *(_DWORD *)uint64_t v102 = v90;
  sub_100014488(&qword_1008006A0, &qword_100800610);
  uint64_t v108 = (uint64_t)v142;
  uint64_t v109 = Text.foregroundStyle<A>(_:)();
  uint64_t v111 = v110;
  uint64_t v113 = v112;
  LOBYTE(v106) = v114 & 1;
  sub_10002B8D0(v108, v99, v101);
  swift_bridgeObjectRelease();
  sub_10001457C((uint64_t)v102, &qword_100800610);
  uint64_t v115 = v144;
  uint64_t v116 = v133;
  sub_10001B220(v144, v133, &qword_100800638);
  uint64_t v117 = v139;
  sub_10001B220(v116, v139, &qword_100800638);
  uint64_t v118 = v117 + *(int *)(sub_100010218(&qword_1008006A8) + 48);
  *(void *)uint64_t v118 = v109;
  *(void *)(v118 + 8) = v111;
  *(unsigned char *)(v118 + 16) = v106;
  *(void *)(v118 + 24) = v113;
  *(void *)(v118 + 32) = 0x3FF0000000000000;
  sub_1000C04A4(v109, v111, v106);
  swift_bridgeObjectRetain();
  sub_10001457C(v115, &qword_100800638);
  sub_10002B8D0(v109, v111, v106);
  swift_bridgeObjectRelease();
  return sub_10001457C(v116, &qword_100800638);
}

BOOL sub_10016D634()
{
  uint64_t v22 = type metadata accessor for Calendar.Component();
  uint64_t v0 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Calendar();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v21 - v14;
  type metadata accessor for InsightsYearlyEntriesView(0);
  sub_100010218(&qword_1007FC8F0);
  State.wrappedValue.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10001457C((uint64_t)v8, (uint64_t *)&unk_1007FC470);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    sub_100666410((uint64_t)v5);
    static Date.now.getter();
    uint64_t v17 = v22;
    (*(void (**)(char *, void, uint64_t))(v0 + 104))(v2, enum case for Calendar.Component.year(_:), v22);
    uint64_t v18 = Calendar.compare(_:to:toGranularity:)();
    (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v17);
    BOOL v16 = v18 == 0;
    uint64_t v19 = *(void (**)(char *, uint64_t))(v10 + 8);
    v19(v12, v9);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v24);
    v19(v15, v9);
  }
  return v16;
}

uint64_t sub_10016D98C()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_1007FF080);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for InsightsYearlyEntriesView(0);
  sub_100010218(&qword_1007FC8F0);
  State.wrappedValue.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_10001457C((uint64_t)v9, (uint64_t *)&unk_1007FC470);
    char v15 = *(unsigned char *)(v0 + *(int *)(v14 + 36) + 8);
    uint64_t v16 = swift_retain();
    uint64_t v17 = sub_100666C70(v16, v15);
    swift_release();
    swift_getKeyPath();
    uint64_t v28 = v17;
    sub_100177434((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v18 = *(void *)(v17 + OBJC_IVAR____TtC7Journal19InsightsDataManager__allTime + 16);
    swift_release();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    char v19 = *(unsigned char *)(v0 + *(int *)(v14 + 36) + 8);
    uint64_t v20 = swift_retain();
    uint64_t v21 = sub_100666C70(v20, v19);
    swift_release();
    swift_getKeyPath();
    uint64_t v28 = v21;
    sub_100177434((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v22 = v21 + OBJC_IVAR____TtC7Journal19InsightsDataManager__byEntryDate;
    swift_beginAccess();
    sub_1001796F8(v22, (uint64_t)v6, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    swift_release();
    sub_10001B220((uint64_t)&v6[*(int *)(v4 + 28)], (uint64_t)v3, (uint64_t *)&unk_1007FF080);
    sub_100179644((uint64_t)v6, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    sub_100650BCC((uint64_t)v13);
    uint64_t v18 = v23;
    uint64_t v25 = v24;
    sub_10001457C((uint64_t)v3, (uint64_t *)&unk_1007FF080);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (v25)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      return 0;
    }
  }
  return v18;
}

uint64_t sub_10016DDD0()
{
  uint64_t v0 = sub_100010218(&qword_1008006B0);
  uint64_t v51 = *(void *)(v0 - 8);
  uint64_t v52 = v0;
  __chkstk_darwin(v0);
  uint64_t v50 = (char *)&v40 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100010218(&qword_1008006B8);
  uint64_t v44 = *(void *)(v2 - 8);
  uint64_t v45 = v2;
  __chkstk_darwin(v2);
  uint64_t v43 = (char *)&v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for AttributeContainer();
  uint64_t v48 = *(void *)(v4 - 8);
  uint64_t v49 = v4;
  __chkstk_darwin(v4);
  char v47 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v46 = (char *)&v40 - v7;
  uint64_t v8 = type metadata accessor for AttributedString.FormattingOptions();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_100010218(&qword_1007FEAE0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v13 - 8);
  uint64_t v42 = type metadata accessor for AttributedString();
  uint64_t v14 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  char v41 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v40 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v40 - v20;
  if (sub_10016D634())
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v22._uint64_t countAndFlagsBits = 0x656972746E452A2ALL;
    v22._object = (void *)0xED000028202A2A73;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
    uint64_t v53 = sub_10016D98C();
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    uint64_t v23 = 0x5920736968540A29;
    unint64_t v24 = 0xEB00000000726165;
  }
  else
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v26._uint64_t countAndFlagsBits = 0x656972746E452A2ALL;
    v26._object = (void *)0xED000028202A2A73;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v26);
    uint64_t v53 = sub_10016D98C();
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    uint64_t v23 = 41;
    unint64_t v24 = 0xE100000000000000;
  }
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v23);
  String.LocalizationValue.init(stringInterpolation:)();
  uint64_t v25 = type metadata accessor for Locale();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v11, 1, 1, v25);
  uint64_t v53 = (uint64_t)_swiftEmptyArrayStorage;
  sub_100177434(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
  sub_100010218(&qword_1007FEB18);
  sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  AttributedString.init(localized:options:table:bundle:locale:comment:)();
  uint64_t v27 = v42;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v21, v18, v42);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  swift_getKeyPath();
  sub_10017AB0C();
  uint64_t v29 = v43;
  static AttributeContainer.subscript.getter();
  swift_release();
  uint64_t v53 = 2;
  uint64_t v30 = v45;
  uint64_t v31 = v46;
  AttributeContainer.Builder.callAsFunction(_:)();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v30);
  uint64_t v32 = swift_getKeyPath();
  __chkstk_darwin(v32);
  swift_getKeyPath();
  sub_10017ABA0();
  uint64_t v33 = v50;
  static AttributeContainer.subscript.getter();
  swift_release();
  uint64_t v53 = static Color.primary.getter();
  char v34 = v47;
  uint64_t v35 = v52;
  AttributeContainer.Builder.callAsFunction(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v51 + 8))(v33, v35);
  AttributedString.replaceAttributes(_:with:)();
  uint64_t v36 = v49;
  uint64_t v37 = *(void (**)(char *, uint64_t))(v48 + 8);
  v37(v34, v49);
  v37(v31, v36);
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v41, v21, v27);
  uint64_t v38 = Text.init(_:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v27);
  return v38;
}

uint64_t sub_10016E6E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v26 = a2;
  uint64_t v2 = sub_100010218(&qword_1008005F0);
  __chkstk_darwin(v2 - 8);
  Swift::String v22 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  v20[1] = (char *)v20 - v5;
  uint64_t v6 = sub_100010218(&qword_1008005F8);
  __chkstk_darwin(v6 - 8);
  v20[2] = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100800448);
  uint64_t v23 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_100800440);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v24 = v11;
  uint64_t v25 = v12;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v30 = sub_10016EBA8();
  LocalizedStringKey.init(stringLiteral:)();
  swift_getKeyPath();
  static PlottableProjection.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  LocalizedStringKey.init(stringLiteral:)();
  swift_getKeyPath();
  static PlottableProjection.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  LocalizedStringKey.init(stringLiteral:)();
  swift_getKeyPath();
  static PlottableProjection.value(_:_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_100010218(&qword_100800600);
  type metadata accessor for Date();
  sub_100014488(&qword_100800608, &qword_100800600);
  RulePlot.init<A, B, C>(_:x:yStart:yEnd:)();
  uint64_t v15 = (long long *)(v21 + *(int *)(type metadata accessor for InsightsYearlyEntriesView(0) + 52));
  long long v16 = v15[1];
  long long v30 = *v15;
  long long v31 = v16;
  uint64_t v32 = *((void *)v15 + 4);
  unint64_t v17 = sub_100179B44();
  ChartContent.lineStyle(_:)();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v10, v8);
  int v29 = static HierarchicalShapeStyle.secondary.getter();
  uint64_t v27 = v8;
  unint64_t v28 = v17;
  swift_getOpaqueTypeConformance2();
  uint64_t v18 = v24;
  ChartContent.foregroundStyle<A>(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v14, v18);
}

uint64_t sub_10016EBA8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FF080);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for InsightsYearlyEntriesView(0);
  sub_100010218(&qword_1007FC8F0);
  State.wrappedValue.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10001457C((uint64_t)v10, (uint64_t *)&unk_1007FC470);
LABEL_4:
    char v22 = *(unsigned char *)(v1 + *(int *)(v15 + 36) + 8);
    uint64_t v23 = swift_retain();
    uint64_t v24 = sub_100666C70(v23, v22);
    swift_release();
    swift_getKeyPath();
    uint64_t v29 = v24;
    sub_100177434((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v21 = *(void *)(v24 + OBJC_IVAR____TtC7Journal19InsightsDataManager__allTime + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_release();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  char v16 = *(unsigned char *)(v0 + *(int *)(v15 + 36) + 8);
  uint64_t v17 = swift_retain();
  uint64_t v18 = sub_100666C70(v17, v16);
  swift_release();
  swift_getKeyPath();
  uint64_t v27 = v5;
  uint64_t v28 = v18;
  sub_100177434((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v19 = v18 + OBJC_IVAR____TtC7Journal19InsightsDataManager__byEntryDate;
  swift_beginAccess();
  sub_1001796F8(v19, (uint64_t)v7, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  swift_release();
  sub_10001B220((uint64_t)&v7[*(int *)(v27 + 28)], (uint64_t)v4, (uint64_t *)&unk_1007FF080);
  sub_100179644((uint64_t)v7, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
  sub_100650BCC((uint64_t)v14);
  uint64_t v21 = v20;
  sub_10001457C((uint64_t)v4, (uint64_t *)&unk_1007FF080);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (!v21) {
    goto LABEL_4;
  }
LABEL_5:
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_10016F010@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v98 = a2;
  uint64_t v85 = sub_100010218(&qword_1008004B8);
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v82 = (void (*)(void))((char *)v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v90 = sub_100010218(&qword_1008005A8);
  __chkstk_darwin(v90);
  uint64_t v89 = (char *)v77 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_100800488);
  __chkstk_darwin(v5 - 8);
  char v93 = (char *)v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1008004A8);
  uint64_t v91 = *(void *)(v7 - 8);
  uint64_t v92 = v7;
  __chkstk_darwin(v7);
  uint64_t v99 = (char *)v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v100 = (char *)v77 - v10;
  uint64_t v79 = (uint64_t (*)(void))type metadata accessor for Calendar();
  uint64_t v78 = *((void *)v79 - 1);
  __chkstk_darwin(v79);
  uint64_t v86 = (uint64_t)v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218(&qword_1007FC8E0);
  __chkstk_darwin(v12 - 8);
  uint64_t v83 = (uint64_t)v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UniformDateBins(0);
  __chkstk_darwin(v14 - 8);
  uint64_t v81 = (uint64_t)v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v16 - 8);
  uint64_t v97 = (char *)v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v18 - 8);
  char v101 = (void (*)(char *, char *, uint64_t))((char *)v77 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v20 = type metadata accessor for InsightsYearlyEntriesView(0);
  uint64_t v94 = *(void *)(v20 - 8);
  uint64_t v21 = *(void *)(v94 + 64);
  __chkstk_darwin(v20);
  uint64_t v96 = (uint64_t)v77 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100010218(&qword_1007FFBB8);
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)v77 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = type metadata accessor for Calendar.Component();
  uint64_t v25 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v27 = (char *)v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = type metadata accessor for AxisMarkValues();
  __chkstk_darwin(v28 - 8);
  long long v30 = (char *)v77 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_100010218(&qword_100800498);
  uint64_t v87 = *(void *)(v88 - 8);
  __chkstk_darwin(v88);
  uint64_t v80 = (char *)v77 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v102 = (char *)v77 - v33;
  uint64_t v34 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v34 - 8);
  uint64_t v36 = (char *)v77 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = a1;
  sub_100010218(&qword_1007FC8F0);
  State.wrappedValue.getter();
  uint64_t v38 = type metadata accessor for Date();
  int v39 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v38 - 8) + 48))(v36, 1, v38);
  sub_10001457C((uint64_t)v36, (uint64_t *)&unk_1007FC470);
  if (v39 == 1)
  {
    static AxisMarkValues.automatic(desiredCount:roundLowerBound:roundUpperBound:)();
    uint64_t v40 = v96;
    sub_1001796F8(v37, v96, type metadata accessor for InsightsYearlyEntriesView);
    unint64_t v41 = (*(unsigned __int8 *)(v94 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v94 + 80);
    uint64_t v42 = swift_allocObject();
    sub_100179764(v40, v42 + v41);
    static AxisMarkPreset.automatic.getter();
    static AxisMarkPosition.automatic.getter();
    sub_100010218(&qword_1008005B0);
    sub_10017A660();
    uint64_t v43 = v82;
    AxisMarks.init(preset:position:values:content:)();
    uint64_t v44 = v84;
    uint64_t v45 = v85;
    (*(void (**)(uint64_t, void (*)(void), uint64_t))(v84 + 16))(v98, v43, v85);
    sub_100010218(&qword_1008005C0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(void (*)(void), uint64_t))(v44 + 8))(v43, v45);
  }
  else
  {
    LODWORD(v84) = enum case for Calendar.Component.month(_:);
    uint64_t v85 = v38;
    uint64_t v82 = *(void (**)(void))(v25 + 104);
    uint64_t v47 = v95;
    v82(v27);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t (*)(void)))(v78 + 56))(v24, 1, 1, v79);
    v77[2] = v30;
    static AxisMarkValues.stride(by:count:roundLowerBound:roundUpperBound:calendar:)();
    sub_10001457C((uint64_t)v24, &qword_1007FFBB8);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v47);
    uint64_t v79 = type metadata accessor for InsightsYearlyEntriesView;
    uint64_t v48 = v96;
    sub_1001796F8(v37, v96, type metadata accessor for InsightsYearlyEntriesView);
    uint64_t v49 = *(unsigned __int8 *)(v94 + 80);
    uint64_t v78 = ((v49 + 16) & ~v49) + v21;
    uint64_t v50 = (v49 + 16) & ~v49;
    uint64_t v94 = v50;
    v77[3] = v49 | 7;
    uint64_t v51 = swift_allocObject();
    sub_100179764(v48, v51 + v50);
    static AxisMarkPreset.automatic.getter();
    static AxisMarkPosition.automatic.getter();
    v77[1] = sub_100010218(&qword_1008005C8);
    uint64_t v52 = sub_100014440(&qword_100800570);
    uint64_t v53 = sub_100014440(&qword_100800560);
    uint64_t v54 = sub_100014440(&qword_100800578);
    uint64_t v55 = sub_100014488(&qword_100800580, &qword_100800578);
    uint64_t v103 = v54;
    uint64_t v104 = v55;
    uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
    uint64_t v57 = sub_100014488(&qword_100800568, &qword_100800560);
    uint64_t v103 = v52;
    uint64_t v104 = v53;
    uint64_t v105 = OpaqueTypeConformance2;
    uint64_t v106 = v57;
    swift_getOpaqueTypeConformance2();
    AxisMarks.init(preset:position:values:content:)();
    ((void (*)(char *, void, uint64_t))v82)(v27, v84, v95);
    uint64_t v58 = v83;
    sub_100170AD8(v83);
    uint64_t v59 = v86;
    sub_100666410(v86);
    uint64_t v60 = v81;
    sub_10066B1E8((uint64_t)v27, v58, v59, v81);
    sub_100168784(v60);
    sub_100179644(v60, type metadata accessor for UniformDateBins);
    sub_1001796F8(v37, v48, v79);
    uint64_t v61 = swift_allocObject();
    sub_100179764(v48, v61 + v94);
    static AxisMarkPreset.automatic.getter();
    static AxisMarkPosition.automatic.getter();
    sub_100010218(&qword_1008005D0);
    sub_10017A7B4();
    uint64_t v62 = v100;
    AxisMarks.init<A>(preset:position:values:content:)();
    uint64_t v63 = v87;
    uint64_t v64 = *(void (**)(char *, char *, uint64_t))(v87 + 16);
    uint64_t v65 = v80;
    uint64_t v66 = v88;
    v64(v80, v102, v88);
    uint64_t v67 = v91;
    char v101 = *(void (**)(char *, char *, uint64_t))(v91 + 16);
    uint64_t v68 = v62;
    uint64_t v69 = v92;
    v101(v99, v68, v92);
    sub_100014488(&qword_100800490, &qword_100800498);
    uint64_t v70 = v89;
    v64(v89, v65, v66);
    sub_100014488(&qword_1008004A0, &qword_1008004A8);
    uint64_t v71 = v90;
    uint64_t v72 = &v70[*(int *)(v90 + 48)];
    uint64_t v73 = v99;
    v101(v72, v99, v69);
    uint64_t v74 = (uint64_t)v93;
    (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v93, v70, v66);
    (*(void (**)(uint64_t, char *, uint64_t))(v67 + 32))(v74 + *(int *)(v71 + 48), v72, v69);
    uint64_t v75 = *(void (**)(char *, uint64_t))(v67 + 8);
    v75(v73, v69);
    uint64_t v76 = *(void (**)(char *, uint64_t))(v63 + 8);
    v76(v65, v66);
    sub_10001B220(v74, v98, &qword_100800488);
    sub_100010218(&qword_1008005C0);
    swift_storeEnumTagMultiPayload();
    sub_10001457C(v74, &qword_100800488);
    v75(v100, v69);
    return ((uint64_t (*)(char *, uint64_t))v76)(v102, v66);
  }
}

uint64_t sub_10016FD9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v49 = a3;
  uint64_t v3 = sub_100010218(&qword_100800590);
  __chkstk_darwin(v3 - 8);
  uint64_t v48 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v5 - 8);
  unint64_t v41 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v7 - 8);
  uint64_t v37 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = type metadata accessor for Date.FormatStyle.Symbol.Month();
  uint64_t v9 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date.FormatStyle();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v17 = sub_100010218(&qword_100800578);
  uint64_t v43 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100010218(&qword_100800570);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v46 = v20;
  uint64_t v47 = v21;
  __chkstk_darwin(v20);
  uint64_t v40 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100010218(&qword_1008005C8);
  uint64_t v44 = *(void *)(v23 - 8);
  uint64_t v45 = v23;
  __chkstk_darwin(v23);
  uint64_t v42 = (char *)&v35 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100170444();
  static FormatStyle<>.dateTime.getter();
  static Date.FormatStyle.Symbol.Month.narrow.getter();
  Date.FormatStyle.month(_:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v36);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  static AxisValueLabelCollisionResolution.greedy(priority:minimumSpacing:)();
  static AxisValueLabelOrientation.automatic.getter();
  sub_100177434((unint64_t *)&qword_1007F9588, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  AxisValueLabel.init<A>(format:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
  uint64_t v25 = type metadata accessor for Font.Design();
  uint64_t v26 = (uint64_t)v48;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v48, 1, 1, v25);
  static Font.system(size:weight:design:)();
  sub_10001457C(v26, &qword_100800590);
  Font.bold()();
  swift_release();
  uint64_t v27 = sub_100014488(&qword_100800580, &qword_100800578);
  uint64_t v28 = v40;
  AxisMark.font(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v19, v17);
  int v29 = static HierarchicalShapeStyle.tertiary.getter();
  BOOL v30 = sub_100170748();
  float v31 = 0.5;
  if (v30) {
    float v31 = 1.0;
  }
  int v52 = v29;
  float v53 = v31;
  sub_100010218(&qword_100800560);
  uint64_t v50 = v17;
  uint64_t v51 = v27;
  swift_getOpaqueTypeConformance2();
  sub_100014488(&qword_100800568, &qword_100800560);
  uint64_t v32 = v42;
  uint64_t v33 = v46;
  AxisMark.foregroundStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v28, v33);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v44 + 32))(v49, v32, v45);
}

uint64_t sub_100170444()
{
  uint64_t v0 = type metadata accessor for Calendar.Component();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Calendar();
  uint64_t v4 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  AxisValue.as<A>(_:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_10001457C((uint64_t)v9, (uint64_t *)&unk_1007FC470);
    return 1;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_100666410((uint64_t)v6);
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Calendar.Component.month(_:), v0);
    uint64_t v14 = Calendar.component(_:from:)();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v17);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return v14;
}

BOOL sub_100170748()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_1007FF080);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  AxisValue.as<A>(_:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_10001457C((uint64_t)v9, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    char v14 = *(unsigned char *)(v0 + *(int *)(type metadata accessor for InsightsYearlyEntriesView(0) + 36) + 8);
    uint64_t v15 = swift_retain();
    uint64_t v16 = sub_100666C70(v15, v14);
    swift_release();
    swift_getKeyPath();
    v23[1] = v16;
    sub_100177434((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v17 = v16 + OBJC_IVAR____TtC7Journal19InsightsDataManager__byEntryDate;
    swift_beginAccess();
    sub_1001796F8(v17, (uint64_t)v6, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    swift_release();
    sub_10001B220((uint64_t)&v6[*(int *)(v4 + 24)], (uint64_t)v3, (uint64_t *)&unk_1007FF080);
    sub_100179644((uint64_t)v6, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    sub_100650BCC((uint64_t)v13);
    uint64_t v19 = v18;
    uint64_t v21 = v20;
    sub_10001457C((uint64_t)v3, (uint64_t *)&unk_1007FF080);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if (v21)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v19 > 0;
    }
  }
  return 0;
}

uint64_t sub_100170AD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v2 = sub_100010218((uint64_t *)&unk_1007FF080);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for InsightsDataManager.EntrySummaryGroup(0);
  __chkstk_darwin(v26);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for InsightsYearlyEntriesView(0);
  sub_100010218(&qword_1007FC8F0);
  State.wrappedValue.getter();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_10001457C((uint64_t)v9, (uint64_t *)&unk_1007FC470);
    char v15 = *(unsigned char *)(v1 + *(int *)(v14 + 36) + 8);
    uint64_t v16 = swift_retain();
    uint64_t v17 = sub_100666C70(v16, v15);
    swift_release();
    swift_getKeyPath();
    uint64_t v28 = v17;
    sub_100177434((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v18 = v17 + OBJC_IVAR____TtC7Journal19InsightsDataManager__byEntryDate;
    swift_beginAccess();
    sub_1001796F8(v18, (uint64_t)v6, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    swift_release();
    sub_10001B220((uint64_t)&v6[*(int *)(v26 + 24)], (uint64_t)v4, (uint64_t *)&unk_1007FF080);
    sub_100179644((uint64_t)v6, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    sub_10001B220((uint64_t)&v4[*(int *)(v2 + 28)], v27, &qword_1007FC8E0);
    return sub_10001457C((uint64_t)v4, (uint64_t *)&unk_1007FF080);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    char v20 = *(unsigned char *)(v1 + *(int *)(v14 + 36) + 8);
    uint64_t v21 = swift_retain();
    uint64_t v22 = sub_100666C70(v21, v20);
    swift_release();
    swift_getKeyPath();
    uint64_t v28 = v22;
    sub_100177434((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v23 = v22 + OBJC_IVAR____TtC7Journal19InsightsDataManager__byEntryDate;
    swift_beginAccess();
    sub_1001796F8(v23, (uint64_t)v6, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    swift_release();
    sub_10001B220((uint64_t)&v6[*(int *)(v26 + 28)], (uint64_t)v4, (uint64_t *)&unk_1007FF080);
    sub_100179644((uint64_t)v6, type metadata accessor for InsightsDataManager.EntrySummaryGroup);
    uint64_t v24 = sub_10066B940();
    sub_10066AC8C(v24, v27);
    sub_10001457C((uint64_t)v4, (uint64_t *)&unk_1007FF080);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

uint64_t sub_100170F98@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AxisTick();
  uint64_t v30 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1008005E0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_1008005E8);
  uint64_t v31 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (sub_100170748())
  {
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56);
    return v14(a2, 1, 1, v11);
  }
  else
  {
    uint64_t v16 = *(int *)(type metadata accessor for InsightsYearlyEntriesView(0) + 52);
    uint64_t v29 = a2;
    uint64_t v17 = (long long *)(a1 + v16);
    uint64_t v19 = *(void *)(a1 + v16 + 16);
    uint64_t v18 = *((void *)v17 + 3);
    uint64_t v20 = *((void *)v17 + 4);
    long long v36 = *v17;
    uint64_t v37 = v19;
    uint64_t v38 = v18;
    uint64_t v39 = v20;
    swift_bridgeObjectRetain();
    AxisTick.init(centered:length:stroke:)();
    LODWORD(v32) = static HierarchicalShapeStyle.tertiary.getter();
    HIDWORD(v32) = 1056964608;
    uint64_t v21 = sub_100010218(&qword_100800560);
    uint64_t v22 = sub_100014488(&qword_100800568, &qword_100800560);
    uint64_t v28 = v11;
    uint64_t v23 = v7;
    uint64_t v24 = v8;
    uint64_t v25 = v22;
    AxisMark.foregroundStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v4);
    uint64_t v32 = v4;
    uint64_t v33 = v21;
    uint64_t v34 = &protocol witness table for AxisTick;
    uint64_t v35 = v25;
    swift_getOpaqueTypeConformance2();
    AxisMark.offset(x:y:)();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v10, v23);
    uint64_t v27 = v28;
    uint64_t v26 = v29;
    (*(void (**)(uint64_t, char *, uint64_t))(v31 + 32))(v29, v13, v28);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v31 + 56))(v26, 0, 1, v27);
  }
}

uint64_t sub_10017134C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v61 = a3;
  uint64_t v62 = a2;
  uint64_t v4 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v4 - 8);
  uint64_t v59 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v6 - 8);
  uint64_t v55 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date.FormatStyle.Symbol.Year();
  uint64_t v47 = *(void *)(v8 - 8);
  uint64_t v48 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = type metadata accessor for Date.FormatStyle();
  uint64_t v46 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v49 = (char *)&v45 - v14;
  uint64_t v56 = sub_100010218(&qword_100800578);
  uint64_t v53 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100010218(&qword_100800570);
  uint64_t v57 = *(void *)(v17 - 8);
  uint64_t v58 = v17;
  __chkstk_darwin(v17);
  uint64_t v54 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_100010218(&qword_100800598);
  uint64_t v19 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  int v52 = (char *)&v45 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v51 = (char *)&v45 - v22;
  uint64_t v23 = type metadata accessor for AxisValue();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v45 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for InsightsYearlyEntriesView(0);
  __chkstk_darwin(v27 - 8);
  uint64_t v29 = (char *)&v45 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = AxisValue.index.getter();
  sub_1001796F8(v62, (uint64_t)v29, type metadata accessor for InsightsYearlyEntriesView);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v26, a1, v23);
  if (v30)
  {
    uint64_t v31 = sub_100170444();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    sub_100179644((uint64_t)v29, type metadata accessor for InsightsYearlyEntriesView);
    if (v31 != 1)
    {
      uint64_t v32 = 1;
      uint64_t v34 = v60;
      uint64_t v33 = v61;
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v33, v32, 1, v34);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
    sub_100179644((uint64_t)v29, type metadata accessor for InsightsYearlyEntriesView);
  }
  uint64_t v35 = AxisValue.index.getter();
  uint64_t result = AxisValue.count.getter();
  uint64_t v37 = result - 1;
  if (!__OFSUB__(result, 1))
  {
    static FormatStyle<>.dateTime.getter();
    static Date.FormatStyle.Symbol.Year.defaultDigits.getter();
    Date.FormatStyle.year(_:)();
    (*(void (**)(char *, uint64_t))(v47 + 8))(v10, v48);
    (*(void (**)(char *, uint64_t))(v46 + 8))(v12, v50);
    if (v35 == v37) {
      static UnitPoint.topTrailing.getter();
    }
    static AxisValueLabelCollisionResolution.greedy.getter();
    static AxisValueLabelOrientation.automatic.getter();
    sub_100177434((unint64_t *)&qword_1007F9588, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
    AxisValueLabel.init<A>(format:centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
    static Font.caption2.getter();
    Font.bold()();
    swift_release();
    uint64_t v38 = sub_100014488(&qword_100800580, &qword_100800578);
    uint64_t v39 = v54;
    uint64_t v40 = v56;
    AxisMark.font(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v16, v40);
    int v65 = static HierarchicalShapeStyle.tertiary.getter();
    uint64_t v63 = v40;
    uint64_t v64 = v38;
    swift_getOpaqueTypeConformance2();
    unint64_t v41 = v52;
    uint64_t v42 = v58;
    AxisMark.foregroundStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v39, v42);
    uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
    uint64_t v44 = v51;
    uint64_t v34 = v60;
    v43(v51, v41, v60);
    uint64_t v33 = v61;
    v43(v61, v44, v34);
    uint64_t v32 = 0;
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v33, v32, 1, v34);
  }
  __break(1u);
  return result;
}

uint64_t sub_100171B1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100172A68(a1, &qword_1008004C0, (uint64_t (*)(void))&type metadata accessor for ChartAxisContent, a2);
}

uint64_t sub_100171B3C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AxisMarkPosition();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for AxisMarkPreset();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for InsightsYearlyEntriesView(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = type metadata accessor for AxisMarkValues();
  __chkstk_darwin(v7 - 8);
  static AxisMarkValues.automatic(desiredCount:roundLowerBound:roundUpperBound:)();
  sub_1001796F8(a1, (uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for InsightsYearlyEntriesView);
  unint64_t v8 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = swift_allocObject();
  sub_100179764((uint64_t)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  static AxisMarkPreset.automatic.getter();
  static AxisMarkPosition.automatic.getter();
  sub_100010218(&qword_100800550);
  sub_10017A4AC();
  return AxisMarks.init(preset:position:values:content:)();
}

uint64_t sub_100171D78@<X0>(char *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v74 = a1;
  uint64_t v76 = a2;
  uint64_t v75 = sub_100010218(&qword_100800588);
  __chkstk_darwin(v75);
  uint64_t v73 = (char *)&v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100010218(&qword_100800590);
  __chkstk_darwin(v3 - 8);
  uint64_t v66 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AxisValueLabelOrientation();
  __chkstk_darwin(v5 - 8);
  int v65 = (char *)&v58 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AxisValueLabelCollisionResolution();
  __chkstk_darwin(v7 - 8);
  uint64_t v62 = (char *)&v58 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218(&qword_100800578);
  uint64_t v67 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v61 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_100010218(&qword_100800570);
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v60 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100010218(&qword_100800598);
  uint64_t v78 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  uint64_t v80 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v68 = (char *)&v58 - v14;
  __chkstk_darwin(v15);
  uint64_t v79 = (char *)&v58 - v16;
  uint64_t v17 = type metadata accessor for AxisGridLine();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v58 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100010218(&qword_1008005A0);
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v58 - v26;
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  long long v87 = v84;
  long long v88 = v85;
  uint64_t v89 = v86;
  AxisGridLine.init(centered:stroke:)();
  LODWORD(v81) = static HierarchicalShapeStyle.primary.getter();
  HIDWORD(v81) = 1022739087;
  sub_100010218(&qword_100800560);
  sub_100014488(&qword_100800568, &qword_100800560);
  AxisMark.foregroundStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v69 = v22;
  uint64_t v28 = v22;
  uint64_t v29 = v60;
  uint64_t v30 = *(void (**)(uint64_t, char *, uint64_t))(v28 + 32);
  uint64_t v77 = v27;
  uint64_t v31 = v24;
  uint64_t v59 = v21;
  uint64_t v64 = v28 + 32;
  uint64_t v63 = v30;
  v30((uint64_t)v27, v24, v21);
  static AxisValueLabelCollisionResolution.automatic.getter();
  static AxisValueLabelOrientation.automatic.getter();
  uint64_t v32 = v61;
  AxisValueLabel.init<>(centered:anchor:multiLabelAlignment:collisionResolution:offsetsMarks:orientation:horizontalSpacing:verticalSpacing:)();
  uint64_t v33 = type metadata accessor for Font.Design();
  uint64_t v34 = (uint64_t)v66;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v66, 1, 1, v33);
  static Font.system(size:weight:design:)();
  sub_10001457C(v34, &qword_100800590);
  Font.bold()();
  swift_release();
  uint64_t v35 = sub_100014488(&qword_100800580, &qword_100800578);
  AxisMark.font(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v32, v9);
  long long v36 = &v74[*(int *)(type metadata accessor for InsightsYearlyEntriesView(0) + 20)];
  uint64_t v37 = *(void *)v36;
  LOBYTE(v18) = v36[8];
  sub_100026CCC(*(void *)v36, v18);
  LOBYTE(v27) = sub_100666714(v37, v18);
  sub_100026DF8(v37, v18);
  if (v27) {
    int v38 = static HierarchicalShapeStyle.tertiary.getter();
  }
  else {
    int v38 = static HierarchicalShapeStyle.quaternary.getter();
  }
  int v83 = v38;
  uint64_t v81 = v9;
  uint64_t v82 = v35;
  swift_getOpaqueTypeConformance2();
  uint64_t v39 = v68;
  uint64_t v40 = v72;
  AxisMark.foregroundStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v29, v40);
  uint64_t v41 = v78;
  uint64_t v42 = v79;
  uint64_t v74 = *(char **)(v78 + 32);
  uint64_t v43 = v70;
  ((void (*)(char *, char *, uint64_t))v74)(v79, v39, v70);
  uint64_t v44 = v69;
  uint64_t v45 = *(void (**)(char *, char *, uint64_t))(v69 + 16);
  uint64_t v58 = v31;
  uint64_t v46 = v59;
  v45(v31, v77, v59);
  uint64_t v47 = v41;
  uint64_t v48 = v43;
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v47 + 16);
  v49(v80, v42, v43);
  uint64_t v50 = v73;
  v45(v73, v31, v46);
  uint64_t v51 = v75;
  int v52 = &v50[*(int *)(v75 + 48)];
  uint64_t v53 = v80;
  v49(v52, v80, v43);
  uint64_t v54 = v76;
  v63(v76, v50, v46);
  ((void (*)(uint64_t, char *, uint64_t))v74)(v54 + *(int *)(v51 + 48), v52, v48);
  uint64_t v55 = *(void (**)(char *, uint64_t))(v78 + 8);
  v55(v79, v48);
  uint64_t v56 = *(void (**)(char *, uint64_t))(v44 + 8);
  v56(v77, v46);
  v55(v53, v48);
  return ((uint64_t (*)(char *, uint64_t))v56)(v58, v46);
}

uint64_t sub_1001726C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v23 = a1;
  uint64_t v3 = type metadata accessor for BlendMode();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ColorScheme();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_100800508);
  uint64_t v12 = v11 - 8;
  __n128 v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v8 + 104))(v10, enum case for ColorScheme.light(_:), v7, v13);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v17 = (uint64_t *)&v15[*(int *)(v12 + 44)];
  uint64_t v18 = sub_100010218(&qword_100800120);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))((char *)v17 + *(int *)(v18 + 28), v10, v7);
  *uint64_t v17 = KeyPath;
  uint64_t v19 = type metadata accessor for ChartAxisContent();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(v15, v23, v19);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for BlendMode.plusDarker(_:), v3);
  uint64_t v20 = sub_100010218(&qword_1008004F0);
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 16))(a2 + *(int *)(v20 + 36), v6, v3);
  sub_10001B220((uint64_t)v15, a2, &qword_100800508);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_10001457C((uint64_t)v15, &qword_100800508);
}

uint64_t sub_1001729AC(void **a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = (uint64_t)sub_1002A6500(0, v2[2] + 1, 1, v2);
    uint64_t v2 = (void *)result;
  }
  unint64_t v5 = v2[2];
  unint64_t v4 = v2[3];
  if (v5 >= v4 >> 1)
  {
    uint64_t result = (uint64_t)sub_1002A6500((void *)(v4 > 1), v5 + 1, 1, v2);
    uint64_t v2 = (void *)result;
  }
  v2[2] = v5 + 1;
  v2[v5 + 4] = 10;
  *a1 = v2;
  return result;
}

uint64_t sub_100172A48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100172A68(a1, &qword_100800510, (uint64_t (*)(void))&type metadata accessor for ChartPlotContent, a2);
}

uint64_t sub_100172A68@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for BlendMode();
  uint64_t v9 = *(void *)(v8 - 8);
  __n128 v10 = __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v9 + 104))(v12, enum case for BlendMode.plusLighter(_:), v8, v10);
  uint64_t v13 = sub_100010218(a2);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(a4 + *(int *)(v13 + 36), v12, v8);
  uint64_t v14 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a4, a1, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v12, v8);
}

uint64_t sub_100172BD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100800238);
  __chkstk_darwin(v8);
  __n128 v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(a1 + *(int *)(type metadata accessor for InsightsYearlyEntriesView(0) + 56));
  *(void *)__n128 v10 = static VerticalAlignment.center.getter();
  *((void *)v10 + 1) = v11;
  v10[16] = 0;
  uint64_t v12 = sub_100010218(&qword_100800258);
  sub_100172D90(a2, a1, (uint64_t)&v10[*(int *)(v12 + 44)]);
  static AccessibilityChildBehavior.combine.getter();
  sub_100014488(&qword_100800240, &qword_100800238);
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_10001457C((uint64_t)v10, &qword_100800238);
}

uint64_t sub_100172D90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for InsightsYearlyEntriesView(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6 - 8);
  uint64_t v9 = sub_100010218(&qword_100800260);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(a1 + 16) >= 5uLL) {
    uint64_t v13 = 5;
  }
  else {
    uint64_t v13 = *(void *)(a1 + 16);
  }
  uint64_t v14 = *(void *)(type metadata accessor for InsightsDataManager.TopAssetCategory(0) - 8);
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
  v19[0] = a1;
  v19[1] = v15;
  v19[2] = 0;
  v19[3] = (2 * v13) | 1;
  sub_1001796F8(a2, (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for InsightsYearlyEntriesView);
  unint64_t v16 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v17 = swift_allocObject();
  sub_100179764((uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  swift_bridgeObjectRetain();
  sub_100010218(&qword_100800268);
  type metadata accessor for UUID();
  sub_100010218(&qword_100800270);
  sub_100014488(&qword_100800278, &qword_100800268);
  sub_1001797E0();
  sub_100177434(&qword_1008002B8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager.TopAssetCategory);
  ForEach<>.init(_:content:)();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v12, v9);
}

uint64_t sub_100173070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v63 = a3;
  uint64_t v4 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v61 = *(void *)(v4 - 8);
  uint64_t v62 = v4;
  __chkstk_darwin(v4);
  uint64_t v60 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = type metadata accessor for BlurReplaceTransition.Configuration();
  uint64_t v6 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v53 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v49 - v9;
  uint64_t v54 = type metadata accessor for BlurReplaceTransition();
  uint64_t v11 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  int v52 = (char *)&v49 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v49 - v14;
  uint64_t v16 = sub_100010218(&qword_1008002A0);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_100010218(&qword_100800288);
  __chkstk_darwin(v51);
  uint64_t v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100010218(&qword_1008002C0);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v58 = v21;
  uint64_t v59 = v22;
  __chkstk_darwin(v21);
  uint64_t v50 = (char *)&v49 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100010218(&qword_100800270);
  __chkstk_darwin(v24 - 8);
  uint64_t v55 = (char *)&v49 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for AttributedString();
  uint64_t v64 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v27 = (char *)&v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v49 - v29;
  sub_100173704(a1);
  *(void *)uint64_t v18 = static HorizontalAlignment.leading.getter();
  *((void *)v18 + 1) = 0xC000000000000000;
  v18[16] = 0;
  uint64_t v31 = sub_100010218(&qword_1008002C8);
  sub_10017476C(a1, (uint64_t)v30, (uint64_t *)&v18[*(int *)(v31 + 44)]);
  static BlurReplaceTransition.Configuration.downUp.getter();
  uint64_t v32 = v57;
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v53, v10, v57);
  BlurReplaceTransition.init(configuration:)();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v10, v32);
  uint64_t v33 = v54;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v52, v15, v54);
  sub_100177434(&qword_1008002D0, (void (*)(uint64_t))&type metadata accessor for BlurReplaceTransition);
  uint64_t v34 = v33;
  uint64_t v35 = AnyTransition.init<A>(_:)();
  sub_10001B220((uint64_t)v18, (uint64_t)v20, &qword_1008002A0);
  uint64_t v36 = v51;
  *(void *)&v20[*(int *)(v51 + 36)] = v35;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v15, v34);
  sub_10001457C((uint64_t)v18, &qword_1008002A0);
  uint64_t v37 = v60;
  static AccessibilityChildBehavior.ignore.getter();
  unint64_t v38 = sub_1001798C0();
  uint64_t v39 = v50;
  uint64_t v40 = v36;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v37, v62);
  sub_10001457C((uint64_t)v20, &qword_100800288);
  uint64_t v41 = v49;
  (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v27, v30, v49);
  uint64_t v42 = Text.init(_:)();
  uint64_t v44 = v43;
  LOBYTE(v36) = v45 & 1;
  uint64_t v65 = v40;
  unint64_t v66 = v38;
  swift_getOpaqueTypeConformance2();
  uint64_t v46 = (uint64_t)v55;
  uint64_t v47 = v58;
  View.accessibilityLabel(_:)();
  sub_10002B8D0(v42, v44, v36);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v59 + 8))(v39, v47);
  sub_10002C4EC(v46, v63, &qword_100800270);
  return (*(uint64_t (**)(char *, uint64_t))(v64 + 8))(v30, v41);
}

uint64_t sub_100173704(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AttributedString.FormattingOptions();
  __chkstk_darwin(v2);
  uint64_t v3 = sub_100010218(&qword_1007FEAE0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = type metadata accessor for InsightsDataManager.TopAssetCategory(0);
  switch(*(unsigned char *)(a1 + *(int *)(v8 + 20)))
  {
    case 1:
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v12._uint64_t countAndFlagsBits = 23390;
      v12._object = (void *)0xE200000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v12);
      unint64_t v38 = *(void **)(a1 + *(int *)(v8 + 24));
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v13._object = (void *)0x800000010068CED0;
      v13._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v13);
      String.LocalizationValue.init(stringInterpolation:)();
      uint64_t v14 = type metadata accessor for Locale();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v5, 1, 1, v14);
      swift_getKeyPath();
      unint64_t v38 = _swiftEmptyArrayStorage;
      sub_100177434(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
      sub_100010218(&qword_1007FEB18);
      sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      sub_100179988();
      break;
    case 2:
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v15._uint64_t countAndFlagsBits = 23390;
      v15._object = (void *)0xE200000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v15);
      unint64_t v38 = *(void **)(a1 + *(int *)(v8 + 24));
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v16._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
      v16._object = (void *)0x800000010068CE10;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v16);
      String.LocalizationValue.init(stringInterpolation:)();
      uint64_t v17 = type metadata accessor for Locale();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v5, 1, 1, v17);
      swift_getKeyPath();
      unint64_t v38 = _swiftEmptyArrayStorage;
      sub_100177434(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
      sub_100010218(&qword_1007FEB18);
      sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      sub_100179988();
      break;
    case 3:
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v18._uint64_t countAndFlagsBits = 23390;
      v18._object = (void *)0xE200000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v18);
      unint64_t v38 = *(void **)(a1 + *(int *)(v8 + 24));
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v19._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
      v19._object = (void *)0x800000010068CE70;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v19);
      String.LocalizationValue.init(stringInterpolation:)();
      uint64_t v20 = type metadata accessor for Locale();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v5, 1, 1, v20);
      swift_getKeyPath();
      unint64_t v38 = _swiftEmptyArrayStorage;
      sub_100177434(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
      sub_100010218(&qword_1007FEB18);
      sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      sub_100179988();
      break;
    case 4:
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v21._uint64_t countAndFlagsBits = 23390;
      v21._object = (void *)0xE200000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v21);
      unint64_t v38 = *(void **)(a1 + *(int *)(v8 + 24));
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v22._object = (void *)0x800000010068CDB0;
      v22._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v22);
      String.LocalizationValue.init(stringInterpolation:)();
      uint64_t v23 = type metadata accessor for Locale();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v5, 1, 1, v23);
      swift_getKeyPath();
      unint64_t v38 = _swiftEmptyArrayStorage;
      sub_100177434(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
      sub_100010218(&qword_1007FEB18);
      sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      sub_100179988();
      break;
    case 5:
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v24._uint64_t countAndFlagsBits = 23390;
      v24._object = (void *)0xE200000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v24);
      unint64_t v38 = *(void **)(a1 + *(int *)(v8 + 24));
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v25._uint64_t countAndFlagsBits = 0xD000000000000035;
      v25._object = (void *)0x800000010068CD40;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v25);
      String.LocalizationValue.init(stringInterpolation:)();
      uint64_t v26 = type metadata accessor for Locale();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v5, 1, 1, v26);
      swift_getKeyPath();
      unint64_t v38 = _swiftEmptyArrayStorage;
      sub_100177434(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
      sub_100010218(&qword_1007FEB18);
      sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      sub_100179988();
      break;
    case 6:
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v27._uint64_t countAndFlagsBits = 23390;
      v27._object = (void *)0xE200000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v27);
      unint64_t v38 = *(void **)(a1 + *(int *)(v8 + 24));
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v28._uint64_t countAndFlagsBits = 0xD000000000000030;
      v28._object = (void *)0x800000010068CCD0;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v28);
      String.LocalizationValue.init(stringInterpolation:)();
      uint64_t v29 = type metadata accessor for Locale();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v5, 1, 1, v29);
      swift_getKeyPath();
      unint64_t v38 = _swiftEmptyArrayStorage;
      sub_100177434(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
      sub_100010218(&qword_1007FEB18);
      sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      sub_100179988();
      break;
    case 7:
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v30._uint64_t countAndFlagsBits = 23390;
      v30._object = (void *)0xE200000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v30);
      unint64_t v38 = *(void **)(a1 + *(int *)(v8 + 24));
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v31._uint64_t countAndFlagsBits = 0xD000000000000033;
      v31._object = (void *)0x800000010068CC60;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v31);
      String.LocalizationValue.init(stringInterpolation:)();
      uint64_t v32 = type metadata accessor for Locale();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v5, 1, 1, v32);
      swift_getKeyPath();
      unint64_t v38 = _swiftEmptyArrayStorage;
      sub_100177434(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
      sub_100010218(&qword_1007FEB18);
      sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      sub_100179988();
      break;
    case 8:
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v33._uint64_t countAndFlagsBits = 23390;
      v33._object = (void *)0xE200000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v33);
      unint64_t v38 = *(void **)(a1 + *(int *)(v8 + 24));
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v34._uint64_t countAndFlagsBits = 0xD000000000000035;
      v34._object = (void *)0x800000010068CBF0;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v34);
      String.LocalizationValue.init(stringInterpolation:)();
      uint64_t v35 = type metadata accessor for Locale();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v5, 1, 1, v35);
      swift_getKeyPath();
      unint64_t v38 = _swiftEmptyArrayStorage;
      sub_100177434(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
      sub_100010218(&qword_1007FEB18);
      sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      sub_100179988();
      break;
    default:
      String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
      v9._uint64_t countAndFlagsBits = 23390;
      v9._object = (void *)0xE200000000000000;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v9);
      unint64_t v38 = *(void **)(a1 + *(int *)(v8 + 24));
      String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
      v10._object = (void *)0x800000010068CF30;
      v10._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
      String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v10);
      String.LocalizationValue.init(stringInterpolation:)();
      uint64_t v11 = type metadata accessor for Locale();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v5, 1, 1, v11);
      swift_getKeyPath();
      unint64_t v38 = _swiftEmptyArrayStorage;
      sub_100177434(&qword_1007FEB10, (void (*)(uint64_t))&type metadata accessor for AttributedString.FormattingOptions);
      sub_100010218(&qword_1007FEB18);
      sub_100014488((unint64_t *)&qword_1007FEB20, &qword_1007FEB18);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      sub_100179988();
      break;
  }
  return AttributedString.init<A>(localized:options:table:bundle:locale:comment:including:)();
}

uint64_t sub_10017476C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v77 = a3;
  uint64_t v74 = type metadata accessor for Font.Leading();
  uint64_t v72 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  uint64_t v71 = &v61[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v69 = sub_100010218(&qword_1008002D8);
  __chkstk_darwin(v69);
  uint64_t v68 = &v61[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v66 = *(void *)(v6 - 8);
  uint64_t v67 = v6;
  __chkstk_darwin(v6);
  uint64_t v65 = &v61[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100010218(&qword_1008002E0);
  uint64_t v75 = *(void *)(v8 - 8);
  uint64_t v76 = v8;
  __chkstk_darwin(v8);
  uint64_t v73 = &v61[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v10);
  uint64_t v78 = &v61[-v11];
  uint64_t v12 = type metadata accessor for NumberFormatStyleConfiguration.Notation();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  Swift::String v15 = &v61[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for Locale();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = sub_100010218(&qword_1007F8E58);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = &v61[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v21);
  uint64_t v79 = *(void *)(a1 + *(int *)(type metadata accessor for InsightsDataManager.TopAssetCategory(0) + 24));
  static Locale.autoupdatingCurrent.getter();
  sub_100014398();
  IntegerFormatStyle.init(locale:)();
  static NumberFormatStyleConfiguration.Notation.compactName.getter();
  IntegerFormatStyle.notation(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
  (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v20, v17);
  sub_100014488(&qword_1008002E8, &qword_1007F8E58);
  uint64_t v22 = Text.init<A>(_:format:)();
  uint64_t v24 = v23;
  LOBYTE(v15) = v25 & 1;
  static Font.title.getter();
  Font.bold()();
  swift_release();
  uint64_t v26 = Text.font(_:)();
  uint64_t v28 = v27;
  LOBYTE(v17) = v29;
  swift_release();
  sub_10002B8D0(v22, v24, (char)v15);
  swift_bridgeObjectRelease();
  uint64_t v30 = Text.tracking(_:)();
  uint64_t v63 = v31;
  uint64_t v64 = v32;
  int v62 = v33 & 1;
  sub_10002B8D0(v26, v28, v17 & 1);
  swift_bridgeObjectRelease();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v66 + 16))(v65, v70, v67);
  uint64_t v34 = enum case for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component.unit(_:);
  uint64_t v35 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v35 - 8) + 104))(v68, v34, v35);
  static Locale.autoupdatingCurrent.getter();
  sub_100014488(&qword_1008002F0, &qword_1008002D8);
  sub_100177434(&qword_1008002F8, (void (*)(uint64_t))&type metadata accessor for AttributedString);
  uint64_t v36 = Text.init<A>(_:format:)();
  uint64_t v38 = v37;
  LOBYTE(v28) = v39 & 1;
  static Font.footnote.getter();
  uint64_t v41 = v71;
  uint64_t v40 = v72;
  uint64_t v42 = v74;
  (*(void (**)(unsigned char *, void, uint64_t))(v72 + 104))(v71, enum case for Font.Leading.tight(_:), v74);
  Font.leading(_:)();
  swift_release();
  (*(void (**)(unsigned char *, uint64_t))(v40 + 8))(v41, v42);
  uint64_t v43 = Text.font(_:)();
  uint64_t v45 = v44;
  LOBYTE(v42) = v46;
  uint64_t v48 = v47;
  swift_release();
  LOBYTE(v42) = v42 & 1;
  sub_10002B8D0(v36, v38, v28);
  swift_bridgeObjectRelease();
  uint64_t v79 = v43;
  uint64_t v80 = v45;
  char v81 = v42;
  uint64_t v82 = v48;
  uint64_t v49 = v78;
  View.unredacted()();
  sub_10002B8D0(v43, v45, v42);
  swift_bridgeObjectRelease();
  uint64_t v51 = v75;
  uint64_t v50 = v76;
  int v52 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v75 + 16);
  uint64_t v53 = v73;
  v52(v73, v49, v76);
  uint64_t v54 = v77;
  uint64_t v55 = v30;
  uint64_t *v77 = v30;
  uint64_t v56 = v63;
  v54[1] = v63;
  LOBYTE(v38) = v62;
  *((unsigned char *)v54 + 16) = v62;
  v54[3] = v64;
  uint64_t v57 = v54;
  uint64_t v58 = sub_100010218(&qword_100800300);
  v52((unsigned char *)v57 + *(int *)(v58 + 48), v53, v50);
  sub_1000C04A4(v55, v56, v38);
  uint64_t v59 = *(void (**)(unsigned char *, uint64_t))(v51 + 8);
  swift_bridgeObjectRetain();
  v59(v78, v50);
  v59(v53, v50);
  sub_10002B8D0(v55, v56, v38);
  return swift_bridgeObjectRelease();
}

uint64_t sub_100174F64@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v59 = a2;
  uint64_t v2 = sub_100010218(&qword_100800310);
  uint64_t v57 = *(void *)(v2 - 8);
  uint64_t v58 = v2;
  __chkstk_darwin(v2);
  uint64_t v56 = &v49[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v55 = &v49[-v5];
  uint64_t v6 = sub_100010218(&qword_100800318);
  __chkstk_darwin(v6 - 8);
  uint64_t v53 = &v49[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100010218(&qword_100800320);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v49[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_100010218(&qword_100800328);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = &v49[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = sub_100010218(&qword_100800330);
  uint64_t v15 = v14 - 8;
  __chkstk_darwin(v14);
  uint64_t v17 = &v49[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = sub_100010218((uint64_t *)&unk_1007FC470);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = &v49[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v22 = sub_100010218(&qword_100800338);
  uint64_t v23 = v22 - 8;
  __chkstk_darwin(v22);
  uint64_t v51 = &v49[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v25);
  int v52 = &v49[-v26];
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v27 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v60 = v28;
  uint64_t v61 = v27;
  uint64_t v62 = v29;
  int v31 = v30 & 1;
  uint64_t v32 = type metadata accessor for Date();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v21, 1, 1, v32);
  sub_10001B220((uint64_t)v21, (uint64_t)v13, (uint64_t *)&unk_1007FC470);
  char v33 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v19 + 56);
  v33(v13, 0, 1, v18);
  sub_10001B220((uint64_t)v13, (uint64_t)v10, &qword_100800328);
  sub_10001B220((uint64_t)v10, (uint64_t)&v17[*(int *)(v15 + 44)], &qword_100800320);
  uint64_t v35 = v60;
  uint64_t v34 = v61;
  *(void *)uint64_t v17 = v61;
  *((void *)v17 + 1) = v35;
  int v50 = v31;
  v17[16] = v31;
  *((void *)v17 + 3) = v62;
  sub_1000C04A4(v34, v35, v31);
  swift_bridgeObjectRetain();
  sub_10001457C((uint64_t)v10, &qword_100800320);
  sub_10001457C((uint64_t)v13, &qword_100800328);
  uint64_t v36 = v53;
  sub_10001B220((uint64_t)v21, (uint64_t)v53, (uint64_t *)&unk_1007FC470);
  v33(v36, 0, 1, v18);
  uint64_t v37 = sub_100010218(&qword_100800340);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v36, 0, 1, v37);
  uint64_t v38 = (uint64_t)v51;
  sub_10001B220((uint64_t)v36, (uint64_t)&v51[*(int *)(v23 + 44)], &qword_100800318);
  sub_10001B220((uint64_t)v17, v38, &qword_100800330);
  sub_10001457C((uint64_t)v36, &qword_100800318);
  sub_10001457C((uint64_t)v17, &qword_100800330);
  sub_10001457C((uint64_t)v21, (uint64_t *)&unk_1007FC470);
  sub_10002B8D0(v61, v60, v50);
  swift_bridgeObjectRelease();
  char v39 = v52;
  sub_10002C4EC(v38, (uint64_t)v52, &qword_100800338);
  uint64_t v63 = v54;
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  sub_100010218(&qword_100800348);
  sub_100010218(&qword_100800350);
  sub_100014488(&qword_100800358, &qword_100800348);
  sub_100177434((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
  sub_1001799DC();
  uint64_t v40 = v55;
  ForEach<>.init(_:id:content:)();
  sub_10001B220((uint64_t)v39, v38, &qword_100800338);
  uint64_t v42 = v56;
  uint64_t v41 = v57;
  uint64_t v43 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v57 + 16);
  uint64_t v44 = v58;
  v43(v56, v40, v58);
  uint64_t v45 = v59;
  sub_10001B220(v38, v59, &qword_100800338);
  uint64_t v46 = sub_100010218(&qword_100800390);
  v43((unsigned char *)(v45 + *(int *)(v46 + 48)), v42, v44);
  uint64_t v47 = *(void (**)(unsigned char *, uint64_t))(v41 + 8);
  v47(v40, v44);
  sub_10001457C((uint64_t)v39, &qword_100800338);
  v47(v42, v44);
  return sub_10001457C(v38, &qword_100800338);
}

uint64_t sub_100175654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a1;
  uint64_t v45 = a2;
  uint64_t v2 = sub_100010218(&qword_100800328);
  __chkstk_darwin(v2 - 8);
  uint64_t v44 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218(&qword_100800380);
  __chkstk_darwin(v4 - 8);
  uint64_t v43 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_100800398);
  __chkstk_darwin(v6 - 8);
  uint64_t v41 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100010218(&qword_100800370) - 8;
  __chkstk_darwin(v42);
  uint64_t v40 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = type metadata accessor for Date.FormatStyle.Symbol.Year();
  uint64_t v9 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = type metadata accessor for Date.FormatStyle();
  uint64_t v12 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  __n128 v18 = __chkstk_darwin(v16);
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v17 + 16);
  v20((char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v48, v16, v18);
  uint64_t v38 = (void (*)(char *, uint64_t, uint64_t))v20;
  static FormatStyle<>.dateTime.getter();
  static Date.FormatStyle.Symbol.Year.defaultDigits.getter();
  Date.FormatStyle.year(_:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v47);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v46);
  sub_100177434((unint64_t *)&qword_1007F9588, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  sub_100177434((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v21 = Text.init<A>(_:format:)();
  uint64_t v46 = v22;
  uint64_t v47 = v21;
  uint64_t v37 = v23;
  LODWORD(v9) = v24 & 1;
  uint64_t v25 = (uint64_t)v41;
  uint64_t v26 = v48;
  ((void (*)(char *, uint64_t, uint64_t))v20)(v41, v48, v16);
  uint64_t v27 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v17 + 56);
  v27(v25, 0, 1, v16);
  uint64_t v28 = v43;
  sub_10001B220(v25, v43, &qword_100800398);
  uint64_t v29 = (uint64_t)v40;
  sub_10001B220(v28, (uint64_t)&v40[*(int *)(v42 + 44)], &qword_100800380);
  uint64_t v31 = v46;
  uint64_t v30 = v47;
  *(void *)uint64_t v29 = v47;
  *(void *)(v29 + 8) = v31;
  int v39 = v9;
  *(unsigned char *)(v29 + 16) = v9;
  *(void *)(v29 + 24) = v37;
  sub_1000C04A4(v30, v31, v9);
  swift_bridgeObjectRetain();
  sub_10001457C(v28, &qword_100800380);
  sub_10001457C(v25, &qword_100800398);
  uint64_t v32 = (uint64_t)v44;
  v38(v44, v26, v16);
  v27(v32, 0, 1, v16);
  uint64_t v33 = sub_100010218((uint64_t *)&unk_1007FC470);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v32, 0, 1, v33);
  uint64_t v34 = sub_100010218(&qword_100800350);
  uint64_t v35 = v45;
  sub_10001B220(v32, v45 + *(int *)(v34 + 36), &qword_100800328);
  sub_10001B220(v29, v35, &qword_100800370);
  sub_10001457C(v32, &qword_100800328);
  sub_10001457C(v29, &qword_100800370);
  sub_10002B8D0(v47, v46, v39);
  return swift_bridgeObjectRelease();
}

double sub_100175C10@<D0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for Font.TextStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v25 - v10;
  *a1 = swift_getKeyPath();
  sub_100010218(&qword_1007F9480);
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = (int *)type metadata accessor for InsightsYearlyEntriesView(0);
  uint64_t v13 = (char *)a1 + v12[5];
  *(void *)uint64_t v13 = swift_getKeyPath();
  v13[8] = 0;
  uint64_t v14 = (char *)a1 + v12[6];
  *(void *)uint64_t v14 = swift_getKeyPath();
  v14[8] = 0;
  uint64_t v15 = (char *)a1 + v12[7];
  *(void *)uint64_t v15 = swift_getKeyPath();
  v15[8] = 0;
  uint64_t v16 = (uint64_t *)((char *)a1 + v12[8]);
  *uint64_t v16 = swift_getKeyPath();
  sub_100010218(&qword_1007FFFF8);
  swift_storeEnumTagMultiPayload();
  uint64_t v17 = (char *)a1 + v12[9];
  type metadata accessor for InsightsDataManager(0);
  sub_100177434((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  *(void *)uint64_t v17 = Environment.init<A>(_:)();
  v17[8] = v18 & 1;
  static Date.now.getter();
  uint64_t v19 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v11, 0, 1, v19);
  sub_10001B220((uint64_t)v11, (uint64_t)v8, (uint64_t *)&unk_1007FC470);
  State.init(wrappedValue:)();
  sub_10001457C((uint64_t)v11, (uint64_t *)&unk_1007FC470);
  *(void *)&long long v26 = 0x4046000000000000;
  uint64_t v20 = enum case for Font.TextStyle.title(_:);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 104);
  v21(v5, enum case for Font.TextStyle.title(_:), v2);
  sub_1000DA83C();
  ScaledMetric.init(wrappedValue:relativeTo:)();
  *(void *)&long long v26 = 0x4050000000000000;
  v21(v5, v20, v2);
  ScaledMetric.init(wrappedValue:relativeTo:)();
  uint64_t v22 = (char *)a1 + v12[13];
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  double result = *(double *)&v26;
  long long v24 = v27;
  *(_OWORD *)uint64_t v22 = v26;
  *((_OWORD *)v22 + 1) = v24;
  *((void *)v22 + 4) = v28;
  *(uint64_t *)((char *)a1 + v12[14]) = 0x4030000000000000;
  return result;
}

double sub_100175FD8(unint64_t a1, char a2, uint64_t a3, int a4, uint64_t a5, double *a6, uint64_t a7)
{
  uint64_t v37 = a7;
  uint64_t v38 = a6;
  LODWORD(v35) = a4;
  uint64_t v36 = a3;
  uint64_t v10 = type metadata accessor for LayoutSubviews();
  uint64_t v33 = *(void *)(v10 - 8);
  uint64_t v34 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v33 - v14;
  uint64_t v16 = sub_100010218(&qword_1007FD208);
  __chkstk_darwin(v16 - 8);
  char v18 = (char *)&v33 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for LayoutSubview();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003F2088((uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
  {
    sub_10001457C((uint64_t)v18, &qword_1007FD208);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v22, v18, v19);
    if ((a2 & 1) == 0)
    {
      uint64_t v23 = (a1 >> 52) & 0x7FF;
      if (v23 | a1 & 0xFFFFFFFFFFFFFLL)
      {
        if (v23 != 2047)
        {
          double v26 = *(double *)&a1;
          double v28 = (*(double *)&a1 + 24.0) * 0.36;
          *uint64_t v38 = v28;
          char v42 = 0;
          char v29 = LOBYTE(v35) & 1;
          char v41 = LOBYTE(v35) & 1;
          LayoutSubview.sizeThatFits(_:)();
          double v35 = *(double *)&a1 - v28;
          uint64_t v30 = v33;
          uint64_t v31 = a5;
          uint64_t v32 = v34;
          (*(void (**)(char *, uint64_t, uint64_t))(v33 + 16))(v12, v31, v34);
          sub_100514C48(1);
          type metadata accessor for InsightsYearlyEntriesView.TopLayout.Cache(0);
          char v40 = 0;
          char v39 = v29;
          AnyLayout.sizeThatFits(proposal:subviews:cache:)();
          (*(void (**)(char *, uint64_t))(v30 + 8))(v15, v32);
          (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
          return v26;
        }
      }
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v19);
  }
  char v24 = LOBYTE(v35);
  type metadata accessor for InsightsYearlyEntriesView.TopLayout.Cache(0);
  char v44 = a2 & 1;
  char v43 = v24 & 1;
  AnyLayout.sizeThatFits(proposal:subviews:cache:)();
  return v25;
}

uint64_t sub_100176394()
{
  return LayoutProperties.stackOrientation.setter();
}

uint64_t sub_1001763C0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v18 = a1;
  uint64_t v3 = type metadata accessor for LayoutSubviews();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = type metadata accessor for AnyLayout.Cache();
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, v18, v3, v12);
  sub_100514C48(1);
  AnyLayout.makeCache(subviews:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  *(void *)a2 = 0x4059000000000000;
  uint64_t v15 = type metadata accessor for InsightsYearlyEntriesView.TopLayout.Cache(0);
  return (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(&a2[*(int *)(v15 + 20)], v14, v10);
}

uint64_t sub_1001765A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for LayoutSubviews();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v8 = __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v12 - v9;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))(v6, a2, v3, v8);
  sub_100514C48(1);
  type metadata accessor for InsightsYearlyEntriesView.TopLayout.Cache(0);
  AnyLayout.updateCache(_:subviews:)();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v10, v3);
}

double sub_1001766EC(unint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, double *a6)
{
  return sub_100175FD8(a1, a2 & 1, a3, a4 & 1, a5, a6, *(void *)(v6 + 8));
}

uint64_t sub_10017670C(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, double *a10)
{
  return sub_10017B510(a9, a10, *(void *)(v10 + 8), a1, a2, a3, a4);
}

uint64_t sub_100176720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_100176790(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_100176758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_100176790(a1, a2, a3, a4, a5, a6, a7, a8, a9, (uint64_t (*)(uint64_t))&Layout.explicitAlignment(of:in:proposal:subviews:cache:));
}

uint64_t sub_100176790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t))
{
  return a10(a1);
}

void (*sub_1001767D4(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = Animatable<>.animatableData.modify();
  return sub_100176844;
}

void sub_100176844(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_100176890()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v1 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  type metadata accessor for InsightsYearlyEntriesChartRepresentable(0);
  Date.timeIntervalSinceReferenceDate.getter();
  double v3 = v2;
  sub_100010218(&qword_1007FC8E0);
  Date.timeIntervalSinceReferenceDate.getter();
  double v5 = v4;
  uint64_t result = sub_10001B284(0, &qword_100800770);
  if (v3 > v5)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = (void *)AXNumericDataAxisDescriptor.init(title:range:gridlinePositions:valueDescriptionProvider:)();
    uint64_t v8 = swift_bridgeObjectRetain();
    sub_100198348(v8, (void (*)(uint64_t *__return_ptr, char *))sub_100177054, 0);
    uint64_t v10 = v9;
    char v12 = v11;
    uint64_t result = swift_bridgeObjectRelease();
    if (v12) {
      double v13 = 10.0;
    }
    else {
      double v13 = (double)v10;
    }
    if (v13 >= 0.0)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = (void *)AXNumericDataAxisDescriptor.init(title:range:gridlinePositions:valueDescriptionProvider:)();
      uint64_t v15 = swift_bridgeObjectRetain();
      sub_1001685E8(v15);
      swift_bridgeObjectRelease();
      id v16 = objc_allocWithZone((Class)AXDataSeriesDescriptor);
      NSString v17 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      sub_10001B284(0, &qword_100800778);
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v19 = [v16 initWithName:v17 isContinuous:0 dataPoints:isa];

      sub_10001B284(0, &qword_100800780);
      sub_100010218((uint64_t *)&unk_1007FA1C0);
      uint64_t v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_1006D6D00;
      *(void *)(v20 + 32) = v19;
      id v21 = v7;
      id v22 = v14;
      specialized Array._endMutation()();
      uint64_t v23 = AXChartDescriptor.init(title:summary:xAxis:yAxis:additionalAxes:series:)();

      return v23;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100176CD0()
{
  uint64_t v0 = type metadata accessor for Date.FormatStyle.Symbol.Month();
  uint64_t v23 = *(void *)(v0 - 8);
  uint64_t v24 = v0;
  __chkstk_darwin(v0);
  double v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for Date.FormatStyle.Symbol.Year();
  uint64_t v3 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  double v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date.FormatStyle();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v12 = (char *)&v21 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v21 - v14;
  uint64_t v22 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init(timeIntervalSinceReferenceDate:)();
  static FormatStyle<>.dateTime.getter();
  static Date.FormatStyle.Symbol.Year.defaultDigits.getter();
  Date.FormatStyle.year(_:)();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v21);
  id v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v9, v6);
  static Date.FormatStyle.Symbol.Month.abbreviated.getter();
  Date.FormatStyle.month(_:)();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v2, v24);
  v19(v12, v6);
  sub_100177434((unint64_t *)&qword_1007F9588, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  Date.formatted<A>(_:)();
  v19(v15, v6);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v22);
  return v25;
}

uint64_t sub_100177054@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = sub_100010218(&qword_1007FC1E8);
  uint64_t v5 = v4 - 8;
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v20 - v9;
  uint64_t v11 = *(int *)(v5 + 56);
  char v12 = (uint64_t *)((char *)&v20 + v11 - v9);
  uint64_t v13 = (uint64_t *)(a1 + v11);
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v10, a1, v14);
  uint64_t v16 = *v13;
  uint64_t v17 = v13[1];
  void *v12 = v16;
  v12[1] = v17;
  uint64_t v18 = &v7[*(int *)(v5 + 56)];
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v7, v10, v14);
  *(void *)uint64_t v18 = v16;
  *((void *)v18 + 1) = v17;
  *a2 = v17;
  return sub_10001457C((uint64_t)v7, &qword_1007FC1E8);
}

uint64_t sub_1001771B0()
{
  return BinaryFloatingPoint.formatted()()._countAndFlagsBits;
}

uint64_t type metadata accessor for InsightsYearlyEntriesView(uint64_t a1)
{
  return sub_10003352C(a1, (uint64_t *)&unk_100800078);
}

uint64_t sub_10017722C@<X0>(char *a1@<X8>)
{
  uint64_t v2 = sub_100010218(&qword_100800000);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001773E0();
  EnvironmentValues.subscript.getter();
  uint64_t v5 = type metadata accessor for InsightsFamily();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5) == 1) {
    goto LABEL_5;
  }
  uint64_t v6 = type metadata accessor for WidgetFamily();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(v4, 3, v6);
  if (!result)
  {
    sub_100179644((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for InsightsFamily);
LABEL_5:
    type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey();
    sub_100177434(&qword_100800010, (void (*)(uint64_t))&type metadata accessor for EnvironmentValues.ShowsWidgetBackgroundKey);
    uint64_t result = EnvironmentValues.subscript.getter();
    char v8 = v9[15];
    goto LABEL_6;
  }
  char v8 = 1;
LABEL_6:
  *a1 = v8;
  return result;
}

unint64_t sub_1001773E0()
{
  unint64_t result = qword_100800008;
  if (!qword_100800008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800008);
  }
  return result;
}

uint64_t sub_100177434(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_10017747C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100010218(&qword_1007F9480);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for Calendar();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[5];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = *(void *)v11;
    char v13 = v11[8];
    sub_100026CCC(*(void *)v11, v13);
    *(void *)uint64_t v10 = v12;
    v10[8] = v13;
    uint64_t v14 = a3[6];
    uint64_t v15 = (char *)a1 + v14;
    uint64_t v16 = (char *)a2 + v14;
    uint64_t v17 = *(void *)v16;
    char v18 = v16[8];
    sub_100026CCC(*(void *)v16, v18);
    *(void *)uint64_t v15 = v17;
    v15[8] = v18;
    uint64_t v19 = a3[7];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    uint64_t v22 = *(void *)v21;
    char v23 = v21[8];
    sub_100026CCC(*(void *)v21, v23);
    *(void *)uint64_t v20 = v22;
    v20[8] = v23;
    uint64_t v24 = a3[8];
    uint64_t v25 = (uint64_t *)((char *)a1 + v24);
    double v26 = (uint64_t *)((char *)a2 + v24);
    sub_100010218(&qword_1007FFFF8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v27 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v27 - 8) + 16))(v25, v26, v27);
    }
    else
    {
      *uint64_t v25 = *v26;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v28 = a3[9];
    uint64_t v29 = a3[10];
    uint64_t v30 = (char *)a1 + v28;
    uint64_t v31 = (char *)a2 + v28;
    uint64_t v32 = *(void *)v31;
    LOBYTE(v31) = v31[8];
    *(void *)uint64_t v30 = v32;
    v30[8] = (char)v31;
    uint64_t v33 = (char *)a1 + v29;
    uint64_t v34 = (char *)a2 + v29;
    uint64_t v35 = type metadata accessor for Date();
    uint64_t v36 = *(void *)(v35 - 8);
    uint64_t v37 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
    swift_retain();
    if (v37(v34, 1, v35))
    {
      uint64_t v38 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v33, v34, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v33, v34, v35);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
    }
    uint64_t v39 = sub_100010218(&qword_1007FC8F0);
    *(void *)&v33[*(int *)(v39 + 28)] = *(void *)&v34[*(int *)(v39 + 28)];
    uint64_t v40 = a3[11];
    char v41 = (char *)a1 + v40;
    char v42 = (char *)a2 + v40;
    swift_retain();
    uint64_t v43 = sub_100010218(&qword_1007FD6E0);
    char v44 = *(void (**)(char *, char *, uint64_t))(*(void *)(v43 - 8) + 16);
    v44(v41, v42, v43);
    v44((char *)a1 + a3[12], (char *)a2 + a3[12], v43);
    uint64_t v45 = a3[13];
    uint64_t v46 = a3[14];
    uint64_t v47 = (uint64_t *)((char *)a1 + v45);
    uint64_t v48 = (uint64_t *)((char *)a2 + v45);
    *uint64_t v47 = *v48;
    v47[1] = v48[1];
    uint64_t v49 = v48[3];
    v47[2] = v48[2];
    v47[3] = v49;
    v47[4] = v48[4];
    *(uint64_t *)((char *)a1 + v46) = *(uint64_t *)((char *)a2 + v46);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100177864(uint64_t a1, int *a2)
{
  sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for Calendar();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  sub_100026DF8(*(void *)(a1 + a2[5]), *(unsigned char *)(a1 + a2[5] + 8));
  sub_100026DF8(*(void *)(a1 + a2[6]), *(unsigned char *)(a1 + a2[6] + 8));
  sub_100026DF8(*(void *)(a1 + a2[7]), *(unsigned char *)(a1 + a2[7] + 8));
  uint64_t v5 = a1 + a2[8];
  sub_100010218(&qword_1007FFFF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v7 = a1 + a2[10];
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  sub_100010218(&qword_1007FC8F0);
  swift_release();
  uint64_t v10 = a1 + a2[11];
  uint64_t v11 = sub_100010218(&qword_1007FD6E0);
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8);
  v12(v10, v11);
  v12(a1 + a2[12], v11);

  return swift_bridgeObjectRelease();
}

char *sub_100177AC0(char *a1, char *a2, int *a3)
{
  sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for Calendar();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100026CCC(*(void *)v9, v11);
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  uint64_t v12 = a3[6];
  char v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = *(void *)v14;
  char v16 = v14[8];
  sub_100026CCC(*(void *)v14, v16);
  *(void *)char v13 = v15;
  v13[8] = v16;
  uint64_t v17 = a3[7];
  char v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = *(void *)v19;
  char v21 = v19[8];
  sub_100026CCC(*(void *)v19, v21);
  *(void *)char v18 = v20;
  v18[8] = v21;
  uint64_t v22 = a3[8];
  char v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  sub_100010218(&qword_1007FFFF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(v23, v24, v25);
  }
  else
  {
    *(void *)char v23 = *(void *)v24;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v26 = a3[9];
  uint64_t v27 = a3[10];
  uint64_t v28 = &a1[v26];
  uint64_t v29 = &a2[v26];
  uint64_t v30 = *(void *)v29;
  LOBYTE(v29) = v29[8];
  *(void *)uint64_t v28 = v30;
  v28[8] = (char)v29;
  uint64_t v31 = &a1[v27];
  uint64_t v32 = &a2[v27];
  uint64_t v33 = type metadata accessor for Date();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
  swift_retain();
  if (v35(v32, 1, v33))
  {
    uint64_t v36 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v31, v32, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
  }
  uint64_t v37 = sub_100010218(&qword_1007FC8F0);
  *(void *)&v31[*(int *)(v37 + 28)] = *(void *)&v32[*(int *)(v37 + 28)];
  uint64_t v38 = a3[11];
  uint64_t v39 = &a1[v38];
  uint64_t v40 = &a2[v38];
  swift_retain();
  uint64_t v41 = sub_100010218(&qword_1007FD6E0);
  char v42 = *(void (**)(char *, char *, uint64_t))(*(void *)(v41 - 8) + 16);
  v42(v39, v40, v41);
  v42(&a1[a3[12]], &a2[a3[12]], v41);
  uint64_t v43 = a3[13];
  uint64_t v44 = a3[14];
  uint64_t v45 = &a1[v43];
  uint64_t v46 = &a2[v43];
  *(void *)uint64_t v45 = *(void *)v46;
  *((void *)v45 + 1) = *((void *)v46 + 1);
  uint64_t v47 = *((void *)v46 + 3);
  *((void *)v45 + 2) = *((void *)v46 + 2);
  *((void *)v45 + 3) = v47;
  *((void *)v45 + 4) = *((void *)v46 + 4);
  *(void *)&a1[v44] = *(void *)&a2[v44];
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_100177E58(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10001457C((uint64_t)a1, &qword_1007F9480);
    sub_100010218(&qword_1007F9480);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for Calendar();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v7 = a3[5];
  uint64_t v8 = &a1[v7];
  uint64_t v9 = &a2[v7];
  uint64_t v10 = *(void *)v9;
  char v11 = v9[8];
  sub_100026CCC(*(void *)v9, v11);
  uint64_t v12 = *(void *)v8;
  char v13 = v8[8];
  *(void *)uint64_t v8 = v10;
  v8[8] = v11;
  sub_100026DF8(v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  char v16 = &a2[v14];
  uint64_t v17 = *(void *)v16;
  char v18 = v16[8];
  sub_100026CCC(*(void *)v16, v18);
  uint64_t v19 = *(void *)v15;
  char v20 = v15[8];
  *(void *)uint64_t v15 = v17;
  v15[8] = v18;
  sub_100026DF8(v19, v20);
  uint64_t v21 = a3[7];
  uint64_t v22 = &a1[v21];
  char v23 = &a2[v21];
  uint64_t v24 = *(void *)v23;
  char v25 = v23[8];
  sub_100026CCC(*(void *)v23, v25);
  uint64_t v26 = *(void *)v22;
  char v27 = v22[8];
  *(void *)uint64_t v22 = v24;
  v22[8] = v25;
  sub_100026DF8(v26, v27);
  if (a1 != a2)
  {
    uint64_t v28 = a3[8];
    uint64_t v29 = &a1[v28];
    uint64_t v30 = &a2[v28];
    sub_10001457C((uint64_t)&a1[v28], &qword_1007FFFF8);
    sub_100010218(&qword_1007FFFF8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v31 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
    }
    else
    {
      *(void *)uint64_t v29 = *(void *)v30;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  uint64_t v32 = a3[9];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = *(void *)v34;
  LOBYTE(v34) = v34[8];
  *(void *)uint64_t v33 = v35;
  v33[8] = (char)v34;
  swift_retain();
  swift_release();
  uint64_t v36 = a3[10];
  uint64_t v37 = &a1[v36];
  uint64_t v38 = &a2[v36];
  uint64_t v39 = type metadata accessor for Date();
  uint64_t v40 = *(void *)(v39 - 8);
  uint64_t v41 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v40 + 48);
  int v42 = v41(v37, 1, v39);
  int v43 = v41(v38, 1, v39);
  if (!v42)
  {
    if (!v43)
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 24))(v37, v38, v39);
      goto LABEL_17;
    }
    (*(void (**)(char *, uint64_t))(v40 + 8))(v37, v39);
    goto LABEL_16;
  }
  if (v43)
  {
LABEL_16:
    uint64_t v44 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v37, v38, *(void *)(*(void *)(v44 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
LABEL_17:
  uint64_t v45 = sub_100010218(&qword_1007FC8F0);
  *(void *)&v37[*(int *)(v45 + 28)] = *(void *)&v38[*(int *)(v45 + 28)];
  swift_retain();
  swift_release();
  uint64_t v46 = a3[11];
  uint64_t v47 = &a1[v46];
  uint64_t v48 = &a2[v46];
  uint64_t v49 = sub_100010218(&qword_1007FD6E0);
  int v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 24);
  v50(v47, v48, v49);
  v50(&a1[a3[12]], &a2[a3[12]], v49);
  uint64_t v51 = a3[13];
  int v52 = &a1[v51];
  uint64_t v53 = &a2[v51];
  *(void *)int v52 = *(void *)&a2[v51];
  *((_DWORD *)v52 + 2) = *(_DWORD *)&a2[v51 + 8];
  *((_DWORD *)v52 + 3) = *(_DWORD *)&a2[v51 + 12];
  *((void *)v52 + 2) = *(void *)&a2[v51 + 16];
  *((void *)v52 + 3) = *(void *)&a2[v51 + 24];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)v52 + 4) = *((void *)v53 + 4);
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  return a1;
}

char *sub_1001782D8(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for Calendar();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = a3[6];
  uint64_t v10 = &a1[v8];
  char v11 = &a2[v8];
  *(void *)uint64_t v10 = *(void *)v11;
  v10[8] = v11[8];
  uint64_t v12 = &a1[v9];
  char v13 = &a2[v9];
  *(void *)uint64_t v12 = *(void *)v13;
  v12[8] = v13[8];
  uint64_t v14 = a3[7];
  uint64_t v15 = a3[8];
  char v16 = &a1[v14];
  uint64_t v17 = &a2[v14];
  *(void *)char v16 = *(void *)v17;
  v16[8] = v17[8];
  char v18 = &a1[v15];
  uint64_t v19 = &a2[v15];
  uint64_t v20 = sub_100010218(&qword_1007FFFF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v21 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v18, v19, v21);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
  }
  uint64_t v22 = a3[9];
  uint64_t v23 = a3[10];
  uint64_t v24 = &a1[v22];
  char v25 = &a2[v22];
  *(void *)uint64_t v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = &a1[v23];
  char v27 = &a2[v23];
  uint64_t v28 = type metadata accessor for Date();
  uint64_t v29 = *(void *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    uint64_t v30 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v26, v27, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  uint64_t v31 = sub_100010218(&qword_1007FC8F0);
  *(void *)&v26[*(int *)(v31 + 28)] = *(void *)&v27[*(int *)(v31 + 28)];
  uint64_t v32 = a3[11];
  uint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = sub_100010218(&qword_1007FD6E0);
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 32);
  v36(v33, v34, v35);
  v36(&a1[a3[12]], &a2[a3[12]], v35);
  uint64_t v37 = a3[13];
  uint64_t v38 = a3[14];
  uint64_t v39 = &a1[v37];
  uint64_t v40 = &a2[v37];
  long long v41 = *((_OWORD *)v40 + 1);
  *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
  *((_OWORD *)v39 + 1) = v41;
  *((void *)v39 + 4) = *((void *)v40 + 4);
  *(void *)&a1[v38] = *(void *)&a2[v38];
  return a1;
}

char *sub_100178634(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10001457C((uint64_t)a1, &qword_1007F9480);
    uint64_t v6 = sub_100010218(&qword_1007F9480);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for Calendar();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[5];
  uint64_t v9 = &a1[v8];
  uint64_t v10 = &a2[v8];
  uint64_t v11 = *(void *)v10;
  LOBYTE(v10) = v10[8];
  uint64_t v12 = *(void *)v9;
  char v13 = v9[8];
  *(void *)uint64_t v9 = v11;
  v9[8] = (char)v10;
  sub_100026DF8(v12, v13);
  uint64_t v14 = a3[6];
  uint64_t v15 = &a1[v14];
  char v16 = &a2[v14];
  uint64_t v17 = *(void *)v16;
  LOBYTE(v16) = v16[8];
  uint64_t v18 = *(void *)v15;
  char v19 = v15[8];
  *(void *)uint64_t v15 = v17;
  v15[8] = (char)v16;
  sub_100026DF8(v18, v19);
  uint64_t v20 = a3[7];
  uint64_t v21 = &a1[v20];
  uint64_t v22 = &a2[v20];
  uint64_t v23 = *(void *)v22;
  LOBYTE(v22) = v22[8];
  uint64_t v24 = *(void *)v21;
  char v25 = v21[8];
  *(void *)uint64_t v21 = v23;
  v21[8] = (char)v22;
  sub_100026DF8(v24, v25);
  if (a1 != a2)
  {
    uint64_t v26 = a3[8];
    char v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    sub_10001457C((uint64_t)&a1[v26], &qword_1007FFFF8);
    uint64_t v29 = sub_100010218(&qword_1007FFFF8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v30 = type metadata accessor for DynamicTypeSize();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 32))(v27, v28, v30);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
    }
  }
  uint64_t v31 = a3[9];
  uint64_t v32 = &a1[v31];
  uint64_t v33 = &a2[v31];
  uint64_t v34 = *(void *)v33;
  LOBYTE(v33) = v33[8];
  *(void *)uint64_t v32 = v34;
  v32[8] = (char)v33;
  swift_release();
  uint64_t v35 = a3[10];
  uint64_t v36 = &a1[v35];
  uint64_t v37 = &a2[v35];
  uint64_t v38 = type metadata accessor for Date();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48);
  int v41 = v40(v36, 1, v38);
  int v42 = v40(v37, 1, v38);
  if (!v41)
  {
    if (!v42)
    {
      (*(void (**)(char *, char *, uint64_t))(v39 + 40))(v36, v37, v38);
      goto LABEL_15;
    }
    (*(void (**)(char *, uint64_t))(v39 + 8))(v36, v38);
    goto LABEL_14;
  }
  if (v42)
  {
LABEL_14:
    uint64_t v43 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v36, v37, *(void *)(*(void *)(v43 - 8) + 64));
    goto LABEL_15;
  }
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
LABEL_15:
  uint64_t v44 = sub_100010218(&qword_1007FC8F0);
  *(void *)&v36[*(int *)(v44 + 28)] = *(void *)&v37[*(int *)(v44 + 28)];
  swift_release();
  uint64_t v45 = a3[11];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  uint64_t v48 = sub_100010218(&qword_1007FD6E0);
  uint64_t v49 = *(void (**)(char *, char *, uint64_t))(*(void *)(v48 - 8) + 40);
  v49(v46, v47, v48);
  v49(&a1[a3[12]], &a2[a3[12]], v48);
  uint64_t v50 = a3[13];
  uint64_t v51 = &a1[v50];
  int v52 = &a2[v50];
  uint64_t v53 = *(void *)&a2[v50 + 8];
  *(void *)uint64_t v51 = *(void *)&a2[v50];
  *((void *)v51 + 1) = v53;
  *((void *)v51 + 2) = *(void *)&a2[v50 + 16];
  *((void *)v51 + 3) = *(void *)&a2[v50 + 24];
  swift_bridgeObjectRelease();
  *((void *)v51 + 4) = *((void *)v52 + 4);
  *(void *)&a1[a3[14]] = *(void *)&a2[a3[14]];
  return a1;
}

uint64_t sub_100178A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100178A94);
}

uint64_t sub_100178A94(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100010218(&qword_1008155B0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v10 = a1;
LABEL_10:
    return v9(v10, a2, v8);
  }
  uint64_t v11 = sub_100010218(&qword_100800018);
  if (*(_DWORD *)(*(void *)(v11 - 8) + 84) == a2)
  {
    uint64_t v8 = v11;
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = a3[8];
LABEL_9:
    uint64_t v10 = a1 + v13;
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    goto LABEL_10;
  }
  uint64_t v14 = sub_100010218(&qword_1007FC8F0);
  if (*(_DWORD *)(*(void *)(v14 - 8) + 84) == a2)
  {
    uint64_t v8 = v14;
    uint64_t v12 = *(void *)(v14 - 8);
    uint64_t v13 = a3[10];
    goto LABEL_9;
  }
  uint64_t v15 = sub_100010218(&qword_1007FD6E0);
  if (*(_DWORD *)(*(void *)(v15 - 8) + 84) == a2)
  {
    uint64_t v8 = v15;
    uint64_t v12 = *(void *)(v15 - 8);
    uint64_t v13 = a3[11];
    goto LABEL_9;
  }
  unint64_t v17 = *(void *)(a1 + a3[13] + 24);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

uint64_t sub_100178C54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100178C68);
}

uint64_t sub_100178C68(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8 = sub_100010218(&qword_1008155B0);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = v8;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    uint64_t v12 = a1;
  }
  else
  {
    uint64_t v13 = sub_100010218(&qword_100800018);
    if (*(_DWORD *)(*(void *)(v13 - 8) + 84) == a3)
    {
      uint64_t v10 = v13;
      uint64_t v14 = *(void *)(v13 - 8);
      uint64_t v15 = a4[8];
    }
    else
    {
      uint64_t v16 = sub_100010218(&qword_1007FC8F0);
      if (*(_DWORD *)(*(void *)(v16 - 8) + 84) == a3)
      {
        uint64_t v10 = v16;
        uint64_t v14 = *(void *)(v16 - 8);
        uint64_t v15 = a4[10];
      }
      else
      {
        uint64_t result = sub_100010218(&qword_1007FD6E0);
        if (*(_DWORD *)(*(void *)(result - 8) + 84) != a3)
        {
          *(void *)(a1 + a4[13] + 24) = (a2 - 1);
          return result;
        }
        uint64_t v10 = result;
        uint64_t v14 = *(void *)(result - 8);
        uint64_t v15 = a4[11];
      }
    }
    uint64_t v12 = a1 + v15;
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }

  return v11(v12, a2, a2, v10);
}

void sub_100178E24()
{
  sub_100178FC0(319, (unint64_t *)&qword_1007F94F8, (void (*)(uint64_t))&type metadata accessor for Calendar);
  if (v0 <= 0x3F)
  {
    sub_100178FC0(319, (unint64_t *)&unk_100800088, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    if (v1 <= 0x3F)
    {
      sub_100179014();
      if (v2 <= 0x3F)
      {
        sub_1000DA7E0();
        if (v3 <= 0x3F) {
          swift_initStructMetadata();
        }
      }
    }
  }
}

void sub_100178FC0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Environment.Content();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_100179014()
{
  if (!qword_1007FC960)
  {
    sub_100014440((uint64_t *)&unk_1007FC470);
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1007FC960);
    }
  }
}

uint64_t sub_100179070()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10017909C()
{
  unint64_t result = qword_100800130;
  if (!qword_100800130)
  {
    sub_100014440(&qword_100800100);
    sub_10017913C();
    sub_100014488(&qword_100800158, &qword_100800120);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800130);
  }
  return result;
}

unint64_t sub_10017913C()
{
  unint64_t result = qword_100800138;
  if (!qword_100800138)
  {
    sub_100014440(&qword_1008000F8);
    sub_100014488(&qword_100800140, &qword_1008000F0);
    sub_100014488(&qword_100800148, &qword_100800150);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800138);
  }
  return result;
}

unint64_t sub_100179200()
{
  unint64_t result = qword_100800180;
  if (!qword_100800180)
  {
    sub_100014440(&qword_1008000E0);
    sub_100014440(&qword_100800100);
    sub_100014440(&qword_1008000E8);
    sub_10017909C();
    sub_100014488(&qword_100800160, &qword_1008000E8);
    swift_getOpaqueTypeConformance2();
    sub_100014488(&qword_100800188, &qword_100800190);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800180);
  }
  return result;
}

uint64_t sub_100179324(uint64_t a1)
{
  return a1;
}

unint64_t sub_100179350()
{
  unint64_t result = qword_100800200;
  if (!qword_100800200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800200);
  }
  return result;
}

unint64_t sub_1001793A4()
{
  unint64_t result = qword_100800208;
  if (!qword_100800208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800208);
  }
  return result;
}

uint64_t sub_100179400()
{
  uint64_t v1 = type metadata accessor for Calendar();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for Calendar.Component();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

BOOL sub_100179550(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for Calendar() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(void *)(type metadata accessor for Calendar.Component() - 8);
  uint64_t v9 = v2 + ((v6 + v7 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));

  return sub_10067082C(a1, a2, v2 + v6, v9);
}

uint64_t sub_100179634()
{
  return sub_100172BD4(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100179644(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1001796A4()
{
  unint64_t result = qword_100800250;
  if (!qword_100800250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800250);
  }
  return result;
}

uint64_t sub_1001796F8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_100179764(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for InsightsYearlyEntriesView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001797C8(uint64_t a1)
{
  return sub_10017A418(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100173070);
}

unint64_t sub_1001797E0()
{
  unint64_t result = qword_100800280;
  if (!qword_100800280)
  {
    sub_100014440(&qword_100800270);
    sub_100014440(&qword_100800288);
    sub_1001798C0();
    swift_getOpaqueTypeConformance2();
    sub_100177434((unint64_t *)&qword_1007F96A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800280);
  }
  return result;
}

unint64_t sub_1001798C0()
{
  unint64_t result = qword_100800290;
  if (!qword_100800290)
  {
    sub_100014440(&qword_100800288);
    sub_100014488(&qword_100800298, &qword_1008002A0);
    sub_100014488(&qword_1008002A8, &qword_1008002B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800290);
  }
  return result;
}

unint64_t sub_100179988()
{
  unint64_t result = qword_100800308;
  if (!qword_100800308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800308);
  }
  return result;
}

unint64_t sub_1001799DC()
{
  unint64_t result = qword_100800360;
  if (!qword_100800360)
  {
    sub_100014440(&qword_100800350);
    sub_100179A7C();
    sub_100014488(&qword_100800388, &qword_100800320);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800360);
  }
  return result;
}

unint64_t sub_100179A7C()
{
  unint64_t result = qword_100800368;
  if (!qword_100800368)
  {
    sub_100014440(&qword_100800370);
    sub_100014488(&qword_100800378, &qword_100800380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800368);
  }
  return result;
}

uint64_t type metadata accessor for InsightsYearlyEntriesChartRepresentable(uint64_t a1)
{
  return sub_10003352C(a1, qword_100800728);
}

uint64_t sub_100179B3C@<X0>(uint64_t a1@<X8>)
{
  return sub_10016E6E8(*(void *)(v1 + 16), a1);
}

unint64_t sub_100179B44()
{
  unint64_t result = qword_100800450;
  if (!qword_100800450)
  {
    sub_100014440(&qword_100800448);
    sub_100014488(&qword_100800458, &qword_100800460);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800450);
  }
  return result;
}

uint64_t sub_100179BDC@<X0>(uint64_t a1@<X8>)
{
  return sub_10016F010(*(void *)(v1 + 16), a1);
}

unint64_t sub_100179BE4()
{
  unint64_t result = qword_100800478;
  if (!qword_100800478)
  {
    sub_100014440(&qword_100800468);
    sub_100179C84();
    sub_100014488(&qword_1008004B0, &qword_1008004B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800478);
  }
  return result;
}

unint64_t sub_100179C84()
{
  unint64_t result = qword_100800480;
  if (!qword_100800480)
  {
    sub_100014440(&qword_100800488);
    sub_100014488(&qword_100800490, &qword_100800498);
    sub_100014488(&qword_1008004A0, &qword_1008004A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800480);
  }
  return result;
}

unint64_t sub_100179D44()
{
  unint64_t result = qword_1008004C8;
  if (!qword_1008004C8)
  {
    sub_100014440(&qword_1008004C0);
    sub_100177434(&qword_1008004D0, (void (*)(uint64_t))&type metadata accessor for ChartAxisContent);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008004C8);
  }
  return result;
}

unint64_t sub_100179DF0()
{
  unint64_t result = qword_1008004D8;
  if (!qword_1008004D8)
  {
    sub_100014440(&qword_1007FC8E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008004D8);
  }
  return result;
}

uint64_t sub_100179E5C()
{
  return sub_100171B3C(*(void *)(v0 + 16));
}

unint64_t sub_100179E64()
{
  unint64_t result = qword_100800500;
  if (!qword_100800500)
  {
    sub_100014440(&qword_100800508);
    sub_100177434(&qword_1008004D0, (void (*)(uint64_t))&type metadata accessor for ChartAxisContent);
    sub_100014488(&qword_100800158, &qword_100800120);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800500);
  }
  return result;
}

unint64_t sub_100179F34()
{
  unint64_t result = qword_100800518;
  if (!qword_100800518)
  {
    sub_100014440(&qword_100800510);
    sub_100177434(&qword_100800520, (void (*)(uint64_t))&type metadata accessor for ChartPlotContent);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800518);
  }
  return result;
}

uint64_t sub_100179FE0(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10017A05C()
{
  unint64_t result = qword_100800530;
  if (!qword_100800530)
  {
    sub_100014440(&qword_1008003F0);
    sub_100014488(&qword_100800538, &qword_1008003E8);
    sub_100014488(&qword_1007FC8A8, &qword_1007FC8A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800530);
  }
  return result;
}

uint64_t sub_10017A124()
{
  uint64_t v1 = (int *)type metadata accessor for InsightsYearlyEntriesView(0);
  uint64_t v2 = *(unsigned __int8 *)(*((void *)v1 - 1) + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = v0 + v3;
  sub_100010218(&qword_1007F9480);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for Calendar();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  sub_100026DF8(*(void *)(v4 + v1[5]), *(unsigned char *)(v4 + v1[5] + 8));
  sub_100026DF8(*(void *)(v4 + v1[6]), *(unsigned char *)(v4 + v1[6] + 8));
  sub_100026DF8(*(void *)(v4 + v1[7]), *(unsigned char *)(v4 + v1[7] + 8));
  uint64_t v6 = v4 + v1[8];
  sub_100010218(&qword_1007FFFF8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  else
  {
    swift_release();
  }
  swift_release();
  uint64_t v8 = v4 + v1[10];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
  }
  sub_100010218(&qword_1007FC8F0);
  swift_release();
  uint64_t v11 = v4 + v1[11];
  uint64_t v12 = sub_100010218(&qword_1007FD6E0);
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8);
  v13(v11, v12);
  v13(v4 + v1[12], v12);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10017A400(uint64_t a1)
{
  return sub_10017A418(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100171D78);
}

uint64_t sub_10017A418(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(type metadata accessor for InsightsYearlyEntriesView(0) - 8);
  uint64_t v5 = v2 + ((*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a2(a1, v5);
}

unint64_t sub_10017A4AC()
{
  unint64_t result = qword_100800558;
  if (!qword_100800558)
  {
    sub_100014440(&qword_100800550);
    type metadata accessor for AxisGridLine();
    sub_100014440(&qword_100800560);
    sub_100014488(&qword_100800568, &qword_100800560);
    swift_getOpaqueTypeConformance2();
    sub_100014440(&qword_100800570);
    sub_100014440(&qword_100800578);
    sub_100014488(&qword_100800580, &qword_100800578);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800558);
  }
  return result;
}

uint64_t sub_10017A648(uint64_t a1)
{
  return sub_10017A418(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10017134C);
}

unint64_t sub_10017A660()
{
  unint64_t result = qword_1008005B8;
  if (!qword_1008005B8)
  {
    sub_100014440(&qword_1008005B0);
    sub_100014440(&qword_100800570);
    sub_100014440(&qword_100800578);
    sub_100014488(&qword_100800580, &qword_100800578);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008005B8);
  }
  return result;
}

uint64_t sub_10017A780(uint64_t a1)
{
  return sub_10017A418(a1, (uint64_t (*)(uint64_t, uint64_t))sub_10016FD9C);
}

uint64_t sub_10017A79C(uint64_t a1)
{
  return sub_10017A418(a1, (uint64_t (*)(uint64_t, uint64_t))sub_100170F98);
}

unint64_t sub_10017A7B4()
{
  unint64_t result = qword_1008005D8;
  if (!qword_1008005D8)
  {
    sub_100014440(&qword_1008005D0);
    sub_100014440(&qword_1008005E0);
    type metadata accessor for AxisTick();
    sub_100014440(&qword_100800560);
    sub_100014488(&qword_100800568, &qword_100800560);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008005D8);
  }
  return result;
}

uint64_t sub_10017A8F4()
{
  return sub_100179FE0(&qword_100800648, &qword_100800628, (void (*)(void))sub_10017A924);
}

unint64_t sub_10017A924()
{
  unint64_t result = qword_100800650;
  if (!qword_100800650)
  {
    sub_100014440(&qword_100800620);
    sub_10017A9C4();
    sub_100014488(&qword_100800698, &qword_100800618);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800650);
  }
  return result;
}

unint64_t sub_10017A9C4()
{
  unint64_t result = qword_100800658;
  if (!qword_100800658)
  {
    sub_100014440(&qword_100800660);
    sub_10017AA64();
    sub_100014488(&qword_100800688, &qword_100800690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800658);
  }
  return result;
}

unint64_t sub_10017AA64()
{
  unint64_t result = qword_100800668;
  if (!qword_100800668)
  {
    sub_100014440(&qword_100800670);
    sub_100014488(&qword_100800678, &qword_100800680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800668);
  }
  return result;
}

unint64_t sub_10017AB0C()
{
  unint64_t result = qword_1008006C0;
  if (!qword_1008006C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008006C0);
  }
  return result;
}

uint64_t sub_10017AB64()
{
  return 8;
}

uint64_t sub_10017AB70()
{
  return swift_release();
}

uint64_t sub_10017AB78(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_10017AB8C(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_10017ABA0()
{
  unint64_t result = qword_1008006C8;
  if (!qword_1008006C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008006C8);
  }
  return result;
}

uint64_t sub_10017ABF8()
{
  return 8;
}

void *initializeBufferWithCopyOfBuffer for InsightsYearlyEntriesView.TopLayout(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for InsightsYearlyEntriesView.TopLayout()
{
  return swift_release();
}

void *assignWithCopy for InsightsYearlyEntriesView.TopLayout(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for InsightsYearlyEntriesView.TopLayout(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for InsightsYearlyEntriesView.TopLayout(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InsightsYearlyEntriesView.TopLayout(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsYearlyEntriesView.TopLayout()
{
  return &type metadata for InsightsYearlyEntriesView.TopLayout;
}

uint64_t *sub_10017AD58(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a1;
    uint64_t v6 = *(int *)(a3 + 20);
    uint64_t v7 = (char *)a1 + v6;
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = type metadata accessor for Date();
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
    uint64_t v11 = sub_100010218(&qword_1007FC8E0);
    v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  }
  return v5;
}

uint64_t sub_10017AE64(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v8)((void *)(v5 - 8), v4, v5);
  uint64_t v6 = v4 + *(int *)(sub_100010218(&qword_1007FC8E0) + 36);

  return v8(v6, v5);
}

void *sub_10017AF18(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  uint64_t v9 = sub_100010218(&qword_1007FC8E0);
  v8(&v5[*(int *)(v9 + 36)], &v6[*(int *)(v9 + 36)], v7);
  return a1;
}

void *sub_10017AFD8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24);
  v10(v7, v8, v9);
  uint64_t v11 = sub_100010218(&qword_1007FC8E0);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  return a1;
}

void *sub_10017B0A0(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32);
  v8(v5, v6, v7);
  uint64_t v9 = sub_100010218(&qword_1007FC8E0);
  v8(&v5[*(int *)(v9 + 36)], &v6[*(int *)(v9 + 36)], v7);
  return a1;
}

void *sub_10017B150(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40);
  v10(v7, v8, v9);
  uint64_t v11 = sub_100010218(&qword_1007FC8E0);
  v10(&v7[*(int *)(v11 + 36)], &v8[*(int *)(v11 + 36)], v9);
  return a1;
}

uint64_t sub_10017B210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017B224);
}

uint64_t sub_10017B224(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100010218(&qword_1007FC8E0);
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_10017B2D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017B2EC);
}

void *sub_10017B2EC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *unint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100010218(&qword_1007FC8E0);
    uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = (char *)v5 + *(int *)(a4 + 20);
    return (void *)v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_10017B398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10017BE2C(a1, a2, a3, (uint64_t)&value witness table for Builtin.BridgeObject + 64, (uint64_t (*)(uint64_t))sub_1001204C0);
}

uint64_t sub_10017B3BC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_10017B464()
{
  unint64_t result = qword_100800760;
  if (!qword_100800760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800760);
  }
  return result;
}

unint64_t sub_10017B4BC()
{
  unint64_t result = qword_100800768;
  if (!qword_100800768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800768);
  }
  return result;
}

uint64_t sub_10017B510(uint64_t a1, double *a2, uint64_t a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  uint64_t v40 = a3;
  int v41 = a2;
  uint64_t v12 = type metadata accessor for LayoutSubviews();
  uint64_t v38 = *(void *)(v12 - 8);
  uint64_t v39 = v12;
  __chkstk_darwin(v12);
  uint64_t v37 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v17 = type metadata accessor for LayoutDirection();
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v36 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v36 - v22;
  uint64_t v24 = sub_100010218(&qword_1007FD208);
  __chkstk_darwin(v24 - 8);
  uint64_t v26 = (char *)&v36 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1003F2088((uint64_t)v26);
  uint64_t v27 = type metadata accessor for LayoutSubview();
  uint64_t v28 = *(void *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27) == 1)
  {
    sub_10001457C((uint64_t)v26, &qword_1007FD208);
  }
  else
  {
    v44.origin.x = a4;
    v44.origin.y = a5;
    v44.size.width = a6;
    v44.size.height = a7;
    CGRectGetMinX(v44);
    v45.origin.x = a4;
    v45.origin.y = a5;
    v45.size.width = a6;
    v45.size.height = a7;
    CGRectGetMidY(v45);
    static UnitPoint.leading.getter();
    v46.origin.x = a4;
    v46.origin.y = a5;
    v46.size.width = a6;
    v46.size.height = a7;
    CGRectGetHeight(v46);
    LOBYTE(slice.origin.x) = 0;
    LOBYTE(remainder.origin.x) = 0;
    LayoutSubview.place(at:anchor:proposal:)();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v26, v27);
  }
  CGFloat v29 = *v41;
  LayoutSubviews.layoutDirection.getter();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for LayoutDirection.leftToRight(_:), v17);
  char v30 = static LayoutDirection.== infix(_:_:)();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v18 + 8);
  v31(v20, v17);
  v31(v23, v17);
  memset(&slice, 0, sizeof(slice));
  if (v30) {
    CGRectEdge v32 = CGRectMinXEdge;
  }
  else {
    CGRectEdge v32 = CGRectMaxXEdge;
  }
  memset(&remainder, 0, sizeof(remainder));
  v47.origin.x = a4;
  v47.origin.y = a5;
  v47.size.width = a6;
  v47.size.height = a7;
  CGRectDivide(v47, &slice, &remainder, v29, v32);
  uint64_t v34 = v38;
  uint64_t v33 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v37, a1, v39);
  sub_100514C48(1);
  type metadata accessor for InsightsYearlyEntriesView.TopLayout.Cache(0);
  LOBYTE(slice.origin.x) = 0;
  LOBYTE(remainder.origin.x) = 0;
  AnyLayout.placeSubviews(in:proposal:subviews:cache:)();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v16, v33);
}

uint64_t type metadata accessor for InsightsYearlyEntriesView.TopLayout.Cache(uint64_t a1)
{
  return sub_10003352C(a1, qword_1008007E0);
}

uint64_t *sub_10017B9D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *int v3 = *a2;
    int v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    uint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = type metadata accessor for AnyLayout.Cache();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_10017BAA4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = type metadata accessor for AnyLayout.Cache();
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *sub_10017BB0C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for AnyLayout.Cache();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *sub_10017BB88(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for AnyLayout.Cache();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *sub_10017BC04(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for AnyLayout.Cache();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *sub_10017BC80(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = type metadata accessor for AnyLayout.Cache();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_10017BCFC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10017BD10);
}

uint64_t sub_10017BD10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = type metadata accessor for AnyLayout.Cache();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t sub_10017BD80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10017BD94);
}

uint64_t sub_10017BD94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = type metadata accessor for AnyLayout.Cache();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

uint64_t sub_10017BE08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_10017BE2C(a1, a2, a3, (uint64_t)&value witness table for Builtin.Int64 + 64, (uint64_t (*)(uint64_t))&type metadata accessor for AnyLayout.Cache);
}

uint64_t sub_10017BE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t result = a5(319);
  if (v6 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_10017BED0()
{
  uint64_t v0 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v2 = v1;
  if (v0 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

uint64_t sub_10017BF5C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 6579570;
  unint64_t v3 = 0xE300000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 6579570;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6E65657267;
      break;
    case 2:
      unint64_t v3 = 0xE400000000000000;
      uint64_t v5 = 1702194274;
      break;
    case 3:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6168706C61;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE300000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6E65657267) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v2 = 1702194274;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6168706C61) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10017C0BC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEA0000000000656ELL;
  uint64_t v3 = 0x696C6E496B636F6CLL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x746365526B636F6CLL;
    }
    else {
      uint64_t v5 = 1701670760;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEF72616C75676E61;
    }
    else {
      unint64_t v6 = 0xE400000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x696C6E496B636F6CLL;
  unint64_t v6 = 0xEA0000000000656ELL;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x746365526B636F6CLL;
    }
    else {
      uint64_t v3 = 1701670760;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xEF72616C75676E61;
    }
    else {
      unint64_t v2 = 0xE400000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_10017C1E0(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE900000000000079;
  uint64_t v3 = 0x6144664F656D6974;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v5 = 0x6557664F656D6974;
    }
    else {
      uint64_t v5 = 0x656D6974796E61;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEA00000000006B65;
    }
    else {
      unint64_t v6 = 0xE700000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  uint64_t v5 = 0x6144664F656D6974;
  unint64_t v6 = 0xE900000000000079;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      uint64_t v3 = 0x6557664F656D6974;
    }
    else {
      uint64_t v3 = 0x656D6974796E61;
    }
    if (v7 == 1) {
      unint64_t v2 = 0xEA00000000006B65;
    }
    else {
      unint64_t v2 = 0xE700000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_10017C304(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000064;
  unint64_t v3 = 0x616568416B6F6F6CLL;
  uint64_t v4 = a1;
  unint64_t v5 = 0x616568416B6F6F6CLL;
  unint64_t v6 = 0xE900000000000064;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x6D6F4D6568546E69;
      uint64_t v7 = 7630437;
      goto LABEL_5;
    case 2:
      unint64_t v6 = 0x8000000100686BE0;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v5 = 0x446C616963657073;
      uint64_t v7 = 7567713;
LABEL_5:
      unint64_t v6 = v7 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      uint64_t v8 = 0x6D6F4D6568546E69;
      uint64_t v9 = 7630437;
      goto LABEL_12;
    case 2:
      unint64_t v2 = 0x8000000100686BE0;
      unint64_t v3 = 0xD000000000000010;
      goto LABEL_9;
    case 3:
      uint64_t v8 = 0x446C616963657073;
      uint64_t v9 = 7567713;
LABEL_12:
      unint64_t v2 = v9 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
      if (v5 == v8) {
        goto LABEL_13;
      }
      goto LABEL_15;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_15;
      }
LABEL_13:
      if (v6 == v2) {
        char v10 = 1;
      }
      else {
LABEL_15:
      }
        char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_10017C4B4(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6F746F6870;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6F746F6870;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6F65646976;
      break;
    case 2:
      uint64_t v5 = 0x6F69647561;
      break;
    case 3:
      uint64_t v5 = 0x616964656DLL;
      break;
    case 4:
      uint64_t v5 = 0x6563616C70;
      break;
    case 5:
      uint64_t v5 = 0x61737265766E6F63;
      unint64_t v3 = 0xEC0000006E6F6974;
      break;
    case 6:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x7974697669746361;
      break;
    case 7:
      uint64_t v5 = 0x697463656C666572;
      unint64_t v3 = 0xEA00000000006E6FLL;
      break;
    case 8:
      uint64_t v5 = 0x4D664F6574617473;
      unint64_t v3 = 0xEB00000000646E69;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      uint64_t v7 = 1701079414;
      goto LABEL_13;
    case 2:
      uint64_t v7 = 1768191329;
LABEL_13:
      if (v5 != (v7 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 3:
      if (v5 != 0x616964656DLL) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 4:
      if (v5 != 0x6563616C70) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 5:
      unint64_t v6 = 0xEC0000006E6F6974;
      if (v5 != 0x61737265766E6F63) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 6:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x7974697669746361) {
        goto LABEL_28;
      }
      goto LABEL_25;
    case 7:
      uint64_t v2 = 0x697463656C666572;
      unint64_t v6 = 0xEA00000000006E6FLL;
      goto LABEL_24;
    case 8:
      unint64_t v6 = 0xEB00000000646E69;
      if (v5 != 0x4D664F6574617473) {
        goto LABEL_28;
      }
      goto LABEL_25;
    default:
LABEL_24:
      if (v5 != v2) {
        goto LABEL_28;
      }
LABEL_25:
      if (v3 == v6) {
        char v8 = 1;
      }
      else {
LABEL_28:
      }
        char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v8 & 1;
  }
}

uint64_t sub_10017C754(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x636973756DLL;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x636973756DLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x74736163646F70;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x656C6369747261;
      break;
    case 3:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1802465122;
      break;
    case 4:
      unint64_t v3 = 0xE200000000000000;
      unint64_t v5 = 30324;
      break;
    case 5:
      unint64_t v3 = 0x80000001006856C0;
      unint64_t v5 = 0xD000000000000010;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x74736163646F70) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x656C6369747261) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1802465122) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE200000000000000;
      uint64_t v2 = 30324;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0x80000001006856C0;
      if (v5 != 0xD000000000000010) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10017C938(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x796C6B656577;
  }
  else {
    uint64_t v3 = 0x796C696164;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x796C6B656577;
  }
  else {
    uint64_t v5 = 0x796C696164;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10017C9D8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x68746C616568;
  }
  else {
    uint64_t v3 = 0x6163696669746F6ELL;
  }
  if (v2) {
    unint64_t v4 = 0xED0000736E6F6974;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x68746C616568;
  }
  else {
    uint64_t v5 = 0x6163696669746F6ELL;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xED0000736E6F6974;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10017CA88(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 13174;
    }
    else {
      uint64_t v3 = 0x726568746FLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE200000000000000;
    }
    else {
      unint64_t v4 = 0xE500000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 13174;
      }
      else {
        uint64_t v6 = 0x726568746FLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE200000000000000;
      }
      else {
        unint64_t v7 = 0xE500000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE200000000000000;
    uint64_t v3 = 12918;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE200000000000000;
  if (v3 != 12918)
  {
LABEL_21:
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_10017CB6C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x656772614C78;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x656772614C78;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x69576D756964656DLL;
      unint64_t v3 = 0xEA00000000006564;
      break;
    case 2:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x656772616CLL;
      break;
    case 3:
      uint64_t v5 = 0x6D756964656DLL;
      break;
    case 4:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6C6C616D73;
      break;
    case 5:
      uint64_t v5 = 0x657263536C6C7566;
      unint64_t v3 = 0xEA00000000006E65;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEA00000000006564;
      if (v5 == 0x69576D756964656DLL) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0xE500000000000000;
      if (v5 != 0x656772616CLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      if (v5 != 0x6D756964656DLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v2 = 0x6C6C616D73;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xEA00000000006E65;
      if (v5 != 0x657263536C6C7566) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10017CD68(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD00000000000002ALL;
  unint64_t v3 = 0x8000000100685710;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD00000000000002ALL;
    }
    else {
      unint64_t v5 = 0xD000000000000031;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x8000000100685740;
    }
    else {
      unint64_t v6 = 0x8000000100685770;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  else
  {
    unint64_t v5 = 0xD00000000000002ALL;
    unint64_t v6 = 0x8000000100685710;
    int v7 = a2;
    if (!a2) {
      goto LABEL_12;
    }
  }
  if (v7 == 1)
  {
    unint64_t v3 = 0x8000000100685740;
  }
  else
  {
    unint64_t v2 = 0xD000000000000031;
    unint64_t v3 = 0x8000000100685770;
  }
LABEL_12:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_10017CE60(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x746E656D6F6DLL;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x746E656D6F6DLL;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE500000000000000;
      uint64_t v5 = 0x6F746F6870;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x6E6F697461657263;
      break;
    case 3:
      uint64_t v5 = 0x6D6F74737563;
      break;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE500000000000000;
      if (v5 == 0x6F746F6870) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x6E6F697461657263) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      uint64_t v2 = 0x6D6F74737563;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x6E776F6E6B6E75) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10017D00C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x4D6C7566646E696DLL;
  }
  else {
    uint64_t v3 = 0x4D664F6574617473;
  }
  if (v2) {
    unint64_t v4 = 0xEB00000000646E69;
  }
  else {
    unint64_t v4 = 0xEE00736574756E69;
  }
  if (a2) {
    uint64_t v5 = 0x4D6C7566646E696DLL;
  }
  else {
    uint64_t v5 = 0x4D664F6574617473;
  }
  if (a2) {
    unint64_t v6 = 0xEE00736574756E69;
  }
  else {
    unint64_t v6 = 0xEB00000000646E69;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10017D0C8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000019;
  }
  else {
    unint64_t v3 = 0x647261646E617473;
  }
  if (v2) {
    unint64_t v4 = 0xE800000000000000;
  }
  else {
    unint64_t v4 = 0x80000001006857D0;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000019;
  }
  else {
    unint64_t v5 = 0x647261646E617473;
  }
  if (a2) {
    unint64_t v6 = 0x80000001006857D0;
  }
  else {
    unint64_t v6 = 0xE800000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10017D174(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6144746E656D6F6DLL;
  }
  else {
    uint64_t v3 = 0x7461447972746E65;
  }
  if (v2) {
    unint64_t v4 = 0xE900000000000065;
  }
  else {
    unint64_t v4 = 0xEA00000000006574;
  }
  if (a2) {
    uint64_t v5 = 0x6144746E656D6F6DLL;
  }
  else {
    uint64_t v5 = 0x7461447972746E65;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000006574;
  }
  else {
    unint64_t v6 = 0xE900000000000065;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10017D224(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEF73656972746E45;
  uint64_t v3 = 0x724F6B6165727473;
  uint64_t v4 = a1;
  uint64_t v5 = 0x724F6B6165727473;
  unint64_t v6 = 0xEF73656972746E45;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x6B6165727473;
      break;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v5 = 0x73656972746E65;
      break;
    case 3:
      unint64_t v6 = 0xE500000000000000;
      uint64_t v5 = 0x7364726F77;
      break;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1937334628;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE600000000000000;
      if (v5 == 0x6B6165727473) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xE700000000000000;
      if (v5 != 0x73656972746E65) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xE500000000000000;
      uint64_t v3 = 0x7364726F77;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xE400000000000000;
      if (v5 != 1937334628) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_10017D3E8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD00000000000001CLL;
  }
  else {
    unint64_t v3 = 0xD00000000000001ALL;
  }
  if (v2) {
    unint64_t v4 = 0x8000000100685850;
  }
  else {
    unint64_t v4 = 0x8000000100685870;
  }
  if (a2) {
    unint64_t v5 = 0xD00000000000001CLL;
  }
  else {
    unint64_t v5 = 0xD00000000000001ALL;
  }
  if (a2) {
    unint64_t v6 = 0x8000000100685870;
  }
  else {
    unint64_t v6 = 0x8000000100685850;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10017D494(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 1953066613;
  }
  else {
    uint64_t v3 = 0x65756C6176;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE400000000000000;
  }
  if (a2) {
    uint64_t v5 = 1953066613;
  }
  else {
    uint64_t v5 = 0x65756C6176;
  }
  if (a2) {
    unint64_t v6 = 0xE400000000000000;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_10017D530(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_10017D574(uint64_t a1, uint64_t a2, char a3, void *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v34 = a6;
  uint64_t v36 = a4;
  uint64_t v35 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v35 - 8);
  __chkstk_darwin(v35);
  uint64_t v14 = &v32[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v15 - 8);
  uint64_t v38 = v15;
  __n128 v16 = __chkstk_darwin(v15);
  uint64_t v18 = &v32[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  int v33 = a3 & 1;
  if (a3) {
    uint64_t v19 = 0;
  }
  else {
    uint64_t v19 = a2;
  }
  uint64_t v20 = (*(uint64_t (**)(uint64_t, uint64_t, void *, __n128))((swift_isaMask & *v7) + 0x2E0))(v19, a1, a5, v16);
  uint64_t v22 = v21;
  uint64_t v23 = (void *)((char *)v7 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_thumbnailCacheKey);
  *uint64_t v23 = v20;
  v23[1] = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v25 = swift_allocObject();
  uint64_t v26 = v34;
  *(void *)(v25 + 16) = v24;
  *(void *)(v25 + 24) = v26;
  *(void *)(v25 + 32) = a7;
  *(void *)(v25 + 40) = v20;
  *(void *)(v25 + 48) = v22;
  *(unsigned char *)(v25 + 56) = a1;
  *(void *)(v25 + 64) = a2;
  *(unsigned char *)(v25 + 72) = v33;
  uint64_t v27 = v36;
  *(void *)(v25 + 80) = a5;
  *(void *)(v25 + 88) = v27;
  aBlock[4] = sub_100183E20;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_10079B7D8;
  uint64_t v28 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  id v29 = a5;
  v27;
  static DispatchQoS.unspecified.getter();
  uint64_t v40 = &_swiftEmptyArrayStorage;
  sub_10018461C((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  uint64_t v30 = v35;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v28);
  (*(void (**)(unsigned char *, uint64_t))(v39 + 8))(v14, v30);
  (*(void (**)(unsigned char *, uint64_t))(v37 + 8))(v18, v38);
  swift_release();
  return swift_release();
}

void *sub_10017D914()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_context);
  id v2 = v1;
  return v1;
}

void *sub_10017D944()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  id v2 = v1;
  return v1;
}

uint64_t sub_10017D974(uint64_t a1)
{
  if (!*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_context)) {
    return 0;
  }
  __chkstk_darwin(a1);
  id v3 = v2;
  sub_100010218(&qword_1007F9F98);
  NSManagedObjectContext.performAndWait<A>(_:)();

  return v5 & 1;
}

uint64_t sub_10017DA2C(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 73) = a1;
  uint64_t v3 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v2 + 24) = v3;
  *(void *)(v2 + 32) = *(void *)(v3 - 8);
  *(void *)(v2 + 40) = swift_task_alloc();
  return _swift_task_switch(sub_10017DAF0, 0, 0);
}

uint64_t sub_10017DAF0()
{
  uint64_t v1 = *(char **)(v0 + 16);
  uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_context];
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = *(void *)(v0 + 40);
  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 24);
    uint64_t v5 = *(void *)(v0 + 32);
    char v6 = *(unsigned char *)(v0 + 73);
    uint64_t v7 = swift_allocObject();
    *(void *)(v0 + 56) = v7;
    *(void *)(v7 + 16) = v1;
    *(unsigned char *)(v7 + 24) = v6;
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v3, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v4);
    v2;
    char v8 = v1;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v9;
    uint64_t v10 = sub_100010218((uint64_t *)&unk_1007FC460);
    void *v9 = v0;
    v9[1] = sub_10017DC94;
    uint64_t v11 = *(void *)(v0 + 40);
    return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 72, v11, sub_100184728, v7, v10);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_10017DC94()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 48);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  uint64_t v4 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_10003DB64, 0, 0);
}

void sub_10017DE28()
{
  id v0 = [self defaultCenter];
  if (qword_1007F6E78 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10083D400;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v0 postNotificationName:v1 object:isa];
}

uint64_t sub_10017DEF4(uint64_t a1)
{
  return sub_10017DF44(a1, (uint64_t)&unk_10079BA40, (uint64_t)sub_1001846E8, (uint64_t)&unk_10079BA58);
}

uint64_t sub_10017DF1C(uint64_t a1)
{
  return sub_10017DF44(a1, (uint64_t)&unk_10079B9F0, (uint64_t)sub_1001846E0, (uint64_t)&unk_10079BA08);
}

uint64_t sub_10017DF44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = v4;
  uint64_t v8 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)aBlock - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)aBlock - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  Notification.object.getter();
  if (!v23)
  {
    sub_10001457C((uint64_t)aBlock, &qword_1007FAD50);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56))(v10, 1, 1, v11);
    return sub_10001457C((uint64_t)v10, &qword_100800950);
  }
  int v15 = swift_dynamicCast();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v10, v15 ^ 1u, 1, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1) {
    return sub_10001457C((uint64_t)v10, &qword_100800950);
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  if (static UUID.== infix(_:_:)())
  {
    __n128 v16 = *(void **)&v4[OBJC_IVAR____TtCC7Journal10Journaling5Asset_context];
    if (v16)
    {
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v4;
      uint64_t v24 = a3;
      uint64_t v25 = v17;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10017D530;
      uint64_t v23 = a4;
      uint64_t v18 = _Block_copy(aBlock);
      id v19 = v16;
      id v20 = v7;
      swift_release();
      [v19 performBlock:v18];
      _Block_release(v18);
    }
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

id sub_10017E214(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void **)(v2 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_context);
  *(void *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_context) = a1;
  id v15 = a1;

  type metadata accessor for JournalEntryAssetMO();
  id v16 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:v15];
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v16 setId:isa];

  Date.init()();
  Class v18 = Date._bridgeToObjectiveC()().super.isa;
  uint64_t v37 = *(void (**)(char *, uint64_t))(v11 + 8);
  v37(v13, v10);
  [v16 setCreatedDate:v18];

  sub_100041A58(*(unsigned char *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type));
  NSString v19 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v16 setAssetType:v19];

  id v20 = *(void **)(v2 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_title);
  if (v20 && (id v21 = v20, v22 = sub_10004243C(), v24 = v23, v21, v24 >> 60 != 15))
  {
    Class v25 = Data._bridgeToObjectiveC()().super.isa;
    sub_100040DBC(v22, v24);
  }
  else
  {
    Class v25 = 0;
  }
  [v16 setTitle:v25];

  sub_100043590(*(unsigned char *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_source));
  NSString v26 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v16 setSource:v26];

  uint64_t v27 = v2 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionId;
  swift_beginAccess();
  sub_10001B220(v27, (uint64_t)v9, &qword_100800950);
  uint64_t v28 = type metadata accessor for UUID();
  uint64_t v29 = *(void *)(v28 - 8);
  Class v30 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v9, 1, v28) != 1)
  {
    Class v30 = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v29 + 8))(v9, v28);
  }
  [v16 setSuggestionId:v30];

  uint64_t v31 = v2 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionDate;
  swift_beginAccess();
  sub_10001B220(v31, (uint64_t)v6, (uint64_t *)&unk_1007FC470);
  Class v32 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v6, 1, v10) != 1)
  {
    Class v32 = Date._bridgeToObjectiveC()().super.isa;
    v37(v6, v10);
  }
  [v16 setSuggestionDate:v32];

  [v16 setIsHidden:*(unsigned __int8 *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_isHidden)];
  int v33 = *(void **)(v2 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  *(void *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO) = v16;
  id v34 = v16;

  return v34;
}

id sub_10017E6B0(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  int v12 = a3 & 1;
  id v13 = objc_allocWithZone((Class)type metadata accessor for ThumbnailCacheOperation());
  uint64_t v14 = v6;
  swift_bridgeObjectRetain();
  return sub_100529128(v14, a1, a2, v12, a4, a5, a6);
}

uint64_t sub_10017E744(uint64_t a1, char a2)
{
  return sub_1003209E8(v2 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id, a1, 0, 1, 0, 1, a2);
}

id sub_10017E76C()
{
  id v1 = [v0 assetType];
  if (v1)
  {
    uint64_t v2 = v1;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  switch(sub_100044D84())
  {
    case 1u:
      uint64_t v6 = (char *)objc_allocWithZone((Class)_s14LivePhotoAssetCMa(0));
      *(void *)&v6[OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata] = 0;
      uint64_t v7 = &v6[OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_pendingLivePhotoRequest];
      *(_DWORD *)uint64_t v7 = 0;
      v7[4] = 1;
      *(void *)&v6[OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_livePhotoAttachments] = 0;
      return sub_100180EC8(v0);
    case 2u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s10VideoAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata;
      goto LABEL_24;
    case 3u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s10MusicAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC7Journal10Journaling10MusicAsset_metadata;
      goto LABEL_24;
    case 4u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s12PodcastAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC7Journal10Journaling12PodcastAsset_metadata;
      goto LABEL_24;
    case 5u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s9BookAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC7Journal10Journaling9BookAsset_metadata;
      goto LABEL_24;
    case 6u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s10AudioAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC7Journal10Journaling10AudioAsset_metadata;
      goto LABEL_24;
    case 7u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s10VisitAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC7Journal10Journaling10VisitAsset_metadata;
      goto LABEL_24;
    case 8u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s16MultiPinMapAssetCMa());
      *(void *)&v4[OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata] = 0;
      uint64_t v5 = &OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_isWorkArray;
      goto LABEL_24;
    case 9u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s15GenericMapAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC7Journal10Journaling15GenericMapAsset_metadata;
      goto LABEL_24;
    case 0xAu:
      uint64_t v8 = objc_allocWithZone((Class)_s9LinkAssetCMa(0));
      *(void *)&v8[OBJC_IVAR____TtCC7Journal10Journaling9LinkAsset_metadata] = 0;
      v8[OBJC_IVAR____TtCC7Journal10Journaling9LinkAsset_contentType] = 6;
      return sub_100180EC8(v0);
    case 0xBu:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s12ContactAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC7Journal10Journaling12ContactAsset_metadata;
      goto LABEL_24;
    case 0xCu:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s16WorkoutIconAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC7Journal10Journaling16WorkoutIconAsset_metadata;
      goto LABEL_24;
    case 0xDu:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s17WorkoutRouteAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC7Journal10Journaling17WorkoutRouteAsset_metadata;
      goto LABEL_24;
    case 0xEu:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s15ReflectionAssetCMa());
      uint64_t v5 = &OBJC_IVAR____TtCC7Journal10Journaling15ReflectionAsset_metadata;
      goto LABEL_24;
    case 0xFu:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s16StateOfMindAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata;
      goto LABEL_24;
    case 0x10u:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s19MotionActivityAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC7Journal10Journaling19MotionActivityAsset_metadata;
      goto LABEL_24;
    case 0x11u:
      int v12 = &type metadata for JournalFeatureFlags;
      unint64_t v13 = sub_10005F364();
      v11[0] = 13;
      char v9 = isFeatureEnabled(_:)();
      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v11);
      if ((v9 & 1) == 0) {
        goto LABEL_4;
      }
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s20ThirdPartyMediaAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC7Journal10Journaling20ThirdPartyMediaAsset_metadata;
      goto LABEL_24;
    case 0x12u:
      uint64_t v3 = (objc_class *)_s16PlaceholderAssetCMa();
      goto LABEL_26;
    case 0x13u:
    case 0x14u:
    case 0x15u:
LABEL_4:
      uint64_t v3 = (objc_class *)_s12UnknownAssetCMa();
LABEL_26:
      objc_allocWithZone(v3);
      return sub_100180EC8(v0);
    default:
      uint64_t v4 = (char *)objc_allocWithZone((Class)_s10PhotoAssetCMa(0));
      uint64_t v5 = &OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata;
LABEL_24:
      *(void *)&v4[*v5] = 0;
      return sub_100180EC8(v0);
  }
}

id sub_10017EB14(uint64_t a1, char a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = a2 & 1;
  uint64_t v8 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = &v42[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v42[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __n128 v16 = __chkstk_darwin(v15);
  Class v18 = &v42[-v17];
  sub_1005E7E80(a1, v7, v16);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 32))(v18, v10, v11);
    switch(a3)
    {
      case 5:
        swift_bridgeObjectRelease();
        goto LABEL_8;
      default:
        char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v19 & 1) != 0
          || (sub_100187574(),
              double v21 = v20,
              id v22 = [self mainScreen],
              [v22 scale],
              double v24 = v23,
              v22,
              (id v25 = sub_10036A34C(v21 * v24)) == 0))
        {
LABEL_8:
          URL.path(percentEncoded:)(1);
          id v27 = objc_allocWithZone((Class)UIImage);
          NSString v28 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v26 = [v27 initWithContentsOfFile:v28 cache:1];

          if (!v26)
          {
            if (qword_1007F6A48 != -1) {
              swift_once();
            }
            uint64_t v29 = type metadata accessor for Logger();
            sub_100026A54(v29, (uint64_t)qword_100800820);
            (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v12 + 16))(v14, v18, v11);
            id v30 = v4;
            uint64_t v31 = Logger.logObject.getter();
            os_log_type_t v32 = static os_log_type_t.error.getter();
            int v33 = v32;
            if (os_log_type_enabled(v31, v32))
            {
              uint64_t v34 = swift_slowAlloc();
              CGRect v46 = (void *)swift_slowAlloc();
              uint64_t v45 = swift_slowAlloc();
              uint64_t v47 = (uint64_t)v30;
              uint64_t v48 = v45;
              *(_DWORD *)uint64_t v34 = 138412546;
              os_log_t v44 = v31;
              int v43 = v33;
              id v35 = v30;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              void *v46 = v30;

              *(_WORD *)(v34 + 12) = 2080;
              sub_10018461C((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
              uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
              uint64_t v47 = sub_10011EA98(v36, v37, &v48);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              uint64_t v38 = *(void (**)(unsigned char *, uint64_t))(v12 + 8);
              v38(v14, v11);
              os_log_t v39 = v44;
              _os_log_impl((void *)&_mh_execute_header, v44, (os_log_type_t)v43, "%@.getImageStoredInFile can't create image from %s", (uint8_t *)v34, 0x16u);
              sub_100010218((uint64_t *)&unk_1007FC430);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              v38(v18, v11);
            }
            else
            {

              uint64_t v40 = *(void (**)(unsigned char *, uint64_t))(v12 + 8);
              v40(v14, v11);

              v40(v18, v11);
            }
            return 0;
          }
        }
        else
        {
          id v26 = v25;
        }
        (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v18, v11);
        return v26;
    }
  }
  sub_10001457C((uint64_t)v10, (uint64_t *)&unk_100800A60);
  return 0;
}

id sub_10017F100(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL.DirectoryHint();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)v23 - v13;
  sub_10017F3D0((uint64_t)v11);
  v23[0] = a1;
  v23[1] = a2;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for URL.DirectoryHint.inferFromPath(_:), v4);
  sub_100014344();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v9 + 8);
  v15(v11, v8);
  id v16 = [self defaultManager];
  URL.path.getter();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v18 = [v16 fileExistsAtPath:v17];

  if (v18)
  {
    URL.relativePath.getter();
    id v19 = objc_allocWithZone((Class)UIImage);
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v21 = [v19 initWithContentsOfFile:v20];

    v15(v14, v8);
  }
  else
  {
    v15(v14, v8);
    return 0;
  }
  return v21;
}

uint64_t sub_10017F3D0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for URL.DirectoryHint();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v16 - v11;
  if (qword_1007F6EF8 != -1) {
    swift_once();
  }
  if (qword_10083D468)
  {
    sub_1004FD498(qword_10083D460, (void *)qword_10083D468, (uint64_t)v9);
    unsigned int v18 = enum case for URL.DirectoryHint.inferFromPath(_:);
    NSString v17 = *(void (**)(char *))(v3 + 104);
    v17(v5);
    v16[1] = sub_100014344();
    URL.appending<A>(components:directoryHint:)();
    v16[0] = a1;
    uint64_t v13 = *(void (**)(char *, uint64_t))(v3 + 8);
    v13(v5, v2);
    uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
    v14(v9, v6);
    ((void (*)(char *, void, uint64_t))v17)(v5, v18, v2);
    URL.appending<A>(components:directoryHint:)();
    v13(v5, v2);
    return ((uint64_t (*)(char *, uint64_t))v14)(v12, v6);
  }
  else
  {
    return static URL.cachesDirectory.getter();
  }
}

void sub_10017F6A0()
{
  uint64_t v1 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v71 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v74 = (uint64_t)&v64 - v7;
  __chkstk_darwin(v8);
  uint64_t v70 = (char *)&v64 - v9;
  uint64_t v10 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v15 = (char *)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for NSFastEnumerationIterator();
  __chkstk_darwin(v16);
  NSString v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v21 = _swiftEmptyArrayStorage;
  id v22 = &_swiftEmptySetSingleton;
  uint64_t v86 = &_swiftEmptySetSingleton;
  unint64_t v87 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v80 = v0;
  double v23 = *(void **)&v0[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
  if (v23)
  {
    uint64_t v68 = v18;
    uint64_t v69 = v17;
    id v67 = v23;
    id v24 = [v67 fileAttachments];
    if (!v24)
    {
      sub_10001B284(0, (unint64_t *)&qword_100800958);
      id v24 = (id)NSSet.init(arrayLiteral:)();
    }
    NSSet.makeIterator()();

    NSFastEnumerationIterator.next()();
    if (v85)
    {
      id v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v79 = (void (**)(char *, uint64_t, uint64_t))(v13 + 32);
      uint64_t v72 = (void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
      uint64_t v73 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
      uint64_t v66 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
      uint64_t v65 = (void (**)(char *, char *, uint64_t))(v4 + 16);
      uint64_t v64 = (void (**)(uint64_t, uint64_t))(v4 + 8);
      uint64_t v77 = (void (**)(char *, uint64_t))(v13 + 8);
      uint64_t v78 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
      uint64_t v76 = v12;
      do
      {
        sub_10002102C(&v84, &v83);
        type metadata accessor for JournalEntryAssetFileAttachmentMO();
        if (swift_dynamicCast())
        {
          id v26 = v15;
          uint64_t v27 = (uint64_t)v3;
          id v28 = v82;
          if (sub_1005DE124(v28))
          {
            swift_retain();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            swift_release();
          }
          id v29 = [v28 filePath:v64];
          if (v29)
          {
            id v30 = v29;
            static String._unconditionallyBridgeFromObjectiveC(_:)();

            type metadata accessor for Journaling();
            sub_1005E6B0C((uint64_t)v12);
            swift_bridgeObjectRelease();
            uint64_t v31 = v12;
            uint64_t v32 = (uint64_t)v12;
            uint64_t v33 = v81;
            if ((*v25)(v31, 1, v81) != 1)
            {
              (*v79)(v15, v32, v33);
              id v34 = [self defaultManager];
              URL.path.getter();
              NSString v35 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              unsigned __int8 v36 = [v34 fileExistsAtPath:v35];

              if (v36)
              {
                (*v77)(v26, v33);

                uint64_t v3 = (char *)v27;
                uint64_t v15 = v26;
LABEL_23:
                id v25 = v78;
                uint64_t v12 = v76;
                goto LABEL_7;
              }
              id v37 = [v28 id];
              uint64_t v3 = (char *)v27;
              if (v37)
              {
                uint64_t v38 = v37;
                uint64_t v39 = v74;
                static UUID._unconditionallyBridgeFromObjectiveC(_:)();

                uint64_t v40 = *v72;
                uint64_t v41 = v39;
                uint64_t v42 = v75;
                (*v72)(v27, v41, v75);
                (*v73)(v27, 0, 1, v42);
                if ((*v66)(v27, 1, v42) != 1)
                {
                  int v43 = v70;
                  uint64_t v44 = v75;
                  v40((uint64_t)v70, v27, v75);
                  uint64_t v45 = v71;
                  (*v65)(v71, v43, v44);
                  uint64_t v46 = v74;
                  sub_10054B934(v74, v45);

                  uint64_t v47 = *v64;
                  (*v64)(v46, v44);
                  v47((uint64_t)v43, v44);
                  uint64_t v15 = v26;
                  (*v77)(v26, v81);
                  goto LABEL_23;
                }
              }
              else
              {
                (*v73)(v27, 1, 1, v75);
              }

              uint64_t v15 = v26;
              (*v77)(v26, v81);
              sub_10001457C(v27, &qword_100800950);
              goto LABEL_23;
            }

            sub_10001457C(v32, (uint64_t *)&unk_100800A60);
            uint64_t v12 = (char *)v32;
          }
          else
          {
          }
        }
LABEL_7:
        NSFastEnumerationIterator.next()();
      }
      while (v85);
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v20, v69);

    id v22 = v86;
    id v21 = (void *)v87;
  }
  uint64_t v48 = v80;
  *(void *)&v80[OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachmentIdsMissingFile] = v22;
  swift_bridgeObjectRelease();
  *(void *)((char *)v48 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments) = v21;
  uint64_t v49 = swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))((swift_isaMask & *v48) + 0x2C0))(v49);
  swift_getObjectType();
  uint64_t v50 = swift_conformsToProtocol2();
  if (v50) {
    uint64_t v51 = v50;
  }
  else {
    uint64_t v51 = 0;
  }
  if (v50) {
    int v52 = v48;
  }
  else {
    int v52 = 0;
  }
  if (v52)
  {
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v54 = v80;
    sub_10058E4E0(ObjectType, v51);
  }
  uint64_t v55 = v80;
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    uint64_t v56 = v55;
  }
  else {
    uint64_t v56 = 0;
  }
  if (v56)
  {
    uint64_t v57 = *(void **)&v56[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
    if (v57)
    {
      uint64_t v58 = v80;
      id v59 = [v57 contentType];
      if (v59)
      {
        uint64_t v60 = v59;
        uint64_t v57 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v62 = v61;

LABEL_43:
        v88._uint64_t countAndFlagsBits = (uint64_t)v57;
        v88._object = v62;
        v56[OBJC_IVAR____TtCC7Journal10Journaling9LinkAsset_contentType] = sub_1005FBD50(v88);

        return;
      }
      uint64_t v57 = 0;
    }
    else
    {
      uint64_t v63 = v80;
    }
    uint64_t v62 = (void *)0xE000000000000000;
    goto LABEL_43;
  }
}

uint64_t sub_10017FFD4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100800820);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100800820);
  if (qword_1007F7D48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EBD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10018009C(uint64_t a1)
{
  return sub_10018010C(a1, (void (*)(void))&static DispatchQoS.background.getter, 0xD000000000000023, 0x800000010068D310, &qword_10083CF58);
}

uint64_t sub_1001800D4(uint64_t a1)
{
  return sub_10018010C(a1, (void (*)(void))&static DispatchQoS.userInitiated.getter, 0xD000000000000016, 0x800000010068D340, &qword_10083CF60);
}

uint64_t sub_10018010C(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v7 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v11 - 8);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v12 - 8);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  a2();
  static OS_dispatch_queue.Attributes.concurrent.getter();
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v7);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *a5 = result;
  return result;
}

uint64_t sub_1001802D4(uint64_t a1)
{
  return sub_10018010C(a1, (void (*)(void))&static DispatchQoS.userInteractive.getter, 0xD000000000000024, 0x800000010068D360, &qword_10083CF68);
}

uint64_t sub_10018030C(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1007FB8B0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v53 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v53 - v17;
  sub_10001B220(a1, (uint64_t)v57, &qword_1007FAD50);
  if (!v58)
  {
    sub_10001457C((uint64_t)v57, &qword_1007FAD50);
    goto LABEL_29;
  }
  _s5AssetCMa();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_29:
    char v51 = 0;
    return v51 & 1;
  }
  uint64_t v55 = v4;
  uint64_t v19 = v56;
  uint64_t ObjectType = swift_getObjectType();
  if (ObjectType != swift_getObjectType() || (static UUID.== infix(_:_:)() & 1) == 0) {
    goto LABEL_28;
  }
  uint64_t v53 = v1;
  uint64_t v54 = v19;
  char v21 = v19[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type];
  uint64_t v22 = sub_100041A58(*((unsigned char *)v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type));
  uint64_t v24 = v23;
  if (v22 == sub_100041A58(v21) && v24 == v25)
  {
    swift_bridgeObjectRelease_n();
    id v26 = v54;
  }
  else
  {
    char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v26 = v54;
    if ((v27 & 1) == 0) {
      goto LABEL_22;
    }
  }
  char v28 = v26[OBJC_IVAR____TtCC7Journal10Journaling5Asset_source];
  uint64_t v29 = sub_100043590(*((unsigned char *)v53 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_source));
  uint64_t v31 = v30;
  if (v29 == sub_100043590(v28) && v31 == v32)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v33 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v33 & 1) == 0) {
      goto LABEL_22;
    }
  }
  id v34 = *(void **)((char *)v53 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_title);
  NSString v35 = *(void **)&v54[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title];
  if (!v34)
  {
    if (!v35) {
      goto LABEL_17;
    }
    goto LABEL_22;
  }
  if (!v35
    || (sub_10001B284(0, (unint64_t *)&qword_1007FBCA0),
        id v36 = v35,
        id v37 = v34,
        char v38 = static NSObject.== infix(_:_:)(),
        v36,
        v37,
        (v38 & 1) == 0))
  {
LABEL_22:

    goto LABEL_29;
  }
LABEL_17:
  uint64_t v39 = (uint64_t)v53 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionDate;
  swift_beginAccess();
  sub_10001B220(v39, (uint64_t)v18, (uint64_t *)&unk_1007FC470);
  uint64_t v40 = &v54[OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionDate];
  swift_beginAccess();
  sub_10001B220((uint64_t)v40, (uint64_t)v15, (uint64_t *)&unk_1007FC470);
  uint64_t v41 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_10001B220((uint64_t)v18, (uint64_t)v9, (uint64_t *)&unk_1007FC470);
  sub_10001B220((uint64_t)v15, v41, (uint64_t *)&unk_1007FC470);
  uint64_t v42 = v55;
  int v43 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
  if (v43((uint64_t)v9, 1, v3) != 1)
  {
    sub_10001B220((uint64_t)v9, (uint64_t)v12, (uint64_t *)&unk_1007FC470);
    uint64_t v46 = v42;
    if (v43(v41, 1, v3) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v6, v41, v3);
      sub_10018461C((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
      char v47 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v48 = *(void (**)(char *, uint64_t))(v46 + 8);
      v48(v6, v3);
      sub_10001457C((uint64_t)v15, (uint64_t *)&unk_1007FC470);
      sub_10001457C((uint64_t)v18, (uint64_t *)&unk_1007FC470);
      v48(v12, v3);
      uint64_t v45 = sub_10001457C((uint64_t)v9, (uint64_t *)&unk_1007FC470);
      uint64_t v19 = v54;
      if (v47) {
        goto LABEL_27;
      }
      goto LABEL_28;
    }
    sub_10001457C((uint64_t)v15, (uint64_t *)&unk_1007FC470);
    sub_10001457C((uint64_t)v18, (uint64_t *)&unk_1007FC470);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v12, v3);
    uint64_t v19 = v54;
    goto LABEL_25;
  }
  sub_10001457C((uint64_t)v15, (uint64_t *)&unk_1007FC470);
  sub_10001457C((uint64_t)v18, (uint64_t *)&unk_1007FC470);
  unsigned int v44 = v43(v41, 1, v3);
  uint64_t v19 = v54;
  if (v44 != 1)
  {
LABEL_25:
    sub_10001457C((uint64_t)v9, &qword_1007FB8B0);
LABEL_28:

    goto LABEL_29;
  }
  uint64_t v45 = sub_10001457C((uint64_t)v9, (uint64_t *)&unk_1007FC470);
LABEL_27:
  char v49 = (*(uint64_t (**)(uint64_t))((swift_isaMask & *v53) + 0x200))(v45);
  char v50 = (*(uint64_t (**)(void))((swift_isaMask & *(void *)v19) + 0x200))();

  char v51 = v49 ^ v50 ^ 1;
  return v51 & 1;
}

Swift::Int sub_100180A88()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Hasher.init()();
  type metadata accessor for UUID();
  sub_10018461C((unint64_t *)&qword_100811270, (void (*)(uint64_t))&type metadata accessor for UUID);
  dispatch thunk of Hashable.hash(into:)();
  sub_100041A58(*(unsigned char *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type));
  String.hash(into:)();
  swift_bridgeObjectRelease();
  sub_100043590(*(unsigned char *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_source));
  String.hash(into:)();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_title);
  if (v9)
  {
    Hasher._combine(_:)(1u);
    id v10 = v9;
    NSObject.hash(into:)();
  }
  else
  {
    Hasher._combine(_:)(0);
  }
  uint64_t v11 = v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionDate;
  swift_beginAccess();
  sub_10001B220(v11, (uint64_t)v8, (uint64_t *)&unk_1007FC470);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    Hasher._combine(_:)(0);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v3 + 32))(v5, v8, v2);
    Hasher._combine(_:)(1u);
    sub_10018461C((unint64_t *)&unk_100800990, (void (*)(uint64_t))&type metadata accessor for Date);
    dispatch thunk of Hashable.hash(into:)();
    (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  }
  long long v21 = v16;
  long long v22 = v17;
  uint64_t v23 = v18;
  long long v19 = v14;
  long long v20 = v15;
  return Hasher.finalize()();
}

uint64_t sub_100180DAC@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v3) {
    uint64_t result = (uint64_t)[v3 isSlim];
  }
  else {
    uint64_t result = 2;
  }
  *a2 = result;
  return result;
}

char *sub_100180DFC@<X0>(char *result@<X0>, char a2@<W1>, BOOL *a3@<X8>)
{
  uint64_t v4 = *(void *)&result[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
  if (v4) {
    uint64_t result = (char *)[*(id *)&result[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO] setIsSlim:a2 & 1];
  }
  *a3 = v4 == 0;
  return result;
}

char *sub_100180E60@<X0>(char *result@<X0>, BOOL *a2@<X8>)
{
  uint64_t v3 = *(void *)&result[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
  if (v3) {
    uint64_t result = (char *)[*(id *)&result[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO] setIsHidden:result[OBJC_IVAR____TtCC7Journal10Journaling5Asset_isHidden]];
  }
  *a2 = v3 == 0;
  return result;
}

id sub_100180EC8(void *a1)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v3 - 8);
  uint64_t v95 = (char *)&v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v5 - 8);
  uint64_t v104 = (char *)&v92 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v93 = (char *)&v92 - v8;
  __chkstk_darwin(v9);
  uint64_t v96 = (char *)&v92 - v10;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = __chkstk_darwin(v11);
  uint64_t v94 = (char *)&v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments] = _swiftEmptyArrayStorage;
  *(void *)&v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachmentIdsMissingFile] = &_swiftEmptySetSingleton;
  uint64_t v15 = OBJC_IVAR____TtCC7Journal10Journaling5Asset_context;
  *(void *)&v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_context] = 0;
  uint64_t v16 = OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO;
  *(void *)&v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO] = 0;
  uint64_t v97 = OBJC_IVAR____TtCC7Journal10Journaling5Asset_title;
  *(void *)&v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title] = 0;
  double v107 = *(void (**)(__n128))(v12 + 56);
  uint64_t v98 = &v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionId];
  v107(v13);
  long long v17 = &v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionDate];
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void *)(v18 - 8);
  long long v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v102 = v18;
  uint64_t v103 = (uint64_t)v17;
  uint64_t v100 = v19 + 56;
  char v101 = v20;
  ((void (*)(char *, uint64_t, uint64_t))v20)(v17, 1, 1);
  long long v21 = &v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachmentsDirectoryPath];
  *long long v21 = 0;
  v21[1] = 0;
  long long v22 = &v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachmentsDirectoryURL];
  uint64_t v23 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 1, 1, v23);
  uint64_t v24 = &v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_thumbnailCacheKey];
  *uint64_t v24 = 0;
  v24[1] = 0;
  uint64_t v99 = OBJC_IVAR____TtCC7Journal10Journaling5Asset_isHidden;
  v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_isHidden] = 0;
  uint64_t v25 = OBJC_IVAR____TtCC7Journal10Journaling5Asset_delegates;
  id v26 = self;
  char v27 = v1;
  *(void *)&v1[v25] = [v26 weakObjectsHashTable];
  char v28 = &v27[OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate];
  *(void *)char v28 = 0;
  *((void *)v28 + 1) = 0;
  uint64_t v29 = v27;
  uint64_t v30 = &v27[OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdateMediaFile];
  *(void *)uint64_t v30 = 0;
  *((void *)v30 + 1) = 0;
  id v31 = [a1 managedObjectContext];
  uint64_t v32 = *(void **)&v1[v15];
  *(void *)&v1[v15] = v31;

  char v33 = *(void **)&v1[v16];
  *(void *)&v1[v16] = a1;
  id v34 = a1;

  uint64_t v105 = v16;
  uint64_t v106 = v11;
  NSString v35 = *(void **)&v1[v16];
  if (!v35)
  {
    uint64_t v36 = (uint64_t)v96;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v107)(v96, 1, 1, v11);
    uint64_t v45 = v11;
    uint64_t v42 = v34;
    int v43 = v27;
    uint64_t v46 = v105;
    char v47 = v94;
LABEL_7:
    UUID.init()();
    sub_10001457C(v36, &qword_100800950);
    (*(void (**)(unsigned char *, char *, uint64_t))(v12 + 32))(&v43[OBJC_IVAR____TtCC7Journal10Journaling5Asset_id], v47, v45);
    goto LABEL_9;
  }
  uint64_t v36 = (uint64_t)v96;
  id v37 = [v35 id];
  if (v37)
  {
    char v38 = v37;
    uint64_t v39 = v93;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v40 = v39;
    uint64_t v41 = 0;
    uint64_t v42 = v34;
    int v43 = v29;
    unsigned int v44 = v107;
  }
  else
  {
    uint64_t v41 = 1;
    uint64_t v42 = v34;
    int v43 = v27;
    unsigned int v44 = v107;
    uint64_t v40 = v93;
  }
  char v47 = v94;
  uint64_t v48 = (uint64_t)v40;
  uint64_t v45 = v106;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v44)(v40, v41, 1, v106);
  sub_10002C4EC(v48, v36, &qword_100800950);
  int v49 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v36, 1, v45);
  uint64_t v46 = v105;
  if (v49 == 1) {
    goto LABEL_7;
  }
  char v50 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 32);
  v50(v47, v36, v106);
  uint64_t v45 = v106;
  v50(&v43[OBJC_IVAR____TtCC7Journal10Journaling5Asset_id], (uint64_t)v47, v106);
LABEL_9:
  char v51 = *(void **)&v1[v46];
  if (v51)
  {
    id v52 = [v51 assetType];
    if (v52)
    {
      uint64_t v53 = v52;
      static String._unconditionallyBridgeFromObjectiveC(_:)();
    }
    uint64_t v54 = (uint64_t)v95;
    uint64_t v46 = v105;
  }
  else
  {
    uint64_t v54 = (uint64_t)v95;
  }
  char v55 = sub_100044D84();
  if (v55 == 21) {
    char v56 = 20;
  }
  else {
    char v56 = v55;
  }
  v43[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type] = v56;
  uint64_t v57 = *(void **)&v1[v46];
  if (v57)
  {
    id v58 = [v57 title];
    if (v58)
    {
      uint64_t v59 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v61 = v60;

      id v58 = sub_100041F24(v59, v61);
      unint64_t v62 = v61;
      uint64_t v45 = v106;
      sub_100040DD0(v59, v62);
    }
  }
  else
  {
    id v58 = 0;
  }
  uint64_t v63 = *(void **)&v1[v97];
  *(void *)&v1[v97] = v58;

  uint64_t v64 = *(void **)&v1[v46];
  if (v64)
  {
    id v65 = [v64 source];
    uint64_t v66 = (uint64_t)v104;
    if (v65)
    {
      id v67 = v65;
      uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v70 = v69;
    }
    else
    {
      uint64_t v68 = 0;
      uint64_t v70 = (void *)0xE000000000000000;
    }
  }
  else
  {
    uint64_t v68 = 0;
    uint64_t v70 = (void *)0xE000000000000000;
    uint64_t v66 = (uint64_t)v104;
  }
  v109._uint64_t countAndFlagsBits = v68;
  v109._object = v70;
  char v71 = sub_100044D38(v109);
  if (v71 == 10) {
    char v72 = 9;
  }
  else {
    char v72 = v71;
  }
  v43[OBJC_IVAR____TtCC7Journal10Journaling5Asset_source] = v72;
  id v73 = [v42 suggestionId];
  if (v73)
  {
    uint64_t v74 = v73;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v75 = 0;
  }
  else
  {
    uint64_t v75 = 1;
  }
  uint64_t v76 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v107)(v66, v75, 1, v45);
  uint64_t v77 = (uint64_t)v98;
  swift_beginAccess();
  sub_100041190(v66, v77, &qword_100800950);
  swift_endAccess();
  id v78 = [v42 suggestionDate];
  if (v78)
  {
    uint64_t v79 = v78;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v76 = 0;
  }
  v101(v54, v76, 1, v102);
  uint64_t v80 = v103;
  swift_beginAccess();
  sub_100041190(v54, v80, (uint64_t *)&unk_1007FC470);
  swift_endAccess();
  unsigned __int8 v81 = [v42 isHidden];
  v1[v99] = v81;

  id v82 = (objc_class *)_s5AssetCMa();
  v108.receiver = v43;
  v108.super_class = v82;
  id v83 = [super init];
  sub_10017F6A0();
  long long v84 = self;
  id v85 = [v84 defaultCenter];
  uint64_t v86 = qword_1007F6E78;
  id v87 = v83;
  if (v86 != -1) {
    swift_once();
  }
  [v85 addObserver:v87 selector:"assetUpdatedNotificationWithNotification:" name:qword_10083D400 object:0];

  id v88 = [v84 defaultCenter];
  uint64_t v89 = qword_1007F6E80;
  id v90 = v87;
  if (v89 != -1) {
    swift_once();
  }
  [v88 addObserver:v90 selector:"mediaFileUpdatedNotificationWithNotification:" name:qword_10083D408 object:0];

  return v90;
}

id sub_1001817C4(uint64_t a1, char a2, char a3)
{
  *(void *)&v3[OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments] = _swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments] = _swiftEmptyArrayStorage;
  *(void *)&v3[OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachmentIdsMissingFile] = &_swiftEmptySetSingleton;
  *(void *)&v3[OBJC_IVAR____TtCC7Journal10Journaling5Asset_context] = 0;
  *(void *)&v3[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO] = 0;
  *(void *)&v3[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title] = 0;
  uint64_t v7 = &v3[OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionId];
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  uint64_t v10 = &v3[OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionDate];
  uint64_t v11 = type metadata accessor for Date();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  uint64_t v12 = &v3[OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachmentsDirectoryPath];
  void *v12 = 0;
  v12[1] = 0;
  __n128 v13 = &v3[OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachmentsDirectoryURL];
  uint64_t v14 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = &v3[OBJC_IVAR____TtCC7Journal10Journaling5Asset_thumbnailCacheKey];
  *uint64_t v15 = 0;
  v15[1] = 0;
  v3[OBJC_IVAR____TtCC7Journal10Journaling5Asset_isHidden] = 0;
  uint64_t v16 = OBJC_IVAR____TtCC7Journal10Journaling5Asset_delegates;
  long long v17 = self;
  uint64_t v18 = v3;
  *(void *)&v3[v16] = [v17 weakObjectsHashTable];
  uint64_t v19 = &v18[OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate];
  *uint64_t v19 = 0;
  v19[1] = 0;
  long long v20 = &v18[OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdateMediaFile];
  *long long v20 = 0;
  v20[1] = 0;
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v9 + 16))(&v18[OBJC_IVAR____TtCC7Journal10Journaling5Asset_id], a1, v8);
  v18[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type] = a2;
  v18[OBJC_IVAR____TtCC7Journal10Journaling5Asset_source] = a3;

  v23.receiver = v18;
  v23.super_class = (Class)_s5AssetCMa();
  id v21 = [super init];
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v21;
}

id sub_100181A74()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtCC7Journal10Journaling5Asset_thumbnailCacheKey + 8];
  if (v1)
  {
    uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtCC7Journal10Journaling5Asset_thumbnailCacheKey];
    swift_bridgeObjectRetain();
    _s7Journal17OperationsManagerC28prioritizeThumbnailOperation17thumbnailCacheKey8priorityySS_So24NSOperationQueuePriorityVtFZ_0(v2, v1, 0);
    swift_bridgeObjectRelease();
  }
  sub_100568CE0(1);
  id v3 = [self defaultCenter];
  [v3 removeObserver:v0];

  v5.receiver = v0;
  v5.super_class = (Class)_s5AssetCMa();
  return [super dealloc];
}

uint64_t sub_100181CD4()
{
  return _s5AssetCMa();
}

uint64_t _s5AssetCMa()
{
  uint64_t result = qword_100800890;
  if (!qword_100800890) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100181D28(uint64_t a1)
{
  sub_10017F6A0();
  id v2 = [*(id *)(a1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_delegates) allObjects];
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      goto LABEL_18;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v6 = *(void *)(v3 + 8 * i + 32);
      swift_unknownObjectRetain();
    }
    swift_getObjectType();
    uint64_t v7 = swift_conformsToProtocol2();
    if (v7) {
      uint64_t v8 = v7;
    }
    else {
      uint64_t v8 = 0;
    }
    if (v7) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 0;
    }
    if (v9)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(ObjectType, v8);
    }
    swift_unknownObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void (**)(uint64_t))(a1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
  if (v11)
  {
    uint64_t v12 = swift_retain();
    v11(v12);
    sub_10001ABB8((uint64_t)v11);
  }
}

void sub_100181F04(uint64_t a1)
{
  sub_10017F6A0();
  id v2 = *(void (**)(uint64_t))(a1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdateMediaFile);
  if (v2)
  {
    uint64_t v3 = swift_retain();
    v2(v3);
    sub_10001ABB8((uint64_t)v2);
  }
}

uint64_t sub_100181F8C(void *a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v6 = type metadata accessor for Notification();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  id v10 = a1;
  a4(v9);

  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

id sub_10018207C(void *a1, char a2)
{
  uint64_t v3 = a2 & 1;
  id result = [a1 isBeingEdited];
  if (result != v3) {
    return [a1 setIsBeingEdited:v3];
  }
  return result;
}

uint64_t sub_1001820D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6, void *a7)
{
  uint64_t v19 = a2;
  long long v20 = a7;
  char v11 = a5 & 1;
  uint64_t v12 = sub_100010218(&qword_100800918);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __n128 v15 = __chkstk_darwin(v12);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v13 + 16))((char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12, v15);
  unint64_t v16 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v17 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v17 + v16, (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  sub_10017D574(a3, a4, v11, a6, v20, (uint64_t)sub_100183D1C, v17);
  return swift_release();
}

uint64_t sub_100182248(void *a1)
{
  id v1 = a1;
  sub_100010218(&qword_100800918);
  return CheckedContinuation.resume(returning:)();
}

void sub_100182290(uint64_t a1, void (*a2)(void), uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, char a8, uint64_t a9, uint64_t a10)
{
  uint64_t v65 = a7;
  unsigned int v64 = a6;
  uint64_t v15 = type metadata accessor for DispatchQoS();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = &v58[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  id v21 = &v58[-v20];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    a2();
    return;
  }
  objc_super v23 = (void *)Strong;
  uint64_t v66 = a3;
  id v67 = a2;
  if (qword_1007F6BA0 != -1) {
    swift_once();
  }
  id v24 = sub_10017F100(a4, a5);
  id v25 = [v24 imageByPreparingForDisplay];

  if (v25)
  {
    id v26 = v25;
    ((void (*)(id))v67)(v25);

    return;
  }
  int v27 = a8 & 1;
  uint64_t v63 = a10;
  char v28 = (char *)_s7Journal17OperationsManagerC19getRunningOperation17thumbnailCacheKey13dispatchQueueAA09ThumbnailhF0CSgSS_So03OS_J6_queueCtFZ_0(a4, a5);
  if (!v28)
  {
    _s7Journal17OperationsManagerC19getRunningOperation17thumbnailCacheKeyAA09ThumbnailhF0C_So17OS_dispatch_queueCtSgSS_tFZ_0(a4, a5);
    if (!v41)
    {
      sub_100182908(v23, v64, v65, a8 & 1, a4, a5, a9, (uint64_t)v67, v66);
      sub_100568CE0(0);

      return;
    }
    int v43 = v41;
    int v59 = v27;
    uint64_t v60 = a9;
    id v62 = v42;
    OS_dispatch_queue.qos.getter();
    uint64_t v61 = DispatchQoS.relativePriority.getter();
    unsigned int v44 = *(void (**)(unsigned char *, uint64_t))(v16 + 8);
    v44(v21, v15);
    OS_dispatch_queue.qos.getter();
    uint64_t v45 = DispatchQoS.relativePriority.getter();
    v44(v18, v15);
    uint64_t v46 = v67;
    if (v61 >= v45)
    {
      unint64_t v47 = *(void *)&v43[qword_100810B00];
      if (v47 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v48 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      unint64_t v49 = *(void *)((char *)v23 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments);
      if (v49 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v46 = v67;
        uint64_t v57 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v48 == v57) {
          goto LABEL_20;
        }
      }
      else if (v48 == *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_20:
        uint64_t v50 = swift_allocObject();
        uint64_t v51 = v66;
        *(void *)(v50 + 16) = v46;
        *(void *)(v50 + 24) = v51;
        uint64_t v52 = swift_allocObject();
        *(void *)(v52 + 16) = sub_10018443C;
        *(void *)(v52 + 24) = v50;
        __chkstk_darwin(v52);
        uint64_t v54 = (uint64_t)&v53[4];
        char v55 = v53 + 10;
        swift_retain();
        swift_retain();
        os_unfair_lock_lock(v55);
        sub_10018446C(v54);
        os_unfair_lock_unlock(v55);
        swift_release();

        goto LABEL_13;
      }
    }
    sub_100182908(v23, v64, v65, v59, a4, a5, v60, (uint64_t)v46, v66);

    return;
  }
  uint64_t v29 = v28;
  char v30 = v27;
  unint64_t v31 = *(void *)&v28[qword_100810B00];
  if (v31 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v32 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = *(void *)((v31 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  char v33 = v67;
  unint64_t v34 = *(void *)((char *)v23 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments);
  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    char v33 = v67;
    uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v32 == v56) {
      goto LABEL_12;
    }
  }
  else if (v32 == *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_12:
    uint64_t v35 = swift_allocObject();
    uint64_t v36 = v66;
    *(void *)(v35 + 16) = v33;
    *(void *)(v35 + 24) = v36;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_10018493C;
    *(void *)(v37 + 24) = v35;
    __chkstk_darwin(v37);
    uint64_t v39 = (uint64_t)&v38[4];
    uint64_t v40 = v38 + 10;
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v40);
    sub_100184978(v39);
    os_unfair_lock_unlock(v40);

    swift_release();
LABEL_13:
    swift_release();
    return;
  }
  sub_100182908(v23, v64, v65, v30, a4, a5, a9, (uint64_t)v33, v66);
}

void sub_100182908(void *a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  id v10 = (char *)(*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))((swift_isaMask & *a1)
                                                                                               + 0x2D8))(a2, a3, a4 & 1, a5, a6, a7);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a8;
  *(void *)(v11 + 24) = a9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_10018493C;
  *(void *)(v12 + 24) = v11;
  uint64_t v13 = *(os_unfair_lock_s **)&v10[qword_1008086E8];
  uint64_t v14 = (uint64_t)&v13[4];
  uint64_t v15 = v13 + 10;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v15);
  sub_100184978(v14);
  os_unfair_lock_unlock(v15);
  swift_release();
  swift_release();
  sub_10001B284(0, (unint64_t *)&unk_100800920);
  if (qword_1007F6A50 != -1) {
    swift_once();
  }
  if (static NSObject.== infix(_:_:)())
  {
    [v10 setQualityOfService:9];
  }
  else
  {
    if (qword_1007F6A58 != -1) {
      swift_once();
    }
    if (static NSObject.== infix(_:_:)())
    {
      uint64_t v16 = v10;
      uint64_t v17 = -1;
    }
    else
    {
      uint64_t v16 = v10;
      uint64_t v17 = 25;
    }
    [v16 setQualityOfService:v17];
  }
  _s7Journal17OperationsManagerC12addThumbnail9operation13dispatchQueueyAA0E14CacheOperationC_So03OS_G6_queueCtFZ_0((uint64_t)v10);
}

void sub_100182B74()
{
  type metadata accessor for UUID();
  if (v0 <= 0x3F)
  {
    sub_100182D60(319, (unint64_t *)&qword_1007FEA40, (void (*)(uint64_t))&type metadata accessor for UUID);
    if (v1 <= 0x3F)
    {
      sub_100182D60(319, (unint64_t *)&qword_1007FAAE0, (void (*)(uint64_t))&type metadata accessor for Date);
      if (v2 <= 0x3F)
      {
        sub_100182D60(319, (unint64_t *)&qword_1007F9270, (void (*)(uint64_t))&type metadata accessor for URL);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

void sub_100182D60(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = type metadata accessor for Optional();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_100182DB4(void *a1, void *a2)
{
  return static UUID.< infix(_:_:)(*a1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id, *a2 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id);
}

uint64_t sub_100182DDC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = a2 & 1;
  uint64_t v6 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v32[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __n128 v11 = __chkstk_darwin(v9);
  uint64_t v13 = &v32[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1005E7E80(a1, v5, v11);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10001457C((uint64_t)v8, (uint64_t *)&unk_100800A60);
  }
  else
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v13, v8, v9);
    URL._bridgeToObjectiveC()(v14);
    CFURLRef v16 = v15;
    uint64_t v17 = CGImageSourceCreateWithURL(v15, 0);

    if (v17)
    {
      CFDictionaryRef v18 = CGImageSourceCopyPropertiesAtIndex(v17, 0, 0);
      (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
      if (v18)
      {
        uint64_t v33 = 0;
        type metadata accessor for CFString(0);
        sub_10018461C((unint64_t *)&qword_1007F8AB8, type metadata accessor for CFString);
        static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();

        uint64_t result = v33;
        if (v33) {
          return result;
        }
      }
      else
      {
      }
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v10 + 8))(v13, v9);
    }
  }
  if (sub_100041A58(*(unsigned char *)(v3 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type)) == 0x6F746F6870
    && v20 == 0xE500000000000000)
  {
    uint64_t v23 = swift_bridgeObjectRelease();
  }
  else
  {
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t v23 = swift_bridgeObjectRelease();
    if ((v22 & 1) == 0) {
      return 0;
    }
  }
  if (*(void *)(v3 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_context))
  {
    __chkstk_darwin(v23);
    *(void *)&v32[-16] = v3;
    id v25 = v24;
    sub_100010218(&qword_1007FC120);
    NSManagedObjectContext.performAndWait<A>(_:)();

    unint64_t v26 = v34;
    if (v34 >> 60 != 15)
    {
      uint64_t v27 = v33;
      CFDataRef isa = Data._bridgeToObjectiveC()().super.isa;
      uint64_t v29 = CGImageSourceCreateWithData(isa, 0);

      if (v29)
      {
        CFDictionaryRef v30 = CGImageSourceCopyPropertiesAtIndex(v29, 0, 0);
        if (v30)
        {
          CFDictionaryRef v31 = v30;
          uint64_t v33 = 0;
          type metadata accessor for CFString(0);
          sub_10018461C((unint64_t *)&qword_1007F8AB8, type metadata accessor for CFString);
          static Dictionary._conditionallyBridgeFromObjectiveC(_:result:)();
          sub_100040DBC(v27, v26);

          return v33;
        }
        sub_100040DBC(v27, v26);
      }
      else
      {
        sub_100040DBC(v27, v26);
      }
    }
  }
  return 0;
}

void sub_100183214(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void **)(a1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (!v3) {
    goto LABEL_7;
  }
  id v4 = v3;
  id v5 = sub_1001836EC(0);
  uint64_t v6 = v5;
  if (!v5)
  {

LABEL_8:
    unint64_t v9 = 0xF000000000000000;
    goto LABEL_9;
  }
  id v7 = [v5 data];

  if (!v7)
  {

LABEL_7:
    uint64_t v6 = 0;
    goto LABEL_8;
  }
  uint64_t v6 = (void *)static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v9 = v8;

LABEL_9:
  *a2 = v6;
  a2[1] = v9;
}

void sub_1001832CC()
{
  uint64_t v1 = sub_100182DDC(0, 1);
  if (v1)
  {
    uint64_t v2 = v1;
    if (*(void *)(v1 + 16))
    {
      uint64_t v3 = (id)kCGImagePropertyPixelWidth;
      unint64_t v4 = sub_10001B934((uint64_t)v3);
      if ((v5 & 1) == 0)
      {
        long long v22 = 0u;
        long long v23 = 0u;

        goto LABEL_15;
      }
      sub_10001B648(*(void *)(v2 + 56) + 32 * v4, (uint64_t)&v22);

      if (!*((void *)&v23 + 1))
      {
LABEL_15:
        swift_bridgeObjectRelease();
        sub_10001457C((uint64_t)&v22, &qword_1007FAD50);
        return;
      }
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_23;
      }
      if (*(void *)(v2 + 16))
      {
        uint64_t v6 = (id)kCGImagePropertyPixelHeight;
        unint64_t v7 = sub_10001B934((uint64_t)v6);
        if (v8)
        {
          sub_10001B648(*(void *)(v2 + 56) + 32 * v7, (uint64_t)&v22);
        }
        else
        {
          long long v22 = 0u;
          long long v23 = 0u;
        }

        if (*((void *)&v23 + 1))
        {
          if (swift_dynamicCast())
          {
            if (*(void *)(v2 + 16))
            {
              CFURLRef v16 = (id)kCGImagePropertyOrientation;
              unint64_t v17 = sub_10001B934((uint64_t)v16);
              if (v18)
              {
                sub_10001B648(*(void *)(v2 + 56) + 32 * v17, (uint64_t)&v20);
              }
              else
              {
                long long v20 = 0u;
                long long v21 = 0u;
              }
            }
            else
            {
              long long v20 = 0u;
              long long v21 = 0u;
            }
            swift_bridgeObjectRelease();
            if (*((void *)&v21 + 1))
            {
              sub_10002102C(&v20, &v22);
              sub_10001B648((uint64_t)&v22, (uint64_t)&v20);
              sub_10001B284(0, (unint64_t *)&qword_1007FEB30);
              if (swift_dynamicCast())
              {
                if ([v19 integerValue] == (id)6)
                {
                  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v22);
                }
                else
                {
                  [v19 integerValue];

                  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v22);
                }
              }
              else
              {
                _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v22);
              }
            }
            else
            {
              sub_10001457C((uint64_t)&v20, &qword_1007FAD50);
            }
            return;
          }
LABEL_23:
          swift_bridgeObjectRelease();
          return;
        }
        goto LABEL_15;
      }
    }
    long long v22 = 0u;
    long long v23 = 0u;
    goto LABEL_15;
  }
  if (qword_1007F6A48 != -1) {
    swift_once();
  }
  uint64_t v9 = type metadata accessor for Logger();
  sub_100026A54(v9, (uint64_t)qword_100800820);
  id v10 = v0;
  __n128 v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v14 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 138412290;
    *(void *)&long long v22 = v10;
    id v15 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v14 = v10;

    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%@ Failed to get image resolution", v13, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

id sub_1001836EC(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = __chkstk_darwin(v3).n128_u64[0];
  unint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [v1 dataAttachments];
  if (!v8)
  {
    sub_10001B284(0, (unint64_t *)&qword_100800958);
    id v8 = (id)NSSet.init(arrayLiteral:)();
  }
  NSSet.makeIterator()();

  NSFastEnumerationIterator.next()();
  while (v15)
  {
    sub_10002102C(&v14, &v13);
    type metadata accessor for JournalEntryAssetAttachmentMO();
    if (swift_dynamicCast())
    {
      id v9 = v12;
      if ((int)[v12 index] == a1) {
        goto LABEL_11;
      }
    }
    NSFastEnumerationIterator.next()();
  }
  id v9 = 0;
LABEL_11:
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  return v9;
}

void sub_1001838A8(uint64_t a1, unint64_t a2, uint64_t a3)
{
  id v7 = [v3 managedObjectContext];
  if (!v7)
  {
    if (qword_1007F6A48 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100026A54(v10, (uint64_t)qword_100800820);
    id v20 = v3;
    uint64_t v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v11, v12))
    {
      long long v13 = (uint8_t *)swift_slowAlloc();
      long long v14 = (void *)swift_slowAlloc();
      *(_DWORD *)long long v13 = 138412290;
      id v15 = v20;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *long long v14 = v20;

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Context is nil when calling setAttachmentData() in %@", v13, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }

    goto LABEL_17;
  }
  id v19 = v7;
  if (a2 >> 60 != 15)
  {
    sub_100040D64(a1, a2);
    id v16 = sub_1001836EC(a3);
    if (!v16)
    {
      type metadata accessor for JournalEntryAssetAttachmentMO();
      Class v9 = (Class)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:v19];
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      [(objc_class *)v9 setData:isa];

      if (a3 < -32768)
      {
        __break(1u);
      }
      else if (a3 < 0x8000)
      {
        [(objc_class *)v9 setIndex:(__int16)a3];
        [v3 addDataAttachmentsObject:v9];
        sub_100040DBC(a1, a2);
        goto LABEL_15;
      }
      __break(1u);
      return;
    }
    unint64_t v17 = v16;
    Class v9 = Data._bridgeToObjectiveC()().super.isa;
    [v17 setData:v9];
    sub_100040DBC(a1, a2);

LABEL_15:
    goto LABEL_16;
  }
  id v8 = (objc_class *)sub_1001836EC(a3);
  if (v8)
  {
    Class v9 = v8;
    [(objc_class *)v8 setData:0];
    goto LABEL_15;
  }
LABEL_16:
  [v3 setIsUploadedToCloud:0 v19];
LABEL_17:
}

uint64_t sub_100183C40()
{
  return sub_10018461C(&qword_100800910, (void (*)(uint64_t))_s5AssetCMa);
}

uint64_t sub_100183C88()
{
  uint64_t v1 = sub_100010218(&qword_100800918);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_100183D1C(void *a1)
{
  sub_100010218(&qword_100800918);

  return sub_100182248(a1);
}

uint64_t sub_100183D90()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100183DC8()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_100183E20()
{
  sub_100182290(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void *)(v0 + 64), *(unsigned char *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88));
}

uint64_t sub_100183E60(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100183E70()
{
  return swift_release();
}

uint64_t sub_100183E78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100183FE0(a1, a2, a3, (uint64_t)&unk_10079B9C8, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_1002A698C, (uint64_t)sub_1001844B8);
}

uint64_t sub_100183EC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100183FE0(a1, a2, a3, (uint64_t)&unk_10079B9A0, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_1002A7148, (uint64_t)sub_100184590);
}

uint64_t sub_100183F08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100183FE0(a1, a2, a3, (uint64_t)&unk_10079B978, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_1002A715C, (uint64_t)sub_100184568);
}

uint64_t sub_100183F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100183FE0(a1, a2, a3, (uint64_t)&unk_10079B928, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_1002A7390, (uint64_t)sub_1001844B8);
}

uint64_t sub_100183F98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100183FE0(a1, a2, a3, (uint64_t)&unk_10079B950, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_1002A74C8, (uint64_t)sub_100184524);
}

uint64_t sub_100183FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(BOOL, uint64_t, uint64_t, uint64_t), uint64_t a6)
{
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a2;
  *(void *)(v11 + 24) = a3;
  uint64_t v12 = *(void *)(a1 + 8);
  swift_retain();
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
    uint64_t result = a5(0, *(void *)(v12 + 16) + 1, 1, v12);
    uint64_t v12 = result;
  }
  unint64_t v15 = *(void *)(v12 + 16);
  unint64_t v14 = *(void *)(v12 + 24);
  if (v15 >= v14 >> 1)
  {
    uint64_t result = a5(v14 > 1, v15 + 1, 1, v12);
    uint64_t v12 = result;
  }
  *(void *)(v12 + 16) = v15 + 1;
  unint64_t v16 = v12 + 16 * v15;
  *(void *)(v16 + 32) = a6;
  *(void *)(v16 + 40) = v11;
  *(void *)(a1 + 8) = v12;
  return result;
}

void sub_1001840C8(void *a1, char a2, void (*a3)(id *))
{
  uint64_t v4 = a1;
  if (a2)
  {
    id v6 = a1;
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    swift_willThrowTypedImpl();
    uint64_t v4 = 0;
  }
  else
  {
    id v5 = a1;
  }
  id v6 = v4;
  a3(&v6);
}

uint64_t sub_10018414C(uint64_t a1, char a2, void (*a3)(uint64_t *))
{
  if (a2)
  {
    uint64_t v6 = a1;
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    swift_willThrowTypedImpl();
    uint64_t v4 = 0;
  }
  else
  {
    uint64_t v4 = swift_bridgeObjectRetain();
  }
  uint64_t v6 = v4;
  a3(&v6);
  return swift_bridgeObjectRelease();
}

void sub_1001841C4(uint64_t a1, unint64_t a2, void *a3, char a4, void (*a5)(uint64_t *))
{
  if (a4)
  {
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    swift_willThrowTypedImpl();
    unint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v8 = a1;
    unint64_t v9 = a2;
    uint64_t v10 = a3;
    sub_100040D64(a1, a2);
    id v7 = a3;
  }
  a5(&v8);
  sub_1001845DC(v8, v9, v10);
}

uint64_t sub_100184258(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4 = sub_100010218(&qword_100800970);
  __chkstk_darwin(v4);
  uint64_t v6 = (void *)((char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100010218(&qword_100800978);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B220(a1, (uint64_t)v6, &qword_100800970);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v13[1] = *v6;
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    swift_willThrowTypedImpl();
    swift_errorRelease();
    uint64_t v10 = sub_100010218((uint64_t *)&unk_100800980);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  }
  else
  {
    sub_10002C4EC((uint64_t)v6, (uint64_t)v9, (uint64_t *)&unk_100800980);
    uint64_t v11 = sub_100010218((uint64_t *)&unk_100800980);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 0, 1, v11);
  }
  a2(v9);
  return sub_10001457C((uint64_t)v9, &qword_100800978);
}

uint64_t sub_10018443C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

uint64_t sub_10018446C(uint64_t a1)
{
  return sub_100183FE0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), (uint64_t)&unk_10079B8B0, (uint64_t (*)(BOOL, uint64_t, uint64_t, uint64_t))sub_1002A6610, (uint64_t)sub_1001844B8);
}

void sub_1001844BC(uint64_t a1)
{
  sub_1001840C8(*(void **)a1, *(unsigned char *)(a1 + 8), *(void (**)(id *))(v1 + 16));
}

void sub_1001844D0(void *a1@<X8>)
{
  sub_100183214(*(void *)(v1 + 16), a1);
}

uint64_t sub_1001844EC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100184524(long long *a1)
{
  uint64_t v2 = *(uint64_t (**)(long long *))(v1 + 16);
  char v3 = *((unsigned char *)a1 + 16);
  long long v5 = *a1;
  char v6 = v3;
  return v2(&v5);
}

uint64_t sub_100184568()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_100184590(long long *a1)
{
  uint64_t v2 = *(uint64_t (**)(long long *))(v1 + 16);
  uint64_t v3 = *((void *)a1 + 2);
  char v4 = *((unsigned char *)a1 + 24);
  long long v6 = *a1;
  uint64_t v7 = v3;
  char v8 = v4;
  return v2(&v6);
}

void sub_1001845DC(uint64_t a1, unint64_t a2, void *a3)
{
  if (a3)
  {
    sub_100040DD0(a1, a2);
  }
}

uint64_t sub_10018461C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100184664(uint64_t *a1)
{
  uint64_t v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  char v3 = *((unsigned char *)a1 + 8);
  uint64_t v5 = *a1;
  char v6 = v3;
  return v2(&v5);
}

uint64_t sub_1001846A8()
{
  return swift_deallocObject();
}

void sub_1001846E0()
{
  sub_100181F04(*(void *)(v0 + 16));
}

void sub_1001846E8()
{
  sub_100181D28(*(void *)(v0 + 16));
}

uint64_t sub_1001846F0()
{
  return swift_deallocObject();
}

id sub_100184728@<X0>(BOOL *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)(v1 + 16) + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v3) {
    id result = [*(id *)(*(void *)(v1 + 16) + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO) setIsSlim:*(unsigned __int8 *)(v1 + 24)];
  }
  *a1 = v3 == 0;
  return result;
}

uint64_t sub_10018478C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v3 = *(void **)(*(void *)(v1 + 16) + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v3) {
    uint64_t result = (uint64_t)[v3 isSlim];
  }
  else {
    uint64_t result = 2;
  }
  *a1 = result;
  return result;
}

unsigned char *_s10AssetErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001848ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10AssetErrorOMa()
{
  return &_s10AssetErrorON;
}

unint64_t sub_1001848E8()
{
  unint64_t result = qword_1008009A0;
  if (!qword_1008009A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008009A0);
  }
  return result;
}

uint64_t sub_100184978(uint64_t a1)
{
  return sub_10018446C(a1);
}

void sub_100184A9C()
{
  id v1 = [objc_allocWithZone((Class)UIView) init];
  [v0 addSubview:v1];
  if (qword_1007F7300 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_10083D910;
  id v3 = [v1 superview];
  if (v3)
  {
    unsigned int v4 = v3;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = [v1 leadingAnchor];
    id v6 = [v4 leadingAnchor];
    id v7 = [v5 constraintEqualToAnchor:v6];

    [v7 setConstant:v2];
    if (v7)
    {
      id v8 = v7;
      [v8 setActive:1];
    }
  }
  double v9 = *(double *)&qword_10083D910;
  id v10 = [v1 superview];
  if (v10)
  {
    uint64_t v11 = v10;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v12 = [v1 trailingAnchor];
    id v13 = [v11 trailingAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13];

    [v14 setConstant:-v9];
    if (v14)
    {
      id v15 = v14;
      [v15 setActive:1];
    }
  }
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v16 = [v1 heightAnchor];
  id v17 = [v1 widthAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17 multiplier:1.0];

  [v18 setActive:1];
  id v19 = [v1 superview];
  if (v19)
  {
    id v20 = v19;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v21 = [v1 centerYAnchor];
    id v22 = [v20 centerYAnchor];
    id v23 = [v21 constraintEqualToAnchor:v22];

    [v23 setConstant:0.0];
    id v24 = v23;
    [v24 setActive:1];
  }
  id v25 = [v1 layer];
  if (qword_1007F7CA0 != -1) {
    swift_once();
  }
  v50[0] = xmmword_10083E9C0;
  v50[1] = *(_OWORD *)&qword_10083E9D0;
  v50[2] = xmmword_10083E9E0;
  v50[3] = *(_OWORD *)&qword_10083E9F0;
  [v25 setCornerRadii:v50];

  if (qword_1007F6B28 != -1) {
    swift_once();
  }
  [v1 setBackgroundColor:qword_10083D0E8];
  type metadata accessor for UnknownAssetView();
  unint64_t v26 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v27 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
  uint64_t v28 = v26[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
  v26[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType] = 0;
  uint64_t v29 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
  if (v26[OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated] == 1)
  {
    switch(v28)
    {
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
        char v30 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v30 & 1) == 0) {
          goto LABEL_21;
        }
        break;
      default:
        swift_bridgeObjectRelease();
        break;
    }
  }
  else
  {
LABEL_21:
    CFDictionaryRef v31 = *(void **)&v26[OBJC_IVAR____TtC7Journal16UnknownAssetView_symbolAndTextFallbackView];
    if (v31)
    {
      unint64_t v32 = v26[v27];
      id v33 = v31;
      sub_1001111C8((void *)v32);
    }
    v26[v29] = 1;
  }
  unint64_t v34 = *(void **)&v26[OBJC_IVAR____TtC7Journal16UnknownAssetView_symbolAndTextFallbackView];
  if (v34)
  {
    uint64_t v35 = self;
    id v36 = v34;
    id v37 = [v35 clearColor];
    [v36 setBackgroundColor:v37];
  }
  [v1 addSubview:v26];
  id v38 = [v26 superview];
  if (v38)
  {
    uint64_t v39 = v38;
    [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v40 = [v26 centerXAnchor];
    id v41 = [v39 centerXAnchor];
    id v42 = [v40 constraintEqualToAnchor:v41];

    [v42 setConstant:0.0];
    id v43 = v42;
    [v43 setActive:1];
  }
  id v44 = [v26 superview];
  if (v44)
  {
    uint64_t v45 = v44;
    [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v46 = [v26 centerYAnchor];
    id v47 = [v45 centerYAnchor];
    id v48 = [v46 constraintEqualToAnchor:v47];

    [v48 setConstant:0.0];
    id v49 = v48;
    [v49 setActive:1];

    id v1 = v49;
    unint64_t v26 = v45;
  }
}

id sub_100185234()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullScreenUnknownAssetView();
  return [super dealloc];
}

uint64_t type metadata accessor for FullScreenUnknownAssetView()
{
  return self;
}

uint64_t sub_10018528C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(a1 - 8);
  __chkstk_darwin(a1);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218((uint64_t *)&unk_100800A60);
  __n128 v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 16))(a1, a2, v9);
  uint64_t v12 = type metadata accessor for URL();
  int v13 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v12 - 8) + 48))(v11, 1, v12);
  sub_100052EAC((uint64_t)v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  if (v13 == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a1);
    return 0;
  }
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, a1);
  if (v14)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return 1;
}

BOOL sub_100185480(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100800A60);
  __n128 v5 = __chkstk_darwin(v4 - 8);
  id v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, __n128))(a2 + 16))(a1, a2, v5);
  uint64_t v8 = type metadata accessor for URL();
  BOOL v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) != 1;
  sub_100052EAC((uint64_t)v7);
  return v9;
}

id sub_100185568()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal14OrphanAssetsVC____lazy_storage___fetchedResultsController;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14OrphanAssetsVC____lazy_storage___fetchedResultsController);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Journal14OrphanAssetsVC____lazy_storage___fetchedResultsController);
  }
  else
  {
    id v4 = sub_1001855CC(v0);
    __n128 v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1001855CC(uint64_t a1)
{
  id v2 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 initWithEntityName:v3];

  id v5 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 initWithKey:v6 ascending:1];

  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1006D6D00;
  *(void *)(v8 + 32) = v7;
  specialized Array._endMutation()();
  sub_10001B284(0, (unint64_t *)&qword_10080F990);
  id v9 = v7;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v4 setSortDescriptors:isa];

  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  NSPredicate.init(format:_:)();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  id v11 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v11 initWithEntityName:v12];

  Class v14 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [self andPredicateWithSubpredicates:v14];

  [v4 setPredicate:v15];
  id v16 = [objc_allocWithZone((Class)NSFetchedResultsController) initWithFetchRequest:v4 managedObjectContext:*(void *)(a1 + OBJC_IVAR____TtC7Journal14OrphanAssetsVC_context) sectionNameKeyPath:0 cacheName:0];

  return v16;
}

void sub_1001858D8()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for OrphanAssetsVC();
  [super viewDidLoad];
  id v1 = sub_100185568();
  [v1 setDelegate:v0];

  if (![v0 tableView]) {
    __break(1u);
  }
  *(void *)(swift_allocObject() + 16) = v0;
  objc_allocWithZone((Class)sub_100010218(&qword_100800A58));
  id v2 = v0;
  uint64_t v3 = UITableViewDiffableDataSource.init(tableView:cellProvider:)();
  id v4 = *(void **)&v2[OBJC_IVAR____TtC7Journal14OrphanAssetsVC_dataSource];
  *(void *)&v2[OBJC_IVAR____TtC7Journal14OrphanAssetsVC_dataSource] = v3;

  id v5 = sub_100185568();
  id v9 = 0;
  unsigned int v6 = [v5 performFetch:&v9];

  if (v6)
  {
    id v7 = v9;
  }
  else
  {
    id v8 = v9;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
  }
  sub_100186BD0();
}

id sub_100185A68(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v6 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v141 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v144 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v144 - 8);
  __chkstk_darwin(v144);
  id v11 = (char *)&v141 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for UUID();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = (char *)&v141 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v16 - 8);
  uint64_t v149 = (char *)&v141 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v19 = __chkstk_darwin(v18).n128_u64[0];
  unint64_t v151 = (unint64_t)&v141 - v20;
  id v21 = [*(id *)(a4 + OBJC_IVAR____TtC7Journal14OrphanAssetsVC_context) objectWithID:*a3 v19];
  type metadata accessor for JournalEntryAssetMO();
  uint64_t v22 = swift_dynamicCastClass();
  if (!v22)
  {

    return [objc_allocWithZone((Class)UITableViewCell) init];
  }
  id v23 = (void *)v22;
  char v142 = v15;
  uint64_t v147 = v9;
  uint64_t v148 = v8;
  uint64_t v143 = v11;
  id v24 = [objc_allocWithZone((Class)UITableViewCell) initWithStyle:3 reuseIdentifier:0];
  objc_allocWithZone((Class)_s5AssetCMa());
  id v146 = v21;
  id v25 = sub_100180EC8(v23);
  id v26 = [v24 textLabel];
  if (v26)
  {
    uint64_t v27 = v26;
    sub_100041A58(v25[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type]);
    NSString v28 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v27 setText:v28];
  }
  uint64_t v150 = v25;
  id v29 = [v24 textLabel];
  if (v29)
  {
    char v30 = v29;
    id v31 = [self systemFontOfSize:16.0 weight:UIFontWeightBold];
    [v30 setFont:v31];
  }
  id v32 = [v24 detailTextLabel];
  uint64_t v33 = v147;
  uint64_t v34 = (uint64_t)v148;
  if (v32)
  {
    uint64_t v35 = v32;
    [v32 setNumberOfLines:0];
  }
  id v36 = [v24 textLabel];
  if (v36)
  {
    id v37 = v36;
    [v36 setNumberOfLines:0];
  }
  unint64_t v38 = 0xD000000000000012;
  uint64_t v39 = *(void **)((char *)v150 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v39)
  {
    id v40 = v24;
    *(void *)&long long v156 = 0;
    *((void *)&v156 + 1) = 0xE000000000000000;
    id v41 = v39;
    _StringGuts.grow(_:)(21);
    swift_bridgeObjectRelease();
    *(void *)&long long v156 = 0xD000000000000013;
    *((void *)&v156 + 1) = 0x800000010068D4A0;
    unsigned int v42 = [v41 isUploadedToCloud];
    BOOL v43 = v42 == 0;
    if (v42) {
      uint64_t v44 = 5457241;
    }
    else {
      uint64_t v44 = 20302;
    }
    uint64_t v45 = (void *)0xE300000000000000;
    if (v43) {
      unint64_t v46 = 0xE200000000000000;
    }
    else {
      unint64_t v46 = 0xE300000000000000;
    }
    unint64_t v47 = v46;
    String.append(_:)(*(Swift::String *)&v44);
    swift_bridgeObjectRelease();
    v152._uint64_t countAndFlagsBits = 0x203A7972746E450ALL;
    v152._unint64_t object = (void *)0xE800000000000000;
    id v48 = [v41 entry];
    if (v48)
    {
      id v49 = v48;
      id v50 = [v48 CKDescription];

      uint64_t v51 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v45 = v52;
    }
    else
    {
      uint64_t v51 = 7104878;
    }
    v54._uint64_t countAndFlagsBits = v51;
    v54._unint64_t object = v45;
    String.append(_:)(v54);
    swift_bridgeObjectRelease();
    String.append(_:)(v152);
    swift_bridgeObjectRelease();
    v152._uint64_t countAndFlagsBits = 0x49746E657261500ALL;
    v152._unint64_t object = (void *)0xEB00000000203A64;
    id v55 = [v41 parentID];
    if (v55)
    {
      uint64_t v56 = v55;
      uint64_t v57 = (uint64_t)v149;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v57, 0, 1, v12);
    }
    else
    {
      uint64_t v57 = (uint64_t)v149;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v149, 1, 1, v12);
    }
    id v24 = v40;
    uint64_t v58 = v151;
    sub_10018750C(v57, v151);
    unint64_t v38 = 0xD000000000000012;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v58, 1, v12))
    {
      sub_10001457C(v58, &qword_100800950);
      int v59 = (void *)0xE300000000000000;
      uint64_t v60 = 7104878;
    }
    else
    {
      uint64_t v61 = v142;
      (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v142, v58, v12);
      sub_10001457C(v58, &qword_100800950);
      uint64_t v60 = UUID.uuidString.getter();
      uint64_t v62 = v13;
      int v59 = v63;
      (*(void (**)(char *, uint64_t))(v62 + 8))(v61, v12);
    }
    v64._uint64_t countAndFlagsBits = v60;
    v64._unint64_t object = v59;
    String.append(_:)(v64);
    swift_bridgeObjectRelease();
    String.append(_:)(v152);
    swift_bridgeObjectRelease();
    v152._uint64_t countAndFlagsBits = 0;
    v152._unint64_t object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(19);
    swift_bridgeObjectRelease();
    v152._uint64_t countAndFlagsBits = 0x7461646174654D0ALL;
    v152._unint64_t object = (void *)0xEB00000000203A61;
    id v65 = [v41 assetMetaData];
    if (v65)
    {
      uint64_t v66 = v65;
      uint64_t v67 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v69 = v68;

      switch(v69 >> 62)
      {
        case 1uLL:
          sub_100040DD0(v67, v69);
          if (__OFSUB__(HIDWORD(v67), v67))
          {
            __break(1u);
LABEL_99:
            __break(1u);
            JUMPOUT(0x100186B68);
          }
          return result;
        case 2uLL:
          uint64_t v73 = *(void *)(v67 + 16);
          uint64_t v72 = *(void *)(v67 + 24);
          sub_100040DD0(v67, v69);
          if (__OFSUB__(v72, v73))
          {
            __break(1u);
            goto LABEL_36;
          }
          break;
        default:
LABEL_36:
          sub_100040DD0(v67, v69);
          break;
      }
      uint64_t v71 = sub_1005879C4();
      unint64_t v70 = v74;
    }
    else
    {
      unint64_t v70 = 0xE100000000000000;
      uint64_t v71 = 48;
    }
    unint64_t v75 = v70;
    String.append(_:)(*(Swift::String *)&v71);
    swift_bridgeObjectRelease();
    v76._uint64_t countAndFlagsBits = 0x736574796220;
    v76._unint64_t object = (void *)0xE600000000000000;
    String.append(_:)(v76);
    String.append(_:)(v152);
    swift_bridgeObjectRelease();
    v152._uint64_t countAndFlagsBits = 0;
    v152._unint64_t object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(26);
    swift_bridgeObjectRelease();
    v152._uint64_t countAndFlagsBits = 0xD000000000000012;
    v152._unint64_t object = (void *)0x800000010068D4C0;
    id v77 = sub_1001836EC(0);
    if (v77 && (v78 = v77, id v79 = [v77 data], v78, v79))
    {
      uint64_t v80 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v82 = v81;

      switch(v82 >> 62)
      {
        case 1uLL:
          sub_100040DD0(v80, v82);
          if (!__OFSUB__(HIDWORD(v80), v80)) {
            goto LABEL_48;
          }
          goto LABEL_99;
        case 2uLL:
          uint64_t v86 = *(void *)(v80 + 16);
          uint64_t v85 = *(void *)(v80 + 24);
          sub_100040DD0(v80, v82);
          if (!__OFSUB__(v85, v86)) {
            goto LABEL_48;
          }
          __break(1u);
LABEL_47:
          sub_100040DD0(v80, v82);
LABEL_48:
          uint64_t v84 = sub_1005879C4();
          unint64_t v83 = v87;
          break;
        default:
          goto LABEL_47;
      }
    }
    else
    {
      unint64_t v83 = 0xE100000000000000;
      uint64_t v84 = 48;
    }
    unint64_t v88 = v83;
    String.append(_:)(*(Swift::String *)&v84);
    swift_bridgeObjectRelease();
    v89._uint64_t countAndFlagsBits = 0x736574796220;
    v89._unint64_t object = (void *)0xE600000000000000;
    String.append(_:)(v89);
    String.append(_:)(v152);
    swift_bridgeObjectRelease();
    id v90 = [v41 fileAttachment];
    if (v90)
    {
      uint64_t v91 = v90;
      static String._unconditionallyBridgeFromObjectiveC(_:)();

      type metadata accessor for Journaling();
      sub_1005E6B0C(v34);
      swift_bridgeObjectRelease();
      uint64_t v92 = v144;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48))(v34, 1, v144) == 1)
      {
        sub_10001457C(v34, (uint64_t *)&unk_100800A60);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v33 + 32))(v143, v34, v92);
        v152._uint64_t countAndFlagsBits = 0;
        v152._unint64_t object = (void *)0xE000000000000000;
        _StringGuts.grow(_:)(33);
        swift_bridgeObjectRelease();
        v152._uint64_t countAndFlagsBits = 0xD000000000000019;
        v152._unint64_t object = (void *)0x800000010068D4E0;
        sub_100464660();
        if (v93)
        {
          unint64_t v96 = 0xE100000000000000;
          uint64_t v94 = 48;
        }
        else
        {
          uint64_t v94 = sub_1005879C4();
          unint64_t v96 = v95;
        }
        unint64_t v97 = v96;
        String.append(_:)(*(Swift::String *)&v94);
        swift_bridgeObjectRelease();
        v98._uint64_t countAndFlagsBits = 0x736574796220;
        v98._unint64_t object = (void *)0xE600000000000000;
        String.append(_:)(v98);
        String.append(_:)(v152);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v33 + 8))(v143, v92);
      }
    }
    long long v99 = v156;
    uint64_t v53 = sub_1002A54A0(0, 1, 1, (char *)_swiftEmptyArrayStorage);
    unint64_t v101 = *((void *)v53 + 2);
    unint64_t v100 = *((void *)v53 + 3);
    if (v101 >= v100 >> 1) {
      uint64_t v53 = sub_1002A54A0((char *)(v100 > 1), v101 + 1, 1, v53);
    }
    *((void *)v53 + 2) = v101 + 1;
    *(_OWORD *)&v53[16 * v101 + 32] = v99;
  }
  else
  {
    uint64_t v53 = (char *)_swiftEmptyArrayStorage;
  }
  *(void *)&long long v156 = 0;
  *((void *)&v156 + 1) = 0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  *(void *)&long long v156 = 0xD000000000000012;
  *((void *)&v156 + 1) = 0x800000010068D480;
  uint64_t v102 = (char *)OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments;
  unint64_t v103 = *(void *)((char *)v150 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments);
  if (v103 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v104 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v104 = *(void *)((v103 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  v152._uint64_t countAndFlagsBits = v104;
  v105._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v105);
  swift_bridgeObjectRelease();
  v106._uint64_t countAndFlagsBits = 14889;
  v106._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v106);
  uint64_t v107 = *((void *)&v156 + 1);
  unint64_t v108 = v156;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v53 = sub_1002A54A0(0, *((void *)v53 + 2) + 1, 1, v53);
  }
  unint64_t v110 = *((void *)v53 + 2);
  unint64_t v109 = *((void *)v53 + 3);
  if (v110 >= v109 >> 1) {
    uint64_t v53 = sub_1002A54A0((char *)(v109 > 1), v110 + 1, 1, v53);
  }
  *((void *)v53 + 2) = v110 + 1;
  uint64_t v111 = &v53[16 * v110];
  *((void *)v111 + 4) = v108;
  *((void *)v111 + 5) = v107;
  swift_bridgeObjectRelease();
  unint64_t object = *(void *)&v102[(void)v150];
  id v145 = v24;
  if (object >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t countAndFlagsBits = _CocoaArrayWrapper.endIndex.getter();
    if (!countAndFlagsBits) {
      goto LABEL_78;
    }
  }
  else
  {
    uint64_t countAndFlagsBits = *(void *)((object & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!countAndFlagsBits) {
      goto LABEL_78;
    }
  }
  if (countAndFlagsBits < 1)
  {
    __break(1u);
    goto LABEL_97;
  }
  uint64_t v114 = 0;
  unint64_t v151 = object & 0xC000000000000001;
  do
  {
    if (v151) {
      specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      swift_retain();
    }
    unint64_t v115 = sub_1005DA880();
    uint64_t v117 = v116;
    uint64_t v118 = v53;
    unint64_t v119 = *((void *)v53 + 2);
    unint64_t v120 = *((void *)v53 + 3);
    swift_bridgeObjectRetain();
    if (v119 >= v120 >> 1) {
      uint64_t v118 = sub_1002A54A0((char *)(v120 > 1), v119 + 1, 1, v118);
    }
    ++v114;
    *((void *)v118 + 2) = v119 + 1;
    uint64_t v53 = v118;
    uint64_t v121 = &v118[16 * v119];
    *((void *)v121 + 4) = v115;
    *((void *)v121 + 5) = v117;
    swift_release();
    swift_bridgeObjectRelease();
  }
  while (countAndFlagsBits != v114);
LABEL_78:
  swift_bridgeObjectRelease();
  id v122 = v150;
  swift_getObjectType();
  uint64_t v123 = swift_conformsToProtocol2();
  if (v123) {
    uint64_t v124 = v123;
  }
  else {
    uint64_t v124 = 0;
  }
  if (v123) {
    id v125 = v122;
  }
  else {
    id v125 = 0;
  }
  if (!v125) {
    goto LABEL_91;
  }
  uint64_t ObjectType = swift_getObjectType();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v128 = type metadata accessor for Optional();
  uint64_t v129 = *(void *)(v128 - 8);
  __chkstk_darwin(v128);
  uint64_t v131 = (char *)&v141 - v130;
  uint64_t v102 = (char *)v122;
  sub_10058D2BC(ObjectType, v124, (uint64_t)v131);
  uint64_t v132 = *(void *)(AssociatedTypeWitness - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v132 + 48))(v131, 1, AssociatedTypeWitness) != 1)
  {
    uint64_t v153 = AssociatedTypeWitness;
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    uint64_t v155 = swift_getAssociatedConformanceWitness();
    uint64_t v133 = sub_100062E54(&v152._countAndFlagsBits);
    (*(void (**)(uint64_t *, char *, uint64_t))(v132 + 32))(v133, v131, AssociatedTypeWitness);
    sub_1001874F4((long long *)&v152._countAndFlagsBits, &v156);
    sub_10002E0BC(&v156, v157);
    uint64_t v134 = sub_100369B80();
    if (!v135)
    {

      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v156);
      goto LABEL_91;
    }
    v152._uint64_t countAndFlagsBits = 0x617461646174654DLL;
    v152._unint64_t object = (void *)0xEA00000000000A3ALL;
    String.append(_:)(*(Swift::String *)&v134);
    swift_bridgeObjectRelease();
    unint64_t object = (unint64_t)v152._object;
    uint64_t countAndFlagsBits = v152._countAndFlagsBits;
    unint64_t v108 = *((void *)v53 + 2);
    unint64_t v38 = *((void *)v53 + 3);
    unint64_t v110 = v108 + 1;
    swift_bridgeObjectRetain();
    id v24 = v145;
    if (v108 < v38 >> 1)
    {
LABEL_89:
      *((void *)v53 + 2) = v110;
      uint64_t v136 = &v53[16 * v108];
      *((void *)v136 + 4) = countAndFlagsBits;
      *((void *)v136 + 5) = object;
      swift_bridgeObjectRelease();

      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v156);
      goto LABEL_92;
    }
LABEL_97:
    uint64_t v53 = sub_1002A54A0((char *)(v38 > 1), v110, 1, v53);
    goto LABEL_89;
  }
  (*(void (**)(char *, uint64_t))(v129 + 8))(v131, v128);

LABEL_91:
  id v24 = v145;
LABEL_92:
  id v137 = [v24 detailTextLabel];
  if (v137)
  {
    uint64_t v138 = v137;
    *(void *)&long long v156 = v53;
    sub_100010218(&qword_100800A70);
    sub_1000245BC();
    BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
    NSString v139 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v138 setText:v139];
  }
  else
  {

    swift_bridgeObjectRelease();
  }
  return v24;
}

void sub_100186BD0()
{
  id v1 = [v0 navigationItem];
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  id v2 = sub_100185568();
  id v3 = [v2 fetchedObjects];

  if (v3)
  {
    type metadata accessor for JournalEntryAssetMO();
    unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v4 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }
  v5._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  v6._uint64_t countAndFlagsBits = 41;
  v6._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setTitle:v7];
}

id sub_100186EDC(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal14OrphanAssetsVC_dataSource] = 0;
  uint64_t v3 = OBJC_IVAR____TtC7Journal14OrphanAssetsVC_context;
  uint64_t v4 = qword_1007F6D38;
  Swift::String v5 = v1;
  if (v4 != -1) {
    swift_once();
  }
  Swift::String v6 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
  *(void *)&v5[v3] = v6;
  *(void *)&v5[OBJC_IVAR____TtC7Journal14OrphanAssetsVC_cancellable] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal14OrphanAssetsVC____lazy_storage___fetchedResultsController] = 0;
  id v7 = v6;

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for OrphanAssetsVC();
  return [super initWithStyle:a1];
}

id sub_100186FDC(uint64_t a1, uint64_t a2, void *a3)
{
  *(void *)&v3[OBJC_IVAR____TtC7Journal14OrphanAssetsVC_dataSource] = 0;
  uint64_t v6 = OBJC_IVAR____TtC7Journal14OrphanAssetsVC_context;
  uint64_t v7 = qword_1007F6D38;
  id v8 = v3;
  if (v7 != -1) {
    swift_once();
  }
  objc_super v9 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
  *(void *)&v3[v6] = v9;
  *(void *)&v8[OBJC_IVAR____TtC7Journal14OrphanAssetsVC_cancellable] = 0;
  *(void *)&v8[OBJC_IVAR____TtC7Journal14OrphanAssetsVC____lazy_storage___fetchedResultsController] = 0;
  id v10 = v9;

  if (a2)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for OrphanAssetsVC();
  [super initWithNibName:v11 bundle:a3];

  return v12;
}

id sub_100187164(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal14OrphanAssetsVC_dataSource] = 0;
  uint64_t v3 = OBJC_IVAR____TtC7Journal14OrphanAssetsVC_context;
  uint64_t v4 = qword_1007F6D38;
  Swift::String v5 = v1;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
  *(void *)&v5[v3] = v6;
  *(void *)&v5[OBJC_IVAR____TtC7Journal14OrphanAssetsVC_cancellable] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal14OrphanAssetsVC____lazy_storage___fetchedResultsController] = 0;
  id v7 = v6;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for OrphanAssetsVC();
  [super initWithCoder:a1];

  return v8;
}

id sub_100187270()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OrphanAssetsVC();
  return [super dealloc];
}

uint64_t type metadata accessor for OrphanAssetsVC()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for OrphanAssetsVC.Section(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *id result = a2;
        return result;
      case 2:
        *(_WORD *)id result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)id result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *id result = 0;
      break;
    case 2:
      *(_WORD *)id result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001873D0);
    case 4:
      *(_DWORD *)id result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for OrphanAssetsVC.Section()
{
  return &type metadata for OrphanAssetsVC.Section;
}

unint64_t sub_10018740C()
{
  unint64_t result = qword_100800A28;
  if (!qword_100800A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800A28);
  }
  return result;
}

unint64_t sub_100187460()
{
  unint64_t result = qword_100800A48;
  if (!qword_100800A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800A48);
  }
  return result;
}

uint64_t sub_1001874B4()
{
  return swift_deallocObject();
}

id sub_1001874EC(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_100185A68(a1, a2, a3, *(void *)(v3 + 16));
}

_OWORD *sub_1001874F4(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_10018750C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100800950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_100187574()
{
  id v0 = [self mainScreen];
  [v0 bounds];
  CGFloat v2 = v1;
  CGFloat v4 = v3;
  CGFloat v6 = v5;
  CGFloat v8 = v7;

  v9.origin.x = v2;
  v9.origin.y = v4;
  v9.size.width = v6;
  v9.size.height = v8;
  ceil(CGRectGetWidth(v9));
}

id sub_100187680(uint64_t a1, uint64_t a2)
{
  double v5 = &v2[OBJC_IVAR____TtC7Journal24OnboardingViewController_logger];
  uint64_t v6 = qword_1007F7DE0;
  double v7 = v2;
  if (v6 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v9 = sub_100026A54(v8, (uint64_t)qword_10083EDA0);
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(v5, v9, v8);
  uint64_t v10 = OBJC_IVAR____TtC7Journal24OnboardingViewController_backgroundView;
  type metadata accessor for GradientView();
  *(void *)&v7[v10] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v7[OBJC_IVAR____TtC7Journal24OnboardingViewController____lazy_storage___onboardingAsset] = 0;
  NSString v11 = &v7[OBJC_IVAR____TtC7Journal24OnboardingViewController_onComplete];
  *(void *)NSString v11 = a1;
  *((void *)v11 + 1) = a2;
  swift_retain();

  id v12 = [self mainBundle];
  v23._uint64_t countAndFlagsBits = 0xD000000000000024;
  v23._unint64_t object = (void *)0x800000010068D6C0;
  v13._unint64_t object = (void *)0x800000010068D6A0;
  v13._uint64_t countAndFlagsBits = 0xD000000000000012;
  v14._uint64_t countAndFlagsBits = 0;
  v14._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v23);

  NSString v15 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v22.receiver = v7;
  v22.super_class = (Class)type metadata accessor for OnboardingViewController();
  [super initWithTitle:v15 detailText:0 icon:0 contentLayout:4];

  id v17 = v16;
  id result = [v17 view];
  if (result)
  {
    double v19 = result;
    [result setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityExtraExtraLarge];

    id v20 = [v17 buttonTray];
    id v21 = [self clearColor];
    [v20 setBackgroundColor:v21];

    sub_100187A34();
    sub_100188094();
    sub_100187D90();

    swift_release();
    return v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_100187924()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal24OnboardingViewController____lazy_storage___onboardingAsset;
  CGFloat v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal24OnboardingViewController____lazy_storage___onboardingAsset);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Journal24OnboardingViewController____lazy_storage___onboardingAsset);
  }
  else
  {
    NSString v4 = String._bridgeToObjectiveC()();
    id v5 = [self imageNamed:v4];

    id v6 = [objc_allocWithZone((Class)UIImageView) initWithImage:v5];
    [v6 setTranslatesAutoresizingMaskIntoConstraints:0];
    [v6 setContentMode:2];
    [v6 setClipsToBounds:1];
    double v7 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v6;
    id v3 = v6;

    CGFloat v2 = 0;
  }
  id v8 = v2;
  return v3;
}

void sub_100187A34()
{
  uint64_t v1 = v0;
  id v2 = [v0 view];
  if (v2)
  {
    id v3 = v2;
    [v2 setAccessibilityViewIsModal:1];

    id v4 = [v1 contentView];
    id v5 = self;
    id v6 = [v5 clearColor];
    [v4 setBackgroundColor:v6];

    id v7 = [v1 contentView];
    id v8 = sub_100187924();
    [v7 addSubview:v8];

    id v9 = sub_100187924();
    sub_1001DCF60(0.0);

    swift_bridgeObjectRelease();
    id v10 = [self boldButton];
    id v11 = [v5 systemIndigoColor];
    [v10 setTintColor:v11];

    [v10 addTarget:v1 action:"continueButtonTapped" forControlEvents:64];
    id v12 = [self mainBundle];
    v20._unint64_t object = (void *)0x800000010068D5D0;
    v13._uint64_t countAndFlagsBits = 0x65756E69746E6F43;
    v13._unint64_t object = (void *)0xE800000000000000;
    v14._uint64_t countAndFlagsBits = 0;
    v14._unint64_t object = (void *)0xE000000000000000;
    v20._uint64_t countAndFlagsBits = 0xD00000000000002BLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v13, (Swift::String_optional)0, (NSBundle)v12, v14, v20);

    NSString v15 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v10 setTitle:v15 forState:0];

    id v16 = [v1 buttonTray];
    [v16 addButton:v10];

    id v17 = [v1 buttonTray];
    id v18 = [v5 clearColor];
    [v17 setBackgroundColor:v18];
  }
  else
  {
    __break(1u);
  }
}

id sub_100187D90()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ColorResource();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  id v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id result = [v0 view];
  if (!result)
  {
    __break(1u);
    goto LABEL_11;
  }
  id v8 = result;
  uint64_t v9 = OBJC_IVAR____TtC7Journal24OnboardingViewController_backgroundView;
  [result addSubview:*(void *)&v1[OBJC_IVAR____TtC7Journal24OnboardingViewController_backgroundView]];

  id v10 = *(id *)&v1[v9];
  sub_1001DCF60(0.0);

  swift_bridgeObjectRelease();
  id result = [v1 view];
  if (!result)
  {
LABEL_11:
    __break(1u);
    return result;
  }
  id v11 = result;
  [result sendSubviewToBack:*(void *)&v1[v9]];

  id v12 = *(void **)&v1[v9];
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1006D6D20;
  sub_100088B50();
  uint64_t v14 = qword_1007F7FA0;
  id v15 = v12;
  if (v14 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100026A54(v2, (uint64_t)qword_10083F000);
  id v17 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v17(v6, v16, v2);
  *(void *)(v13 + 32) = UIColor.init(resource:)();
  if (qword_1007F7F98 != -1) {
    swift_once();
  }
  uint64_t v18 = sub_100026A54(v2, (uint64_t)qword_10083EFE8);
  v17(v6, v18, v2);
  *(void *)(v13 + 40) = UIColor.init(resource:)();
  if (qword_1007F7F90 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100026A54(v2, (uint64_t)qword_10083EFD0);
  v17(v6, v19, v2);
  *(void *)(v13 + 48) = UIColor.init(resource:)();
  uint64_t v22 = v13;
  specialized Array._endMutation()();
  uint64_t v20 = v22;
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v22 = v20;
  return (id)static UIView.Invalidating.subscript.setter();
}

void sub_100188094()
{
  uint64_t v1 = v0;
  if (qword_1007F7658 != -1) {
    swift_once();
  }
  uint64_t v2 = (objc_class *)type metadata accessor for JournalBulletedListItem();
  objc_allocWithZone(v2);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_100481000();
  if (qword_1007F7668 != -1) {
    swift_once();
  }
  objc_allocWithZone(v2);
  swift_bridgeObjectRetain();
  double v4 = sub_100481000();
  if (qword_1007F7660 != -1) {
    swift_once();
  }
  objc_allocWithZone(v2);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_100481000();
  id v6 = [v1 secondaryContentView];
  if (v6)
  {
    id v7 = v6;
    [v6 addSubview:v3];
  }
  id v8 = [v1 secondaryContentView];
  if (v8)
  {
    uint64_t v9 = v8;
    [v8 addSubview:v4];
  }
  id v10 = [v1 secondaryContentView];
  if (v10)
  {
    id v11 = v10;
    [v10 addSubview:v5];
  }
  if (qword_1007F7428 != -1) {
    swift_once();
  }
  double v12 = *(double *)&qword_10083DA38;
  id v13 = [v3 superview];
  if (v13)
  {
    uint64_t v14 = v13;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v15 = [v3 topAnchor];
    id v16 = [v14 topAnchor];
    id v17 = [v15 constraintEqualToAnchor:v16];

    [v17 setConstant:v12];
    if (v17)
    {
      id v18 = v17;
      [v18 setActive:1];
    }
  }
  if (qword_1007F7440 != -1) {
    swift_once();
  }
  double v19 = *(double *)&qword_10083DA50;
  id v20 = [v3 superview];
  if (v20)
  {
    uint64_t v21 = v20;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v22 = [v3 leadingAnchor];
    id v23 = [v21 leadingAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    [v24 setConstant:v19];
    if (v24)
    {
      id v25 = v24;
      [v25 setActive:1];
    }
  }
  double v26 = *(double *)&qword_10083DA50;
  id v27 = [v3 superview];
  if (v27)
  {
    NSString v28 = v27;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v29 = [v3 trailingAnchor];
    id v30 = [v28 trailingAnchor];
    id v31 = [v29 constraintEqualToAnchor:v30];

    [v31 setConstant:-v26];
    if (v31)
    {
      id v32 = v31;
      [v32 setActive:1];
    }
  }
  if (qword_1007F7420 != -1) {
    swift_once();
  }
  double v33 = *(double *)&qword_10083DA30;
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v34 = [v4 topAnchor];
  id v35 = [v3 bottomAnchor];
  id v36 = [v34 constraintEqualToAnchor:v35];

  [v36 setConstant:v33];
  [v36 setActive:1];

  double v37 = *(double *)&qword_10083DA50;
  id v38 = [v4 superview];
  if (v38)
  {
    uint64_t v39 = v38;
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v40 = [v4 leadingAnchor];
    id v41 = [v39 leadingAnchor];
    id v42 = [v40 constraintEqualToAnchor:v41];

    [v42 setConstant:v37];
    id v43 = v42;
    [v43 setActive:1];
  }
  double v44 = *(double *)&qword_10083DA50;
  id v45 = [v4 superview];
  if (v45)
  {
    unint64_t v46 = v45;
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v47 = [v4 trailingAnchor];
    id v48 = [v46 trailingAnchor];
    id v49 = [v47 constraintEqualToAnchor:v48];

    [v49 setConstant:-v44];
    id v50 = v49;
    [v50 setActive:1];
  }
  double v51 = *(double *)&qword_10083DA30;
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v52 = [v5 topAnchor];
  id v53 = [v4 bottomAnchor];
  id v54 = [v52 constraintEqualToAnchor:v53];

  [v54 setConstant:v51];
  [v54 setActive:1];

  double v55 = *(double *)&qword_10083DA50;
  id v56 = [v5 superview];
  if (v56)
  {
    uint64_t v57 = v56;
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v58 = [v5 leadingAnchor];
    id v59 = [v57 leadingAnchor];
    id v60 = [v58 constraintEqualToAnchor:v59];

    [v60 setConstant:v55];
    id v61 = v60;
    [v61 setActive:1];
  }
  double v62 = *(double *)&qword_10083DA50;
  id v63 = [v5 superview];
  if (v63)
  {
    Swift::String v64 = v63;
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v65 = [v5 trailingAnchor];
    id v66 = [v64 trailingAnchor];
    id v67 = [v65 constraintEqualToAnchor:v66];

    [v67 setConstant:-v62];
    id v68 = v67;
    [v68 setActive:1];
  }
  id v69 = sub_1001DD438(2, 1, *(double *)&qword_10083DA30);
}

id sub_100188ADC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for OnboardingViewController();
  return [super dealloc];
}

BOOL static NSOperatingSystemVersion.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return a1 == a4 && a2 == a5 && a3 == a6;
}

BOOL static NSOperatingSystemVersion.< infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6 = a2 < a5;
  if (a2 == a5) {
    BOOL v6 = a3 < a6;
  }
  if (a1 == a4) {
    return v6;
  }
  else {
    return a1 < a4;
  }
}

unint64_t sub_100188BFC()
{
  unint64_t result = qword_100800A78;
  if (!qword_100800A78)
  {
    type metadata accessor for OperatingSystemVersion(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800A78);
  }
  return result;
}

BOOL sub_100188C54(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  BOOL v4 = v2 == v3;
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v5 = a1[2] < a2[2];
  }
  if (*a1 == *a2) {
    return v5;
  }
  else {
    return *a1 < *a2;
  }
}

BOOL sub_100188C8C(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  BOOL v4 = v3 == v2;
  BOOL v5 = v3 < v2;
  if (v4) {
    BOOL v5 = a2[2] < a1[2];
  }
  if (*a2 == *a1) {
    BOOL v6 = v5;
  }
  else {
    BOOL v6 = *a2 < *a1;
  }
  return !v6;
}

BOOL sub_100188CC8(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  BOOL v4 = v2 == v3;
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v5 = a1[2] < a2[2];
  }
  if (*a1 == *a2) {
    BOOL v6 = v5;
  }
  else {
    BOOL v6 = *a1 < *a2;
  }
  return !v6;
}

BOOL sub_100188D04(void *a1, void *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a2[1];
  BOOL v4 = v3 == v2;
  BOOL v5 = v3 < v2;
  if (v4) {
    BOOL v5 = a2[2] < a1[2];
  }
  if (*a2 == *a1) {
    return v5;
  }
  else {
    return *a2 < *a1;
  }
}

BOOL sub_100188D3C(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2];
}

uint64_t sub_100188D6C()
{
  return type metadata accessor for OnboardingViewController();
}

uint64_t type metadata accessor for OnboardingViewController()
{
  uint64_t result = qword_100800AC0;
  if (!qword_100800AC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100188DC0()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100188E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_10018AC84();
  swift_bridgeObjectRetain();
  uint64_t v7 = String.init<A>(_:)();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1005B34A8();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  unsigned int v13 = sub_100189058(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13 & 0x1FFFF;
}

unsigned __int8 *sub_100188F64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  uint64_t v17 = a3;
  uint64_t v18 = a4;
  sub_10018AC84();
  swift_bridgeObjectRetain();
  uint64_t v7 = String.init<A>(_:)();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    uint64_t v9 = (unsigned __int8 *)&v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_1005B34A8();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = (unsigned __int8 *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    uint64_t v9 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
  }
LABEL_7:
  unsigned int v13 = sub_10018930C(v9, v10, a5);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_100189058(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  int v3 = *result;
  if (v3 == 43)
  {
    if (a2 >= 1)
    {
      uint64_t v16 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v17 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v18 = a3 + 55;
        }
        else
        {
          unsigned __int8 v17 = 97;
          unsigned __int8 v18 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v19 = a3 + 48;
        }
        else {
          unsigned __int8 v19 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          id v20 = result + 1;
          do
          {
            unsigned int v21 = *v20;
            if (v21 < 0x30 || v21 >= v19)
            {
              if (v21 < 0x41 || v21 >= v18)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v21 < 0x61 || v21 >= v17) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v22 = -87;
              }
              else
              {
                char v22 = -55;
              }
            }
            else
            {
              char v22 = -48;
            }
            int v23 = (__int16)v8 * (__int16)a3;
            __int16 v24 = v23;
            if ((__int16)v23 != v23) {
              goto LABEL_72;
            }
            int v8 = (__int16)v23 + (v21 + v22);
            if ((__int16)(v24 + (v21 + v22)) != v8) {
              goto LABEL_72;
            }
            ++v20;
            --v16;
          }
          while (v16);
LABEL_48:
          int v13 = 0;
          unsigned __int16 v12 = v8;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
LABEL_72:
      unsigned __int16 v12 = 0;
      int v13 = 1;
      return (unsigned __int8 *)(v12 | (v13 << 16));
    }
  }
  else
  {
    if (v3 != 45)
    {
      if (a2)
      {
        unsigned __int8 v25 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v26 = a3 + 55;
        }
        else
        {
          unsigned __int8 v25 = 97;
          unsigned __int8 v26 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v27 = a3 + 48;
        }
        else {
          unsigned __int8 v27 = 58;
        }
        if (result)
        {
          LOWORD(v28) = 0;
          do
          {
            unsigned int v29 = *result;
            if (v29 < 0x30 || v29 >= v27)
            {
              if (v29 < 0x41 || v29 >= v26)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v29 < 0x61 || v29 >= v25) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v30 = -87;
              }
              else
              {
                char v30 = -55;
              }
            }
            else
            {
              char v30 = -48;
            }
            int v31 = (__int16)v28 * (__int16)a3;
            __int16 v32 = v31;
            if ((__int16)v31 != v31) {
              goto LABEL_72;
            }
            int v28 = (__int16)v31 + (v29 + v30);
            if ((__int16)(v32 + (v29 + v30)) != v28) {
              goto LABEL_72;
            }
            ++result;
            --a2;
          }
          while (a2);
          int v13 = 0;
          unsigned __int16 v12 = v28;
          return (unsigned __int8 *)(v12 | (v13 << 16));
        }
        goto LABEL_71;
      }
      goto LABEL_72;
    }
    if (a2 >= 1)
    {
      uint64_t v4 = a2 - 1;
      if (a2 != 1)
      {
        unsigned __int8 v5 = a3 + 87;
        if (a3 > 10)
        {
          unsigned __int8 v6 = a3 + 55;
        }
        else
        {
          unsigned __int8 v5 = 97;
          unsigned __int8 v6 = 65;
        }
        if (a3 <= 10) {
          unsigned __int8 v7 = a3 + 48;
        }
        else {
          unsigned __int8 v7 = 58;
        }
        if (result)
        {
          LOWORD(v8) = 0;
          uint64_t v9 = result + 1;
          while (1)
          {
            unsigned int v10 = *v9;
            if (v10 < 0x30 || v10 >= v7)
            {
              if (v10 < 0x41 || v10 >= v6)
              {
                unsigned __int16 v12 = 0;
                int v13 = 1;
                if (v10 < 0x61 || v10 >= v5) {
                  return (unsigned __int8 *)(v12 | (v13 << 16));
                }
                char v11 = -87;
              }
              else
              {
                char v11 = -55;
              }
            }
            else
            {
              char v11 = -48;
            }
            int v14 = (__int16)v8 * (__int16)a3;
            __int16 v15 = v14;
            if ((__int16)v14 != v14) {
              goto LABEL_72;
            }
            int v8 = (__int16)v14 - (v10 + v11);
            if ((__int16)(v15 - (v10 + v11)) != v8) {
              goto LABEL_72;
            }
            ++v9;
            if (!--v4) {
              goto LABEL_48;
            }
          }
        }
LABEL_71:
        unsigned __int16 v12 = 0;
        int v13 = 0;
        return (unsigned __int8 *)(v12 | (v13 << 16));
      }
      goto LABEL_72;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unsigned __int8 *sub_10018930C(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  uint64_t v13 = 0;
                  if (v11 < 0x61 || v11 >= v8) {
                    return (unsigned __int8 *)v13;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v14 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v14 - (v11 + v12);
              if (__OFSUB__(v14, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v23 = a3 + 48;
      unsigned __int8 v24 = a3 + 55;
      unsigned __int8 v25 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v23 = 58;
      }
      else
      {
        unsigned __int8 v25 = 97;
        unsigned __int8 v24 = 65;
      }
      if (result)
      {
        uint64_t v26 = 0;
        do
        {
          unsigned int v27 = *result;
          if (v27 < 0x30 || v27 >= v23)
          {
            if (v27 < 0x41 || v27 >= v24)
            {
              uint64_t v13 = 0;
              if (v27 < 0x61 || v27 >= v25) {
                return (unsigned __int8 *)v13;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v29 = v26 * a3;
          if ((unsigned __int128)(v26 * (__int128)a3) >> 64 != (v26 * a3) >> 63) {
            return 0;
          }
          uint64_t v26 = v29 + (v27 + v28);
          if (__OFADD__(v29, (v27 + v28))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v29 + (v27 + v28));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v15 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v16 = a3 + 48;
  unsigned __int8 v17 = a3 + 55;
  unsigned __int8 v18 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v16 = 58;
  }
  else
  {
    unsigned __int8 v18 = 97;
    unsigned __int8 v17 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned __int8 v19 = result + 1;
  do
  {
    unsigned int v20 = *v19;
    if (v20 < 0x30 || v20 >= v16)
    {
      if (v20 < 0x41 || v20 >= v17)
      {
        uint64_t v13 = 0;
        if (v20 < 0x61 || v20 >= v18) {
          return (unsigned __int8 *)v13;
        }
        char v21 = -87;
      }
      else
      {
        char v21 = -55;
      }
    }
    else
    {
      char v21 = -48;
    }
    uint64_t v22 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v22 + (v20 + v21);
    if (__OFADD__(v22, (v20 + v21))) {
      return 0;
    }
    ++v19;
    --v15;
  }
  while (v15);
  return (unsigned __int8 *)v9;
}

uint64_t sub_100189588(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr))
{
  if (a1)
  {
    a3(&var2);
    if (!v3) {
      char v4 = var2;
    }
  }
  else
  {
    ((void (*)(uint64_t *__return_ptr, void, void))a3)((uint64_t *)((char *)&var2 + 1), 0, 0);
    if (!v3) {
      char v4 = BYTE1(var2);
    }
  }
  return v4 & 1;
}

uint64_t sub_1001895E8(uint64_t result, unint64_t a2, unint64_t a3, unint64_t a4, unint64_t a5, uint64_t a6)
{
  unint64_t v10 = a2;
  uint64_t v11 = result;
  uint64_t v12 = (a4 >> 59) & 1;
  if ((a5 & 0x1000000000000000) == 0) {
    LOBYTE(v12) = 1;
  }
  uint64_t v13 = 4 << v12;
  unint64_t v14 = a2 & 0xC;
  if (v14 == 4 << v12)
  {
    uint64_t result = sub_1005B342C(a2, a4, a5);
    a2 = result;
    if ((a5 & 0x1000000000000000) == 0)
    {
LABEL_5:
      int64_t v15 = a2 >> 16;
      if (v14 != v13) {
        goto LABEL_6;
      }
      goto LABEL_14;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
    goto LABEL_5;
  }
  unint64_t v16 = a4 & 0xFFFFFFFFFFFFLL;
  if ((a5 & 0x2000000000000000) != 0) {
    unint64_t v16 = HIBYTE(a5) & 0xF;
  }
  if (v16 < a2 >> 16) {
    goto LABEL_95;
  }
  uint64_t result = String.UTF8View._foreignDistance(from:to:)();
  int64_t v15 = result;
  if (v14 == v13)
  {
LABEL_14:
    uint64_t result = sub_1005B342C(v10, a4, a5);
    unint64_t v10 = result;
  }
LABEL_6:
  if ((a3 & 0xC) == v13)
  {
    uint64_t result = sub_1005B342C(a3, a4, a5);
    a3 = result;
    if ((a5 & 0x1000000000000000) == 0) {
      goto LABEL_8;
    }
  }
  else if ((a5 & 0x1000000000000000) == 0)
  {
LABEL_8:
    uint64_t result = (a3 >> 16) - (v10 >> 16);
    goto LABEL_21;
  }
  unint64_t v17 = HIBYTE(a5) & 0xF;
  if ((a5 & 0x2000000000000000) == 0) {
    unint64_t v17 = a4 & 0xFFFFFFFFFFFFLL;
  }
  if (v17 < v10 >> 16) {
    goto LABEL_91;
  }
  if (v17 < a3 >> 16)
  {
LABEL_92:
    __break(1u);
    goto LABEL_93;
  }
  uint64_t result = String.UTF8View._foreignDistance(from:to:)();
LABEL_21:
  int64_t v18 = v15 + result;
  if (__OFADD__(v15, result))
  {
    __break(1u);
    goto LABEL_90;
  }
  if (v18 < v15)
  {
LABEL_90:
    __break(1u);
LABEL_91:
    __break(1u);
    goto LABEL_92;
  }
  unsigned __int8 v19 = (unsigned __int8 *)(v11 + v15);
  if (!v11) {
    unsigned __int8 v19 = 0;
  }
  int v20 = *v19;
  if (v20 == 43)
  {
    if (result >= 1)
    {
      if (result != 1)
      {
        unsigned __int8 v31 = a6 + 48;
        unsigned __int8 v32 = a6 + 55;
        unsigned __int8 v33 = a6 + 87;
        if (a6 > 10)
        {
          unsigned __int8 v31 = 58;
        }
        else
        {
          unsigned __int8 v33 = 97;
          unsigned __int8 v32 = 65;
        }
        if (v19)
        {
          uint64_t v24 = 0;
          id v34 = v19 + 1;
          uint64_t v35 = result - 1;
          do
          {
            unsigned int v36 = *v34;
            if (v36 < 0x30 || v36 >= v31)
            {
              if (v36 < 0x41 || v36 >= v32)
              {
                uint64_t v29 = 0;
                if (v36 < 0x61 || v36 >= v33) {
                  return v29;
                }
                char v37 = -87;
              }
              else
              {
                char v37 = -55;
              }
            }
            else
            {
              char v37 = -48;
            }
            uint64_t v38 = v24 * a6;
            if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
              return 0;
            }
            uint64_t v24 = v38 + (v36 + v37);
            if (__OFADD__(v38, (v36 + v37))) {
              return 0;
            }
            ++v34;
            --v35;
          }
          while (v35);
          return v24;
        }
        return 0;
      }
      return 0;
    }
    goto LABEL_94;
  }
  if (v20 != 45)
  {
    if (v18 != v15)
    {
      unsigned __int8 v39 = a6 + 48;
      unsigned __int8 v40 = a6 + 55;
      unsigned __int8 v41 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v39 = 58;
      }
      else
      {
        unsigned __int8 v41 = 97;
        unsigned __int8 v40 = 65;
      }
      if (v19)
      {
        uint64_t v42 = 0;
        do
        {
          unsigned int v43 = *v19;
          if (v43 < 0x30 || v43 >= v39)
          {
            if (v43 < 0x41 || v43 >= v40)
            {
              uint64_t v29 = 0;
              if (v43 < 0x61 || v43 >= v41) {
                return v29;
              }
              char v44 = -87;
            }
            else
            {
              char v44 = -55;
            }
          }
          else
          {
            char v44 = -48;
          }
          uint64_t v45 = v42 * a6;
          if ((unsigned __int128)(v42 * (__int128)a6) >> 64 != (v42 * a6) >> 63) {
            return 0;
          }
          uint64_t v42 = v45 + (v43 + v44);
          if (__OFADD__(v45, (v43 + v44))) {
            return 0;
          }
          ++v19;
          --result;
        }
        while (result);
        return v45 + (v43 + v44);
      }
      return 0;
    }
    return 0;
  }
  if (result >= 1)
  {
    if (result != 1)
    {
      unsigned __int8 v21 = a6 + 48;
      unsigned __int8 v22 = a6 + 55;
      unsigned __int8 v23 = a6 + 87;
      if (a6 > 10)
      {
        unsigned __int8 v21 = 58;
      }
      else
      {
        unsigned __int8 v23 = 97;
        unsigned __int8 v22 = 65;
      }
      if (v19)
      {
        uint64_t v24 = 0;
        unsigned __int8 v25 = v19 + 1;
        uint64_t v26 = result - 1;
        while (1)
        {
          unsigned int v27 = *v25;
          if (v27 < 0x30 || v27 >= v21)
          {
            if (v27 < 0x41 || v27 >= v22)
            {
              uint64_t v29 = 0;
              if (v27 < 0x61 || v27 >= v23) {
                return v29;
              }
              char v28 = -87;
            }
            else
            {
              char v28 = -55;
            }
          }
          else
          {
            char v28 = -48;
          }
          uint64_t v30 = v24 * a6;
          if ((unsigned __int128)(v24 * (__int128)a6) >> 64 != (v24 * a6) >> 63) {
            return 0;
          }
          uint64_t v24 = v30 - (v27 + v28);
          if (__OFSUB__(v30, (v27 + v28))) {
            return 0;
          }
          ++v25;
          if (!--v26) {
            return v24;
          }
        }
      }
      return 0;
    }
    return 0;
  }
LABEL_93:
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
  return result;
}

void sub_100189A10()
{
  id v0 = [self currentDevice];
  id v1 = [v0 systemVersion];

  uint64_t v2 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v4 = v3;

  uint64_t v28 = v2;
  uint64_t v29 = v4;
  sub_100014344();
  uint64_t v5 = StringProtocol<>.split(separator:maxSplits:omittingEmptySubsequences:)();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v5 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    unsigned __int8 v7 = (unint64_t *)(v5 + 56);
    unsigned __int8 v8 = _swiftEmptyArrayStorage;
    while (1)
    {
      unint64_t v10 = *(v7 - 3);
      unint64_t v9 = *(v7 - 2);
      if ((v9 ^ v10) >= 0x4000)
      {
        unint64_t v12 = *(v7 - 1);
        unint64_t v11 = *v7;
        if ((*v7 & 0x1000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v14 = (uint64_t)sub_100188F64(v10, v9, v12, v11, 10);
          char v19 = v18;
          swift_bridgeObjectRelease();
          if ((v19 & 1) == 0) {
            goto LABEL_12;
          }
        }
        else
        {
          if ((v11 & 0x2000000000000000) != 0)
          {
            uint64_t v28 = *(v7 - 1);
            uint64_t v29 = v11 & 0xFFFFFFFFFFFFFFLL;
            uint64_t v13 = &v28;
          }
          else if ((v12 & 0x1000000000000000) != 0)
          {
            uint64_t v13 = (void *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
          }
          else
          {
            uint64_t v13 = (void *)_StringObject.sharedUTF8.getter();
          }
          uint64_t v14 = sub_1001895E8((uint64_t)v13, v10, v9, v12, v11, 10);
          if ((v15 & 1) == 0)
          {
LABEL_12:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unsigned __int8 v8 = sub_1002A6500(0, v8[2] + 1, 1, v8);
            }
            unint64_t v17 = v8[2];
            unint64_t v16 = v8[3];
            if (v17 >= v16 >> 1) {
              unsigned __int8 v8 = sub_1002A6500((void *)(v16 > 1), v17 + 1, 1, v8);
            }
            v8[2] = v17 + 1;
            v8[v17 + 4] = v14;
          }
        }
      }
      v7 += 4;
      if (!--v6)
      {
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
    }
  }
  unsigned __int8 v8 = _swiftEmptyArrayStorage;
LABEL_21:
  swift_bridgeObjectRelease();
  unint64_t v20 = v8[2];
  if (v20)
  {
    uint64_t v21 = v8[4];
    if (v20 == 1)
    {
      uint64_t v22 = 0;
      uint64_t v23 = 2;
    }
    else
    {
      uint64_t v23 = v8[5];
      if (v20 < 3) {
        uint64_t v22 = 0;
      }
      else {
        uint64_t v22 = v8[6];
      }
    }
  }
  else
  {
    uint64_t v22 = 0;
    uint64_t v21 = 16;
    uint64_t v23 = 2;
  }
  swift_bridgeObjectRelease();
  id v24 = [self standardUserDefaults];
  sub_100010218(&qword_1007FC110);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1006D7C30;
  *(void *)(v25 + 32) = v21;
  *(void *)(v25 + 40) = v23;
  *(void *)(v25 + 48) = v22;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  NSString v27 = String._bridgeToObjectiveC()();
  [v24 setObject:isa forKey:v27];
}

BOOL sub_100189D40()
{
  id v0 = self;
  id v1 = [v0 standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  id v3 = [v1 objectForKey:v2];

  if (v3)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v35 = 0u;
    long long v36 = 0u;
  }
  sub_1000685B8((uint64_t)&v35, (uint64_t)v37);
  if (v38)
  {
    sub_100010218(&qword_10080A1D0);
    if (swift_dynamicCast())
    {
      if (v34[2] == 3)
      {
        uint64_t v5 = v34[4];
        uint64_t v4 = v34[5];
        unint64_t v6 = v34[6];
        swift_bridgeObjectRelease();
        if (qword_1007F7DE0 != -1) {
          swift_once();
        }
        uint64_t v7 = type metadata accessor for Logger();
        sub_100026A54(v7, (uint64_t)qword_10083EDA0);
        unsigned __int8 v8 = Logger.logObject.getter();
        os_log_type_t v9 = static os_log_type_t.info.getter();
        if (os_log_type_enabled(v8, v9))
        {
          os_log_type_t v33 = v9;
          uint64_t v10 = swift_slowAlloc();
          v37[0] = swift_slowAlloc();
          *(_DWORD *)uint64_t v10 = 136315650;
          uint64_t v11 = Array.description.getter();
          *(void *)&long long v35 = sub_10011EA98(v11, v12, v37);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v10 + 12) = 2080;
          sub_100010218(&qword_1007FC110);
          uint64_t v13 = swift_allocObject();
          *(_OWORD *)(v13 + 16) = xmmword_1006D7C30;
          *(void *)(v13 + 32) = v5;
          *(void *)(v13 + 40) = v4;
          unint64_t v14 = v6;
          *(void *)(v13 + 48) = v6;
          uint64_t v15 = Array.description.getter();
          unint64_t v17 = v16;
          swift_bridgeObjectRelease();
          *(void *)&long long v35 = sub_10011EA98(v15, v17, v37);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          *(_WORD *)(v10 + 22) = 1024;
          if (v5 == 16)
          {
            uint64_t v18 = v4;
            if (v4 == 2)
            {
              unint64_t v6 = v14;
              unint64_t v19 = v14 >> 63;
            }
            else
            {
              LODWORD(v19) = v4 < 2;
              unint64_t v6 = v14;
            }
          }
          else
          {
            uint64_t v18 = v4;
            LODWORD(v19) = v5 < 16;
            unint64_t v6 = v14;
          }
          LODWORD(v35) = v19;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v8, v33, "App Onboarding: Has shown app onboarding, versionToOnboard: %s, lastSeenVersion: %s will onboard: %{BOOL}d", (uint8_t *)v10, 0x1Cu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          uint64_t v4 = v18;
          BOOL v31 = v5 < 16;
          if (v5 == 16)
          {
LABEL_31:
            BOOL v31 = v4 < 2;
            if (v4 == 2) {
              return v6 >> 63;
            }
          }
        }
        else
        {

          BOOL v31 = v5 < 16;
          if (v5 == 16) {
            goto LABEL_31;
          }
        }
        return v31;
      }
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_10001B418((uint64_t)v37);
  }
  if (qword_1007F7DE0 != -1) {
    swift_once();
  }
  uint64_t v20 = type metadata accessor for Logger();
  sub_100026A54(v20, (uint64_t)qword_10083EDA0);
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    id v34 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136315138;
    id v24 = [v0 standardUserDefaults];
    NSString v25 = String._bridgeToObjectiveC()();
    id v26 = [v24 objectForKey:v25];

    if (v26)
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v35 = 0u;
      long long v36 = 0u;
    }
    sub_1000685B8((uint64_t)&v35, (uint64_t)v37);
    if (v38)
    {
      sub_100010218(&qword_10080A1D0);
      swift_dynamicCast();
    }
    else
    {
      sub_10001B418((uint64_t)v37);
    }
    uint64_t v28 = Array.description.getter();
    unint64_t v30 = v29;
    swift_bridgeObjectRelease();
    v37[0] = sub_10011EA98(v28, v30, (uint64_t *)&v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v21, v22, "App Onboarding: Last shown app onboarding user default is nil. version:  %s", v23, 0xCu);
    uint64_t v27 = 1;
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    return 1;
  }
  return v27;
}

uint64_t sub_10018A320()
{
  if (sub_100189D40()) {
    goto LABEL_2;
  }
  uint64_t v4 = self;
  id v5 = [v4 standardUserDefaults];
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v5 objectForKey:v6];

  if (v7)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v44 = 0u;
    long long v45 = 0u;
  }
  sub_1000685B8((uint64_t)&v44, (uint64_t)v46);
  if (v47)
  {
    if (swift_dynamicCast())
    {
      if (qword_1007F7DE0 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_100026A54(v8, (uint64_t)qword_10083EDA0);
      swift_bridgeObjectRetain();
      os_log_type_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.info.getter();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        v46[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v11 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)&long long v44 = sub_10011EA98(v42, v43, v46);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "What's New: Should not show what's new since it has shown before: %s", v11, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      return 0;
    }
  }
  else
  {
    sub_10001B418((uint64_t)v46);
  }
  id v12 = [v4 standardUserDefaults];
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v12 objectForKey:v13];

  if (v14)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v44 = 0u;
    long long v45 = 0u;
  }
  sub_1000685B8((uint64_t)&v44, (uint64_t)v46);
  if (!v47)
  {
    sub_10001B418((uint64_t)v46);
    goto LABEL_44;
  }
  sub_100010218(&qword_1007FD810);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_44:
    if (qword_1007F7DE0 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_100026A54(v33, (uint64_t)qword_10083EDA0);
    id v1 = Logger.logObject.getter();
    os_log_type_t v34 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v1, v34)) {
      goto LABEL_49;
    }
    long long v35 = (uint8_t *)swift_slowAlloc();
    v46[0] = swift_slowAlloc();
    *(_DWORD *)long long v35 = 136315138;
    id v36 = [self currentDevice];
    id v37 = [v36 systemVersion];

    uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v40 = v39;

    *(void *)&long long v44 = sub_10011EA98(v38, v40, v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v34, "What's New: App onboarding version or system version not available. system version: %s", v35, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    goto LABEL_48;
  }
  if (!*(void *)(v42 + 16))
  {
    swift_bridgeObjectRelease();
    goto LABEL_44;
  }
  double v15 = *(double *)(v42 + 32);
  swift_bridgeObjectRelease();
  id v16 = [self currentDevice];
  id v17 = [v16 systemVersion];

  uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v20 = v19;

  *(void *)&long long v44 = 0;
  __chkstk_darwin(v21);
  if ((v20 & 0x1000000000000000) != 0 || !(v20 & 0x2000000000000000 | v18 & 0x1000000000000000))
  {
    _StringGuts._slowWithCString<A>(_:)();
LABEL_28:
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  __chkstk_darwin(v22);
  if ((v20 & 0x2000000000000000) == 0)
  {
    if ((v18 & 0x1000000000000000) != 0)
    {
      uint64_t v23 = (v20 & 0xFFFFFFFFFFFFFFFLL) + 32;
      uint64_t v24 = v18 & 0xFFFFFFFFFFFFLL;
    }
    else
    {
      uint64_t v23 = _StringObject.sharedUTF8.getter();
    }
    LOBYTE(v42) = sub_100189588(v23, v24, (void (*)(uint64_t *__return_ptr))sub_10018AC38) & 1;
    goto LABEL_28;
  }
  v46[0] = v18;
  v46[1] = v20 & 0xFFFFFFFFFFFFFFLL;
  BOOL v26 = (v18 > 0x20u || ((0x100003E01uLL >> v18) & 1) == 0)
     && (NSString v25 = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0
     && *v25 == 0;
  LOBYTE(v42) = v26;
  swift_bridgeObjectRelease();
LABEL_38:
  if ((v42 & 1) == 0) {
    goto LABEL_44;
  }
  uint64_t v27 = v44;
  if (v15 >= *(double *)&v44)
  {
LABEL_2:
    if (qword_1007F7DE0 != -1) {
      swift_once();
    }
    uint64_t v0 = type metadata accessor for Logger();
    sub_100026A54(v0, (uint64_t)qword_10083EDA0);
    id v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.info.getter();
    if (!os_log_type_enabled(v1, v2)) {
      goto LABEL_49;
    }
    id v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "App onboarding already seen, should not show what's new screen", v3, 2u);
LABEL_48:
    swift_slowDealloc();
LABEL_49:

    return 0;
  }
  if (qword_1007F7DE0 != -1) {
    swift_once();
  }
  uint64_t v28 = type metadata accessor for Logger();
  sub_100026A54(v28, (uint64_t)qword_10083EDA0);
  unint64_t v29 = Logger.logObject.getter();
  os_log_type_t v30 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    *(_DWORD *)uint64_t v31 = 134218496;
    v46[0] = v27;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 12) = 2048;
    *(double *)unint64_t v46 = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v31 + 22) = 1024;
    uint64_t v32 = 1;
    LODWORD(v46[0]) = 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v29, v30, "What's New: App onboarding version greater than or equal to system version. system version: %f, app onboarded at version: %f, system version is greater: %{BOOL}d", (uint8_t *)v31, 0x1Cu);
    swift_slowDealloc();
  }
  else
  {

    return 1;
  }
  return v32;
}

unsigned char *sub_10018ABC8@<X0>(unsigned char *result@<X0>, BOOL *a2@<X8>)
{
  unsigned int v3 = *result;
  BOOL v4 = v3 > 0x20;
  uint64_t v5 = (1 << v3) & 0x100003E01;
  BOOL v6 = v4 || v5 == 0;
  BOOL v7 = v6 && (result = (unsigned char *)_swift_stdlib_strtod_clocale()) != 0 && *result == 0;
  *a2 = v7;
  return result;
}

void *sub_10018AC38@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v1 + 16))(&v5);
  if (!v2) {
    *a1 = v5;
  }
  return result;
}

unint64_t sub_10018AC84()
{
  unint64_t result = qword_100800AD0;
  if (!qword_100800AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800AD0);
  }
  return result;
}

BOOL sub_10018ACD8()
{
  uint64_t v1 = type metadata accessor for CharacterSet();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  BOOL v4 = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
  if (!v5) {
    return 1;
  }
  id v6 = v5;
  id v7 = [v6 string];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v10 = v9;

  v16[0] = v8;
  v16[1] = v10;
  static CharacterSet.whitespacesAndNewlines.getter();
  sub_100014344();
  uint64_t v11 = StringProtocol.trimmingCharacters(in:)();
  unint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v14 = HIBYTE(v13) & 0xF;
  if ((v13 & 0x2000000000000000) == 0) {
    uint64_t v14 = v11 & 0xFFFFFFFFFFFFLL;
  }
  return !v14;
}

BOOL sub_10018AE4C()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9) {
      return 0;
    }
  }
  else if (*(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return 0;
  }
  if (!sub_10018ACD8()) {
    return 0;
  }
  uint64_t v3 = (void *)sub_100339674();
  if (v3)
  {
    sub_10033AA5C(v3);

    return 0;
  }
  id v6 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title);
  if (!v6) {
    return 1;
  }
  id v7 = [v6 string];
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v8 = String.count.getter();
  swift_bridgeObjectRelease();
  return v8 < 1;
}

uint64_t sub_10018AF68()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CharacterSet();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  id v6 = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
  if (v7)
  {
    id v8 = v7;
    id v9 = [v8 string];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    v22[0] = v10;
    v22[1] = v12;
    static CharacterSet.whitespacesAndNewlines.getter();
    sub_100014344();
    uint64_t v13 = StringProtocol.trimmingCharacters(in:)();
    unint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v16 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0) {
      uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
    }
    if (v16) {
      return 1;
    }
  }
  unint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsWithSlimAsset);
  if (v17 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v19) {
      return 1;
    }
  }
  else if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return 1;
  }
  uint64_t result = *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title);
  if (result)
  {
    id v20 = [result string:v4];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v21 = String.count.getter();
    swift_bridgeObjectRelease();
    return v21 > 0;
  }
  return result;
}

uint64_t sub_10018B188()
{
  uint64_t v1 = (unint64_t *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (v2 >> 62) {
    goto LABEL_19;
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain_n();
  if (v3)
  {
    while (1)
    {
      double v4 = (v2 & 0xC000000000000001) != 0
         ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v2 + 32);
      uint64_t v5 = v4;
      char v6 = (*(uint64_t (**)(void))((swift_isaMask & *v4) + 0x200))();

      if (v6) {
        break;
      }
      if (v3 != 1)
      {
        uint64_t v9 = 5;
        while (1)
        {
          uint64_t v10 = (v2 & 0xC000000000000001) != 0
              ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
              : *(id *)(v2 + 8 * v9);
          uint64_t v11 = v10;
          uint64_t v12 = v9 - 3;
          if (__OFADD__(v9 - 4, 1)) {
            break;
          }
          char v7 = (*(uint64_t (**)(void))((swift_isaMask & *v10) + 0x200))();

          if ((v7 & 1) == 0)
          {
            ++v9;
            if (v12 != v3) {
              continue;
            }
          }
          goto LABEL_9;
        }
        __break(1u);
LABEL_19:
        swift_bridgeObjectRetain_n();
        uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
        if (v3) {
          continue;
        }
      }
      goto LABEL_8;
    }
    char v7 = 1;
  }
  else
  {
LABEL_8:
    char v7 = 0;
  }
LABEL_9:
  swift_bridgeObjectRelease_n();
  return v7 & 1;
}

id sub_10018B350@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*(id *)(a1 + 24) hasChanges];
  *a2 = (_BYTE)result;
  return result;
}

uint64_t sub_10018B38C()
{
  uint64_t v1 = type metadata accessor for CharacterSet();
  uint64_t v2 = *(void *)(v1 - 8);
  *(void *)&double v3 = __chkstk_darwin(v1).n128_u64[0];
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title);
  if (result)
  {
    id v7 = [result string:v3];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v8 = String.count.getter();
    swift_bridgeObjectRelease();
    if (v8 >= 1)
    {
      uint64_t v9 = (void *)sub_100339674();
      if (!v9)
      {
        unint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsWithSlimAsset);
        if (v11 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v12) {
            return 0;
          }
        }
        else if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          return 0;
        }
        uint64_t v13 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
        if (!v13) {
          return 1;
        }
        id v14 = v13;
        id v15 = [v14 string];
        uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v18 = v17;

        v23[0] = v16;
        v23[1] = v18;
        static CharacterSet.whitespacesAndNewlines.getter();
        sub_100014344();
        uint64_t v19 = StringProtocol.trimmingCharacters(in:)();
        unint64_t v21 = v20;
        (*(void (**)(char *, uint64_t))(v2 + 8))(v5, v1);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        uint64_t v22 = HIBYTE(v21) & 0xF;
        if ((v21 & 0x2000000000000000) == 0) {
          uint64_t v22 = v19 & 0xFFFFFFFFFFFFLL;
        }
        return !v22;
      }
      sub_10033AA5C(v9);
    }
    return 0;
  }
  return result;
}

uint64_t sub_10018B5BC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CharacterSet();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  char v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
  if (v7)
  {
    id v8 = v7;
    id v9 = [v8 string];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    v20[0] = v10;
    v20[1] = v12;
    static CharacterSet.whitespacesAndNewlines.getter();
    sub_100014344();
    uint64_t v13 = StringProtocol.trimmingCharacters(in:)();
    unint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v16 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0) {
      uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
    }
    if (v16) {
      return 1;
    }
  }
  uint64_t result = *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title);
  if (result)
  {
    id v18 = [result string:v4];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v19 = String.count.getter();
    swift_bridgeObjectRelease();
    return v19 > 0;
  }
  return result;
}

Swift::Int sub_10018B790()
{
  return Hasher._finalize()();
}

uint64_t sub_10018B87C()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_10018B950(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

Swift::Int sub_10018B998()
{
  return Hasher._finalize()();
}

uint64_t sub_10018BA80()
{
  if ((static UUID.== infix(_:_:)() & 1) == 0) {
    return 0;
  }

  return static Date.== infix(_:_:)();
}

uint64_t sub_10018BAE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v489 = a1;
  uint64_t v497 = sub_100010218((uint64_t *)&unk_10080F2A0);
  __chkstk_darwin(v497);
  v496 = (uint64_t *)((char *)&v448 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v495 = sub_100010218(&qword_1007F9E10);
  v568 = *(char **)(v495 - 8);
  __chkstk_darwin(v495);
  double v4 = (char *)&v448 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v500 = sub_100010218((uint64_t *)&unk_10080F2B0);
  __chkstk_darwin(v500);
  v499 = (uint64_t *)((char *)&v448 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v498 = sub_100010218((uint64_t *)&unk_100804090);
  uint64_t v6 = *(void *)(v498 - 8);
  __chkstk_darwin(v498);
  id v8 = (char *)&v448 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v530 = sub_100010218(&qword_1007FB8B0);
  __chkstk_darwin(v530);
  uint64_t v506 = (uint64_t)&v448 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v529 = (uint64_t)&v448 - v11;
  __chkstk_darwin(v12);
  uint64_t v457 = (uint64_t)&v448 - v13;
  __chkstk_darwin(v14);
  uint64_t v480 = (uint64_t)&v448 - v15;
  __chkstk_darwin(v16);
  v464 = (char *)&v448 - v17;
  __chkstk_darwin(v18);
  uint64_t v481 = (uint64_t)&v448 - v19;
  uint64_t v543 = type metadata accessor for Calendar();
  uint64_t v567 = *(void *)(v543 - 8);
  __chkstk_darwin(v543);
  v542 = (char *)&v448 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v541 = type metadata accessor for DateComponents();
  uint64_t v21 = *(void *)(v541 - 8);
  __chkstk_darwin(v541);
  v509 = (char *)&v448 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  v513 = (char *)&v448 - v24;
  __chkstk_darwin(v25);
  v488 = (char *)&v448 - v26;
  __chkstk_darwin(v27);
  v461 = (char *)&v448 - v28;
  __chkstk_darwin(v29);
  v473 = (char *)&v448 - v30;
  __chkstk_darwin(v31);
  v451 = (char *)&v448 - v32;
  __chkstk_darwin(v33);
  v468 = (char *)&v448 - v34;
  __chkstk_darwin(v35);
  v477 = (char *)&v448 - v36;
  __chkstk_darwin(v37);
  v455 = (char *)&v448 - v38;
  uint64_t v504 = sub_100010218((uint64_t *)&unk_10080F2C0);
  __chkstk_darwin(v504);
  v503 = (uint64_t *)((char *)&v448 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v502 = sub_100010218((uint64_t *)&unk_100804080);
  uint64_t v40 = *(void *)(v502 - 8);
  __chkstk_darwin(v502);
  uint64_t v42 = (char *)&v448 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for Date();
  uint64_t v44 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  v487 = (char *)&v448 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v46);
  v556 = (char *)&v448 - v47;
  __chkstk_darwin(v48);
  v450 = (char *)&v448 - v49;
  __chkstk_darwin(v50);
  v491 = (char *)&v448 - v51;
  __chkstk_darwin(v52);
  v510 = (char *)&v448 - v53;
  __chkstk_darwin(v54);
  v454 = (char *)&v448 - v55;
  __chkstk_darwin(v56);
  v493 = (char *)&v448 - v57;
  uint64_t v58 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v58 - 8);
  uint64_t v483 = (uint64_t)&v448 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v60);
  uint64_t v508 = (uint64_t)&v448 - v61;
  __chkstk_darwin(v62);
  v507 = (char *)&v448 - v63;
  __chkstk_darwin(v64);
  v505 = (char *)&v448 - v65;
  __chkstk_darwin(v66);
  uint64_t v526 = (uint64_t)&v448 - v67;
  __chkstk_darwin(v68);
  v525 = (char *)&v448 - v69;
  __chkstk_darwin(v70);
  uint64_t v512 = (uint64_t)&v448 - v71;
  __chkstk_darwin(v72);
  v511 = (char *)&v448 - v73;
  __chkstk_darwin(v74);
  uint64_t v524 = (uint64_t)&v448 - v75;
  __chkstk_darwin(v76);
  uint64_t v486 = (uint64_t)&v448 - v77;
  __chkstk_darwin(v78);
  v485 = (char *)&v448 - v79;
  __chkstk_darwin(v80);
  uint64_t v547 = (uint64_t)&v448 - v81;
  __chkstk_darwin(v82);
  uint64_t v84 = (char *)&v448 - v83;
  __chkstk_darwin(v85);
  uint64_t v550 = (uint64_t)&v448 - v86;
  __chkstk_darwin(v87);
  uint64_t v456 = (uint64_t)&v448 - v88;
  __chkstk_darwin(v89);
  uint64_t v460 = (uint64_t)&v448 - v90;
  __chkstk_darwin(v91);
  v459 = (char *)&v448 - v92;
  __chkstk_darwin(v93);
  uint64_t v469 = (uint64_t)&v448 - v94;
  __chkstk_darwin(v95);
  uint64_t v479 = (uint64_t)&v448 - v96;
  __chkstk_darwin(v97);
  uint64_t v458 = (uint64_t)&v448 - v98;
  __chkstk_darwin(v99);
  uint64_t v472 = (uint64_t)&v448 - v100;
  __chkstk_darwin(v101);
  v471 = (char *)&v448 - v102;
  __chkstk_darwin(v103);
  v470 = (char *)&v448 - v104;
  __chkstk_darwin(v105);
  uint64_t v449 = (uint64_t)&v448 - v106;
  __chkstk_darwin(v107);
  v448 = (char *)&v448 - v108;
  __chkstk_darwin(v109);
  uint64_t v484 = (uint64_t)&v448 - v110;
  __chkstk_darwin(v111);
  uint64_t v552 = (uint64_t)&v448 - v112;
  __chkstk_darwin(v113);
  uint64_t v551 = (uint64_t)&v448 - v114;
  __chkstk_darwin(v115);
  v463 = (char *)&v448 - v116;
  __chkstk_darwin(v117);
  uint64_t v467 = (uint64_t)&v448 - v118;
  __chkstk_darwin(v119);
  v466 = (char *)&v448 - v120;
  __chkstk_darwin(v121);
  v462 = (char *)&v448 - v122;
  __chkstk_darwin(v123);
  uint64_t v478 = (uint64_t)&v448 - v124;
  __chkstk_darwin(v125);
  uint64_t v465 = (uint64_t)&v448 - v126;
  __chkstk_darwin(v127);
  uint64_t v476 = (uint64_t)&v448 - v128;
  __chkstk_darwin(v129);
  v475 = (char *)&v448 - v130;
  __chkstk_darwin(v131);
  v474 = (char *)&v448 - v132;
  __chkstk_darwin(v133);
  uint64_t v453 = (uint64_t)&v448 - v134;
  __chkstk_darwin(v135);
  v452 = (char *)&v448 - v136;
  __chkstk_darwin(v137);
  uint64_t v482 = (uint64_t)&v448 - v138;
  __chkstk_darwin(v139);
  uint64_t v554 = (uint64_t)&v448 - v140;
  __chkstk_darwin(v141);
  uint64_t v553 = (uint64_t)&v448 - v142;
  __n128 v144 = __chkstk_darwin(v143);
  id v145 = *(void (**)(__n128))(v44 + 56);
  uint64_t v555 = (uint64_t)&v448 - v146;
  uint64_t v546 = v43;
  v564 = v145;
  uint64_t v565 = v44 + 56;
  v145(v144);
  uint64_t v147 = (uint64_t *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  uint64_t v148 = *v147;
  unint64_t v149 = (unint64_t)*v147 >> 62;
  uint64_t v561 = *v147;
  if (!v149)
  {
    uint64_t v150 = *(char **)((v148 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v150) {
      goto LABEL_3;
    }
LABEL_153:
    swift_bridgeObjectRelease();
    LOBYTE(v153) = 3;
    goto LABEL_154;
  }
  swift_bridgeObjectRetain();
  uint64_t v150 = (char *)_CocoaArrayWrapper.endIndex.getter();
  if (!v150) {
    goto LABEL_153;
  }
LABEL_3:
  int v540 = 0;
  unint64_t v151 = 0;
  uint64_t v152 = v561;
  unint64_t v559 = v561 & 0xC000000000000001;
  uint64_t v539 = v561 & 0xFFFFFFFFFFFFFF8;
  v494 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 56);
  unint64_t v566 = v44 + 48;
  v562 = (void (**)(uint64_t, uint64_t, uint64_t))(v44 + 32);
  v492 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
  v490 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v568 + 56);
  v501 = (void (**)(char *, uint64_t, uint64_t))(v44 + 16);
  unsigned int v538 = enum case for Calendar.Component.year(_:);
  unsigned int v537 = enum case for Calendar.Component.month(_:);
  unsigned int v536 = enum case for Calendar.Component.day(_:);
  v535 = (void (**)(char *, uint64_t))(v567 + 8);
  v533 = (void (**)(char *, uint64_t))(v21 + 8);
  v531 = (void (**)(char *, uint64_t))(v44 + 8);
  uint64_t v153 = 3;
  long long v528 = xmmword_1006D6A80;
  long long v534 = xmmword_1006D7C30;
  v549 = v4;
  uint64_t v154 = v546;
  v544 = v8;
  v545 = v42;
  uint64_t v155 = v564;
  v548 = v84;
  v560 = v150;
LABEL_4:
  uint64_t v532 = v153;
  unint64_t v156 = v151;
  while (1)
  {
    if (v559)
    {
      uint64_t v157 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v156 >= *(void *)(v539 + 16)) {
        goto LABEL_144;
      }
      uint64_t v157 = (char *)*(id *)(v152 + 8 * v156 + 32);
    }
    uint64_t v150 = v157;
    if (__OFADD__(v156, 1))
    {
      __break(1u);
LABEL_144:
      __break(1u);
      goto LABEL_145;
    }
    v563 = (char *)(v156 + 1);
    _s10PhotoAssetCMa(0);
    uint64_t v158 = swift_dynamicCastClass();
    uint64_t v567 = v566 & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
    v568 = v150;
    if (!v158) {
      goto LABEL_28;
    }
    uint64_t v159 = v158;
    uint64_t v160 = OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata;
    if (*(void *)(v158 + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata))
    {
      uint64_t v161 = v568;
    }
    else
    {
      uint64_t v162 = *(void **)(v158 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
      if (v162)
      {
        uint64_t v163 = v568;
        id v164 = [v162 assetMetaData];
        if (v164)
        {
          uint64_t v165 = v164;
          uint64_t v166 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v168 = v167;

          uint64_t v169 = v503;
          uint64_t *v503 = v166;
          v169[1] = v168;
          uint64_t v42 = v545;
          id v8 = v544;
          swift_storeEnumTagMultiPayload();
          sub_100010218((uint64_t *)&unk_10080F2E0);
          uint64_t v170 = swift_allocObject();
          (*v494)(v170 + *(void *)(*(void *)v170 + 104), 1, 1, v502);
          *(_OWORD *)(v170 + *(void *)(*(void *)v170 + 112)) = v528;
          uint64_t v171 = (uint64_t)v169;
          uint64_t v155 = v564;
          sub_10002C4EC(v171, v170 + *(void *)(*(void *)v170 + 120), (uint64_t *)&unk_10080F2C0);
          *(void *)(v159 + v160) = v170;
          swift_release();
        }
        if (!*(void *)(v159 + v160))
        {
LABEL_23:
          uint64_t v178 = _s10PhotoAssetC9PhotoDataVMa(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v178 - 8) + 56))(v42, 1, 1, v178);
LABEL_24:
          sub_10001457C((uint64_t)v42, (uint64_t *)&unk_100804080);
          uint64_t v174 = v554;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v155)(v554, 1, 1, v154);
          goto LABEL_25;
        }
      }
      else
      {
        uint64_t v177 = v568;
        if (!*(void *)(v159 + v160)) {
          goto LABEL_23;
        }
      }
    }
    swift_retain();
    sub_1000395AC((uint64_t)v42);
    swift_release();
    uint64_t v172 = _s10PhotoAssetC9PhotoDataVMa(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v172 - 8) + 48))(v42, 1, v172) == 1) {
      goto LABEL_24;
    }
    uint64_t v173 = (uint64_t)&v42[*(int *)(v172 + 20)];
    uint64_t v174 = v554;
    sub_10001B220(v173, v554, (uint64_t *)&unk_1007FC470);
    sub_1001905C4((uint64_t)v42, _s10PhotoAssetC9PhotoDataVMa);
    uint64_t v175 = *(void (**)(uint64_t, uint64_t, uint64_t))v566;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v566)(v174, 1, v154) != 1)
    {
      uint64_t v176 = v553;
      (*v562)(v553, v174, v154);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v564)(v176, 0, 1, v154);
      goto LABEL_26;
    }
LABEL_25:
    uint64_t v179 = v159 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionDate;
    swift_beginAccess();
    uint64_t v180 = v179;
    uint64_t v176 = v553;
    sub_10001B220(v180, v553, (uint64_t *)&unk_1007FC470);
    sub_10001457C(v174, (uint64_t *)&unk_1007FC470);
    uint64_t v175 = *(void (**)(uint64_t, uint64_t, uint64_t))v566;
LABEL_26:
    unsigned int v181 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v175)(v176, 1, v154);
    uint64_t v150 = v568;
    if (v181 != 1)
    {
      v558 = *v562;
      v558((uint64_t)v493, v176, v154);
      uint64_t v311 = 1;
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v175)(v555, 1, v154))
      {
        v312 = v454;
        (*v501)(v454, v555, v154);
        v313 = v542;
        static Calendar.current.getter();
        sub_100010218(&qword_1007FB058);
        uint64_t v314 = type metadata accessor for Calendar.Component();
        uint64_t v315 = *(void *)(v314 - 8);
        uint64_t v316 = *(void *)(v315 + 72);
        unint64_t v317 = (*(unsigned __int8 *)(v315 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v315 + 80);
        uint64_t v318 = swift_allocObject();
        *(_OWORD *)(v318 + 16) = v534;
        unint64_t v319 = v318 + v317;
        v320 = *(void (**)(unint64_t, void, uint64_t))(v315 + 104);
        v320(v319, v538, v314);
        v320(v319 + v316, v537, v314);
        uint64_t v154 = v546;
        v320(v319 + 2 * v316, v536, v314);
        sub_1000F5AEC(v318);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        v321 = v455;
        Calendar.dateComponents(_:from:)();
        swift_bridgeObjectRelease();
        v322 = *v535;
        uint64_t v323 = v543;
        (*v535)(v313, v543);
        static Calendar.current.getter();
        uint64_t v324 = (uint64_t)v452;
        Calendar.date(from:)();
        v322(v313, v323);
        uint64_t v325 = v453;
        sub_10001B220(v324, v453, (uint64_t *)&unk_1007FC470);
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v175)(v325, 1, v154);
        if (result == 1) {
          goto LABEL_162;
        }
        sub_10001457C(v324, (uint64_t *)&unk_1007FC470);
        (*v533)(v321, v541);
        v558(v482, v325, v154);
        (*v531)(v312, v154);
        uint64_t v311 = 0;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v564)(v482, v311, 1, v154);
      v326 = v542;
      static Calendar.current.getter();
      uint64_t v327 = sub_100010218(&qword_1007FB058);
      uint64_t v328 = type metadata accessor for Calendar.Component();
      uint64_t v329 = *(void *)(v328 - 8);
      uint64_t v330 = *(void *)(v329 + 72);
      uint64_t v331 = *(unsigned __int8 *)(v329 + 80);
      uint64_t v332 = (v331 + 32) & ~v331;
      uint64_t v522 = v327;
      v518 = (void (*)(char *, uint64_t))(v332 + 3 * v330);
      uint64_t v517 = v331 | 7;
      uint64_t v333 = swift_allocObject();
      *(_OWORD *)(v333 + 16) = v534;
      v519 = (char *)v332;
      v334 = *(char **)(v329 + 104);
      ((void (*)(uint64_t, void, uint64_t))v334)(v333 + v332, v538, v328);
      uint64_t v523 = v330;
      ((void (*)(uint64_t, void, uint64_t))v334)(v333 + v332 + v330, v537, v328);
      uint64_t v527 = 2 * v330;
      v521 = v334;
      ((void (*)(uint64_t, void, uint64_t))v334)(v333 + v332 + 2 * v330, v536, v328);
      sub_1000F5AEC(v333);
      swift_setDeallocating();
      v557 = (void (*)(void, void, void))v328;
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v335 = v477;
      Calendar.dateComponents(_:from:)();
      swift_bridgeObjectRelease();
      v336 = *v535;
      uint64_t v337 = v543;
      (*v535)(v326, v543);
      static Calendar.current.getter();
      uint64_t v338 = (uint64_t)v475;
      Calendar.date(from:)();
      v520 = v336;
      v336(v326, v337);
      uint64_t v339 = v476;
      sub_10001B220(v338, v476, (uint64_t *)&unk_1007FC470);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v175)(v339, 1, v154);
      if (result == 1) {
        goto LABEL_158;
      }
      sub_10001457C(v338, (uint64_t *)&unk_1007FC470);
      v516 = *v533;
      v516(v335, v541);
      uint64_t v340 = (uint64_t)v474;
      v558((uint64_t)v474, v339, v154);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v564)(v340, 0, 1, v154);
      uint64_t v341 = v481;
      uint64_t v342 = v481 + *(int *)(v530 + 48);
      uint64_t v343 = v482;
      sub_10001B220(v482, v481, (uint64_t *)&unk_1007FC470);
      sub_10001B220(v340, v342, (uint64_t *)&unk_1007FC470);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v175)(v341, 1, v154) == 1)
      {
        sub_10001457C(v340, (uint64_t *)&unk_1007FC470);
        sub_10001457C(v343, (uint64_t *)&unk_1007FC470);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v175)(v342, 1, v154) == 1)
        {
          sub_10001457C(v481, (uint64_t *)&unk_1007FC470);
          uint64_t v150 = v560;
          v344 = v568;
          goto LABEL_107;
        }
      }
      else
      {
        uint64_t v382 = v465;
        sub_10001B220(v341, v465, (uint64_t *)&unk_1007FC470);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v175)(v342, 1, v154) != 1)
        {
          v386 = v510;
          v558((uint64_t)v510, v342, v154);
          sub_10018B950((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
          LODWORD(v515) = dispatch thunk of static Equatable.== infix(_:_:)();
          v387 = *v531;
          (*v531)(v386, v154);
          sub_10001457C(v340, (uint64_t *)&unk_1007FC470);
          sub_10001457C(v343, (uint64_t *)&unk_1007FC470);
          v387((char *)v382, v154);
          sub_10001457C(v481, (uint64_t *)&unk_1007FC470);
          uint64_t v150 = v560;
          v344 = v568;
          if (v515)
          {
LABEL_107:
            if ((v540 & 1) == 0)
            {
              uint64_t v154 = v546;
              (*v531)(v493, v546);

              uint64_t v153 = 2;
              id v8 = v544;
              uint64_t v155 = v564;
              goto LABEL_120;
            }
LABEL_110:
            uint64_t v388 = 1;
            uint64_t v154 = v546;
            if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v175)(v555, 1, v546))
            {
              v389 = v510;
              (*v501)(v510, v555, v154);
              sub_1002AA5EC(v478);
              (*v531)(v389, v154);
              uint64_t v388 = 0;
            }
            ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v564)(v478, v388, 1, v154);
            v390 = v542;
            static Calendar.current.getter();
            uint64_t v391 = swift_allocObject();
            *(_OWORD *)(v391 + 16) = v534;
            v392 = &v519[v391];
            v393 = v557;
            v394 = (void (*)(char *, void, void))v521;
            ((void (*)(char *, void, void))v521)(&v519[v391], v538, v557);
            v394(&v392[v523], v537, v393);
            v394(&v392[v527], v536, v393);
            sub_1000F5AEC(v391);
            swift_setDeallocating();
            swift_arrayDestroy();
            swift_deallocClassInstance();
            v395 = v468;
            Calendar.dateComponents(_:from:)();
            swift_bridgeObjectRelease();
            uint64_t v396 = v543;
            v397 = v520;
            v520(v390, v543);
            static Calendar.current.getter();
            uint64_t v398 = (uint64_t)v466;
            Calendar.date(from:)();
            v397(v390, v396);
            uint64_t v399 = v467;
            sub_10001B220(v398, v467, (uint64_t *)&unk_1007FC470);
            uint64_t v400 = v567;
            uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v175)(v399, 1, v154);
            if (result == 1) {
              goto LABEL_160;
            }
            sub_10001457C(v398, (uint64_t *)&unk_1007FC470);
            v516(v395, v541);
            unint64_t v156 = (unint64_t)v462;
            v558((uint64_t)v462, v399, v154);
            ((void (*)(unint64_t, void, uint64_t, uint64_t))v564)(v156, 0, 1, v154);
            uint64_t v42 = v464;
            uint64_t v401 = (uint64_t)&v464[*(int *)(v530 + 48)];
            sub_10001B220(v478, (uint64_t)v464, (uint64_t *)&unk_1007FC470);
            sub_10001B220(v156, v401, (uint64_t *)&unk_1007FC470);
            unsigned int v402 = ((uint64_t (*)(char *, uint64_t, uint64_t))v175)(v42, 1, v154);
            uint64_t v567 = v400;
            id v8 = v544;
            uint64_t v150 = v463;
            if (v402 == 1)
            {
              v403 = v568;

              sub_10001457C(v156, (uint64_t *)&unk_1007FC470);
              sub_10001457C(v478, (uint64_t *)&unk_1007FC470);
              unsigned int v404 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v175)(v401, 1, v154);
              uint64_t v155 = v564;
              if (v404 == 1)
              {
                sub_10001457C((uint64_t)v42, (uint64_t *)&unk_1007FC470);
                v405 = v493;
LABEL_119:
                uint64_t v412 = v555;
                sub_10001457C(v555, (uint64_t *)&unk_1007FC470);
                v558(v412, (uint64_t)v405, v154);
                ((void (*)(uint64_t, void, uint64_t, uint64_t))v155)(v412, 0, 1, v154);
                uint64_t v153 = 0;
                uint64_t v150 = v560;
LABEL_120:
                int v540 = 1;
                unint64_t v151 = (unint64_t)v563;
                uint64_t v42 = v545;
                uint64_t v152 = v561;
                if (v563 != v150) {
                  goto LABEL_4;
                }
LABEL_142:
                swift_bridgeObjectRelease();
LABEL_154:
                uint64_t v445 = v555;
                uint64_t v446 = v489;
                sub_10001B220(v555, v489, (uint64_t *)&unk_1007FC470);
                uint64_t v447 = _s9PhotoDateVMa(0);
                *(unsigned char *)(v446 + *(int *)(v447 + 20)) = v153;
                (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v447 - 8) + 56))(v446, 0, 1, v447);
                return sub_10001457C(v445, (uint64_t *)&unk_1007FC470);
              }
              goto LABEL_146;
            }
            sub_10001B220((uint64_t)v42, (uint64_t)v463, (uint64_t *)&unk_1007FC470);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v175)(v401, 1, v154) != 1)
            {
              v406 = v510;
              v558((uint64_t)v510, v401, v154);
              sub_10018B950((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
              uint64_t v407 = v156;
              v408 = v150;
              char v409 = dispatch thunk of static Equatable.== infix(_:_:)();
              v410 = v568;

              v411 = *v531;
              (*v531)(v406, v154);
              sub_10001457C(v407, (uint64_t *)&unk_1007FC470);
              sub_10001457C(v478, (uint64_t *)&unk_1007FC470);
              v411(v408, v154);
              sub_10001457C((uint64_t)v42, (uint64_t *)&unk_1007FC470);
              uint64_t v155 = v564;
              v405 = v493;
              if (v409) {
                goto LABEL_119;
              }
              v411(v493, v154);
LABEL_150:
              swift_bridgeObjectRelease();
              uint64_t v444 = v555;
              sub_10001457C(v555, (uint64_t *)&unk_1007FC470);
              ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v155)(v444, 1, 1, v154);
              goto LABEL_137;
            }
LABEL_145:
            v442 = v568;

            sub_10001457C(v156, (uint64_t *)&unk_1007FC470);
            sub_10001457C(v478, (uint64_t *)&unk_1007FC470);
            (*v531)(v150, v154);
            uint64_t v155 = v564;
LABEL_146:
            sub_10001457C((uint64_t)v42, &qword_1007FB8B0);
            (*v531)(v493, v154);
            goto LABEL_150;
          }
LABEL_109:
          if ((v540 & 1) == 0)
          {

            uint64_t v154 = v546;
            id v8 = v544;
            v405 = v493;
            uint64_t v155 = v564;
            goto LABEL_119;
          }
          goto LABEL_110;
        }
        sub_10001457C(v340, (uint64_t *)&unk_1007FC470);
        sub_10001457C(v343, (uint64_t *)&unk_1007FC470);
        (*v531)((char *)v382, v154);
      }
      sub_10001457C(v481, &qword_1007FB8B0);
      v344 = v568;
      goto LABEL_109;
    }

    sub_10001457C(v176, (uint64_t *)&unk_1007FC470);
    uint64_t v155 = v564;
LABEL_28:
    _s14LivePhotoAssetCMa(0);
    uint64_t v182 = swift_dynamicCastClass();
    if (!v182) {
      goto LABEL_44;
    }
    uint64_t v183 = v182;
    uint64_t v184 = OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata;
    if (*(void *)(v182 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata))
    {
      uint64_t v185 = v568;
    }
    else
    {
      uint64_t v186 = *(void **)(v182 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
      if (v186)
      {
        uint64_t v187 = v568;
        id v188 = [v186 assetMetaData];
        if (v188)
        {
          uint64_t v189 = v188;
          uint64_t v190 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v192 = v191;

          uint64_t v193 = v499;
          uint64_t *v499 = v190;
          v193[1] = v192;
          uint64_t v42 = v545;
          id v8 = v544;
          swift_storeEnumTagMultiPayload();
          sub_100010218(&qword_1007F99C0);
          uint64_t v194 = swift_allocObject();
          (*v492)(v194 + *(void *)(*(void *)v194 + 104), 1, 1, v498);
          *(_OWORD *)(v194 + *(void *)(*(void *)v194 + 112)) = v528;
          uint64_t v195 = (uint64_t)v193;
          uint64_t v154 = v546;
          sub_10002C4EC(v195, v194 + *(void *)(*(void *)v194 + 120), (uint64_t *)&unk_10080F2B0);
          *(void *)(v183 + v184) = v194;
          swift_release();
        }
        if (!*(void *)(v183 + v184))
        {
LABEL_39:
          uint64_t v202 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v202 - 8) + 56))(v8, 1, 1, v202);
LABEL_40:
          sub_10001457C((uint64_t)v8, (uint64_t *)&unk_100804090);
          uint64_t v198 = v552;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v155)(v552, 1, 1, v154);
          goto LABEL_41;
        }
      }
      else
      {
        uint64_t v201 = v568;
        if (!*(void *)(v183 + v184)) {
          goto LABEL_39;
        }
      }
    }
    swift_retain();
    sub_1000398E0((uint64_t)v8);
    swift_release();
    uint64_t v196 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v196 - 8) + 48))(v8, 1, v196) == 1) {
      goto LABEL_40;
    }
    uint64_t v197 = (uint64_t)&v8[*(int *)(v196 + 20)];
    uint64_t v198 = v552;
    sub_10001B220(v197, v552, (uint64_t *)&unk_1007FC470);
    sub_1001905C4((uint64_t)v8, _s14LivePhotoAssetC13LivePhotoDataVMa);
    uint64_t v199 = *(void (**)(uint64_t, uint64_t, uint64_t))v566;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v566)(v198, 1, v154) != 1)
    {
      uint64_t v200 = v551;
      (*v562)(v551, v198, v154);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v564)(v200, 0, 1, v154);
      goto LABEL_42;
    }
LABEL_41:
    uint64_t v203 = v183 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionDate;
    swift_beginAccess();
    uint64_t v204 = v203;
    uint64_t v200 = v551;
    sub_10001B220(v204, v551, (uint64_t *)&unk_1007FC470);
    sub_10001457C(v198, (uint64_t *)&unk_1007FC470);
    uint64_t v199 = *(void (**)(uint64_t, uint64_t, uint64_t))v566;
LABEL_42:
    unsigned int v205 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v199)(v200, 1, v154);
    uint64_t v150 = v568;
    if (v205 != 1)
    {
      v558 = *v562;
      v558((uint64_t)v491, v200, v154);
      uint64_t v345 = 1;
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v199)(v555, 1, v154))
      {
        v346 = v450;
        (*v501)(v450, v555, v154);
        v347 = v542;
        static Calendar.current.getter();
        sub_100010218(&qword_1007FB058);
        uint64_t v348 = type metadata accessor for Calendar.Component();
        uint64_t v349 = *(void *)(v348 - 8);
        uint64_t v350 = *(void *)(v349 + 72);
        unint64_t v351 = (*(unsigned __int8 *)(v349 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v349 + 80);
        uint64_t v352 = swift_allocObject();
        *(_OWORD *)(v352 + 16) = v534;
        unint64_t v353 = v352 + v351;
        v354 = *(void (**)(unint64_t, void, uint64_t))(v349 + 104);
        v354(v353, v538, v348);
        v354(v353 + v350, v537, v348);
        uint64_t v154 = v546;
        v354(v353 + 2 * v350, v536, v348);
        sub_1000F5AEC(v352);
        swift_setDeallocating();
        swift_arrayDestroy();
        swift_deallocClassInstance();
        v355 = v451;
        Calendar.dateComponents(_:from:)();
        swift_bridgeObjectRelease();
        v356 = *v535;
        uint64_t v357 = v543;
        (*v535)(v347, v543);
        static Calendar.current.getter();
        uint64_t v358 = (uint64_t)v448;
        Calendar.date(from:)();
        v356(v347, v357);
        uint64_t v359 = v449;
        sub_10001B220(v358, v449, (uint64_t *)&unk_1007FC470);
        uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v199)(v359, 1, v154);
        if (result == 1) {
          goto LABEL_163;
        }
        sub_10001457C(v358, (uint64_t *)&unk_1007FC470);
        (*v533)(v355, v541);
        v558(v484, v359, v154);
        (*v531)(v346, v154);
        uint64_t v345 = 0;
      }
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v564)(v484, v345, 1, v154);
      v360 = v542;
      static Calendar.current.getter();
      uint64_t v361 = sub_100010218(&qword_1007FB058);
      uint64_t v362 = type metadata accessor for Calendar.Component();
      uint64_t v363 = *(void *)(v362 - 8);
      uint64_t v364 = *(void *)(v363 + 72);
      uint64_t v365 = *(unsigned __int8 *)(v363 + 80);
      uint64_t v366 = (v365 + 32) & ~v365;
      uint64_t v522 = v361;
      v518 = (void (*)(char *, uint64_t))(v366 + 3 * v364);
      uint64_t v517 = v365 | 7;
      uint64_t v367 = swift_allocObject();
      *(_OWORD *)(v367 + 16) = v534;
      v519 = (char *)v366;
      v368 = *(char **)(v363 + 104);
      ((void (*)(uint64_t, void, uint64_t))v368)(v367 + v366, v538, v362);
      uint64_t v523 = v364;
      ((void (*)(uint64_t, void, uint64_t))v368)(v367 + v366 + v364, v537, v362);
      uint64_t v527 = 2 * v364;
      v521 = v368;
      ((void (*)(uint64_t, void, uint64_t))v368)(v367 + v366 + 2 * v364, v536, v362);
      sub_1000F5AEC(v367);
      swift_setDeallocating();
      v557 = (void (*)(void, void, void))v362;
      swift_arrayDestroy();
      swift_deallocClassInstance();
      v369 = v473;
      Calendar.dateComponents(_:from:)();
      swift_bridgeObjectRelease();
      v370 = *v535;
      uint64_t v371 = v543;
      (*v535)(v360, v543);
      static Calendar.current.getter();
      uint64_t v372 = (uint64_t)v471;
      Calendar.date(from:)();
      v520 = v370;
      v370(v360, v371);
      uint64_t v373 = v472;
      sub_10001B220(v372, v472, (uint64_t *)&unk_1007FC470);
      uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v199)(v373, 1, v154);
      if (result == 1) {
        goto LABEL_159;
      }
      sub_10001457C(v372, (uint64_t *)&unk_1007FC470);
      v516 = *v533;
      v516(v369, v541);
      uint64_t v374 = (uint64_t)v470;
      v558((uint64_t)v470, v373, v154);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v564)(v374, 0, 1, v154);
      uint64_t v375 = v480;
      uint64_t v376 = v480 + *(int *)(v530 + 48);
      uint64_t v377 = v484;
      sub_10001B220(v484, v480, (uint64_t *)&unk_1007FC470);
      sub_10001B220(v374, v376, (uint64_t *)&unk_1007FC470);
      unsigned int v378 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v199)(v375, 1, v154);
      uint64_t v42 = v545;
      if (v378 == 1)
      {
        sub_10001457C(v374, (uint64_t *)&unk_1007FC470);
        sub_10001457C(v377, (uint64_t *)&unk_1007FC470);
        unsigned int v379 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v199)(v376, 1, v154);
        uint64_t v380 = v479;
        if (v379 == 1)
        {
          sub_10001457C(v480, (uint64_t *)&unk_1007FC470);
          uint64_t v150 = v560;
          v381 = v568;
          goto LABEL_123;
        }
      }
      else
      {
        uint64_t v383 = v458;
        sub_10001B220(v375, v458, (uint64_t *)&unk_1007FC470);
        unsigned int v384 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v199)(v376, 1, v154);
        uint64_t v380 = v479;
        if (v384 != 1)
        {
          v413 = v510;
          v558((uint64_t)v510, v376, v154);
          sub_10018B950((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
          LODWORD(v515) = dispatch thunk of static Equatable.== infix(_:_:)();
          v414 = *v531;
          (*v531)(v413, v154);
          sub_10001457C(v374, (uint64_t *)&unk_1007FC470);
          sub_10001457C(v484, (uint64_t *)&unk_1007FC470);
          v414((char *)v383, v154);
          uint64_t v380 = v479;
          sub_10001457C(v480, (uint64_t *)&unk_1007FC470);
          uint64_t v150 = v560;
          v381 = v568;
          if (v515)
          {
LABEL_123:
            if ((v540 & 1) == 0)
            {
              uint64_t v154 = v546;
              (*v531)(v491, v546);

              uint64_t v153 = 2;
              id v8 = v544;
              uint64_t v155 = v564;
LABEL_133:
              int v540 = 1;
              unint64_t v151 = (unint64_t)v563;
              uint64_t v152 = v561;
              if (v563 != v150) {
                goto LABEL_4;
              }
              goto LABEL_142;
            }
            goto LABEL_124;
          }
LABEL_104:
          if ((v540 & 1) == 0)
          {

            uint64_t v154 = v546;
            id v8 = v544;
            v385 = v491;
            uint64_t v155 = v564;
LABEL_132:
            uint64_t v438 = v555;
            sub_10001457C(v555, (uint64_t *)&unk_1007FC470);
            v558(v438, (uint64_t)v385, v154);
            ((void (*)(uint64_t, void, uint64_t, uint64_t))v155)(v438, 0, 1, v154);
            uint64_t v153 = 0;
            uint64_t v150 = v560;
            goto LABEL_133;
          }
LABEL_124:
          uint64_t v415 = 1;
          uint64_t v154 = v546;
          if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v199)(v555, 1, v546))
          {
            v416 = v510;
            (*v501)(v510, v555, v154);
            sub_1002AA5EC(v380);
            (*v531)(v416, v154);
            uint64_t v415 = 0;
          }
          v417 = v564;
          ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v564)(v380, v415, 1, v154);
          v418 = v542;
          static Calendar.current.getter();
          uint64_t v419 = swift_allocObject();
          *(_OWORD *)(v419 + 16) = v534;
          v420 = &v519[v419];
          v421 = v557;
          v422 = (void (*)(char *, void, void))v521;
          ((void (*)(char *, void, void))v521)(&v519[v419], v538, v557);
          v422(&v420[v523], v537, v421);
          v422(&v420[v527], v536, v421);
          sub_1000F5AEC(v419);
          swift_setDeallocating();
          swift_arrayDestroy();
          swift_deallocClassInstance();
          v423 = v461;
          Calendar.dateComponents(_:from:)();
          swift_bridgeObjectRelease();
          uint64_t v424 = v543;
          v425 = v520;
          v520(v418, v543);
          static Calendar.current.getter();
          uint64_t v426 = (uint64_t)v459;
          Calendar.date(from:)();
          v425(v418, v424);
          uint64_t v427 = v460;
          sub_10001B220(v426, v460, (uint64_t *)&unk_1007FC470);
          uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v199)(v427, 1, v154);
          if (result == 1) {
            goto LABEL_161;
          }
          sub_10001457C(v426, (uint64_t *)&unk_1007FC470);
          v516(v423, v541);
          uint64_t v428 = v469;
          v558(v469, v427, v154);
          ((void (*)(uint64_t, void, uint64_t, uint64_t))v417)(v428, 0, 1, v154);
          uint64_t v429 = v457;
          uint64_t v430 = v457 + *(int *)(v530 + 48);
          uint64_t v431 = v479;
          sub_10001B220(v479, v457, (uint64_t *)&unk_1007FC470);
          sub_10001B220(v428, v430, (uint64_t *)&unk_1007FC470);
          unsigned int v432 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v199)(v429, 1, v154);
          id v8 = v544;
          uint64_t v433 = v456;
          if (v432 == 1)
          {
            v434 = v568;

            sub_10001457C(v428, (uint64_t *)&unk_1007FC470);
            sub_10001457C(v431, (uint64_t *)&unk_1007FC470);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v199)(v430, 1, v154) == 1)
            {
              sub_10001457C(v429, (uint64_t *)&unk_1007FC470);
              uint64_t v42 = v545;
              uint64_t v155 = v564;
              v385 = v491;
              goto LABEL_132;
            }
          }
          else
          {
            sub_10001B220(v429, v456, (uint64_t *)&unk_1007FC470);
            if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v199)(v430, 1, v154) != 1)
            {
              v435 = v510;
              v558((uint64_t)v510, v430, v154);
              sub_10018B950((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
              char v436 = dispatch thunk of static Equatable.== infix(_:_:)();
              v437 = v568;

              v306 = *v531;
              (*v531)(v435, v154);
              sub_10001457C(v469, (uint64_t *)&unk_1007FC470);
              sub_10001457C(v431, (uint64_t *)&unk_1007FC470);
              v306((char *)v433, v154);
              sub_10001457C(v429, (uint64_t *)&unk_1007FC470);
              uint64_t v42 = v545;
              uint64_t v155 = v564;
              v385 = v491;
              if (v436) {
                goto LABEL_132;
              }
LABEL_151:
              v440 = v385;
              goto LABEL_141;
            }
            v443 = v568;

            sub_10001457C(v469, (uint64_t *)&unk_1007FC470);
            sub_10001457C(v431, (uint64_t *)&unk_1007FC470);
            (*v531)((char *)v433, v154);
          }
          sub_10001457C(v429, &qword_1007FB8B0);
          v306 = *v531;
          uint64_t v155 = v564;
          v385 = v491;
          goto LABEL_151;
        }
        sub_10001457C(v374, (uint64_t *)&unk_1007FC470);
        sub_10001457C(v484, (uint64_t *)&unk_1007FC470);
        (*v531)((char *)v383, v154);
      }
      sub_10001457C(v480, &qword_1007FB8B0);
      v381 = v568;
      goto LABEL_104;
    }

    sub_10001457C(v200, (uint64_t *)&unk_1007FC470);
    uint64_t v155 = v564;
LABEL_44:
    _s10VideoAssetCMa(0);
    uint64_t v206 = swift_dynamicCastClass();
    if (!v206)
    {

      goto LABEL_81;
    }
    uint64_t v207 = v206;
    uint64_t v208 = OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata;
    if (*(void *)(v206 + OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata))
    {
      uint64_t v209 = v42;
      uint64_t v210 = v155;
      uint64_t v211 = v568;
    }
    else
    {
      uint64_t v212 = *(void **)(v206 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
      if (v212)
      {
        uint64_t v213 = v568;
        id v214 = [v212 assetMetaData];
        if (v214)
        {
          uint64_t v215 = v214;
          uint64_t v216 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v218 = v217;

          uint64_t v219 = v496;
          uint64_t *v496 = v216;
          v219[1] = v218;
          uint64_t v42 = v545;
          id v8 = v544;
          swift_storeEnumTagMultiPayload();
          sub_100010218((uint64_t *)&unk_10080F2D0);
          uint64_t v220 = swift_allocObject();
          (*v490)(v220 + *(void *)(*(void *)v220 + 104), 1, 1, v495);
          *(_OWORD *)(v220 + *(void *)(*(void *)v220 + 112)) = v528;
          uint64_t v221 = (uint64_t)v219;
          uint64_t v154 = v546;
          sub_10002C4EC(v221, v220 + *(void *)(*(void *)v220 + 120), (uint64_t *)&unk_10080F2A0);
          *(void *)(v207 + v208) = v220;
          swift_release();
        }
      }
      else
      {
        unint64_t v222 = v568;
      }
      uint64_t v209 = v42;
      uint64_t v210 = v155;
      if (!*(void *)(v207 + v208))
      {
        uint64_t v229 = _s10VideoAssetC9VideoDataVMa(0);
        uint64_t v223 = (uint64_t)v549;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v229 - 8) + 56))(v549, 1, 1, v229);
        uint64_t v226 = (uint64_t)v548;
LABEL_57:
        sub_10001457C(v223, &qword_1007F9E10);
        uint64_t v155 = v210;
        ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v210)(v226, 1, 1, v154);
        goto LABEL_58;
      }
    }
    swift_retain();
    uint64_t v223 = (uint64_t)v549;
    sub_100039C14((uint64_t)v549);
    swift_release();
    uint64_t v224 = _s10VideoAssetC9VideoDataVMa(0);
    int v225 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v224 - 8) + 48))(v223, 1, v224);
    uint64_t v226 = (uint64_t)v548;
    if (v225 == 1) {
      goto LABEL_57;
    }
    sub_10001B220(v223 + *(int *)(v224 + 20), (uint64_t)v548, (uint64_t *)&unk_1007FC470);
    sub_1001905C4(v223, _s10VideoAssetC9VideoDataVMa);
    uint64_t v227 = *(void (**)(uint64_t, uint64_t, uint64_t))v566;
    uint64_t v155 = v210;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v566)(v226, 1, v154) != 1)
    {
      uint64_t v228 = v550;
      (*v562)(v550, v226, v154);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v210)(v228, 0, 1, v154);
      goto LABEL_59;
    }
LABEL_58:
    uint64_t v230 = v207 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionDate;
    swift_beginAccess();
    uint64_t v231 = v230;
    uint64_t v228 = v550;
    sub_10001B220(v231, v550, (uint64_t *)&unk_1007FC470);
    sub_10001457C(v226, (uint64_t *)&unk_1007FC470);
    uint64_t v227 = *(void (**)(uint64_t, uint64_t, uint64_t))v566;
LABEL_59:
    uint64_t v232 = v568;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v227)(v228, 1, v154) != 1) {
      break;
    }

    sub_10001457C(v228, (uint64_t *)&unk_1007FC470);
    uint64_t v150 = v560;
    uint64_t v42 = v209;
LABEL_6:
    ++v156;
    uint64_t v152 = v561;
    if (v563 == v150)
    {
      swift_bridgeObjectRelease();
LABEL_137:
      LOBYTE(v153) = v532;
      goto LABEL_154;
    }
  }
  v557 = *v562;
  v557(v556, v228, v154);
  if ((v540 & 1) == 0)
  {

    uint64_t v42 = v209;
    goto LABEL_80;
  }
  uint64_t v233 = 1;
  unsigned int v234 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v227)(v555, 1, v154);
  v558 = v227;
  if (!v234)
  {
    v235 = v487;
    (*v501)(v487, v555, v154);
    unint64_t v236 = v542;
    static Calendar.current.getter();
    sub_100010218(&qword_1007FB058);
    uint64_t v237 = type metadata accessor for Calendar.Component();
    uint64_t v238 = *(void *)(v237 - 8);
    uint64_t v239 = *(void *)(v238 + 72);
    unint64_t v240 = (*(unsigned __int8 *)(v238 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v238 + 80);
    uint64_t v241 = 2 * v239;
    uint64_t v242 = swift_allocObject();
    *(_OWORD *)(v242 + 16) = v534;
    unint64_t v243 = v242 + v240;
    v244 = *(void (**)(unint64_t, void, uint64_t))(v238 + 104);
    v244(v243, v538, v237);
    unint64_t v245 = v243 + v239;
    uint64_t v154 = v546;
    v244(v245, v537, v237);
    v244(v243 + v241, v536, v237);
    sub_1000F5AEC(v242);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v246 = v488;
    Calendar.dateComponents(_:from:)();
    swift_bridgeObjectRelease();
    uint64_t v247 = *v535;
    uint64_t v248 = v543;
    (*v535)(v236, v543);
    static Calendar.current.getter();
    uint64_t v249 = (uint64_t)v485;
    Calendar.date(from:)();
    v247(v236, v248);
    uint64_t v250 = v486;
    sub_10001B220(v249, v486, (uint64_t *)&unk_1007FC470);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v558)(v250, 1, v154);
    if (result == 1) {
      goto LABEL_157;
    }
    sub_10001457C(v249, (uint64_t *)&unk_1007FC470);
    (*v533)(v246, v541);
    v557(v547, v250, v154);
    (*v531)(v235, v154);
    uint64_t v233 = 0;
    uint64_t v155 = v564;
  }
  uint64_t v527 = v156;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v155)(v547, v233, 1, v154);
  uint64_t v252 = v542;
  static Calendar.current.getter();
  uint64_t v253 = sub_100010218(&qword_1007FB058);
  uint64_t v254 = type metadata accessor for Calendar.Component();
  uint64_t v255 = *(void *)(v254 - 8);
  uint64_t v256 = *(char **)(v255 + 72);
  uint64_t v257 = *(unsigned __int8 *)(v255 + 80);
  uint64_t v258 = (v257 + 32) & ~v257;
  v520 = (void (*)(char *, uint64_t))v253;
  v516 = (void (*)(char *, uint64_t))(v258 + 3 * (void)v256);
  uint64_t v515 = v257 | 7;
  uint64_t v259 = swift_allocObject();
  *(_OWORD *)(v259 + 16) = v534;
  uint64_t v517 = v258;
  uint64_t v260 = v259 + v258;
  unint64_t v261 = *(char **)(v255 + 104);
  ((void (*)(uint64_t, void, uint64_t))v261)(v260, v538, v254);
  v521 = v256;
  ((void (*)(char *, void, uint64_t))v261)(&v256[v260], v537, v254);
  uint64_t v522 = 2 * (void)v256;
  v519 = v261;
  ((void (*)(uint64_t, void, uint64_t))v261)(v260 + 2 * (void)v256, v536, v254);
  sub_1000F5AEC(v259);
  v262 = v155;
  swift_setDeallocating();
  uint64_t v523 = v254;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  unint64_t v263 = v513;
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  id v264 = *v535;
  uint64_t v265 = v543;
  (*v535)(v252, v543);
  static Calendar.current.getter();
  uint64_t v266 = (uint64_t)v511;
  Calendar.date(from:)();
  v518 = v264;
  v264(v252, v265);
  uint64_t v267 = v512;
  sub_10001B220(v266, v512, (uint64_t *)&unk_1007FC470);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v558)(v267, 1, v154);
  if (result != 1)
  {
    sub_10001457C(v266, (uint64_t *)&unk_1007FC470);
    v514 = *v533;
    v514(v263, v541);
    uint64_t v268 = v524;
    v557(v524, v267, v154);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v262)(v268, 0, 1, v154);
    uint64_t v269 = v529;
    uint64_t v270 = v529 + *(int *)(v530 + 48);
    sub_10001B220(v547, v529, (uint64_t *)&unk_1007FC470);
    sub_10001B220(v268, v270, (uint64_t *)&unk_1007FC470);
    int v271 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v558)(v269, 1, v154);
    uint64_t v272 = (uint64_t)v525;
    unint64_t v156 = v527;
    if (v271 == 1)
    {
      sub_10001457C(v268, (uint64_t *)&unk_1007FC470);
      sub_10001457C(v547, (uint64_t *)&unk_1007FC470);
      v273 = v558;
      int v274 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v558)(v270, 1, v154);
      uint64_t v155 = v564;
      if (v274 == 1)
      {
        sub_10001457C(v529, (uint64_t *)&unk_1007FC470);
        v275 = *v531;
        goto LABEL_83;
      }
LABEL_71:
      sub_10001457C(v529, &qword_1007FB8B0);
      goto LABEL_72;
    }
    sub_10001B220(v269, (uint64_t)v525, (uint64_t *)&unk_1007FC470);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v558)(v270, 1, v154) == 1)
    {
      sub_10001457C(v268, (uint64_t *)&unk_1007FC470);
      sub_10001457C(v547, (uint64_t *)&unk_1007FC470);
      (*v531)((char *)v272, v154);
      uint64_t v155 = v564;
      v273 = v558;
      goto LABEL_71;
    }
    v308 = v510;
    v557(v510, v270, v154);
    sub_10018B950((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
    char v309 = dispatch thunk of static Equatable.== infix(_:_:)();
    v275 = *v531;
    (*v531)(v308, v154);
    sub_10001457C(v524, (uint64_t *)&unk_1007FC470);
    sub_10001457C(v547, (uint64_t *)&unk_1007FC470);
    v275(v525, v154);
    sub_10001457C(v269, (uint64_t *)&unk_1007FC470);
    uint64_t v155 = v564;
    v273 = v558;
    if (v309)
    {
LABEL_83:
      uint64_t v154 = v546;
      v275(v556, v546);
      v310 = v568;

      uint64_t v532 = 2;
      id v8 = v544;
      uint64_t v42 = v545;
      goto LABEL_81;
    }
LABEL_72:
    uint64_t v276 = 1;
    uint64_t v277 = v546;
    int v278 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v273)(v555, 1, v546);
    uint64_t v279 = v526;
    if (!v278)
    {
      v280 = v510;
      (*v501)(v510, v555, v277);
      sub_1002AA5EC(v279);
      (*v531)(v280, v277);
      uint64_t v276 = 0;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v155)(v279, v276, 1, v277);
    v281 = v542;
    static Calendar.current.getter();
    uint64_t v282 = swift_allocObject();
    *(_OWORD *)(v282 + 16) = v534;
    uint64_t v283 = v282 + v517;
    uint64_t v284 = v523;
    v285 = (void (*)(char *, void, uint64_t))v519;
    ((void (*)(uint64_t, void, uint64_t))v519)(v282 + v517, v538, v523);
    v285(&v521[v283], v537, v284);
    v285((char *)(v283 + v522), v536, v284);
    sub_1000F5AEC(v282);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    v286 = v509;
    Calendar.dateComponents(_:from:)();
    swift_bridgeObjectRelease();
    uint64_t v287 = v543;
    uint64_t v288 = v277;
    v289 = v518;
    v518(v281, v543);
    static Calendar.current.getter();
    uint64_t v290 = (uint64_t)v507;
    Calendar.date(from:)();
    v289(v281, v287);
    uint64_t v291 = v508;
    sub_10001B220(v290, v508, (uint64_t *)&unk_1007FC470);
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v558)(v291, 1, v288);
    v292 = v564;
    if (result == 1) {
      goto LABEL_156;
    }
    uint64_t v154 = v288;
    sub_10001457C(v290, (uint64_t *)&unk_1007FC470);
    v514(v286, v541);
    uint64_t v293 = (uint64_t)v505;
    v557(v505, v291, v154);
    ((void (*)(uint64_t, void, uint64_t, uint64_t))v292)(v293, 0, 1, v154);
    uint64_t v294 = v506;
    uint64_t v295 = v506 + *(int *)(v530 + 48);
    uint64_t v296 = v526;
    sub_10001B220(v526, v506, (uint64_t *)&unk_1007FC470);
    sub_10001B220(v293, v295, (uint64_t *)&unk_1007FC470);
    int v297 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v558)(v294, 1, v154);
    id v8 = v544;
    if (v297 == 1)
    {
      v298 = v568;

      sub_10001457C(v293, (uint64_t *)&unk_1007FC470);
      sub_10001457C(v296, (uint64_t *)&unk_1007FC470);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v558)(v295, 1, v154) != 1) {
        goto LABEL_139;
      }
      sub_10001457C(v294, (uint64_t *)&unk_1007FC470);
      uint64_t v42 = v545;
      uint64_t v155 = v564;
      goto LABEL_80;
    }
    uint64_t v299 = v483;
    sub_10001B220(v294, v483, (uint64_t *)&unk_1007FC470);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v558)(v295, 1, v154) != 1)
    {
      v300 = v510;
      v557(v510, v295, v154);
      sub_10018B950((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v301 = v293;
      uint64_t v302 = v299;
      uint64_t v303 = v294;
      char v304 = dispatch thunk of static Equatable.== infix(_:_:)();
      v305 = v568;

      v306 = *v531;
      (*v531)(v300, v154);
      sub_10001457C(v301, (uint64_t *)&unk_1007FC470);
      sub_10001457C(v526, (uint64_t *)&unk_1007FC470);
      v306((char *)v302, v154);
      sub_10001457C(v303, (uint64_t *)&unk_1007FC470);
      uint64_t v42 = v545;
      uint64_t v155 = v564;
      if ((v304 & 1) == 0) {
        goto LABEL_140;
      }
LABEL_80:
      uint64_t v307 = v555;
      sub_10001457C(v555, (uint64_t *)&unk_1007FC470);
      v557(v307, v556, v154);
      uint64_t v532 = 1;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v155)(v307, 0, 1, v154);
LABEL_81:
      uint64_t v150 = v560;
      goto LABEL_6;
    }
    v439 = v568;

    sub_10001457C(v293, (uint64_t *)&unk_1007FC470);
    sub_10001457C(v526, (uint64_t *)&unk_1007FC470);
    (*v531)((char *)v299, v154);
LABEL_139:
    sub_10001457C(v294, &qword_1007FB8B0);
    v306 = *v531;
    uint64_t v155 = v564;
LABEL_140:
    v440 = v556;
LABEL_141:
    v306(v440, v154);
    swift_bridgeObjectRelease();
    uint64_t v441 = v555;
    sub_10001457C(v555, (uint64_t *)&unk_1007FC470);
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v155)(v441, 1, 1, v154);
    goto LABEL_137;
  }
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  __break(1u);
LABEL_161:
  __break(1u);
LABEL_162:
  __break(1u);
LABEL_163:
  __break(1u);
  return result;
}

uint64_t sub_1001903F4()
{
  uint64_t v1 = v0;
  uint64_t v2 = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(19);
  id v3 = [v0 entity];
  id v4 = [v3 managedObjectClassName];

  if (v4)
  {
    uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v2 = v6;
  }
  else
  {
    uint64_t v5 = 0;
  }
  v7._uint64_t countAndFlagsBits = v5;
  v7._unint64_t object = v2;
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._uint64_t countAndFlagsBits = 23328;
  v8._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v8);
  id v9 = [v1 objectID];
  id v10 = [v9 pl_shortURI];

  if (v10)
  {
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;
  }
  else
  {
    uint64_t v11 = 0;
    uint64_t v13 = (void *)0xE000000000000000;
  }
  v14._uint64_t countAndFlagsBits = v11;
  v14._unint64_t object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = 0x7865746E6F63205DLL;
  v15._unint64_t object = (void *)0xEB00000000203A74;
  String.append(_:)(v15);
  [v1 managedObjectContext];
  sub_100010218(&qword_100800AD8);
  v16._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t _s9PhotoDateVMa(uint64_t a1)
{
  return sub_10003352C(a1, qword_100800B38);
}

uint64_t sub_1001905C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id sub_100190624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v38 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Journaling.EntrySource();
  __chkstk_darwin(v9 - 8);
  uint64_t v42 = (uint64_t)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v43 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  Swift::String v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for JournalEntryMO();
  id v20 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:a2];
  sub_10001B220(a3, (uint64_t)v19, &qword_100800950);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v19, 1, v6) != 1)
  {
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v19, v6);
  }
  uint64_t v40 = v7;
  uint64_t v41 = v6;
  [v20 setId:isa];

  Date.init()();
  Class v22 = Date._bridgeToObjectiveC()().super.isa;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v43 + 8);
  v23(v16, v14);
  [v20 setCreatedDate:v22];

  Date.init()();
  Class v24 = Date._bridgeToObjectiveC()().super.isa;
  v23(v16, v14);
  [v20 setUpdatedDate:v24];

  Date.init()();
  Class v25 = Date._bridgeToObjectiveC()().super.isa;
  uint64_t v39 = v14;
  v23(v16, v14);
  [v20 setEntryDate:v25];

  sub_100038878(a1, (uint64_t)v13);
  uint64_t v26 = sub_100010218(&qword_100805B00);
  uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 48);
  if (!v27(v13, 2, v26))
  {
    v23(&v13[*(int *)(v26 + 48)], v39);
    (*(void (**)(char *, uint64_t))(v40 + 8))(v13, v41);
  }
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v20 setEntryType:v28];

  uint64_t v29 = v42;
  sub_100038878(a1, v42);
  if (!v27((char *)v29, 2, v26))
  {
    uint64_t v30 = v29 + *(int *)(v26 + 48);
    uint64_t v32 = v40;
    uint64_t v31 = v41;
    uint64_t v33 = v38;
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v38, v29, v41);
    uint64_t v34 = v39;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v16, v30, v39);
    Class v35 = UUID._bridgeToObjectiveC()().super.isa;
    [v20 setBundleId:v35];

    Class v36 = Date._bridgeToObjectiveC()().super.isa;
    [v20 setBundleDate:v36];

    v23(v16, v34);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v31);
  }
  return v20;
}

uint64_t *sub_100190B94(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  }
  return a1;
}

void *sub_100190D0C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_100190E34(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_100190FC0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

void *sub_1001910E8(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  *((unsigned char *)a1 + *(int *)(a3 + 20)) = *((unsigned char *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_100191274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100191288);
}

uint64_t sub_100191288(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC470);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) <= 3u) {
      int v10 = 3;
    }
    else {
      int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
    }
    unsigned int v11 = v10 - 3;
    if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 20)) >= 3u) {
      return v11;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_100191354(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100191368);
}

uint64_t sub_100191368(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100010218((uint64_t *)&unk_1007FC470);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 20)) = a2 + 3;
  }
  return result;
}

void sub_100191428()
{
  sub_100033618();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_1001914BC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for UUID();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return a1;
}

uint64_t sub_1001915C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_10019166C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t sub_100191724(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_1001917DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

uint64_t sub_100191894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_10019194C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100191960);
}

uint64_t sub_100191960(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for Date();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_100191A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100191A6C);
}

uint64_t sub_100191A6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t _s14SuggestionInfoVMa(uint64_t a1)
{
  return sub_10003352C(a1, qword_100800BC8);
}

uint64_t sub_100191B90()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Date();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_100191C58()
{
  return sub_10018B950(&qword_100800C00, (void (*)(uint64_t))_s14SuggestionInfoVMa);
}

unsigned char *_s8DateTypeOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100191D6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8DateTypeOMa()
{
  return &_s8DateTypeON;
}

unint64_t sub_100191DA8()
{
  unint64_t result = qword_100800C08;
  if (!qword_100800C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800C08);
  }
  return result;
}

id sub_100191E2C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StyledMKPointAnnotation();
  return [super dealloc];
}

uint64_t sub_100191F18()
{
  return type metadata accessor for StyledMKPointAnnotation();
}

uint64_t type metadata accessor for StyledMKPointAnnotation()
{
  uint64_t result = qword_100800C50;
  if (!qword_100800C50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100191F6C()
{
  sub_1000D37F4(319, (unint64_t *)&qword_1007FAAE0, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F)
  {
    sub_1000D37F4(319, (unint64_t *)&qword_1007F9270, (void (*)(uint64_t))&type metadata accessor for URL);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

id sub_100192088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10)
{
  uint64_t v12 = &v10[OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_placeName];
  *(void *)uint64_t v12 = 0;
  *((void *)v12 + 1) = 0;
  uint64_t v13 = &v10[OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_city];
  *(void *)uint64_t v13 = 0;
  *((void *)v13 + 1) = 0;
  uint64_t v14 = &v10[OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_typeOfPlace];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  uint64_t v15 = (uint64_t)&v10[OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_visitStartTime];
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
  v17(v15, 1, 1, v16);
  uint64_t v18 = (uint64_t)&v10[OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_createdDate];
  v17((uint64_t)&v10[OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_createdDate], 1, 1, v16);
  uint64_t v19 = OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_styleAttributes;
  *(void *)&v10[OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_styleAttributes] = 0;
  uint64_t v20 = (uint64_t)&v10[OBJC_IVAR____TtC7Journal23StyledMKPointAnnotation_mapURL];
  uint64_t v21 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(void *)uint64_t v12 = a1;
  *((void *)v12 + 1) = a2;
  Class v22 = v10;
  swift_bridgeObjectRelease();
  *(void *)uint64_t v13 = a3;
  *((void *)v13 + 1) = a4;
  swift_bridgeObjectRelease();
  *(void *)uint64_t v14 = a5;
  *((void *)v14 + 1) = a6;
  swift_bridgeObjectRelease();
  swift_beginAccess();
  sub_100192334(a7, v15, (uint64_t *)&unk_1007FC470);
  swift_endAccess();
  swift_beginAccess();
  sub_100192334(a8, v18, (uint64_t *)&unk_1007FC470);
  swift_endAccess();
  uint64_t v23 = *(void **)&v10[v19];
  *(void *)&v10[v19] = a9;
  id v24 = a9;

  swift_beginAccess();
  sub_100192334(a10, v20, (uint64_t *)&unk_100800A60);
  swift_endAccess();

  v34.receiver = v22;
  v34.super_class = (Class)type metadata accessor for StyledMKPointAnnotation();
  id v25 = [super init];
  sub_10001457C(a10, (uint64_t *)&unk_100800A60);
  sub_10001457C(a8, (uint64_t *)&unk_1007FC470);
  sub_10001457C(a7, (uint64_t *)&unk_1007FC470);
  return v25;
}

uint64_t sub_100192334(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100010218(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

uint64_t sub_100192398()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100800C60);
  sub_100026A54(v0, (uint64_t)qword_100800C60);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

id sub_10019248C()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  int v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v4 = (objc_class *)type metadata accessor for InsightsAdminVC();
  v17.receiver = v0;
  v17.super_class = v4;
  [super viewDidLoad];
  id v5 = [v0 navigationItem];
  NSString v6 = String._bridgeToObjectiveC()();
  [v5 setTitle:v6];

  id result = [v0 tableView];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v8 = result;
  id v9 = [objc_allocWithZone((Class)UIRefreshControl) init];
  [v8 setRefreshControl:v9];

  id result = [v0 tableView];
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v10 = result;
  id v11 = [result refreshControl];

  if (v11)
  {
    [v11 addTarget:v0 action:"refreshData" forControlEvents:4096];
  }
  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v3, 1, 1, v12);
  type metadata accessor for MainActor();
  id v13 = v0;
  uint64_t v14 = static MainActor.shared.getter();
  uint64_t v15 = (void *)swift_allocObject();
  v15[2] = v14;
  v15[3] = &protocol witness table for MainActor;
  v15[4] = v13;
  sub_100328A60((uint64_t)v3, (uint64_t)&unk_100800CC8, (uint64_t)v15);
  uint64_t v16 = swift_release();
  __chkstk_darwin(v16);
  *((void *)&v17 - 2) = v13;
  return (id)withObservationTracking<A>(_:onChange:)();
}

uint64_t sub_100192750(void *a1)
{
  uint64_t v2 = type metadata accessor for StreakSummary();
  __chkstk_darwin(v2);
  unsigned int v4 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = 0;
  unint64_t v48 = 0xE000000000000000;
  _StringGuts.grow(_:)(18);
  id v5 = [a1 description];
  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v8 = v7;

  swift_bridgeObjectRelease();
  uint64_t v47 = v6;
  unint64_t v48 = v8;
  v9._uint64_t countAndFlagsBits = 0x6F437972746E6520;
  v9._unint64_t object = (void *)0xEE00203A73746E75;
  String.append(_:)(v9);
  if (qword_1007F6FC0 != -1) {
    swift_once();
  }
  v10._uint64_t countAndFlagsBits = sub_100153C30();
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  uint64_t v12 = v47;
  unint64_t v11 = v48;
  uint64_t v47 = 0;
  unint64_t v48 = 0xE000000000000000;
  _StringGuts.grow(_:)(16);
  uint64_t v44 = v47;
  uint64_t v45 = v48;
  v13._uint64_t countAndFlagsBits = 0x206576697463410ALL;
  v13._unint64_t object = (void *)0xEE00203A73796144;
  String.append(_:)(v13);
  uint64_t v14 = qword_10083D540;
  swift_getKeyPath();
  uint64_t v47 = v14;
  sub_100195370((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v15 = v14 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
  swift_beginAccess();
  sub_100195250(v15, (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  _print_unlocked<A, B>(_:_:)();
  sub_1001952B8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  uint64_t v16 = v44;
  objc_super v17 = (void *)v45;
  uint64_t v44 = v12;
  uint64_t v45 = v11;
  swift_bridgeObjectRetain();
  v18._uint64_t countAndFlagsBits = v16;
  v18._unint64_t object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v19 = v44;
  uint64_t v20 = v45;
  uint64_t v44 = 0;
  uint64_t v45 = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  v46[0] = v44;
  v46[1] = v45;
  v21._uint64_t countAndFlagsBits = 0x206576697463410ALL;
  v21._unint64_t object = (void *)0xEF203A736B656557;
  String.append(_:)(v21);
  uint64_t v22 = qword_10083D540;
  swift_getKeyPath();
  uint64_t v44 = v22;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v23 = v22 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
  swift_beginAccess();
  uint64_t v24 = type metadata accessor for InsightsDataManager.Streaks(0);
  sub_100195250(v23 + *(int *)(v24 + 20), (uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  _print_unlocked<A, B>(_:_:)();
  sub_1001952B8((uint64_t)v4, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  uint64_t v25 = v46[0];
  uint64_t v26 = (void *)v46[1];
  v46[0] = v19;
  v46[1] = v20;
  swift_bridgeObjectRetain();
  v27._uint64_t countAndFlagsBits = v25;
  v27._unint64_t object = v26;
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v29 = v46[0];
  uint64_t v28 = v46[1];
  strcpy((char *)v46, "\nWord Count: ");
  HIWORD(v46[1]) = -4864;
  uint64_t v30 = qword_10083D540;
  swift_getKeyPath();
  uint64_t v43 = v30;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v43 = *(void *)(v30 + OBJC_IVAR____TtC7Journal19InsightsDataManager__wordCount);
  v31._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v31);
  swift_bridgeObjectRelease();
  uint64_t v32 = v46[0];
  uint64_t v33 = (void *)v46[1];
  v46[0] = v29;
  v46[1] = v28;
  swift_bridgeObjectRetain();
  v34._uint64_t countAndFlagsBits = v32;
  v34._unint64_t object = v33;
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v36 = v46[0];
  unint64_t v35 = v46[1];
  if (qword_1007F6A68 != -1) {
    swift_once();
  }
  uint64_t v37 = type metadata accessor for Logger();
  sub_100026A54(v37, (uint64_t)qword_100800C60);
  swift_bridgeObjectRetain();
  uint64_t v38 = Logger.logObject.getter();
  os_log_type_t v39 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v38, v39))
  {
    uint64_t v40 = (uint8_t *)swift_slowAlloc();
    v46[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v40 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v43 = sub_10011EA98(v36, v35, v46);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "%s", v40, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  return sub_100193388();
}

uint64_t (*sub_100192D58())()
{
  return sub_100192D74;
}

uint64_t sub_100192D74()
{
  sub_100010218((uint64_t *)&unk_1007FC0F0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1006D6280;
  *(void *)(v0 + 56) = &type metadata for String;
  *(void *)(v0 + 32) = 0xD000000000000012;
  *(void *)(v0 + 40) = 0x800000010068D850;
  print(_:separator:terminator:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100192E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[5] = v6;
  v4[6] = v5;
  return _swift_task_switch(sub_100192EEC, v6, v5);
}

uint64_t sub_100192EEC()
{
  if (qword_1007F6FC0 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_100192FB0;
  return sub_100145B40();
}

uint64_t sub_100192FB0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1001930AC, 0, 0);
}

uint64_t sub_1001930AC()
{
  *(void *)(v0 + 64) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100193138, v2, v1);
}

uint64_t sub_100193138()
{
  uint64_t v1 = (void *)v0[2];
  swift_release();
  uint64_t v2 = (uint64_t (*)())[v1 tableView];
  if (v2)
  {
    uint64_t v5 = v2;
    id v6 = [v2 refreshControl];

    [v6 endRefreshing];
    sub_100193388();
    uint64_t v3 = v0[5];
    uint64_t v4 = v0[6];
    uint64_t v2 = sub_100193204;
  }
  else
  {
    __break(1u);
  }
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_100193204()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100193388()
{
  uint64_t v135 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v134 = *(void *)(v135 - 8);
  __chkstk_darwin(v135);
  uint64_t v132 = (char *)&v116 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = type metadata accessor for DispatchQoS();
  uint64_t v131 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v130 = (char *)&v116 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v128 = type metadata accessor for StreakSummary();
  __chkstk_darwin(v128);
  uint64_t v127 = (uint64_t)&v116 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = type metadata accessor for InsightsDataManager.TopAssetCategory(0);
  uint64_t v117 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  uint64_t v4 = (char *)&v116 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Locale();
  __chkstk_darwin(v5 - 8);
  uint64_t v123 = (char *)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_100010218(&qword_1007F8E58);
  uint64_t v125 = *(void *)(v126 - 8);
  __chkstk_darwin(v126);
  uint64_t v124 = (char *)&v116 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v140 = type metadata accessor for Date.FormatStyle.TimeStyle();
  uint64_t v138 = *(void *)(v140 - 8);
  __chkstk_darwin(v140);
  uint64_t v119 = (char *)&v116 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = type metadata accessor for Date.FormatStyle.DateStyle();
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v118 = (char *)&v116 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  uint64_t v12 = (char *)&v116 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F6FC0 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_10083D540;
  swift_getKeyPath();
  aBlock = (void **)v13;
  uint64_t v14 = sub_100195370((unint64_t *)&qword_1007FA9D8, (void (*)(uint64_t))type metadata accessor for InsightsDataManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v15 = *(void *)(v13 + OBJC_IVAR____TtC7Journal19InsightsDataManager__wordCount + 24);
  uint64_t v16 = qword_10083D540;
  swift_getKeyPath();
  aBlock = (void **)v16;
  uint64_t v137 = v15;
  swift_bridgeObjectRetain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v136 = *(void *)(v16 + OBJC_IVAR____TtC7Journal19InsightsDataManager__allTime);
  sub_100010218(&qword_100800CB0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1006D7C30;
  *(void *)(v17 + 32) = 0x72746E45206C6C41;
  *(void *)(v17 + 40) = 0xEB00000000736569;
  uint64_t v141 = v17;
  uint64_t v139 = sub_100010218(&qword_1007FC1C8);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_1006DC540;
  strcpy((char *)(v18 + 32), "Last Updated");
  *(unsigned char *)(v18 + 45) = 0;
  *(_WORD *)(v18 + 46) = -5120;
  aBlock = 0;
  unint64_t v144 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  _StringGuts.grow(_:)(16);
  uint64_t v19 = qword_10083D540;
  swift_getKeyPath();
  uint64_t v157 = v19;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v20 = v19 + OBJC_IVAR____TtC7Journal19InsightsDataManager__lastUpdated;
  swift_beginAccess();
  uint64_t v21 = v120;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v20, v120);
  uint64_t v22 = v118;
  static Date.FormatStyle.DateStyle.long.getter();
  uint64_t v23 = v119;
  static Date.FormatStyle.TimeStyle.shortened.getter();
  uint64_t v24 = Date.formatted(date:time:)();
  unint64_t v26 = v25;
  (*(void (**)(char *, uint64_t))(v138 + 8))(v23, v140);
  (*(void (**)(char *, uint64_t))(v121 + 8))(v22, v122);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v21);
  swift_bridgeObjectRelease();
  aBlock = (void **)v24;
  unint64_t v144 = v26;
  v27._uint64_t countAndFlagsBits = 0x6F6974617275440ALL;
  v27._unint64_t object = (void *)0xEB00000000203A6ELL;
  String.append(_:)(v27);
  uint64_t v28 = qword_10083D540;
  swift_getKeyPath();
  uint64_t v156 = v28;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  type metadata accessor for InsightsDataManager.LastUpdate(0);
  v29._uint64_t countAndFlagsBits = sub_100587A94();
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  v30._uint64_t countAndFlagsBits = 115;
  v30._unint64_t object = (void *)0xE100000000000000;
  String.append(_:)(v30);
  unint64_t v31 = v144;
  *(void *)(v18 + 48) = aBlock;
  *(void *)(v18 + 56) = v31;
  *(void *)(v18 + 64) = 0x6F43207972746E45;
  *(void *)(v18 + 72) = 0xEB00000000746E75;
  uint64_t v32 = qword_10083D540;
  swift_getKeyPath();
  aBlock = (void **)v32;
  uint64_t v140 = v14;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  aBlock = *(void ***)(v32 + OBJC_IVAR____TtC7Journal19InsightsDataManager__allTime + 16);
  *(void *)(v18 + 80) = dispatch thunk of CustomStringConvertible.description.getter();
  *(void *)(v18 + 88) = v33;
  *(void *)(v18 + 96) = 0x7954207465737341;
  *(void *)(v18 + 104) = 0xEB00000000736570;
  uint64_t v138 = v18;
  uint64_t v34 = v136;
  aBlock = 0;
  unint64_t v144 = 0xE000000000000000;
  int64_t v35 = *(void *)(v136 + 16);
  if (v35)
  {
    uint64_t v153 = _swiftEmptyArrayStorage;
    sub_100095B64(0, v35, 0);
    uint64_t v36 = v34 + ((*(unsigned __int8 *)(v117 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v117 + 80));
    uint64_t v37 = *(void *)(v117 + 72);
    do
    {
      sub_100195250(v36, (uint64_t)v4, type metadata accessor for InsightsDataManager.TopAssetCategory);
      uint64_t v154 = 0;
      unint64_t v155 = 0xE000000000000000;
      unint64_t v38 = 0xE500000000000000;
      uint64_t v39 = 0x6F746F6870;
      switch(v4[*(int *)(v142 + 20)])
      {
        case 1:
          uint64_t v39 = 0x6F65646976;
          break;
        case 2:
          uint64_t v39 = 0x6F69647561;
          break;
        case 3:
          uint64_t v39 = 0x616964656DLL;
          break;
        case 4:
          uint64_t v39 = 0x6563616C70;
          break;
        case 5:
          unint64_t v38 = 0xEC0000006E6F6974;
          uint64_t v39 = 0x61737265766E6F63;
          break;
        case 6:
          unint64_t v38 = 0xE800000000000000;
          uint64_t v39 = 0x7974697669746361;
          break;
        case 7:
          uint64_t v39 = 0x697463656C666572;
          unint64_t v38 = 0xEA00000000006E6FLL;
          break;
        case 8:
          unint64_t v38 = 0xEB00000000646E69;
          uint64_t v39 = 0x4D664F6574617473;
          break;
        default:
          break;
      }
      unint64_t v40 = v38;
      String.append(_:)(*(Swift::String *)&v39);
      swift_bridgeObjectRelease();
      v41._uint64_t countAndFlagsBits = 8250;
      v41._unint64_t object = (void *)0xE200000000000000;
      String.append(_:)(v41);
      uint64_t v152 = *(void *)&v4[*(int *)(v142 + 24)];
      v42._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v42);
      swift_bridgeObjectRelease();
      uint64_t v43 = v154;
      unint64_t v44 = v155;
      sub_1001952B8((uint64_t)v4, type metadata accessor for InsightsDataManager.TopAssetCategory);
      uint64_t v45 = v153;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100095B64(0, v45[2] + 1, 1);
        uint64_t v45 = v153;
      }
      unint64_t v47 = v45[2];
      unint64_t v46 = v45[3];
      if (v47 >= v46 >> 1)
      {
        sub_100095B64(v46 > 1, v47 + 1, 1);
        uint64_t v45 = v153;
      }
      v45[2] = v47 + 1;
      unint64_t v48 = &v45[2 * v47];
      v48[4] = v43;
      v48[5] = v44;
      v36 += v37;
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v45 = _swiftEmptyArrayStorage;
  }
  uint64_t v154 = v45;
  uint64_t v49 = sub_100010218(&qword_100800A70);
  uint64_t v50 = sub_100014488((unint64_t *)&qword_1007F9100, &qword_100800A70);
  uint64_t v51 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v53 = v52;
  swift_bridgeObjectRelease();
  v54._uint64_t countAndFlagsBits = v51;
  v54._unint64_t object = v53;
  String.append(_:)(v54);
  swift_bridgeObjectRelease();
  unint64_t v55 = v144;
  uint64_t v56 = (void *)v138;
  *(void *)(v138 + 112) = aBlock;
  v56[15] = v55;
  v56[16] = 0x756F432064726F57;
  v56[17] = 0xEA0000000000746ELL;
  uint64_t v57 = qword_10083D540;
  swift_getKeyPath();
  aBlock = (void **)v57;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v154 = *(void **)(v57 + OBJC_IVAR____TtC7Journal19InsightsDataManager__wordCount);
  static Locale.autoupdatingCurrent.getter();
  sub_100014398();
  uint64_t v58 = v124;
  IntegerFormatStyle.init(locale:)();
  sub_100014488(&qword_1008002E8, &qword_1007F8E58);
  uint64_t v59 = v126;
  BinaryInteger.formatted<A>(_:)();
  (*(void (**)(char *, uint64_t))(v125 + 8))(v58, v59);
  unint64_t v60 = v144;
  v56[18] = aBlock;
  v56[19] = v60;
  v56[20] = 0x64726F5720706F54;
  v56[21] = 0xE900000000000073;
  aBlock = 0;
  unint64_t v144 = 0xE000000000000000;
  uint64_t v61 = v137;
  int64_t v62 = *(void *)(v137 + 16);
  if (v62)
  {
    uint64_t v136 = v50;
    uint64_t v142 = v49;
    uint64_t v153 = _swiftEmptyArrayStorage;
    sub_100095B64(0, v62, 0);
    uint64_t v63 = v153;
    uint64_t v64 = (uint64_t *)(v61 + 48);
    do
    {
      unint64_t v65 = *(v64 - 1);
      uint64_t v66 = *v64;
      uint64_t v154 = (void *)*(v64 - 2);
      unint64_t v155 = v65;
      swift_bridgeObjectRetain_n();
      v67._uint64_t countAndFlagsBits = 8250;
      v67._unint64_t object = (void *)0xE200000000000000;
      String.append(_:)(v67);
      uint64_t v152 = v66;
      v68._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v68);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v70 = v154;
      unint64_t v69 = v155;
      uint64_t v153 = v63;
      unint64_t v72 = v63[2];
      unint64_t v71 = v63[3];
      if (v72 >= v71 >> 1)
      {
        sub_100095B64(v71 > 1, v72 + 1, 1);
        uint64_t v63 = v153;
      }
      v64 += 3;
      v63[2] = v72 + 1;
      uint64_t v73 = &v63[2 * v72];
      v73[4] = v70;
      v73[5] = v69;
      --v62;
    }
    while (v62);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v63 = _swiftEmptyArrayStorage;
  }
  uint64_t v154 = v63;
  uint64_t v74 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v76 = v75;
  swift_bridgeObjectRelease();
  v77._uint64_t countAndFlagsBits = v74;
  v77._unint64_t object = v76;
  String.append(_:)(v77);
  swift_bridgeObjectRelease();
  unint64_t v78 = v144;
  uint64_t v79 = v138;
  *(void *)(v138 + 176) = aBlock;
  *(void *)(v79 + 184) = v78;
  uint64_t v80 = v141;
  *(void *)(v141 + 48) = v79;
  *(void *)(v80 + 56) = 0xD000000000000018;
  *(void *)(v80 + 64) = 0x800000010068D7F0;
  uint64_t v81 = swift_allocObject();
  *(_OWORD *)(v81 + 16) = xmmword_1006DC550;
  *(void *)(v81 + 32) = 0x4420657669746341;
  *(void *)(v81 + 40) = 0xEB00000000737961;
  aBlock = 0;
  unint64_t v144 = 0xE000000000000000;
  uint64_t v82 = qword_10083D540;
  swift_getKeyPath();
  uint64_t v154 = (void *)v82;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v83 = v82 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
  swift_beginAccess();
  uint64_t v84 = v127;
  sub_100195250(v83, v127, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  _print_unlocked<A, B>(_:_:)();
  sub_1001952B8(v84, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  unint64_t v85 = v144;
  *(void *)(v81 + 48) = aBlock;
  *(void *)(v81 + 56) = v85;
  strcpy((char *)(v81 + 64), "Active Weeks");
  *(unsigned char *)(v81 + 77) = 0;
  *(_WORD *)(v81 + 78) = -5120;
  aBlock = 0;
  unint64_t v144 = 0xE000000000000000;
  uint64_t v86 = qword_10083D540;
  swift_getKeyPath();
  uint64_t v153 = (void *)v86;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v87 = v86 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
  swift_beginAccess();
  uint64_t v88 = (int *)type metadata accessor for InsightsDataManager.Streaks(0);
  sub_100195250(v87 + v88[5], v84, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  _print_unlocked<A, B>(_:_:)();
  sub_1001952B8(v84, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  unint64_t v89 = v144;
  *(void *)(v81 + 80) = aBlock;
  *(void *)(v81 + 88) = v89;
  *(void *)(v81 + 96) = 0x4420746E65636552;
  *(void *)(v81 + 104) = 0xEB00000000737961;
  aBlock = 0;
  unint64_t v144 = 0xE000000000000000;
  uint64_t v90 = qword_10083D540;
  swift_getKeyPath();
  uint64_t v152 = v90;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v91 = v90 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
  swift_beginAccess();
  sub_100195250(v91 + v88[6], v84, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  _print_unlocked<A, B>(_:_:)();
  sub_1001952B8(v84, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  unint64_t v92 = v144;
  *(void *)(v81 + 112) = aBlock;
  *(void *)(v81 + 120) = v92;
  strcpy((char *)(v81 + 128), "Recent Weeks");
  *(unsigned char *)(v81 + 141) = 0;
  *(_WORD *)(v81 + 142) = -5120;
  aBlock = 0;
  unint64_t v144 = 0xE000000000000000;
  uint64_t v93 = qword_10083D540;
  swift_getKeyPath();
  uint64_t v151 = v93;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v94 = v93 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
  swift_beginAccess();
  sub_100195250(v94 + v88[7], v84, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  _print_unlocked<A, B>(_:_:)();
  sub_1001952B8(v84, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  unint64_t v95 = v144;
  *(void *)(v81 + 144) = aBlock;
  *(void *)(v81 + 152) = v95;
  strcpy((char *)(v81 + 160), "Longest Days");
  *(unsigned char *)(v81 + 173) = 0;
  *(_WORD *)(v81 + 174) = -5120;
  aBlock = 0;
  unint64_t v144 = 0xE000000000000000;
  uint64_t v96 = qword_10083D540;
  swift_getKeyPath();
  uint64_t v150 = v96;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v97 = v96 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
  swift_beginAccess();
  sub_100195250(v97 + v88[8], v84, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  _print_unlocked<A, B>(_:_:)();
  sub_1001952B8(v84, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  unint64_t v98 = v144;
  *(void *)(v81 + 176) = aBlock;
  *(void *)(v81 + 184) = v98;
  strcpy((char *)(v81 + 192), "Longest Weeks");
  *(_WORD *)(v81 + 206) = -4864;
  aBlock = 0;
  unint64_t v144 = 0xE000000000000000;
  uint64_t v99 = qword_10083D540;
  swift_getKeyPath();
  uint64_t v149 = v99;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v100 = v99 + OBJC_IVAR____TtC7Journal19InsightsDataManager__streaks;
  swift_beginAccess();
  sub_100195250(v100 + v88[9], v84, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  _print_unlocked<A, B>(_:_:)();
  sub_1001952B8(v84, (uint64_t (*)(void))type metadata accessor for StreakSummary);
  unint64_t v101 = v144;
  *(void *)(v81 + 208) = aBlock;
  *(void *)(v81 + 216) = v101;
  uint64_t v102 = v141;
  *(void *)(v141 + 72) = v81;
  *(void *)(v102 + 80) = 0xD00000000000001CLL;
  *(void *)(v102 + 88) = 0x800000010068D810;
  uint64_t v103 = v102;
  uint64_t v104 = swift_allocObject();
  *(_OWORD *)(v104 + 16) = xmmword_1006D6270;
  *(void *)(v104 + 32) = 0xD000000000000016;
  *(void *)(v104 + 40) = 0x800000010068D830;
  *(void *)(v104 + 48) = sub_100153E0C();
  *(void *)(v104 + 56) = v105;
  strcpy((char *)(v104 + 64), "Daily Counts");
  *(unsigned char *)(v104 + 77) = 0;
  *(_WORD *)(v104 + 78) = -5120;
  *(void *)(v104 + 80) = sub_100153C30();
  *(void *)(v104 + 88) = v106;
  *(void *)(v103 + 96) = v104;
  uint64_t v107 = v129;
  *(void *)&v129[OBJC_IVAR____TtC7Journal15InsightsAdminVC_data] = v103;
  swift_bridgeObjectRelease();
  sub_10001FB8C();
  uint64_t v108 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v109 = swift_allocObject();
  *(void *)(v109 + 16) = v107;
  uint64_t v147 = sub_100195350;
  uint64_t v148 = v109;
  aBlock = _NSConcreteStackBlock;
  unint64_t v144 = 1107296256;
  id v145 = sub_10017D530;
  uint64_t v146 = &unk_10079BCA8;
  uint64_t v110 = _Block_copy(&aBlock);
  id v111 = v107;
  swift_release();
  uint64_t v112 = v130;
  static DispatchQoS.unspecified.getter();
  aBlock = (void **)_swiftEmptyArrayStorage;
  sub_100195370((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
  uint64_t v113 = v132;
  uint64_t v114 = v135;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v110);

  (*(void (**)(char *, uint64_t))(v134 + 8))(v113, v114);
  return (*(uint64_t (**)(char *, uint64_t))(v131 + 8))(v112, v133);
}

void sub_100194BDC(void *a1)
{
  id v1 = [a1 tableView];
  if (v1)
  {
    id v2 = v1;
    [v1 reloadData];
  }
  else
  {
    __break(1u);
  }
}

id sub_100194F18(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = OBJC_IVAR____TtC7Journal15InsightsAdminVC_context;
  uint64_t v7 = qword_1007F6D38;
  uint64_t v8 = v3;
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
  *(void *)&v3[v6] = v9;
  *(void *)&v8[OBJC_IVAR____TtC7Journal15InsightsAdminVC_data] = _swiftEmptyArrayStorage;
  id v10 = v9;

  if (a2)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for InsightsAdminVC();
  [super initWithNibName:v11 bundle:a3];

  return v12;
}

id sub_100195090(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Journal15InsightsAdminVC_context;
  uint64_t v4 = qword_1007F6D38;
  uint64_t v5 = v1;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
  *(void *)&v5[v3] = v6;
  *(void *)&v5[OBJC_IVAR____TtC7Journal15InsightsAdminVC_data] = _swiftEmptyArrayStorage;
  id v7 = v6;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for InsightsAdminVC();
  [super initWithCoder:a1];

  return v8;
}

id sub_10019518C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InsightsAdminVC();
  [super dealloc];
}

uint64_t type metadata accessor for InsightsAdminVC()
{
  return self;
}

uint64_t sub_100195250(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001952B8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100195318()
{
  return swift_deallocObject();
}

void sub_100195350()
{
  sub_100194BDC(*(void **)(v0 + 16));
}

uint64_t sub_100195358(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100195368()
{
  return swift_release();
}

uint64_t sub_100195370(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001953B8(uint64_t a1)
{
  uint64_t result = 0;
  if ((a1 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC7Journal15InsightsAdminVC_data);
    if (*(void *)(v4 + 16) > a1) {
      return *(void *)(*(void *)(v4 + 24 * a1 + 48) + 16);
    }
  }
  return result;
}

uint64_t sub_1001953F0(uint64_t a1)
{
  uint64_t v2 = 0;
  if ((a1 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC7Journal15InsightsAdminVC_data);
    if (*(void *)(v3 + 16) > a1)
    {
      uint64_t v2 = *(void *)(v3 + 24 * a1 + 32);
      swift_bridgeObjectRetain();
    }
  }
  return v2;
}

void sub_100195454(void *a1)
{
  self;
  uint64_t v2 = swift_dynamicCastObjCClass();
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    id v14 = a1;
    id v4 = [v3 textLabel];
    if (v4)
    {
      uint64_t v5 = v4;
      id v6 = [self blackColor];
      [v5 setTextColor:v6];
    }
    id v7 = [v3 textLabel];
    if (v7)
    {
      id v8 = v7;
      id v9 = [self boldSystemFontOfSize:22.0];
      [v8 setFont:v9];
    }
    id v10 = [v3 textLabel];
    if (v10)
    {
      NSString v11 = v10;
      [v3 bounds];
      [v11 setFrame:];
    }
    id v12 = [v3 textLabel];
    if (v12)
    {
      uint64_t v13 = v12;
      [v12 setTextAlignment:1];
    }
  }
}

id sub_100195604()
{
  id v1 = [objc_allocWithZone((Class)UITableViewCell) initWithStyle:3 reuseIdentifier:0];
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Journal15InsightsAdminVC_data);
  swift_bridgeObjectRetain();
  uint64_t v3 = IndexPath.section.getter();
  if (v3 < 0) {
    goto LABEL_15;
  }
  if (v3 >= *(void *)(v2 + 16)) {
    goto LABEL_15;
  }
  uint64_t v4 = *(void *)(v2 + 24 * v3 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = IndexPath.row.getter();
  if (v5 < 0 || v5 >= *(void *)(v4 + 16)) {
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v6 = [v1 textLabel];
  if (v6)
  {
    id v7 = v6;
    id v8 = [self boldSystemFontOfSize:18.0];
    [v7 setFont:v8];
  }
  id v9 = [v1 textLabel];
  if (v9)
  {
    id v10 = v9;
    swift_bridgeObjectRetain();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v10 setText:v11];
  }
  id v12 = [v1 detailTextLabel];
  if (v12)
  {
    uint64_t v13 = v12;
    [v12 setNumberOfLines:0];
  }
  id v14 = [v1 detailTextLabel];
  if (!v14)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    swift_bridgeObjectRelease();
    return v1;
  }
  uint64_t v15 = v14;
  swift_bridgeObjectRelease();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v15 setText:v16];

  return v1;
}

uint64_t sub_100195848(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_100052588;
  return sub_100192E50(a1, v4, v5, v6);
}

uint64_t sub_100195900()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100195940(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_10002C194;
  return sub_100192E50(a1, v4, v5, v6);
}

uint64_t sub_1001959F4()
{
  return sub_100192750(*(void **)(v0 + 16));
}

unint64_t sub_1001959FC()
{
  return 0xD000000000000023;
}

uint64_t sub_100195A18@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100196928(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_100195A44(uint64_t a1)
{
  unint64_t v2 = sub_100195BF8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100195A80(uint64_t a1)
{
  unint64_t v2 = sub_100195BF8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AudioRecordingActivityAttributes.encode(to:)(void *a1)
{
  uint64_t v2 = sub_100010218(&qword_100800CD0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_100195BF8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_100195BF8()
{
  unint64_t result = qword_100800CD8;
  if (!qword_100800CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800CD8);
  }
  return result;
}

uint64_t AudioRecordingActivityAttributes.init(from:)(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_100800CE0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (uint64_t)sub_10002E0BC(a1, a1[3]);
  sub_100195BF8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    uint64_t v7 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  return v7;
}

uint64_t sub_100195DA4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100010218(&qword_100800CE0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_100195BF8();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  uint64_t v9 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_100195F1C(void *a1)
{
  uint64_t v2 = sub_100010218(&qword_100800CD0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_100195BF8();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_100196054()
{
  return 0;
}

uint64_t sub_100196060@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_100196090(uint64_t a1)
{
  unint64_t v2 = sub_100196218();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001960CC(uint64_t a1)
{
  unint64_t v2 = sub_100196218();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t AudioRecordingActivityState.encode(to:)(void *a1)
{
  uint64_t v2 = sub_100010218(&qword_100800CE8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_100196218();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_100196218()
{
  unint64_t result = qword_100800CF0;
  if (!qword_100800CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800CF0);
  }
  return result;
}

Swift::Int AudioRecordingActivityState.hashValue.getter()
{
  return Hasher._finalize()();
}

uint64_t AudioRecordingActivityState.init(from:)(uint64_t a1)
{
  return _s7Journal19DynamicWaveformViewVwxx_0(a1);
}

Swift::Int sub_1001962CC()
{
  return Hasher._finalize()();
}

unint64_t sub_100196304()
{
  unint64_t result = qword_100800CF8;
  if (!qword_100800CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800CF8);
  }
  return result;
}

unint64_t sub_10019635C()
{
  unint64_t result = qword_100800D00;
  if (!qword_100800D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800D00);
  }
  return result;
}

unint64_t sub_1001963B4()
{
  unint64_t result = qword_100800D08;
  if (!qword_100800D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800D08);
  }
  return result;
}

unint64_t sub_10019640C()
{
  unint64_t result = qword_100800D10;
  if (!qword_100800D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800D10);
  }
  return result;
}

unint64_t sub_100196464()
{
  unint64_t result = qword_100800D18;
  if (!qword_100800D18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800D18);
  }
  return result;
}

unint64_t sub_1001964BC()
{
  unint64_t result = qword_100800D20;
  if (!qword_100800D20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800D20);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for AudioRecordingActivityAttributes(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for AudioRecordingActivityAttributes()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for AudioRecordingActivityAttributes(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for AudioRecordingActivityAttributes(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AudioRecordingActivityAttributes(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AudioRecordingActivityAttributes(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioRecordingActivityAttributes()
{
  return &type metadata for AudioRecordingActivityAttributes;
}

ValueMetadata *type metadata accessor for AudioRecordingActivityState()
{
  return &type metadata for AudioRecordingActivityState;
}

ValueMetadata *type metadata accessor for AudioRecordingActivityState.CodingKeys()
{
  return &type metadata for AudioRecordingActivityState.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for AudioRecordingActivityAttributes.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100196738);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioRecordingActivityAttributes.CodingKeys()
{
  return &type metadata for AudioRecordingActivityAttributes.CodingKeys;
}

unint64_t sub_100196774()
{
  unint64_t result = qword_100800D28;
  if (!qword_100800D28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800D28);
  }
  return result;
}

unint64_t sub_1001967CC()
{
  unint64_t result = qword_100800D30;
  if (!qword_100800D30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800D30);
  }
  return result;
}

unint64_t sub_100196824()
{
  unint64_t result = qword_100800D38;
  if (!qword_100800D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800D38);
  }
  return result;
}

unint64_t sub_10019687C()
{
  unint64_t result = qword_100800D40;
  if (!qword_100800D40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800D40);
  }
  return result;
}

unint64_t sub_1001968D4()
{
  unint64_t result = qword_100800D48;
  if (!qword_100800D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800D48);
  }
  return result;
}

uint64_t sub_100196928(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000023 && a2 == 0x800000010068D870)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

id sub_1001969B4()
{
  id result = [self configurationWithPointSize:4 weight:2 scale:22.0];
  qword_100800D50 = (uint64_t)result;
  return result;
}

id sub_1001969FC(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = &v3[OBJC_IVAR____TtC7Journal19CanvasPickerToolbar_onSelect];
  *(void *)uint64_t v5 = a2;
  *((void *)v5 + 1) = a3;
  v44.receiver = v3;
  v44.super_class = (Class)type metadata accessor for CanvasPickerToolbar();
  swift_retain();
  id v6 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1006DC970;
  sub_10001B284(0, (unint64_t *)&qword_100803F80);
  id v9 = v6;
  v45.value.super.super.Class isa = 0;
  v45.is_nil = 0;
  *(UIBarButtonItem *)(v8 + 32) = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemFlexibleSpace, v45, v53);
  if (qword_1007F79D8 != -1) {
    swift_once();
  }
  *(void *)(v8 + 40) = sub_1001971E8(0x41u);
  v46.value.super.super.Class isa = 0;
  v46.is_nil = 0;
  *(UIBarButtonItem *)(v8 + 48) = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemFlexibleSpace, v46, v54);
  if (qword_1007F79E8 != -1) {
    swift_once();
  }
  *(void *)(v8 + 56) = sub_1001971E8(0x60u);
  v47.value.super.super.Class isa = 0;
  v47.is_nil = 0;
  *(UIBarButtonItem *)(v8 + 64) = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemFlexibleSpace, v47, v55);
  if (qword_1007F79D0 != -1) {
    swift_once();
  }
  *(void *)(v8 + 72) = sub_1001971E8(0x61u);
  v48.value.super.super.Class isa = 0;
  v48.is_nil = 0;
  *(UIBarButtonItem *)(v8 + 80) = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemFlexibleSpace, v48, v56);
  if (qword_1007F79C8 != -1) {
    swift_once();
  }
  *(void *)(v8 + 88) = sub_1001971E8(0x20u);
  v49.value.super.super.Class isa = 0;
  v49.is_nil = 0;
  *(UIBarButtonItem *)(v8 + 96) = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemFlexibleSpace, v49, v57);
  if (qword_1007F79F8 != -1) {
    swift_once();
  }
  *(void *)(v8 + 104) = sub_1001971E8(0x80u);
  v50.value.super.super.Class isa = 0;
  v50.is_nil = 0;
  *(UIBarButtonItem *)(v8 + 112) = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemFlexibleSpace, v50, v58);
  v41[0] = v8;
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 setItems:isa];

  Swift::String v42 = &type metadata for JournalFeatureFlags;
  unint64_t v11 = sub_10005F364();
  unint64_t v43 = v11;
  LOBYTE(v41[0]) = 5;
  char v12 = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v41);
  if (v12)
  {
    id v13 = v9;
    id v14 = [v13 items];
    if (!v14)
    {
      [v13 setItems:0];
      swift_bridgeObjectRelease();

      goto LABEL_25;
    }
    uint64_t v15 = v14;
    uint64_t v39 = v7;
    unsigned __int8 v40 = a1;
    uint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    v41[0] = v16;
    if (qword_1007F7A00 != -1) {
      swift_once();
    }
    id v17 = sub_1001971E8(0x81u);
    v51.value.super.super.Class isa = 0;
    v51.is_nil = 0;
    v22.super.super.Class isa = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemFlexibleSpace, v51, v59).super.super.isa;
    if (v41[0] >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v38 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v24 = v38 + 2;
      if (!__OFADD__(v38, 2))
      {
LABEL_17:
        sub_1005C88B0(v24, 1, v18.super.super.isa, v19.super.super.isa, v20.super.super.isa, v21.super.super.isa);
        specialized Array._endMutation()();
        id v17 = v17;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v41[0] & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v41[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        {
LABEL_18:
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          unint64_t v25 = v22.super.super.isa;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v41[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v41[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();

          if (v41[0])
          {
            v26.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
            swift_bridgeObjectRelease();
          }
          else
          {
            v26.super.Class isa = 0;
          }
          a1 = v40;
          [v13 setItems:v26.super.isa, v39];

          goto LABEL_25;
        }
LABEL_38:
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        goto LABEL_18;
      }
    }
    else
    {
      uint64_t v23 = *(void *)((v41[0] & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v24 = v23 + 2;
      if (!__OFADD__(v23, 2)) {
        goto LABEL_17;
      }
    }
    __break(1u);
    goto LABEL_38;
  }
LABEL_25:
  Swift::String v42 = &type metadata for JournalFeatureFlags;
  unint64_t v43 = v11;
  LOBYTE(v41[0]) = 4;
  char v27 = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v41);
  if (v27)
  {
    id v28 = v9;
    id v29 = [v28 items];
    if (v29)
    {
      Swift::String v30 = v29;
      uint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      v41[0] = v31;
      unint64_t v32 = swift_allocObject();
      *(_OWORD *)(v32 + 16) = xmmword_1006D6D10;
      v52.value.super.super.Class isa = 0;
      v52.is_nil = 0;
      *(UIBarButtonItem *)(v32 + 32) = UIBarButtonItem.init(systemItem:primaryAction:menu:)(UIBarButtonSystemItemFlexibleSpace, v52, v60);
      if (qword_1007F79E0 != -1) {
        swift_once();
      }
      *(void *)(v32 + 40) = sub_1001971E8(0xA0u);
      specialized Array._endMutation()();
      sub_1000F35C0(0, 0, v32);
      if (v41[0])
      {
        v33.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
      }
      else
      {
        v33.super.Class isa = 0;
      }
      [v28 setItems:v33.super.isa];
    }
    else
    {
      [v28 setItems:0];
    }
  }
  [v9 sizeToFit];
  uint64_t v34 = self;
  id v35 = v9;
  id v36 = [v34 systemBackgroundColor];
  [v35 setBarTintColor:v36];

  [v35 setTranslucent:0];
  sub_100197DC8(a1);

  swift_release();
  return v35;
}

id sub_1001971E8(unsigned __int8 a1)
{
  uint64_t v2 = v1;
  id v4 = [objc_allocWithZone((Class)UIButton) initWithFrame:0.0, 0.0, 0.0, 0.0];
  switch(a1 >> 5)
  {
    case 1:
      if (qword_1007F6A70 != -1) {
        swift_once();
      }
      id v5 = (id)qword_100800D50;
      NSString v6 = String._bridgeToObjectiveC()();
      id v7 = [self _systemImageNamed:v6 withConfiguration:v5];

      if (v7)
      {
        uint64_t v8 = 6;
        break;
      }
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    case 2:
      if (a1 != 65) {
        goto LABEL_55;
      }
      if (qword_1007F6A70 != -1) {
        swift_once();
      }
      id v15 = (id)qword_100800D50;
      NSString v16 = String._bridgeToObjectiveC()();
      id v7 = [self _systemImageNamed:v16 withConfiguration:v15];

      if (!v7) {
        goto LABEL_50;
      }
      uint64_t v8 = 3;
      break;
    case 3:
      if (a1 == 96)
      {
        if (qword_1007F6A70 != -1) {
          swift_once();
        }
        id v11 = (id)qword_100800D50;
        NSString v12 = String._bridgeToObjectiveC()();
        id v7 = [self _systemImageNamed:v12 withConfiguration:v11];

        if (v7)
        {
          uint64_t v8 = 4;
          break;
        }
LABEL_51:
        __break(1u);
        goto LABEL_52;
      }
      if (a1 != 97) {
        goto LABEL_55;
      }
      if (qword_1007F6A70 != -1) {
        swift_once();
      }
      id v17 = (id)qword_100800D50;
      NSString v18 = String._bridgeToObjectiveC()();
      id v7 = [self _systemImageNamed:v18 withConfiguration:v17];

      if (!v7) {
        goto LABEL_53;
      }
      uint64_t v8 = 5;
      break;
    case 4:
      if (a1 == 128)
      {
        if (qword_1007F6A70 != -1) {
          swift_once();
        }
        id v13 = (id)qword_100800D50;
        NSString v14 = String._bridgeToObjectiveC()();
        id v7 = [self _systemImageNamed:v14 withConfiguration:v13];

        if (!v7)
        {
LABEL_52:
          __break(1u);
LABEL_53:
          __break(1u);
LABEL_54:
          __break(1u);
          goto LABEL_55;
        }
        uint64_t v8 = 7;
      }
      else
      {
        if (a1 != 129)
        {
LABEL_55:
          _assertionFailure(_:_:file:line:flags:)();
          __break(1u);
          JUMPOUT(0x100197A20);
        }
        if (qword_1007F6A70 != -1) {
          swift_once();
        }
        id v19 = (id)qword_100800D50;
        NSString v20 = String._bridgeToObjectiveC()();
        id v7 = [self _systemImageNamed:v20 withConfiguration:v19];

        if (!v7) {
          goto LABEL_54;
        }
        uint64_t v8 = 8;
      }
      break;
    case 5:
      if (a1 != 160) {
        goto LABEL_55;
      }
      if (qword_1007F6A70 != -1) {
        swift_once();
      }
      id v9 = (id)qword_100800D50;
      NSString v10 = String._bridgeToObjectiveC()();
      id v7 = [self systemImageNamed:v10 withConfiguration:v9];

      if (!v7) {
        id v7 = [objc_allocWithZone((Class)UIImage) init];
      }
      uint64_t v8 = 9;
      break;
    default:
      goto LABEL_55;
  }
  [v4 setTag:v8];
  id v21 = v4;
  unsigned __int8 v22 = sub_100197BF0();
  if (v22 <= 0xFDu) {
    char v23 = sub_1000DE668(v22, a1);
  }
  else {
    char v23 = 0;
  }
  [v21 setSelected:v23 & 1];

  [v21 setImage:v7 forState:0];
  sub_10001B284(0, (unint64_t *)&qword_10080A1F0);
  uint64_t v24 = self;
  id v25 = sub_1003942F8([v24 clearColor], 13.0, 13.0);
  if (v25)
  {
    NSArray v26 = v25;
    char v27 = (void *)sub_100197A34(8.0);
  }
  else
  {
    char v27 = 0;
  }
  [v21 setBackgroundImage:v27 forState:0];

  id v28 = sub_1003942F8([v24 systemFillColor], 13.0, 13.0);
  if (v28)
  {
    id v29 = v28;
    Swift::String v30 = (void *)sub_100197A34(8.0);
  }
  else
  {
    Swift::String v30 = 0;
  }
  [v21 setBackgroundImage:v30 forState:4];

  id v31 = [v21 imageView];
  if (v31)
  {
    unint64_t v32 = v31;
    id v33 = [v24 labelColor];
    [v32 setTintColor:v33];
  }
  [v21 setShowsLargeContentViewer:1];
  id v34 = v21;
  NSString v35 = String._bridgeToObjectiveC()();
  [v34 setAccessibilityLabel:v35];

  NSString v36 = String._bridgeToObjectiveC()();
  [v34 setLargeContentTitle:v36];

  [v34 addTarget:v2 action:"onButtonSelected:" forControlEvents:64];
  id v37 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v34];

  return v37;
}

uint64_t sub_100197A34(double a1)
{
  [v1 size];
  id v5 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:v3, v4];
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v1;
  *(double *)(v6 + 24) = a1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_10019830C;
  *(void *)(v7 + 24) = v6;
  v12[4] = sub_100198328;
  v12[5] = v7;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_1002438FC;
  v12[3] = &unk_10079BEC0;
  uint64_t v8 = _Block_copy(v12);
  id v9 = v1;
  swift_retain();
  swift_release();
  id v10 = [v5 imageWithActions:v8];

  _Block_release(v8);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if ((v5 & 1) == 0) {
    return (uint64_t)v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_100197BF0()
{
  id v1 = [v0 items];
  if (!v1) {
    return 254;
  }
  uint64_t v2 = v1;
  sub_10001B284(0, (unint64_t *)&qword_100803F80);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62) {
    goto LABEL_17;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v4)
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (v3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v3 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v9 = [v6 customView];
      if (v9)
      {
        id v10 = v9;
        self;
        id v11 = (void *)swift_dynamicCastObjCClass();
        if (v11)
        {
          NSString v12 = v11;
          if ([v11 isSelected])
          {
            swift_bridgeObjectRelease();
            id v13 = [v12 tag];

            char v14 = 0;
            goto LABEL_19;
          }
        }
      }
      ++v5;
      if (v8 == v4) {
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_17:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
LABEL_18:
  swift_bridgeObjectRelease();
  id v13 = 0;
  char v14 = 1;
LABEL_19:

  return sub_1001982B0((unint64_t)v13, v14);
}

id sub_100197DC8(unsigned __int8 a1)
{
  id result = [v1 items];
  if (!result) {
    return result;
  }
  uint64_t v4 = result;
  sub_10001B284(0, (unint64_t *)&qword_100803F80);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v6) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v6)
    {
LABEL_4:
      if (v6 < 1)
      {
        __break(1u);
        JUMPOUT(0x100198094);
      }
      uint64_t v7 = 0;
      unint64_t v8 = v5 & 0xC000000000000001;
      if (a1 == 128) {
        uint64_t v9 = 7;
      }
      else {
        uint64_t v9 = 8;
      }
      uint64_t v10 = 4;
      if (a1 != 96) {
        uint64_t v10 = 5;
      }
      uint64_t v24 = v10;
      uint64_t v25 = v9;
      if (a1 == 64) {
        uint64_t v11 = 2;
      }
      else {
        uint64_t v11 = 3;
      }
      uint64_t v22 = a1 & 1;
      uint64_t v23 = v11;
      unint64_t v27 = v5;
      uint64_t v28 = v6;
      unint64_t v26 = v5 & 0xC000000000000001;
      do
      {
        if (v8) {
          id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v13 = *(id *)(v5 + 8 * v7 + 32);
        }
        char v14 = v13;
        id v15 = [v13 customView:v22];
        if (v15)
        {
          NSString v12 = v15;
          self;
          uint64_t v16 = swift_dynamicCastObjCClass();
          if (v16)
          {
            id v17 = (void *)v16;
            if (a1 > 0xFDu)
            {
              id v19 = v12;
              BOOL v20 = 0;
            }
            else
            {
              uint64_t v18 = 9;
              switch(a1 >> 5)
              {
                case 1:
                  uint64_t v18 = 6;
                  break;
                case 2:
                  uint64_t v18 = v23;
                  break;
                case 3:
                  uint64_t v18 = v24;
                  break;
                case 4:
                  uint64_t v18 = v25;
                  break;
                case 5:
                  break;
                default:
                  uint64_t v18 = v22;
                  break;
              }
              id v21 = v12;
              BOOL v20 = [v17 tag] == (id)v18;
              unint64_t v8 = v26;
              unint64_t v5 = v27;
              uint64_t v6 = v28;
            }
            [v17 setSelected:v20];
            if ([v17 tag] == (id)9) {
              [v17 setEnabled:(a1 & 0xE1) == 1];
            }

            char v14 = v12;
          }
        }
        else
        {
          NSString v12 = v14;
        }
        ++v7;
      }
      while (v6 != v7);
    }
  }

  return (id)swift_bridgeObjectRelease();
}

id sub_100198184()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasPickerToolbar();
  return [super dealloc];
}

uint64_t type metadata accessor for CanvasPickerToolbar()
{
  return self;
}

id sub_1001981F0(int a1, id a2, double a3)
{
  [a2 size];
  double v6 = v5;
  double v8 = v7;
  id v9 = [self bezierPathWithRoundedRect:0.0, 0.0, v5, v7, a3];
  [v9 addClip];

  return [a2 drawInRect:0.0, 0.0, v6, v8];
}

uint64_t sub_1001982B0(unint64_t a1, char a2)
{
  uint64_t result = 254;
  if ((a2 & 1) == 0 && a1 <= 9) {
    return byte_1006DC996[a1];
  }
  return result;
}

uint64_t sub_1001982D4()
{
  return swift_deallocObject();
}

id sub_10019830C(int a1)
{
  return sub_1001981F0(a1, *(id *)(v1 + 16), *(double *)(v1 + 24));
}

uint64_t sub_100198318()
{
  return swift_deallocObject();
}

uint64_t sub_100198328(uint64_t a1)
{
  return sub_1002438D4(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_100198330(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100198340()
{
  return swift_release();
}

void sub_100198348(uint64_t a1, void (*a2)(uint64_t *__return_ptr, char *), uint64_t a3)
{
  void (*v28)(uint64_t *__return_ptr, char *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(uint64_t *__return_ptr, char *);
  uint64_t v34;

  id v29 = sub_100010218(&qword_1007FC1E8);
  uint64_t v6 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  double v8 = (char *)v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218((uint64_t *)&unk_100811440);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v14 = (char *)v26 - v13;
  id v31 = a1;
  unint64_t v32 = 0;
  id v33 = a2;
  id v34 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_10055A19C();
  uint64_t v17 = v16;
  if (v15)
  {
LABEL_11:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  v26[3] = v15;
  uint64_t v19 = v31;
  unint64_t v18 = v32;
  BOOL v20 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56);
  id v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  uint64_t v27 = v6;
  uint64_t v28 = v33;
  while (1)
  {
    unint64_t v22 = *(void *)(v19 + 16);
    if (v18 == v22)
    {
      uint64_t v23 = 1;
      goto LABEL_7;
    }
    if (v18 >= v22) {
      break;
    }
    sub_10019C9D0(v19+ ((*(unsigned __int8 *)(v27 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80))+ *(void *)(v27 + 72) * v18, (uint64_t)v14);
    uint64_t v23 = 0;
    ++v18;
LABEL_7:
    uint64_t v24 = v29;
    (*v20)(v14, v23, 1, v29);
    sub_10002C4EC((uint64_t)v14, (uint64_t)v11, (uint64_t *)&unk_100811440);
    if ((*v21)(v11, 1, v24) == 1) {
      goto LABEL_11;
    }
    sub_10002C4EC((uint64_t)v11, (uint64_t)v8, &qword_1007FC1E8);
    v28(&v30, v8);
    uint64_t v25 = v30;
    sub_10019CA38((uint64_t)v8);
    if (v17 <= v25) {
      uint64_t v17 = v25;
    }
  }
  __break(1u);
}

uint64_t sub_1001985D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  double v2 = *(double *)(a1 + 32);
  uint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    uint64_t v4 = (double *)(a1 + 40);
    do
    {
      double v5 = *v4++;
      double v6 = v5;
      if (v2 < v5) {
        double v2 = v6;
      }
      --v3;
    }
    while (v3);
  }
  return *(void *)&v2;
}

uint64_t sub_100198614()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100800D88);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100800D88);
  if (qword_1007F7D48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EBD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1001986DC(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 64) = a1;
  return _swift_task_switch(sub_100198700, 0, 0);
}

uint64_t sub_100198700()
{
  int v1 = *(unsigned __int8 *)(v0 + 64);
  *(CFAbsoluteTime *)(v0 + 24) = CFAbsoluteTimeGetCurrent();
  double v2 = sub_1004A8A88(v1);
  double v4 = v3;
  sub_1004A8A88(v1);
  double v6 = -116.0;
  if (v1 != 5) {
    double v6 = -16.0;
  }
  if (v1 == 2) {
    double v6 = -70.0;
  }
  double v7 = (v6 + v5) * 0.5;
  *(double *)(v0 + 32) = v4;
  *(double *)(v0 + 40) = v2;
  double v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v8;
  *double v8 = v0;
  v8[1] = sub_100198800;
  return sub_100198CE4(v2, v4, v7);
}

uint64_t sub_100198800(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100198900, 0, 0);
}

uint64_t sub_100198900()
{
  sub_10019896C(v0[2]);
  uint64_t v1 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v2 = v0[7];
  return v1(v2);
}

void sub_10019896C(uint64_t a1)
{
  uint64_t v17 = 0;
  unint64_t v18 = 0xE000000000000000;
  _StringGuts.grow(_:)(83);
  v2._unint64_t object = (void *)0x800000010068DB40;
  v2._uint64_t countAndFlagsBits = 0xD000000000000021;
  String.append(_:)(v2);
  type metadata accessor for CGSize(0);
  _print_unlocked<A, B>(_:_:)();
  v3._uint64_t countAndFlagsBits = 0x497465737361202CLL;
  v3._unint64_t object = (void *)0xEB00000000203A64;
  String.append(_:)(v3);
  uint64_t v4 = *(void *)(a1 + OBJC_IVAR____TtC7Journal17RouteMapGenerator_id);
  double v5 = *(void **)(a1 + OBJC_IVAR____TtC7Journal17RouteMapGenerator_id + 8);
  swift_bridgeObjectRetain();
  v6._uint64_t countAndFlagsBits = v4;
  v6._unint64_t object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  v7._uint64_t countAndFlagsBits = 0x73746E696F70202CLL;
  v7._unint64_t object = (void *)0xEA0000000000203ALL;
  String.append(_:)(v7);
  if (*(void *)(a1 + OBJC_IVAR____TtC7Journal17RouteMapGenerator_routeCoordinates) >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  v8._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 0x6574756365786520;
  v9._unint64_t object = (void *)0xED0000206E692064;
  String.append(_:)(v9);
  CFAbsoluteTimeGetCurrent();
  Double.write<A>(to:)();
  v10._uint64_t countAndFlagsBits = 0x73646E6F63657320;
  v10._unint64_t object = (void *)0xE800000000000000;
  String.append(_:)(v10);
  uint64_t v12 = v17;
  unint64_t v11 = v18;
  if (qword_1007F6A78 != -1) {
    swift_once();
  }
  uint64_t v13 = type metadata accessor for Logger();
  sub_100026A54(v13, (uint64_t)qword_100800D88);
  swift_bridgeObjectRetain();
  char v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v16 = 136315138;
    swift_bridgeObjectRetain();
    sub_10011EA98(v12, v11, &v17);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, "%s", v16, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_100198CE4(double a1, double a2, double a3)
{
  *(void *)(v4 + 168) = v3;
  *(double *)(v4 + 152) = a2;
  *(double *)(v4 + 160) = a3;
  *(double *)(v4 + 144) = a1;
  type metadata accessor for MainActor();
  *(void *)(v4 + 176) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v4 + 184) = v6;
  *(void *)(v4 + 192) = v5;
  return _swift_task_switch(sub_100198D84, v6, v5);
}

uint64_t sub_100198D84()
{
  if (((void)v0[18] & 0x7FFFFFFFFFFFFFFFLL) != 0 && ((void)v0[19] & 0x7FFFFFFFFFFFFFFFLL) != 0 && v0[20] > 0.0)
  {
    unint64_t v1 = *(void *)(*((void *)v0 + 21) + OBJC_IVAR____TtC7Journal17RouteMapGenerator_routeCoordinates);
    if (v1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      if (!v2) {
        goto LABEL_19;
      }
    }
    else
    {
      uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v2) {
        goto LABEL_19;
      }
    }
    uint64_t v3 = sub_100095EAC(0, v2 & ~(v2 >> 63), 0);
    if (v2 < 0)
    {
      __break(1u);
      return _swift_task_switch(v3, v4, v5);
    }
    for (uint64_t i = 0; i != v2; ++i)
    {
      if ((v1 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v1 + 8 * i + 32);
      }
      uint64_t v8 = v7;
      [v7 coordinate];
      MKMapPoint v9 = MKMapPointForCoordinate(v27);

      double v11 = _swiftEmptyArrayStorage[2];
      double v10 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v11 >= *(void *)&v10 >> 1) {
        sub_100095EAC(*(void *)&v10 > 1uLL, *(void *)&v11 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v11 + 1;
      *(MKMapPoint *)&_swiftEmptyArrayStorage[2 * *(void *)&v11 + 4] = v9;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    *((void *)v0 + 25) = _swiftEmptyArrayStorage;
    CGFloat v15 = v0[19];
    double v14 = v0[20];
    CGFloat v16 = v0[18];
    uint64_t v17 = (double *)swift_bridgeObjectRetain();
    double v18 = sub_10019AE48(v17, v16, v15, v14);
    uint64_t v20 = v19;
    uint64_t v22 = v21;
    uint64_t v24 = v23;
    uint64_t v25 = swift_task_alloc();
    *((void *)v0 + 26) = v25;
    *(void *)uint64_t v25 = v0;
    *(void *)(v25 + 8) = sub_100199044;
    *(_OWORD *)(v25 + 48) = *((_OWORD *)v0 + 9);
    *(void *)(v25 + 32) = v22;
    *(void *)(v25 + 40) = v24;
    *(double *)(v25 + 16) = v18;
    *(void *)(v25 + 24) = v20;
    uint64_t v3 = (uint64_t)sub_10019B3F0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    return _swift_task_switch(v3, v4, v5);
  }
  swift_release();
  uint64_t v12 = (uint64_t (*)(void))*((void *)v0 + 1);
  return v12(0);
}

uint64_t sub_100199044(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 216) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 192);
  uint64_t v4 = *(void *)(v2 + 184);
  return _swift_task_switch(sub_10019916C, v4, v3);
}

uint64_t sub_10019916C()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = OBJC_IVAR____TtC7Journal17RouteMapGenerator_mapSnapshotter;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC7Journal17RouteMapGenerator_mapSnapshotter);
  if (v3)
  {
    [v3 cancel];
    uint64_t v4 = *(void **)(v1 + v2);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t v5 = v0[27];
  *(void *)(v1 + v2) = 0;

  id v6 = [objc_allocWithZone((Class)MKMapSnapshotter) initWithOptions:v5];
  id v7 = *(void **)(v1 + v2);
  *(void *)(v1 + v2) = v6;

  uint64_t v8 = *(void **)(v1 + v2);
  v0[28] = v8;
  if (v8)
  {
    uint64_t v9 = qword_1007F6A58;
    id v10 = v8;
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v11 = qword_10083CF60;
    v0[2] = v0;
    v0[7] = v0 + 15;
    v0[3] = sub_100199374;
    uint64_t v12 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_1001998C8;
    v0[13] = &unk_10079BEE8;
    v0[14] = v12;
    [v10 startWithQueue:v11 completionHandler:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    uint64_t v13 = (void *)v0[27];
    swift_release();

    swift_bridgeObjectRelease();
    double v14 = (uint64_t (*)(void))v0[1];
    return v14(0);
  }
}

uint64_t sub_100199374()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 232) = v2;
  uint64_t v3 = *(void *)(v1 + 192);
  uint64_t v4 = *(void *)(v1 + 184);
  if (v2) {
    uint64_t v5 = sub_1001995CC;
  }
  else {
    uint64_t v5 = sub_1001994A4;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1001994A4()
{
  uint64_t v1 = (void *)v0[28];
  swift_release();
  uint64_t v2 = (void *)v0[15];

  uint64_t v3 = (void *)v0[27];
  uint64_t v4 = v0[25];
  if (v2)
  {
    uint64_t v5 = *(void *)(v4 + 16);
    id v6 = self;
    id v7 = v2;
    id v8 = [v6 polylineWithPoints:v4 + 32 count:v5];
    swift_bridgeObjectRelease();
    [v3 mapRect];
    unint64_t v13 = sub_10019B714(v8, v7, v9, v10, v11, v12);
  }
  else
  {

    swift_bridgeObjectRelease();
    unint64_t v13 = 0;
  }
  double v14 = (uint64_t (*)(unint64_t))v0[1];
  return v14(v13);
}

uint64_t sub_1001995CC()
{
  uint64_t v20 = v0;
  uint64_t v1 = (void *)v0[28];
  swift_release();
  swift_willThrow();

  if (qword_1007F6A78 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)v0[21];
  uint64_t v3 = type metadata accessor for Logger();
  sub_100026A54(v3, (uint64_t)qword_100800D88);
  id v4 = v2;
  swift_errorRetain();
  id v5 = v4;
  swift_errorRetain();
  id v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  double v9 = (void *)v0[27];
  CGFloat v10 = (char *)v0[21];
  if (v8)
  {
    double v18 = (void *)v0[27];
    uint64_t v11 = swift_slowAlloc();
    double v12 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136315394;
    uint64_t v14 = *(void *)&v10[OBJC_IVAR____TtC7Journal17RouteMapGenerator_id];
    unint64_t v13 = *(void *)&v10[OBJC_IVAR____TtC7Journal17RouteMapGenerator_id + 8];
    swift_bridgeObjectRetain();
    v0[16] = sub_10011EA98(v14, v13, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2112;
    swift_errorRetain();
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[17] = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v12 = v15;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "RouteMapGenerator [assetId: %s]: error generating snapshot: %@", (uint8_t *)v11, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16(0);
}

uint64_t sub_1001998C8(uint64_t a1, void *a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    uint64_t v5 = swift_allocError();
    *id v6 = a3;
    id v7 = a3;
    a1 = v3;
    a2 = (void *)v5;
    return _swift_continuation_throwingResumeWithError(a1, a2);
  }
  if (!a2)
  {
    __break(1u);
    return _swift_continuation_throwingResumeWithError(a1, a2);
  }
  **(void **)(*(void *)(v3 + 64) + 40) = a2;
  id v8 = a2;

  return swift_continuation_throwingResume();
}

void sub_100199988(void *a1, id a2, uint64_t a3, uint64_t a4, uint64_t a5, CLLocationDegrees a6, CLLocationDegrees a7, double a8, double a9, double a10, double a11, CLLocationDegrees a12, CLLocationDegrees a13)
{
  v49.latitude = a12;
  v49.longitude = a13;
  id v24 = [a2 image];
  [v24 size];
  double v26 = v25;

  id v27 = [a2 image];
  [v27 size];
  double v29 = v28;

  id v30 = [a2 image];
  [v30 drawInRect:CGRectMake(0.0, 0.0, v26, v29)];

  id v50 = sub_10019BBC4(0, a3);
  double v31 = 2.0;
  if ((a3 - 2) <= 3u) {
    double v31 = dbl_1006DCAE0[(char)(a3 - 2)];
  }
  uint64_t v32 = OBJC_IVAR____TtC7Journal17RouteMapGenerator_routeCoordinates;
  unint64_t v33 = *(void *)(a4 + OBJC_IVAR____TtC7Journal17RouteMapGenerator_routeCoordinates);
  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v36 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v36 == 1) {
      goto LABEL_5;
    }
LABEL_9:
    uint64_t v37 = *(void *)(a4 + v32);
    uint64_t v38 = (objc_class *)type metadata accessor for WorkoutGradientPathRenderer();
    uint64_t v39 = (char *)objc_allocWithZone(v38);
    *(void *)&v39[OBJC_IVAR____TtC7Journal27WorkoutGradientPathRenderer_routeCoordinates] = v37;
    v51.receiver = v39;
    v51.super_class = v38;
    swift_bridgeObjectRetain();
    unsigned __int8 v40 = (CGContext *)[super initWithOverlay:a5];
    Swift::String v41 = (CGContext *)[a1 CGContext];
    id v42 = a2;
    sub_10019BFE0(v41, v40, v42, a8, a9, a10, a11, v31);

    unint64_t v43 = (CGContext *)[a1 CGContext];
    CGContextStrokePath(v43);

    id v44 = sub_10019BBC4(1, a3);
    MKMapPoint v45 = MKMapPointForCoordinate(v49);
    UIAction_optional v46 = (CGContext *)[a1 CGContext];
    sub_10019BED0(v44, v42, v46, v45.x, v45.y);

    v54.latitude = a6;
    v54.longitude = a7;
    MKMapPoint v47 = MKMapPointForCoordinate(v54);
    UIAction_optional v48 = (CGContext *)[a1 CGContext];
    sub_10019BED0(v50, v42, v48, v47.x, v47.y);

    return;
  }
  if (*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10) != 1) {
    goto LABEL_9;
  }
LABEL_5:
  v53.latitude = a6;
  v53.longitude = a7;
  MKMapPoint v34 = MKMapPointForCoordinate(v53);
  NSString v35 = (CGContext *)[a1 CGContext];
  sub_10019BED0(v50, a2, v35, v34.x, v34.y);
}

void sub_100199D18()
{
  off_100800DA0 = &_swiftEmptyDictionarySingleton;
}

uint64_t type metadata accessor for RouteMapGenerator()
{
  return self;
}

uint64_t type metadata accessor for WorkoutStartLocationAnnotation()
{
  return self;
}

uint64_t type metadata accessor for WorkoutEndLocationAnnotation()
{
  return self;
}

void sub_100199E74()
{
  off_100800DA8 = &_swiftEmptyDictionarySingleton;
}

void (*sub_100199E88(void *a1, unsigned __int8 a2))(void *a1)
{
  id v4 = malloc(0x28uLL);
  *a1 = v4;
  v4[4] = sub_10019ABB0(v4, a2);
  return sub_100199EE8;
}

void sub_100199EE8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

id sub_100199F34(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  v5[OBJC_IVAR____TtC7Journal29WorkoutLocationAnnotationView_assetSizeType] = a4;
  if (a3)
  {
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v10 = 0;
  }
  v20.receiver = v5;
  v20.super_class = ObjectType;
  id v11 = [super initWithAnnotation:a1 reuseIdentifier:v10];

  double v12 = 7.0;
  if ((a4 - 2) <= 3u) {
    double v12 = dbl_1006DCB00[(char)(a4 - 2)];
  }
  id v13 = v11;
  [v13 setFrame:0.0, 0.0, v12, v12];
  uint64_t v14 = self;
  id v15 = v13;
  id v16 = [v14 clearColor];
  [v15 setBackgroundColor:v16];

  [v15 setCanShowCallout:1];
  if (!a1) {
    goto LABEL_11;
  }
  type metadata accessor for WorkoutStartLocationAnnotation();
  if (!swift_dynamicCastClass())
  {
    type metadata accessor for WorkoutEndLocationAnnotation();
    if (swift_dynamicCastClass())
    {
      id v17 = (id)HKUIStandardMapRedColor();
      goto LABEL_12;
    }
LABEL_11:
    id v17 = [v14 whiteColor];
    goto LABEL_12;
  }
  id v17 = (id)HKUIStandardMapGreenColor();
LABEL_12:
  id v18 = v17;
  [v15 setTintColor:v18];

  swift_unknownObjectRelease();
  return v15;
}

void sub_10019A158(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  double v9 = UIGraphicsGetCurrentContext();
  if (v9)
  {
    CGFloat v10 = 1.0;
    if ((v4[OBJC_IVAR____TtC7Journal29WorkoutLocationAnnotationView_assetSizeType] - 2) <= 3u) {
      CGFloat v10 = dbl_1006DCB20[(char)(v4[OBJC_IVAR____TtC7Journal29WorkoutLocationAnnotationView_assetSizeType] - 2)];
    }
    c = v9;
    CGContextSetLineWidth(v9, v10);
    id v11 = [v4 tintColor];
    if (v11)
    {
      double v12 = v11;
      id v13 = (CGColor *)[v11 CGColor];

      CGContextSetFillColorWithColor(c, v13);
      id v14 = [self whiteColor];
      id v15 = (CGColor *)[v14 CGColor];

      CGContextSetStrokeColorWithColor(c, v15);
      v18.origin.x = a1;
      v18.origin.y = a2;
      v18.size.width = a3;
      v18.size.height = a4;
      CGRect v19 = CGRectInset(v18, v10, v10);
      CGContextAddEllipseInRect(c, v19);
      CGContextDrawPath(c, kCGPathFillStroke);
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t type metadata accessor for WorkoutLocationAnnotationView()
{
  return self;
}

void sub_10019A4F8(CGContext *a1, char a2, double a3, double a4, double a5, double a6, double a7, CGFloat a8)
{
  CGMutablePathRef Mutable = CGPathCreateMutable();
  CGMutablePathRef.move(to:transform:)();
  CGMutablePathRef.addLine(to:transform:)();
  if (a2)
  {
    sub_100010218(&qword_1007FC188);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1006D6270;
    *(void *)(v12 + 32) = 0;
    *(CGFloat *)(v12 + 40) = a8 + a8;
    id v13 = (const CGPath *)CGPathRef.copy(dashingWithPhase:lengths:transform:)();
    swift_bridgeObjectRelease();
    CGContextAddPath(a1, v13);
    CGContextSetLineWidth(a1, a8);
    CGContextSetLineCap(a1, kCGLineCapRound);
    id v14 = [self grayColor];
    id v15 = (CGColor *)[v14 CGColor];

    CGContextSetStrokeColorWithColor(a1, v15);
    CGPathDrawingMode v16 = kCGPathStroke;
  }
  else
  {
    id v13 = (const CGPath *)CGPathRef.copy(strokingWithWidth:lineCap:lineJoin:miterLimit:transform:)();
    CGContextAddPath(a1, v13);
    id v15 = (CGColor *)sub_10019A6E4(a7);
    CGContextSetFillColorWithColor(a1, v15);
    CGPathDrawingMode v16 = kCGPathFill;
  }

  CGContextDrawPath(a1, v16);
}

uint64_t sub_10019A6E4(double a1)
{
  unint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC7Journal27WorkoutGradientPathRenderer_routeCoordinates);
  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_34:
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)&_swiftEmptyArrayStorage[2];
    if (v13) {
      goto LABEL_12;
    }
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  if (!v4) {
    goto LABEL_34;
  }
LABEL_3:
  uint64_t result = sub_100095ED4(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    for (uint64_t i = 0; i != v4; ++i)
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v3 + 8 * i + 32);
      }
      id v8 = v7;
      [v7 speed];
      double v10 = v9;

      unint64_t v12 = *(void *)&_swiftEmptyArrayStorage[2];
      unint64_t v11 = *(void *)&_swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1) {
        sub_100095ED4(v11 > 1, v12 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = v12 + 1;
      _swiftEmptyArrayStorage[v12 + 4] = v10;
    }
    swift_bridgeObjectRelease();
    uint64_t v13 = *(void *)&_swiftEmptyArrayStorage[2];
    if (v13)
    {
LABEL_12:
      double v14 = _swiftEmptyArrayStorage[4];
      uint64_t v15 = v13 - 1;
      if (v13 != 1)
      {
        CGPathDrawingMode v16 = &_swiftEmptyArrayStorage[5];
        do
        {
          double v17 = *v16++;
          double v18 = v17;
          if (v17 < v14) {
            double v14 = v18;
          }
          --v15;
        }
        while (v15);
      }
      double v19 = (double)v13;
      if ((unint64_t)v13 >= 4)
      {
        uint64_t v20 = v13 & 0x7FFFFFFFFFFFFFFCLL;
        float64x2_t v22 = (float64x2_t)vdupq_lane_s64(*(uint64_t *)&v19, 0);
        uint64_t v23 = (float64x2_t *)&_swiftEmptyArrayStorage[6];
        double v21 = 0.0;
        uint64_t v24 = v13 & 0x7FFFFFFFFFFFFFFCLL;
        do
        {
          float64x2_t v25 = vdivq_f64(v23[-1], v22);
          float64x2_t v26 = vdivq_f64(*v23, v22);
          double v21 = v21 + v25.f64[0] + v25.f64[1] + v26.f64[0] + v26.f64[1];
          v23 += 2;
          v24 -= 4;
        }
        while (v24);
        if (v13 == v20)
        {
LABEL_24:
          double v30 = _swiftEmptyArrayStorage[4];
          uint64_t v31 = v13 - 1;
          if (v31)
          {
            uint64_t v32 = &_swiftEmptyArrayStorage[5];
            do
            {
              double v33 = *v32++;
              double v34 = v33;
              if (v30 < v33) {
                double v30 = v34;
              }
              --v31;
            }
            while (v31);
          }
          swift_bridgeObjectRelease();
          if (v21 * 0.9 >= a1)
          {
            if (a1 < 0.0 || v21 == 0.0) {
              goto LABEL_41;
            }
LABEL_39:
            double v35 = (a1 - v14) / (v30 - v14);
            if (v35 >= 0.5)
            {
              double v41 = v35 + -0.5 + v35 + -0.5;
              double v37 = round(v41 * -179.0 + 255.0);
              double v38 = round(v41 * 13.0 + 204.0);
              double v39 = v41 * 100.0 + 0.0;
            }
            else
            {
              double v36 = v35 + v35;
              double v37 = round(v36 * 0.0 + 255.0);
              double v38 = round(v36 * 145.0 + 59.0);
              double v39 = 48.0 - v36 * 48.0;
            }
            id v40 = [objc_allocWithZone((Class)UIColor) initWithRed:v37 / 255.0 green:v38 / 255.0 blue:round(v39) / 255.0 alpha:0.85];
            goto LABEL_44;
          }
LABEL_36:
          if (a1 < 0.0 || v21 == 0.0 || v21 * 1.1 > a1) {
            goto LABEL_41;
          }
          goto LABEL_39;
        }
      }
      else
      {
        uint64_t v20 = 0;
        double v21 = 0.0;
      }
      uint64_t v27 = v13 - v20;
      double v28 = &_swiftEmptyArrayStorage[v20 + 4];
      do
      {
        double v29 = *v28++;
        double v21 = v21 + v29 / v19;
        --v27;
      }
      while (v27);
      goto LABEL_24;
    }
LABEL_35:
    swift_bridgeObjectRelease();
    double v21 = 0.0;
    double v14 = 0.0;
    double v30 = 0.0;
    if (a1 <= 0.0)
    {
LABEL_41:
      id v40 = [objc_allocWithZone((Class)UIColor) initWithRed:1.0 green:0.8 blue:0.0 alpha:0.85];
LABEL_44:
      id v42 = v40;
      id v43 = [v40 CGColor];

      return (uint64_t)v43;
    }
    goto LABEL_36;
  }
  __break(1u);
  return result;
}

id sub_10019AB48()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WorkoutGradientPathRenderer();
  return [super dealloc];
}

uint64_t type metadata accessor for WorkoutGradientPathRenderer()
{
  return self;
}

void (*sub_10019ABB0(void *a1, unsigned __int8 a2))(uint64_t a1)
{
  uint64_t v4 = malloc(0x50uLL);
  *a1 = v4;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v4[8] = sub_10019AE0C(v4);
  v4[9] = sub_10019ACA0((uint64_t)(v4 + 4), a2, isUniquelyReferenced_nonNull_native);
  return sub_10019AC40;
}

void sub_10019AC40(uint64_t a1)
{
  uint64_t v1 = *(void **)a1;
  objc_super v2 = *(void (**)(void *, void))(*(void *)a1 + 64);
  (*(void (**)(void))(*(void *)a1 + 72))();
  v2(v1, 0);

  free(v1);
}

unint64_t (*sub_10019ACA0(uint64_t a1, unsigned __int8 a2, char a3))(unint64_t result)
{
  uint64_t v4 = v3;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 24) = a2;
  uint64_t v8 = *v3;
  unint64_t v10 = sub_10001B77C(a2);
  *(unsigned char *)(a1 + 25) = v9 & 1;
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
  }
  else
  {
    char v14 = v9;
    uint64_t v15 = *(void *)(v8 + 24);
    if (v15 >= v13 && (a3 & 1) != 0)
    {
LABEL_7:
      *(void *)(a1 + 16) = v10;
      if (v14)
      {
LABEL_8:
        uint64_t v16 = *(void *)(*(void *)(*v4 + 56) + 8 * v10);
LABEL_12:
        *(void *)a1 = v16;
        return sub_10019ADC4;
      }
LABEL_11:
      uint64_t v16 = 0;
      goto LABEL_12;
    }
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_10054A82C();
      goto LABEL_7;
    }
    sub_100547308(v13, a3 & 1);
    unint64_t v17 = sub_10001B77C(a2);
    if ((v14 & 1) == (v18 & 1))
    {
      unint64_t v10 = v17;
      *(void *)(a1 + 16) = v17;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_11;
    }
  }
  uint64_t result = (unint64_t (*)(unint64_t))KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

unint64_t sub_10019ADC4(unint64_t result)
{
  uint64_t v1 = *(void *)result;
  if (*(void *)result)
  {
    objc_super v2 = **(void ***)(result + 8);
    if (*(unsigned char *)(result + 25)) {
      *(void *)(v2[7] + 8 * *(void *)(result + 16)) = v1;
    }
    else {
      return sub_10059A8B0(*(void *)(result + 16), *(unsigned char *)(result + 24), v1, v2);
    }
  }
  else if (*(unsigned char *)(result + 25))
  {
    return sub_1000F2E74(*(void *)(result + 16), **(void **)(result + 8));
  }
  return result;
}

uint64_t (*sub_10019AE0C(void *a1))(uint64_t result)
{
  *a1 = *v1;
  a1[1] = v1;
  void *v1 = 0x8000000000000000;
  return sub_10019AE3C;
}

uint64_t sub_10019AE3C(uint64_t result)
{
  **(void **)(result + 8) = *(void *)result;
  return result;
}

double sub_10019AE48(double *a1, CGFloat a2, CGFloat a3, double a4)
{
  double v7 = 0.0;
  v52.origin.CGFloat x = 0.0;
  v52.origin.y = 0.0;
  v52.size.width = a2;
  v52.size.height = a3;
  CGFloat v8 = CGRectGetWidth(v52) * 0.5;
  CGFloat v10 = v8 + 0.0 - (0.0 - v8);
  v53.origin.y = 0.0;
  v53.origin.CGFloat x = 0.0 - v8;
  CGFloat x = v53.origin.x;
  v53.size.width = v10;
  v53.size.height = a3;
  CGFloat Height = CGRectGetHeight(v53);
  char v12 = sub_100038D04(x, 0.0 - Height * 0.5, v10, Height * 0.5 + 0.0 - (0.0 - Height * 0.5));
  uint64_t v13 = *((void *)a1 + 2);
  double v14 = 0.0;
  double v15 = 0.0;
  double v16 = 0.0;
  if (v13)
  {
    double v15 = a1[4];
    double v16 = a1[5];
    uint64_t v17 = (uint64_t)&a1[2 * v13 + 4];
    double v7 = *(double *)(v17 - 16);
    double v14 = *(double *)(v17 - 8);
  }
  double v50 = v16;
  double v51 = v15;
  id v18 = [self polylineWithPoints:a1 + 4 count:v13];
  swift_bridgeObjectRelease();
  [v18 boundingMapRect];
  double v22 = v21;
  double v24 = v23;
  double v25 = v19;
  double v26 = v20;
  if (a2 >= 1.0 && a3 >= 1.0)
  {
    double v45 = sqrt(v19 * v19 + v20 * v20) * 0.5;
    double rect2 = v14;
    double v27 = 8.0;
    switch(v12)
    {
      case 2:
        double v27 = 35.0;
        goto LABEL_7;
      case 5:
        swift_bridgeObjectRelease();
        double v30 = v45 / (a4 + -20.0);
        double v33 = v30 * a4;
        double v49 = v30 * a2;
        double v44 = v33;
        double v46 = v30 * a3;
        double v32 = v30 * 58.0;
        double v34 = 24.0;
        break;
      default:
LABEL_7:
        double v43 = v27;
        char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        double v29 = 20.0;
        if (v28)
        {
LABEL_17:
          double v30 = v45 / (a4 - v29);
          double v38 = v30 * a4;
          double v39 = v30 * a2;
          double v32 = v43 * v30;
          double v49 = v39;
          double v44 = v38;
          double v46 = v30 * a3;
          switch(v12)
          {
            case 5:
              double v34 = 24.0;
              break;
            case 4:
              double v34 = 4.0;
              break;
            case 2:
              double v34 = 12.0;
              break;
            default:
LABEL_21:
              double v34 = 7.0;
              break;
          }
        }
        else
        {
          switch(v12)
          {
            case 1:
            case 2:
            case 3:
            case 4:
              char v35 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v35) {
                goto LABEL_17;
              }
              switch(v12)
              {
                case 2:
                  swift_bridgeObjectRelease();
                  double v30 = v45 / (a4 + -15.0);
                  double v36 = v30 * a4;
                  double v49 = v30 * a2;
                  double v44 = v36;
                  double v46 = v30 * a3;
                  double v32 = v30 * v43;
                  double v34 = 12.0;
                  break;
                default:
                  char v37 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v37) {
                    double v29 = 15.0;
                  }
                  else {
                    double v29 = 10.0;
                  }
                  goto LABEL_17;
              }
              break;
            default:
              swift_bridgeObjectRelease();
              double v30 = v45 / (a4 + -20.0);
              double v31 = v30 * a4;
              double v49 = v30 * a2;
              double v44 = v31;
              double v46 = v30 * a3;
              double v32 = v30 * v43;
              goto LABEL_21;
          }
        }
        break;
    }
    double v40 = v30 * v34 * 0.5;
    v54.origin.CGFloat x = v22;
    v54.origin.y = v24;
    v54.size.width = v25;
    v54.size.height = v26;
    v58.origin.y = v50;
    v58.origin.CGFloat x = v51;
    v58.size.width = v40;
    v58.size.height = v40;
    MKMapRect v55 = MKMapRectUnion(v54, v58);
    v59.origin.CGFloat x = v7;
    v59.origin.y = rect2;
    v59.size.width = v40;
    v59.size.height = v40;
    MKMapRect v56 = MKMapRectUnion(v55, v59);
    double v26 = v46;
    double v22 = v56.origin.x + v56.size.width * 0.5 - (v32 + v44);
    double v24 = v56.origin.y + v56.size.height * 0.5 - (v32 + v44);
    double v25 = v49;
  }
  v57.origin.CGFloat x = v22;
  v57.origin.y = v24;
  v57.size.width = v25;
  v57.size.height = v26;
  *(void *)&double v41 = (unint64_t)MKCoordinateRegionForMapRect(v57);

  return v41;
}

uint64_t sub_10019B3C8(double a1, double a2, double a3, double a4, double a5, double a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return _swift_task_switch(sub_10019B3F0, 0, 0);
}

uint64_t sub_10019B3F0()
{
  double v2 = *(double *)(v0 + 32);
  double v1 = *(double *)(v0 + 40);
  CLLocationDegrees v4 = *(double *)(v0 + 16);
  CLLocationDegrees v3 = *(double *)(v0 + 24);
  id v5 = [objc_allocWithZone((Class)MKMapSnapshotOptions) init];
  id v6 = [self traitCollectionWithUserInterfaceStyle:2];
  [v5 setTraitCollection:v6];

  v14.latitude = v4;
  v14.longitude = v3;
  if (CLLocationCoordinate2DIsValid(v14) && v2 >= 0.0 && v1 >= 0.0) {
    [v5 setRegion:*(double *)(v0 + 16), *(double *)(v0 + 24), *(double *)(v0 + 32), *(double *)(v0 + 40)];
  }
  double v8 = *(double *)(v0 + 48);
  double v7 = *(double *)(v0 + 56);
  [v5 setMapType:0];
  [v5 setSize:v8, v7];
  id v9 = [objc_allocWithZone((Class)MKStandardMapConfiguration) init];
  id v10 = [self filterExcludingAllCategories];
  [v9 setPointOfInterestFilter:v10];

  [v5 setPreferredConfiguration:v9];
  uint64_t v11 = *(uint64_t (**)(id))(v0 + 8);
  return v11(v5);
}

id sub_10019B59C(double a1, double a2)
{
  if (qword_1007F6A80 != -1) {
    swift_once();
  }
  swift_beginAccess();
  CLLocationDegrees v4 = off_100800DA0;
  if (*((void *)off_100800DA0 + 2) && (uint64_t v5 = sub_10001BD0C(a1, a2), (v6 & 1) != 0))
  {
    id v11 = *(id *)(v4[7] + 8 * v5);
    swift_endAccess();
    return v11;
  }
  else
  {
    swift_endAccess();
    id v8 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithSize:a1, a2];
    swift_beginAccess();
    id v9 = v8;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v12 = off_100800DA0;
    off_100800DA0 = (_UNKNOWN *)0x8000000000000000;
    sub_100599A6C((uint64_t)v9, isUniquelyReferenced_nonNull_native, a1, a2);
    off_100800DA0 = v12;
    swift_bridgeObjectRelease();
    swift_endAccess();
    return v9;
  }
}

unint64_t sub_10019B714(id a1, void *a2, double a3, CGFloat a4, double a5, double a6)
{
  double v16 = (char *)OBJC_IVAR____TtC7Journal17RouteMapGenerator_routeCoordinates;
  unint64_t v17 = *(void *)(isEscapingClosureAtFileLocation + OBJC_IVAR____TtC7Journal17RouteMapGenerator_routeCoordinates);
  if (v17 >> 62) {
    goto LABEL_15;
  }
  uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v18)
  {
LABEL_20:
    swift_bridgeObjectRelease();
    return 0;
  }
  while (1)
  {
    if ((v17 & 0xC000000000000001) != 0)
    {
      id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_19;
      }
      id v19 = *(id *)(v17 + 32);
    }
    double v20 = v19;
    swift_bridgeObjectRelease();
    double v7 = &selRef_drawMapRect_zoomScale_inContext_;
    [v20 coordinate];
    uint64_t v8 = v21;
    double v9 = v22;

    unint64_t v17 = *(void *)&v16[isEscapingClosureAtFileLocation];
    if (!(v17 >> 62))
    {
      uint64_t v23 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (!v23) {
        goto LABEL_20;
      }
      goto LABEL_8;
    }
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
    if (!v23) {
      goto LABEL_20;
    }
LABEL_8:
    unint64_t result = v23 - 1;
    if (__OFSUB__(v23, 1))
    {
      __break(1u);
LABEL_23:
      id v25 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_13;
    }
    double v50 = a5;
    double v51 = a6;
    uint64_t v48 = v8;
    CGFloat v49 = a4;
    double v47 = v9;
    if ((v17 & 0xC000000000000001) != 0) {
      goto LABEL_23;
    }
    if ((result & 0x8000000000000000) != 0) {
      break;
    }
    if (result >= *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_25;
    }
    id v25 = *(id *)(v17 + 8 * result + 32);
LABEL_13:
    double v26 = v25;
    swift_bridgeObjectRelease();
    [v26 v7[192]];
    uint64_t v28 = v27;
    uint64_t v30 = v29;

    id v31 = [a2 image];
    [v31 size];
    CGFloat v33 = v32;
    CGFloat v35 = v34;

    uint64_t v8 = 0;
    v53.origin.CGFloat x = 0.0;
    v53.origin.y = 0.0;
    v53.size.width = v33;
    v53.size.height = v35;
    double v9 = 0.5;
    CGFloat v36 = CGRectGetWidth(v53) * 0.5;
    a4 = v36 + 0.0 - (0.0 - v36);
    v54.origin.y = 0.0;
    v54.origin.CGFloat x = 0.0 - v36;
    CGFloat x = v54.origin.x;
    v54.size.width = a4;
    v54.size.height = v35;
    CGFloat Height = CGRectGetHeight(v54);
    char v39 = sub_100038D04(x, 0.0 - Height * 0.5, a4, Height * 0.5 + 0.0 - (0.0 - Height * 0.5));
    id v40 = [a2 image];
    [v40 size];
    a6 = v41;
    a5 = v42;

    id v43 = sub_10019B59C(a6, a5);
    unint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = a2;
    *(unsigned char *)(v17 + 24) = v39;
    *(void *)(v17 + 32) = isEscapingClosureAtFileLocation;
    *(void *)(v17 + 40) = v48;
    *(double *)(v17 + 48) = v47;
    *(void *)(v17 + 56) = a1;
    *(double *)(v17 + 64) = a3;
    *(CGFloat *)(v17 + 72) = v49;
    *(double *)(v17 + 80) = v50;
    *(double *)(v17 + 88) = v51;
    *(void *)(v17 + 96) = v28;
    *(void *)(v17 + 104) = v30;
    double v7 = (char **)swift_allocObject();
    v7[2] = (char *)sub_10019BB78;
    v7[3] = (char *)v17;
    aBlock[4] = sub_100198328;
    aBlock[5] = v7;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1002438FC;
    void aBlock[3] = &unk_10079BF50;
    double v16 = (char *)_Block_copy(aBlock);
    id v44 = a2;
    id v45 = (id)isEscapingClosureAtFileLocation;
    id v46 = a1;
    swift_retain();
    swift_release();
    a1 = [v43 imageWithActions:v16];

    _Block_release(v16);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return (unint64_t)a1;
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
    if (!_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_10019BB30()
{
  return swift_deallocObject();
}

void sub_10019BB78(void *a1)
{
  sub_100199988(a1, *(id *)(v1 + 16), *(unsigned __int8 *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 56), *(CLLocationDegrees *)(v1 + 40), *(CLLocationDegrees *)(v1 + 48), *(double *)(v1 + 64), *(double *)(v1 + 72), *(double *)(v1 + 80), *(double *)(v1 + 88), *(CLLocationDegrees *)(v1 + 96), *(CLLocationDegrees *)(v1 + 104));
}

uint64_t sub_10019BB9C()
{
  return swift_deallocObject();
}

uint64_t sub_10019BBAC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10019BBBC()
{
  return swift_release();
}

id sub_10019BBC4(char a1, uint64_t a2)
{
  int v3 = a1 & 1;
  if (qword_1007F6A88 != -1) {
    swift_once();
  }
  swift_beginAccess();
  CLLocationDegrees v4 = off_100800DA8;
  if (*((void *)off_100800DA8 + 2)
    && (unint64_t v5 = sub_10001B77C(a2), (v6 & 1) != 0)
    && (uint64_t v7 = *(void *)(v4[7] + 8 * v5), *(void *)(v7 + 16))
    && (unint64_t v8 = sub_10001BDC8(v3), (v9 & 1) != 0))
  {
    id v26 = *(id *)(*(void *)(v7 + 56) + 8 * v8);
    swift_endAccess();
    return v26;
  }
  else
  {
    uint64_t v11 = 0xD000000000000027;
    swift_endAccess();
    if (v3)
    {
      started = (objc_class *)type metadata accessor for WorkoutEndLocationAnnotation();
      uint64_t v13 = "WorkoutLocationAnnotationView.endingPin";
    }
    else
    {
      started = (objc_class *)type metadata accessor for WorkoutStartLocationAnnotation();
      uint64_t v11 = 0xD000000000000029;
      uint64_t v13 = "WorkoutLocationAnnotationView.startingPin";
    }
    unint64_t v14 = (unint64_t)(v13 - 32) | 0x8000000000000000;
    id v15 = [objc_allocWithZone(started) init];
    id v16 = objc_allocWithZone((Class)type metadata accessor for WorkoutLocationAnnotationView());
    id v17 = sub_100199F34((uint64_t)v15, v11, v14, a2);
    swift_beginAccess();
    if (*((void *)off_100800DA8 + 2) && (sub_10001B77C(a2), (v18 & 1) != 0))
    {
      swift_endAccess();
      swift_beginAccess();
      double v20 = sub_100199E88(v28, a2);
      if (*v19)
      {
        uint64_t v21 = v19;
        id v17 = v17;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v27 = *v21;
        *uint64_t v21 = 0x8000000000000000;
        sub_100599D58((uint64_t)v17, v3, isUniquelyReferenced_nonNull_native);
        *uint64_t v21 = v27;
        swift_bridgeObjectRelease();
      }
      ((void (*)(void *, void))v20)(v28, 0);
    }
    else
    {
      swift_endAccess();
      sub_100010218(&qword_100800EC0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1006D6280;
      *(unsigned char *)(inited + 32) = v3;
      *(void *)(inited + 40) = v17;
      unint64_t v24 = sub_1003980A4(inited);
      swift_setDeallocating();
      id v17 = v17;
      sub_100010218(&qword_100800EC8);
      swift_arrayDestroy();
      swift_beginAccess();
      char v25 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v29 = off_100800DA8;
      off_100800DA8 = (_UNKNOWN *)0x8000000000000000;
      sub_100599BAC(v24, a2, v25);
      off_100800DA8 = v29;
      swift_bridgeObjectRelease();
    }
    swift_endAccess();
    return v17;
  }
}

void sub_10019BED0(void *a1, void *a2, CGContext *a3, double a4, double a5)
{
  CLLocationCoordinate2D v8 = MKCoordinateForMapPoint(*(MKMapPoint *)&a4);
  [a2 pointForCoordinate:v8.latitude, v8.longitude];
  double v10 = v9;
  double v12 = v11;
  [a1 bounds];
  double v13 = v10 - CGRectGetMidX(v21);
  [a1 centerOffset];
  CGFloat v15 = v13 + v14;
  [a1 bounds];
  double v16 = v12 - CGRectGetMidY(v22);
  [a1 centerOffset];
  CGFloat v18 = v16 + v17;
  CGContextSaveGState(a3);
  CGContextTranslateCTM(a3, v15, v18);
  [a1 prepareForSnapshotting];
  id v19 = [a1 layer];
  [v19 renderInContext:a3];

  CGContextRestoreGState(a3);
}

void sub_10019BFE0(CGContext *a1, CGContext *a2, void *a3, double a4, double a5, double a6, double a7, double a8)
{
  double v45 = a8;
  v46.origin.CGFloat x = a4;
  v46.size.width = a6;
  v46.size.height = a7;
  v46.origin.y = a5;
  uint64_t v50 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  double v13 = (char *)v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44[0] = a1;
  CGContextSetBlendMode(a1, kCGBlendModeNormal);
  v44[1] = a2;
  unint64_t v14 = *(void *)((char *)a2 + OBJC_IVAR____TtC7Journal27WorkoutGradientPathRenderer_routeCoordinates);
  if (v14 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter())
    {
LABEL_3:
      unint64_t v48 = v14 & 0xC000000000000001;
      if ((v14 & 0xC000000000000001) != 0)
      {
        id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return;
        }
        id v16 = *(id *)(v14 + 32);
      }
      id v17 = v16;
      swift_bridgeObjectRelease();
      id v18 = [v17 timestamp];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      Date.timeIntervalSinceReferenceDate.getter();
      double v20 = v19;
      CGRect v21 = *(void (**)(char *, uint64_t))(v11 + 8);
      v21(v13, v50);
      if (v14 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
        if (!v22)
        {
LABEL_20:
          swift_bridgeObjectRelease();

          return;
        }
      }
      else
      {
        uint64_t v22 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v22) {
          goto LABEL_20;
        }
      }
      if (v22 >= 1)
      {
        uint64_t v23 = 0;
        double v47 = v45 * v45;
        do
        {
          double v49 = v20;
          if (v48) {
            id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v26 = *(id *)(v14 + 8 * v23 + 32);
          }
          uint64_t v27 = v26;
          [v17 coordinate];
          MKMapPoint v28 = MKMapPointForCoordinate(v52);
          [v27 coordinate];
          MKMapPoint v29 = MKMapPointForCoordinate(v53);
          CLLocationCoordinate2D v30 = MKCoordinateForMapPoint(v28);
          [a3 pointForCoordinate:v30.latitude, v30.longitude];
          double v32 = v31;
          double v34 = v33;
          CLLocationCoordinate2D v35 = MKCoordinateForMapPoint(v29);
          [a3 pointForCoordinate:v35.latitude, v35.longitude];
          double v37 = v36;
          double v39 = v38;
          if (v47 <= (v36 - v32) * (v36 - v32) + (v38 - v34) * (v38 - v34))
          {
            v54.origin.CGFloat x = fmin(v28.x, v29.x);
            v54.origin.y = fmin(v28.y, v29.y);
            v54.size.width = vabdd_f64(v28.x, v29.x);
            v54.size.height = vabdd_f64(v28.y, v29.y);
            if (MKMapRectIntersectsRect(v46, v54))
            {
              id v40 = [v27 timestamp];
              static Date._unconditionallyBridgeFromObjectiveC(_:)();

              Date.timeIntervalSinceReferenceDate.getter();
              double v42 = v41;
              v21(v13, v50);
              LOBYTE(v40) = v42 - v49 > 5.0;
              [v27 speed:v42 - v49];
              sub_10019A4F8(v44[0], (char)v40, v32, v34, v37, v39, v43, v45);
            }

            id v17 = v27;
          }
          ++v23;
          id v24 = [v27 timestamp];
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          Date.timeIntervalSinceReferenceDate.getter();
          double v20 = v25;

          v21(v13, v50);
        }
        while (v22 != v23);
        goto LABEL_20;
      }
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_3;
    }
  }

  swift_bridgeObjectRelease();
}

void sub_10019C44C(CGContext *a1, CGContext *a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  double v42 = a9;
  double v38 = a7;
  v39.origin.CGFloat x = a3;
  v39.size.width = a5;
  v39.size.height = a6;
  v39.origin.y = a4;
  uint64_t v43 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  unint64_t v14 = (char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37[0] = a1;
  CGContextSetBlendMode(a1, kCGBlendModeNormal);
  v37[1] = a2;
  unint64_t v15 = *(void *)((char *)a2 + OBJC_IVAR____TtC7Journal27WorkoutGradientPathRenderer_routeCoordinates);
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter())
    {
LABEL_3:
      unint64_t v41 = v15 & 0xC000000000000001;
      if ((v15 & 0xC000000000000001) != 0)
      {
        id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
LABEL_27:
          __break(1u);
          return;
        }
        id v17 = *(id *)(v15 + 32);
      }
      id v18 = v17;
      swift_bridgeObjectRelease();
      id v19 = [v18 timestamp];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      Date.timeIntervalSinceReferenceDate.getter();
      double v21 = v20;
      uint64_t v22 = *(void (**)(char *, uint64_t))(v12 + 8);
      v22(v14, v43);
      if (v15 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        if (!v23)
        {
LABEL_20:
          swift_bridgeObjectRelease();

          return;
        }
      }
      else
      {
        uint64_t v23 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v23) {
          goto LABEL_20;
        }
      }
      if (v23 >= 1)
      {
        uint64_t v24 = 0;
        double v40 = v38 * v38;
        do
        {
          if (v41) {
            id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v27 = *(id *)(v15 + 8 * v24 + 32);
          }
          MKMapPoint v28 = v27;
          [v18 coordinate];
          MKMapPoint v29 = MKMapPointForCoordinate(v45);
          [v28 coordinate];
          MKMapPoint v30 = MKMapPointForCoordinate(v46);
          double v31 = v29.y - v42;
          double v32 = v30.y - v42;
          if (v40 <= (v30.x - a8 - (v29.x - a8)) * (v30.x - a8 - (v29.x - a8)) + (v32 - v31) * (v32 - v31))
          {
            v47.origin.CGFloat x = fmin(v29.x, v30.x);
            v47.origin.y = fmin(v29.y, v30.y);
            v47.size.width = vabdd_f64(v29.x, v30.x);
            v47.size.height = vabdd_f64(v29.y, v30.y);
            if (MKMapRectIntersectsRect(v39, v47))
            {
              id v33 = [v28 timestamp];
              static Date._unconditionallyBridgeFromObjectiveC(_:)();

              Date.timeIntervalSinceReferenceDate.getter();
              double v35 = v34;
              v22(v14, v43);
              [v28 speed:v35 - v21, 5.0];
              sub_10019A4F8(v37[0], v35 - v21 > 5.0, v29.x - a8, v31, v30.x - a8, v32, v36, v38);
            }

            id v18 = v28;
          }
          ++v24;
          id v25 = [v28 timestamp];
          static Date._unconditionallyBridgeFromObjectiveC(_:)();

          Date.timeIntervalSinceReferenceDate.getter();
          double v21 = v26;

          v22(v14, v43);
        }
        while (v23 != v24);
        goto LABEL_20;
      }
      goto LABEL_27;
    }
  }
  else
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16) {
      goto LABEL_3;
    }
  }

  swift_bridgeObjectRelease();
}

unsigned char *storeEnumTagSinglePayload for WorkoutLocationAnnotationView.WorkoutLocationAnnotationType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10019C940);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutLocationAnnotationView.WorkoutLocationAnnotationType()
{
  return &type metadata for WorkoutLocationAnnotationView.WorkoutLocationAnnotationType;
}

unint64_t sub_10019C97C()
{
  unint64_t result = qword_100800ED0;
  if (!qword_100800ED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100800ED0);
  }
  return result;
}

uint64_t sub_10019C9D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007FC1E8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10019CA38(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FC1E8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10019CA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[12] = a6;
  v7[13] = v6;
  v7[10] = a4;
  v7[11] = a5;
  v7[8] = a2;
  v7[9] = a3;
  v7[7] = a1;
  return _swift_task_switch(sub_10019CAC4, 0, 0);
}

uint64_t sub_10019CAC4()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 64);
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  *(_OWORD *)(v0 + 16) = 0u;
  double v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v1 + 8) + **(int **)(v1 + 8));
  int v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v3;
  *int v3 = v0;
  v3[1] = sub_10019CBE0;
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 80);
  uint64_t v6 = *(void *)(v0 + 88);
  uint64_t v7 = *(void *)(v0 + 72);
  uint64_t v8 = *(void *)(v0 + 56);
  return v10(v8, v0 + 16, v2, 0, v5, v4, v7, v6);
}

uint64_t sub_10019CBE0()
{
  uint64_t v1 = *v0 + 16;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_10001457C(v1, (uint64_t *)&unk_100804050);
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

uint64_t sub_10019CCE8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v40 = a8;
  uint64_t v39 = a7;
  uint64_t v36 = a2;
  uint64_t v37 = a4;
  double v42 = a3;
  uint64_t v12 = *(void *)(a6 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v38 = a9;
  __chkstk_darwin(a1);
  double v34 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v17);
  id v18 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v19 - 8);
  double v21 = (char *)&v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v35 = v21;
  uint64_t v22 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v18, a1, a5);
  uint64_t v23 = a6;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v36, a6);
  unint64_t v24 = (*(unsigned __int8 *)(v15 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unint64_t v25 = (v16 + *(unsigned __int8 *)(v12 + 80) + v24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  double v26 = (char *)swift_allocObject();
  *((void *)v26 + 2) = 0;
  *((void *)v26 + 3) = 0;
  *((void *)v26 + 4) = v37;
  *((void *)v26 + 5) = a5;
  uint64_t v27 = v39;
  *((void *)v26 + 6) = a6;
  *((void *)v26 + 7) = v27;
  uint64_t v28 = v41;
  uint64_t v29 = v38;
  *((void *)v26 + 8) = v40;
  *((void *)v26 + 9) = v29;
  *((void *)v26 + 10) = v28;
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(&v26[v24], v18, a5);
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v26[v25], v34, v23);
  MKMapPoint v30 = v42;
  *(void *)&v26[(v13 + v25 + 7) & 0xFFFFFFFFFFFFFFF8] = v42;
  swift_unknownObjectRetain();
  id v31 = v30;
  sub_100328A60((uint64_t)v35, (uint64_t)&unk_100800FE8, (uint64_t)v26);
  return swift_release();
}

uint64_t sub_10019CFD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 128) = v12;
  *(_OWORD *)(v8 + 96) = v10;
  *(_OWORD *)(v8 + 112) = v11;
  *(void *)(v8 + 80) = a7;
  *(void *)(v8 + 88) = a8;
  *(void *)(v8 + 64) = a5;
  *(void *)(v8 + 72) = a6;
  *(void *)(v8 + 56) = a4;
  return _swift_task_switch(sub_10019D010, 0, 0);
}

uint64_t sub_10019D010()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[13];
  uint64_t v14 = v0[14];
  uint64_t v4 = v0[9];
  uint64_t v3 = v0[10];
  v0[5] = v2;
  v0[6] = v1;
  uint64_t v5 = sub_100062E54(v0 + 2);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v5, v4, v2);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t *, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 + 8) + **(int **)(v14 + 8));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[17] = (uint64_t)v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10019D168;
  uint64_t v8 = v0[14];
  uint64_t v7 = v0[15];
  uint64_t v10 = v0[11];
  uint64_t v9 = v0[12];
  uint64_t v11 = v0[8];
  return v13(v11, v0 + 2, 0, v3, v9, v7, v10, v8);
}

uint64_t sub_10019D168()
{
  uint64_t v1 = *v0 + 16;
  uint64_t v4 = *v0;
  swift_task_dealloc();
  sub_10001457C(v1, (uint64_t *)&unk_100804050);
  uint64_t v2 = *(uint64_t (**)(void))(v4 + 8);
  return v2();
}

void sub_10019D270()
{
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for CanvasAudioPickerController();
  [super viewDidLoad];
  id v1 = [v0 view];
  if (!v1)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v2 = v1;
  if (qword_1007F79A0 != -1) {
    swift_once();
  }
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 setAccessibilityLabel:v3];

  id v4 = [v0 view];
  if (!v4) {
    goto LABEL_8;
  }
  uint64_t v5 = v4;
  [v4 setAccessibilityContainerType:4];

  id v6 = [v0 view];
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = [self systemBackgroundColor];
    [v7 setBackgroundColor:v8];

    sub_10019D848();
    return;
  }
LABEL_9:
  __break(1u);
}

id sub_10019D5D8()
{
  id v1 = [self defaultCenter];
  uint64_t v2 = qword_1007F6EA0;
  id v3 = v0;
  if (v2 != -1) {
    swift_once();
  }
  [v1 removeObserver:v3 name:qword_10083D428 object:0];

  v5.receiver = v3;
  v5.super_class = (Class)type metadata accessor for CanvasAudioPickerController();
  return [super dealloc];
}

void sub_10019D848()
{
  id v1 = v0;
  uint64_t v2 = sub_100010218(&qword_100800F90);
  __chkstk_darwin(v2 - 8);
  uint64_t v131 = (char *)&v127 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for NSNotificationCenter.Publisher();
  uint64_t v132 = *(void *)(v4 - 8);
  uint64_t v133 = v4;
  __chkstk_darwin(v4);
  id v6 = (char *)&v127 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218((uint64_t *)&unk_100800FF0);
  uint64_t v134 = *(void *)(v7 - 8);
  uint64_t v135 = v7;
  __chkstk_darwin(v7);
  uint64_t v130 = (char *)&v127 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [objc_allocWithZone((Class)type metadata accessor for AudioManager(0)) init];
  uint64_t v10 = OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_audioManager;
  uint64_t v11 = *(void **)&v1[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_audioManager];
  *(void *)&v1[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_audioManager] = v9;

  uint64_t v12 = *(void **)&v1[v10];
  if (v12)
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v127 - 2) = v12;
    *(&v127 - 1) = v1;
    id v137 = v12;
    sub_1001A0F4C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
    id v14 = v12;
    uint64_t v15 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

    swift_release();
  }
  uint64_t v16 = OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_tapLabel;
  uint64_t v17 = qword_1007F77A8;
  id v18 = *(id *)&v1[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_tapLabel];
  if (v17 != -1) {
    swift_once();
  }
  NSString v19 = String._bridgeToObjectiveC()();
  [v18 setText:v19];

  id v20 = *(id *)&v1[v16];
  sub_1001A0C5C(v20);

  [*(id *)&v1[v16] setIsAccessibilityElement:0];
  [*(id *)&v1[v16] setShowsLargeContentViewer:1];
  uint64_t v21 = OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_recordButton;
  id v22 = *(id *)&v1[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_recordButton];
  [v22 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v23 = [v22 heightAnchor];
  id v24 = [v23 constraintEqualToConstant:120.0];

  [v24 setActive:1];
  id v25 = *(id *)&v1[v21];
  [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v26 = [v25 widthAnchor];
  id v27 = [v26 constraintEqualToConstant:120.0];

  [v27 setActive:1];
  id v28 = [*(id *)&v1[v21] layer];
  [v28 setCornerRadius:60.0];

  id v29 = [*(id *)&v1[v21] layer];
  MKMapPoint v30 = self;
  id v31 = [v30 redColor];
  id v32 = [v31 colorWithAlphaComponent:0.3];

  id v33 = [v32 CGColor];
  [v29 setBackgroundColor:v33];

  uint64_t v136 = v21;
  id v34 = *(id *)&v1[v21];
  id v35 = [v30 redColor];
  id v36 = [self configurationWithHierarchicalColor:v35];

  NSString v37 = String._bridgeToObjectiveC()();
  id v38 = [self systemImageNamed:v37 withConfiguration:v36];

  if (v38)
  {
    uint64_t v39 = sub_1003943D8(45.0);
  }
  else
  {
    uint64_t v39 = 0;
  }
  [v34 setImage:v39 forState:0];

  id v40 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v1 action:"recordButtonTapped"];
  uint64_t v41 = v136;
  double v42 = *(void **)&v1[v136];
  id v128 = v40;
  [v42 addGestureRecognizer:];
  id v43 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v1 action:"recordButtonDoubleTapped"];
  [v43 setNumberOfTapsRequired:2];
  id v44 = *(void **)&v1[v41];
  id v127 = v43;
  [v44 addGestureRecognizer:v43];
  sub_10019FD48();
  double v45 = *(double *)&v1[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_audioPickerPulseRadius];
  CLLocationCoordinate2D v46 = (objc_class *)type metadata accessor for AudioButtonPulseAnimation();
  id v47 = objc_allocWithZone(v46);
  unint64_t v48 = sub_1002F51B8(v45, 4.0, 0.0);
  uint64_t v49 = OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pulses1;
  uint64_t v50 = *(void **)&v1[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pulses1];
  *(void *)&v1[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pulses1] = v48;

  uint64_t v51 = *(void *)&v1[v49];
  if (v51) {
    [*(id *)(v51 + OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_animationGroup) setRemovedOnCompletion:0];
  }
  uint64_t v129 = v16;
  id v52 = objc_allocWithZone(v46);
  CLLocationCoordinate2D v53 = sub_1002F51B8(v45, 4.0, 2.0);
  uint64_t v54 = OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pulses2;
  MKMapRect v55 = *(void **)&v1[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pulses2];
  *(void *)&v1[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pulses2] = v53;

  uint64_t v56 = *(void *)&v1[v54];
  if (v56) {
    [*(id *)(v56 + OBJC_IVAR____TtC7Journal25AudioButtonPulseAnimation_animationGroup) setRemovedOnCompletion:0];
  }
  id v57 = [objc_allocWithZone((Class)UIView) init];
  id v58 = [self defaultCenter];
  MKMapRect v59 = UIAccessibilityReduceMotionStatusDidChangeNotification;
  UIMenu_optional v60 = v6;
  NSNotificationCenter.Publisher.init(center:name:object:)();
  sub_10001FB8C();
  id v137 = (id)static OS_dispatch_queue.main.getter();
  uint64_t v61 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  uint64_t v62 = (uint64_t)v131;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v131, 1, 1, v61);
  sub_1001A0F4C(&qword_1007FB8C8, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  sub_1001A0F4C((unint64_t *)&qword_100803910, (void (*)(uint64_t))sub_10001FB8C);
  uint64_t v63 = v130;
  uint64_t v64 = v133;
  Publisher.subscribe<A>(on:options:)();
  sub_10001457C(v62, &qword_100800F90);

  (*(void (**)(char *, uint64_t))(v132 + 8))(v60, v64);
  *(void *)(swift_allocObject() + 16) = v57;
  sub_100014488((unint64_t *)&unk_100801000, (uint64_t *)&unk_100800FF0);
  id v65 = v57;
  uint64_t v66 = v135;
  uint64_t v67 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v134 + 8))(v63, v66);
  *(void *)&v1[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_reduceMotionCancellable] = v67;
  swift_release();
  if (UIAccessibilityIsReduceMotionEnabled())
  {
    id v68 = [v65 layer];
    [v68 setSpeed:0.0];
  }
  unint64_t v69 = *(void **)&v1[v49];
  uint64_t v70 = v129;
  if (v69)
  {
    unint64_t v71 = *(void **)&v1[v54];
    if (v71)
    {
      id v72 = v69;
      id v73 = v71;
      uint64_t v74 = v70;
      id v75 = [v65 layer];
      [v75 insertSublayer:v72 atIndex:1];

      id v76 = [v65 layer];
      [v76 insertSublayer:v73 atIndex:2];

      uint64_t v70 = v74;
    }
  }
  id v77 = [v1 view];
  if (!v77)
  {
    __break(1u);
    goto LABEL_41;
  }
  unint64_t v78 = v77;
  [v77 addSubview:v65];

  id v79 = [v1 view];
  if (!v79)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  uint64_t v80 = v79;
  [v79 addSubview:*(void *)&v1[v136]];

  id v81 = [v1 view];
  if (!v81)
  {
LABEL_42:
    __break(1u);
    return;
  }
  uint64_t v82 = v81;
  uint64_t v83 = v70;
  [v81 addSubview:*(void *)&v1[v70]];

  id v84 = [v65 superview];
  unint64_t v85 = &stru_1007D7000;
  if (v84)
  {
    uint64_t v86 = v84;
    [v65 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v87 = [v65 centerYAnchor];
    id v88 = [v86 centerYAnchor];
    id v89 = [v87 constraintEqualToAnchor:v88];

    [v89 setConstant:0.0];
    id v90 = v89;
    unint64_t v85 = &stru_1007D7000;
    id v91 = v90;
    [v90 setActive:1];
  }
  id v92 = [v65 superview];
  if (v92)
  {
    uint64_t v93 = v92;
    [v65 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v94 = [v65 centerXAnchor];
    id v95 = [v93 centerXAnchor];
    id v96 = [v94 constraintEqualToAnchor:v95];

    [v96 setConstant:0.0];
    id v97 = v96;
    unint64_t v85 = &stru_1007D7000;
    id v98 = v97;
    [v97 setActive:1];
  }
  id v99 = *(id *)&v1[v136];
  id v100 = [v99 superview];
  if (v100)
  {
    unint64_t v101 = v100;
    [v99 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v102 = [v99 centerYAnchor];
    id v103 = [v101 centerYAnchor];
    id v104 = [v102 constraintEqualToAnchor:v103];

    [v104 setConstant:0.0];
    if (v104)
    {
      id v104 = v104;
      [v104 setActive:1];

      id v99 = v104;
    }

    unint64_t v85 = &stru_1007D7000;
  }
  else
  {
    id v104 = 0;
    unint64_t v101 = v99;
  }

  id v105 = *(id *)&v1[v136];
  id v106 = [v105 superview];
  if (v106)
  {
    uint64_t v107 = v106;
    [v105 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v108 = v85;
    id v109 = [v105 centerXAnchor];
    id v110 = [v107 centerXAnchor];
    id v111 = [v109 v108[68].types:v110];

    [v111 setConstant:0.0];
    if (v111)
    {
      id v111 = v111;
      [v111 setActive:1];

      id v105 = v111;
    }

    unint64_t v85 = &stru_1007D7000;
  }
  else
  {
    id v111 = 0;
    uint64_t v107 = v105;
  }

  id v112 = *(id *)&v1[v83];
  id v113 = [v112 superview];
  if (v113)
  {
    uint64_t v114 = v113;
    [v112 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v115 = v85;
    id v116 = [v112 centerXAnchor];
    id v117 = [v114 centerXAnchor];
    id v118 = [v116 v115[68].types:v117];

    [v118 setConstant:0.0];
    uint64_t v119 = v128;
    if (v118)
    {
      id v118 = v118;
      [v118 setActive:1];

      id v112 = v118;
    }
    uint64_t v120 = v127;

    unint64_t v85 = &stru_1007D7000;
  }
  else
  {
    id v118 = 0;
    uint64_t v114 = v112;
    uint64_t v120 = v127;
    uint64_t v119 = v128;
  }

  uint64_t v121 = *(void **)&v1[v136];
  id v122 = *(id *)&v1[v83];
  id v123 = v121;
  [v122 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v124 = [v122 bottomAnchor];
  id v125 = [v123 topAnchor];
  id v126 = [v124 v85[68].types:v125];

  [v126 setConstant:-20.0];
  [v126 setActive:1];
}

void sub_10019E864(uint64_t a1, void *a2)
{
  BOOL IsReduceMotionEnabled = UIAccessibilityIsReduceMotionEnabled();
  id v8 = [a2 layer];
  double v4 = CACurrentMediaTime();
  if (IsReduceMotionEnabled)
  {
    float v5 = 0.0;
    double v6 = 0.0;
  }
  else
  {
    [v8 convertTime:0 fromLayer:v4];
    float v5 = 1.0;
  }
  [v8 setTimeOffset:v6];
  *(float *)&double v7 = v5;
  [v8 setSpeed:v7];
}

void sub_10019E91C()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_didFinishRecording) & 1) == 0)
  {
    id v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_audioManager);
    if (v1)
    {
      uint64_t v2 = v1;
      sub_10019EA50();
      swift_getKeyPath();
      sub_1001A0F4C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      if ((v2[OBJC_IVAR____TtC7Journal12AudioManager__isRecording] & 1) == 0) {
        sub_10019F87C();
      }
    }
  }
}

void sub_10019EA50()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_audioManager);
  if (v1)
  {
    swift_getKeyPath();
    sub_1001A0F4C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
    uint64_t v2 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v3 = OBJC_IVAR____TtC7Journal12AudioManager__isRecording;
    v2[OBJC_IVAR____TtC7Journal12AudioManager__isRecording] = (v2[OBJC_IVAR____TtC7Journal12AudioManager__isRecording] & 1) == 0;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (v2[v3] == 1)
    {
      *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_didFinishRecording) = 0;
      sub_10019EE90(1);
    }
    else
    {
      *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_didFinishRecording) = 1;
    }
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (v2[v3] == 1
      && (swift_getKeyPath(),
          ObservationRegistrar.access<A, B>(_:keyPath:)(),
          swift_release(),
          !*(void *)&v2[OBJC_IVAR____TtC7Journal12AudioManager__audioRecorder]))
    {
      sub_1003A67A0();
    }
    else if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_didFinishRecording) == 1)
    {
      type metadata accessor for AudioManager(0);
      sub_1003A6CDC();
    }
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (v2[v3] == 1) {
      sub_1003A9F84();
    }
    else {
      sub_1003A6DEC();
    }
  }
}

void sub_10019ECE0()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_audioManager;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_audioManager);
  if (v2)
  {
    swift_getKeyPath();
    sub_1001A0F4C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
    id v3 = v2;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*((unsigned char *)v3 + OBJC_IVAR____TtC7Journal12AudioManager__isRecording) == 1)
    {
      *(void *)(v0 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_recordingCancellable) = 0;
      swift_release();
      double v4 = *(void **)(v0 + v1);
      if (v4)
      {
        float v5 = v4;
        sub_10019EA50();
        swift_getKeyPath();
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        if ((v5[OBJC_IVAR____TtC7Journal12AudioManager__isRecording] & 1) == 0) {
          sub_10019F87C();
        }

        id v3 = v5;
      }
    }
  }
}

void sub_10019EE90(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218(&qword_100800F90);
  __chkstk_darwin(v4 - 8);
  id v73 = (char *)&v67 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_100800F98);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v72 = (char *)&v67 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218(&qword_100800FA0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v67 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v67 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void **)(v2 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_audioManager);
  if (v17)
  {
    uint64_t v70 = v7;
    uint64_t v71 = v6;
    id v18 = *(void **)(v2 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_tapLabel);
    id v19 = v17;
    [v18 setHidden:a1 & 1];
    if (a1)
    {
      id v68 = v12;
      uint64_t v69 = v10;
      uint64_t v20 = v2 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pickerDelegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v67 = *(void *)(v20 + 8);
        uint64_t ObjectType = swift_getObjectType();
        v74[0] = v19;
        id v75 = v19;
        uint64_t v22 = v9;
        id v23 = v19;
        id v24 = *(void **)(v2 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_placeholderAsset);
        uint64_t v25 = type metadata accessor for AudioManager(0);
        uint64_t v26 = sub_1001A0F4C(&qword_100800FA8, (void (*)(uint64_t))type metadata accessor for AudioManager);
        id v27 = v24;
        id v19 = v23;
        uint64_t v9 = v22;
        sub_10019CCE8((uint64_t)v74, (uint64_t)&v75, v27, ObjectType, v25, v25, v67, (uint64_t)&off_1007A8870, v26);
        swift_unknownObjectRelease();
      }
      UUID.init()();
      uint64_t v28 = UUID.uuidString.getter();
      uint64_t v30 = v29;
      (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      *(&v67 - 4) = (uint64_t)v19;
      *(&v67 - 3) = v28;
      uint64_t v66 = v30;
      v74[0] = v19;
      sub_1001A0F4C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v32 = OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_recordButton;
      id v33 = *(void **)(v2 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_recordButton);
      id v34 = self;
      id v35 = v33;
      id v36 = [v34 redColor];
      id v37 = [self configurationWithHierarchicalColor:v36];

      NSString v38 = String._bridgeToObjectiveC()();
      id v39 = [self systemImageNamed:v38 withConfiguration:v37];

      if (v39)
      {
        id v40 = sub_1003943D8(45.0);
      }
      else
      {
        id v40 = 0;
      }
      uint64_t v51 = v69;
      [v35 setImage:v40 forState:0];

      id v52 = *(id *)(v2 + v32);
      id v53 = [v34 labelColor];
      [v52 setTintColor:v53];

      swift_beginAccess();
      sub_100010218((uint64_t *)&unk_100800FB0);
      uint64_t v54 = v72;
      Published.projectedValue.getter();
      swift_endAccess();
      sub_10001FB8C();
      v74[0] = (id)static OS_dispatch_queue.main.getter();
      uint64_t v55 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
      uint64_t v56 = (uint64_t)v73;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v73, 1, 1, v55);
      sub_100014488((unint64_t *)&unk_100800FC0, &qword_100800F98);
      sub_1001A0F4C((unint64_t *)&qword_100803910, (void (*)(uint64_t))sub_10001FB8C);
      id v57 = v68;
      uint64_t v58 = v71;
      Publisher.subscribe<A>(on:options:)();
      sub_10001457C(v56, &qword_100800F90);

      (*(void (**)(char *, uint64_t))(v70 + 8))(v54, v58);
      swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_100014488((unint64_t *)&unk_100800FD0, &qword_100800FA0);
      uint64_t v59 = Publisher<>.sink(receiveValue:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v57, v9);
      *(void *)(v2 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_animationCancellable) = v59;
      swift_release();
    }
    else
    {
      id v41 = v19;
      uint64_t v42 = OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_recordButton;
      id v43 = *(void **)(v2 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_recordButton);
      id v44 = self;
      id v45 = v43;
      id v46 = [v44 redColor];
      id v47 = [self configurationWithHierarchicalColor:v46];

      NSString v48 = String._bridgeToObjectiveC()();
      id v49 = [self systemImageNamed:v48 withConfiguration:v47];

      if (v49)
      {
        uint64_t v50 = sub_1003943D8(45.0);
      }
      else
      {
        uint64_t v50 = 0;
      }
      [v45 setImage:v50 forState:0];

      *(void *)(v2 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_animationCancellable) = 0;
      swift_release();
      UIMenu_optional v60 = *(void **)(v2 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pulses1);
      if (v60)
      {
        id v61 = v60;
        sub_1002F5460(0.0);
      }
      uint64_t v62 = *(void **)(v2 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pulses2);
      if (v62)
      {
        id v63 = v62;
        sub_1002F5460(0.0);
      }
      id v64 = *(id *)(v2 + v42);
      id v65 = [v44 redColor];
      [v64 setTintColor:v65];

      *(void *)(v2 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_recordingCancellable) = 0;
      swift_release();
      id v19 = v41;
    }
    sub_10019FD48();
  }
}

void sub_10019F7C4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (char *)Strong;
    uint64_t v4 = *(void *)(v1 + 16);
    if (v4)
    {
      double v5 = fabs(*(double *)(v1 + 8 * v4 + 24));
      uint64_t v6 = *(void **)(Strong + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pulses1);
      if (v6)
      {
        id v7 = v6;
        sub_1002F5460(v5);
      }
      uint64_t v8 = *(void **)&v3[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pulses2];
      if (v8)
      {
        id v9 = v8;
        sub_1002F5460(v5);
      }
    }
  }
}

void sub_10019F87C()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_audioManager);
  if (v10)
  {
    uint64_t v33 = v0;
    id v34 = (char *)&v28 - v9;
    swift_getKeyPath();
    v37[0] = v10;
    sub_1001A0F4C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
    uint64_t v11 = v10;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v12 = &v11[OBJC_IVAR____TtC7Journal12AudioManager__recordingFilename];
    if (*(void *)&v11[OBJC_IVAR____TtC7Journal12AudioManager__recordingFilename]) {
      BOOL v13 = 0;
    }
    else {
      BOOL v13 = *(void *)&v11[OBJC_IVAR____TtC7Journal12AudioManager__recordingFilename + 8] == 0xE000000000000000;
    }
    if (v13 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
    }
    else
    {
      uint64_t v31 = type metadata accessor for AudioManager(0);
      sub_1003A7098();
      swift_getKeyPath();
      v37[0] = v11;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v15 = *(void *)v12;
      uint64_t v14 = *((void *)v12 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v37[0] = v15;
      v37[1] = v14;
      v16._uint64_t countAndFlagsBits = 1717658414;
      v16._unint64_t object = (void *)0xE400000000000000;
      String.append(_:)(v16);
      uint64_t v17 = v34;
      URL.appendingPathComponent(_:)();
      swift_bridgeObjectRelease();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v5 + 8);
      uint64_t v30 = v5 + 8;
      v29(v7, v4);
      swift_getKeyPath();
      v37[0] = v11;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v18 = *(void *)&v11[OBJC_IVAR____TtC7Journal12AudioManager__recordedDuration];
      int v32 = v11[OBJC_IVAR____TtC7Journal12AudioManager__recordedDuration + 8];
      swift_getKeyPath();
      v37[0] = v11;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      id v19 = (uint64_t *)&v11[OBJC_IVAR____TtC7Journal12AudioManager__audioIntensities];
      swift_beginAccess();
      uint64_t v20 = *v19;
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v17, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_10010F95C(4, (uint64_t)v3, v18, v32, v20, 0);
      uint64_t v37[3] = _s10AudioAssetCMa(0);
      v37[4] = &off_1007B7DC8;
      v37[0] = v21;
      sub_100141410((uint64_t)v37, (uint64_t)v36);
      uint64_t v22 = v21;
      sub_100010218(&qword_100801A60);
      if (swift_dynamicCast())
      {
        id v23 = v35;
        sub_1003AB9B4(v35);
      }
      uint64_t v24 = v33;
      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v37);

      sub_1003A6CDC();
      uint64_t v25 = v24 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pickerDelegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v26 = *(void *)(v25 + 8);
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 32))(v22, *(void *)(v24 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_placeholderAsset), ObjectType, v26);

        swift_unknownObjectRelease();
        v29(v17, v4);
      }
      else
      {
        v29(v17, v4);
      }
    }
  }
}

void sub_10019FD48()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_audioManager);
  if (v1)
  {
    swift_getKeyPath();
    sub_1001A0F4C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
    id v2 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v3 = *(void **)(v0 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_recordButton);
    if (*((unsigned char *)v2 + OBJC_IVAR____TtC7Journal12AudioManager__isRecording) == 1)
    {
      uint64_t v4 = qword_1007F7AE0;
      id v5 = v3;
      if (v4 == -1) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v6 = qword_1007F7AD8;
      id v7 = v3;
      if (v6 == -1)
      {
LABEL_6:
        NSString v8 = String._bridgeToObjectiveC()();
        [v3 setAccessibilityLabel:v8];

        return;
      }
    }
    swift_once();
    goto LABEL_6;
  }
}

id sub_10019FED0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v24 = a1;
  uint64_t v25 = a3;
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  NSString v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v24 - v10;
  *(void *)&v3[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pickerDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v3[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_audioManager] = 0;
  *(void *)&v3[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_recordingCancellable] = 0;
  *(void *)&v3[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_animationCancellable] = 0;
  *(void *)&v3[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_reduceMotionCancellable] = 0;
  uint64_t v12 = OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_recordButton;
  id v13 = objc_allocWithZone((Class)UIButton);
  uint64_t v14 = v3;
  *(void *)&v3[v12] = [v13 init];
  uint64_t v15 = OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_tapLabel;
  *(void *)&v14[v15] = [objc_allocWithZone((Class)UILabel) init];
  v14[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_isRecording] = 0;
  *(void *)&v14[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_audioPickerPulseRadius] = 0x404E000000000000;
  *(void *)&v14[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pulses1] = 0;
  *(void *)&v14[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pulses2] = 0;
  v14[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_didFinishRecording] = 0;
  uint64_t v16 = OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_placeholderAsset;
  UUID.init()();
  id v17 = objc_allocWithZone((Class)_s16PlaceholderAssetCMa());
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, v11, v5);
  id v18 = sub_1001817C4((uint64_t)v8, 18, 4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  *(void *)&v14[v16] = v18;

  if (a2)
  {
    NSString v19 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v19 = 0;
  }
  uint64_t v20 = (objc_class *)type metadata accessor for CanvasAudioPickerController();
  v26.receiver = v14;
  v26.super_class = v20;
  uint64_t v21 = v25;
  id v22 = [super initWithNibName:v19 bundle:v25];

  return v22;
}

id sub_1001A01BC(void *a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - v8;
  *(void *)&v1[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pickerDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_audioManager] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_recordingCancellable] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_animationCancellable] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_reduceMotionCancellable] = 0;
  uint64_t v10 = OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_recordButton;
  id v11 = objc_allocWithZone((Class)UIButton);
  uint64_t v12 = v1;
  *(void *)&v1[v10] = [v11 init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_tapLabel;
  *(void *)&v12[v13] = [objc_allocWithZone((Class)UILabel) init];
  v12[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_isRecording] = 0;
  *(void *)&v12[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_audioPickerPulseRadius] = 0x404E000000000000;
  *(void *)&v12[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pulses1] = 0;
  *(void *)&v12[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pulses2] = 0;
  v12[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_didFinishRecording] = 0;
  uint64_t v14 = OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_placeholderAsset;
  UUID.init()();
  id v15 = objc_allocWithZone((Class)_s16PlaceholderAssetCMa());
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v9, v3);
  id v16 = sub_1001817C4((uint64_t)v6, 18, 4);
  (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
  *(void *)&v12[v14] = v16;

  id v17 = (objc_class *)type metadata accessor for CanvasAudioPickerController();
  v20.receiver = v12;
  v20.super_class = v17;
  [super initWithCoder:a1];

  return v18;
}

uint64_t type metadata accessor for CanvasAudioPickerController()
{
  return self;
}

void sub_1001A04FC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_audioManager);
  if (v1)
  {
    swift_getKeyPath();
    sub_1001A0F4C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
    id v2 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (v2[OBJC_IVAR____TtC7Journal12AudioManager__isRecording] == 1)
    {
      *(void *)(v0 + OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_recordingCancellable) = 0;
      swift_release();
      sub_1003A6DEC();
    }
  }
}

uint64_t sub_1001A05F0()
{
  *(void *)(v1 + 16) = *v0;
  type metadata accessor for MainActor();
  *(void *)(v1 + 24) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1001A068C, v3, v2);
}

uint64_t sub_1001A068C()
{
  swift_release();
  sub_10019ECE0();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1001A06F0()
{
}

uint64_t sub_1001A0714@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1001A0F4C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + OBJC_IVAR____TtC7Journal12AudioManager__isRecording);
  return result;
}

uint64_t sub_1001A07C8()
{
  return swift_release();
}

uint64_t sub_1001A089C()
{
  return sub_1003A7C64(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1001A08D4()
{
  return sub_1003A7C08(v0[2], v0[3], v0[4]);
}

uint64_t sub_1001A08F4()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1001A092C(uint64_t *a1)
{
}

uint64_t sub_1001A0934()
{
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = *(void *)(v1 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v2 - 8);
  unint64_t v6 = (v4 + *(void *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v2);

  return swift_deallocObject();
}

uint64_t sub_1001A0A94()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 40);
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v3 - 8) + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v3 - 8) + 80);
  uint64_t v5 = v0 + v4;
  long long v13 = *(_OWORD *)(v0 + 48);
  unint64_t v6 = (v4 + *(void *)(*(void *)(v3 - 8) + 64) + *(unsigned __int8 *)(*(void *)(v13 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v13 - 8) + 80);
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v8 = v0 + v6;
  uint64_t v9 = *(void *)(v0 + ((*(void *)(*(void *)(v13 - 8) + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v10 = swift_task_alloc();
  long long v11 = *(_OWORD *)(v0 + 64);
  *(void *)(v1 + 16) = v10;
  *(void *)uint64_t v10 = v1;
  *(void *)(v10 + 8) = sub_10002C194;
  *(_OWORD *)(v10 + 120) = v11;
  *(_OWORD *)(v10 + 104) = v13;
  *(void *)(v10 + 88) = v2;
  *(void *)(v10 + 96) = v3;
  *(void *)(v10 + 72) = v8;
  *(void *)(v10 + 80) = v9;
  *(void *)(v10 + 56) = v7;
  *(void *)(v10 + 64) = v5;
  return _swift_task_switch(sub_10019D010, 0, 0);
}

uint64_t sub_1001A0C40()
{
  return sub_1003A7790();
}

void sub_1001A0C5C(void *a1)
{
  [a1 intrinsicContentSize];
  double v3 = v2;
  if (qword_1007F7328 != -1) {
    swift_once();
  }
  double v4 = v3 + *(double *)&qword_10083D938 + *(double *)&qword_10083D938;
  [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v5 = [a1 widthAnchor];
  id v6 = [v5 constraintEqualToConstant:v4];

  [v6 setActive:1];
  [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v7 = [a1 heightAnchor];
  id v8 = [v7 constraintEqualToConstant:40.0];

  [v8 setActive:1];
  [a1 setTextAlignment:1];
  uint64_t v9 = self;
  id v10 = [v9 redColor];
  [a1 setTextColor:v10];

  id v11 = [a1 layer];
  [v11 setCornerRadius:20.0];

  id v12 = [a1 layer];
  id v13 = [v9 systemBackgroundColor];
  id v14 = [v13 colorWithAlphaComponent:0.8];

  id v15 = [v14 CGColor];
  [v12 setBackgroundColor:v15];

  id v16 = [v9 systemBackgroundColor];
  id v17 = [v16 colorWithAlphaComponent:0.8];

  id v18 = [v17 CGColor];
  sub_1001DD9AC((uint64_t)v18, 10.0, 10.0);
}

uint64_t sub_1001A0F4C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001A0F94()
{
  return swift_deallocObject();
}

void sub_1001A0FCC(uint64_t a1)
{
  sub_10019E864(a1, *(void **)(v1 + 16));
}

unsigned char *storeEnumTagSinglePayload for JournalIntentError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A10A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JournalIntentError()
{
  return &type metadata for JournalIntentError;
}

uint64_t sub_1001A10D8()
{
  uint64_t v0 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return LocalizedStringResource.init(_:defaultValue:table:locale:bundle:comment:)();
}

uint64_t sub_1001A14F0()
{
  return sub_1001A10D8();
}

unint64_t sub_1001A14FC()
{
  unint64_t result = qword_100801010;
  if (!qword_100801010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801010);
  }
  return result;
}

uint64_t sub_1001A1550()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100801020);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100801020);
  if (qword_1007F7D70 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EC50);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1001A1618()
{
  uint64_t v0 = type metadata accessor for UUID();
  sub_100035380(v0, qword_100801038);
  sub_100026A54(v0, (uint64_t)qword_100801038);
  return UUID.init()();
}

id sub_1001A1664()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for LocationServices()) init];
  qword_10083CFF8 = (uint64_t)result;
  return result;
}

char *sub_1001A1694()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal16LocationServices_locationManager;
  id v2 = objc_allocWithZone((Class)CLLocationManager);
  int v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  uint64_t v4 = &v3[OBJC_IVAR____TtC7Journal16LocationServices_authorizationChanged];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  uint64_t v5 = &v3[OBJC_IVAR____TtC7Journal16LocationServices_locationFindResult];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;

  v12.receiver = v3;
  v12.super_class = (Class)type metadata accessor for LocationServices();
  id v6 = [super init];
  uint64_t v7 = self;
  id v8 = (char *)v6;
  id v9 = [v7 defaultCenter];
  [v9 addObserver:v8 selector:"appWillEnterForeground" name:UIApplicationWillEnterForegroundNotification object:0];

  id v10 = *(void **)&v8[OBJC_IVAR____TtC7Journal16LocationServices_locationManager];
  [v10 setDesiredAccuracy:kCLLocationAccuracyNearestTenMeters];
  [v10 setDelegate:v8];
  [v10 requestWhenInUseAuthorization];
  [v10 startUpdatingLocation];

  return v8;
}

id sub_1001A181C()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0 name:UIApplicationWillEnterForegroundNotification object:0];

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for LocationServices();
  return [super dealloc];
}

void sub_1001A1A44(unint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (a2 || !a1) {
    goto LABEL_16;
  }
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    if (_CocoaArrayWrapper.endIndex.getter()) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v6)
  {
LABEL_15:
    swift_bridgeObjectRelease();
LABEL_16:
    if (qword_1007F6A90 != -1) {
      swift_once();
    }
    uint64_t v26 = type metadata accessor for Logger();
    sub_100026A54(v26, (uint64_t)qword_100801020);
    id v27 = Logger.logObject.getter();
    os_log_type_t v28 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v29 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v29 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27, v28, "Failed to get current address", v29, 2u);
      swift_slowDealloc();
    }

    a3(0, 0, a2);
    return;
  }
LABEL_5:
  if ((a1 & 0xC000000000000001) != 0)
  {
    id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v7 = *(id *)(a1 + 32);
  }
  id v8 = v7;
  swift_bridgeObjectRelease();
  id v9 = [v8 locality];
  if (v9)
  {
    id v10 = v9;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    uint64_t v30 = v13;
    id v14 = [v8 administrativeArea];
    if (v14)
    {
      id v15 = v14;
      uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      id v18 = v17;

      v19._uint64_t countAndFlagsBits = v16;
      v19._unint64_t object = v18;
      String.append(_:)(v19);
      swift_bridgeObjectRelease();
      v20._uint64_t countAndFlagsBits = 8236;
      v20._unint64_t object = (void *)0xE200000000000000;
      String.append(_:)(v20);
      swift_bridgeObjectRelease();
      uint64_t v13 = v30;
    }
    a3(v11, v13, 0);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100010218((uint64_t *)&unk_1008010F0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1006D6280;
    *(void *)(inited + 32) = 0xD000000000000019;
    *(void *)(inited + 40) = 0x800000010068E140;
    *(void *)(inited + 72) = &type metadata for String;
    *(void *)(inited + 48) = 0xD00000000000003ALL;
    *(void *)(inited + 56) = 0x800000010068E160;
    sub_100396C34(inited);
    id v22 = objc_allocWithZone((Class)NSError);
    NSString v23 = String._bridgeToObjectiveC()();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v25 = [v22 initWithDomain:v23 code:1 userInfo:isa];

    a3(0, 0, (uint64_t)v25);
  }
}

uint64_t type metadata accessor for LocationServices()
{
  return self;
}

void sub_1001A1F8C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3)
    {
LABEL_3:
      unint64_t v4 = v3 - 1;
      if (__OFSUB__(v3, 1))
      {
        __break(1u);
      }
      else if ((a1 & 0xC000000000000001) == 0)
      {
        if ((v4 & 0x8000000000000000) != 0)
        {
          __break(1u);
        }
        else if (v4 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v5 = *(id *)(a1 + 8 * v4 + 32);
LABEL_8:
          id v11 = v5;
          swift_bridgeObjectRelease();
          uint64_t v6 = *(void **)(v1 + OBJC_IVAR____TtC7Journal16LocationServices_locationManager);
          [v6 stopUpdatingLocation];
          [v6 setDelegate:0];
          id v7 = (uint64_t *)(v1 + OBJC_IVAR____TtC7Journal16LocationServices_locationFindResult);
          id v8 = *(void (**)(id, void))(v1 + OBJC_IVAR____TtC7Journal16LocationServices_locationFindResult);
          if (v8)
          {
            sub_1001A2550((uint64_t)v8);
            id v9 = v11;
            v8(v11, 0);
            sub_10001ABB8((uint64_t)v8);

            uint64_t v10 = *v7;
          }
          else
          {
            uint64_t v10 = 0;
          }
          *id v7 = 0;
          v7[1] = 0;
          sub_10001ABB8(v10);

          return;
        }
        __break(1u);
        return;
      }
      id v5 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3) {
      goto LABEL_3;
    }
  }

  swift_bridgeObjectRelease();
}

void sub_1001A2124(uint64_t a1)
{
  uint64_t v16 = a1;
  swift_errorRetain();
  sub_100010218((uint64_t *)&unk_1007FC0D0);
  type metadata accessor for CLError(0);
  if (!swift_dynamicCast()
    || (sub_1001A24C8(&qword_100801110, type metadata accessor for CLError),
        _BridgedStoredNSError.code.getter(),
        v14,
        v14))
  {
    if (qword_1007F6A90 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100026A54(v3, (uint64_t)qword_100801020);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = swift_slowAlloc();
      id v7 = (void *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136315394;
      if (qword_1007F6A98 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for UUID();
      sub_100026A54(v8, (uint64_t)qword_100801038);
      sub_1001A24C8((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v9, v10, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      *(_WORD *)(v6 + 12) = 2112;
      swift_errorRetain();
      uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v7 = v15;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s location manager is unable to retrieve a location: %@", (uint8_t *)v6, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
    }

    id v11 = (uint64_t *)(v1 + OBJC_IVAR____TtC7Journal16LocationServices_locationFindResult);
    uint64_t v12 = *(void (**)(void, uint64_t))(v1 + OBJC_IVAR____TtC7Journal16LocationServices_locationFindResult);
    if (v12)
    {
      swift_retain();
      v12(0, a1);
      sub_10001ABB8((uint64_t)v12);
      uint64_t v13 = *v11;
    }
    else
    {
      uint64_t v13 = 0;
    }
    *id v11 = 0;
    v11[1] = 0;
    sub_10001ABB8(v13);
  }
}

uint64_t sub_1001A24C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001A2510()
{
  unint64_t result = qword_1007F9110;
  if (!qword_1007F9110)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007F9110);
  }
  return result;
}

uint64_t sub_1001A2550(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

Swift::Int sub_1001A2560()
{
  Swift::UInt16 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

void sub_1001A25A8()
{
  Hasher._combine(_:)(*v0);
}

Swift::Int sub_1001A25D4()
{
  Swift::UInt16 v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1);
  return Hasher._finalize()();
}

unsigned __int16 *sub_1001A2618@<X0>(unsigned __int16 *result@<X0>, unsigned char *a2@<X8>)
{
  unsigned int v2 = *result;
  if (v2 >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_1001A2630(_WORD *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1001A263C()
{
  uint64_t result = _sSo8NSBundleC7JournalE15appVersionAsInts5Int16VyFZ_0();
  static Journaling.EntryViewModel.currentAppVersion = result;
  return result;
}

__int16 *Journaling.EntryViewModel.currentAppVersion.unsafeMutableAddressor()
{
  if (qword_1007F6AA8 != -1) {
    swift_once();
  }
  return &static Journaling.EntryViewModel.currentAppVersion;
}

uint64_t static Journaling.EntryViewModel.currentAppVersion.getter()
{
  if (qword_1007F6AA8 != -1) {
    swift_once();
  }
  return (unsigned __int16)static Journaling.EntryViewModel.currentAppVersion;
}

id sub_1001A26F4(uint64_t a1, __int16 a2)
{
  unsigned int v2 = *(void **)(a1 + 32);
  [v2 setMinimumSupportedAppVersion:a2];
  return [v2 setIsUploadedToCloud:0];
}

id sub_1001A2748(uint64_t a1, unsigned __int8 a2)
{
  unsigned int v2 = *(void **)(a1 + 32);
  [v2 setMinimumSupportedAppVersionMode:a2];
  return [v2 setIsUploadedToCloud:0];
}

unsigned char *storeEnumTagSinglePayload for UnsupportedEntryMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A2868);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UnsupportedEntryMode()
{
  return &type metadata for UnsupportedEntryMode;
}

unint64_t sub_1001A28A4()
{
  unint64_t result = qword_100801118;
  if (!qword_100801118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801118);
  }
  return result;
}

ValueMetadata *type metadata accessor for MindfulMinutesCanvasTip()
{
  return &type metadata for MindfulMinutesCanvasTip;
}

void *sub_1001A2908()
{
  return &protocol witness table for String;
}

uint64_t sub_1001A2914()
{
  uint64_t v0 = sub_100010218(&qword_100801138);
  sub_100035380(v0, qword_10083D008);
  sub_100026A54(v0, (uint64_t)qword_10083D008);
  if (qword_1007F6930 != -1) {
    swift_once();
  }
  sub_10004D528(1);
  sub_100010218(&qword_100801180);
  type metadata accessor for Tips.ParameterOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1006D6280;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_1001A2A9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100010218(&qword_100801140);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_100801148);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014488(&qword_100801150, &qword_100801148);
  static PredicateExpressions.build_Arg<A>(_:)();
  v11[15] = 1;
  static PredicateExpressions.build_Arg<A>(_:)();
  a1[3] = sub_100010218(&qword_100801158);
  a1[4] = sub_1001A3300();
  sub_100062E54(a1);
  sub_100014488(&qword_100801178, &qword_100801140);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1001A2CE4()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_1001A2D4C()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_1001A2DB4()
{
  return Image.init(_internalSystemName:)(0xD000000000000012, 0x800000010068E1C0);
}

uint64_t sub_1001A2DD4()
{
  uint64_t v0 = sub_100010218(&qword_100801138);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Tips.Rule();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F6AB0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_100026A54(v0, (uint64_t)qword_10083D008);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v8, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v9 = static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_1001A2FCC()
{
  uint64_t v0 = sub_100010218(&qword_100801128);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Tips.MaxDisplayCount();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100801130);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Tips.MaxDisplayCount.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = v4;
  uint64_t v16 = &protocol witness table for Tips.MaxDisplayCount;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  uint64_t v15 = v8;
  uint64_t v16 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v13 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

uint64_t sub_1001A3268@<X0>(uint64_t *a1@<X8>)
{
  sub_1001A3414();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1001A32AC()
{
  unint64_t result = qword_100801120;
  if (!qword_100801120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801120);
  }
  return result;
}

unint64_t sub_1001A3300()
{
  unint64_t result = qword_100801160;
  if (!qword_100801160)
  {
    sub_100014440(&qword_100801158);
    sub_100014488(&qword_100801168, &qword_100801148);
    sub_1001A33A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801160);
  }
  return result;
}

unint64_t sub_1001A33A0()
{
  unint64_t result = qword_100801170;
  if (!qword_100801170)
  {
    sub_100014440(&qword_100801140);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801170);
  }
  return result;
}

unint64_t sub_1001A3414()
{
  unint64_t result = qword_100801188;
  if (!qword_100801188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801188);
  }
  return result;
}

uint64_t LocationOption.description.getter(char a1)
{
  if (a1)
  {
    if (a1 == 1)
    {
      if (qword_1007F7748 != -1) {
        swift_once();
      }
      uint64_t v1 = &xmmword_10083E038;
    }
    else
    {
      if (qword_1007F7740 != -1) {
        swift_once();
      }
      uint64_t v1 = &xmmword_10083E028;
    }
  }
  else
  {
    if (qword_1007F7750 != -1) {
      swift_once();
    }
    uint64_t v1 = &xmmword_10083E048;
  }
  uint64_t v2 = *(void *)v1;
  swift_bridgeObjectRetain();
  return v2;
}

Journal::LocationOption_optional __swiftcall LocationOption.init(rawValue:)(Swift::Int rawValue)
{
  if ((unint64_t)rawValue >= 3) {
    LOBYTE(rawValue) = 3;
  }
  return (Journal::LocationOption_optional)rawValue;
}

_UNKNOWN **static LocationOption.allCases.getter()
{
  return &off_100793680;
}

uint64_t LocationOption.rawValue.getter(uint64_t result)
{
  return result;
}

uint64_t *sub_1001A3580@<X0>(uint64_t *result@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v2 = *result;
  if ((unint64_t)*result >= 3) {
    LOBYTE(v2) = 3;
  }
  *a2 = v2;
  return result;
}

void sub_1001A3598(void *a1@<X8>)
{
  *a1 = &off_1007936A8;
}

uint64_t sub_1001A35A8()
{
  if (*v0)
  {
    if (*v0 == 1)
    {
      if (qword_1007F7748 != -1) {
        swift_once();
      }
      uint64_t v1 = &xmmword_10083E038;
    }
    else
    {
      if (qword_1007F7740 != -1) {
        swift_once();
      }
      uint64_t v1 = &xmmword_10083E028;
    }
  }
  else
  {
    if (qword_1007F7750 != -1) {
      swift_once();
    }
    uint64_t v1 = &xmmword_10083E048;
  }
  uint64_t v2 = *(void *)v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t _s7Journal14LocationOptionO3forACSgSS_tcfC_0(unint64_t a1, unint64_t a2)
{
  if (qword_1007F7750 != -1) {
    swift_once();
  }
  BOOL v4 = (void)xmmword_10083E048 == a1 && *((void *)&xmmword_10083E048 + 1) == a2;
  if (v4 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    if (qword_1007F7748 != -1) {
      swift_once();
    }
    BOOL v6 = (void)xmmword_10083E038 == a1 && *((void *)&xmmword_10083E038 + 1) == a2;
    if (v6 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      if (qword_1007F7740 != -1) {
        swift_once();
      }
      if (xmmword_10083E028 == __PAIR128__(a2, a1))
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if (v7) {
          return 2;
        }
        else {
          return 3;
        }
      }
    }
  }
}

unint64_t sub_1001A381C()
{
  unint64_t result = qword_100801190;
  if (!qword_100801190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801190);
  }
  return result;
}

unint64_t sub_1001A3874()
{
  unint64_t result = qword_100801198;
  if (!qword_100801198)
  {
    sub_100014440(&qword_1008011A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801198);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for LocationOption(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001A399CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationOption()
{
  return &type metadata for LocationOption;
}

uint64_t sub_1001A39D4(unint64_t a1)
{
  unint64_t v1 = a1;
  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0) {
    goto LABEL_39;
  }
  uint64_t v2 = a1 & 0xFFFFFFFFFFFFFF8;
  swift_bridgeObjectRetain();
  uint64_t v18 = v1 & 0xFFFFFFFFFFFFFF8;
LABEL_4:
  if ((v2 & 0x4000000000000000) == 0)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    swift_bridgeObjectRelease();
    unint64_t v4 = (unint64_t)v3 >> 1;
    goto LABEL_6;
  }
  while (1)
  {
    swift_retain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v17 = v3 >= 0 ? v3 : v3 + 1;
    if (v3 < -1) {
      __break(1u);
    }
    unint64_t v4 = v17 >> 1;
LABEL_6:
    if ((unint64_t)(v3 + 1) < 3) {
      return v2;
    }
    unint64_t v5 = 0;
    while (1)
    {
      unint64_t v7 = v5 + 1;
      unint64_t v1 = v3 - (v5 + 1);
      if (__OFSUB__(v3, v5 + 1)) {
        break;
      }
      if (v5 != v1)
      {
        uint64_t v8 = v18;
        if ((v18 & 0xC000000000000001) != 0)
        {
          uint64_t v11 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v5 & 0x8000000000000000) != 0) {
            goto LABEL_33;
          }
          unint64_t v9 = *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v5 >= v9) {
            goto LABEL_34;
          }
          id v10 = *(id *)(v18 + 8 * v5 + 32);
          if ((v1 & 0x8000000000000000) != 0) {
            goto LABEL_35;
          }
          if (v1 >= v9) {
            goto LABEL_37;
          }
          uint64_t v11 = (uint64_t)v10;
          id v12 = *(id *)(v18 + 32 + 8 * v1);
        }
        id v13 = v12;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v18 < 0
          || (v18 & 0x4000000000000000) != 0)
        {
          uint64_t v8 = sub_1000EFF84(v18);
          uint64_t v18 = v8;
        }
        uint64_t v14 = (v8 & 0xFFFFFFFFFFFFFF8) + 8 * v5;

        *(void *)(v14 + 32) = v13;
        specialized Array._endMutation()();
        uint64_t v15 = v18;
        if (!swift_isUniquelyReferenced_nonNull_bridgeObject()
          || v18 < 0
          || (v18 & 0x4000000000000000) != 0)
        {
          uint64_t v15 = sub_1000EFF84(v18);
          uint64_t v18 = v15;
        }
        if ((v1 & 0x8000000000000000) != 0) {
          goto LABEL_36;
        }
        if (v1 >= *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
          goto LABEL_38;
        }
        uint64_t v6 = (v15 & 0xFFFFFFFFFFFFFF8) + 8 * v1;

        *(void *)(v6 + 32) = v11;
        specialized Array._endMutation()();
      }
      unint64_t v5 = v7;
      if (v4 == v7) {
        return v18;
      }
    }
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    uint64_t v2 = (uint64_t)sub_1000CCAF0(v1);
    uint64_t v18 = v2;
    if ((v2 & 0x8000000000000000) == 0) {
      goto LABEL_4;
    }
  }
}

uint64_t sub_1001A3BF0(uint64_t result)
{
  uint64_t v1 = result;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 < 2) {
    return v1;
  }
  unint64_t v3 = 0;
  unint64_t v4 = v2 >> 1;
  for (unint64_t i = v2 + 7; ; --i)
  {
    if (v3 == i - 8) {
      goto LABEL_5;
    }
    unint64_t v6 = *(void *)(v1 + 16);
    if (v3 >= v6) {
      break;
    }
    if (i - 8 >= v6) {
      goto LABEL_12;
    }
    int v7 = *(_DWORD *)(v1 + 4 * v3 + 32);
    int v8 = *(_DWORD *)(v1 + 4 * i);
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = (uint64_t)sub_1000F0090(v1);
      uint64_t v1 = result;
    }
    *(_DWORD *)(v1 + 4 * v3 + 32) = v8;
    *(_DWORD *)(v1 + 4 * i) = v7;
LABEL_5:
    if (v4 == ++v3) {
      return v1;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

double sub_1001A3CAC@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1001A3D64(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1007F95F0, &qword_1007F95F8).n128_u64[0];
  return result;
}

double sub_1001A3D08@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1001A3D64(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1008003F0, &qword_1008003F8).n128_u64[0];
  return result;
}

__n128 sub_1001A3D64@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  Swift::String v19 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    os_log_type_t v28 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    Swift::String v19 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  sub_10001B220(v17, a9, a16);
  uint64_t v29 = (_OWORD *)(a9 + *(int *)(sub_100010218(v19) + 36));
  v29[4] = v35;
  v29[5] = v36;
  v29[6] = v37;
  *uint64_t v29 = v31;
  v29[1] = v32;
  __n128 result = v34;
  v29[2] = v33;
  v29[3] = v34;
  return result;
}

__n128 sub_1001A3F34@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17)
{
  char v18 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    id v27 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    char v18 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(unsigned char *)(a9 + 8) = v18 & 1;
  *(_OWORD *)(a9 + 80) = v33;
  *(_OWORD *)(a9 + 96) = v34;
  *(_OWORD *)(a9 + 112) = v35;
  *(_OWORD *)(a9 + 16) = v29;
  *(_OWORD *)(a9 + 32) = v30;
  __n128 result = v32;
  *(_OWORD *)(a9 + 48) = v31;
  *(__n128 *)(a9 + 64) = v32;
  return result;
}

__n128 sub_1001A40E0@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, _OWORD *a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    id v22 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  a9[4] = v28;
  a9[5] = v29;
  a9[6] = v30;
  *a9 = v24;
  a9[1] = v25;
  __n128 result = v27;
  a9[2] = v26;
  a9[3] = v27;
  return result;
}

uint64_t sub_1001A426C@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18, uint64_t a19)
{
  uint64_t v20 = a19;
  char v21 = a18;
  uint64_t v22 = a17;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v31 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    char v21 = a18;
    uint64_t v20 = a19;
    uint64_t v22 = a17;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  *(void *)a9 = a16;
  *(void *)(a9 + 8) = v22;
  *(unsigned char *)(a9 + 16) = v21 & 1;
  *(void *)(a9 + 24) = v20;
  *(_OWORD *)(a9 + 96) = v37;
  *(_OWORD *)(a9 + 112) = v38;
  *(_OWORD *)(a9 + 128) = v39;
  *(_OWORD *)(a9 + 32) = v33;
  *(_OWORD *)(a9 + 48) = v34;
  *(_OWORD *)(a9 + 64) = v35;
  *(_OWORD *)(a9 + 80) = v36;
  sub_1000C04A4(a16, v22, v21 & 1);

  return swift_bridgeObjectRetain();
}

uint64_t sub_1001A4460@<X0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13)
{
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    NSString v23 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  long long v24 = *(_OWORD *)(v13 + 16);
  *(_OWORD *)a9 = *(_OWORD *)v13;
  *(_OWORD *)(a9 + 16) = v24;
  *(_OWORD *)(a9 + 32) = *(_OWORD *)(v13 + 32);
  *(_OWORD *)(a9 + 104) = v29;
  *(_OWORD *)(a9 + 120) = v30;
  *(_OWORD *)(a9 + 136) = v31;
  *(_OWORD *)(a9 + 152) = v32;
  *(_OWORD *)(a9 + 56) = v26;
  *(_OWORD *)(a9 + 72) = v27;
  *(void *)(a9 + 48) = *(void *)(v13 + 48);
  *(_OWORD *)(a9 + 88) = v28;

  return sub_1001AF430(v13);
}

double sub_1001A462C@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1001A4740(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1008018F0, &qword_1008018F8).n128_u64[0];
  return result;
}

double sub_1001A4688@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1001A4740(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_1008018E0, &qword_1008018E8).n128_u64[0];
  return result;
}

double sub_1001A46E4@<D0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15)
{
  *(void *)&double result = sub_1001A4740(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, &qword_100801900, &qword_100801908).n128_u64[0];
  return result;
}

__n128 sub_1001A4740@<Q0>(double a1@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, double a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, double a10, char a11, double a12, char a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t *a17)
{
  Swift::String v19 = a16;
  if (a2) {
    a1 = -INFINITY;
  }
  if (a4) {
    a3 = a1;
  }
  if (a6) {
    a5 = a3;
  }
  if (a1 > a3 || a3 > a5) {
    goto LABEL_22;
  }
  if (a8) {
    a7 = -INFINITY;
  }
  if (a11) {
    a10 = a7;
  }
  if (a13) {
    a12 = a10;
  }
  if (a7 > a10 || a10 > a12)
  {
LABEL_22:
    static os_log_type_t.fault.getter();
    long long v28 = (void *)static Log.runtimeIssuesLog.getter();
    os_log(_:dso:log:_:_:)();

    Swift::String v19 = a16;
  }
  _FlexFrameLayout.init(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
  uint64_t v29 = sub_100010218(v19);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(a9, v17, v29);
  long long v30 = (_OWORD *)(a9 + *(int *)(sub_100010218(a17) + 36));
  v30[4] = v36;
  v30[5] = v37;
  v30[6] = v38;
  *long long v30 = v32;
  v30[1] = v33;
  __n128 result = v35;
  v30[2] = v34;
  v30[3] = v35;
  return result;
}

uint64_t sub_1001A493C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RecordingView(0);
  __chkstk_darwin(v2);
  unint64_t v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010218((uint64_t *)&unk_100801A50);
  Bindable.wrappedValue.getter();
  uint64_t v5 = v14;
  swift_getKeyPath();
  uint64_t v14 = v5;
  sub_1001AD364((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = *(void *)(v5 + 88);
  char v7 = *(unsigned char *)(v5 + 96);
  swift_release();
  if (v7)
  {
    sub_1001AD7C8(v1, (uint64_t)v4, type metadata accessor for RecordingView);
LABEL_5:
    uint64_t v11 = 1;
    goto LABEL_6;
  }
  sub_1001AD7C8(v1, (uint64_t)v4, type metadata accessor for RecordingView);
  if (v6 != 2) {
    goto LABEL_5;
  }
  int v8 = &v4[*(int *)(v2 + 24)];
  char v9 = *v8;
  uint64_t v10 = *((void *)v8 + 1);
  LOBYTE(v14) = v9;
  uint64_t v15 = v10;
  sub_100010218(&qword_1008014F0);
  State.wrappedValue.getter();
  uint64_t v11 = v16;
LABEL_6:
  sub_1001AEC14((uint64_t)v4, type metadata accessor for RecordingView);
  return v11;
}

BOOL sub_1001A4B00()
{
  uint64_t v1 = type metadata accessor for RecordingView(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v16 - v5;
  char v7 = sub_1001A493C();
  sub_1001AD7C8(v0, (uint64_t)v6, type metadata accessor for RecordingView);
  if (v7)
  {
    sub_100010218((uint64_t *)&unk_100801A50);
    Bindable.wrappedValue.getter();
    uint64_t v8 = v17;
    swift_getKeyPath();
    uint64_t v17 = v8;
    sub_1001AD364((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    char v9 = *(unsigned char *)(v8 + 81);
    swift_release();
    sub_1001AD7C8((uint64_t)v6, (uint64_t)v3, type metadata accessor for RecordingView);
    if (v9)
    {
      BOOL v10 = 1;
    }
    else
    {
      Bindable.wrappedValue.getter();
      uint64_t v11 = sub_1003D5F84();
      unint64_t v13 = v12;
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v14 = HIBYTE(v13) & 0xF;
      if ((v13 & 0x2000000000000000) == 0) {
        uint64_t v14 = v11 & 0xFFFFFFFFFFFFLL;
      }
      BOOL v10 = v14 != 0;
    }
    sub_1001AEC14((uint64_t)v3, type metadata accessor for RecordingView);
  }
  else
  {
    BOOL v10 = 0;
  }
  sub_1001AEC14((uint64_t)v6, type metadata accessor for RecordingView);
  return v10;
}

uint64_t sub_1001A4D14@<X0>(uint64_t a1@<X8>)
{
  v28[1] = a1;
  v28[0] = sub_100010218(&qword_1008000E8);
  __chkstk_darwin(v28[0]);
  long long v32 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for RecordingView(0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(v3 - 8);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1008014A8);
  __chkstk_darwin(v7 - 8);
  char v9 = (char *)v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_1008014B0);
  uint64_t v11 = v10 - 8;
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100010218(&qword_1008014B8);
  __chkstk_darwin(v31);
  long long v30 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)char v9 = static HorizontalAlignment.center.getter();
  *((void *)v9 + 1) = 0;
  unsigned char v9[16] = 1;
  uint64_t v15 = (uint64_t *)&v9[*(int *)(sub_100010218(&qword_1008014C0) + 44)];
  uint64_t v29 = v1;
  sub_1001A516C(v1, v15);
  sub_1001AD7C8(v1, (uint64_t)v6, type metadata accessor for RecordingView);
  unint64_t v16 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v17 = swift_allocObject();
  sub_1001AD3B0((uint64_t)v6, v17 + v16);
  sub_10001B220((uint64_t)v9, (uint64_t)v13, &qword_1008014A8);
  char v18 = &v13[*(int *)(v11 + 44)];
  *(void *)char v18 = 0;
  *((void *)v18 + 1) = 0;
  *((void *)v18 + 2) = sub_1001AD414;
  *((void *)v18 + 3) = v17;
  sub_10001457C((uint64_t)v9, &qword_1008014A8);
  uint64_t v19 = (uint64_t)v30;
  sub_1001AD7C8(v29, (uint64_t)v6, type metadata accessor for RecordingView);
  uint64_t v20 = v31;
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v21 + v16;
  uint64_t v23 = (uint64_t)v32;
  sub_1001AD3B0((uint64_t)v6, v22);
  sub_10001B220((uint64_t)v13, v19, &qword_1008014B0);
  long long v24 = (uint64_t (**)@<X0>(BOOL *@<X8>))(v19 + *(int *)(v20 + 36));
  *long long v24 = sub_1001A69D4;
  v24[1] = 0;
  v24[2] = (uint64_t (*)@<X0>(BOOL *@<X8>))sub_1001AD548;
  v24[3] = (uint64_t (*)@<X0>(BOOL *@<X8>))v21;
  sub_10001457C((uint64_t)v13, &qword_1008014B0);
  uint64_t v25 = enum case for DynamicTypeSize.accessibility1(_:);
  uint64_t v26 = type metadata accessor for DynamicTypeSize();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 104))(v23, v25, v26);
  sub_1001AD364(&qword_100800128, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_1001AD5B8();
    sub_100014488(&qword_100800160, &qword_1008000E8);
    View.dynamicTypeSize<A>(_:)();
    sub_10001457C(v23, &qword_1008000E8);
    return sub_10001457C(v19, &qword_1008014B8);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001A516C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  id v113 = a2;
  uint64_t v3 = sub_100010218(&qword_1008014F8);
  __chkstk_darwin(v3 - 8);
  uint64_t v117 = (uint64_t)&v98 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_100801500);
  __chkstk_darwin(v5 - 8);
  uint64_t v118 = (uint64_t)&v98 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_100010218(&qword_100801508);
  __chkstk_darwin(v116);
  uint64_t v120 = (uint64_t)&v98 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v119 = (uint64_t)&v98 - v9;
  uint64_t v112 = sub_100010218(&qword_100801510);
  __chkstk_darwin(v112);
  uint64_t v115 = (uint64_t *)((char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v114 = sub_100010218(&qword_100801518);
  __chkstk_darwin(v114);
  uint64_t v107 = (uint64_t)&v98 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_100010218(&qword_100801520);
  uint64_t v103 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v102 = (uint64_t)&v98 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218(&qword_100801528);
  __chkstk_darwin(v13 - 8);
  id v104 = (char *)&v98 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_100010218(&qword_100801530);
  __chkstk_darwin(v101);
  unint64_t v16 = (char *)&v98 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v106 = (uint64_t)&v98 - v18;
  uint64_t v19 = type metadata accessor for TimecodeView();
  __chkstk_darwin(v19 - 8);
  uint64_t v21 = (uint64_t *)((char *)&v98 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v99 = sub_100010218(&qword_100801538);
  __chkstk_darwin(v99);
  uint64_t v23 = (char *)&v98 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v100 = (uint64_t)&v98 - v25;
  uint64_t v26 = sub_100010218(&qword_100801540);
  __chkstk_darwin(v26 - 8);
  uint64_t v126 = (uint64_t)&v98 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  long long v30 = (char *)&v98 - v29;
  uint64_t v31 = sub_100010218(&qword_100801548);
  __chkstk_darwin(v31 - 8);
  uint64_t v125 = (uint64_t)&v98 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v33);
  id v128 = (uint64_t *)((char *)&v98 - v34);
  if (sub_1001A493C())
  {
    sub_100010218((uint64_t *)&unk_100801A50);
    Bindable.wrappedValue.getter();
    uint64_t v35 = v135;
    unsigned __int8 v36 = static Edge.Set.top.getter();
    Bindable.wrappedValue.getter();
    swift_release();
    EdgeInsets.init(_all:)();
    uint64_t v129 = v35;
    *(void *)&long long v130 = v36;
    *((void *)&v130 + 1) = v37;
    uint64_t v131 = v38;
    uint64_t v132 = v39;
    uint64_t v133 = v40;
    __int16 v134 = 0;
    sub_100010218(&qword_100801550);
    sub_100010218(&qword_100801558);
    sub_1001AD6F8();
    sub_100014488(&qword_100801570, &qword_100801558);
    _ConditionalContent<>.init(storage:)();
  }
  else
  {
    sub_100010218((uint64_t *)&unk_100801A50);
    Bindable.wrappedValue.getter();
    uint64_t v41 = v135;
    swift_retain();
    uint64_t v129 = v41;
    long long v130 = xmmword_1006DD040;
    uint64_t v132 = 0;
    uint64_t v133 = 0;
    uint64_t v131 = 0;
    __int16 v134 = 256;
    sub_100010218(&qword_100801550);
    sub_100010218(&qword_100801558);
    sub_1001AD6F8();
    sub_100014488(&qword_100801570, &qword_100801558);
    _ConditionalContent<>.init(storage:)();
    swift_release();
  }
  uint64_t v124 = v135;
  uint64_t v111 = v136;
  uint64_t v110 = v137;
  uint64_t v123 = v138;
  uint64_t v109 = v139;
  uint64_t v122 = v140;
  int v127 = v141;
  int v121 = v142;
  uint64_t v42 = static Alignment.center.getter();
  id v43 = v128;
  *id v128 = v42;
  v43[1] = v44;
  uint64_t v45 = sub_100010218(&qword_100801578);
  sub_1001ABFAC(a1, (uint64_t)v43 + *(int *)(v45 + 44));
  uint64_t v46 = (uint64_t)v30;
  if (sub_1001A493C())
  {
    sub_100010218((uint64_t *)&unk_100801A50);
    Bindable.wrappedValue.getter();
    sub_1001AF4B4(v135, v21);
    char v47 = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    uint64_t v49 = v48;
    uint64_t v51 = v50;
    uint64_t v53 = v52;
    uint64_t v55 = v54;
    sub_1001AD7C8((uint64_t)v21, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for TimecodeView);
    uint64_t v56 = &v23[*(int *)(v99 + 36)];
    *uint64_t v56 = v47;
    *((void *)v56 + 1) = v49;
    *((void *)v56 + 2) = v51;
    *((void *)v56 + 3) = v53;
    *((void *)v56 + 4) = v55;
    v56[40] = 0;
    sub_1001AEC14((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for TimecodeView);
    uint64_t v57 = v100;
    sub_10002C4EC((uint64_t)v23, v100, &qword_100801538);
    uint64_t v58 = v102;
    sub_1001A5E9C(v102);
    uint64_t v59 = v103;
    uint64_t v60 = (uint64_t)v104;
    uint64_t v61 = v105;
    (*(void (**)(char *, uint64_t, uint64_t))(v103 + 16))(v104, v58, v105);
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v58, v61);
    LOBYTE(v59) = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    uint64_t v63 = v62;
    uint64_t v65 = v64;
    uint64_t v67 = v66;
    uint64_t v69 = v68;
    sub_10001B220(v60, (uint64_t)v16, &qword_100801528);
    uint64_t v70 = &v16[*(int *)(v101 + 36)];
    *uint64_t v70 = v59;
    *((void *)v70 + 1) = v63;
    *((void *)v70 + 2) = v65;
    *((void *)v70 + 3) = v67;
    *((void *)v70 + 4) = v69;
    v70[40] = 0;
    sub_10001457C(v60, &qword_100801528);
    uint64_t v71 = v106;
    sub_10002C4EC((uint64_t)v16, v106, &qword_100801530);
    sub_10001B220(v57, (uint64_t)v23, &qword_100801538);
    sub_10001B220(v71, (uint64_t)v16, &qword_100801530);
    uint64_t v72 = v107;
    sub_10001B220((uint64_t)v23, v107, &qword_100801538);
    uint64_t v73 = sub_100010218(&qword_100801590);
    sub_10001B220((uint64_t)v16, v72 + *(int *)(v73 + 48), &qword_100801530);
    sub_10001457C((uint64_t)v16, &qword_100801530);
    sub_10001457C((uint64_t)v23, &qword_100801538);
    sub_10001B220(v72, (uint64_t)v115, &qword_100801518);
    swift_storeEnumTagMultiPayload();
    sub_100014488(&qword_100801580, &qword_100801518);
    _ConditionalContent<>.init(storage:)();
    sub_10001457C(v72, &qword_100801518);
    sub_10001457C(v71, &qword_100801530);
    sub_10001457C(v57, &qword_100801538);
  }
  else
  {
    uint64_t v74 = v115;
    void *v115 = 0;
    *((unsigned char *)v74 + 8) = 1;
    swift_storeEnumTagMultiPayload();
    sub_100014488(&qword_100801580, &qword_100801518);
    _ConditionalContent<>.init(storage:)();
  }
  uint64_t v108 = v46;
  uint64_t v75 = v117;
  sub_1001A6370(v117);
  uint64_t v76 = v118;
  sub_10001B220(v75, v118, &qword_1008014F8);
  sub_10001457C(v75, &qword_1008014F8);
  char v77 = static Edge.Set.bottom.getter();
  EdgeInsets.init(_all:)();
  uint64_t v79 = v78;
  uint64_t v81 = v80;
  uint64_t v83 = v82;
  uint64_t v85 = v84;
  uint64_t v86 = v120;
  sub_10001B220(v76, v120, &qword_100801500);
  uint64_t v87 = v86 + *(int *)(v116 + 36);
  *(unsigned char *)uint64_t v87 = v77;
  *(void *)(v87 + 8) = v79;
  *(void *)(v87 + 16) = v81;
  *(void *)(v87 + 24) = v83;
  *(void *)(v87 + 32) = v85;
  *(unsigned char *)(v87 + 40) = 0;
  sub_10001457C(v76, &qword_100801500);
  uint64_t v88 = v119;
  sub_10002C4EC(v86, v119, &qword_100801508);
  uint64_t v89 = v125;
  sub_10001B220((uint64_t)v128, v125, &qword_100801548);
  uint64_t v90 = v126;
  sub_10001B220(v46, v126, &qword_100801540);
  sub_10001B220(v88, v86, &qword_100801508);
  id v91 = v113;
  uint64_t v92 = v111;
  *id v113 = v124;
  v91[1] = v92;
  uint64_t v93 = v123;
  v91[2] = v110;
  v91[3] = v93;
  uint64_t v94 = v122;
  v91[4] = v109;
  v91[5] = v94;
  int v95 = v127;
  *((unsigned char *)v91 + 48) = v127;
  int v127 = v95;
  *((unsigned char *)v91 + 49) = v121;
  id v96 = (int *)sub_100010218(&qword_100801588);
  sub_10001B220(v89, (uint64_t)v91 + v96[12], &qword_100801548);
  sub_10001B220(v90, (uint64_t)v91 + v96[16], &qword_100801540);
  sub_10001B220(v86, (uint64_t)v91 + v96[20], &qword_100801508);
  j__swift_retain();
  sub_10001457C(v88, &qword_100801508);
  sub_10001457C(v108, &qword_100801540);
  sub_10001457C((uint64_t)v128, &qword_100801548);
  sub_10001457C(v86, &qword_100801508);
  sub_10001457C(v126, &qword_100801540);
  sub_10001457C(v125, &qword_100801548);
  return j__swift_release();
}

uint64_t sub_1001A5E9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  v28[1] = a1;
  v28[0] = sub_100010218(&qword_1008000E8);
  __chkstk_darwin(v28[0]);
  uint64_t v29 = (char *)v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218(&qword_100801598);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1008015A0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_1008015A8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100010218(&qword_1008015B0);
  __chkstk_darwin(v31);
  uint64_t v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static VerticalAlignment.center.getter();
  *((void *)v6 + 1) = 0x4010000000000000;
  v6[16] = 0;
  uint64_t v16 = (uint64_t)&v6[*(int *)(sub_100010218(&qword_1008015B8) + 44)];
  uint64_t v30 = v2;
  sub_1001A80C8(v2, v16);
  static Edge.Set.horizontal.getter();
  sub_100014488(&qword_1008015C0, &qword_100801598);
  View.scenePadding(_:)();
  sub_10001457C((uint64_t)v6, &qword_100801598);
  if (qword_1007F6D40 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_10083D300;
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
  uint64_t v19 = (uint64_t *)&v13[*(int *)(v11 + 36)];
  *uint64_t v19 = KeyPath;
  v19[1] = v17;
  uint64_t v20 = *(void (**)(char *, uint64_t))(v8 + 8);
  swift_retain();
  v20(v10, v7);
  sub_100010218((uint64_t *)&unk_100801A50);
  Bindable.wrappedValue.getter();
  LOBYTE(v17) = sub_1003D6488();
  swift_release();
  uint64_t v21 = swift_getKeyPath();
  uint64_t v22 = swift_allocObject();
  *(unsigned char *)(v22 + 16) = (v17 & 1) == 0;
  sub_10001B220((uint64_t)v13, (uint64_t)v15, &qword_1008015A8);
  uint64_t v23 = (uint64_t *)&v15[*(int *)(v31 + 36)];
  *uint64_t v23 = v21;
  v23[1] = (uint64_t)sub_1001ADD9C;
  void v23[2] = v22;
  sub_10001457C((uint64_t)v13, &qword_1008015A8);
  uint64_t v24 = enum case for DynamicTypeSize.xxLarge(_:);
  uint64_t v25 = type metadata accessor for DynamicTypeSize();
  uint64_t v26 = (uint64_t)v29;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104))(v29, v24, v25);
  sub_1001AD364(&qword_100800128, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    sub_1001ADDB4();
    sub_100014488(&qword_100800160, &qword_1008000E8);
    View.dynamicTypeSize<A>(_:)();
    sub_10001457C(v26, &qword_1008000E8);
    return sub_10001457C((uint64_t)v15, &qword_1008015B0);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001A6370@<X0>(uint64_t a1@<X8>)
{
  uint64_t v54 = a1;
  uint64_t v56 = sub_100010218(&qword_1008000E8);
  __chkstk_darwin(v56);
  uint64_t v3 = (char *)v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = sub_100010218(&qword_100801740);
  __chkstk_darwin(v55);
  uint64_t v5 = (char *)v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_100801748);
  uint64_t v52 = *(void *)(v6 - 8);
  uint64_t v53 = v6;
  __chkstk_darwin(v6);
  uint64_t v50 = (char *)v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v51 = (char *)v49 - v9;
  uint64_t v10 = sub_100010218(&qword_100801750);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218(&qword_100801758);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100010218(&qword_100801760);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v49 - v20;
  sub_100010218((uint64_t *)&unk_100801A50);
  Bindable.wrappedValue.getter();
  int v22 = *(unsigned __int8 *)(v57 + 80);
  swift_release();
  uint64_t v23 = static VerticalAlignment.center.getter();
  if (v22 == 1)
  {
    *(void *)uint64_t v15 = v23;
    *((void *)v15 + 1) = 0;
    v15[16] = 1;
    uint64_t v24 = sub_100010218(&qword_100801788);
    sub_1001AAF40((uint64_t)&v15[*(int *)(v24 + 44)]);
    char v25 = static Edge.Set.leading.getter();
    EdgeInsets.init(_all:)();
    uint64_t v27 = v26;
    uint64_t v29 = v28;
    uint64_t v31 = v30;
    uint64_t v33 = v32;
    sub_10001B220((uint64_t)v15, (uint64_t)v18, &qword_100801758);
    uint64_t v34 = &v18[*(int *)(v16 + 36)];
    *uint64_t v34 = v25;
    *((void *)v34 + 1) = v27;
    *((void *)v34 + 2) = v29;
    *((void *)v34 + 3) = v31;
    *((void *)v34 + 4) = v33;
    v34[40] = 0;
    sub_10001457C((uint64_t)v15, &qword_100801758);
    sub_10002C4EC((uint64_t)v18, (uint64_t)v21, &qword_100801760);
    sub_10001B220((uint64_t)v21, (uint64_t)v12, &qword_100801760);
    swift_storeEnumTagMultiPayload();
    sub_1001AEB74();
    uint64_t v35 = sub_100014488(&qword_100801770, &qword_100801740);
    uint64_t v36 = sub_100014488(&qword_100800160, &qword_1008000E8);
    uint64_t v57 = v55;
    uint64_t v58 = v56;
    uint64_t v59 = v35;
    uint64_t v60 = v36;
    swift_getOpaqueTypeConformance2();
    _ConditionalContent<>.init(storage:)();
    return sub_10001457C((uint64_t)v21, &qword_100801760);
  }
  else
  {
    v49[1] = v10;
    v49[2] = v16;
    uint64_t v39 = v55;
    uint64_t v38 = v56;
    *(void *)uint64_t v5 = v23;
    *((void *)v5 + 1) = 0;
    v5[16] = 1;
    uint64_t v40 = sub_100010218(&qword_100801768);
    sub_1001AA7EC(v1, (uint64_t)&v5[*(int *)(v40 + 44)]);
    uint64_t v41 = enum case for DynamicTypeSize.xxLarge(_:);
    uint64_t v42 = type metadata accessor for DynamicTypeSize();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v42 - 8) + 104))(v3, v41, v42);
    sub_1001AD364(&qword_100800128, (void (*)(uint64_t))&type metadata accessor for DynamicTypeSize);
    uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
    if (result)
    {
      uint64_t v43 = sub_100014488(&qword_100801770, &qword_100801740);
      uint64_t v44 = sub_100014488(&qword_100800160, &qword_1008000E8);
      uint64_t v45 = v50;
      View.dynamicTypeSize<A>(_:)();
      sub_10001457C((uint64_t)v3, &qword_1008000E8);
      sub_10001457C((uint64_t)v5, &qword_100801740);
      char v47 = v51;
      uint64_t v46 = v52;
      uint64_t v48 = v53;
      (*(void (**)(char *, char *, uint64_t))(v52 + 32))(v51, v45, v53);
      (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v12, v47, v48);
      swift_storeEnumTagMultiPayload();
      sub_1001AEB74();
      uint64_t v57 = v39;
      uint64_t v58 = v38;
      uint64_t v59 = v43;
      uint64_t v60 = v44;
      swift_getOpaqueTypeConformance2();
      _ConditionalContent<>.init(storage:)();
      return (*(uint64_t (**)(char *, uint64_t))(v46 + 8))(v47, v48);
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1001A69D4@<X0>(BOOL *a1@<X8>)
{
  uint64_t result = GeometryProxy.size.getter();
  *a1 = v3 >= 500.0;
  return result;
}

uint64_t sub_1001A6A14()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1001A6A80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v36 = a1;
  uint64_t v3 = type metadata accessor for BorderlessButtonStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for RecordingView(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = sub_100010218(&qword_1007FCAB8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100010218(&qword_100801878);
  uint64_t v34 = *(void *)(v14 - 8);
  uint64_t v35 = v14;
  __chkstk_darwin(v14);
  uint64_t v16 = v2;
  uint64_t v17 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001AD7C8(v16, (uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for RecordingView);
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = swift_allocObject();
  sub_1001AD3B0((uint64_t)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18);
  Button.init(action:label:)();
  BorderlessButtonStyle.init()();
  sub_100014488(&qword_1007FCAC0, &qword_1007FCAB8);
  sub_1001AD364(&qword_100801880, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  sub_100010218((uint64_t *)&unk_100801A50);
  Bindable.wrappedValue.getter();
  uint64_t v20 = v37;
  swift_getKeyPath();
  uint64_t v37 = v20;
  sub_1001AD364((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v20 + 16))
  {
    uint64_t v21 = *(void *)(v20 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v23 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v21 + 40);
    swift_unknownObjectRetain();
    int v24 = v23(ObjectType, v21);
    swift_release();
    swift_unknownObjectRelease();
    BOOL v25 = v24 != 2;
  }
  else
  {
    swift_release();
    BOOL v25 = 1;
  }
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v27 = swift_allocObject();
  *(unsigned char *)(v27 + 16) = v25;
  uint64_t v29 = v34;
  uint64_t v28 = v35;
  uint64_t v30 = v36;
  (*(void (**)(uint64_t, char *, uint64_t))(v34 + 16))(v36, v17, v35);
  uint64_t v31 = (uint64_t *)(v30 + *(int *)(sub_100010218(&qword_100801860) + 36));
  *uint64_t v31 = KeyPath;
  v31[1] = (uint64_t)sub_1001AF4AC;
  v31[2] = v27;
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v17, v28);
}

uint64_t sub_1001A6F84(uint64_t a1, void (*a2)(uint64_t))
{
  sub_100010218((uint64_t *)&unk_100801A50);
  uint64_t v3 = Bindable.wrappedValue.getter();
  a2(v3);
  return swift_release();
}

uint64_t sub_1001A6FD8@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  static Font.body.getter();
  uint64_t v7 = Text.font(_:)();
  uint64_t v9 = v8;
  char v11 = v10;
  swift_release();
  sub_10002B8D0(v2, v4, v6);
  swift_bridgeObjectRelease();
  static Font.Weight.semibold.getter();
  uint64_t v12 = Text.fontWeight(_:)();
  uint64_t v14 = v13;
  char v16 = v15;
  uint64_t v18 = v17;
  sub_10002B8D0(v7, v9, v11 & 1);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v12;
  *(void *)(a1 + 8) = v14;
  *(unsigned char *)(a1 + 16) = v16 & 1;
  *(void *)(a1 + 24) = v18;
  return result;
}

uint64_t sub_1001A710C(char a1)
{
  if (a1) {
    uint64_t v1 = 0x61776B6361626F67;
  }
  else {
    uint64_t v1 = 0x726177726F666F67;
  }
  uint64_t v4 = v1;
  v2._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v2);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1001A71A8(uint64_t a1, char a2)
{
  sub_100010218((uint64_t *)&unk_100801A50);
  Bindable.wrappedValue.getter();
  swift_getKeyPath();
  sub_1001AD364((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  Bindable.wrappedValue.getter();
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void *)(v7 + 64);
  uint64_t ObjectType = swift_getObjectType();
  if (a2) {
    char v5 = *(void (**)(uint64_t, uint64_t, double))(v3 + 144);
  }
  else {
    char v5 = *(void (**)(uint64_t, uint64_t, double))(v3 + 152);
  }
  swift_unknownObjectRetain();
  v5(ObjectType, v3, 15.0);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_1001A73CC@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  char v2 = a1 & 1;
  uint64_t v20 = type metadata accessor for Image.Scale();
  uint64_t v3 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  char v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100010218(&qword_1008016E8);
  uint64_t v6 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001A710C(v2);
  uint64_t v9 = Image.init(systemName:)();
  uint64_t v10 = static Font.title2.getter();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v23 = v9;
  uint64_t v24 = KeyPath;
  uint64_t v25 = v10;
  static Font.Weight.semibold.getter();
  sub_100010218(&qword_100801668);
  sub_1001AED48(&qword_100801670, &qword_100801668, &qword_1007F9638, &qword_1007F9640);
  View.fontWeight(_:)();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v12 = v20;
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for Image.Scale.large(_:), v20);
  uint64_t v13 = swift_getKeyPath();
  uint64_t v14 = sub_100010218(&qword_100801658);
  uint64_t v15 = v22;
  char v16 = (uint64_t *)(v22 + *(int *)(v14 + 36));
  uint64_t v17 = sub_100010218(&qword_100801680);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))((char *)v16 + *(int *)(v17 + 28), v5, v12);
  *char v16 = v13;
  uint64_t v18 = v21;
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 16))(v15, v8, v21);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v18);
}

uint64_t sub_1001A7688()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RecordingView(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = sub_100010218(&qword_1008016A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v17[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_100010218(&qword_1008016A8);
  __chkstk_darwin(v9);
  char v11 = &v17[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1001AD7C8(v1, (uint64_t)&v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], type metadata accessor for RecordingView);
  unint64_t v12 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v13 = swift_allocObject();
  sub_1001AD3B0((uint64_t)&v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)], v13 + v12);
  uint64_t v18 = v1;
  sub_100010218(&qword_1008016B0);
  sub_1001AE440();
  Button.init(action:label:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16))(v11, v8, v5);
  uint64_t v14 = &v11[*(int *)(v9 + 36)];
  long long v15 = v20;
  *uint64_t v14 = v19;
  v14[1] = v15;
  v14[2] = v21;
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1001AE5A0();
  View.accessibilityIdentifier(_:)();
  return sub_10001457C((uint64_t)v11, &qword_1008016A8);
}

uint64_t sub_1001A7960()
{
  sub_100010218((uint64_t *)&unk_100801A50);
  Bindable.wrappedValue.getter();
  BOOL v0 = sub_1003D6068();
  swift_release();
  Bindable.wrappedValue.getter();
  if (v0)
  {
    swift_getKeyPath();
    sub_1001AD364((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v1 = *(void *)(v5 + 64);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 136);
    swift_unknownObjectRetain();
    v3(ObjectType, v1);
    swift_release();
    return swift_unknownObjectRelease();
  }
  else
  {
    RecordingViewModel.play()();
    return swift_release();
  }
}

uint64_t sub_1001A7AA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v1 = type metadata accessor for SymbolEffectOptions();
  uint64_t v53 = *(void *)(v1 - 8);
  uint64_t v54 = v1;
  __chkstk_darwin(v1);
  uint64_t v50 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for ReplaceSymbolEffect();
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  __chkstk_darwin(v3);
  uint64_t v46 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v45 = (char *)&v41 - v6;
  uint64_t v7 = type metadata accessor for ContentTransition();
  uint64_t v51 = *(void *)(v7 - 8);
  uint64_t v52 = v7;
  __chkstk_darwin(v7);
  char v47 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218(&qword_100801680);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  unint64_t v12 = (uint64_t *)((char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = type metadata accessor for Image.Scale();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  char v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100010218(&qword_1008016C8);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v42 = (uint64_t *)((char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v44 = sub_100010218(&qword_1008016B0) - 8;
  __chkstk_darwin(v44);
  uint64_t v43 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010218((uint64_t *)&unk_100801A50);
  Bindable.wrappedValue.getter();
  sub_1003D6068();
  swift_release();
  uint64_t v21 = Image.init(systemName:)();
  static Font.largeTitle.getter();
  uint64_t v22 = Font.bold()();
  swift_release();
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for Image.Scale.large(_:), v13);
  uint64_t v24 = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))((char *)v12 + *(int *)(v10 + 36), v16, v13);
  uint64_t *v12 = v24;
  uint64_t v25 = *(int *)(v18 + 44);
  uint64_t v26 = v42;
  sub_10001B220((uint64_t)v12, (uint64_t)v42 + v25, &qword_100801680);
  *uint64_t v26 = v21;
  v26[1] = KeyPath;
  v26[2] = v22;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10001457C((uint64_t)v12, &qword_100801680);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  swift_release();
  swift_release();
  swift_release();
  uint64_t v27 = v45;
  ReplaceSymbolEffect.init()();
  uint64_t v28 = v46;
  ReplaceSymbolEffect.downUp.getter();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v48 + 8);
  uint64_t v30 = v27;
  uint64_t v31 = v49;
  v29(v30, v49);
  uint64_t v32 = v50;
  static SymbolEffectOptions.default.getter();
  sub_1001AD364(&qword_1008016E0, (void (*)(uint64_t))&type metadata accessor for ReplaceSymbolEffect);
  uint64_t v33 = v47;
  static ContentTransition.symbolEffect<A>(_:options:)();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v32, v54);
  v29(v28, v31);
  uint64_t v34 = swift_getKeyPath();
  uint64_t v35 = (uint64_t)v43;
  uint64_t v36 = (uint64_t *)&v43[*(int *)(v44 + 44)];
  uint64_t v37 = sub_100010218(&qword_100800618);
  uint64_t v39 = v51;
  uint64_t v38 = v52;
  (*(void (**)(char *, char *, uint64_t))(v51 + 16))((char *)v36 + *(int *)(v37 + 28), v33, v52);
  uint64_t *v36 = v34;
  sub_10001B220((uint64_t)v26, v35, &qword_1008016C8);
  (*(void (**)(char *, uint64_t))(v39 + 8))(v33, v38);
  sub_10001457C((uint64_t)v26, &qword_1008016C8);
  return sub_10002C4EC(v35, v55, &qword_1008016B0);
}

uint64_t sub_1001A80C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v67 = a2;
  uint64_t v3 = type metadata accessor for LayoutDirection();
  uint64_t v65 = *(void *)(v3 - 8);
  uint64_t v66 = v3;
  __chkstk_darwin(v3);
  uint64_t v64 = (char *)&v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for PlainButtonStyle();
  uint64_t v63 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  uint64_t v58 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_1008015D8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100010218(&qword_1008015E0);
  __chkstk_darwin(v57);
  uint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_100010218(&qword_1008015E8);
  uint64_t v60 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v56 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218(&qword_1008015F0);
  uint64_t v13 = v12 - 8;
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v59 = (uint64_t)&v55 - v17;
  uint64_t v18 = sub_100010218(&qword_1008015F8);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100010218(&qword_100801600);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v26 = (char *)&v55 - v25;
  uint64_t v55 = (uint64_t)&v55 - v25;
  sub_1001A885C((uint64_t)v20);
  uint64_t v27 = static Alignment.leading.getter();
  sub_1001A3D64(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v23, 0.0, 1, 0.0, 1, v27, v28, &qword_1008015F8, &qword_100801600);
  sub_10001457C((uint64_t)v20, &qword_1008015F8);
  sub_10002C4EC((uint64_t)v23, (uint64_t)v26, &qword_100801600);
  *(void *)uint64_t v8 = static VerticalAlignment.center.getter();
  *((void *)v8 + 1) = 0x4038000000000000;
  v8[16] = 0;
  uint64_t v29 = sub_100010218(&qword_100801608);
  sub_1001A8C8C(a1, (uint64_t)&v8[*(int *)(v29 + 44)]);
  uint64_t v30 = static Alignment.center.getter();
  sub_1001A3D64(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v10, 0.0, 1, 0.0, 1, v30, v31, &qword_1008015D8, &qword_1008015E0);
  sub_10001457C((uint64_t)v8, &qword_1008015D8);
  uint64_t v32 = v58;
  PlainButtonStyle.init()();
  sub_1001ADF54();
  sub_1001AD364(&qword_100801620, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v33 = v56;
  uint64_t v34 = v62;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v32, v34);
  sub_10001457C((uint64_t)v10, &qword_1008015E0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v37 = v64;
  uint64_t v36 = v65;
  uint64_t v38 = v66;
  (*(void (**)(char *, void, uint64_t))(v65 + 104))(v64, enum case for LayoutDirection.leftToRight(_:), v66);
  uint64_t v39 = (uint64_t *)&v15[*(int *)(v13 + 44)];
  uint64_t v40 = sub_100010218(&qword_100801628);
  (*(void (**)(char *, char *, uint64_t))(v36 + 16))((char *)v39 + *(int *)(v40 + 28), v37, v38);
  *uint64_t v39 = KeyPath;
  uint64_t v41 = v60;
  uint64_t v42 = v61;
  (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v15, v33, v61);
  (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v38);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v33, v42);
  uint64_t v43 = v59;
  sub_10002C4EC((uint64_t)v15, v59, &qword_1008015F0);
  uint64_t v44 = static Alignment.trailing.getter();
  sub_1001A3F34(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v68, 0.0, 1, 0.0, 1, v44, v45, 0, 1);
  uint64_t v46 = v55;
  sub_10001B220(v55, (uint64_t)v23, &qword_100801600);
  sub_10001B220(v43, (uint64_t)v15, &qword_1008015F0);
  uint64_t v47 = v67;
  sub_10001B220((uint64_t)v23, v67, &qword_100801600);
  uint64_t v48 = sub_100010218(&qword_100801630);
  sub_10001B220((uint64_t)v15, v47 + *(int *)(v48 + 48), &qword_1008015F0);
  uint64_t v49 = (_OWORD *)(v47 + *(int *)(v48 + 64));
  long long v50 = v68[5];
  v49[4] = v68[4];
  v49[5] = v50;
  long long v51 = v68[7];
  v49[6] = v68[6];
  v49[7] = v51;
  long long v52 = v68[1];
  _OWORD *v49 = v68[0];
  v49[1] = v52;
  long long v53 = v68[3];
  v49[2] = v68[2];
  void v49[3] = v53;
  sub_10001457C(v43, &qword_1008015F0);
  sub_10001457C(v46, &qword_100801600);
  sub_10001457C((uint64_t)v15, &qword_1008015F0);
  return sub_10001457C((uint64_t)v23, &qword_100801600);
}

uint64_t sub_1001A885C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v22 = a1;
  uint64_t v23 = type metadata accessor for AccessibilityTraits();
  uint64_t v21 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v20 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218(&qword_1008016F0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100010218(&qword_1008015F8);
  __chkstk_darwin(v19);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v18 - v11;
  uint64_t v25 = v2;
  uint64_t v24 = v2;
  sub_100010218(&qword_100800660);
  sub_100010218(&qword_1008016F8);
  sub_10017A9C4();
  sub_100014488(&qword_100801700, &qword_1008016F8);
  Menu.init(content:label:)();
  LocalizedStringKey.init(stringLiteral:)();
  sub_100014488(&qword_100801708, &qword_1008016F0);
  View.accessibilityLabel(_:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_100010218((uint64_t *)&unk_100801A50);
  Bindable.wrappedValue.getter();
  uint64_t v13 = v26;
  swift_getKeyPath();
  uint64_t v26 = v13;
  sub_1001AD364((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  float v14 = *(float *)(v13 + 100);
  swift_release();
  uint64_t v26 = sub_1003D3718(v14);
  uint64_t v27 = v15;
  sub_100014344();
  ModifiedContent<>.accessibilityValue<A>(_:)();
  swift_bridgeObjectRelease();
  sub_10001457C((uint64_t)v9, &qword_1008015F8);
  uint64_t v16 = v20;
  static AccessibilityTraits.isButton.getter();
  ModifiedContent<>.accessibilityRemoveTraits(_:)();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v16, v23);
  return sub_10001457C((uint64_t)v12, &qword_1008015F8);
}

uint64_t sub_1001A8C8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v55 = a1;
  uint64_t v61 = a2;
  uint64_t v3 = sub_100010218(&qword_100801638);
  __chkstk_darwin(v3 - 8);
  uint64_t v60 = (uint64_t)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v63 = (uint64_t)v46 - v6;
  uint64_t v7 = type metadata accessor for RecordingView(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  uint64_t v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100010218(&qword_100801640);
  uint64_t v11 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  uint64_t v13 = (char *)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100010218(&qword_100801648);
  __chkstk_darwin(v62);
  uint64_t v15 = (char *)v46 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100010218(&qword_100801650);
  __chkstk_darwin(v16 - 8);
  uint64_t v59 = (uint64_t)v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v58 = (char *)v46 - v19;
  __chkstk_darwin(v20);
  uint64_t v49 = (char *)v46 - v21;
  __chkstk_darwin(v22);
  uint64_t v54 = (uint64_t)v46 - v23;
  uint64_t v56 = type metadata accessor for RecordingView;
  sub_1001AD7C8(a1, (uint64_t)v10, type metadata accessor for RecordingView);
  uint64_t v24 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v25 = (v24 + 16) & ~v24;
  uint64_t v26 = v25 + v9;
  uint64_t v53 = v24 | 7;
  uint64_t v52 = v25 + v9 + 1;
  uint64_t v27 = swift_allocObject();
  sub_1001AD3B0((uint64_t)v10, v27 + v25);
  *(unsigned char *)(v27 + v26) = 1;
  char v65 = 1;
  uint64_t v51 = sub_100010218(&qword_100801658);
  unint64_t v50 = sub_1001AE068();
  Button.init(action:label:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v28 = v57;
  v48(v15, v13, v57);
  uint64_t v29 = &v15[*(int *)(v62 + 36)];
  long long v30 = v67;
  *(_OWORD *)uint64_t v29 = v66;
  *((_OWORD *)v29 + 1) = v30;
  *((_OWORD *)v29 + 2) = v68;
  uint64_t v31 = *(void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v46[2] = v11 + 8;
  uint64_t v47 = v31;
  v31(v13, v28);
  v46[1] = sub_1001AE164();
  uint64_t v32 = (uint64_t)v49;
  View.accessibilityIdentifier(_:)();
  sub_10001457C((uint64_t)v15, &qword_100801648);
  uint64_t v33 = v54;
  sub_10002C4EC(v32, v54, &qword_100801650);
  uint64_t v34 = v55;
  sub_1001A7688();
  sub_1001AD7C8(v34, (uint64_t)v10, v56);
  uint64_t v35 = swift_allocObject();
  sub_1001AD3B0((uint64_t)v10, v35 + v25);
  *(unsigned char *)(v35 + v26) = 0;
  char v64 = 0;
  Button.init(action:label:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  v48(v15, v13, v28);
  uint64_t v36 = &v15[*(int *)(v62 + 36)];
  long long v37 = v70;
  *(_OWORD *)uint64_t v36 = v69;
  *((_OWORD *)v36 + 1) = v37;
  *((_OWORD *)v36 + 2) = v71;
  v47(v13, v28);
  uint64_t v38 = (uint64_t)v58;
  View.accessibilityIdentifier(_:)();
  sub_10001457C((uint64_t)v15, &qword_100801648);
  sub_10002C4EC(v38, v32, &qword_100801650);
  uint64_t v39 = v33;
  sub_10001B220(v33, v38, &qword_100801650);
  uint64_t v40 = v63;
  uint64_t v41 = v60;
  sub_10001B220(v63, v60, &qword_100801638);
  uint64_t v42 = v59;
  sub_10001B220(v32, v59, &qword_100801650);
  uint64_t v43 = v61;
  sub_10001B220(v38, v61, &qword_100801650);
  uint64_t v44 = sub_100010218(&qword_100801698);
  sub_10001B220(v41, v43 + *(int *)(v44 + 48), &qword_100801638);
  sub_10001B220(v42, v43 + *(int *)(v44 + 64), &qword_100801650);
  sub_10001457C(v32, &qword_100801650);
  sub_10001457C(v40, &qword_100801638);
  sub_10001457C(v39, &qword_100801650);
  sub_10001457C(v42, &qword_100801650);
  sub_10001457C(v41, &qword_100801638);
  return sub_10001457C(v38, &qword_100801650);
}

uint64_t sub_1001A93C4()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_1001A93E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AE7C4(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

uint64_t sub_1001A9414@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v8[1] = a2;
  uint64_t v3 = sub_100010218((uint64_t *)&unk_100801A50);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  Bindable.projectedValue.getter();
  swift_getKeyPath();
  Bindable<A>.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v8[6] = v10;
  v8[7] = v11;
  int v9 = v12;
  v8[4] = a1;
  sub_100010218(&qword_100801710);
  sub_1001AEA60();
  sub_1001AEAB4();
  return Picker<>.init(_:selection:content:)();
}

float sub_1001A95DC@<S0>(uint64_t *a1@<X0>, float *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1001AD364((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  float result = *(float *)(v3 + 100);
  *a2 = result;
  return result;
}

uint64_t sub_1001A9684()
{
  return swift_release();
}

uint64_t sub_1001A975C()
{
  sub_100010218((uint64_t *)&unk_100801A50);
  Bindable.wrappedValue.getter();
  if (qword_1007F6F48 != -1) {
    swift_once();
  }
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_1001A3BF0(v0);
  swift_release();
  sub_100010218(&qword_100801728);
  sub_100014488(&qword_100801730, &qword_100801728);
  sub_1001AEB20();
  return ForEach<>.init(_:content:)();
}

uint64_t sub_1001A9880@<X0>(float *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1003D3718(*a1);
  sub_100014344();
  uint64_t result = Text.init<A>(_:)();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v4;
  *(unsigned char *)(a2 + 16) = v5 & 1;
  *(void *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_1001A98DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100010218(&qword_100800590);
  __chkstk_darwin(v2 - 8);
  uint64_t v31 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010218((uint64_t *)&unk_100801A50);
  Bindable.wrappedValue.getter();
  uint64_t v4 = v32;
  swift_getKeyPath();
  uint64_t v32 = v4;
  sub_1001AD364((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  float v5 = *(float *)(v4 + 100);
  swift_release();
  uint64_t v32 = sub_1003D3718(v5);
  uint64_t v33 = v6;
  sub_100014344();
  uint64_t v7 = Text.init<A>(_:)();
  uint64_t v9 = v8;
  char v11 = v10 & 1;
  static Font.body.getter();
  static Font.Weight.semibold.getter();
  Font.weight(_:)();
  swift_release();
  uint64_t v12 = Text.font(_:)();
  uint64_t v14 = v13;
  char v16 = v15;
  swift_release();
  char v17 = v16 & 1;
  sub_10002B8D0(v7, v9, v11);
  swift_bridgeObjectRelease();
  uint64_t v18 = enum case for Font.Design.rounded(_:);
  uint64_t v19 = type metadata accessor for Font.Design();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = (uint64_t)v31;
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 104))(v31, v18, v19);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v20 + 56))(v21, 0, 1, v19);
  uint64_t v22 = Text.fontDesign(_:)();
  uint64_t v24 = v23;
  LOBYTE(v20) = v25;
  uint64_t v27 = v26;
  sub_10002B8D0(v12, v14, v17);
  swift_bridgeObjectRelease();
  sub_10001457C(v21, &qword_100800590);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v22;
  *(void *)(a1 + 8) = v24;
  *(unsigned char *)(a1 + 16) = v20 & 1;
  *(void *)(a1 + 24) = v27;
  *(void *)(a1 + 32) = KeyPath;
  *(void *)(a1 + 40) = 1;
  *(unsigned char *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = result;
  *(void *)(a1 + 64) = 0x3FE3333333333333;
  return result;
}

uint64_t sub_1001A9BC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v58 = a1;
  uint64_t v2 = type metadata accessor for IconOnlyLabelStyle();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  uint64_t v57 = v3;
  __chkstk_darwin(v2);
  uint64_t v55 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for BorderedProminentButtonStyle();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v53 = v5;
  uint64_t v54 = v6;
  __chkstk_darwin(v5);
  uint64_t v48 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for ButtonToggleStyle();
  uint64_t v44 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  char v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_1008017A8);
  uint64_t v43 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_100010218(&qword_1008017B0);
  uint64_t v47 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  char v15 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100010218(&qword_1008017B8);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v49 = v16;
  uint64_t v50 = v17;
  __chkstk_darwin(v16);
  uint64_t v42 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100010218(&qword_1008017C0);
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v51 = v19;
  uint64_t v52 = v20;
  __chkstk_darwin(v19);
  uint64_t v45 = (char *)&v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (char *)(v1 + *(int *)(type metadata accessor for RecordingView(0) + 20));
  char v23 = *v22;
  uint64_t v24 = *((void *)v22 + 1);
  LOBYTE(v64) = v23;
  uint64_t v65 = v24;
  sub_100010218(&qword_1008014F0);
  State.projectedValue.getter();
  uint64_t v64 = v60;
  uint64_t v65 = v61;
  char v66 = v62;
  static Animation.spring(response:dampingFraction:blendDuration:)();
  sub_100010218(&qword_1008017C8);
  Binding.animation(_:)();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v59 = v1;
  sub_100010218(&qword_1008017D0);
  sub_100014488(&qword_1008017D8, &qword_1008017D0);
  Toggle.init(isOn:label:)();
  ButtonToggleStyle.init()();
  uint64_t v25 = sub_100014488(&qword_1008017E0, &qword_1008017A8);
  uint64_t v26 = sub_1001AD364(&qword_1008017E8, (void (*)(uint64_t))&type metadata accessor for ButtonToggleStyle);
  View.toggleStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v10, v8);
  (*(void (**)(char *, uint64_t))(v43 + 8))(v13, v11);
  uint64_t v27 = v48;
  BorderedProminentButtonStyle.init()();
  uint64_t v60 = v11;
  uint64_t v61 = v8;
  uint64_t v62 = v25;
  uint64_t v63 = v26;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v29 = sub_1001AD364(&qword_1008017F0, (void (*)(uint64_t))&type metadata accessor for BorderedProminentButtonStyle);
  uint64_t v30 = v42;
  uint64_t v31 = v46;
  uint64_t v32 = v53;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v27, v32);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v15, v31);
  uint64_t v33 = v55;
  IconOnlyLabelStyle.init()();
  uint64_t v60 = v31;
  uint64_t v61 = v32;
  uint64_t v62 = OpaqueTypeConformance2;
  uint64_t v63 = v29;
  uint64_t v34 = swift_getOpaqueTypeConformance2();
  uint64_t v35 = sub_1001AD364(&qword_1008017F8, (void (*)(uint64_t))&type metadata accessor for IconOnlyLabelStyle);
  uint64_t v36 = v45;
  uint64_t v37 = v49;
  uint64_t v38 = v56;
  View.labelStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v33, v38);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v30, v37);
  uint64_t v60 = v37;
  uint64_t v61 = v38;
  uint64_t v62 = v34;
  uint64_t v63 = v35;
  swift_getOpaqueTypeConformance2();
  uint64_t v39 = v51;
  View.accessibilityIdentifier(_:)();
  return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v36, v39);
}

uint64_t sub_1001AA390()
{
  return Label.init(title:icon:)();
}

uint64_t sub_1001AA420@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_1001AA4A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v25 = sub_100010218(&qword_100801680) - 8;
  __chkstk_darwin(v25);
  char v4 = (uint64_t *)((char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = type metadata accessor for Image.Scale();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218(&qword_100801818);
  uint64_t v10 = v9 - 8;
  __chkstk_darwin(v9);
  uint64_t v12 = (uint64_t *)((char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v13 = sub_100010218(&qword_100801800);
  uint64_t v14 = v13 - 8;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (char *)(a1 + *(int *)(type metadata accessor for RecordingView(0) + 20));
  char v18 = *v17;
  uint64_t v19 = *((void *)v17 + 1);
  char v27 = v18;
  uint64_t v28 = v19;
  sub_100010218(&qword_1008014F0);
  State.wrappedValue.getter();
  uint64_t v20 = Image.init(systemName:)();
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, enum case for Image.Scale.large(_:), v5);
  uint64_t KeyPath = swift_getKeyPath();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))((char *)v4 + *(int *)(v25 + 36), v8, v5);
  *char v4 = KeyPath;
  sub_10001B220((uint64_t)v4, (uint64_t)v12 + *(int *)(v10 + 44), &qword_100801680);
  uint64_t *v12 = v20;
  swift_retain();
  sub_10001457C((uint64_t)v4, &qword_100801680);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_release();
  LOBYTE(v20) = static Edge.Set.all.getter();
  sub_10001B220((uint64_t)v12, (uint64_t)v16, &qword_100801818);
  uint64_t v22 = &v16[*(int *)(v14 + 44)];
  *uint64_t v22 = v20;
  *(_OWORD *)(v22 + 8) = xmmword_1006DD050;
  *(_OWORD *)(v22 + 24) = xmmword_1006DD050;
  v22[40] = 0;
  sub_10001457C((uint64_t)v12, &qword_100801818);
  return sub_10002C4EC((uint64_t)v16, v26, &qword_100801800);
}

uint64_t sub_1001AA7EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v90 = a2;
  uint64_t v3 = sub_100010218(&qword_100801820);
  __chkstk_darwin(v3 - 8);
  uint64_t v79 = (uint64_t *)((char *)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v82 = sub_100010218(&qword_100801828) - 8;
  __chkstk_darwin(v82);
  uint64_t v81 = (uint64_t)&v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_100010218(&qword_100801830) - 8;
  __chkstk_darwin(v83);
  uint64_t v80 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100010218(&qword_100801838);
  __chkstk_darwin(v86);
  uint64_t v89 = (uint64_t)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v85 = (uint64_t)&v78 - v9;
  __chkstk_darwin(v10);
  uint64_t v88 = (uint64_t)&v78 - v11;
  uint64_t v12 = sub_100010218(&qword_100801840);
  __chkstk_darwin(v12 - 8);
  uint64_t v87 = (uint64_t)&v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v78 - v15;
  uint64_t v17 = sub_100010218(&qword_100801758);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (uint64_t)&v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_100010218(&qword_100801760);
  uint64_t v21 = v20 - 8;
  __chkstk_darwin(v20);
  char v23 = (char *)&v78 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_100010218(&qword_100801848);
  uint64_t v25 = v24 - 8;
  __chkstk_darwin(v24);
  char v27 = (char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v78 - v29;
  *(void *)uint64_t v19 = static VerticalAlignment.center.getter();
  *(void *)(v19 + 8) = 0;
  *(unsigned char *)(v19 + 16) = 1;
  uint64_t v31 = sub_100010218(&qword_100801788);
  sub_1001AAF40(v19 + *(int *)(v31 + 44));
  char v32 = static Edge.Set.leading.getter();
  EdgeInsets.init(_all:)();
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  uint64_t v40 = v39;
  sub_10001B220(v19, (uint64_t)v23, &qword_100801758);
  uint64_t v41 = &v23[*(int *)(v21 + 44)];
  *uint64_t v41 = v32;
  *((void *)v41 + 1) = v34;
  *((void *)v41 + 2) = v36;
  *((void *)v41 + 3) = v38;
  *((void *)v41 + 4) = v40;
  v41[40] = 0;
  sub_10001457C(v19, &qword_100801758);
  uint64_t v42 = static Animation.default.getter();
  LOBYTE(v19) = sub_1001A4B00();
  sub_10001B220((uint64_t)v23, (uint64_t)v27, &qword_100801760);
  uint64_t v43 = &v27[*(int *)(v25 + 44)];
  *(void *)uint64_t v43 = v42;
  v43[8] = v19 & 1;
  uint64_t v44 = (uint64_t)v23;
  uint64_t v45 = (uint64_t)v80;
  sub_10001457C(v44, &qword_100801760);
  uint64_t v84 = v27;
  uint64_t v46 = (uint64_t)v30;
  sub_10002C4EC((uint64_t)v27, (uint64_t)v30, &qword_100801848);
  uint64_t v47 = (uint64_t)v16;
  sub_1001AB114((uint64_t)v16);
  uint64_t v48 = static VerticalAlignment.center.getter();
  uint64_t v49 = (uint64_t)v79;
  *uint64_t v79 = v48;
  *(void *)(v49 + 8) = 0;
  *(unsigned char *)(v49 + 16) = 1;
  uint64_t v50 = sub_100010218(&qword_100801850);
  sub_1001AB7F4(a1, v49 + *(int *)(v50 + 44));
  LOBYTE(v42) = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v52 = v51;
  uint64_t v54 = v53;
  uint64_t v56 = v55;
  uint64_t v58 = v57;
  uint64_t v59 = v81;
  sub_10001B220(v49, v81, &qword_100801820);
  uint64_t v60 = v59 + *(int *)(v82 + 44);
  *(unsigned char *)uint64_t v60 = v42;
  *(void *)(v60 + 8) = v52;
  *(void *)(v60 + 16) = v54;
  *(void *)(v60 + 24) = v56;
  *(void *)(v60 + 32) = v58;
  *(unsigned char *)(v60 + 40) = 0;
  sub_10001457C(v49, &qword_100801820);
  uint64_t v61 = static Animation.default.getter();
  LOBYTE(v42) = sub_1001A493C();
  sub_10001B220(v59, v45, &qword_100801828);
  uint64_t v62 = v45 + *(int *)(v83 + 44);
  *(void *)uint64_t v62 = v61;
  *(unsigned char *)(v62 + 8) = v42 & 1;
  sub_10001457C(v59, &qword_100801828);
  uint64_t v63 = static Animation.default.getter();
  sub_100010218((uint64_t *)&unk_100801A50);
  Bindable.wrappedValue.getter();
  uint64_t v64 = v91;
  swift_getKeyPath();
  uint64_t v91 = v64;
  sub_1001AD364((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v64 + 16))
  {
    uint64_t v65 = *(void *)(v64 + 24);
    uint64_t ObjectType = swift_getObjectType();
    long long v67 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v65 + 40);
    swift_unknownObjectRetain();
    LODWORD(v65) = v67(ObjectType, v65);
    swift_unknownObjectRelease();
    BOOL v68 = v65 == 2;
  }
  else
  {
    BOOL v68 = 0;
  }
  swift_release();
  uint64_t v69 = v85;
  sub_10001B220(v45, v85, &qword_100801830);
  uint64_t v70 = v69 + *(int *)(v86 + 36);
  *(void *)uint64_t v70 = v63;
  *(unsigned char *)(v70 + 8) = v68;
  sub_10001457C(v45, &qword_100801830);
  uint64_t v71 = v88;
  sub_10002C4EC(v69, v88, &qword_100801838);
  uint64_t v72 = (uint64_t)v84;
  sub_10001B220(v46, (uint64_t)v84, &qword_100801848);
  uint64_t v73 = v87;
  sub_10001B220(v47, v87, &qword_100801840);
  uint64_t v74 = v89;
  sub_10001B220(v71, v89, &qword_100801838);
  uint64_t v75 = v90;
  sub_10001B220(v72, v90, &qword_100801848);
  uint64_t v76 = sub_100010218(&qword_100801858);
  sub_10001B220(v73, v75 + *(int *)(v76 + 48), &qword_100801840);
  sub_10001B220(v74, v75 + *(int *)(v76 + 64), &qword_100801838);
  sub_10001457C(v71, &qword_100801838);
  sub_10001457C(v47, &qword_100801840);
  sub_10001457C(v46, &qword_100801848);
  sub_10001457C(v74, &qword_100801838);
  sub_10001457C(v73, &qword_100801840);
  return sub_10001457C(v72, &qword_100801848);
}

uint64_t sub_1001AAF40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100010218(&qword_100801790);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_100801798);
  uint64_t v6 = v5 - 8;
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v18 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v18 - v13;
  sub_1001A9BC8((uint64_t)v4);
  if (sub_1001A4B00()) {
    double v15 = 1.0;
  }
  else {
    double v15 = 0.0;
  }
  sub_10001B220((uint64_t)v4, (uint64_t)v11, &qword_100801790);
  *(double *)&v11[*(int *)(v6 + 44)] = v15;
  sub_10001457C((uint64_t)v4, &qword_100801790);
  sub_10002C4EC((uint64_t)v11, (uint64_t)v14, &qword_100801798);
  sub_10001B220((uint64_t)v14, (uint64_t)v8, &qword_100801798);
  sub_10001B220((uint64_t)v8, a1, &qword_100801798);
  uint64_t v16 = a1 + *(int *)(sub_100010218(&qword_1008017A0) + 48);
  *(void *)uint64_t v16 = 0;
  *(unsigned char *)(v16 + 8) = 1;
  sub_10001457C((uint64_t)v14, &qword_100801798);
  return sub_10001457C((uint64_t)v8, &qword_100801798);
}

uint64_t sub_1001AB114@<X0>(uint64_t a1@<X8>)
{
  uint64_t v61 = a1;
  uint64_t v2 = type metadata accessor for RecordingView(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v56 = (uint64_t)v55 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v63 = (uint64_t)v55 - v6;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v55 - v8;
  uint64_t v10 = type metadata accessor for RecordingButton();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v57 = sub_100010218(&qword_100801888);
  __chkstk_darwin(v57);
  uint64_t v60 = (char *)v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_100010218(&qword_100801840);
  __chkstk_darwin(v58);
  uint64_t v59 = (char *)v55 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_100010218((uint64_t *)&unk_100801A50);
  uint64_t v64 = v1;
  Bindable.wrappedValue.getter();
  uint64_t v15 = v65;
  swift_getKeyPath();
  uint64_t v65 = v15;
  v55[1] = sub_1001AD364((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v15 + 16))
  {
    uint64_t v16 = *(void *)(v15 + 24);
    uint64_t v17 = v12;
    uint64_t v18 = v9;
    uint64_t ObjectType = swift_getObjectType();
    v55[0] = v4;
    uint64_t v20 = v10;
    uint64_t v21 = v3;
    uint64_t v22 = *(uint64_t (**)(uint64_t, uint64_t))(v16 + 40);
    swift_unknownObjectRetain();
    uint64_t v23 = ObjectType;
    uint64_t v9 = v18;
    uint64_t v12 = v17;
    char v24 = v22(v23, v16);
    uint64_t v3 = v21;
    uint64_t v10 = v20;
    char v25 = v24;
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
    char v25 = 0;
  }
  uint64_t v26 = v64;
  sub_1001AD7C8(v64, (uint64_t)v9, type metadata accessor for RecordingView);
  unint64_t v27 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v28 = swift_allocObject();
  sub_1001AD3B0((uint64_t)v9, v28 + v27);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v30 = swift_getKeyPath();
  AccessibilityFocusState.init<>()();
  char *v12 = v25;
  *((void *)v12 + 1) = KeyPath;
  v12[16] = 0;
  *((void *)v12 + 3) = v30;
  v12[32] = 0;
  uint64_t v31 = (uint64_t (**)())&v12[*(int *)(v10 + 32)];
  *uint64_t v31 = sub_1001AEE80;
  v31[1] = (uint64_t (*)())v28;
  Bindable.wrappedValue.getter();
  LOBYTE(KeyPath) = sub_1003D6068();
  swift_release();
  uint64_t v32 = v63;
  sub_1001AD7C8(v26, v63, type metadata accessor for RecordingView);
  if ((KeyPath & 1) == 0)
  {
    Bindable.wrappedValue.getter();
    uint64_t v39 = v65;
    swift_getKeyPath();
    uint64_t v65 = v39;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(void *)(v39 + 16))
    {
      uint64_t v40 = *(void *)(v39 + 24);
      uint64_t v41 = swift_getObjectType();
      uint64_t v42 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v40 + 40);
      swift_unknownObjectRetain();
      int v43 = v42(v41, v40);
      swift_release();
      swift_unknownObjectRelease();
      uint64_t v44 = v56;
      sub_1001AD7C8(v32, v56, type metadata accessor for RecordingView);
      if (v43 == 2)
      {
        Bindable.wrappedValue.getter();
        uint64_t v45 = v65;
        swift_getKeyPath();
        uint64_t v65 = v45;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v46 = *(void *)(v45 + 64);
        uint64_t v47 = swift_getObjectType();
        uint64_t v48 = *(uint64_t (**)(uint64_t, uint64_t))(v46 + 48);
        swift_unknownObjectRetain();
        LOBYTE(v46) = v48(v47, v46);
        swift_release();
        uint64_t v44 = v56;
        swift_unknownObjectRelease();
        char v33 = v46 ^ 1;
LABEL_11:
        uint64_t v35 = (uint64_t)v60;
        uint64_t v34 = v61;
        uint64_t v37 = v58;
        uint64_t v36 = (uint64_t)v59;
        uint64_t v38 = v57;
        sub_1001AEC14(v44, type metadata accessor for RecordingView);
        goto LABEL_12;
      }
    }
    else
    {
      swift_release();
      uint64_t v44 = v56;
      sub_1001AD7C8(v32, v56, type metadata accessor for RecordingView);
    }
    char v33 = 0;
    goto LABEL_11;
  }
  char v33 = 1;
  uint64_t v35 = (uint64_t)v60;
  uint64_t v34 = v61;
  uint64_t v37 = v58;
  uint64_t v36 = (uint64_t)v59;
  uint64_t v38 = v57;
LABEL_12:
  sub_1001AEC14(v32, type metadata accessor for RecordingView);
  uint64_t v49 = swift_getKeyPath();
  uint64_t v50 = swift_allocObject();
  *(unsigned char *)(v50 + 16) = v33 & 1;
  sub_1001AD7C8((uint64_t)v12, v35, (uint64_t (*)(void))type metadata accessor for RecordingButton);
  uint64_t v51 = (uint64_t *)(v35 + *(int *)(v38 + 36));
  *uint64_t v51 = v49;
  v51[1] = (uint64_t)sub_1001AF4AC;
  v51[2] = v50;
  sub_1001AEC14((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for RecordingButton);
  uint64_t v52 = swift_getKeyPath();
  LOBYTE(v50) = sub_1001ABB98();
  sub_10001B220(v35, v36, &qword_100801888);
  uint64_t v53 = v36 + *(int *)(v37 + 36);
  *(void *)uint64_t v53 = v52;
  *(unsigned char *)(v53 + 8) = v50 & 1;
  sub_10001457C(v35, &qword_100801888);
  return sub_10002C4EC(v36, v34, &qword_100801840);
}

uint64_t sub_1001AB7F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for RecordingView(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100801860);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_100801868);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v27 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v27 - v17;
  sub_1001A6A80((uint64_t)v9);
  char v19 = sub_1001A493C();
  sub_1001AD7C8(a1, (uint64_t)v6, type metadata accessor for RecordingView);
  if (v19)
  {
    sub_1001AEC14((uint64_t)v6, type metadata accessor for RecordingView);
    double v20 = 1.0;
  }
  else
  {
    uint64_t v29 = v10;
    sub_100010218((uint64_t *)&unk_100801A50);
    Bindable.wrappedValue.getter();
    uint64_t v21 = v30;
    swift_getKeyPath();
    uint64_t v30 = v21;
    sub_1001AD364((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(void *)(v21 + 16))
    {
      uint64_t v28 = a2;
      uint64_t v22 = *(void *)(v21 + 24);
      uint64_t ObjectType = swift_getObjectType();
      unint64_t v27 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v22 + 40);
      swift_unknownObjectRetain();
      uint64_t v24 = v22;
      a2 = v28;
      LODWORD(ObjectType) = v27(ObjectType, v24);
      swift_release();
      swift_unknownObjectRelease();
      sub_1001AEC14((uint64_t)v6, type metadata accessor for RecordingView);
      double v20 = 1.0;
      uint64_t v10 = v29;
      if (ObjectType == 2) {
        goto LABEL_8;
      }
    }
    else
    {
      swift_release();
      sub_1001AEC14((uint64_t)v6, type metadata accessor for RecordingView);
      uint64_t v10 = v29;
    }
    double v20 = 0.0;
  }
LABEL_8:
  sub_10001B220((uint64_t)v9, (uint64_t)v15, &qword_100801860);
  *(double *)&v15[*(int *)(v10 + 36)] = v20;
  sub_10001457C((uint64_t)v9, &qword_100801860);
  sub_10002C4EC((uint64_t)v15, (uint64_t)v18, &qword_100801868);
  sub_10001B220((uint64_t)v18, (uint64_t)v12, &qword_100801868);
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 1;
  uint64_t v25 = sub_100010218(&qword_100801870);
  sub_10001B220((uint64_t)v12, a2 + *(int *)(v25 + 48), &qword_100801868);
  sub_10001457C((uint64_t)v18, &qword_100801868);
  return sub_10001457C((uint64_t)v12, &qword_100801868);
}

uint64_t sub_1001ABB98()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for RecordingView(0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v23 - v6;
  uint64_t v9 = v0 + *(int *)(v8 + 36);
  uint64_t v10 = *(void *)(v9 + 8);
  LOBYTE(v24) = *(unsigned char *)v9;
  uint64_t v25 = v10;
  sub_100010218(&qword_1008014F0);
  State.wrappedValue.getter();
  if (v26) {
    return 1;
  }
  char v12 = sub_1001A493C();
  sub_1001AD7C8(v1, (uint64_t)v7, type metadata accessor for RecordingView);
  if ((v12 & 1) == 0)
  {
    sub_100010218((uint64_t *)&unk_100801A50);
    Bindable.wrappedValue.getter();
    uint64_t v13 = v24;
    swift_getKeyPath();
    uint64_t v24 = v13;
    sub_1001AD364((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(void *)(v13 + 16))
    {
      uint64_t v14 = *(void *)(v13 + 24);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v23 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v14 + 40);
      swift_unknownObjectRetain();
      LODWORD(v14) = v23(ObjectType, v14);
      swift_release();
      swift_unknownObjectRelease();
      sub_1001AEC14((uint64_t)v7, type metadata accessor for RecordingView);
      if (v14 == 2)
      {
        uint64_t v16 = *(void *)(v9 + 8);
        LOBYTE(v24) = *(unsigned char *)v9;
        uint64_t v25 = v16;
        BOOL v11 = 1;
        char v26 = 1;
        State.wrappedValue.setter();
        return v11;
      }
      goto LABEL_9;
    }
    swift_release();
  }
  sub_1001AEC14((uint64_t)v7, type metadata accessor for RecordingView);
LABEL_9:
  char v17 = sub_1001A493C();
  sub_1001AD7C8(v1, (uint64_t)v4, type metadata accessor for RecordingView);
  if (v17)
  {
    BOOL v11 = 1;
  }
  else
  {
    sub_100010218((uint64_t *)&unk_100801A50);
    Bindable.wrappedValue.getter();
    uint64_t v18 = v24;
    swift_getKeyPath();
    uint64_t v24 = v18;
    sub_1001AD364((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(void *)(v18 + 16))
    {
      uint64_t v19 = *(void *)(v18 + 24);
      uint64_t v20 = swift_getObjectType();
      uint64_t v21 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v19 + 40);
      swift_unknownObjectRetain();
      LODWORD(v19) = v21(v20, v19);
      swift_release();
      swift_unknownObjectRelease();
      BOOL v11 = v19 == 2;
    }
    else
    {
      swift_release();
      BOOL v11 = 0;
    }
  }
  sub_1001AEC14((uint64_t)v4, type metadata accessor for RecordingView);
  return v11;
}

uint64_t sub_1001ABF54()
{
  sub_100010218((uint64_t *)&unk_100801A50);
  Bindable.wrappedValue.getter();
  char v0 = sub_1001ABB98();
  RecordingViewModel.didTapRecordingButton(allowsPausing:)(v0 & 1);
  return swift_release();
}

uint64_t sub_1001ABFAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v65 = a2;
  uint64_t v3 = type metadata accessor for ScrollPosition();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = &v59[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for ScrollableWaveformView(0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v59[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v61 = sub_100010218(&qword_100801898);
  __chkstk_darwin(v61);
  uint64_t v10 = &v59[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v62 = sub_100010218(&qword_1008018A0);
  __chkstk_darwin(v62);
  char v12 = &v59[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v63 = sub_100010218(&qword_1008018A8);
  __chkstk_darwin(v63);
  uint64_t v64 = &v59[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v14);
  uint64_t v16 = &v59[-v15];
  __chkstk_darwin(v17);
  char v66 = &v59[-v18];
  uint64_t v19 = type metadata accessor for RecordingView(0);
  __chkstk_darwin(v19);
  uint64_t v21 = &v59[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v22);
  uint64_t v24 = &v59[-v23];
  char v25 = sub_1001A493C();
  sub_1001AD7C8(a1, (uint64_t)v24, type metadata accessor for RecordingView);
  if (v25)
  {
    char v26 = &v24[*(int *)(v19 + 20)];
    char v27 = *v26;
    uint64_t v28 = *((void *)v26 + 1);
    LOBYTE(v71) = v27;
    *((void *)&v71 + 1) = v28;
    sub_100010218(&qword_1008014F0);
    State.wrappedValue.getter();
    int v60 = v67;
  }
  else
  {
    int v60 = 0;
  }
  sub_1001AEC14((uint64_t)v24, type metadata accessor for RecordingView);
  char v29 = sub_1001A493C();
  sub_1001AD7C8(a1, (uint64_t)v21, type metadata accessor for RecordingView);
  if (v29)
  {
    unsigned __int8 v30 = 0;
  }
  else
  {
    sub_100010218((uint64_t *)&unk_100801A50);
    Bindable.wrappedValue.getter();
    if (*(unsigned char *)(v71 + 80))
    {
      unsigned __int8 v30 = 0;
    }
    else
    {
      sub_1003D5524();
      static Duration.seconds(_:)();
      static Duration.zero.getter();
      unsigned __int8 v30 = static Duration.== infix(_:_:)();
    }
    swift_release();
  }
  sub_1001AEC14((uint64_t)v21, type metadata accessor for RecordingView);
  sub_100010218((uint64_t *)&unk_100801A50);
  Bindable.wrappedValue.getter();
  uint64_t v73 = type metadata accessor for RecordingViewModel();
  uint64_t v74 = sub_1001AD364(&qword_1008018B0, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  double v31 = 0.0;
  ScrollPosition.init<A>(idType:x:y:)();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v33 = swift_getKeyPath();
  sub_1001BC950(&v71, (uint64_t)v5, 0, KeyPath, 0, v33, 0, (uint64_t)v8, 0.0);
  uint64_t v34 = swift_getKeyPath();
  char v35 = sub_1001A493C();
  sub_1001AD7C8((uint64_t)v8, (uint64_t)v10, type metadata accessor for ScrollableWaveformView);
  uint64_t v36 = &v10[*(int *)(v61 + 36)];
  *(void *)uint64_t v36 = v34;
  v36[8] = v35 & 1;
  sub_1001AEC14((uint64_t)v8, type metadata accessor for ScrollableWaveformView);
  sub_1001A493C();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10001B220((uint64_t)v10, (uint64_t)v12, &qword_100801898);
  uint64_t v37 = &v12[*(int *)(v62 + 36)];
  long long v38 = v78;
  *uint64_t v37 = v77;
  v37[1] = v38;
  v37[2] = v79;
  sub_10001457C((uint64_t)v10, &qword_100801898);
  int v39 = v60;
  if (((v30 | v60) & 1) == 0) {
    double v31 = 1.0;
  }
  sub_10001B220((uint64_t)v12, (uint64_t)v16, &qword_1008018A0);
  *(double *)&v16[*(int *)(v63 + 36)] = v31;
  sub_10001457C((uint64_t)v12, &qword_1008018A0);
  sub_10002C4EC((uint64_t)v16, (uint64_t)v66, &qword_1008018A8);
  if (v30)
  {
    sub_1001AF214();
    sub_1001AF268();
    long long v67 = 0u;
    long long v68 = 0u;
    long long v69 = 0u;
    char v70 = 0;
  }
  else
  {
    if (!v39)
    {
      uint64_t v63 = 0;
      uint64_t v47 = 0;
      uint64_t v48 = 0;
      uint64_t v49 = 0;
      uint64_t v50 = 0;
      uint64_t v51 = 0;
      unsigned __int8 v52 = -1;
      goto LABEL_18;
    }
    Bindable.wrappedValue.getter();
    uint64_t v40 = v71;
    LOBYTE(v67) = 0;
    State.init(wrappedValue:)();
    uint64_t v41 = v71;
    uint64_t v42 = *((void *)&v71 + 1);
    LOBYTE(v67) = 1;
    State.init(wrappedValue:)();
    uint64_t v43 = v71;
    uint64_t v44 = *((void *)&v71 + 1);
    id v45 = [self systemBackgroundColor];
    uint64_t v46 = Color.init(_:)();
    *(void *)&long long v67 = v41;
    *((void *)&v67 + 1) = v42;
    *(void *)&long long v68 = v43;
    *((void *)&v68 + 1) = v44;
    *(void *)&long long v69 = v40;
    *((void *)&v69 + 1) = v46;
    char v70 = 1;
    sub_1001AF214();
    sub_1001AF268();
  }
  _ConditionalContent<>.init(storage:)();
  uint64_t v47 = *((void *)&v71 + 1);
  uint64_t v63 = v71;
  uint64_t v48 = v72;
  uint64_t v49 = v73;
  uint64_t v50 = v74;
  uint64_t v51 = v75;
  unsigned __int8 v52 = v76;
LABEL_18:
  uint64_t v53 = v66;
  uint64_t v54 = v64;
  sub_10001B220((uint64_t)v66, (uint64_t)v64, &qword_1008018A8);
  uint64_t v55 = v65;
  sub_10001B220((uint64_t)v54, v65, &qword_1008018A8);
  uint64_t v56 = v55 + *(int *)(sub_100010218(&qword_1008018B8) + 48);
  uint64_t v57 = v63;
  *(void *)uint64_t v56 = v63;
  *(void *)(v56 + 8) = v47;
  *(void *)(v56 + 16) = v48;
  *(void *)(v56 + 24) = v49;
  *(void *)(v56 + 32) = v50;
  *(void *)(v56 + 40) = v51;
  *(unsigned char *)(v56 + 48) = v52;
  sub_1001AF11C(v57, v47, v48, v49, v50, v51, v52);
  sub_10001457C((uint64_t)v53, &qword_1008018A8);
  sub_1001AF198(v57, v47, v48, v49, v50, v51, v52);
  return sub_10001457C((uint64_t)v54, &qword_1008018A8);
}

uint64_t sub_1001AC7BC()
{
  swift_bridgeObjectRelease();
  sub_10001457C(v0 + 32, &qword_1007F9470);
  sub_10001457C(v0+ OBJC_IVAR____TtCFFZFV7Journal117_s7Journal0024RecordingViewswift_ynAHffMX307_0_33_104DA14A1B51E0439F4AC926246DCE3ALl7PreviewfMf_15PreviewRegistryfMu_11makePreviewFzT_V21DeveloperToolsSupport7PreviewU_FY_T_P7SwiftUI4View_U_FT_PS4__L_22MockPlaybackController_currentURL, (uint64_t *)&unk_100800A60);

  return swift_deallocClassInstance();
}

uint64_t sub_1001AC840()
{
  return type metadata accessor for $s7Journal0024RecordingViewswift_ynAHffMX307_0_33_104DA14A1B51E0439F4AC926246DCE3ALl7PreviewfMf_15PreviewRegistryfMu_.MockPlaybackController(0);
}

uint64_t type metadata accessor for $s7Journal0024RecordingViewswift_ynAHffMX307_0_33_104DA14A1B51E0439F4AC926246DCE3ALl7PreviewfMf_15PreviewRegistryfMu_.MockPlaybackController(uint64_t a1)
{
  return sub_10003352C(a1, qword_1008011E0);
}

void sub_1001AC868()
{
  sub_1001AD114(319, (unint64_t *)&qword_1007F9270, (uint64_t (*)(uint64_t))&type metadata accessor for URL, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Optional);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t *sub_1001AC968(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_100010218((uint64_t *)&unk_100801A50);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    uint64_t v10 = (char *)v4 + v8;
    uint64_t v11 = (char *)a2 + v8;
    *uint64_t v10 = *v11;
    *((void *)v10 + 1) = *((void *)v11 + 1);
    char v12 = (char *)v4 + v9;
    uint64_t v13 = (char *)a2 + v9;
    char *v12 = *v13;
    *((void *)v12 + 1) = *((void *)v13 + 1);
    uint64_t v14 = a3[7];
    uint64_t v15 = (char *)v4 + v14;
    uint64_t v16 = (char *)a2 + v14;
    *uint64_t v15 = *v16;
    *((void *)v15 + 1) = *((void *)v16 + 1);
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1001ACA8C(uint64_t a1)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_100801A50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t sub_1001ACB28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100010218((uint64_t *)&unk_100801A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = a1 + v7;
  uint64_t v10 = a2 + v7;
  *(unsigned char *)uint64_t v9 = *(unsigned char *)v10;
  *(void *)(v9 + 8) = *(void *)(v10 + 8);
  uint64_t v11 = a1 + v8;
  uint64_t v12 = a2 + v8;
  *(unsigned char *)uint64_t v11 = *(unsigned char *)v12;
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1001ACC00(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100010218((uint64_t *)&unk_100801A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_retain();
  swift_release();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(unsigned char *)uint64_t v11 = *(unsigned char *)v12;
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_retain();
  swift_release();
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1001ACCF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100010218((uint64_t *)&unk_100801A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1001ACD8C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_100010218((uint64_t *)&unk_100801A50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(unsigned char *)uint64_t v8 = *(unsigned char *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_release();
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  *(unsigned char *)uint64_t v11 = *(unsigned char *)v12;
  *(void *)(v11 + 8) = *(void *)(v12 + 8);
  swift_release();
  uint64_t v13 = a3[7];
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  *(unsigned char *)uint64_t v14 = *(unsigned char *)v15;
  *(void *)(v14 + 8) = *(void *)(v15 + 8);
  swift_release();
  return a1;
}

uint64_t sub_1001ACE6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001ACE80);
}

uint64_t sub_1001ACE80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218((uint64_t *)&unk_100801A50);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1001ACF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001ACF68);
}

uint64_t sub_1001ACF68(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100010218((uint64_t *)&unk_100801A50);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

uint64_t type metadata accessor for RecordingView(uint64_t a1)
{
  return sub_10003352C(a1, (uint64_t *)&unk_100801448);
}

void sub_1001AD04C()
{
  sub_1001AD114(319, (unint64_t *)&unk_100801458, (uint64_t (*)(uint64_t))type metadata accessor for RecordingViewModel, (uint64_t (*)(uint64_t, uint64_t))&type metadata accessor for Bindable);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1001AD114(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1001AD178()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001AD194()
{
  return *(unsigned __int8 *)(v0 + 16);
}

BOOL sub_1001AD19C()
{
  return (*(unsigned char *)(v0 + 16) & 1) == 0;
}

double sub_1001AD1AC()
{
  return *(double *)(v0 + 72);
}

uint64_t sub_1001AD1B4()
{
  return *(unsigned __int8 *)(v0 + 17);
}

float sub_1001AD1BC()
{
  return *(float *)(v0 + 88);
}

void sub_1001AD1C4(float a1)
{
  *(float *)(v1 + 88) = a1;
}

uint64_t sub_1001AD1CC@<X0>(uint64_t a1@<X8>)
{
  return sub_10001B220(v1+ OBJC_IVAR____TtCFFZFV7Journal117_s7Journal0024RecordingViewswift_ynAHffMX307_0_33_104DA14A1B51E0439F4AC926246DCE3ALl7PreviewfMf_15PreviewRegistryfMu_11makePreviewFzT_V21DeveloperToolsSupport7PreviewU_FY_T_P7SwiftUI4View_U_FT_PS4__L_22MockPlaybackController_currentURL, a1, (uint64_t *)&unk_100800A60);
}

uint64_t sub_1001AD1FC@<X0>(uint64_t a1@<X8>)
{
  swift_beginAccess();
  return sub_10001B220(v1 + 32, a1, &qword_1007F9470);
}

uint64_t sub_1001AD250()
{
  return swift_bridgeObjectRetain();
}

double sub_1001AD25C()
{
  return *(double *)(*(void *)v0 + 80);
}

double sub_1001AD268()
{
  return *(double *)(*v0
                   + OBJC_IVAR____TtCFFZFV7Journal117_s7Journal0024RecordingViewswift_ynAHffMX307_0_33_104DA14A1B51E0439F4AC926246DCE3ALl7PreviewfMf_15PreviewRegistryfMu_11makePreviewFzT_V21DeveloperToolsSupport7PreviewU_FY_T_P7SwiftUI4View_U_FT_PS4__L_22MockPlaybackController_audioIntensitiesPerSecond);
}

double sub_1001AD27C()
{
  return *(double *)(*(void *)v0 + 96);
}

uint64_t sub_1001AD288(uint64_t a1)
{
  uint64_t result = sub_1001AD364(&qword_100801490, (void (*)(uint64_t))type metadata accessor for $s7Journal0024RecordingViewswift_ynAHffMX307_0_33_104DA14A1B51E0439F4AC926246DCE3ALl7PreviewfMf_15PreviewRegistryfMu_.MockPlaybackController);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001AD2E0(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1001AD364(&qword_100801498, (void (*)(uint64_t))type metadata accessor for $s7Journal0024RecordingViewswift_ynAHffMX307_0_33_104DA14A1B51E0439F4AC926246DCE3ALl7PreviewfMf_15PreviewRegistryfMu_.MockPlaybackController);
  uint64_t result = sub_1001AD364(&qword_1008014A0, (void (*)(uint64_t))type metadata accessor for $s7Journal0024RecordingViewswift_ynAHffMX307_0_33_104DA14A1B51E0439F4AC926246DCE3ALl7PreviewfMf_15PreviewRegistryfMu_.MockPlaybackController);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1001AD364(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001AD3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RecordingView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001AD414()
{
  return sub_1001AEE08((void (*)(uint64_t))sub_1003D2EC8);
}

uint64_t sub_1001AD430()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for RecordingView(0) - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = sub_100010218((uint64_t *)&unk_100801A50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001AD548()
{
  type metadata accessor for RecordingView(0);

  return sub_1001A6A14();
}

unint64_t sub_1001AD5B8()
{
  unint64_t result = qword_1008014C8;
  if (!qword_1008014C8)
  {
    sub_100014440(&qword_1008014B8);
    sub_1001AD658();
    sub_100014488(&qword_1008014E0, &qword_1008014E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008014C8);
  }
  return result;
}

unint64_t sub_1001AD658()
{
  unint64_t result = qword_1008014D0;
  if (!qword_1008014D0)
  {
    sub_100014440(&qword_1008014B0);
    sub_100014488(&qword_1008014D8, &qword_1008014A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008014D0);
  }
  return result;
}

unint64_t sub_1001AD6F8()
{
  unint64_t result = qword_100801560;
  if (!qword_100801560)
  {
    sub_100014440(&qword_100801550);
    sub_1001AD774();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801560);
  }
  return result;
}

unint64_t sub_1001AD774()
{
  unint64_t result = qword_100801568;
  if (!qword_100801568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801568);
  }
  return result;
}

uint64_t sub_1001AD7C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001AD830@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1001AD364((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 81);
  return result;
}

uint64_t sub_1001AD8D8()
{
  return swift_release();
}

uint64_t sub_1001AD9A8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1001AD364((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + 96);
  *(void *)a2 = *(void *)(v3 + 88);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1001ADA58()
{
  return swift_release();
}

uint64_t sub_1001ADB2C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1001ADB5C()
{
  return EnvironmentValues.isEnabled.setter();
}

double sub_1001ADB84@<D0>(double *a1@<X8>)
{
  sub_1001AF2BC();
  EnvironmentValues.subscript.getter();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1001ADBD4()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_1001ADC20()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_1001ADC44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AE7C4(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ContentTransition, (uint64_t (*)(char *))&EnvironmentValues.contentTransition.setter);
}

uint64_t sub_1001ADC70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001ADC9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.tintColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001ADCC8()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t sub_1001ADCF4()
{
  return EnvironmentValues.tintColor.setter();
}

uint64_t sub_1001ADD20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001ADD4C()
{
  return EnvironmentValues.font.setter();
}

unsigned char *sub_1001ADD78(unsigned char *result, char a2)
{
  *result &= a2 ^ 1;
  return result;
}

uint64_t sub_1001ADD8C()
{
  return swift_deallocObject();
}

unsigned char *sub_1001ADD9C(unsigned char *result)
{
  *result &= ~*(unsigned char *)(v1 + 16) & 1;
  return result;
}

unint64_t sub_1001ADDB4()
{
  unint64_t result = qword_1008015C8;
  if (!qword_1008015C8)
  {
    sub_100014440(&qword_1008015B0);
    sub_1001ADE54();
    sub_100014488((unint64_t *)&qword_1007FCBC0, &qword_1007FCBC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008015C8);
  }
  return result;
}

unint64_t sub_1001ADE54()
{
  unint64_t result = qword_1008015D0;
  if (!qword_1008015D0)
  {
    sub_100014440(&qword_1008015A8);
    sub_100014440(&qword_100801598);
    sub_100014488(&qword_1008015C0, &qword_100801598);
    swift_getOpaqueTypeConformance2();
    sub_100014488(&qword_1007F9628, &qword_1007F9630);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008015D0);
  }
  return result;
}

unint64_t sub_1001ADF54()
{
  unint64_t result = qword_100801610;
  if (!qword_100801610)
  {
    sub_100014440(&qword_1008015E0);
    sub_100014488(&qword_100801618, &qword_1008015D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801610);
  }
  return result;
}

uint64_t sub_1001ADFF4()
{
  return EnvironmentValues.layoutDirection.getter();
}

uint64_t sub_1001AE018(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AE7C4(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for LayoutDirection, (uint64_t (*)(char *))&EnvironmentValues.layoutDirection.setter);
}

uint64_t sub_1001AE060@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A73CC(*(unsigned char *)(v1 + 16), a1);
}

unint64_t sub_1001AE068()
{
  unint64_t result = qword_100801660;
  if (!qword_100801660)
  {
    sub_100014440(&qword_100801658);
    sub_100014440(&qword_100801668);
    sub_1001AED48(&qword_100801670, &qword_100801668, &qword_1007F9638, &qword_1007F9640);
    swift_getOpaqueTypeConformance2();
    sub_100014488(&qword_100801678, &qword_100801680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801660);
  }
  return result;
}

unint64_t sub_1001AE164()
{
  unint64_t result = qword_100801688;
  if (!qword_100801688)
  {
    sub_100014440(&qword_100801648);
    sub_100014488(&qword_100801690, &qword_100801640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801688);
  }
  return result;
}

uint64_t sub_1001AE208()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for RecordingView(0) - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = sub_100010218((uint64_t *)&unk_100801A50);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001AE324()
{
  uint64_t v1 = *(void *)(type metadata accessor for RecordingView(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  char v3 = *(unsigned char *)(v0 + v2 + *(void *)(v1 + 64));

  return sub_1001A71A8(v0 + v2, v3);
}

uint64_t sub_1001AE3AC()
{
  return sub_1001AE3C4((uint64_t (*)(uint64_t))sub_1001A7960);
}

uint64_t sub_1001AE3C4(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for RecordingView(0) - 8);
  uint64_t v3 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3);
}

uint64_t sub_1001AE438@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A7AA8(a1);
}

unint64_t sub_1001AE440()
{
  unint64_t result = qword_1008016B8;
  if (!qword_1008016B8)
  {
    sub_100014440(&qword_1008016B0);
    sub_1001AE4E0();
    sub_100014488(&qword_100800698, &qword_100800618);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008016B8);
  }
  return result;
}

unint64_t sub_1001AE4E0()
{
  unint64_t result = qword_1008016C0;
  if (!qword_1008016C0)
  {
    sub_100014440(&qword_1008016C8);
    sub_1001AED48(&qword_100801670, &qword_100801668, &qword_1007F9638, &qword_1007F9640);
    sub_100014488(&qword_100801678, &qword_100801680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008016C0);
  }
  return result;
}

unint64_t sub_1001AE5A0()
{
  unint64_t result = qword_1008016D0;
  if (!qword_1008016D0)
  {
    sub_100014440(&qword_1008016A8);
    sub_100014488(&qword_1008016D8, &qword_1008016A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008016D0);
  }
  return result;
}

uint64_t sub_1001AE640@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.font.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001AE66C()
{
  return EnvironmentValues.font.setter();
}

uint64_t sub_1001AE698@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1001AE6CC()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_1001AE6FC@<X0>(void *a1@<X8>)
{
  uint64_t result = EnvironmentValues.minimumScaleFactor.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001AE728()
{
  return EnvironmentValues.minimumScaleFactor.setter();
}

uint64_t sub_1001AE750()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1001AE774()
{
  return EnvironmentValues.imageScale.getter();
}

uint64_t sub_1001AE798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AE7C4(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for Image.Scale, (uint64_t (*)(char *))&EnvironmentValues.imageScale.setter);
}

uint64_t sub_1001AE7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void), uint64_t (*a6)(char *))
{
  a5(0);
  __chkstk_darwin();
  uint64_t v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t))(v10 + 16))((char *)&v12 - v8, a1);
  return a6(v9);
}

uint64_t sub_1001AE894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AE7C4(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for Image.Scale, (uint64_t (*)(char *))&EnvironmentValues.imageScale.setter);
}

uint64_t sub_1001AE8D4()
{
  return EnvironmentValues.contentTransition.getter();
}

uint64_t sub_1001AE8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AE7C4(a1, a2, a3, a4, (void (*)(void))&type metadata accessor for ContentTransition, (uint64_t (*)(char *))&EnvironmentValues.contentTransition.setter);
}

uint64_t sub_1001AE948()
{
  return sub_1003D52F4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1001AE968@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A9414(*(void *)(v1 + 16), a1);
}

uint64_t sub_1001AE970@<X0>(uint64_t a1@<X8>)
{
  return sub_1001A98DC(a1);
}

uint64_t sub_1001AE980()
{
  return sub_1003D6668(*(void *)(v0 + 16), *(float *)(v0 + 24));
}

uint64_t sub_1001AE9A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = EnvironmentValues.lineLimit.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1001AE9D4()
{
  return EnvironmentValues.lineLimit.setter();
}

uint64_t sub_1001AEA04@<X0>(void *a1@<X8>)
{
  uint64_t result = EnvironmentValues.minimumScaleFactor.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001AEA30()
{
  return EnvironmentValues.minimumScaleFactor.setter();
}

uint64_t sub_1001AEA58()
{
  return sub_1001A975C();
}

unint64_t sub_1001AEA60()
{
  unint64_t result = qword_100801718;
  if (!qword_100801718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801718);
  }
  return result;
}

unint64_t sub_1001AEAB4()
{
  unint64_t result = qword_100801720;
  if (!qword_100801720)
  {
    sub_100014440(&qword_100801710);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801720);
  }
  return result;
}

unint64_t sub_1001AEB20()
{
  unint64_t result = qword_100801738;
  if (!qword_100801738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801738);
  }
  return result;
}

unint64_t sub_1001AEB74()
{
  unint64_t result = qword_100801778;
  if (!qword_100801778)
  {
    sub_100014440(&qword_100801760);
    sub_100014488(&qword_100801780, &qword_100801758);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801778);
  }
  return result;
}

uint64_t sub_1001AEC14(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001AEC7C()
{
  return sub_1003D50D4(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1001AEC9C()
{
  return sub_1001AA390();
}

uint64_t sub_1001AECA4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001AA4A8(*(void *)(v1 + 16), a1);
}

unint64_t sub_1001AECAC()
{
  unint64_t result = qword_100801808;
  if (!qword_100801808)
  {
    sub_100014440(&qword_100801800);
    sub_1001AED48(&qword_100801810, &qword_100801818, &qword_100801678, &qword_100801680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801808);
  }
  return result;
}

uint64_t sub_1001AED48(unint64_t *a1, uint64_t *a2, unint64_t *a3, uint64_t *a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(a2);
    sub_100014488(a3, a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001AEDF0()
{
  return sub_1001AEE08((void (*)(uint64_t))RecordingViewModel.didTapDoneButton());
}

uint64_t sub_1001AEE08(void (*a1)(uint64_t))
{
  uint64_t v3 = *(void *)(type metadata accessor for RecordingView(0) - 8);
  return sub_1001A6F84(v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_1001AEE6C()
{
  return swift_deallocObject();
}

uint64_t sub_1001AEE80()
{
  return sub_1001AE3C4((uint64_t (*)(uint64_t))sub_1001ABF54);
}

uint64_t sub_1001AEE98@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = EnvironmentValues.isEnabled.getter();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1001AEEC8()
{
  return EnvironmentValues.isEnabled.setter();
}

uint64_t sub_1001AEEF0@<X0>(unsigned char *a1@<X8>)
{
  return sub_1001AEFB4((void (*)(void))sub_1001AEF40, a1);
}

uint64_t sub_1001AEF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AF030(a1, a2, a3, a4, (void (*)(void))sub_1001AEF40);
}

uint64_t sub_1001AEF30()
{
  return swift_deallocObject();
}

unint64_t sub_1001AEF40()
{
  unint64_t result = qword_100801890;
  if (!qword_100801890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801890);
  }
  return result;
}

uint64_t sub_1001AEF94@<X0>(unsigned char *a1@<X8>)
{
  return sub_1001AEFB4((void (*)(void))sub_1001AF310, a1);
}

uint64_t sub_1001AEFB4@<X0>(void (*a1)(void)@<X3>, unsigned char *a2@<X8>)
{
  a1();
  uint64_t result = EnvironmentValues.subscript.getter();
  *a2 = v4;
  return result;
}

uint64_t sub_1001AF010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1001AF030(a1, a2, a3, a4, (void (*)(void))sub_1001AF310);
}

uint64_t sub_1001AF030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(void))
{
  return EnvironmentValues.subscript.setter();
}

double sub_1001AF080@<D0>(double *a1@<X8>)
{
  sub_1001AF2BC();
  EnvironmentValues.subscript.getter();
  double result = v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1001AF0D0()
{
  return EnvironmentValues.subscript.setter();
}

uint64_t sub_1001AF11C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 != 255) {
    return sub_1001AF134(result, a2, a3, a4, a5, a6, a7 & 1);
  }
  return result;
}

uint64_t sub_1001AF134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    swift_retain();
    swift_retain();
    swift_retain();
    return swift_retain();
  }
  return result;
}

uint64_t sub_1001AF198(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 != 255) {
    return sub_1001AF1B0(result, a2, a3, a4, a5, a6, a7 & 1);
  }
  return result;
}

uint64_t sub_1001AF1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  if (a7)
  {
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_1001AF214()
{
  unint64_t result = qword_1008018C0;
  if (!qword_1008018C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008018C0);
  }
  return result;
}

unint64_t sub_1001AF268()
{
  unint64_t result = qword_1008018C8;
  if (!qword_1008018C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008018C8);
  }
  return result;
}

unint64_t sub_1001AF2BC()
{
  unint64_t result = qword_1008018D0;
  if (!qword_1008018D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008018D0);
  }
  return result;
}

unint64_t sub_1001AF310()
{
  unint64_t result = qword_1008018D8;
  if (!qword_1008018D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008018D8);
  }
  return result;
}

uint64_t sub_1001AF36C()
{
  return sub_1003D53A0(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_1001AF38C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001AF430(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001AF4B4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy();
  uint64_t v36 = *(void *)(v4 - 8);
  uint64_t v37 = v4;
  __chkstk_darwin(v4);
  double v31 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy();
  uint64_t v34 = *(void *)(v6 - 8);
  uint64_t v35 = v6;
  __chkstk_darwin(v6);
  unsigned __int8 v30 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth();
  uint64_t v32 = *(void *)(v8 - 8);
  uint64_t v33 = v8;
  __chkstk_darwin(v8);
  uint64_t v28 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for Duration.TimeFormatStyle.Pattern();
  uint64_t v14 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v27 = a2;
  *a2 = a1;
  uint64_t v17 = type metadata accessor for TimecodeView();
  char v26 = (char *)a2 + *(int *)(v17 + 20);
  uint64_t v18 = enum case for FloatingPointRoundingRule.toNearestOrEven(_:);
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  v19(v13, enum case for FloatingPointRoundingRule.toNearestOrEven(_:), v10);
  static Duration.TimeFormatStyle.Pattern.minuteSecond(padMinuteToLength:fractionalSecondsLength:roundFractionalSeconds:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v11 + 8);
  v20(v13, v10);
  static FormatStyle<>.time(pattern:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v29);
  uint64_t v21 = v28;
  uint64_t v29 = (uint64_t)v27 + *(int *)(v17 + 24);
  static Duration.UnitsFormatStyle.UnitWidth.wide.getter();
  v19(v13, v18, v10);
  uint64_t v22 = v30;
  static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.show(length:rounded:increment:)();
  v20(v13, v10);
  sub_100010218(&qword_100801910);
  type metadata accessor for Duration.UnitsFormatStyle.Unit();
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1006D7C30;
  static Duration.UnitsFormatStyle.Unit.hours.getter();
  static Duration.UnitsFormatStyle.Unit.minutes.getter();
  static Duration.UnitsFormatStyle.Unit.seconds.getter();
  sub_1001B05CC(v23);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v24 = v31;
  static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter();
  static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v36 + 8))(v24, v37);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v22, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v21, v33);
}

uint64_t type metadata accessor for TimecodeView()
{
  uint64_t result = qword_100801970;
  if (!qword_100801970) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001AFA08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v2 = type metadata accessor for TimecodeView();
  uint64_t v22 = *(void *)(v2 - 8);
  uint64_t v3 = *(void *)(v22 + 64);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = type metadata accessor for AnimationTimelineSchedule();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v23 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - v8;
  uint64_t v10 = sub_100010218(&qword_1008019B0);
  uint64_t v24 = *(void *)(v10 - 8);
  uint64_t v25 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)v1;
  uint64_t v14 = *v1;
  swift_getKeyPath();
  uint64_t v27 = v14;
  sub_1001B155C((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v15 = *(void *)(v14 + 16);
  if (v15)
  {
    uint64_t v16 = *(void *)(v14 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v27 = v15;
    (*(void (**)(uint64_t))(*(void *)(v16 + 8) + 8))(ObjectType);
  }
  AnimationTimelineSchedule.init(minimumInterval:paused:)();
  sub_1001B11E4(v13, (uint64_t)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v18 = (*(unsigned __int8 *)(v22 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v19 = swift_allocObject();
  sub_1001B137C((uint64_t)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), v19 + v18);
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v23, v9, v4);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_1001B13E0;
  *(void *)(v20 + 24) = v19;
  sub_100010218(&qword_1008019B8);
  sub_1001B155C(&qword_1008019C0, (void (*)(uint64_t))&type metadata accessor for AnimationTimelineSchedule);
  sub_1001B14A0();
  TimelineView<>.init(_:content:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v9, v4);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v26, v12, v25);
}

uint64_t sub_1001AFDEC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v58 = a2;
  uint64_t v59 = type metadata accessor for AccessibilityTraits();
  uint64_t v57 = *(void *)(v59 - 8);
  __chkstk_darwin(v59);
  uint64_t v56 = (char *)&v45 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for Duration.UnitsFormatStyle();
  uint64_t v50 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v51 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Duration.TimeFormatStyle();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_100010218(&qword_1008019B8);
  __chkstk_darwin(v53);
  uint64_t v49 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unsigned __int8 v52 = (char *)&v45 - v11;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010218(&qword_1008019D0);
  TimelineView.Context.date.getter();
  sub_1003D56AC((uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  uint64_t v48 = static Duration.seconds(_:)();
  uint64_t v61 = v48;
  uint64_t v62 = v16;
  uint64_t v47 = v16;
  uint64_t v46 = type metadata accessor for TimecodeView();
  uint64_t v17 = *(int *)(v46 + 20);
  uint64_t v55 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1 + v17, v5);
  sub_1001B155C((unint64_t *)&qword_1008019E0, (void (*)(uint64_t))&type metadata accessor for Duration.TimeFormatStyle);
  uint64_t v18 = Text.init<A>(_:format:)();
  uint64_t v20 = v19;
  char v22 = v21 & 1;
  static Font.largeTitle.getter();
  Font.bold()();
  swift_release();
  uint64_t v23 = Text.font(_:)();
  uint64_t v25 = v24;
  LOBYTE(v5) = v26;
  swift_release();
  sub_10002B8D0(v18, v20, v22);
  swift_bridgeObjectRelease();
  uint64_t v27 = Text.monospacedDigit()();
  uint64_t v29 = v28;
  char v31 = v30;
  uint64_t v33 = v32;
  sub_10002B8D0(v23, v25, v5 & 1);
  swift_bridgeObjectRelease();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v35 = swift_getKeyPath();
  uint64_t v61 = v27;
  uint64_t v62 = v29;
  char v63 = v31 & 1;
  uint64_t v64 = v33;
  uint64_t v65 = KeyPath;
  uint64_t v66 = 1;
  char v67 = 0;
  uint64_t v68 = v35;
  uint64_t v69 = 0x3FEC28F5C28F5C29;
  if (qword_1007F7A18 != -1) {
    swift_once();
  }
  long long v60 = xmmword_10083E5D8;
  sub_100010218(&qword_100800660);
  sub_10017A9C4();
  sub_100014344();
  uint64_t v36 = (uint64_t)v49;
  View.accessibilityLabel<A>(_:)();
  sub_10002B8D0(v27, v29, v31 & 1);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v61 = v48;
  uint64_t v62 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v50 + 16))(v51, v55 + *(int *)(v46 + 24), v54);
  sub_1001B155C(&qword_1008019E8, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle);
  uint64_t v37 = Text.init<A>(_:format:)();
  uint64_t v39 = v38;
  char v41 = v40 & 1;
  uint64_t v42 = (uint64_t)v52;
  ModifiedContent<>.accessibilityValue(_:)();
  sub_10002B8D0(v37, v39, v41);
  swift_bridgeObjectRelease();
  sub_1001B15A4(v36);
  uint64_t v43 = v56;
  static AccessibilityTraits.updatesFrequently.getter();
  ModifiedContent<>.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v43, v59);
  return sub_1001B15A4(v42);
}

uint64_t sub_1001B0494(uint64_t a1, void (*a2)(char *))
{
  uint64_t v4 = sub_100010218(&qword_1008019D0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = sub_100010218(&qword_1008019D8);
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t result = v7 - 8;
  if (*(void *)(v9 + 64) == v6)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
    a2((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))((char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void *sub_1001B05CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Duration.UnitsFormatStyle.Unit();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100010218(&qword_1007FDD78);
    uint64_t v9 = static _SetStorage.allocate(capacity:)();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v33 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = v8;
    uint64_t v32 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v13 * v10, v2);
      sub_1001B155C(&qword_1007FDD80, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle.Unit);
      uint64_t v15 = dispatch thunk of Hashable._rawHashValue(seed:)();
      uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v17 = v15 & ~v16;
      unint64_t v18 = v17 >> 6;
      uint64_t v19 = *(void *)(v36 + 8 * (v17 >> 6));
      uint64_t v20 = 1 << v17;
      if (((1 << v17) & v19) != 0)
      {
        uint64_t v21 = ~v16;
        do
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v17 * v13, v2);
          sub_1001B155C(&qword_1007FDD88, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle.Unit);
          char v23 = dispatch thunk of static Equatable.== infix(_:_:)();
          uint64_t v24 = *v14;
          (*v14)(v5, v2);
          if (v23)
          {
            v24(v37, v2);
            uint64_t v11 = v22;
            uint64_t v8 = v31;
            goto LABEL_4;
          }
          unint64_t v17 = (v17 + 1) & v21;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)(v36 + 8 * (v17 >> 6));
          uint64_t v20 = 1 << v17;
          uint64_t v11 = v22;
        }
        while ((v19 & (1 << v17)) != 0);
        uint64_t v8 = v31;
      }
      uint64_t v25 = v37;
      *(void *)(v36 + 8 * v18) = v20 | v19;
      uint64_t result = (void *)(*v32)(*(void *)(v9 + 48) + v17 * v13, v25, v2);
      uint64_t v27 = *(void *)(v9 + 16);
      BOOL v28 = __OFADD__(v27, 1);
      uint64_t v29 = v27 + 1;
      if (v28) {
        break;
      }
      *(void *)(v9 + 16) = v29;
LABEL_4:
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v8) {
        return (void *)v9;
      }
    }
    __break(1u);
  }
  else
  {
    return &_swiftEmptySetSingleton;
  }
  return result;
}

uint64_t *sub_1001B08E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Duration.TimeFormatStyle();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_retain();
    v12(v9, v10, v11);
    uint64_t v13 = *(int *)(a3 + 24);
    uint64_t v14 = (char *)v7 + v13;
    uint64_t v15 = (char *)a2 + v13;
    uint64_t v16 = type metadata accessor for Duration.UnitsFormatStyle();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  }
  return v7;
}

uint64_t sub_1001B0A24(uint64_t a1, uint64_t a2)
{
  swift_release();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for Duration.TimeFormatStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for Duration.UnitsFormatStyle();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void *sub_1001B0AE4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Duration.TimeFormatStyle();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16);
  swift_retain();
  v10(v7, v8, v9);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for Duration.UnitsFormatStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
  return a1;
}

void *sub_1001B0BD4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Duration.TimeFormatStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Duration.UnitsFormatStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

void *sub_1001B0CB8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Duration.TimeFormatStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Duration.UnitsFormatStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void *sub_1001B0D8C(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  swift_release();
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Duration.TimeFormatStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 40))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for Duration.UnitsFormatStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_1001B0E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B0E7C);
}

uint64_t sub_1001B0E7C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Duration.TimeFormatStyle();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Duration.UnitsFormatStyle();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1001B0FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B0FBC);
}

void *sub_1001B0FBC(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for Duration.TimeFormatStyle();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Duration.UnitsFormatStyle();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_1001B10E8()
{
  uint64_t result = type metadata accessor for Duration.TimeFormatStyle();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for Duration.UnitsFormatStyle();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001B11C0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001B11E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimecodeView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B1248()
{
  unint64_t v1 = (int *)(type metadata accessor for TimecodeView() - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  swift_release();
  uint64_t v3 = v2 + v1[7];
  uint64_t v4 = type metadata accessor for Duration.TimeFormatStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v2 + v1[8];
  uint64_t v6 = type metadata accessor for Duration.UnitsFormatStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocObject();
}

uint64_t sub_1001B137C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TimecodeView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B13E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(type metadata accessor for TimecodeView() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1001AFDEC(v4, a1);
}

uint64_t sub_1001B1460()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001B1498(uint64_t a1)
{
  return sub_1001B0494(a1, *(void (**)(char *))(v1 + 16));
}

unint64_t sub_1001B14A0()
{
  unint64_t result = qword_1008019C8;
  if (!qword_1008019C8)
  {
    sub_100014440(&qword_1008019B8);
    sub_10017A9C4();
    sub_1001B155C((unint64_t *)&qword_1007F96A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008019C8);
  }
  return result;
}

uint64_t sub_1001B155C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001B15A4(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1008019B8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001B1608()
{
  unint64_t result = qword_1008019F0;
  if (!qword_1008019F0)
  {
    sub_100014440(&qword_1008019B0);
    sub_1001B14A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008019F0);
  }
  return result;
}

BOOL sub_1001B1814()
{
  uint64_t v0 = type metadata accessor for RecordingView(0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of UIHostingController.rootView.getter();
  sub_100010218((uint64_t *)&unk_100801A50);
  Bindable.wrappedValue.getter();
  uint64_t v3 = v11[0];
  sub_1001B42E4((uint64_t)v2);
  int v4 = *(unsigned __int8 *)(v3 + 80);
  swift_release();
  if (v4 == 1)
  {
    dispatch thunk of UIHostingController.rootView.getter();
    Bindable.wrappedValue.getter();
    sub_1001B42E4((uint64_t)v2);
    sub_1003D53B0((uint64_t)&v9);
    swift_release();
    if (v10)
    {
      sub_10001B3BC(&v9, (uint64_t)v11);
      uint64_t v5 = v12;
      uint64_t v6 = v13;
      sub_10002E0BC(v11, v12);
      BOOL v7 = !sub_100185480(v5, v6);
      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v11);
    }
    else
    {
      sub_1001B4990((uint64_t)&v9);
      return 1;
    }
  }
  else
  {
    return 0;
  }
  return v7;
}

void sub_1001B1978()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
  uint64_t v3 = v0[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
  v0[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType] = 5;
  uint64_t v4 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
  if (v0[OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated] == 1)
  {
    switch(v3)
    {
      case 5:
        swift_bridgeObjectRelease();
        break;
      default:
        char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v5 & 1) == 0) {
          goto LABEL_4;
        }
        break;
    }
  }
  else
  {
LABEL_4:
    v0[v4] = 1;
  }
  uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_hostingController];
  id v7 = [v6 view];
  if (!v7)
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = v7;
  [v1 addSubview:v7];

  uint64_t v9 = OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView;
  [v1 addSubview:*(void *)&v1[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView]];
  id v10 = [v6 view];
  if (!v10)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v11 = v10;
  id v12 = [self clearColor];
  [v11 setBackgroundColor:v12];

  id v13 = [v6 view];
  if (!v13)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v14 = v13;
  [v13 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v15 = [v6 view];
  if (!v15)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  uint64_t v16 = v15;
  sub_1001DCF60(0.0);

  swift_bridgeObjectRelease();
  unint64_t v17 = *(void **)&v1[v9];
  unint64_t v18 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v17) + 0x58);
  uint64_t v19 = v1[v2];
  uint64_t v20 = v17;
  v18(5, v19);

  id v21 = *(id *)&v1[v9];
  sub_1001DCF60(0.0);

  swift_bridgeObjectRelease();
  BOOL v22 = sub_1001B1814();
  [*(id *)&v1[v9] setHidden:!v22];
  id v23 = [v6 view];
  if (!v23)
  {
LABEL_21:
    __break(1u);
    JUMPOUT(0x1001B1D18);
  }
  uint64_t v24 = v23;
  [v23 setHidden:v22];

  char v25 = v1[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading];
  v1[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading] = 1;
  if ((v25 & 1) == 0 && swift_unknownObjectWeakLoadStrong())
  {
    sub_100491AF4();
    swift_unknownObjectRelease();
  }
}

uint64_t sub_1001B1D30()
{
  uint64_t v0 = type metadata accessor for RecordingView(0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v5[-1] - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of UIHostingController.rootView.getter();
  sub_100010218((uint64_t *)&unk_100801A50);
  Bindable.wrappedValue.getter();
  sub_1001B42E4((uint64_t)v2);
  sub_1003D53B0((uint64_t)v5);
  swift_release();
  if (v5[3])
  {
    sub_100010218(&qword_100801A60);
    _s10AudioAssetCMa(0);
    if (swift_dynamicCast()) {
      return v4;
    }
  }
  else
  {
    sub_1001B4990((uint64_t)v5);
  }
  return 0;
}

id sub_1001B1E30()
{
  id result = [objc_allocWithZone((Class)UICubicTimingParameters) initWithControlPoint1:0.25 controlPoint2:0.0];
  qword_10083D020 = (uint64_t)result;
  return result;
}

void sub_1001B1E74()
{
  *(void *)&xmmword_10083D030 = AudioRecordingActivityState.hash(into:)(4.0, 4.0);
  *((void *)&xmmword_10083D030 + 1) = v0;
  qword_10083D040 = xmmword_10083D030;
  unk_10083D048 = v0;
  *(void *)&xmmword_10083D050 = xmmword_10083D030;
  *((void *)&xmmword_10083D050 + 1) = v0;
  qword_10083D060 = xmmword_10083D030;
  unk_10083D068 = v0;
}

void sub_1001B1EAC(void *a1, void *a2, double a3, double a4, double a5, double a6)
{
  id v7 = v6;
  uint64_t v14 = type metadata accessor for ColorResource();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v115 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  [v7 setFrame:a3, a4, a5, a6];
  if (!a1) {
    return;
  }
  type metadata accessor for JournalAssetView();
  unint64_t v18 = (void *)swift_dynamicCastClass();
  if (!v18) {
    return;
  }
  uint64_t v19 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v18) + 0xF8);
  id v118 = a2;
  uint64_t v20 = swift_unknownObjectRetain();
  id v21 = (void *)v19(v20);
  if (v21)
  {
    id v119 = v21;
    id v22 = [v21 snapshotViewAfterScreenUpdates:0];
    if (v22)
    {
      id v120 = v22;
      id v23 = [a1 viewControllerForKey:UITransitionContextToViewControllerKey];
      if (v23)
      {
        id v116 = v23;
        id v24 = [v23 view];
        if (v24)
        {
          char v25 = v24;
          id v26 = [objc_allocWithZone((Class)_UIPortalView) initWithSourceView:v24];

          [v26 setHidesSourceView:1];
          [v26 setAlpha:0.0];
          id v27 = [v26 layer];
          CATransform3DMakeScale(&v121, 0.5, 0.5, 1.0);
          [v27 setSublayerTransform:&v121];

          id v28 = [a1 containerView];
          [v119 bounds];
          [v28 convertRect:v119 fromCoordinateSpace:];
          double v30 = v29;
          double v32 = v31;
          double v34 = v33;
          double v36 = v35;

          id v37 = [objc_allocWithZone((Class)UIView) init];
          [v37 setFrame:v30, v32, v34, v36];
          [v37 setClipsToBounds:1];
          id v38 = [v37 layer];
          if (qword_1007F6AC0 != -1) {
            swift_once();
          }
          *(_OWORD *)&v121.m11 = xmmword_10083D030;
          *(_OWORD *)&v121.m13 = *(_OWORD *)&qword_10083D040;
          *(_OWORD *)&v121.m21 = xmmword_10083D050;
          *(_OWORD *)&v121.m23 = *(_OWORD *)&qword_10083D060;
          [v38 setCornerRadii:&v121];

          id v39 = [a1 containerView];
          id v117 = v37;
          [v39 addSubview:v37];

          id v40 = [objc_allocWithZone((Class)UIView) init];
          if ([*(id *)&v7[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView] isHidden])
          {
            sub_100088B50();
            if (qword_1007F7F28 != -1) {
              swift_once();
            }
            uint64_t v41 = sub_100026A54(v14, (uint64_t)qword_10083EE98);
            (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v41, v14);
            id v42 = (id)UIColor.init(resource:)();
          }
          else
          {
            if (qword_1007F6B28 != -1) {
              swift_once();
            }
            id v42 = (id)qword_10083D0E8;
          }
          uint64_t v45 = v42;
          uint64_t v46 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
          [v40 setBackgroundColor:v42];

          [v117 addSubview:v40];
          sub_1001DCF60(0.0);
          swift_bridgeObjectRelease();
          id v115 = v40;
          [v40 addSubview:v120];
          id v47 = [v120 superview];
          if (v47)
          {
            [v120 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v48 = [v120 topAnchor];
            id v49 = [v47 topAnchor];
            id v50 = [v48 constraintEqualToAnchor:v49];

            [v50 setConstant:0.0];
            id v51 = v50;
            uint64_t v46 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
            id v52 = v51;
            [v51 setActive:1];
          }
          id v53 = [v120 superview];
          if (v53)
          {
            uint64_t v54 = v53;
            [v120 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v55 = [v120 leadingAnchor];
            id v56 = [v54 leadingAnchor];
            id v57 = [v55 constraintEqualToAnchor:v56];

            [v57 setConstant:0.0];
            id v58 = v57;
            uint64_t v46 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
            id v59 = v58;
            [v58 setActive:1];
          }
          id v60 = [v120 superview];
          if (v60)
          {
            uint64_t v61 = v60;
            [v120 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v62 = [v120 trailingAnchor];
            id v63 = [v61 trailingAnchor];
            id v64 = [v62 constraintEqualToAnchor:v63];

            [v64 setConstant:0.0];
            id v65 = v64;
            uint64_t v46 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
            id v66 = v65;
            [v65 setActive:1];
          }
          [v119 frame];
          double v68 = v67;
          [v119 frame];
          double v70 = v68 / v69;
          id v71 = [v120 heightAnchor];
          id v72 = [v120 widthAnchor];
          id v73 = [v71 constraintEqualToAnchor:v72 multiplier:v70];

          [v73 setActive:1];
          [v117 addSubview:v26];
          id v74 = [v26 superview];
          if (v74)
          {
            uint64_t v75 = v74;
            [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v76 = [v26 topAnchor];
            id v77 = [v75 topAnchor];
            id v78 = [v76 constraintEqualToAnchor:v77];

            [v78 setConstant:0.0];
            id v79 = v78;
            uint64_t v46 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
            id v80 = v79;
            [v79 setActive:1];
          }
          id v81 = [v26 superview];
          if (v81)
          {
            uint64_t v82 = v81;
            [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v83 = [v26 leadingAnchor];
            id v84 = [v82 leadingAnchor];
            id v85 = [v83 constraintEqualToAnchor:v84];

            [v85 setConstant:0.0];
            id v86 = v85;
            uint64_t v46 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
            id v87 = v86;
            [v86 setActive:1];
          }
          id v88 = [v26 superview];
          if (v88)
          {
            uint64_t v89 = v88;
            [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v90 = [v26 trailingAnchor];
            id v91 = [v89 trailingAnchor];
            id v92 = [v90 constraintEqualToAnchor:v91];

            [v92 setConstant:0.0];
            id v93 = v92;
            uint64_t v46 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
            id v94 = v93;
            [v93 setActive:1];
          }
          id v95 = [a1 v46[387]];
          [v95 frame];
          double v97 = v96;

          id v98 = [a1 v46[387]];
          [v98 frame];
          double v100 = v99;

          id v101 = [v26 heightAnchor];
          id v102 = [v120 widthAnchor];
          id v103 = [v101 constraintEqualToAnchor:v102 multiplier:v97 / v100];

          [v103 setActive:1];
          id v104 = *(void **)&v7[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridView];
          uint64_t v105 = v115;
          *(void *)&v7[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridView] = v115;
          id v106 = v105;

          uint64_t v107 = *(void **)&v7[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridSnapshotView];
          id v108 = v120;
          *(void *)&v7[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridSnapshotView] = v120;
          id v109 = v108;

          uint64_t v110 = *(void **)&v7[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionFullScreenSnapshotView];
          *(void *)&v7[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionFullScreenSnapshotView] = v26;
          id v111 = v26;

          uint64_t v112 = *(void **)&v7[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionContainerView];
          id v113 = v117;
          *(void *)&v7[OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionContainerView] = v117;
          id v114 = v113;

          [v114 layoutIfNeeded];
          swift_unknownObjectRelease();
        }
        else
        {
          __break(1u);
        }
        return;
      }
      swift_unknownObjectRelease();

      uint64_t v43 = &v124;
    }
    else
    {
      swift_unknownObjectRelease();

      uint64_t v43 = &v123;
    }
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v43 = &v122;
  }
  uint64_t v44 = (void *)*(v43 - 32);
}

void sub_1001B2BB8(void *a1, void *a2)
{
  id v4 = [a1 containerView];
  id v5 = [v4 traitCollection];

  [v5 displayCornerRadius];
  double v7 = v6;

  id v8 = [a1 containerView];
  id v9 = [v8 traitCollection];

  [v9 displayCornerRadius];
  double v11 = v10;

  double v12 = AudioRecordingActivityState.hash(into:)(v7, v11);
  uint64_t v14 = v13;
  id v15 = [a2 layer];
  *(double *)uint64_t v16 = v12;
  v16[1] = v14;
  *(double *)&void v16[2] = v12;
  v16[3] = v14;
  *(double *)&v16[4] = v12;
  v16[5] = v14;
  *(double *)&v16[6] = v12;
  v16[7] = v14;
  [v15 setCornerRadii:v16];
}

void sub_1001B2CE8(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for ColorResource();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)&v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    return;
  }
  type metadata accessor for JournalAssetView();
  double v10 = (void *)swift_dynamicCastClass();
  if (!v10) {
    return;
  }
  double v11 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v10) + 0xF8);
  id v129 = a2;
  uint64_t v12 = swift_unknownObjectRetain();
  id v130 = (id)v11(v12);
  if (v130)
  {
    id v13 = [a1 viewControllerForKey:UITransitionContextFromViewControllerKey];
    if (v13)
    {
      id v128 = v13;
      id v14 = [v13 view];
      if (!v14)
      {
        __break(1u);
        goto LABEL_34;
      }
      id v15 = v14;
      id v16 = [v14 snapshotViewAfterScreenUpdates:0];

      if (v16)
      {
        uint64_t v126 = v3;
        id v125 = v16;
        id v17 = [v128 view];
        if (v17)
        {
          unint64_t v18 = v17;
          [v17 setHidden:1];

          id v19 = objc_allocWithZone((Class)_UIPortalView);
          id v20 = [v19 initWithSourceView:v130];
          [v20 setHidesSourceView:1];
          id v124 = v20;
          id v21 = [v20 layer];
          CATransform3DMakeScale(&v131, 2.0, 2.0, 1.0);
          [v21 setSublayerTransform:&v131];

          id v22 = [objc_allocWithZone((Class)UIView) init];
          id v23 = [a1 containerView];
          [v23 frame];
          double v25 = v24;
          double v27 = v26;
          double v29 = v28;
          double v31 = v30;

          [v22 setFrame:v25, v27, v29, v31];
          [v22 setClipsToBounds:1];
          id v32 = [a1 containerView];
          id v33 = [v32 traitCollection];

          [v33 displayCornerRadius];
          double v35 = v34;

          id v36 = [a1 containerView];
          id v37 = [v36 traitCollection];

          [v37 displayCornerRadius];
          double v39 = v38;

          CGFloat v40 = AudioRecordingActivityState.hash(into:)(v35, v39);
          CGFloat v42 = v41;
          id v43 = [v22 layer];
          v131.m11 = v40;
          v131.m12 = v42;
          v131.m13 = v40;
          v131.m14 = v42;
          v131.m21 = v40;
          v131.m22 = v42;
          v131.m23 = v40;
          v131.m24 = v42;
          [v43 setCornerRadii:&v131];

          id v44 = [a1 containerView];
          id v127 = v22;
          [v44 addSubview:v22];

          id v45 = [objc_allocWithZone((Class)UIView) init];
          [v45 setAlpha:0.0];
          if ([*(id *)(v126 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView) isHidden])
          {
            sub_100088B50();
            if (qword_1007F7F28 != -1) {
              swift_once();
            }
            uint64_t v46 = sub_100026A54(v6, (uint64_t)qword_10083EE98);
            (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v46, v6);
            id v47 = (id)UIColor.init(resource:)();
          }
          else
          {
            id v47 = [self clearColor];
          }
          id v50 = v47;
          id v51 = v125;
          id v52 = v124;
          [v45 setBackgroundColor:v47];

          [v127 addSubview:v45];
          sub_1001DCF60(0.0);
          swift_bridgeObjectRelease();
          [v45 addSubview:v52];
          id v53 = [v52 superview];
          if (v53)
          {
            uint64_t v54 = v53;
            [v52 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v55 = [v52 topAnchor];
            id v56 = [v54 topAnchor];
            id v57 = [v55 constraintEqualToAnchor:v56];

            [v57 setConstant:0.0];
            id v58 = v57;
            [v58 setActive:1];
          }
          id v59 = [v52 superview];
          if (v59)
          {
            id v60 = v59;
            [v52 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v61 = [v52 leadingAnchor];
            id v62 = [v60 leadingAnchor];
            id v63 = [v61 constraintEqualToAnchor:v62];

            [v63 setConstant:0.0];
            id v64 = v63;
            [v64 setActive:1];
          }
          id v65 = [v52 superview];
          if (v65)
          {
            id v66 = v65;
            [v52 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v67 = [v52 trailingAnchor];
            id v68 = [v66 trailingAnchor];
            id v69 = [v67 constraintEqualToAnchor:v68];

            [v69 setConstant:0.0];
            id v70 = v69;
            [v70 setActive:1];
          }
          [v130 frame];
          double v72 = v71;
          [v130 frame];
          double v74 = v72 / v73;
          id v75 = [v52 heightAnchor];
          id v76 = [v52 widthAnchor];
          id v77 = [v75 constraintEqualToAnchor:v76 multiplier:v74];

          [v77 setActive:1];
          id v78 = [objc_allocWithZone((Class)UIView) init];
          id v79 = [self effectWithStyle:9];
          id v80 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v79];
          id v81 = self;
          id v82 = v80;
          id v83 = [v81 clearColor];
          [v82 setBackgroundColor:v83];

          id v84 = v82;
          [v78 bounds];
          [v84 setFrame:];

          [v84 setAutoresizingMask:18];
          [v84 setUserInteractionEnabled:0];
          [v78 insertSubview:v84 atIndex:0];

          [v127 addSubview:v78];
          sub_1001DCF60(0.0);
          swift_bridgeObjectRelease();
          [v78 addSubview:v51];
          id v85 = [v51 superview];
          if (v85)
          {
            id v86 = v85;
            [v51 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v87 = [v51 topAnchor];
            id v88 = [v86 topAnchor];
            id v89 = [v87 constraintEqualToAnchor:v88];

            [v89 setConstant:0.0];
            id v90 = v89;
            [v90 setActive:1];
          }
          id v91 = [v51 superview];
          if (v91)
          {
            id v92 = v91;
            [v51 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v93 = [v51 leadingAnchor];
            id v94 = [v92 leadingAnchor];
            id v95 = [v93 constraintEqualToAnchor:v94];

            [v95 setConstant:0.0];
            id v96 = v95;
            [v96 setActive:1];
          }
          id v97 = [v51 superview];
          if (v97)
          {
            id v98 = v97;
            [v51 setTranslatesAutoresizingMaskIntoConstraints:0];
            id v99 = [v51 trailingAnchor];
            id v100 = [v98 trailingAnchor];
            id v101 = [v99 constraintEqualToAnchor:v100];

            [v101 setConstant:0.0];
            id v102 = v101;
            [v102 setActive:1];
          }
          id v103 = [a1 containerView];
          [v103 frame];
          double v105 = v104;

          id v106 = [a1 containerView];
          [v106 frame];
          double v108 = v107;

          id v109 = [v51 heightAnchor];
          id v110 = [v52 widthAnchor];
          id v111 = [v109 constraintEqualToAnchor:v110 multiplier:v105 / v108];

          [v111 setActive:1];
          uint64_t v112 = v51;
          uint64_t v113 = v126;
          id v114 = *(void **)(v126 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridView);
          *(void *)(v126 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridView) = v45;
          id v115 = v45;

          id v116 = *(void **)(v113 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridSnapshotView);
          *(void *)(v113 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridSnapshotView) = v52;
          id v117 = v52;

          id v118 = *(void **)(v113 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionFullScreenSnapshotView);
          *(void *)(v113 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionFullScreenSnapshotView) = v78;
          id v119 = v78;

          id v120 = *(void **)(v113 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionContainerView);
          id v121 = v127;
          *(void *)(v113 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionContainerView) = v127;
          id v122 = v121;

          [v122 layoutIfNeeded];
          swift_unknownObjectRelease();

          return;
        }
LABEL_34:
        __break(1u);
        return;
      }
      swift_unknownObjectRelease();

      id v48 = &v132;
    }
    else
    {
      swift_unknownObjectRelease();

      id v48 = &v134;
    }
  }
  else
  {
    swift_unknownObjectRelease();
    id v48 = &v133;
  }
  id v49 = (void *)*(v48 - 32);
}

void sub_1001B3B58(void *a1, void *a2)
{
  if (!a1) {
    return;
  }
  uint64_t v3 = v2;
  type metadata accessor for JournalAssetView();
  uint64_t v6 = (void *)swift_dynamicCastClass();
  if (!v6) {
    return;
  }
  uint64_t v7 = *(uint64_t (**)(uint64_t))((swift_isaMask & *v6) + 0xF8);
  id v42 = a2;
  uint64_t v8 = swift_unknownObjectRetain();
  uint64_t v9 = v7(v8);
  if (v9)
  {
    double v10 = *(void **)(v3 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionContainerView);
    id v41 = (id)v9;
    if (v10)
    {
      double v11 = *(void **)(v3 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridView);
      if (v11)
      {
        uint64_t v12 = *(void **)(v3 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionFullScreenSnapshotView);
        if (v12)
        {
          id v13 = v10;
          id v14 = v11;
          id v15 = v12;
          id v16 = [a1 containerView];
          [v41 bounds];
          [v16 convertRect:v41 fromCoordinateSpace:];
          double v18 = v17;
          double v20 = v19;
          double v22 = v21;
          double v24 = v23;

          [v13 setFrame:v18, v20, v22, v24];
          [v13 layoutIfNeeded];
          double v25 = *(void **)(v3 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridSnapshotView);
          if (v25)
          {
            id v26 = [v25 layer];
            long long v27 = *(_OWORD *)&CATransform3DIdentity.m13;
            long long aBlock = *(_OWORD *)&CATransform3DIdentity.m11;
            long long v44 = v27;
            long long v28 = *(_OWORD *)&CATransform3DIdentity.m23;
            long long v45 = *(_OWORD *)&CATransform3DIdentity.m21;
            long long v46 = v28;
            long long v29 = *(_OWORD *)&CATransform3DIdentity.m33;
            long long v47 = *(_OWORD *)&CATransform3DIdentity.m31;
            long long v48 = v29;
            long long v30 = *(_OWORD *)&CATransform3DIdentity.m43;
            long long v49 = *(_OWORD *)&CATransform3DIdentity.m41;
            long long v50 = v30;
            [v26 setSublayerTransform:&aBlock];
          }
          if (qword_1007F6AB8 != -1) {
            swift_once();
          }
          id v31 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:qword_10083D020 timingParameters:0.09];
          uint64_t v32 = swift_allocObject();
          *(void *)(v32 + 16) = v14;
          *(void *)(v32 + 24) = v15;
          *(void *)&long long v45 = sub_1001B49F0;
          *((void *)&v45 + 1) = v32;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          *(void *)&long long v44 = sub_10017D530;
          *((void *)&v44 + 1) = &unk_10079C630;
          id v33 = _Block_copy(&aBlock);
          id v40 = v14;
          id v34 = v15;
          swift_release();
          [v31 addAnimations:v33];
          _Block_release(v33);
          id v35 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:qword_10083D020 timingParameters:0.1];
          uint64_t v36 = swift_allocObject();
          *(void *)(v36 + 16) = v13;
          *(void *)&long long v45 = sub_1001B4A88;
          *((void *)&v45 + 1) = v36;
          *(void *)&long long aBlock = _NSConcreteStackBlock;
          *((void *)&aBlock + 1) = 1107296256;
          *(void *)&long long v44 = sub_10017D530;
          *((void *)&v44 + 1) = &unk_10079C680;
          id v37 = _Block_copy(&aBlock);
          id v38 = v13;
          swift_release();
          [v35 addAnimations:v37];
          _Block_release(v37);
          [v31 startAnimationAfterDelay:0.3];
          [v35 startAnimation];
          swift_unknownObjectRelease();

          return;
        }
      }
    }
    swift_unknownObjectRelease();

    double v39 = v41;
  }
  else
  {
    swift_unknownObjectRelease();
    double v39 = v42;
  }
}

void sub_1001B3FE8(void *a1)
{
  id v1 = [a1 layer];
  if (qword_1007F6AC0 != -1) {
    swift_once();
  }
  v2[0] = xmmword_10083D030;
  v2[1] = *(_OWORD *)&qword_10083D040;
  v2[2] = xmmword_10083D050;
  v2[3] = *(_OWORD *)&qword_10083D060;
  [v1 setCornerRadii:v2];
}

void sub_1001B40B4()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionContainerView);
}

id sub_1001B4124()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TranscribingAudioAssetView();
  [super dealloc];
}

uint64_t type metadata accessor for TranscribingAudioAssetView()
{
  return self;
}

uint64_t sub_1001B41F8(uint64_t a1, uint64_t a2)
{
  return sub_1001B4228(a1, a2, (void (*)(uint64_t))RecordingViewModel.play());
}

uint64_t sub_1001B4210(uint64_t a1, uint64_t a2)
{
  return sub_1001B4228(a1, a2, (void (*)(uint64_t))sub_1003D3AE4);
}

uint64_t sub_1001B4228(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = type metadata accessor for RecordingView(0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  dispatch thunk of UIHostingController.rootView.getter();
  sub_100010218((uint64_t *)&unk_100801A50);
  Bindable.wrappedValue.getter();
  uint64_t v7 = sub_1001B42E4((uint64_t)v6);
  a3(v7);
  return swift_release();
}

uint64_t sub_1001B42E4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for RecordingView(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1001B4340(void *a1)
{
  if (a1)
  {
    uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionContainerView);
    if (v2)
    {
      uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridView);
      if (v3)
      {
        uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionFullScreenSnapshotView);
        if (v4)
        {
          swift_unknownObjectRetain();
          id v6 = v2;
          id v7 = v3;
          id v8 = v4;
          id v9 = [a1 containerView];
          [v9 frame];
          double v11 = v10;
          double v13 = v12;
          double v15 = v14;
          double v17 = v16;

          [v6 setFrame:v11, v13, v15, v17];
          [v6 layoutIfNeeded];
          id v18 = [v8 layer];
          long long v19 = *(_OWORD *)&CATransform3DIdentity.m13;
          long long v32 = *(_OWORD *)&CATransform3DIdentity.m11;
          long long v33 = v19;
          long long v20 = *(_OWORD *)&CATransform3DIdentity.m23;
          long long v34 = *(_OWORD *)&CATransform3DIdentity.m21;
          long long v35 = v20;
          long long v21 = *(_OWORD *)&CATransform3DIdentity.m33;
          long long v36 = *(_OWORD *)&CATransform3DIdentity.m31;
          long long v37 = v21;
          long long v22 = *(_OWORD *)&CATransform3DIdentity.m43;
          long long v38 = *(_OWORD *)&CATransform3DIdentity.m41;
          long long v39 = v22;
          [v18 setSublayerTransform:&v32];

          if (qword_1007F6AB8 != -1) {
            swift_once();
          }
          id v23 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:qword_10083D020 timingParameters:0.1];
          uint64_t v24 = swift_allocObject();
          *(void *)(v24 + 16) = v7;
          *(void *)(v24 + 24) = v8;
          *(void *)&long long v34 = sub_1001B47CC;
          *((void *)&v34 + 1) = v24;
          *(void *)&long long v32 = _NSConcreteStackBlock;
          *((void *)&v32 + 1) = 1107296256;
          *(void *)&long long v33 = sub_10017D530;
          *((void *)&v33 + 1) = &unk_10079C590;
          double v25 = _Block_copy(&v32);
          id v26 = v7;
          id v27 = v8;
          swift_release();
          [v23 addAnimations:v25];
          _Block_release(v25);
          id v28 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:qword_10083D020 timingParameters:0.2];
          uint64_t v29 = swift_allocObject();
          *(void *)(v29 + 16) = a1;
          *(void *)(v29 + 24) = v6;
          *(void *)&long long v34 = sub_1001B4830;
          *((void *)&v34 + 1) = v29;
          *(void *)&long long v32 = _NSConcreteStackBlock;
          *((void *)&v32 + 1) = 1107296256;
          *(void *)&long long v33 = sub_10017D530;
          *((void *)&v33 + 1) = &unk_10079C5E0;
          long long v30 = _Block_copy(&v32);
          swift_unknownObjectRetain();
          id v31 = v6;
          swift_release();
          [v28 addAnimations:v30];
          _Block_release(v30);
          [v23 startAnimation];
          [v28 startAnimation];
          swift_unknownObjectRelease();
        }
      }
    }
  }
}

void sub_1001B46C8()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionContainerView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionContainerView);
  if (v2)
  {
    id v3 = v2;
    [v3 removeFromSuperview];
    uint64_t v4 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = 0;

    uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridView);
    *(void *)(v0 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridView) = 0;

    id v6 = *(void **)(v0 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridSnapshotView);
    *(void *)(v0 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridSnapshotView) = 0;

    id v7 = *(id *)(v0 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionFullScreenSnapshotView);
    *(void *)(v0 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionFullScreenSnapshotView) = 0;
  }
}

uint64_t sub_1001B478C()
{
  return swift_deallocObject();
}

id sub_1001B47CC()
{
  return sub_1001B49FC(0.0, 1.0);
}

uint64_t sub_1001B47D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001B47E8()
{
  return swift_release();
}

uint64_t sub_1001B47F0()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

void sub_1001B4830()
{
  sub_1001B2BB8(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

void sub_1001B4838(uint64_t a1)
{
  if (a1)
  {
    uint64_t v2 = OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionContainerView;
    id v3 = *(void **)(v1 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionContainerView);
    if (v3)
    {
      id v13 = v3;
      id v4 = [(id)swift_unknownObjectRetain() viewControllerForKey:UITransitionContextFromViewControllerKey];
      if (v4)
      {
        uint64_t v5 = v4;
        [v13 removeFromSuperview];
        id v6 = *(void **)(v1 + v2);
        *(void *)(v1 + v2) = 0;

        id v7 = *(void **)(v1 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridView);
        *(void *)(v1 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridView) = 0;

        id v8 = *(void **)(v1 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridSnapshotView);
        *(void *)(v1 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionGridSnapshotView) = 0;

        id v9 = *(void **)(v1 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionFullScreenSnapshotView);
        *(void *)(v1 + OBJC_IVAR____TtC7Journal26TranscribingAudioAssetView_transitionFullScreenSnapshotView) = 0;

        id v10 = [v5 view];
        if (!v10)
        {
          __break(1u);
          return;
        }
        id v11 = v10;
        [v10 setHidden:0];
        swift_unknownObjectRelease();

        double v12 = v11;
      }
      else
      {
        swift_unknownObjectRelease();
        double v12 = v13;
      }
    }
  }
}

uint64_t sub_1001B4990(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007F9470);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id sub_1001B49F0()
{
  return sub_1001B49FC(1.0, 0.0);
}

id sub_1001B49FC(double a1, double a2)
{
  id v4 = *(void **)(v2 + 24);
  [*(id *)(v2 + 16) setAlpha:];

  return [v4 setAlpha:a2];
}

uint64_t sub_1001B4A50()
{
  return swift_deallocObject();
}

void sub_1001B4A88()
{
  sub_1001B3FE8(*(void **)(v0 + 16));
}

void *assignWithCopy for TranscriptWaitingView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for TranscriptWaitingView(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for TranscriptWaitingView()
{
  return &type metadata for TranscriptWaitingView;
}

uint64_t sub_1001B4B3C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001B4B58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = sub_100010218(&qword_100801A68);
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)id v8 = static VerticalAlignment.center.getter();
  *((void *)v8 + 1) = 0;
  v8[16] = 1;
  sub_100010218(&qword_100801A70);
  long long v13 = xmmword_1006DD6B0;
  swift_getKeyPath();
  uint64_t v9 = swift_allocObject();
  *(double *)(v9 + 16) = a3;
  *(void *)(v9 + 24) = a1;
  swift_retain();
  sub_100010218(&qword_100801A78);
  sub_100010218(&qword_100801A80);
  sub_1001B5294();
  sub_1001B5364();
  ForEach<>.init(_:id:content:)();
  uint64_t v10 = swift_allocObject();
  *(double *)(v10 + 16) = a3;
  *(void *)(v10 + 24) = a1;
  sub_1001B54DC((uint64_t)v8, a2);
  id v11 = (uint64_t (**)())(a2 + *(int *)(sub_100010218(&qword_100801AC8) + 36));
  *id v11 = sub_1001B5484;
  v11[1] = (uint64_t (*)())v10;
  v11[2] = 0;
  void v11[3] = 0;
  swift_retain();
  return sub_10001457C((uint64_t)v8, &qword_100801A68);
}

double sub_1001B4D40@<D0>(double *a1@<X8>)
{
  sub_100010218(&qword_100801AD0);
  State.wrappedValue.getter();
  static Animation.easeInOut(duration:)();
  Animation.repeatForever(autoreverses:)();
  swift_release();
  uint64_t v2 = Animation.delay(_:)();
  swift_release();
  State.wrappedValue.getter();
  double result = v4;
  *a1 = v4;
  *((void *)a1 + 1) = v2;
  a1[2] = v4;
  return result;
}

uint64_t sub_1001B4E28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100010218(&qword_100800590);
  __chkstk_darwin(v2 - 8);
  double v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Font.TextStyle();
  uint64_t v5 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Alignment.center.getter();
  sub_1001A40E0(0.0, 1, 0.0, 1, 12.0, 0, 0.0, 1, &v35, 0.0, 1, 0.0, 1);
  uint64_t v25 = v35;
  char v8 = BYTE8(v35);
  uint64_t v26 = v36;
  char v9 = v37;
  uint64_t v27 = v38;
  char v10 = v39;
  uint64_t v28 = v40;
  char v11 = v41;
  uint64_t v29 = v42;
  char v12 = v43;
  uint64_t v31 = v44;
  char v13 = v45;
  uint64_t v34 = v46;
  uint64_t v33 = v47;
  uint64_t v32 = static Color.red.getter();
  uint64_t KeyPath = swift_getKeyPath();
  char v58 = v8;
  char v57 = v9;
  char v55 = v10;
  char v53 = v11;
  char v51 = v12;
  char v49 = v13;
  uint64_t v14 = v24;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Font.TextStyle.title3(_:), v24);
  uint64_t v15 = enum case for Font.Design.serif (_:);
  uint64_t v16 = type metadata accessor for Font.Design();
  uint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v4, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v4, 0, 1, v16);
  static Font.Weight.regular.getter();
  uint64_t v18 = static Font.system(_:design:weight:)();
  sub_10001457C((uint64_t)v4, &qword_100800590);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v14);
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = v25;
  *(unsigned char *)(a1 + 8) = v58;
  *(_DWORD *)(a1 + 9) = v35;
  *(_DWORD *)(a1 + 12) = *(_DWORD *)((char *)&v35 + 3);
  *(void *)(a1 + 16) = v26;
  *(unsigned char *)(a1 + 24) = v57;
  *(_DWORD *)(a1 + 25) = *(_DWORD *)v56;
  *(_DWORD *)(a1 + 28) = *(_DWORD *)&v56[3];
  *(void *)(a1 + 32) = v27;
  *(unsigned char *)(a1 + 40) = v55;
  int v20 = *(_DWORD *)v54;
  *(_DWORD *)(a1 + 44) = *(_DWORD *)&v54[3];
  *(_DWORD *)(a1 + 41) = v20;
  *(void *)(a1 + 48) = v28;
  *(unsigned char *)(a1 + 56) = v53;
  *(_DWORD *)(a1 + 57) = *(_DWORD *)v52;
  *(_DWORD *)(a1 + 60) = *(_DWORD *)&v52[3];
  *(void *)(a1 + 64) = v29;
  *(unsigned char *)(a1 + 72) = v51;
  *(_DWORD *)(a1 + 73) = *(_DWORD *)v50;
  *(_DWORD *)(a1 + 76) = *(_DWORD *)&v50[3];
  *(void *)(a1 + 80) = v31;
  *(unsigned char *)(a1 + 88) = v49;
  *(_DWORD *)(a1 + 92) = *(_DWORD *)&v48[3];
  *(_DWORD *)(a1 + 89) = *(_DWORD *)v48;
  uint64_t v21 = v33;
  *(void *)(a1 + 96) = v34;
  *(void *)(a1 + 104) = v21;
  uint64_t v22 = v32;
  *(void *)(a1 + 112) = KeyPath;
  *(void *)(a1 + 120) = v22;
  *(void *)(a1 + 128) = result;
  *(void *)(a1 + 136) = v18;
  return result;
}

uint64_t sub_1001B5244@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B4B58(*(void *)(v1 + 8), a1, *(double *)v1);
}

uint64_t sub_1001B5250()
{
  swift_release();

  return swift_deallocObject();
}

double sub_1001B5288@<D0>(double *a1@<X8>)
{
  return sub_1001B4D40(a1);
}

unint64_t sub_1001B5294()
{
  unint64_t result = qword_100801A88;
  if (!qword_100801A88)
  {
    sub_100014440(&qword_100801A78);
    sub_1001B5310();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801A88);
  }
  return result;
}

unint64_t sub_1001B5310()
{
  unint64_t result = qword_100801A90;
  if (!qword_100801A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801A90);
  }
  return result;
}

unint64_t sub_1001B5364()
{
  unint64_t result = qword_100801A98;
  if (!qword_100801A98)
  {
    sub_100014440(&qword_100801A80);
    sub_1001B583C(&qword_100801AA0, &qword_100801AA8, (void (*)(void))sub_1001B5430);
    sub_100014488(&qword_100801AB8, &qword_100801AC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801A98);
  }
  return result;
}

unint64_t sub_1001B5430()
{
  unint64_t result = qword_100801AB0;
  if (!qword_100801AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801AB0);
  }
  return result;
}

uint64_t sub_1001B5484()
{
  return State.wrappedValue.setter();
}

uint64_t sub_1001B54DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100801A68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for TranscriptWaitingView.CircleView()
{
  return &type metadata for TranscriptWaitingView.CircleView;
}

unint64_t sub_1001B5558()
{
  unint64_t result = qword_100801AD8;
  if (!qword_100801AD8)
  {
    sub_100014440(&qword_100801AC8);
    sub_100014488(&qword_100801AE0, &qword_100801A68);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801AD8);
  }
  return result;
}

uint64_t sub_1001B55F8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001B5614@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001B5640@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = EnvironmentValues.foregroundColor.getter();
  *a1 = result;
  return result;
}

uint64_t sub_1001B566C()
{
  return EnvironmentValues.foregroundColor.setter();
}

uint64_t sub_1001B5698()
{
  return EnvironmentValues.foregroundColor.setter();
}

unint64_t sub_1001B56D0()
{
  unint64_t result = qword_100801AE8;
  if (!qword_100801AE8)
  {
    sub_100014440(&qword_100801AF0);
    sub_1001B5770();
    sub_100014488(&qword_1007F9638, &qword_1007F9640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801AE8);
  }
  return result;
}

unint64_t sub_1001B5770()
{
  unint64_t result = qword_100801AF8;
  if (!qword_100801AF8)
  {
    sub_100014440(&qword_100801B00);
    sub_1001B583C(&qword_100801B08, &qword_100801B10, (void (*)(void))sub_1001B58B8);
    sub_100014488(&qword_1007F9628, &qword_1007F9630);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801AF8);
  }
  return result;
}

uint64_t sub_1001B583C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001B58B8()
{
  unint64_t result = qword_100801B18;
  if (!qword_100801B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801B18);
  }
  return result;
}

uint64_t sub_1001B5910()
{
  sub_1001AEF40();
  EnvironmentValues.subscript.getter();
  return v1;
}

ValueMetadata *_s34__Key_recordingButtonAllowsPausingVMa()
{
  return &_s34__Key_recordingButtonAllowsPausingVN;
}

void *sub_1001B595C(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    uint64_t v4 = (void *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(unsigned char *)a1 = *(unsigned char *)a2;
    uint64_t v7 = a2[1];
    char v8 = *((unsigned char *)a2 + 16);
    sub_100026CCC(v7, v8);
    v4[1] = v7;
    *((unsigned char *)v4 + 16) = v8;
    uint64_t v9 = a2[3];
    char v10 = *((unsigned char *)a2 + 32);
    sub_100026CCC(v9, v10);
    v4[3] = v9;
    *((unsigned char *)v4 + 32) = v10;
    uint64_t v11 = *(int *)(a3 + 28);
    char v12 = (char *)v4 + v11;
    char v13 = (char *)a2 + v11;
    uint64_t v14 = type metadata accessor for AccessibilityTechnologies();
    uint64_t v15 = *(void *)(v14 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    {
      uint64_t v16 = sub_100010218(&qword_100801B20);
      memcpy(v12, v13, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
    }
    uint64_t v18 = (int *)sub_100010218(&qword_100801B28);
    v12[v18[9]] = v13[v18[9]];
    *(void *)&v12[v18[10]] = *(void *)&v13[v18[10]];
    v12[v18[11]] = v13[v18[11]];
    uint64_t v19 = *(int *)(a3 + 32);
    int v20 = (void *)((char *)v4 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    uint64_t v22 = v21[1];
    *int v20 = *v21;
    v20[1] = v22;
    swift_retain();
  }
  swift_retain();
  return v4;
}

uint64_t sub_1001B5B58(uint64_t a1, uint64_t a2)
{
  sub_100026DF8(*(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
  sub_100026DF8(*(void *)(a1 + 24), *(unsigned char *)(a1 + 32));
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  sub_100010218(&qword_100801B28);
  swift_release();

  return swift_release();
}

uint64_t sub_1001B5C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  sub_100026CCC(v6, v7);
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  uint64_t v8 = *(void *)(a2 + 24);
  char v9 = *(unsigned char *)(a2 + 32);
  sub_100026CCC(v8, v9);
  *(void *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 32) = v9;
  uint64_t v10 = *(int *)(a3 + 28);
  uint64_t v11 = (char *)(a1 + v10);
  char v12 = (char *)(a2 + v10);
  uint64_t v13 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    uint64_t v15 = sub_100010218(&qword_100801B20);
    memcpy(v11, v12, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v16 = (int *)sub_100010218(&qword_100801B28);
  v11[v16[9]] = v12[v16[9]];
  *(void *)&v11[v16[10]] = *(void *)&v12[v16[10]];
  v11[v16[11]] = v12[v16[11]];
  uint64_t v17 = *(int *)(a3 + 32);
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (void *)(a2 + v17);
  uint64_t v20 = v19[1];
  *uint64_t v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_1001B5E04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  sub_100026CCC(v6, v7);
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  sub_100026DF8(v8, v9);
  uint64_t v10 = *(void *)(a2 + 24);
  char v11 = *(unsigned char *)(a2 + 32);
  sub_100026CCC(v10, v11);
  uint64_t v12 = *(void *)(a1 + 24);
  char v13 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = v10;
  *(unsigned char *)(a1 + 32) = v11;
  sub_100026DF8(v12, v13);
  uint64_t v14 = *(int *)(a3 + 28);
  uint64_t v15 = (char *)(a1 + v14);
  uint64_t v16 = (char *)(a2 + v14);
  uint64_t v17 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v20 = v19(v15, 1, v17);
  int v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 24))(v15, v16, v17);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v15, v17);
    goto LABEL_6;
  }
  if (v21)
  {
LABEL_6:
    uint64_t v22 = sub_100010218(&qword_100801B20);
    memcpy(v15, v16, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
LABEL_7:
  uint64_t v23 = (int *)sub_100010218(&qword_100801B28);
  v15[v23[9]] = v16[v23[9]];
  *(void *)&v15[v23[10]] = *(void *)&v16[v23[10]];
  swift_retain();
  swift_release();
  v15[v23[11]] = v16[v23[11]];
  uint64_t v24 = *(int *)(a3 + 32);
  uint64_t v25 = (void *)(a1 + v24);
  uint64_t v26 = (void *)(a2 + v24);
  uint64_t v27 = v26[1];
  *uint64_t v25 = *v26;
  v25[1] = v27;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1001B6044(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v6 = *(int *)(a3 + 28);
  char v7 = (char *)(a1 + v6);
  uint64_t v8 = (char *)(a2 + v6);
  uint64_t v9 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    uint64_t v11 = sub_100010218(&qword_100801B20);
    memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v12 = (int *)sub_100010218(&qword_100801B28);
  v7[v12[9]] = v8[v12[9]];
  *(void *)&v7[v12[10]] = *(void *)&v8[v12[10]];
  v7[v12[11]] = v8[v12[11]];
  *(_OWORD *)(a1 + *(int *)(a3 + 32)) = *(_OWORD *)(a2 + *(int *)(a3 + 32));
  return a1;
}

uint64_t sub_1001B61C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  uint64_t v8 = *(void *)(a1 + 8);
  char v9 = *(unsigned char *)(a1 + 16);
  *(void *)(a1 + 8) = v6;
  *(unsigned char *)(a1 + 16) = v7;
  sub_100026DF8(v8, v9);
  char v10 = *(unsigned char *)(a2 + 32);
  uint64_t v11 = *(void *)(a1 + 24);
  char v12 = *(unsigned char *)(a1 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = v10;
  sub_100026DF8(v11, v12);
  uint64_t v13 = *(int *)(a3 + 28);
  uint64_t v14 = (char *)(a1 + v13);
  uint64_t v15 = (char *)(a2 + v13);
  uint64_t v16 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48);
  int v19 = v18(v14, 1, v16);
  int v20 = v18(v15, 1, v16);
  if (!v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 40))(v14, v15, v16);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v16);
    goto LABEL_6;
  }
  if (v20)
  {
LABEL_6:
    uint64_t v21 = sub_100010218(&qword_100801B20);
    memcpy(v14, v15, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
LABEL_7:
  uint64_t v22 = (int *)sub_100010218(&qword_100801B28);
  v14[v22[9]] = v15[v22[9]];
  *(void *)&v14[v22[10]] = *(void *)&v15[v22[10]];
  swift_release();
  v14[v22[11]] = v15[v22[11]];
  *(_OWORD *)(a1 + *(int *)(a3 + 32)) = *(_OWORD *)(a2 + *(int *)(a3 + 32));
  swift_release();
  return a1;
}

uint64_t sub_1001B63D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001B63EC);
}

uint64_t sub_1001B63EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218(&qword_100801B28);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = v6;
    uint64_t v9 = a1 + *(int *)(a3 + 28);
    char v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v10(v9, a2, v8);
  }
  else
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 32));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
}

uint64_t sub_1001B64B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001B64C8);
}

uint64_t sub_1001B64C8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100010218(&qword_100801B28);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = result;
    uint64_t v11 = a1 + *(int *)(a4 + 28);
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v12(v11, a2, a2, v10);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 32)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for RecordingButton()
{
  uint64_t result = qword_100801B88;
  if (!qword_100801B88) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001B65D8()
{
  sub_1001B6688();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1001B6688()
{
  if (!qword_100801B98)
  {
    unint64_t v0 = type metadata accessor for AccessibilityFocusState();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100801B98);
    }
  }
}

uint64_t sub_1001B66E8()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1001B6704(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1001B670C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, &protocol witness table for Bool);
}

uint64_t sub_1001B6718@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for RoundedRectangle();
  uint64_t v4 = v3 - 8;
  __chkstk_darwin(v3);
  uint64_t v6 = (void *)((char *)v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100010218(&qword_100801D78);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v1;
  unint64_t v12 = (char *)v6 + *(int *)(v4 + 28);
  uint64_t v13 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v14 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 104))(v12, v13, v14);
  *uint64_t v6 = v11;
  v6[1] = v11;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_1001B9500((uint64_t)v6, (uint64_t)v10, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  uint64_t v15 = &v10[*(int *)(v8 + 44)];
  long long v16 = v27[1];
  *(_OWORD *)uint64_t v15 = v27[0];
  *((_OWORD *)v15 + 1) = v16;
  *((_OWORD *)v15 + 2) = v27[2];
  sub_1001B9568((uint64_t)v6, (uint64_t (*)(void))&type metadata accessor for RoundedRectangle);
  LOBYTE(v12) = static Edge.Set.horizontal.getter();
  EdgeInsets.init(_all:)();
  uint64_t v18 = v17;
  uint64_t v20 = v19;
  uint64_t v22 = v21;
  uint64_t v24 = v23;
  sub_10001B220((uint64_t)v10, a1, &qword_100801D78);
  uint64_t v25 = a1 + *(int *)(sub_100010218(&qword_100801D80) + 36);
  *(unsigned char *)uint64_t v25 = (_BYTE)v12;
  *(void *)(v25 + 8) = v18;
  *(void *)(v25 + 16) = v20;
  *(void *)(v25 + 24) = v22;
  *(void *)(v25 + 32) = v24;
  *(unsigned char *)(v25 + 40) = 0;
  return sub_10001457C((uint64_t)v10, &qword_100801D78);
}

uint64_t sub_1001B6944()
{
  int v1 = *v0;
  uint64_t v2 = *((void *)v0 + 3);
  char v3 = v0[32];
  sub_100026CCC(v2, v3);
  char v4 = sub_100666714(v2, v3);
  sub_100026DF8(v2, v3);
  uint64_t v5 = *((void *)v0 + 1);
  char v6 = v0[16];
  sub_100026CCC(v5, v6);
  char v7 = sub_100666714(v5, v6);
  sub_100026DF8(v5, v6);
  if (!v1)
  {
LABEL_5:
    if (v7) {
      static Color.red.getter();
    }
    else {
      static Color.gray.getter();
    }
    return AnyShapeStyle.init<A>(_:)();
  }
  if (v1 == 1)
  {
    if (v4)
    {
      static Color.clear.getter();
      return AnyShapeStyle.init<A>(_:)();
    }
    goto LABEL_5;
  }
  if (v7)
  {
    static Color.red.getter();
    Color.opacity(_:)();
    swift_release();
  }
  else
  {
    static HierarchicalShapeStyle.tertiary.getter();
  }
  return AnyShapeStyle.init<A>(_:)();
}

uint64_t sub_1001B6A6C()
{
  int v1 = *v0;
  uint64_t v2 = *((void *)v0 + 3);
  char v3 = v0[32];
  sub_100026CCC(v2, v3);
  char v4 = sub_100666714(v2, v3);
  sub_100026DF8(v2, v3);
  if (!v1)
  {
    if (qword_1007F7AD8 == -1) {
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  if (v1 != 1)
  {
    if (qword_1007F7AD0 == -1) {
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  if (v4)
  {
    if (qword_1007F7AA8 == -1) {
      goto LABEL_11;
    }
    goto LABEL_12;
  }
  if (qword_1007F7AE0 != -1) {
LABEL_12:
  }
    swift_once();
LABEL_11:
  sub_100014344();
  swift_bridgeObjectRetain();
  return Text.init<A>(_:)();
}

uint64_t sub_1001B6BF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v3 = type metadata accessor for AccessibilityTraits();
  uint64_t v54 = *(void *)(v3 - 8);
  uint64_t v55 = v3;
  __chkstk_darwin(v3);
  char v53 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v50 = *(void *)(v5 - 8);
  uint64_t v51 = v5;
  __chkstk_darwin(v5);
  char v49 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for PlainButtonStyle();
  uint64_t v46 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for RecordingButton();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v52 = v9 - 8;
  uint64_t v39 = v10;
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9 - 8);
  uint64_t v12 = sub_100010218(&qword_100801BE0);
  uint64_t v41 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100010218(&qword_100801BE8);
  uint64_t v42 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_100010218(&qword_100801BF0);
  uint64_t v48 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_100010218(&qword_100801BF8);
  __chkstk_darwin(v47);
  uint64_t v40 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  char v43 = (char *)&v39 - v22;
  sub_1001B9500(a1, (uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for RecordingButton);
  unint64_t v23 = (*(unsigned __int8 *)(v39 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80);
  uint64_t v24 = swift_allocObject();
  sub_1001B8A0C((uint64_t)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v24 + v23);
  uint64_t v57 = a1;
  sub_100010218(&qword_100801C00);
  sub_1001B8AD8();
  Button.init(action:label:)();
  PlainButtonStyle.init()();
  uint64_t v25 = sub_100014488(&qword_100801C60, &qword_100801BE0);
  uint64_t v26 = sub_1001B96B8(&qword_100801620, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
  uint64_t v27 = v44;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v46 + 8))(v8, v27);
  (*(void (**)(char *, uint64_t))(v41 + 8))(v14, v12);
  uint64_t v28 = v49;
  static AccessibilityChildBehavior.ignore.getter();
  uint64_t v58 = v12;
  uint64_t v59 = v27;
  uint64_t v60 = v25;
  uint64_t v61 = v26;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v28, v51);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v17, v15);
  uint64_t v30 = sub_1001B6A6C();
  uint64_t v32 = v31;
  LOBYTE(v17) = v33 & 1;
  uint64_t v58 = v15;
  uint64_t v59 = OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v34 = (uint64_t)v40;
  uint64_t v35 = v45;
  View.accessibilityLabel(_:)();
  sub_10002B8D0(v30, v32, (char)v17);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v19, v35);
  uint64_t v36 = v53;
  static AccessibilityTraits.isButton.getter();
  uint64_t v37 = (uint64_t)v43;
  ModifiedContent<>.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v36, v55);
  sub_10001457C(v34, &qword_100801BF8);
  sub_100010218(&qword_100801B28);
  AccessibilityFocusState.projectedValue.getter();
  sub_1001B8CB8();
  View.accessibilityFocused(_:)();
  swift_release();
  swift_release();
  return sub_10001457C(v37, &qword_100801BF8);
}

uint64_t sub_1001B7394(unsigned __int8 *a1)
{
  uint64_t v2 = type metadata accessor for RecordingButton();
  __n128 v3 = __chkstk_darwin(v2);
  uint64_t v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(__n128))&a1[*(int *)(v6 + 32)])(v3);
  int v7 = *a1;
  sub_1001B9500((uint64_t)a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for RecordingButton);
  BOOL v8 = v7 == 2 || *v5 == 0;
  sub_1001B9568((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for RecordingButton);
  v10[15] = v8;
  sub_100010218(&qword_100801B28);
  return AccessibilityFocusState.wrappedValue.setter();
}

uint64_t sub_1001B74AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v30 = a2;
  uint64_t v3 = type metadata accessor for RecordingButton();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_100801C38);
  __chkstk_darwin(v6 - 8);
  BOOL v8 = (uint64_t *)((char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_100010218(&qword_100801C28);
  __chkstk_darwin(v9);
  uint64_t v11 = (uint64_t)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = sub_100010218(&qword_100801C18);
  __chkstk_darwin(v31);
  uint64_t v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_100010218(&qword_100801C00);
  __chkstk_darwin(v32);
  uint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  *BOOL v8 = static Alignment.center.getter();
  v8[1] = v16;
  uint64_t v17 = sub_100010218(&qword_100801C70);
  sub_1001B7888((unsigned __int8 *)a1, (uint64_t)v8 + *(int *)(v17 + 44));
  uint64_t v18 = *(void *)(a1 + 24);
  char v19 = *(unsigned char *)(a1 + 32);
  sub_100026CCC(v18, v19);
  sub_100666714(v18, v19);
  sub_100026DF8(v18, v19);
  sub_1001B9500(a1, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for RecordingButton);
  sub_1001B9568((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for RecordingButton);
  uint64_t v20 = v30;
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10001B220((uint64_t)v8, v11, &qword_100801C38);
  uint64_t v21 = (_OWORD *)(v11 + *(int *)(v9 + 36));
  long long v22 = v34;
  *uint64_t v21 = v33;
  v21[1] = v22;
  v21[2] = v35;
  sub_10001457C((uint64_t)v8, &qword_100801C38);
  uint64_t v23 = static Animation.spring(response:dampingFraction:blendDuration:)();
  LOBYTE(v8) = *(unsigned char *)a1;
  sub_10001B220(v11, (uint64_t)v13, &qword_100801C28);
  uint64_t v24 = &v13[*(int *)(v31 + 36)];
  *(void *)uint64_t v24 = v23;
  v24[8] = (char)v8;
  sub_10001457C(v11, &qword_100801C28);
  uint64_t v25 = static Animation.spring(response:dampingFraction:blendDuration:)();
  uint64_t v26 = *(void *)(a1 + 24);
  LOBYTE(a1) = *(unsigned char *)(a1 + 32);
  sub_100026CCC(v26, a1);
  LOBYTE(v11) = sub_100666714(v26, a1);
  sub_100026DF8(v26, a1);
  sub_10001B220((uint64_t)v13, (uint64_t)v15, &qword_100801C18);
  uint64_t v27 = &v15[*(int *)(v32 + 36)];
  *(void *)uint64_t v27 = v25;
  v27[8] = v11 & 1;
  sub_10001457C((uint64_t)v13, &qword_100801C18);
  return sub_10002C4EC((uint64_t)v15, v20, &qword_100801C00);
}

uint64_t sub_1001B7888@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v146 = a1;
  uint64_t v142 = a2;
  uint64_t v2 = sub_100010218(&qword_100800590);
  __chkstk_darwin(v2 - 8);
  uint64_t v123 = (char *)&v123 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v135 = sub_100010218(&qword_100801C78);
  __chkstk_darwin(v135);
  id v125 = (char *)&v123 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v131 = (uint64_t)&v123 - v6;
  uint64_t v133 = sub_100010218(&qword_100801C80);
  __chkstk_darwin(v133);
  uint64_t v134 = (uint64_t)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100801C88);
  __chkstk_darwin(v8 - 8);
  id v130 = (char *)&v123 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v129 = sub_100010218(&qword_100801C90);
  uint64_t v127 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  uint64_t v126 = (char *)&v123 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_100010218(&qword_100801C98);
  __chkstk_darwin(v132);
  id v124 = (char *)&v123 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v128 = (uint64_t)&v123 - v13;
  uint64_t v14 = sub_100010218(&qword_100801CA0);
  __chkstk_darwin(v14 - 8);
  uint64_t v143 = (char *)&v123 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v145 = (uint64_t)&v123 - v17;
  uint64_t v18 = type metadata accessor for RoundedCornerStyle();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v123 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Capsule();
  __chkstk_darwin(v22 - 8);
  uint64_t v24 = (char *)&v123 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_100010218(&qword_100801CA8);
  uint64_t v26 = v25 - 8;
  __chkstk_darwin(v25);
  uint64_t v139 = (uint64_t)&v123 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v30 = (char *)&v123 - v29;
  __chkstk_darwin(v31);
  long long v33 = (void (**)(char *, uint64_t))((char *)&v123 - v32);
  uint64_t v138 = sub_100010218(&qword_100801CB0);
  __chkstk_darwin(v138);
  uint64_t v141 = (uint64_t)&v123 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v137 = (uint64_t)&v123 - v36;
  __n128 v38 = __chkstk_darwin(v37);
  uint64_t v144 = (uint64_t)&v123 - v39;
  uint64_t v140 = (void (**)(char *, uint64_t))v19;
  uint64_t v40 = v18;
  uint64_t v41 = *(void (**)(char *, void, uint64_t, __n128))(v19 + 104);
  v41(v24, enum case for RoundedCornerStyle.continuous(_:), v18, v38);
  sub_1001B9500((uint64_t)v24, (uint64_t)v33, (uint64_t (*)(void))&type metadata accessor for Capsule);
  *(_WORD *)((char *)v33 + *(int *)(v26 + 64)) = 256;
  sub_1001B9568((uint64_t)v24, (uint64_t (*)(void))&type metadata accessor for Capsule);
  if (*v146 != 2)
  {
    uint64_t v45 = static Color.gray.getter();
    goto LABEL_5;
  }
  uint64_t v42 = *((void *)v146 + 1);
  char v43 = v146[16];
  sub_100026CCC(v42, v43);
  char v44 = sub_100666714(v42, v43);
  sub_100026DF8(v42, v43);
  if (v44)
  {
    uint64_t v45 = static Color.red.getter();
LABEL_5:
    *(void *)&long long v158 = v45;
    goto LABEL_7;
  }
  LODWORD(v158) = static HierarchicalShapeStyle.tertiary.getter();
LABEL_7:
  uint64_t v46 = AnyShapeStyle.init<A>(_:)();
  StrokeStyle.init(lineWidth:lineCap:lineJoin:miterLimit:dash:dashPhase:)();
  double v47 = v178;
  uint64_t v48 = v180;
  uint64_t v136 = v181;
  uint64_t v49 = v182;
  sub_10001B220((uint64_t)v33, (uint64_t)v30, &qword_100801CA8);
  uint64_t v50 = v137;
  sub_1001B9500((uint64_t)v33, v137, (uint64_t (*)(void))&type metadata accessor for Capsule);
  uint64_t v51 = v179;
  ((void (*)(char *, void, uint64_t))v41)(v21, enum case for RoundedCornerStyle.circular(_:), v40);
  char v52 = static RoundedCornerStyle.== infix(_:_:)();
  v140[1](v21, v40);
  unint64_t v53 = COERCE_UNSIGNED_INT64(v178 * 0.5) & 0xFFFFFFFFFFFFFFFELL | ((v52 & 1) == 0);
  uint64_t v54 = v139;
  sub_10001B220((uint64_t)v30, v139, &qword_100801CA8);
  swift_retain();
  uint64_t v55 = static Alignment.center.getter();
  uint64_t v57 = v56;
  uint64_t v140 = v33;
  sub_10001457C((uint64_t)v30, &qword_100801CA8);
  swift_release();
  uint64_t v58 = v50 + *(int *)(v138 + 68);
  uint64_t v59 = v58 + *(int *)(sub_100010218(&qword_100801CB8) + 36);
  sub_10002C4EC(v54, v59, &qword_100801CA8);
  uint64_t v60 = (uint64_t *)(v59 + *(int *)(sub_100010218(&qword_100801CC0) + 36));
  *uint64_t v60 = v55;
  v60[1] = v57;
  *(void *)uint64_t v58 = v53;
  *(double *)(v58 + 8) = v47;
  *(void *)(v58 + 16) = v51;
  *(void *)(v58 + 24) = v48;
  *(void *)(v58 + 32) = v136;
  *(void *)(v58 + 40) = v49;
  *(void *)(v58 + 48) = v46;
  *(_WORD *)(v58 + 56) = 256;
  sub_10001457C((uint64_t)v140, &qword_100801CA8);
  uint64_t v61 = v144;
  sub_10002C4EC(v50, v144, &qword_100801CB0);
  id v62 = v146;
  int v63 = *v146;
  if (*v146)
  {
    uint64_t v64 = (uint64_t)v143;
    uint64_t v65 = v145;
    if (v63 != 1)
    {
      uint64_t v140 = (void (**)(char *, uint64_t))sub_1001B6944();
      LocalizedStringKey.init(stringLiteral:)();
      uint64_t v75 = Text.init(_:tableName:bundle:comment:)();
      uint64_t v77 = v76;
      uint64_t v79 = v78;
      char v81 = v80 & 1;
      uint64_t v82 = static Alignment.center.getter();
      sub_1001A426C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)&v169, 0.0, 1, 0.0, 1, v82, v83, v75, v77, v81, v79);
      sub_10002B8D0(v75, v77, v81);
      swift_bridgeObjectRelease();
      uint64_t v84 = *((void *)v62 + 1);
      LOBYTE(v77) = v62[16];
      sub_100026CCC(v84, v77);
      LOBYTE(v79) = sub_100666714(v84, v77);
      sub_100026DF8(v84, v77);
      if (v79) {
        uint64_t v85 = static Color.red.getter();
      }
      else {
        uint64_t v85 = static Color.white.getter();
      }
      uint64_t v101 = v85;
      uint64_t v102 = static Font.subheadline.getter();
      uint64_t KeyPath = swift_getKeyPath();
      long long v164 = v175;
      long long v165 = v176;
      long long v166 = v177;
      long long v160 = v171;
      long long v161 = v172;
      long long v162 = v173;
      long long v163 = v174;
      long long v158 = v169;
      long long v159 = v170;
      *(void *)&long long v167 = v101;
      *((void *)&v167 + 1) = KeyPath;
      uint64_t v168 = v102;
      long long v155 = v177;
      long long v156 = v167;
      uint64_t v157 = v102;
      long long v151 = v173;
      long long v152 = v174;
      long long v153 = v175;
      long long v154 = v176;
      long long v147 = v169;
      long long v148 = v170;
      long long v149 = v171;
      long long v150 = v172;
      static Font.Weight.bold.getter();
      sub_100010218(&qword_100801D20);
      sub_1001B910C();
      double v104 = v126;
      View.fontWeight(_:)();
      sub_1001B936C((uint64_t)&v158);
      uint64_t v105 = enum case for Text.Case.uppercase(_:);
      uint64_t v106 = type metadata accessor for Text.Case();
      uint64_t v107 = *(void *)(v106 - 8);
      uint64_t v108 = (uint64_t)v130;
      (*(void (**)(char *, uint64_t, uint64_t))(v107 + 104))(v130, v105, v106);
      id v109 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v107 + 56);
      LODWORD(v146) = 1;
      v109(v108, 0, 1, v106);
      uint64_t v110 = swift_getKeyPath();
      uint64_t v111 = (uint64_t)v124;
      uint64_t v112 = (uint64_t *)&v124[*(int *)(v132 + 36)];
      uint64_t v113 = sub_100010218(&qword_100801D58);
      sub_10001B220(v108, (uint64_t)v112 + *(int *)(v113 + 28), &qword_100801C88);
      uint64_t *v112 = v110;
      uint64_t v114 = v127;
      uint64_t v115 = v129;
      (*(void (**)(uint64_t, char *, uint64_t))(v127 + 16))(v111, v104, v129);
      sub_10001457C(v108, &qword_100801C88);
      (*(void (**)(char *, uint64_t))(v114 + 8))(v104, v115);
      uint64_t v116 = v128;
      sub_10002C4EC(v111, v128, &qword_100801C98);
      sub_10001B220(v116, v134, &qword_100801C98);
      swift_storeEnumTagMultiPayload();
      sub_1001B9038();
      sub_1001B92C0();
      _ConditionalContent<>.init(storage:)();
      sub_10001457C(v116, &qword_100801C98);
      uint64_t v117 = sub_100010218(&qword_100801CC8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v64, 0, 1, v117);
      uint64_t v65 = v145;
      sub_10002C4EC(v64, v145, &qword_100801CA0);
      uint64_t v88 = 0;
      double v67 = 24.0;
      uint64_t v89 = 0x4048000000000000;
      double v87 = 6.0;
      goto LABEL_22;
    }
    uint64_t v66 = 0x4038000000000000;
    double v67 = 4.0;
  }
  else
  {
    uint64_t v66 = 0x4048000000000000;
    double v67 = 24.0;
    uint64_t v64 = (uint64_t)v143;
    uint64_t v65 = v145;
  }
  uint64_t v140 = (void (**)(char *, uint64_t))sub_1001B6944();
  uint64_t v68 = *((void *)v62 + 3);
  char v69 = v62[32];
  sub_100026CCC(v68, v69);
  char v70 = sub_100666714(v68, v69);
  sub_100026DF8(v68, v69);
  if (v63 == 1 && (v70 & 1) != 0)
  {
    uint64_t v138 = Image.init(systemName:)();
    uint64_t v71 = *((void *)v62 + 1);
    char v72 = v62[16];
    sub_100026CCC(v71, v72);
    char v73 = sub_100666714(v71, v72);
    sub_100026DF8(v71, v72);
    uint64_t v139 = v66;
    if (v73) {
      uint64_t v74 = static Color.red.getter();
    }
    else {
      uint64_t v74 = static Color.gray.getter();
    }
    uint64_t v146 = (unsigned __int8 *)v74;
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v90 = v147;
    char v91 = BYTE8(v147);
    uint64_t v92 = v148;
    LODWORD(v137) = BYTE8(v148);
    long long v93 = v149;
    uint64_t v94 = type metadata accessor for Font.Design();
    uint64_t v95 = (uint64_t)v123;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v123, 1, 1, v94);
    uint64_t v96 = static Font.system(size:weight:design:)();
    sub_10001457C(v95, &qword_100800590);
    uint64_t v97 = swift_getKeyPath();
    *(void *)&long long v158 = v138;
    *((void *)&v158 + 1) = v146;
    *(void *)&long long v159 = v90;
    BYTE8(v159) = v91;
    *(void *)&long long v160 = v92;
    BYTE8(v160) = v137;
    long long v161 = v93;
    *(void *)&long long v162 = v97;
    *((void *)&v162 + 1) = v96;
    sub_100010218(&qword_100801CD8);
    sub_1001B8E50();
    uint64_t v98 = (uint64_t)v125;
    View.accessibilityHidden(_:)();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v99 = v131;
    sub_10002C4EC(v98, v131, &qword_100801C78);
    sub_10001B220(v99, v134, &qword_100801C78);
    swift_storeEnumTagMultiPayload();
    sub_1001B9038();
    sub_1001B92C0();
    uint64_t v64 = (uint64_t)v143;
    _ConditionalContent<>.init(storage:)();
    sub_10001457C(v99, &qword_100801C78);
    uint64_t v100 = sub_100010218(&qword_100801CC8);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v100 - 8) + 56))(v64, 0, 1, v100);
    uint64_t v65 = v145;
    sub_10002C4EC(v64, v145, &qword_100801CA0);
    LODWORD(v146) = 0;
    double v87 = 0.0;
    uint64_t v89 = v139;
    uint64_t v88 = v139;
LABEL_22:
    uint64_t v61 = v144;
    goto LABEL_23;
  }
  uint64_t v86 = sub_100010218(&qword_100801CC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v65, 1, 1, v86);
  LODWORD(v146) = 0;
  double v87 = 0.0;
  uint64_t v88 = v66;
  uint64_t v89 = v66;
LABEL_23:
  uint64_t v118 = v141;
  sub_10001B220(v61, v141, &qword_100801CB0);
  sub_10001B220(v65, v64, &qword_100801CA0);
  uint64_t v119 = v142;
  sub_10001B220(v118, v142, &qword_100801CB0);
  uint64_t v120 = sub_100010218(&qword_100801CD0);
  uint64_t v121 = v119 + *(int *)(v120 + 48);
  *(double *)uint64_t v121 = v67;
  *(void *)(v121 + 8) = v88;
  *(unsigned char *)(v121 + 16) = (_BYTE)v146;
  *(void *)(v121 + 24) = v89;
  *(unsigned char *)(v121 + 32) = 0;
  *(double *)(v121 + 40) = v87;
  *(void *)(v121 + 48) = v140;
  sub_10001B220(v64, v119 + *(int *)(v120 + 64), &qword_100801CA0);
  swift_retain();
  sub_10001457C(v65, &qword_100801CA0);
  sub_10001457C(v61, &qword_100801CB0);
  sub_10001457C(v64, &qword_100801CA0);
  swift_release();
  return sub_10001457C(v118, &qword_100801CB0);
}

uint64_t sub_1001B8844@<X0>(uint64_t a1@<X8>)
{
  *(void *)a1 = static HorizontalAlignment.center.getter();
  *(void *)(a1 + 8) = 0x4018000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  uint64_t v3 = sub_100010218(&qword_100801BD8);
  return sub_1001B6BF8(v1, a1 + *(int *)(v3 + 44));
}

uint64_t sub_1001B8890()
{
  uint64_t v1 = type metadata accessor for RecordingButton();
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80));
  sub_100026DF8(*(void *)(v2 + 8), *(unsigned char *)(v2 + 16));
  sub_100026DF8(*(void *)(v2 + 24), *(unsigned char *)(v2 + 32));
  uint64_t v3 = v2 + *(int *)(v1 + 28);
  uint64_t v4 = type metadata accessor for AccessibilityTechnologies();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  sub_100010218(&qword_100801B28);
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001B8A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for RecordingButton();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001B8A70()
{
  uint64_t v1 = *(void *)(type metadata accessor for RecordingButton() - 8);
  uint64_t v2 = (unsigned __int8 *)(v0
                         + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return sub_1001B7394(v2);
}

uint64_t sub_1001B8AD0@<X0>(uint64_t a1@<X8>)
{
  return sub_1001B74AC(*(void *)(v1 + 16), a1);
}

unint64_t sub_1001B8AD8()
{
  unint64_t result = qword_100801C08;
  if (!qword_100801C08)
  {
    sub_100014440(&qword_100801C00);
    sub_1001B8B78();
    sub_100014488(&qword_100801C50, &qword_100801C58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801C08);
  }
  return result;
}

unint64_t sub_1001B8B78()
{
  unint64_t result = qword_100801C10;
  if (!qword_100801C10)
  {
    sub_100014440(&qword_100801C18);
    sub_1001B8C18();
    sub_100014488(&qword_100801C40, &qword_100801C48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801C10);
  }
  return result;
}

unint64_t sub_1001B8C18()
{
  unint64_t result = qword_100801C20;
  if (!qword_100801C20)
  {
    sub_100014440(&qword_100801C28);
    sub_100014488(&qword_100801C30, &qword_100801C38);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801C20);
  }
  return result;
}

unint64_t sub_1001B8CB8()
{
  unint64_t result = qword_100801C68;
  if (!qword_100801C68)
  {
    sub_100014440(&qword_100801BF8);
    sub_100014440(&qword_100801BE8);
    sub_100014440(&qword_100801BE0);
    type metadata accessor for PlainButtonStyle();
    sub_100014488(&qword_100801C60, &qword_100801BE0);
    sub_1001B96B8(&qword_100801620, (void (*)(uint64_t))&type metadata accessor for PlainButtonStyle);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1001B96B8((unint64_t *)&qword_1007F96A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801C68);
  }
  return result;
}

unint64_t sub_1001B8E50()
{
  unint64_t result = qword_100801CE0;
  if (!qword_100801CE0)
  {
    sub_100014440(&qword_100801CD8);
    sub_1001B8F1C(&qword_100801CE8, &qword_100801CF0, (void (*)(void))sub_1001B8F98);
    sub_100014488(&qword_1007F9638, &qword_1007F9640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801CE0);
  }
  return result;
}

uint64_t sub_1001B8F1C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001B8F98()
{
  unint64_t result = qword_100801CF8;
  if (!qword_100801CF8)
  {
    sub_100014440(&qword_100801D00);
    sub_100014488(&qword_100801D08, &qword_100801D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801CF8);
  }
  return result;
}

unint64_t sub_1001B9038()
{
  unint64_t result = qword_100801D18;
  if (!qword_100801D18)
  {
    sub_100014440(&qword_100801C98);
    sub_100014440(&qword_100801D20);
    sub_1001B910C();
    swift_getOpaqueTypeConformance2();
    sub_100014488(&qword_100801D50, &qword_100801D58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801D18);
  }
  return result;
}

unint64_t sub_1001B910C()
{
  unint64_t result = qword_100801D28;
  if (!qword_100801D28)
  {
    sub_100014440(&qword_100801D20);
    sub_1001B91AC();
    sub_100014488(&qword_1007F9638, &qword_1007F9640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801D28);
  }
  return result;
}

unint64_t sub_1001B91AC()
{
  unint64_t result = qword_100801D30;
  if (!qword_100801D30)
  {
    sub_100014440(&qword_100801D38);
    sub_1001B924C();
    sub_100014488(&qword_100801D08, &qword_100801D10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801D30);
  }
  return result;
}

unint64_t sub_1001B924C()
{
  unint64_t result = qword_100801D40;
  if (!qword_100801D40)
  {
    sub_100014440(&qword_100801D48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801D40);
  }
  return result;
}

unint64_t sub_1001B92C0()
{
  unint64_t result = qword_100801D60;
  if (!qword_100801D60)
  {
    sub_100014440(&qword_100801C78);
    sub_1001B8E50();
    sub_1001B96B8((unint64_t *)&qword_1007F96A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801D60);
  }
  return result;
}

uint64_t sub_1001B936C(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001B93DC()
{
  return EnvironmentValues.textCase.getter();
}

uint64_t sub_1001B9400(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_100801C88);
  __chkstk_darwin(v2 - 8);
  sub_10001B220(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_100801C88);
  return EnvironmentValues.textCase.setter();
}

ValueMetadata *type metadata accessor for RecordingButton.ForegroundShape()
{
  return &type metadata for RecordingButton.ForegroundShape;
}

uint64_t sub_1001B94A8()
{
  return sub_100014488(&qword_100801D68, &qword_100801D70);
}

uint64_t sub_1001B94E4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001B9500(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001B9568(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001B95C8()
{
  return sub_1001B8F1C(&qword_100801D88, &qword_100801D80, (void (*)(void))sub_1001B960C);
}

unint64_t sub_1001B960C()
{
  unint64_t result = qword_100801D90;
  if (!qword_100801D90)
  {
    sub_100014440(&qword_100801D78);
    sub_1001B96B8(&qword_100801D98, (void (*)(uint64_t))&type metadata accessor for RoundedRectangle);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801D90);
  }
  return result;
}

uint64_t sub_1001B96B8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for TranscriptContainerView()
{
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for TranscriptContainerView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TranscriptContainerView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for TranscriptContainerView(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptContainerView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptContainerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptContainerView()
{
  return &type metadata for TranscriptContainerView;
}

uint64_t sub_1001B9970()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001B998C(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v7 = static MainActor.shared.getter();
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v7;
  *(void *)(v8 + 24) = &protocol witness table for MainActor;
  *(void *)(v8 + 32) = v5;
  *(unsigned char *)(v8 + 40) = 1;
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_100801DA0, v8);
  return swift_release();
}

__n128 sub_1001B9AB0@<Q0>(_OWORD *a1@<X0>, uint64_t a2@<X8>)
{
  v19[0] = *a1;
  sub_100010218(&qword_1008014F0);
  State.projectedValue.getter();
  v19[0] = a1[1];
  State.projectedValue.getter();
  swift_retain();
  static Alignment.center.getter();
  sub_1001A4460(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v22, 0.0, 1, INFINITY, 0);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = static Alignment.center.getter();
  uint64_t v6 = v5;
  uint64_t v7 = static HorizontalAlignment.center.getter();
  sub_1001B9D6C((uint64_t)a1, (uint64_t)v19);
  *(_OWORD *)&v21[151] = v19[9];
  *(_OWORD *)&v21[167] = v19[10];
  *(_OWORD *)&v21[183] = v19[11];
  *(_OWORD *)&v21[87] = v19[5];
  *(_OWORD *)&v21[103] = v19[6];
  *(_OWORD *)&v21[119] = v19[7];
  *(_OWORD *)&v21[135] = v19[8];
  *(_OWORD *)&v21[23] = v19[1];
  *(_OWORD *)&v21[39] = v19[2];
  *(_OWORD *)&v21[55] = v19[3];
  *(_OWORD *)&v21[71] = v19[4];
  *(_OWORD *)&v21[7] = v19[0];
  long long v8 = v22[9];
  *(_OWORD *)(a2 + 128) = v22[8];
  *(_OWORD *)(a2 + 144) = v8;
  long long v9 = v22[5];
  *(_OWORD *)(a2 + 64) = v22[4];
  *(_OWORD *)(a2 + 80) = v9;
  long long v10 = v22[7];
  *(_OWORD *)(a2 + 96) = v22[6];
  *(_OWORD *)(a2 + 112) = v10;
  long long v11 = v22[1];
  *(_OWORD *)a2 = v22[0];
  *(_OWORD *)(a2 + 16) = v11;
  long long v12 = v22[3];
  *(_OWORD *)(a2 + 32) = v22[2];
  *(_OWORD *)(a2 + 48) = v12;
  long long v13 = *(_OWORD *)&v21[176];
  *(_OWORD *)(a2 + 361) = *(_OWORD *)&v21[160];
  *(_OWORD *)(a2 + 377) = v13;
  long long v14 = *(_OWORD *)&v21[112];
  *(_OWORD *)(a2 + 297) = *(_OWORD *)&v21[96];
  *(_OWORD *)(a2 + 313) = v14;
  long long v15 = *(_OWORD *)&v21[144];
  *(_OWORD *)(a2 + 329) = *(_OWORD *)&v21[128];
  *(_OWORD *)(a2 + 345) = v15;
  long long v16 = *(_OWORD *)v21;
  *(_OWORD *)(a2 + 217) = *(_OWORD *)&v21[16];
  long long v17 = *(_OWORD *)&v21[48];
  *(_OWORD *)(a2 + 233) = *(_OWORD *)&v21[32];
  *(_OWORD *)(a2 + 249) = v17;
  __n128 result = *(__n128 *)&v21[80];
  *(_OWORD *)(a2 + 265) = *(_OWORD *)&v21[64];
  *(__n128 *)(a2 + 281) = result;
  v21[199] = v20;
  *(void *)(a2 + 160) = v23;
  *(void *)(a2 + 168) = v4;
  *(void *)(a2 + 176) = v6;
  *(void *)(a2 + 184) = v7;
  *(void *)(a2 + 192) = 0;
  *(unsigned char *)(a2 + 200) = 0;
  *(void *)(a2 + 393) = *(void *)&v21[192];
  *(_OWORD *)(a2 + 201) = v16;
  return result;
}

uint64_t sub_1001B9D6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_100010218(&qword_1008014F0);
  State.wrappedValue.getter();
  if (v36 == 1)
  {
    sub_100010218(&qword_100800168);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1006D6270;
    *(void *)(v4 + 32) = static Color.clear.getter();
    *(void *)(v4 + 40) = static Color.white.getter();
    specialized Array._endMutation()();
    static UnitPoint.top.getter();
    static UnitPoint.bottom.getter();
    Gradient.init(colors:)();
    LinearGradient.init(gradient:startPoint:endPoint:)();
    uint64_t v29 = v32;
    uint64_t v30 = v31;
    uint64_t v27 = v34;
    uint64_t v28 = v33;
    uint64_t v26 = v35;
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v24 = v37;
    uint64_t v25 = v36;
    uint64_t v22 = v39;
    uint64_t v23 = v38;
    uint64_t v20 = v41;
    uint64_t v21 = v40;
    char v19 = static Edge.Set.top.getter();
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v20 = 0;
    char v19 = 0;
  }
  uint64_t v18 = static Color.white.getter();
  long long v47 = *(_OWORD *)(a1 + 16);
  State.wrappedValue.getter();
  if (v42 == 1)
  {
    sub_100010218(&qword_100800168);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1006D6270;
    *(void *)(v5 + 32) = static Color.white.getter();
    *(void *)(v5 + 40) = static Color.clear.getter();
    specialized Array._endMutation()();
    static UnitPoint.top.getter();
    static UnitPoint.bottom.getter();
    Gradient.init(colors:)();
    LinearGradient.init(gradient:startPoint:endPoint:)();
    uint64_t v6 = v44;
    uint64_t v8 = v45;
    uint64_t v7 = v46;
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v9 = v5;
    uint64_t v10 = BYTE8(v47);
    uint64_t v11 = v48;
    uint64_t v12 = v49;
    uint64_t v13 = v50;
    uint64_t v14 = v51;
    uint64_t result = static Edge.Set.bottom.getter();
    uint64_t v17 = v43;
    uint64_t v16 = v42;
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v17 = 0;
    uint64_t v6 = 0;
    uint64_t v8 = 0;
    uint64_t v7 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    uint64_t v12 = 0;
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    uint64_t result = 0;
  }
  *(void *)a2 = v30;
  *(void *)(a2 + 8) = v29;
  *(void *)(a2 + 16) = v28;
  *(void *)(a2 + 24) = v27;
  *(void *)(a2 + 32) = v26;
  *(void *)(a2 + 40) = v25;
  *(void *)(a2 + 48) = v24;
  *(void *)(a2 + 56) = v23;
  *(void *)(a2 + 64) = v22;
  *(void *)(a2 + 72) = v21;
  *(void *)(a2 + 80) = v20;
  *(unsigned char *)(a2 + 88) = v19;
  *(void *)(a2 + 96) = v18;
  *(void *)(a2 + 104) = v16;
  *(void *)(a2 + 112) = v17;
  *(void *)(a2 + 120) = v6;
  *(void *)(a2 + 128) = v8;
  *(void *)(a2 + 136) = v7;
  *(void *)(a2 + 144) = v9;
  *(void *)(a2 + 152) = v10;
  *(void *)(a2 + 160) = v11;
  *(void *)(a2 + 168) = v12;
  *(void *)(a2 + 176) = v13;
  *(void *)(a2 + 184) = v14;
  *(unsigned char *)(a2 + 192) = result;
  return result;
}

uint64_t sub_1001BA0A0@<X0>(uint64_t *a1@<X8>)
{
  long long v3 = v1[1];
  long long v14 = *v1;
  long long v15 = v3;
  long long v16 = v1[2];
  uint64_t v4 = static Alignment.center.getter();
  uint64_t v6 = v5;
  sub_1001B9AB0(&v14, (uint64_t)__src);
  uint64_t v7 = static Alignment.center.getter();
  uint64_t v9 = v8;
  uint64_t v10 = sub_1003D3CBC();
  long long v17 = v14;
  long long v18 = v15;
  uint64_t v19 = *((void *)&v16 + 1);
  uint64_t v11 = (_OWORD *)swift_allocObject();
  long long v12 = v15;
  v11[1] = v14;
  v11[2] = v12;
  void v11[3] = v16;
  *a1 = v4;
  a1[1] = v6;
  memcpy(a1 + 2, __src, 0x191uLL);
  a1[53] = v10;
  a1[54] = (uint64_t)sub_1001BA200;
  a1[55] = (uint64_t)v11;
  a1[56] = v7;
  a1[57] = v9;
  sub_1001BA208((uint64_t)&v17);
  sub_1001BA208((uint64_t)&v18);
  swift_retain();
  return sub_1001BA234((uint64_t)&v19);
}

uint64_t sub_1001BA1B0()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001BA200()
{
  return sub_1001B998C(v0 + 16);
}

uint64_t sub_1001BA208(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001BA234(uint64_t a1)
{
  return a1;
}

uint64_t sub_1001BA260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v49 = a4;
  uint64_t v48 = type metadata accessor for ControlSize();
  uint64_t v47 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v46 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = type metadata accessor for BorderedButtonStyle();
  uint64_t v45 = *(void *)(v44 - 8);
  __chkstk_darwin(v44);
  uint64_t v41 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CircularDownloadProgressViewStyle();
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218(&qword_100801DD8);
  uint64_t v38 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  long long v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = sub_100010218(&qword_100801DE0);
  uint64_t v40 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  long long v16 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100010218(&qword_100801DE8);
  uint64_t v42 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  unsigned __int8 v37 = (char *)&v36 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = a1;
  uint64_t v57 = a2;
  uint64_t v58 = a3;
  uint64_t v53 = a1;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  uint64_t v50 = a1;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  sub_100010218(&qword_100801DF0);
  sub_100010218(&qword_100801DF8);
  sub_100010218(&qword_100801E00);
  sub_100014488(&qword_100801E08, &qword_100801DF0);
  sub_1001BB81C();
  sub_1001BB888();
  ContentUnavailableView.init(label:description:actions:)();
  uint64_t v59 = 0x402C000000000000;
  sub_1000DA83C();
  ScaledMetric.init(wrappedValue:)();
  uint64_t v59 = 0x403C000000000000;
  ScaledMetric.init(wrappedValue:)();
  uint64_t v59 = 0x4040000000000000;
  ScaledMetric.init(wrappedValue:)();
  uint64_t v59 = 0x4042800000000000;
  ScaledMetric.init(wrappedValue:)();
  long long v18 = (uint64_t *)&v11[*(int *)(v9 + 32)];
  *long long v18 = swift_getKeyPath();
  sub_100010218(&qword_1007FD6E8);
  swift_storeEnumTagMultiPayload();
  uint64_t v19 = sub_100014488(&qword_100801E20, &qword_100801DD8);
  uint64_t v20 = sub_1001BB9C0(&qword_100801E28, (void (*)(uint64_t))type metadata accessor for CircularDownloadProgressViewStyle);
  View.progressViewStyle<A>(_:)();
  sub_1001BB964((uint64_t)v11);
  (*(void (**)(char *, uint64_t))(v38 + 8))(v14, v12);
  uint64_t v21 = v41;
  BorderedButtonStyle.init()();
  uint64_t v59 = v12;
  uint64_t v60 = v9;
  uint64_t v61 = v19;
  uint64_t v62 = v20;
  swift_getOpaqueTypeConformance2();
  sub_1001BB9C0(&qword_100801E30, (void (*)(uint64_t))&type metadata accessor for BorderedButtonStyle);
  uint64_t v22 = v37;
  uint64_t v23 = v39;
  uint64_t v24 = v44;
  View.buttonStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v21, v24);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v16, v23);
  uint64_t v25 = v47;
  uint64_t v26 = v46;
  uint64_t v27 = v48;
  (*(void (**)(char *, void, uint64_t))(v47 + 104))(v46, enum case for ControlSize.large(_:), v48);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v29 = sub_100010218(&qword_100801E38);
  uint64_t v30 = v49;
  uint64_t v31 = (uint64_t *)(v49 + *(int *)(v29 + 36));
  uint64_t v32 = sub_100010218(&qword_100801E40);
  (*(void (**)(char *, char *, uint64_t))(v25 + 16))((char *)v31 + *(int *)(v32 + 28), v26, v27);
  *uint64_t v31 = KeyPath;
  uint64_t v33 = v42;
  uint64_t v34 = v43;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v30, v22, v43);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v26, v27);
  return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v22, v34);
}

uint64_t sub_1001BA9EC()
{
  return Label.init(title:icon:)();
}

double sub_1001BAA98@<D0>(uint64_t a1@<X8>)
{
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  double result = *(double *)&v7;
  *(_OWORD *)(a1 + 48) = v7;
  return result;
}

uint64_t sub_1001BAB18@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100010218(&qword_100801E58);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100801E88);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_100801E90);
  __chkstk_darwin(v11);
  uint64_t v13 = (uint64_t *)((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  switch((unint64_t)a1)
  {
    case 0uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      *uint64_t v13 = Image.init(systemName:)();
      swift_storeEnumTagMultiPayload();
      sub_100014488(&qword_100801E80, &qword_100801E88);
      _ConditionalContent<>.init(storage:)();
      uint64_t v19 = sub_100010218(&qword_100801E78);
      uint64_t result = (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(a2, 0, 1, v19);
      break;
    case 1uLL:
    case 6uLL:
      uint64_t v14 = sub_100010218(&qword_100801E78);
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
      uint64_t result = v15(a2, 1, 1, v14);
      break;
    default:
      sub_1001BBBA4(a1);
      id v17 = a1;
      ProgressView.init<>(_:)();
      (*(void (**)(uint64_t *, char *, uint64_t))(v8 + 16))(v13, v10, v7);
      swift_storeEnumTagMultiPayload();
      sub_100014488(&qword_100801E80, &qword_100801E88);
      _ConditionalContent<>.init(storage:)();
      sub_1001BC068(a1);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      uint64_t v18 = sub_100010218(&qword_100801E78);
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 0, 1, v18);
      uint64_t result = sub_1001BC088((uint64_t)v6, a2);
      break;
  }
  return result;
}

uint64_t sub_1001BAF28@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1001BBBC4(a1);
  if (v3)
  {
    sub_100014344();
    uint64_t result = Text.init<A>(_:)();
    uint64_t v7 = v6 & 1;
  }
  else
  {
    uint64_t result = 0;
    uint64_t v7 = 0;
    uint64_t v5 = 0;
  }
  *a2 = result;
  a2[1] = v3;
  a2[2] = v7;
  a2[3] = v5;
  return result;
}

uint64_t sub_1001BAF90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218(&qword_100801E48);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218(&qword_1007FCAB8);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == 3)
  {
    uint64_t v13 = (void *)swift_allocObject();
    void v13[2] = 3;
    v13[3] = a2;
    v13[4] = a3;
    sub_1001BBBA4((id)3);
    swift_retain();
    Button.init(action:label:)();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v8, v12, v9);
    swift_storeEnumTagMultiPayload();
    sub_100014488(&qword_1007FCAC0, &qword_1007FCAB8);
    _ConditionalContent<>.init(storage:)();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    swift_storeEnumTagMultiPayload();
    sub_100014488(&qword_1007FCAC0, &qword_1007FCAB8);
    return _ConditionalContent<>.init(storage:)();
  }
}

uint64_t sub_1001BB224@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v2 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v4 = v3;
  char v6 = v5 & 1;
  uint64_t v7 = Text.bold()();
  uint64_t v9 = v8;
  char v11 = v10;
  uint64_t v13 = v12;
  sub_10002B8D0(v2, v4, v6);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a1 = v7;
  *(void *)(a1 + 8) = v9;
  *(unsigned char *)(a1 + 16) = v11 & 1;
  *(void *)(a1 + 24) = v13;
  return result;
}

uint64_t sub_1001BB300@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BA260(*v1, v1[1], v1[2], a1);
}

uint64_t sub_1001BB30C()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001BB34C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_10002C194;
  return sub_1003DA088(a1, v4, v5, v6, v7);
}

uint64_t destroy for EmptyTranscriptStateView(id *a1)
{
  if ((unint64_t)*a1 >= 7) {

  }
  return swift_release();
}

uint64_t *_s7Journal24EmptyTranscriptStateViewVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if ((unint64_t)*a2 >= 6)
  {
    if (*a2 != 6)
    {
      *a1 = v4;
      id v7 = (id)v4;
      goto LABEL_3;
    }
    uint64_t v4 = 6;
  }
  *a1 = v4;
LABEL_3:
  uint64_t v5 = a2[2];
  a1[1] = a2[1];
  a1[2] = v5;
  swift_retain();
  return a1;
}

unint64_t *assignWithCopy for EmptyTranscriptStateView(unint64_t *a1, unint64_t *a2)
{
  uint64_t v4 = (void *)*a1;
  unint64_t v5 = *a2;
  if (*a1 != 6)
  {
    if (v5 == 6)
    {
      sub_1001BB574((uint64_t)a1);
    }
    else
    {
      if ((unint64_t)v4 < 6)
      {
        if (v5 < 6) {
          goto LABEL_13;
        }
        goto LABEL_9;
      }
      if (v5 >= 6)
      {
        *a1 = v5;
        id v9 = (id)v5;

        goto LABEL_14;
      }
    }
    unint64_t v5 = *a2;
    goto LABEL_13;
  }
  if (v5 < 6)
  {
LABEL_13:
    *a1 = v5;
    goto LABEL_14;
  }
  if (v5 == 6)
  {
    unint64_t v5 = 6;
    goto LABEL_13;
  }
LABEL_9:
  *a1 = v5;
  id v6 = (id)v5;
LABEL_14:
  unint64_t v7 = a2[2];
  a1[1] = a2[1];
  a1[2] = v7;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1001BB574(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for EmptyTranscriptStateView(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  unint64_t v5 = *(void *)a2;
  if (*(void *)a1 == 6)
  {
    if (v5 != 6)
    {
      *(void *)a1 = v5;
      goto LABEL_9;
    }
LABEL_8:
    *(void *)a1 = 6;
    goto LABEL_9;
  }
  if (v5 == 6)
  {
    sub_1001BB574(a1);
    goto LABEL_8;
  }
  if ((unint64_t)v4 >= 6)
  {
    if (v5 >= 6)
    {
      *(void *)a1 = v5;
    }
    else
    {

      *(void *)a1 = v5;
    }
  }
  else
  {
    *(void *)a1 = v5;
  }
LABEL_9:
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmptyTranscriptStateView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmptyTranscriptStateView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptyTranscriptStateView()
{
  return &type metadata for EmptyTranscriptStateView;
}

unint64_t sub_1001BB718()
{
  unint64_t result = qword_100801DA8;
  if (!qword_100801DA8)
  {
    sub_100014440(&qword_100801DB0);
    sub_100014488(&qword_100801DB8, &qword_100801DC0);
    sub_100014488(&qword_100801DC8, &qword_100801DD0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801DA8);
  }
  return result;
}

uint64_t sub_1001BB7DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001BB7F8()
{
  return sub_1001BA9EC();
}

uint64_t sub_1001BB804@<X0>(uint64_t *a1@<X8>)
{
  return sub_1001BAF28(*(void *)(v1 + 16), a1);
}

uint64_t sub_1001BB810()
{
  return sub_1001BAF90(v0[2], v0[3], v0[4]);
}

unint64_t sub_1001BB81C()
{
  unint64_t result = qword_100801E10;
  if (!qword_100801E10)
  {
    sub_100014440(&qword_100801DF8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801E10);
  }
  return result;
}

unint64_t sub_1001BB888()
{
  unint64_t result = qword_100801E18;
  if (!qword_100801E18)
  {
    sub_100014440(&qword_100801E00);
    sub_100014488(&qword_1007FCAC0, &qword_1007FCAB8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801E18);
  }
  return result;
}

uint64_t sub_1001BB928()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_1001BB94C(uint64_t a1)
{
  return sub_1001BBA54(a1);
}

uint64_t sub_1001BB964(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CircularDownloadProgressViewStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001BB9C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001BBA08()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_1001BBA2C()
{
  return EnvironmentValues.controlSize.getter();
}

uint64_t sub_1001BBA54(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ControlSize();
  __n128 v3 = __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, __n128))(v5 + 16))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
  return EnvironmentValues.controlSize.setter();
}

uint64_t sub_1001BBB1C(uint64_t a1)
{
  return sub_1001BBA54(a1);
}

uint64_t sub_1001BBB34()
{
  uint64_t v1 = *(void **)(v0 + 16);
  if ((unint64_t)v1 >= 7) {

  }
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001BBB7C()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

id sub_1001BBBA4(id result)
{
  if (result != (id)6) {
    return sub_1001BBBB4(result);
  }
  return result;
}

id sub_1001BBBB4(id result)
{
  if ((unint64_t)result >= 6) {
    return result;
  }
  return result;
}

uint64_t sub_1001BBBC4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Locale();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v3 - 8);
  uint64_t result = 0;
  switch(a1)
  {
    case 1:
    case 6:
      return result;
    case 2:
      id v5 = (id)MobileGestalt_get_current_device();
      if (!v5)
      {
        __break(1u);
        JUMPOUT(0x1001BBEB8);
      }
      id v6 = v5;
      MobileGestalt_get_wapiCapability();

      goto LABEL_4;
    default:
LABEL_4:
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t result = String.init(localized:table:bundle:locale:comment:)();
      break;
  }
  return result;
}

uint64_t sub_1001BBED4@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BAB18(*(void **)(v1 + 16), a1);
}

unint64_t sub_1001BBEE0()
{
  unint64_t result = qword_100801E60;
  if (!qword_100801E60)
  {
    sub_100014440(&qword_100801E50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801E60);
  }
  return result;
}

unint64_t sub_1001BBF54()
{
  unint64_t result = qword_100801E68;
  if (!qword_100801E68)
  {
    sub_100014440(&qword_100801E58);
    sub_1001BBFC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801E68);
  }
  return result;
}

unint64_t sub_1001BBFC8()
{
  unint64_t result = qword_100801E70;
  if (!qword_100801E70)
  {
    sub_100014440(&qword_100801E78);
    sub_100014488(&qword_100801E80, &qword_100801E88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801E70);
  }
  return result;
}

void sub_1001BC068(id a1)
{
  if (a1 != (id)6) {
    sub_1001BC078(a1);
  }
}

void sub_1001BC078(id a1)
{
  if ((unint64_t)a1 >= 6) {
}
  }

uint64_t sub_1001BC088(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100801E58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for EmptyTranscriptStateView.Action(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001BC18CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmptyTranscriptStateView.Action()
{
  return &type metadata for EmptyTranscriptStateView.Action;
}

unint64_t sub_1001BC1C8()
{
  unint64_t result = qword_100801E98;
  if (!qword_100801E98)
  {
    sub_100014440(&qword_100801E38);
    sub_100014440(&qword_100801DE0);
    type metadata accessor for BorderedButtonStyle();
    sub_100014440(&qword_100801DD8);
    type metadata accessor for CircularDownloadProgressViewStyle();
    sub_100014488(&qword_100801E20, &qword_100801DD8);
    sub_1001BB9C0(&qword_100801E28, (void (*)(uint64_t))type metadata accessor for CircularDownloadProgressViewStyle);
    swift_getOpaqueTypeConformance2();
    sub_1001BB9C0(&qword_100801E30, (void (*)(uint64_t))&type metadata accessor for BorderedButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100014488(&qword_100801EA0, &qword_100801E40);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801E98);
  }
  return result;
}

unint64_t sub_1001BC398()
{
  unint64_t result = qword_100801EA8;
  if (!qword_100801EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100801EA8);
  }
  return result;
}

void sub_1001BC674()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Journal28TranscriptWaitingHostingView_hostingController;
  int v3 = *(void **)&v0[OBJC_IVAR____TtC7Journal28TranscriptWaitingHostingView_hostingController];
  if (v3)
  {
    id v4 = [v3 view];
    if (!v4)
    {
      __break(1u);
      return;
    }
    uint64_t v5 = v4;
    [v4 removeFromSuperview];
  }
  State.init(wrappedValue:)();
  id v6 = objc_allocWithZone((Class)sub_100010218(&qword_100801EE0));
  uint64_t v7 = (void *)UIHostingController.init(rootView:)();
  id v8 = [v7 view];
  if (v8)
  {
    id v9 = v8;
    [v1 addSubview:v8];
    LODWORD(v10) = 1148846080;
    [v9 setContentHuggingPriority:0 forAxis:v10];
    LODWORD(v11) = 1148846080;
    [v9 setContentHuggingPriority:1 forAxis:v11];
    LODWORD(v12) = 1148846080;
    [v9 setContentCompressionResistancePriority:0 forAxis:v12];
    LODWORD(v13) = 1148846080;
    [v9 setContentCompressionResistancePriority:1 forAxis:v13];
    [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v14 = [v9 widthAnchor];
    id v15 = [v1 widthAnchor];
    id v16 = [v14 constraintEqualToAnchor:v15];

    [v16 setActive:1];
    id v17 = [v9 heightAnchor];
    id v18 = [v1 heightAnchor];
    id v19 = [v17 constraintEqualToAnchor:v18];

    [v19 setActive:1];
    uint64_t v20 = *(void **)&v1[v2];
    *(void *)&v1[v2] = v7;

    uint64_t v7 = v20;
  }
}

id sub_1001BC8E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TranscriptWaitingHostingView();
  return [super dealloc];
}

uint64_t type metadata accessor for TranscriptWaitingHostingView()
{
  return self;
}

uint64_t sub_1001BC950@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X8>, double a9@<D0>)
{
  LODWORD(v44) = a7;
  uint64_t v43 = a6;
  int v42 = a5;
  uint64_t v41 = a4;
  int v40 = a3;
  uint64_t v13 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy();
  uint64_t v50 = *(void *)(v13 - 8);
  uint64_t v51 = v13;
  __chkstk_darwin(v13);
  uint64_t v48 = (char *)&v38 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy();
  uint64_t v47 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v39 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth();
  uint64_t v45 = *(void *)(v20 - 8);
  uint64_t v46 = v20;
  __chkstk_darwin(v20);
  uint64_t v38 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for ScrollPosition();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v25 = (char *)&v38 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B3BC(a1, a8);
  uint64_t v26 = (int *)type metadata accessor for ScrollableWaveformView(0);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v25, a2, v22);
  State.init(wrappedValue:)();
  (*(void (**)(uint64_t, uint64_t))(v23 + 8))(a2, v22);
  uint64_t v27 = (void *)(a8 + v26[6]);
  double v52 = a9;
  State.init(wrappedValue:)();
  uint64_t v28 = v54;
  *uint64_t v27 = v53;
  v27[1] = v28;
  uint64_t v29 = a8 + v26[7];
  LOBYTE(v52) = v40;
  State.init(wrappedValue:)();
  uint64_t v30 = v54;
  *(unsigned char *)uint64_t v29 = v53;
  *(void *)(v29 + 8) = v30;
  uint64_t v31 = a8 + v26[8];
  *(void *)uint64_t v31 = v41;
  *(unsigned char *)(v31 + 8) = v42 & 1;
  uint64_t v32 = a8 + v26[9];
  *(void *)uint64_t v32 = v43;
  *(unsigned char *)(v32 + 8) = v44 & 1;
  uint64_t v44 = a8 + v26[10];
  uint64_t v33 = v38;
  static Duration.UnitsFormatStyle.UnitWidth.wide.getter();
  (*(void (**)(char *, void, uint64_t))(v16 + 104))(v18, enum case for FloatingPointRoundingRule.toNearestOrEven(_:), v15);
  uint64_t v34 = v39;
  static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.show(length:rounded:increment:)();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_100010218(&qword_100801910);
  type metadata accessor for Duration.UnitsFormatStyle.Unit();
  uint64_t v35 = swift_allocObject();
  *(_OWORD *)(v35 + 16) = xmmword_1006D7C30;
  static Duration.UnitsFormatStyle.Unit.hours.getter();
  static Duration.UnitsFormatStyle.Unit.minutes.getter();
  static Duration.UnitsFormatStyle.Unit.seconds.getter();
  sub_1001B05CC(v35);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v36 = v48;
  static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter();
  static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v51);
  (*(void (**)(char *, uint64_t))(v47 + 8))(v34, v49);
  return (*(uint64_t (**)(char *, uint64_t))(v45 + 8))(v33, v46);
}

uint64_t sub_1001BCF00()
{
  sub_1001AF310();
  EnvironmentValues.subscript.getter();
  return v1;
}

uint64_t sub_1001BCF3C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v23 = a1;
  uint64_t v3 = type metadata accessor for PinnedScrollableViews();
  __chkstk_darwin(v3);
  uint64_t v22 = sub_100010218(&qword_1008023A0);
  uint64_t v4 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  id v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100010218(&qword_1008023A8);
  __chkstk_darwin(v21);
  id v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 24);
  uint64_t v10 = *(void *)(v1 + 32);
  sub_10002E0BC((void *)v1, v9);
  if ((*(double (**)(uint64_t, uint64_t))(v10 + 32))(v9, v10) > 0.0)
  {
    uint64_t v12 = *(void *)(v1 + 64);
    char v13 = *(unsigned char *)(v1 + 72);
    sub_100026CCC(*(void *)(v2 + 64), *(unsigned char *)(v2 + 72));
    sub_100666E78(v12, v13);
    uint64_t v11 = sub_100026DF8(v12, v13);
  }
  uint64_t v20 = (uint64_t)&v20;
  __chkstk_darwin(v11);
  *(&v20 - 2) = v2;
  static VerticalAlignment.center.getter();
  LODWORD(v24[0]) = 0;
  sub_1001C1A84(&qword_1008023B0, (void (*)(uint64_t))&type metadata accessor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)();
  sub_100010218(&qword_1008023B8);
  sub_1001C4A50(&qword_1008023C0, &qword_1008023B8, (void (*)(void))sub_1001C46F0);
  LazyHStack.init(alignment:spacing:pinnedViews:content:)();
  sub_1001C479C(v2, (uint64_t)v24);
  uint64_t v14 = (_OWORD *)swift_allocObject();
  long long v15 = v25[0];
  v14[3] = v24[2];
  v14[4] = v15;
  *(_OWORD *)((char *)v14 + 73) = *(_OWORD *)((char *)v25 + 9);
  long long v16 = v24[1];
  v14[1] = v24[0];
  v14[2] = v16;
  uint64_t v17 = v22;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v6, v22);
  id v18 = &v8[*(int *)(v21 + 36)];
  *(void *)id v18 = sub_1001BD614;
  *((void *)v18 + 1) = 0;
  *((void *)v18 + 2) = sub_1001C47D8;
  *((void *)v18 + 3) = v14;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v17);
  return sub_10002C4EC((uint64_t)v8, v23, &qword_1008023A8);
}

uint64_t sub_1001BD2FC(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  sub_10002E0BC(a1, v2);
  uint64_t v4 = *(void *)((*(uint64_t (**)(uint64_t, uint64_t))(v3 + 16))(v2, v3) + 16);
  swift_bridgeObjectRelease();
  uint64_t v11 = 0;
  uint64_t v12 = v4;
  swift_getKeyPath();
  sub_1001C479C((uint64_t)a1, (uint64_t)v9);
  uint64_t v5 = (_OWORD *)swift_allocObject();
  long long v6 = v10[0];
  v5[3] = v9[2];
  v5[4] = v6;
  *(_OWORD *)((char *)v5 + 73) = *(_OWORD *)((char *)v10 + 9);
  long long v7 = v9[1];
  v5[1] = v9[0];
  v5[2] = v7;
  sub_100010218(&qword_100801A78);
  sub_100010218(&qword_1008023D0);
  sub_1001B5294();
  sub_1001C46F0();
  return ForEach<>.init(_:id:content:)();
}

uint64_t sub_1001BD428@<X0>(unint64_t *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Capsule();
  __chkstk_darwin(v6 - 8);
  id v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v9 = *a1;
  uint64_t v10 = a2[3];
  uint64_t v11 = a2[4];
  sub_10002E0BC(a2, v10);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  if ((v9 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v9 < *(void *)(result + 16))
  {
    swift_bridgeObjectRelease();
    uint64_t v13 = a2[7];
    *(void *)&long long v19 = a2[6];
    *((void *)&v19 + 1) = v13;
    sub_100010218(&qword_100802268);
    State.wrappedValue.getter();
    uint64_t v14 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v15 = type metadata accessor for RoundedCornerStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v15 - 8) + 104))(v8, v14, v15);
    static Alignment.center.getter();
    _FrameLayout.init(width:height:alignment:)();
    sub_1001C4680((uint64_t)v8, a3, (uint64_t (*)(void))&type metadata accessor for Capsule);
    long long v16 = (_OWORD *)(a3 + *(int *)(sub_100010218(&qword_1008023D0) + 36));
    long long v17 = v20;
    *long long v16 = v19;
    v16[1] = v17;
    void v16[2] = v21;
    return sub_1001C3944((uint64_t)v8, (uint64_t (*)(void))&type metadata accessor for Capsule);
  }
  __break(1u);
  return result;
}

uint64_t sub_1001BD614@<X0>(void *a1@<X8>)
{
  uint64_t result = GeometryProxy.size.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001BD640()
{
  return State.wrappedValue.setter();
}

void sub_1001BD698()
{
  qword_10083D070 = 0x4046000000000000;
}

void sub_1001BD6A8()
{
  qword_10083D078 = 0x401C000000000000;
}

void sub_1001BD6B8()
{
  qword_10083D080 = 0x4030000000000000;
}

uint64_t sub_1001BD6CC()
{
  uint64_t v1 = type metadata accessor for ScrollableWaveformView(0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (uint64_t *)((char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)((char *)&v19 - v5);
  uint64_t v8 = v0 + *(int *)(v7 + 40);
  uint64_t v9 = *(void *)v8;
  char v10 = *(unsigned char *)(v8 + 8);
  sub_100026CCC(*(void *)v8, v10);
  char v11 = sub_100666714(v9, v10);
  sub_100026DF8(v9, v10);
  sub_1001C4680(v0, (uint64_t)v6, type metadata accessor for ScrollableWaveformView);
  if (v11)
  {
    char v12 = 1;
  }
  else
  {
    uint64_t v13 = v6[3];
    uint64_t v14 = v6[4];
    sub_10002E0BC(v6, v13);
    char v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 48))(v13, v14);
    sub_1001C4680((uint64_t)v6, (uint64_t)v3, type metadata accessor for ScrollableWaveformView);
    if (v15)
    {
      char v12 = 0;
    }
    else
    {
      uint64_t v16 = v3[3];
      uint64_t v17 = v3[4];
      sub_10002E0BC(v3, v16);
      char v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v17 + 40))(v16, v17) ^ 1;
    }
    sub_1001C3944((uint64_t)v3, type metadata accessor for ScrollableWaveformView);
  }
  sub_1001C3944((uint64_t)v6, type metadata accessor for ScrollableWaveformView);
  return v12 & 1;
}

uint64_t sub_1001BD894@<X0>(double *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ScrollableWaveformView(0);
  __chkstk_darwin(v4);
  uint64_t v6 = &v34[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v9 = &v34[-v8];
  uint64_t v10 = v1[3];
  uint64_t v11 = v1[4];
  sub_10002E0BC(v1, v10);
  if (((*(uint64_t (**)(uint64_t, uint64_t))(v11 + 48))(v10, v11) & 1) == 0)
  {
    char v15 = (char *)v1 + *(int *)(v4 + 28);
    char v16 = *v15;
    uint64_t v17 = *((void *)v15 + 1);
    v34[8] = v16;
    uint64_t v35 = v17;
    sub_100010218(&qword_1008014F0);
    State.wrappedValue.getter();
    int v18 = v36;
    sub_1001C4680((uint64_t)v2, (uint64_t)v9, type metadata accessor for ScrollableWaveformView);
    if (v18 == 1)
    {
      uint64_t v19 = v9[3];
      uint64_t v20 = v9[4];
      sub_10002E0BC(v9, v19);
      char v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 40))(v19, v20);
      sub_1001C3944((uint64_t)v9, type metadata accessor for ScrollableWaveformView);
      sub_1001C4680((uint64_t)v2, (uint64_t)v6, type metadata accessor for ScrollableWaveformView);
      if ((v21 & 1) == 0)
      {
        uint64_t v22 = v6[3];
        uint64_t v23 = v6[4];
        sub_10002E0BC(v6, v22);
        char v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 56))(v22, v23);
        sub_1001C3944((uint64_t)v6, type metadata accessor for ScrollableWaveformView);
        if ((v24 & 1) == 0)
        {
          uint64_t v25 = type metadata accessor for ScrollableWaveformView.ScrollPositionRequest(0);
          return (*(uint64_t (**)(double *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(a1, 1, 1, v25);
        }
        goto LABEL_11;
      }
    }
    else
    {
      sub_1001C3944((uint64_t)v9, type metadata accessor for ScrollableWaveformView);
      sub_1001C4680((uint64_t)v2, (uint64_t)v6, type metadata accessor for ScrollableWaveformView);
    }
    sub_1001C3944((uint64_t)v6, type metadata accessor for ScrollableWaveformView);
LABEL_11:
    uint64_t v26 = v2[3];
    uint64_t v27 = v2[4];
    sub_10002E0BC(v2, v26);
    double v28 = (*(double (**)(uint64_t, uint64_t))(v27 + 24))(v26, v27);
    uint64_t v29 = (char *)v2 + *(int *)(v4 + 36);
    uint64_t v30 = *(void *)v29;
    char v31 = v29[8];
    sub_100026CCC(*(void *)v29, v31);
    double v32 = sub_100666E78(v30, v31);
    sub_100026DF8(v30, v31);
    *a1 = v28 * v32;
    uint64_t v33 = type metadata accessor for ScrollableWaveformView.ScrollPositionRequest(0);
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(double *, void, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(a1, 0, 1, v33);
  }
  UUID.init()();
  uint64_t v12 = type metadata accessor for ScrollableWaveformView.ScrollPositionRequest(0);
  swift_storeEnumTagMultiPayload();
  uint64_t v13 = *(uint64_t (**)(double *, void, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);

  return v13(a1, 0, 1, v12);
}

uint64_t sub_1001BDC6C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v200 = a1;
  uint64_t v199 = type metadata accessor for AccessibilityTraits();
  uint64_t v198 = *(void *)(v199 - 8);
  __chkstk_darwin(v199);
  uint64_t v197 = (char *)&v149 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = type metadata accessor for Duration.UnitsFormatStyle();
  uint64_t v194 = *(void *)(v196 - 8);
  __chkstk_darwin(v196);
  uint64_t v195 = (char *)&v149 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v193 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v192 = *(void *)(v193 - 8);
  __chkstk_darwin(v193);
  uint64_t v191 = (char *)&v149 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = type metadata accessor for ColorResource();
  uint64_t v151 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  long long v150 = (char *)&v149 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v175 = sub_100010218(&qword_100802158);
  __chkstk_darwin(v175);
  long long v174 = (double *)((char *)&v149 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_100010218(&qword_100802160);
  __chkstk_darwin(v7 - 8);
  uint64_t v201 = (uint64_t (*)(uint64_t))((char *)&v149 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v208 = type metadata accessor for ScrollableWaveformView(0);
  uint64_t v171 = *(void *)(v208 - 8);
  __chkstk_darwin(v208);
  uint64_t v204 = (uint64_t)&v149 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  long long v159 = (char *)&v149 - v11;
  __chkstk_darwin(v12);
  long long v149 = (void **)((char *)&v149 - v13);
  uint64_t v170 = v14;
  __chkstk_darwin(v15);
  uint64_t v17 = (void **)((char *)&v149 - v16);
  uint64_t v153 = type metadata accessor for ScrollIndicatorVisibility();
  uint64_t v18 = *(void *)(v153 - 8);
  __chkstk_darwin(v153);
  uint64_t v20 = (char *)&v149 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v205 = sub_100010218(&qword_100802168);
  uint64_t v21 = *(void *)(v205 - 8);
  __chkstk_darwin(v205);
  uint64_t v23 = (char *)&v149 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v157 = sub_100010218(&qword_100802170);
  uint64_t v155 = *(void *)(v157 - 8);
  __chkstk_darwin(v157);
  uint64_t v25 = (char *)&v149 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = sub_100010218(&qword_100802178);
  uint64_t v158 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  long long v156 = (char *)&v149 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_100010218(&qword_100802180);
  uint64_t v160 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  uint64_t v206 = (char *)&v149 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_100010218(&qword_100802188);
  uint64_t v163 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  long long v162 = (char *)&v149 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_100010218(&qword_100802190);
  uint64_t v167 = *(void *)(v168 - 8);
  __chkstk_darwin(v168);
  long long v165 = (char *)&v149 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v202 = sub_100010218(&qword_100802198);
  __chkstk_darwin(v202);
  long long v166 = (char *)&v149 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = sub_100010218(&qword_1008021A0);
  uint64_t v173 = *(void *)(v172 - 8);
  __chkstk_darwin(v172);
  long long v169 = (char *)&v149 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v180 = sub_100010218(&qword_1008021A8);
  *(void *)&long long v179 = *(void *)(v180 - 8);
  __chkstk_darwin(v180);
  *(void *)&long long v203 = (char *)&v149 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v177 = sub_100010218(&qword_1008021B0);
  __chkstk_darwin(v177);
  long long v176 = (char *)&v149 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v178 = sub_100010218(&qword_1008021B8);
  __chkstk_darwin(v178);
  uint64_t v181 = (uint64_t)&v149 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v184 = sub_100010218(&qword_1008021C0);
  __chkstk_darwin(v184);
  uint64_t v182 = (uint64_t)&v149 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v186 = sub_100010218(&qword_1008021C8);
  uint64_t v185 = *(void *)(v186 - 8);
  __chkstk_darwin(v186);
  uint64_t v183 = (char *)&v149 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = sub_100010218(&qword_1008021D0);
  __chkstk_darwin(v190);
  uint64_t v187 = (char *)&v149 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v38);
  uint64_t v189 = (char *)&v149 - v39;
  __chkstk_darwin(v40);
  id v188 = (char *)&v149 - v41;
  static Axis.Set.horizontal.getter();
  uint64_t v207 = v1;
  uint64_t v209 = v1;
  sub_100010218(&qword_1008021D8);
  sub_1001C2EF4();
  ScrollView.init(_:showsIndicators:content:)();
  static ScrollIndicatorVisibility.hidden.getter();
  unsigned __int8 v42 = static Axis.Set.vertical.getter();
  unsigned __int8 v43 = static Axis.Set.horizontal.getter();
  Axis.Set.init(rawValue:)();
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v42) {
    Axis.Set.init(rawValue:)();
  }
  Axis.Set.init(rawValue:)();
  if (Axis.Set.init(rawValue:)() != v43) {
    Axis.Set.init(rawValue:)();
  }
  uint64_t v44 = sub_100014488(&qword_100802200, &qword_100802168);
  uint64_t v45 = v205;
  View.scrollIndicators(_:axes:)();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v153);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v45);
  uint64_t v46 = v207;
  uint64_t v47 = v207[3];
  uint64_t v48 = v207[4];
  sub_10002E0BC(v207, v47);
  char v49 = (*(uint64_t (**)(uint64_t, uint64_t))(v48 + 16))(v47, v48);
  sub_1001C4680((uint64_t)v46, (uint64_t)v17, type metadata accessor for ScrollableWaveformView);
  if ((v49 & 1) == 0)
  {
    uint64_t v52 = v17[3];
    uint64_t v53 = v17[4];
    sub_10002E0BC(v17, v52);
    char v54 = (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 48))(v52, v53);
    uint64_t v55 = v149;
    sub_1001C4680((uint64_t)v17, (uint64_t)v149, type metadata accessor for ScrollableWaveformView);
    uint64_t v50 = v159;
    uint64_t v51 = v154;
    if (v54)
    {
      sub_1001C3944((uint64_t)v55, type metadata accessor for ScrollableWaveformView);
      sub_1001C3944((uint64_t)v17, type metadata accessor for ScrollableWaveformView);
    }
    else
    {
      uint64_t v56 = v55[3];
      uint64_t v57 = v55[4];
      sub_10002E0BC(v55, v56);
      char v58 = (*(uint64_t (**)(uint64_t, uint64_t))(v57 + 40))(v56, v57);
      sub_1001C3944((uint64_t)v55, type metadata accessor for ScrollableWaveformView);
      sub_1001C3944((uint64_t)v17, type metadata accessor for ScrollableWaveformView);
      if ((v58 & 1) == 0) {
        goto LABEL_11;
      }
    }
    static UnitPoint.leading.getter();
    goto LABEL_12;
  }
  sub_1001C3944((uint64_t)v17, type metadata accessor for ScrollableWaveformView);
  uint64_t v50 = v159;
  uint64_t v51 = v154;
LABEL_11:
  static UnitPoint.trailing.getter();
LABEL_12:
  *(void *)&v212[0] = v205;
  *((void *)&v212[0] + 1) = v44;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v60 = v156;
  uint64_t v61 = v157;
  View.defaultScrollAnchor(_:)();
  (*(void (**)(char *, uint64_t))(v155 + 8))(v25, v61);
  uint64_t v62 = v207;
  sub_100010218(&qword_1008020A0);
  int v63 = v201;
  State.projectedValue.getter();
  *(void *)&v212[0] = v61;
  *((void *)&v212[0] + 1) = OpaqueTypeConformance2;
  uint64_t v64 = swift_getOpaqueTypeConformance2();
  View.scrollPosition(_:anchor:)();
  sub_10001457C((uint64_t)v63, &qword_100802160);
  (*(void (**)(char *, uint64_t))(v158 + 8))(v60, v51);
  uint64_t v65 = v62[3];
  uint64_t v66 = v62[4];
  sub_10002E0BC(v62, v65);
  char v67 = (*(uint64_t (**)(uint64_t, uint64_t))(v66 + 48))(v65, v66);
  sub_1001C4680((uint64_t)v62, (uint64_t)v50, type metadata accessor for ScrollableWaveformView);
  if ((v67 & 1) == 0)
  {
    uint64_t v68 = v50[3];
    uint64_t v69 = v50[4];
    sub_10002E0BC(v50, v68);
    (*(void (**)(uint64_t, uint64_t))(v69 + 40))(v68, v69);
  }
  uint64_t v201 = type metadata accessor for ScrollableWaveformView;
  sub_1001C3944((uint64_t)v50, type metadata accessor for ScrollableWaveformView);
  *(void *)&v212[0] = v51;
  *((void *)&v212[0] + 1) = v64;
  uint64_t v70 = swift_getOpaqueTypeConformance2();
  uint64_t v71 = v162;
  uint64_t v72 = v161;
  char v73 = v206;
  View.scrollDisabled(_:)();
  (*(void (**)(char *, uint64_t))(v160 + 8))(v73, v72);
  uint64_t v74 = v174;
  uint64_t v75 = (uint64_t)v207;
  sub_1001BD894(v174);
  uint64_t v76 = v204;
  sub_1001C4680(v75, v204, type metadata accessor for ScrollableWaveformView);
  uint64_t v77 = *(unsigned __int8 *)(v171 + 80);
  uint64_t v78 = (uint64_t (*)(uint64_t))((v77 + 16) & ~v77);
  uint64_t v206 = (char *)v78 + v170;
  uint64_t v205 = v77 | 7;
  uint64_t v79 = swift_allocObject();
  sub_1001C2FEC(v76, (uint64_t)v78 + v79);
  *(void *)&v212[0] = v72;
  *((void *)&v212[0] + 1) = v70;
  swift_getOpaqueTypeConformance2();
  sub_1001C30D0();
  char v80 = v165;
  uint64_t v81 = v164;
  View.onChange<A>(of:initial:_:)();
  swift_release();
  sub_10001457C((uint64_t)v74, &qword_100802158);
  (*(void (**)(char *, uint64_t))(v163 + 8))(v71, v81);
  uint64_t v82 = v201;
  sub_1001C4680(v75, v76, v201);
  uint64_t v83 = swift_allocObject();
  sub_1001C2FEC(v76, (uint64_t)v78 + v83);
  uint64_t v84 = v167;
  uint64_t v85 = (uint64_t)v166;
  uint64_t v86 = v168;
  (*(void (**)(char *, char *, uint64_t))(v167 + 16))(v166, v80, v168);
  double v87 = (uint64_t (**)())(v85 + *(int *)(v202 + 36));
  *double v87 = sub_1001C332C;
  v87[1] = (uint64_t (*)())v83;
  v87[2] = 0;
  v87[3] = 0;
  (*(void (**)(char *, uint64_t))(v84 + 8))(v80, v86);
  sub_1001C4680(v75, v76, v82);
  uint64_t v88 = swift_allocObject();
  sub_1001C2FEC(v76, (uint64_t)v78 + v88);
  unint64_t v89 = sub_1001C3410();
  uint64_t v90 = v169;
  uint64_t v91 = v202;
  View.onScrollPhaseChange(_:)();
  swift_release();
  sub_10001457C(v85, &qword_100802198);
  sub_1001C4680(v75, v76, v201);
  uint64_t v92 = (char *)v75;
  uint64_t v93 = swift_allocObject();
  uint64_t v201 = v78;
  sub_1001C2FEC(v76, (uint64_t)v78 + v93);
  *(void *)&v212[0] = v91;
  *((void *)&v212[0] + 1) = v89;
  swift_getOpaqueTypeConformance2();
  uint64_t v94 = v172;
  View.onScrollGeometryChange<A>(for:of:action:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v173 + 8))(v90, v94);
  uint64_t v95 = v75 + *(int *)(v208 + 32);
  uint64_t v96 = *(void *)v95;
  LOBYTE(v84) = *(unsigned char *)(v95 + 8);
  sub_100026CCC(*(void *)v95, v84);
  LOBYTE(v75) = sub_100666714(v96, v84);
  sub_100026DF8(v96, v84);
  if (v75)
  {
    if (qword_1007F7FD0 != -1) {
      swift_once();
    }
    uint64_t v97 = v152;
    uint64_t v98 = sub_100026A54(v152, (uint64_t)qword_10083F090);
    (*(void (**)(char *, uint64_t, uint64_t))(v151 + 16))(v150, v98, v97);
    uint64_t v99 = Color.init(_:)();
    unsigned __int8 v100 = static Edge.Set.bottom.getter();
    if (qword_1007F6AC8 != -1) {
      swift_once();
    }
    EdgeInsets.init(_all:)();
    uint64_t v102 = v101;
    uint64_t v104 = v103;
    uint64_t v106 = v105;
    uint64_t v108 = v107;
    uint64_t v109 = v100;
  }
  else
  {
    uint64_t v99 = 0;
    uint64_t v109 = 0;
    uint64_t v102 = 0;
    uint64_t v104 = 0;
    uint64_t v106 = 0;
    uint64_t v108 = 0;
  }
  uint64_t v110 = static Alignment.center.getter();
  uint64_t v112 = v111;
  uint64_t v113 = v179;
  uint64_t v114 = (uint64_t)v176;
  uint64_t v115 = v203;
  uint64_t v116 = v180;
  (*(void (**)(char *, void, void))(v179 + 16))(v176, v203, v180);
  uint64_t v117 = v114 + *(int *)(v177 + 36);
  *(void *)uint64_t v117 = v99;
  *(void *)(v117 + 8) = v109;
  *(void *)(v117 + 16) = v102;
  *(void *)(v117 + 24) = v104;
  *(void *)(v117 + 32) = v106;
  *(void *)(v117 + 40) = v108;
  *(unsigned char *)(v117 + 48) = 0;
  *(void *)(v117 + 56) = v110;
  *(void *)(v117 + 64) = v112;
  (*(void (**)(uint64_t, uint64_t))(v113 + 8))(v115, v116);
  uint64_t v118 = static Alignment.top.getter();
  uint64_t v120 = v119;
  sub_1001C0EDC(v92, (uint64_t)v212);
  long long v203 = v212[0];
  long long v202 = v212[1];
  long long v180 = v212[2];
  long long v179 = v212[3];
  long long v177 = v212[4];
  long long v175 = v212[5];
  uint64_t v121 = v213;
  LOBYTE(v113) = v214;
  uint64_t v122 = v181;
  sub_10001B220(v114, v181, &qword_1008021B0);
  uint64_t v123 = v122 + *(int *)(v178 + 36);
  long long v124 = v202;
  *(_OWORD *)uint64_t v123 = v203;
  *(_OWORD *)(v123 + 16) = v124;
  long long v125 = v179;
  *(_OWORD *)(v123 + 32) = v180;
  *(_OWORD *)(v123 + 48) = v125;
  long long v126 = v175;
  *(_OWORD *)(v123 + 64) = v177;
  *(_OWORD *)(v123 + 80) = v126;
  *(void *)(v123 + 96) = v121;
  *(unsigned char *)(v123 + 104) = v113;
  *(void *)(v123 + 112) = v118;
  *(void *)(v123 + 120) = v120;
  sub_10001457C(v114, &qword_1008021B0);
  uint64_t v127 = v204;
  sub_1001C4680((uint64_t)v92, v204, type metadata accessor for ScrollableWaveformView);
  uint64_t v128 = swift_allocObject();
  sub_1001C2FEC(v127, (uint64_t)v201 + v128);
  uint64_t v129 = v182;
  sub_10001B220(v122, v182, &qword_1008021B8);
  uint64_t v130 = v184;
  uint64_t v131 = (void *)(v129 + *(int *)(v184 + 36));
  void *v131 = sub_1001C1174;
  v131[1] = 0;
  v131[2] = sub_1001C3670;
  v131[3] = v128;
  sub_10001457C(v122, &qword_1008021B8);
  uint64_t v132 = v191;
  static AccessibilityChildBehavior.ignore.getter();
  unint64_t v133 = sub_1001C36E0();
  uint64_t v134 = v183;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v192 + 8))(v132, v193);
  sub_10001457C(v129, &qword_1008021C0);
  if (qword_1007F7B20 != -1) {
    swift_once();
  }
  v212[0] = xmmword_10083E7E8;
  uint64_t v210 = v130;
  unint64_t v211 = v133;
  swift_getOpaqueTypeConformance2();
  sub_100014344();
  uint64_t v135 = (uint64_t)v187;
  uint64_t v136 = v186;
  View.accessibilityLabel<A>(_:)();
  (*(void (**)(char *, uint64_t))(v185 + 8))(v134, v136);
  uint64_t v137 = *((void *)v92 + 3);
  uint64_t v138 = *((void *)v92 + 4);
  sub_10002E0BC(v92, v137);
  (*(void (**)(uint64_t, uint64_t))(v138 + 24))(v137, v138);
  *(void *)&v212[0] = static Duration.seconds(_:)();
  *((void *)&v212[0] + 1) = v139;
  (*(void (**)(char *, char *, uint64_t))(v194 + 16))(v195, &v92[*(int *)(v208 + 40)], v196);
  sub_1001C1A84(&qword_1008019E8, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle);
  uint64_t v140 = Text.init<A>(_:format:)();
  uint64_t v142 = v141;
  char v144 = v143 & 1;
  uint64_t v145 = (uint64_t)v189;
  ModifiedContent<>.accessibilityValue(_:)();
  sub_10002B8D0(v140, v142, v144);
  swift_bridgeObjectRelease();
  sub_10001457C(v135, &qword_1008021D0);
  uint64_t v146 = v197;
  static AccessibilityTraits.updatesFrequently.getter();
  uint64_t v147 = (uint64_t)v188;
  ModifiedContent<>.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v198 + 8))(v146, v199);
  sub_10001457C(v145, &qword_1008021D0);
  return sub_10002C4EC(v147, v200, &qword_1008021D0);
}

uint64_t sub_1001BF720@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100010218(&qword_1008021F0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.leading.getter();
  *((void *)v6 + 1) = 0;
  v6[16] = 0;
  uint64_t v7 = sub_100010218(&qword_100802270);
  sub_1001BF7F4(a1, (uint64_t)&v6[*(int *)(v7 + 44)]);
  sub_10001B220((uint64_t)v6, a2, &qword_1008021F0);
  *(unsigned char *)(a2 + *(int *)(sub_100010218(&qword_1008021D8) + 36)) = 0;
  return sub_10001457C((uint64_t)v6, &qword_1008021F0);
}

uint64_t sub_1001BF7F4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v160 = a2;
  uint64_t v3 = sub_100010218(&qword_100802278);
  uint64_t v140 = *(void *)(v3 - 8);
  uint64_t v141 = v3;
  __chkstk_darwin(v3);
  uint64_t v155 = (char *)&v135 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_100010218(&qword_100802280);
  __chkstk_darwin(v139);
  char v144 = (char *)&v135 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_100802288);
  uint64_t v156 = *(void *)(v6 - 8);
  uint64_t v157 = v6;
  __chkstk_darwin(v6);
  char v143 = (char *)&v135 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v142 = (uint64_t)&v135 - v9;
  uint64_t v10 = sub_100010218(&qword_100802290);
  __chkstk_darwin(v10 - 8);
  uint64_t v159 = (uint64_t)&v135 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v158 = (uint64_t)&v135 - v13;
  uint64_t v162 = type metadata accessor for ColorRenderingMode();
  uint64_t v165 = *(void *)(v162 - 8);
  __chkstk_darwin(v162);
  uint64_t v161 = (char *)&v135 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = sub_100010218(&qword_1008018F0);
  uint64_t v15 = *(void *)(v149 - 8);
  __chkstk_darwin(v149);
  uint64_t v17 = (char *)&v135 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100010218(&qword_1008018F8);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v135 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v145 = sub_100010218(&qword_100802298);
  __chkstk_darwin(v145);
  uint64_t v22 = (char *)&v135 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_100010218(&qword_1008022A0);
  __chkstk_darwin(v146);
  uint64_t v148 = (uint64_t)&v135 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = sub_100010218(&qword_1008022A8);
  __chkstk_darwin(v147);
  uint64_t v152 = (char *)&v135 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v151 = sub_100010218(&qword_1008022B0);
  __chkstk_darwin(v151);
  uint64_t v154 = (uint64_t)&v135 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v26);
  long long v150 = (char *)&v135 - v27;
  __chkstk_darwin(v28);
  uint64_t v164 = (uint64_t)&v135 - v29;
  uint64_t v30 = sub_100010218(&qword_1008022B8);
  __chkstk_darwin(v30);
  uint64_t v153 = (uint64_t)&v135 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)&v135 - v33;
  __chkstk_darwin(v35);
  uint64_t v163 = (uint64_t)&v135 - v36;
  sub_100141410((uint64_t)a1, (uint64_t)&v166);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001B3BC(&v166, (uint64_t)&v174);
  *((void *)&v176 + 1) = KeyPath;
  LOBYTE(v177) = 0;
  static Edge.Set.horizontal.getter();
  if (sub_1001BD6CC())
  {
    uint64_t v38 = (void *)((char *)a1 + *(int *)(type metadata accessor for ScrollableWaveformView(0) + 24));
    uint64_t v39 = *v38;
    uint64_t v40 = v38[1];
    *(void *)&long long v166 = v39;
    *((void *)&v166 + 1) = v40;
    sub_100010218(&qword_100802268);
    State.wrappedValue.getter();
  }
  EdgeInsets.init(_all:)();
  uint64_t v189 = v41;
  uint64_t v190 = v42;
  uint64_t v191 = v43;
  uint64_t v192 = v44;
  char v193 = 0;
  SafeAreaPaddingModifier.init(edges:insets:)();
  long long v45 = v175;
  long long v46 = v176;
  *(_OWORD *)uint64_t v34 = v174;
  *((_OWORD *)v34 + 1) = v45;
  *((_OWORD *)v34 + 2) = v46;
  v34[48] = v177;
  sub_10002C4EC((uint64_t)v34, v163, &qword_1008022B8);
  uint64_t v47 = a1[3];
  uint64_t v48 = a1[4];
  char v49 = sub_10002E0BC(a1, v47);
  *((void *)&v167 + 1) = v47;
  *(void *)&long long v168 = *(void *)(v48 + 8);
  uint64_t v50 = sub_100062E54((uint64_t *)&v166);
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v47 - 8) + 16))(v50, v49, v47);
  uint64_t v51 = swift_getKeyPath();
  sub_10001B3BC(&v166, (uint64_t)&v174);
  *((void *)&v176 + 1) = 0x3FF0000000000000;
  uint64_t v184 = 0x3FF0000000000000;
  State.init(wrappedValue:)();
  long long v177 = v171;
  *(void *)&long long v178 = v51;
  BYTE8(v178) = 0;
  uint64_t v52 = v165;
  uint64_t v53 = *(void (**)(void))(v165 + 104);
  uint64_t v55 = v161;
  uint64_t v54 = v162;
  unsigned int v137 = enum case for ColorRenderingMode.nonLinear(_:);
  uint64_t v138 = v165 + 104;
  uint64_t v136 = (void (*)(char *, void, uint64_t))v53;
  v53(v161);
  sub_1001C39AC();
  View.drawingGroup(opaque:colorMode:)();
  uint64_t v56 = *(void (**)(char *, uint64_t))(v52 + 8);
  uint64_t v165 = v52 + 8;
  uint64_t v135 = v56;
  v56(v55, v54);
  sub_1001C3A00((uint64_t)&v174);
  uint64_t v57 = static Alignment.leading.getter();
  double v59 = sub_1001A462C(0.0, 1, 0.0, 1, INFINITY, 0, 0.0, 1, (uint64_t)v20, 0.0, 1, 0.0, 1, v57, v58);
  (*(void (**)(char *, uint64_t, double))(v15 + 8))(v17, v149, v59);
  uint64_t v149 = type metadata accessor for ScrollableWaveformView(0);
  uint64_t v60 = (char *)a1 + *(int *)(v149 + 32);
  uint64_t v61 = *(void *)v60;
  char v62 = v60[8];
  sub_100026CCC(*(void *)v60, v62);
  LOBYTE(v54) = sub_100666714(v61, v62);
  sub_100026DF8(v61, v62);
  if (v54)
  {
    *(void *)&long long v174 = 3;
    sub_100010218(&qword_1008022D8);
    sub_100014488(&qword_1008022E0, &qword_1008022D8);
  }
  else
  {
    *(void *)&long long v174 = static Color.clear.getter();
  }
  uint64_t v63 = AnyShapeStyle.init<A>(_:)();
  uint64_t v64 = a1[3];
  uint64_t v65 = a1[4];
  sub_10002E0BC(a1, v64);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v65 + 16))(v64, v65))
  {
    unsigned __int8 v66 = static Edge.Set.top.getter();
    unsigned __int8 v67 = static Edge.Set.bottom.getter();
    unsigned __int8 v68 = static Edge.Set.trailing.getter();
    char v69 = Edge.Set.init(rawValue:)();
    Edge.Set.init(rawValue:)();
    if (Edge.Set.init(rawValue:)() != v66) {
      char v69 = Edge.Set.init(rawValue:)();
    }
    Edge.Set.init(rawValue:)();
    if (Edge.Set.init(rawValue:)() != v67) {
      char v69 = Edge.Set.init(rawValue:)();
    }
    uint64_t v70 = (uint64_t)v152;
    Edge.Set.init(rawValue:)();
    if (Edge.Set.init(rawValue:)() != v68) {
      char v69 = Edge.Set.init(rawValue:)();
    }
  }
  else
  {
    char v69 = static Edge.Set.vertical.getter();
    uint64_t v70 = (uint64_t)v152;
  }
  sub_10001B220((uint64_t)v20, (uint64_t)v22, &qword_1008018F8);
  uint64_t v71 = &v22[*(int *)(v145 + 36)];
  *(void *)uint64_t v71 = v63;
  v71[8] = v69;
  sub_10001457C((uint64_t)v20, &qword_1008018F8);
  uint64_t v72 = a1[3];
  uint64_t v73 = a1[4];
  sub_10002E0BC(a1, v72);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v73 + 16))(v72, v73)) {
    *(void *)&long long v174 = static Color.red.getter();
  }
  else {
    LODWORD(v174) = static HierarchicalShapeStyle.primary.getter();
  }
  uint64_t v74 = AnyShapeStyle.init<A>(_:)();
  uint64_t v75 = v148;
  sub_10001B220((uint64_t)v22, v148, &qword_100802298);
  *(void *)(v75 + *(int *)(v146 + 36)) = v74;
  sub_10001457C((uint64_t)v22, &qword_100802298);
  static Edge.Set.horizontal.getter();
  char v76 = sub_1001BD6CC();
  uint64_t v77 = v149;
  if (v76)
  {
    uint64_t v78 = (void *)((char *)a1 + *(int *)(v149 + 24));
    uint64_t v79 = *v78;
    uint64_t v80 = v78[1];
    *(void *)&long long v174 = v79;
    *((void *)&v174 + 1) = v80;
    sub_100010218(&qword_100802268);
    State.wrappedValue.getter();
  }
  EdgeInsets.init(_all:)();
  uint64_t v184 = v81;
  uint64_t v185 = v82;
  uint64_t v186 = v83;
  uint64_t v187 = v84;
  char v188 = 0;
  SafeAreaPaddingModifier.init(edges:insets:)();
  sub_10002C4EC(v75, v70, &qword_1008022A0);
  static Edge.Set.vertical.getter();
  uint64_t v85 = *(void *)v60;
  char v86 = v60[8];
  sub_100026CCC(*(void *)v60, v86);
  char v87 = sub_100666714(v85, v86);
  sub_100026DF8(v85, v86);
  uint64_t v88 = v155;
  uint64_t v89 = v164;
  if ((v87 & 1) != 0 && qword_1007F6AD8 != -1) {
    swift_once();
  }
  EdgeInsets.init(_all:)();
  uint64_t v179 = v90;
  uint64_t v180 = v91;
  uint64_t v181 = v92;
  uint64_t v182 = v93;
  char v183 = 0;
  uint64_t v94 = (uint64_t)v150;
  SafeAreaPaddingModifier.init(edges:insets:)();
  sub_10002C4EC(v70, v94, &qword_1008022A8);
  sub_10002C4EC(v94, v89, &qword_1008022B0);
  sub_100026CCC(v85, v86);
  char v95 = sub_100666714(v85, v86);
  sub_100026DF8(v85, v86);
  if (v95)
  {
    uint64_t v96 = a1[3];
    uint64_t v97 = a1[4];
    uint64_t v98 = sub_10002E0BC(a1, v96);
    uint64_t v172 = v96;
    uint64_t v173 = *(void *)(v97 + 8);
    uint64_t v99 = sub_100062E54((uint64_t *)&v171);
    (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v96 - 8) + 16))(v99, v98, v96);
    unsigned __int8 v100 = (char *)a1 + *(int *)(v77 + 36);
    uint64_t v101 = *(void *)v100;
    LOBYTE(v98) = v100[8];
    sub_100026CCC(*(void *)v100, (char)v98);
    double v102 = sub_100666E78(v101, (char)v98);
    sub_100026DF8(v101, (char)v98);
    double v103 = 0.0;
    if (sub_1001BD6CC())
    {
      uint64_t v104 = (void *)((char *)a1 + *(int *)(v77 + 24));
      uint64_t v105 = *v104;
      uint64_t v106 = v104[1];
      *(void *)&long long v174 = v105;
      *((void *)&v174 + 1) = v106;
      sub_100010218(&qword_100802268);
      State.wrappedValue.getter();
      double v103 = *(double *)&v166 * 0.5;
    }
    *(void *)&long long v166 = 0x3FF0000000000000;
    State.init(wrappedValue:)();
    long long v170 = v174;
    sub_100141410((uint64_t)&v171, (uint64_t)&v166);
    *((double *)&v168 + 1) = v102;
    *(double *)&long long v169 = v103;
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v171);
    *((double *)&v169 + 1) = v102 * 0.25;
    long long v175 = v167;
    long long v176 = v168;
    long long v174 = v166;
    long long v177 = v169;
    long long v178 = v170;
    uint64_t v108 = v161;
    uint64_t v107 = v162;
    v136(v161, v137, v162);
    sub_1001C3A30();
    View.drawingGroup(opaque:colorMode:)();
    v135(v108, v107);
    sub_1001C3A84((uint64_t)&v174);
    uint64_t v109 = v157;
    uint64_t v110 = (uint64_t)v144;
    if (qword_1007F6AC8 != -1) {
      swift_once();
    }
    static Alignment.leading.getter();
    _FrameLayout.init(width:height:alignment:)();
    uint64_t v112 = v140;
    uint64_t v111 = v141;
    (*(void (**)(uint64_t, char *, uint64_t))(v140 + 16))(v110, v88, v141);
    uint64_t v113 = (long long *)(v110 + *(int *)(v139 + 36));
    long long v114 = v175;
    long long v115 = v176;
    *uint64_t v113 = v174;
    v113[1] = v114;
    v113[2] = v115;
    (*(void (**)(char *, uint64_t))(v112 + 8))(v88, v111);
    static Edge.Set.leading.getter();
    if (sub_1001BD6CC())
    {
      uint64_t v116 = (void *)((char *)a1 + *(int *)(v77 + 24));
      uint64_t v117 = *v116;
      uint64_t v118 = v116[1];
      *(void *)&long long v166 = v117;
      *((void *)&v166 + 1) = v118;
      sub_100010218(&qword_100802268);
      State.wrappedValue.getter();
    }
    EdgeInsets.init(_all:)();
    *(void *)&long long v166 = v119;
    *((void *)&v166 + 1) = v120;
    *(void *)&long long v167 = v121;
    *((void *)&v167 + 1) = v122;
    LOBYTE(v168) = 0;
    uint64_t v123 = (uint64_t)v143;
    SafeAreaPaddingModifier.init(edges:insets:)();
    sub_10002C4EC(v110, v123, &qword_100802280);
    uint64_t v124 = v142;
    sub_10002C4EC(v123, v142, &qword_100802288);
    uint64_t v125 = v158;
    sub_10002C4EC(v124, v158, &qword_100802288);
    uint64_t v126 = 0;
  }
  else
  {
    uint64_t v126 = 1;
    uint64_t v109 = v157;
    uint64_t v125 = v158;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v156 + 56))(v125, v126, 1, v109);
  uint64_t v127 = v163;
  uint64_t v128 = v153;
  sub_10001B220(v163, v153, &qword_1008022B8);
  uint64_t v129 = v89;
  uint64_t v130 = v154;
  sub_10001B220(v129, v154, &qword_1008022B0);
  uint64_t v131 = v159;
  sub_10001B220(v125, v159, &qword_100802290);
  uint64_t v132 = v160;
  sub_10001B220(v128, v160, &qword_1008022B8);
  uint64_t v133 = sub_100010218(&qword_1008022C8);
  sub_10001B220(v130, v132 + *(int *)(v133 + 48), &qword_1008022B0);
  sub_10001B220(v131, v132 + *(int *)(v133 + 64), &qword_100802290);
  sub_10001457C(v125, &qword_100802290);
  sub_10001457C(v164, &qword_1008022B0);
  sub_10001457C(v127, &qword_1008022B8);
  sub_10001457C(v131, &qword_100802290);
  sub_10001457C(v130, &qword_1008022B0);
  return sub_10001457C(v128, &qword_1008022B8);
}

uint64_t sub_1001C088C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for ScrollPosition();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = sub_100010218(&qword_100802158);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B220(a2, (uint64_t)v6, &qword_100802158);
  uint64_t v7 = type metadata accessor for ScrollableWaveformView.ScrollPositionRequest(0);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v6, 1, v7);
  if (result != 1)
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      type metadata accessor for ScrollableWaveformView(0);
      sub_100010218(&qword_1008020A0);
      State.wrappedValue.getter();
      ScrollPosition.scrollTo(edge:)();
      State.wrappedValue.setter();
      return sub_1001C3944((uint64_t)v6, type metadata accessor for ScrollableWaveformView.ScrollPositionRequest);
    }
    else
    {
      type metadata accessor for ScrollableWaveformView(0);
      sub_100010218(&qword_1008020A0);
      State.wrappedValue.getter();
      ScrollPosition.scrollTo(x:)();
      return State.wrappedValue.setter();
    }
  }
  return result;
}

uint64_t sub_1001C0A7C(void *a1)
{
  uint64_t v2 = type metadata accessor for ScrollPosition();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = a1[3];
  uint64_t v4 = a1[4];
  sub_10002E0BC(a1, v3);
  if ((*(uint64_t (**)(uint64_t, uint64_t))(v4 + 48))(v3, v4))
  {
    type metadata accessor for ScrollableWaveformView(0);
    sub_100010218(&qword_1008020A0);
    State.wrappedValue.getter();
    ScrollPosition.scrollTo(edge:)();
  }
  else
  {
    uint64_t v5 = a1[3];
    uint64_t v6 = a1[4];
    sub_10002E0BC(a1, v5);
    (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
    uint64_t v7 = (char *)a1 + *(int *)(type metadata accessor for ScrollableWaveformView(0) + 36);
    uint64_t v8 = *(void *)v7;
    LOBYTE(v6) = v7[8];
    sub_100026CCC(*(void *)v7, v6);
    sub_100666E78(v8, v6);
    sub_100026DF8(v8, v6);
    sub_100010218(&qword_1008020A0);
    State.wrappedValue.getter();
    ScrollPosition.scrollTo(x:)();
  }
  return State.wrappedValue.setter();
}

uint64_t sub_1001C0C28()
{
  return State.wrappedValue.setter();
}

double sub_1001C0CA0@<D0>(double *a1@<X8>)
{
  ScrollGeometry.contentInsets.getter();
  double v3 = v2;
  ScrollGeometry.contentOffset.getter();
  double v5 = v3 + v4;
  ScrollGeometry.contentSize.getter();
  double v7 = v6;
  ScrollGeometry.bounds.getter();
  double result = v5 / (v7 - CGRectGetWidth(v9));
  *a1 = result;
  return result;
}

uint64_t sub_1001C0CF8(uint64_t a1, double *a2, void *a3)
{
  uint64_t v5 = type metadata accessor for ScrollableWaveformView(0);
  __chkstk_darwin(v5);
  double v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  double v8 = *a2;
  uint64_t v9 = a3[3];
  uint64_t v10 = a3[4];
  sub_10002E0BC(a3, v9);
  LOBYTE(a2) = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 48))(v9, v10);
  sub_1001C4680((uint64_t)a3, (uint64_t)v7, type metadata accessor for ScrollableWaveformView);
  if (a2) {
    return sub_1001C3944((uint64_t)v7, type metadata accessor for ScrollableWaveformView);
  }
  uint64_t v12 = v7[3];
  uint64_t v13 = v7[4];
  sub_10002E0BC(v7, v12);
  char v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
  uint64_t result = sub_1001C3944((uint64_t)v7, type metadata accessor for ScrollableWaveformView);
  if ((v14 & 1) == 0)
  {
    uint64_t v15 = (char *)a3 + *(int *)(v5 + 28);
    char v16 = *v15;
    uint64_t v17 = *((void *)v15 + 1);
    v21[8] = v16;
    uint64_t v22 = v17;
    sub_100010218(&qword_1008014F0);
    uint64_t result = State.wrappedValue.getter();
    if (v23 == 1)
    {
      uint64_t v18 = a3[3];
      uint64_t v19 = a3[4];
      sub_10002E0BC(a3, v18);
      v20.n128_u64[0] = 0;
      if (v8 >= 0.0) {
        v20.n128_f64[0] = v8;
      }
      if (v20.n128_f64[0] > 1.0) {
        v20.n128_f64[0] = 1.0;
      }
      return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(v19 + 64))(v18, v19, v20);
    }
  }
  return result;
}

uint64_t sub_1001C0EDC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for TintShapeStyle();
  __chkstk_darwin(v4);
  uint64_t result = sub_1001BD6CC();
  if (result)
  {
    uint64_t v6 = (char *)a1 + *(int *)(type metadata accessor for ScrollableWaveformView(0) + 32);
    uint64_t v7 = *(void *)v6;
    char v8 = v6[8];
    sub_100026CCC(*(void *)v6, v8);
    char v9 = sub_100666714(v7, v8);
    sub_100026DF8(v7, v8);
    uint64_t v10 = 0;
    if (v9)
    {
      if (qword_1007F6AD0 != -1) {
        swift_once();
      }
      uint64_t v10 = qword_10083D078;
    }
    sub_100026CCC(v7, v8);
    char v11 = sub_100666714(v7, v8);
    sub_100026DF8(v7, v8);
    if ((v11 & 1) != 0 && qword_1007F6AC8 != -1) {
      swift_once();
    }
    uint64_t v12 = a1[3];
    uint64_t v13 = a1[4];
    sub_10002E0BC(a1, v12);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v13 + 16))(v12, v13)) {
      static Color.red.getter();
    }
    else {
      TintShapeStyle.init()();
    }
    uint64_t v14 = AnyShapeStyle.init<A>(_:)();
    unsigned __int8 v25 = static Edge.Set.bottom.getter();
    EdgeInsets.init(_all:)();
    uint64_t v17 = v26;
    uint64_t v18 = v27;
    uint64_t v19 = v28;
    uint64_t v20 = v29;
    unsigned __int8 v30 = static Edge.Set.vertical.getter();
    uint64_t result = EdgeInsets.init(_all:)();
    uint64_t v15 = v25;
    uint64_t v16 = v30;
  }
  else
  {
    uint64_t v14 = 0;
    uint64_t v15 = 0;
    uint64_t v16 = 0;
    uint64_t v10 = 0;
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
  }
  *(void *)a2 = v10;
  *(void *)(a2 + 8) = v14;
  *(void *)(a2 + 16) = v15;
  *(void *)(a2 + 24) = v17;
  *(void *)(a2 + 32) = v18;
  *(void *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v20;
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = v16;
  *(void *)(a2 + 72) = v21;
  *(void *)(a2 + 80) = v22;
  *(void *)(a2 + 88) = v23;
  *(void *)(a2 + 96) = v24;
  *(unsigned char *)(a2 + 104) = 0;
  return result;
}

uint64_t sub_1001C1174@<X0>(void *a1@<X8>)
{
  uint64_t result = GeometryProxy.size.getter();
  *a1 = v3;
  return result;
}

uint64_t sub_1001C11A0()
{
  return State.wrappedValue.setter();
}

void sub_1001C1214(void *a1@<X8>)
{
  *a1 = 0x4059000000000000;
}

uint64_t sub_1001C1220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return static EnvironmentKey<>._valuesEqual(_:_:)(a1, a2, a3, a4, &protocol witness table for Double);
}

double sub_1001C122C()
{
  sub_1001AF2BC();
  EnvironmentValues.subscript.getter();
  return v1;
}

double sub_1001C1268@<D0>(uint64_t a1@<X8>)
{
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(unsigned char *)(a1 + 56) = v10;
  *(void *)(a1 + 64) = v11;
  *(unsigned char *)(a1 + 72) = v12;
  *(void *)(a1 + 80) = v13;
  *(void *)(a1 + 88) = v14;
  *(void *)(a1 + 96) = v15;
  *(unsigned char *)(a1 + 104) = v16;
  *(void *)(a1 + 112) = v17;
  *(unsigned char *)(a1 + 120) = v18;
  double result = *(double *)&v19;
  *(_OWORD *)(a1 + 128) = v19;
  return result;
}

double sub_1001C13CC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = static HorizontalAlignment.center.getter();
  sub_1001C1268((uint64_t)v8);
  *(_OWORD *)&v9[103] = v8[6];
  *(_OWORD *)&v9[87] = v8[5];
  *(_OWORD *)&v9[39] = v8[2];
  *(_OWORD *)&v9[23] = v8[1];
  *(_OWORD *)&v9[119] = v8[7];
  *(_OWORD *)&v9[135] = v8[8];
  *(_OWORD *)&v9[55] = v8[3];
  *(_OWORD *)&v9[71] = v8[4];
  *(_OWORD *)&v9[7] = v8[0];
  long long v3 = *(_OWORD *)&v9[112];
  *(_OWORD *)(a1 + 113) = *(_OWORD *)&v9[96];
  *(_OWORD *)(a1 + 129) = v3;
  *(_OWORD *)(a1 + 145) = *(_OWORD *)&v9[128];
  long long v4 = *(_OWORD *)&v9[48];
  *(_OWORD *)(a1 + 49) = *(_OWORD *)&v9[32];
  *(_OWORD *)(a1 + 65) = v4;
  long long v5 = *(_OWORD *)&v9[80];
  *(_OWORD *)(a1 + 81) = *(_OWORD *)&v9[64];
  *(_OWORD *)(a1 + 97) = v5;
  double result = *(double *)v9;
  long long v7 = *(_OWORD *)&v9[16];
  *(_OWORD *)(a1 + 17) = *(_OWORD *)v9;
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = 0;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 160) = *(void *)&v9[143];
  *(_OWORD *)(a1 + 33) = v7;
  return result;
}

uint64_t sub_1001C14A8()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for AnimationTimelineSchedule();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  long long v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = *(void *)(v0 + 40);
  char v10 = *(unsigned char *)(v1 + 48);
  sub_100026CCC(v9, v10);
  sub_100666E78(v9, v10);
  sub_100026DF8(v9, v10);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = *(void *)(v1 + 32);
  sub_10002E0BC((void *)v1, v11);
  (*(void (**)(uint64_t, uint64_t))(v12 + 48))(v11, v12);
  AnimationTimelineSchedule.init(minimumInterval:paused:)();
  sub_1001C4838(v1, (uint64_t)v18);
  uint64_t v13 = swift_allocObject();
  long long v14 = v18[1];
  *(_OWORD *)(v13 + 16) = v18[0];
  *(_OWORD *)(v13 + 32) = v14;
  *(_OWORD *)(v13 + 48) = v18[2];
  *(unsigned char *)(v13 + 64) = v19;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_1001C48B4;
  *(void *)(v15 + 24) = v13;
  sub_100010218(&qword_100801E50);
  sub_1001C1A84(&qword_1008019C0, (void (*)(uint64_t))&type metadata accessor for AnimationTimelineSchedule);
  sub_1001BBEE0();
  TimelineView<>.init(_:content:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

double sub_1001C173C@<D0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  sub_10002E0BC((void *)a1, v8);
  sub_100010218(&qword_1008019D0);
  TimelineView.Context.date.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 32))(v7, v8, v9);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v10 = *(void *)(a1 + 40);
  LOBYTE(a1) = *(unsigned char *)(a1 + 48);
  sub_100026CCC(v10, a1);
  sub_100666E78(v10, a1);
  sub_100026DF8(v10, a1);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v11 = v16;
  char v12 = v17;
  uint64_t v13 = v18;
  char v14 = v19;
  *(void *)a2 = 0;
  *(unsigned char *)(a2 + 8) = 0;
  *(void *)(a2 + 16) = v11;
  *(unsigned char *)(a2 + 24) = v12;
  *(void *)(a2 + 32) = v13;
  *(unsigned char *)(a2 + 40) = v14;
  double result = *(double *)&v20;
  *(_OWORD *)(a2 + 48) = v20;
  return result;
}

uint64_t sub_1001C1904()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for $s7Journal0033ScrollableWaveformViewswift_DbGHjfMX255_0_33_8FC82BFD10DD9FFCAE9786F1BC87CE94Ll7PreviewfMf_15PreviewRegistryfMu_.MockWaveformProviding()
{
  return self;
}

uint64_t sub_1001C1960()
{
  return *(unsigned __int8 *)(*(void *)v0 + 32);
}

double sub_1001C196C()
{
  return *(double *)(*(void *)v0 + 48);
}

uint64_t sub_1001C1978()
{
  return *(unsigned __int8 *)(*(void *)v0 + 57);
}

uint64_t sub_1001C1984()
{
  return *(unsigned __int8 *)(*(void *)v0 + 58);
}

uint64_t sub_1001C1990()
{
  return *(unsigned __int8 *)(*(void *)v0 + 56);
}

double sub_1001C199C(double a1)
{
  double result = *(double *)(*(void *)v1 + 24) * a1;
  *(double *)(*(void *)v1 + 48) = result;
  return result;
}

uint64_t sub_1001C19B0()
{
  return swift_bridgeObjectRetain();
}

double sub_1001C19BC()
{
  return *(double *)(*(void *)v0 + 24);
}

double sub_1001C19C8()
{
  return *(double *)(*(void *)v0 + 40);
}

uint64_t sub_1001C19D4(uint64_t a1)
{
  uint64_t result = sub_1001C1A84(&qword_100802090, (void (*)(uint64_t))type metadata accessor for $s7Journal0033ScrollableWaveformViewswift_DbGHjfMX255_0_33_8FC82BFD10DD9FFCAE9786F1BC87CE947PreviewfMf_15PreviewRegistryfMu_.MockWaveformProviding);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001C1A2C(uint64_t a1)
{
  uint64_t result = sub_1001C1A84(&qword_100802098, (void (*)(uint64_t))type metadata accessor for $s7Journal0033ScrollableWaveformViewswift_DbGHjfMX255_0_33_8FC82BFD10DD9FFCAE9786F1BC87CE947PreviewfMf_15PreviewRegistryfMu_.MockWaveformProviding);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1001C1A84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for ScrollableWaveformView(uint64_t a1)
{
  return sub_10003352C(a1, (uint64_t *)&unk_100802100);
}

uint64_t sub_1001C1AEC@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t *__return_ptr, char *)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100010218(&qword_1008019D0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = sub_100010218(&qword_1008023E0);
  uint64_t v11 = *(void *)(v9 - 8);
  uint64_t result = v9 - 8;
  if (*(void *)(v11 + 64) == v8)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    a2(&v18, (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    char v12 = v19;
    uint64_t v13 = v20;
    char v14 = v21;
    uint64_t v15 = v22;
    char v16 = v23;
    long long v17 = v24;
    *(void *)a3 = v18;
    *(unsigned char *)(a3 + 8) = v12;
    *(void *)(a3 + 16) = v13;
    *(unsigned char *)(a3 + 24) = v14;
    *(void *)(a3 + 32) = v15;
    *(unsigned char *)(a3 + 40) = v16;
    *(_OWORD *)(a3 + 48) = v17;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001C1C60(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for ScrollableWaveformView.ScrollPositionRequest(0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  char v12 = (double *)((char *)&v22 - v11);
  uint64_t v13 = sub_100010218(&qword_100802398);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v17 = (double *)&v15[*(int *)(v16 + 56)];
  sub_1001C4680(a1, (uint64_t)v15, type metadata accessor for ScrollableWaveformView.ScrollPositionRequest);
  sub_1001C4680(a2, (uint64_t)v17, type metadata accessor for ScrollableWaveformView.ScrollPositionRequest);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_1001C4680((uint64_t)v15, (uint64_t)v12, type metadata accessor for ScrollableWaveformView.ScrollPositionRequest);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      char v19 = *v12 == *v17;
      goto LABEL_6;
    }
LABEL_8:
    sub_10001457C((uint64_t)v15, &qword_100802398);
    char v19 = 0;
    return v19 & 1;
  }
  sub_1001C4680((uint64_t)v15, (uint64_t)v9, type metadata accessor for ScrollableWaveformView.ScrollPositionRequest);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v23);
    goto LABEL_8;
  }
  uint64_t v18 = v23;
  (*(void (**)(char *, double *, uint64_t))(v4 + 32))(v6, v17, v23);
  char v19 = static UUID.== infix(_:_:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20(v6, v18);
  v20(v9, v18);
LABEL_6:
  sub_1001C3944((uint64_t)v15, type metadata accessor for ScrollableWaveformView.ScrollPositionRequest);
  return v19 & 1;
}

ValueMetadata *_s35__Key_waveformScrollViewShowsChromeVMa()
{
  return &_s35__Key_waveformScrollViewShowsChromeVN;
}

ValueMetadata *_s29__Key_waveformPointsPerSecondVMa()
{
  return &_s29__Key_waveformPointsPerSecondVN;
}

void *sub_1001C1F74(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)v4 + v8;
    uint64_t v10 = (uint64_t)a2 + v8;
    uint64_t v11 = type metadata accessor for ScrollPosition();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    uint64_t v12 = sub_100010218(&qword_1008020A0);
    *(void *)&v9[*(int *)(v12 + 28)] = *(void *)(v10 + *(int *)(v12 + 28));
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (uint64_t *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (char *)v4 + v14;
    char v19 = (char *)a2 + v14;
    *uint64_t v18 = *v19;
    *((void *)v18 + 1) = *((void *)v19 + 1);
    uint64_t v20 = a3[8];
    char v21 = (char *)v4 + v20;
    uint64_t v22 = (uint64_t)a2 + v20;
    uint64_t v23 = *(void *)v22;
    char v24 = *(unsigned char *)(v22 + 8);
    swift_retain();
    swift_retain();
    swift_retain();
    sub_100026CCC(v23, v24);
    *(void *)char v21 = v23;
    v21[8] = v24;
    uint64_t v25 = a3[9];
    uint64_t v26 = (char *)v4 + v25;
    uint64_t v27 = (uint64_t)a2 + v25;
    uint64_t v28 = *(void *)v27;
    LOBYTE(v10) = *(unsigned char *)(v27 + 8);
    sub_100026CCC(*(void *)v27, v10);
    *(void *)uint64_t v26 = v28;
    v26[8] = v10;
    uint64_t v29 = a3[10];
    unsigned __int8 v30 = (char *)v4 + v29;
    uint64_t v31 = (uint64_t)a2 + v29;
    uint64_t v32 = type metadata accessor for Duration.UnitsFormatStyle();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  }
  return v4;
}

uint64_t sub_1001C217C(uint64_t a1, int *a2)
{
  _s7Journal19DynamicWaveformViewVwxx_0(a1);
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for ScrollPosition();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  sub_100010218(&qword_1008020A0);
  swift_release();
  swift_release();
  swift_release();
  sub_100026DF8(*(void *)(a1 + a2[8]), *(unsigned char *)(a1 + a2[8] + 8));
  sub_100026DF8(*(void *)(a1 + a2[9]), *(unsigned char *)(a1 + a2[9] + 8));
  uint64_t v6 = a1 + a2[10];
  uint64_t v7 = type metadata accessor for Duration.UnitsFormatStyle();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

uint64_t sub_1001C2298(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ScrollPosition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  uint64_t v11 = sub_100010218(&qword_1008020A0);
  *(void *)(v8 + *(int *)(v11 + 28)) = *(void *)(v9 + *(int *)(v11 + 28));
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v12);
  uint64_t v15 = (void *)(a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = a1 + v13;
  uint64_t v18 = a2 + v13;
  *(unsigned char *)uint64_t v17 = *(unsigned char *)v18;
  *(void *)(v17 + 8) = *(void *)(v18 + 8);
  uint64_t v19 = a3[8];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = *(void *)v21;
  char v23 = *(unsigned char *)(v21 + 8);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_100026CCC(v22, v23);
  *(void *)uint64_t v20 = v22;
  *(unsigned char *)(v20 + 8) = v23;
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = a2 + v24;
  uint64_t v27 = *(void *)v26;
  LOBYTE(v9) = *(unsigned char *)(v26 + 8);
  sub_100026CCC(*(void *)v26, v9);
  *(void *)uint64_t v25 = v27;
  *(unsigned char *)(v25 + 8) = v9;
  uint64_t v28 = a3[10];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = type metadata accessor for Duration.UnitsFormatStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 16))(v29, v30, v31);
  return a1;
}

uint64_t *sub_1001C2448(uint64_t *a1, uint64_t *a2, int *a3)
{
  sub_1001C2600(a1, a2);
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for ScrollPosition();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = sub_100010218(&qword_1008020A0);
  *(void *)&v7[*(int *)(v10 + 28)] = *(void *)&v8[*(int *)(v10 + 28)];
  swift_retain();
  swift_release();
  uint64_t v11 = a3[6];
  uint64_t v12 = (uint64_t *)((char *)a1 + v11);
  uint64_t v13 = (uint64_t *)((char *)a2 + v11);
  void *v12 = *v13;
  v12[1] = v13[1];
  swift_retain();
  swift_release();
  uint64_t v14 = a3[7];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  *uint64_t v15 = *v16;
  *((void *)v15 + 1) = *((void *)v16 + 1);
  swift_retain();
  swift_release();
  uint64_t v17 = a3[8];
  uint64_t v18 = (char *)a1 + v17;
  uint64_t v19 = (char *)a2 + v17;
  uint64_t v20 = *(void *)v19;
  LOBYTE(v8) = v19[8];
  sub_100026CCC(*(void *)v19, (char)v8);
  uint64_t v21 = *(void *)v18;
  char v22 = v18[8];
  *(void *)uint64_t v18 = v20;
  v18[8] = (char)v8;
  sub_100026DF8(v21, v22);
  uint64_t v23 = a3[9];
  uint64_t v24 = (char *)a1 + v23;
  uint64_t v25 = (char *)a2 + v23;
  uint64_t v26 = *(void *)v25;
  LOBYTE(v8) = v25[8];
  sub_100026CCC(*(void *)v25, (char)v8);
  uint64_t v27 = *(void *)v24;
  char v28 = v24[8];
  *(void *)uint64_t v24 = v26;
  v24[8] = (char)v8;
  sub_100026DF8(v27, v28);
  uint64_t v29 = a3[10];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = type metadata accessor for Duration.UnitsFormatStyle();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v32 - 8) + 24))(v30, v31, v32);
  return a1;
}

uint64_t *sub_1001C2600(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_1001C2830(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ScrollPosition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  uint64_t v11 = sub_100010218(&qword_1008020A0);
  *(void *)(v8 + *(int *)(v11 + 28)) = *(void *)(v9 + *(int *)(v11 + 28));
  uint64_t v12 = a3[7];
  *(_OWORD *)(a1 + a3[6]) = *(_OWORD *)(a2 + a3[6]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  uint64_t v13 = a3[8];
  uint64_t v14 = a3[9];
  uint64_t v15 = a1 + v13;
  uint64_t v16 = a2 + v13;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  *(void *)uint64_t v15 = *(void *)v16;
  uint64_t v17 = a1 + v14;
  uint64_t v18 = a2 + v14;
  *(void *)uint64_t v17 = *(void *)v18;
  *(unsigned char *)(v17 + 8) = *(unsigned char *)(v18 + 8);
  uint64_t v19 = a3[10];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = type metadata accessor for Duration.UnitsFormatStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 32))(v20, v21, v22);
  return a1;
}

uint64_t sub_1001C296C(uint64_t a1, uint64_t a2, int *a3)
{
  _s7Journal19DynamicWaveformViewVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = type metadata accessor for ScrollPosition();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = sub_100010218(&qword_1008020A0);
  *(void *)(v8 + *(int *)(v11 + 28)) = *(void *)(v9 + *(int *)(v11 + 28));
  swift_release();
  uint64_t v12 = a3[6];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (void *)(a2 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_release();
  uint64_t v15 = a3[7];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  *(unsigned char *)uint64_t v16 = *(unsigned char *)v17;
  *(void *)(v16 + 8) = *(void *)(v17 + 8);
  swift_release();
  uint64_t v18 = a3[8];
  uint64_t v19 = a1 + v18;
  uint64_t v20 = (uint64_t *)(a2 + v18);
  uint64_t v21 = *v20;
  LOBYTE(v20) = *((unsigned char *)v20 + 8);
  uint64_t v22 = *(void *)v19;
  char v23 = *(unsigned char *)(v19 + 8);
  *(void *)uint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = (_BYTE)v20;
  sub_100026DF8(v22, v23);
  uint64_t v24 = a3[9];
  uint64_t v25 = a1 + v24;
  uint64_t v26 = (uint64_t *)(a2 + v24);
  uint64_t v27 = *v26;
  LOBYTE(v26) = *((unsigned char *)v26 + 8);
  uint64_t v28 = *(void *)v25;
  char v29 = *(unsigned char *)(v25 + 8);
  *(void *)uint64_t v25 = v27;
  *(unsigned char *)(v25 + 8) = (_BYTE)v26;
  sub_100026DF8(v28, v29);
  uint64_t v30 = a3[10];
  uint64_t v31 = a1 + v30;
  uint64_t v32 = a2 + v30;
  uint64_t v33 = type metadata accessor for Duration.UnitsFormatStyle();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 40))(v31, v32, v33);
  return a1;
}

uint64_t sub_1001C2B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001C2B18);
}

uint64_t sub_1001C2B18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100010218(&qword_1008020A0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Duration.UnitsFormatStyle();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 40);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1001C2C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001C2C5C);
}

uint64_t sub_1001C2C5C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100010218(&qword_1008020A0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for Duration.UnitsFormatStyle();
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 40);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1001C2D8C()
{
  sub_1001C2E78();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Duration.UnitsFormatStyle();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_1001C2E78()
{
  if (!qword_100802110)
  {
    type metadata accessor for ScrollPosition();
    unint64_t v0 = type metadata accessor for State();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100802110);
    }
  }
}

uint64_t sub_1001C2ED0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001C2EEC@<X0>(uint64_t a1@<X8>)
{
  return sub_1001BF720(*(void **)(v1 + 16), a1);
}

unint64_t sub_1001C2EF4()
{
  unint64_t result = qword_1008021E0;
  if (!qword_1008021E0)
  {
    sub_100014440(&qword_1008021D8);
    sub_100014488(&qword_1008021E8, &qword_1008021F0);
    sub_1001C2F94();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008021E0);
  }
  return result;
}

unint64_t sub_1001C2F94()
{
  unint64_t result = qword_1008021F8;
  if (!qword_1008021F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008021F8);
  }
  return result;
}

uint64_t sub_1001C2FEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScrollableWaveformView(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C3050(uint64_t a1, uint64_t a2)
{
  type metadata accessor for ScrollableWaveformView(0);

  return sub_1001C088C(a1, a2);
}

unint64_t sub_1001C30D0()
{
  unint64_t result = qword_100802208;
  if (!qword_100802208)
  {
    sub_100014440(&qword_100802158);
    sub_1001C1A84(&qword_100802210, (void (*)(uint64_t))type metadata accessor for ScrollableWaveformView.ScrollPositionRequest);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802208);
  }
  return result;
}

uint64_t type metadata accessor for ScrollableWaveformView.ScrollPositionRequest(uint64_t a1)
{
  return sub_10003352C(a1, qword_100802358);
}

uint64_t sub_1001C3198()
{
  uint64_t v1 = (int *)(type metadata accessor for ScrollableWaveformView(0) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  _s7Journal19DynamicWaveformViewVwxx_0(v2);
  uint64_t v3 = v2 + v1[7];
  uint64_t v4 = type metadata accessor for ScrollPosition();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  sub_100010218(&qword_1008020A0);
  swift_release();
  swift_release();
  swift_release();
  sub_100026DF8(*(void *)(v2 + v1[10]), *(unsigned char *)(v2 + v1[10] + 8));
  sub_100026DF8(*(void *)(v2 + v1[11]), *(unsigned char *)(v2 + v1[11] + 8));
  uint64_t v5 = v2 + v1[12];
  uint64_t v6 = type metadata accessor for Duration.UnitsFormatStyle();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);

  return swift_deallocObject();
}

uint64_t sub_1001C332C()
{
  uint64_t v1 = *(void *)(type metadata accessor for ScrollableWaveformView(0) - 8);
  uint64_t v2 = (void *)(v0 + ((*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));

  return sub_1001C0A7C(v2);
}

uint64_t sub_1001C3390()
{
  type metadata accessor for ScrollableWaveformView(0);

  return sub_1001C0C28();
}

unint64_t sub_1001C3410()
{
  unint64_t result = qword_100802218;
  if (!qword_100802218)
  {
    sub_100014440(&qword_100802198);
    sub_100014440(&qword_100802188);
    sub_100014440(&qword_100802158);
    sub_100014440(&qword_100802180);
    sub_100014440(&qword_100802178);
    sub_100014440(&qword_100802170);
    sub_100014440(&qword_100802168);
    sub_100014488(&qword_100802200, &qword_100802168);
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_1001C30D0();
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802218);
  }
  return result;
}

uint64_t sub_1001C35EC(uint64_t a1, double *a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for ScrollableWaveformView(0) - 8);
  uint64_t v6 = (void *)(v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)));

  return sub_1001C0CF8(a1, a2, v6);
}

uint64_t sub_1001C3670()
{
  type metadata accessor for ScrollableWaveformView(0);

  return sub_1001C11A0();
}

unint64_t sub_1001C36E0()
{
  unint64_t result = qword_100802220;
  if (!qword_100802220)
  {
    sub_100014440(&qword_1008021C0);
    sub_1001C3780();
    sub_100014488(&qword_100802258, &qword_100802260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802220);
  }
  return result;
}

unint64_t sub_1001C3780()
{
  unint64_t result = qword_100802228;
  if (!qword_100802228)
  {
    sub_100014440(&qword_1008021B8);
    sub_1001C3820();
    sub_100014488(&qword_100802248, &qword_100802250);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802228);
  }
  return result;
}

unint64_t sub_1001C3820()
{
  unint64_t result = qword_100802230;
  if (!qword_100802230)
  {
    sub_100014440(&qword_1008021B0);
    sub_100014440(&qword_1008021A0);
    sub_100014440(&qword_100802198);
    sub_1001C3410();
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeConformance2();
    sub_100014488(&qword_100802238, &qword_100802240);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802230);
  }
  return result;
}

uint64_t sub_1001C3944(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_1001C39AC()
{
  unint64_t result = qword_1008022C0;
  if (!qword_1008022C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008022C0);
  }
  return result;
}

uint64_t sub_1001C3A00(uint64_t a1)
{
  return a1;
}

unint64_t sub_1001C3A30()
{
  unint64_t result = qword_1008022D0;
  if (!qword_1008022D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008022D0);
  }
  return result;
}

uint64_t sub_1001C3A84(uint64_t a1)
{
  return a1;
}

ValueMetadata *type metadata accessor for Playhead()
{
  return &type metadata for Playhead;
}

uint64_t *sub_1001C3AE8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for UUID();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t sub_1001C3BE4(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = type metadata accessor for UUID();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *sub_1001C3C60(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1001C3D18(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001C3944((uint64_t)a1, type metadata accessor for ScrollableWaveformView.ScrollPositionRequest);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for UUID();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *sub_1001C3DF4(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for UUID();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1001C3EAC(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1001C3944((uint64_t)a1, type metadata accessor for ScrollableWaveformView.ScrollPositionRequest);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for UUID();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1001C3F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t sub_1001C3FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_1001C3FDC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1001C3FEC()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t destroy for SimpleWaveformView(uint64_t a1)
{
  _s7Journal19DynamicWaveformViewVwxx_0(a1);
  swift_release();
  uint64_t v2 = *(void *)(a1 + 64);
  char v3 = *(unsigned char *)(a1 + 72);

  return sub_100026DF8(v2, v3);
}

uint64_t initializeWithCopy for SimpleWaveformView(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v2 + 40);
  uint64_t v5 = *(void *)(v2 + 64);
  *(void *)(a1 + 56) = *(void *)(v2 + 56);
  LOBYTE(v2) = *(unsigned char *)(v2 + 72);
  swift_retain();
  sub_100026CCC(v5, v2);
  *(void *)(a1 + 64) = v5;
  *(unsigned char *)(a1 + 72) = v2;
  return a1;
}

uint64_t assignWithCopy for SimpleWaveformView(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = a2;
  sub_1001C2600((uint64_t *)a1, a2);
  *(void *)(a1 + 40) = v2[5];
  *(void *)(a1 + 48) = v2[6];
  *(void *)(a1 + 56) = v2[7];
  swift_retain();
  swift_release();
  uint64_t v4 = v2[8];
  LOBYTE(v2) = *((unsigned char *)v2 + 72);
  sub_100026CCC(v4, (char)v2);
  uint64_t v5 = *(void *)(a1 + 64);
  char v6 = *(unsigned char *)(a1 + 72);
  *(void *)(a1 + 64) = v4;
  *(unsigned char *)(a1 + 72) = (_BYTE)v2;
  sub_100026DF8(v5, v6);
  return a1;
}

__n128 initializeWithTake for SimpleWaveformView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SimpleWaveformView(uint64_t a1, uint64_t a2)
{
  _s7Journal19DynamicWaveformViewVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_release();
  char v5 = *(unsigned char *)(a2 + 72);
  uint64_t v6 = *(void *)(a1 + 64);
  char v7 = *(unsigned char *)(a1 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = v5;
  sub_100026DF8(v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for SimpleWaveformView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 73)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SimpleWaveformView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleWaveformView()
{
  return &type metadata for SimpleWaveformView;
}

uint64_t destroy for WaveformDurationSpacer(uint64_t a1)
{
  _s7Journal19DynamicWaveformViewVwxx_0(a1);
  uint64_t v2 = *(void *)(a1 + 40);
  char v3 = *(unsigned char *)(a1 + 48);

  return sub_100026DF8(v2, v3);
}

uint64_t initializeWithCopy for WaveformDurationSpacer(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  uint64_t v5 = *(void *)(v2 + 40);
  LOBYTE(v2) = *(unsigned char *)(v2 + 48);
  sub_100026CCC(v5, v2);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = v2;
  return a1;
}

uint64_t assignWithCopy for WaveformDurationSpacer(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = a2;
  sub_1001C2600((uint64_t *)a1, a2);
  uint64_t v4 = v2[5];
  LOBYTE(v2) = *((unsigned char *)v2 + 48);
  sub_100026CCC(v4, (char)v2);
  uint64_t v5 = *(void *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 40) = v4;
  *(unsigned char *)(a1 + 48) = (_BYTE)v2;
  sub_100026DF8(v5, v6);
  return a1;
}

__n128 initializeWithTake for WaveformDurationSpacer(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for WaveformDurationSpacer(uint64_t a1, uint64_t a2)
{
  _s7Journal19DynamicWaveformViewVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  char v6 = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a1 + 40);
  char v8 = *(unsigned char *)(a1 + 48);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = v6;
  sub_100026DF8(v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for WaveformDurationSpacer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WaveformDurationSpacer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for WaveformDurationSpacer()
{
  return &type metadata for WaveformDurationSpacer;
}

unint64_t sub_1001C454C()
{
  unint64_t result = qword_100802390;
  if (!qword_100802390)
  {
    sub_100014440(&qword_1008021D0);
    sub_100014440(&qword_1008021C0);
    sub_1001C36E0();
    swift_getOpaqueTypeConformance2();
    sub_1001C1A84((unint64_t *)&qword_1007F96A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802390);
  }
  return result;
}

uint64_t sub_1001C462C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001C4648()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001C4664()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001C4680(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001C46E8()
{
  return sub_1001BD2FC(*(void **)(v0 + 16));
}

unint64_t sub_1001C46F0()
{
  unint64_t result = qword_1008023C8;
  if (!qword_1008023C8)
  {
    sub_100014440(&qword_1008023D0);
    sub_1001C1A84(&qword_1008023D8, (void (*)(uint64_t))&type metadata accessor for Capsule);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008023C8);
  }
  return result;
}

uint64_t sub_1001C479C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001C47D8()
{
  return sub_1001BD640();
}

uint64_t sub_1001C47E4()
{
  _s7Journal19DynamicWaveformViewVwxx_0(v0 + 16);
  swift_release();
  sub_100026DF8(*(void *)(v0 + 80), *(unsigned char *)(v0 + 88));

  return swift_deallocObject();
}

uint64_t sub_1001C4830@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001BD428(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_1001C4838(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001C4870()
{
  _s7Journal19DynamicWaveformViewVwxx_0(v0 + 16);
  sub_100026DF8(*(void *)(v0 + 56), *(unsigned char *)(v0 + 64));

  return swift_deallocObject();
}

double sub_1001C48B4@<D0>(uint64_t a1@<X8>)
{
  return sub_1001C173C(v1 + 16, a1);
}

uint64_t sub_1001C48BC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001C48F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001C1AEC(a1, *(void (**)(uint64_t *__return_ptr, char *))(v2 + 16), a2);
}

unint64_t sub_1001C4900()
{
  unint64_t result = qword_1008023E8;
  if (!qword_1008023E8)
  {
    sub_100014440(&qword_1008023A8);
    sub_100014488(&qword_1008023F0, &qword_1008023A0);
    sub_100014488(&qword_100802258, &qword_100802260);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008023E8);
  }
  return result;
}

uint64_t sub_1001C49C4()
{
  return sub_100014488(&qword_1008023F8, &qword_100802400);
}

uint64_t sub_1001C4A00()
{
  return sub_1001C4A50(&qword_100802408, &qword_100802410, (void (*)(void))sub_1001BBEE0);
}

uint64_t sub_1001C4A50(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001C4ABC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100802418);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100802418);
  if (qword_1007F7DF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EDD0);
  long long v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

unint64_t sub_1001C4B84()
{
  sub_100010218(&qword_100802498);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6270;
  *(void *)(inited + 32) = NSFontAttributeName;
  uint64_t v2 = NSFontAttributeName;
  id v3 = [v0 traitCollection];
  id v4 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle3 compatibleWithTraitCollection:v3];
  id v15 = v4;
  *(UIFontWeight *)uint64_t v13 = UIFontWeightMedium;
  v13[1] = 0;
  char v14 = 3;
  sub_10021B55C(&v15, v13, &v12);

  uint64_t v5 = v12;
  id v6 = [self fontWithDescriptor:v12 size:0.0];

  uint64_t v7 = sub_10001B284(0, (unint64_t *)&unk_10080A670);
  *(void *)(inited + 40) = v6;
  *(void *)(inited + 64) = v7;
  *(void *)(inited + 72) = NSForegroundColorAttributeName;
  char v8 = self;
  uint64_t v9 = NSForegroundColorAttributeName;
  id v10 = [v8 labelColor];
  *(void *)(inited + 104) = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
  *(void *)(inited + 80) = v10;
  return sub_100396DBC(inited);
}

id sub_1001C4D34(uint64_t a1)
{
  uint64_t v2 = &v1[OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIRange];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  v2[16] = 1;
  *(void *)&v1[OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIAttachment] = 0;
  v1[OBJC_IVAR____TtC7Journal14TranscriptView_shouldShowWaitingUI] = 0;
  id v3 = &v1[OBJC_IVAR____TtC7Journal14TranscriptView_activeSegmentRange];
  *(void *)id v3 = 0;
  *((void *)v3 + 1) = 0;
  v3[16] = 1;
  *(void *)&v1[OBJC_IVAR____TtC7Journal14TranscriptView_model] = a1;
  v7.receiver = v1;
  v7.super_class = (Class)type metadata accessor for TranscriptView();
  swift_retain();
  id v4 = [super initWithFrame:0.0 textContainer:0.0];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v4 setEditable:0];
  [v4 setSelectable:1];
  [v4 setScrollEnabled:1];
  [v4 setAlwaysBounceVertical:1];
  [v4 setFindInteractionEnabled:1];
  [v4 setTextContainerInset:0.0, 24.0, 0.0, 24.0];
  [v4 setContentInset:21.0, 0.0, 60.0, 0.0];
  id v5 = v4;
  [v5 setAdjustsFontForContentSizeCategory:1];

  swift_release();
  return v5;
}

void sub_1001C4F80()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Journal14TranscriptView_activeSegmentRange);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Journal14TranscriptView_activeSegmentRange + 8);
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal14TranscriptView_activeSegmentRange + 16))
  {
    if (qword_1007F6AE0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100026A54(v3, (uint64_t)qword_100802418);
    id v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v4, v5))
    {
      id v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Clearing activeSegmentRange.", v6, 2u);
      swift_slowDealloc();
    }

    sub_1001C5220(0, v1, v2, 1);
  }
  else
  {
    if (qword_1007F6AE0 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100026A54(v7, (uint64_t)qword_100802418);
    char v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v8, v9))
    {
      id v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)id v10 = 136315138;
      uint64_t v11 = _NSRange.debugDescription.getter();
      sub_10011EA98(v11, v12, &v13);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Updating activeSegmentRange: %s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_1001C5220(0, v1, v2, 0);
  }
}

void sub_1001C5220(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  os_log_type_t v5 = v4;
  if (qword_1007F6AE0 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100026A54(v10, (uint64_t)qword_100802418);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "Resetting attributed text", v13, 2u);
    swift_slowDealloc();
  }

  if (a1)
  {
    id v14 = [v5 textStorage];
    unint64_t v15 = sub_1001C4B84();
    sub_10065B904(v14, a1, v15);

    swift_bridgeObjectRelease();
  }
  sub_1001C62EC();
  uint64_t v16 = *(void *)&v5[OBJC_IVAR____TtC7Journal14TranscriptView_model];
  swift_getKeyPath();
  long long aBlock = (void **)v16;
  sub_1001C71A4((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v17 = *(void ***)(v16 + 16);
  if (!v17)
  {
    if ((a4 & 1) == 0)
    {
      uint64_t v20 = &selRef_secondaryLabelColor;
      goto LABEL_14;
    }
    goto LABEL_13;
  }
  uint64_t v18 = *(void *)(v16 + 24);
  uint64_t ObjectType = swift_getObjectType();
  long long aBlock = v17;
  uint64_t v20 = &selRef_secondaryLabelColor;
  if ((*(uint64_t (**)(uint64_t))(*(void *)(v18 + 8) + 8))(ObjectType) & 1) == 0 && (a4) {
LABEL_13:
  }
    uint64_t v20 = &selRef_labelColor;
LABEL_14:
  id v21 = [self *v20];
  id v22 = [v5 textStorage];
  uint64_t v23 = (uint64_t)[v22 length];

  if (v23 < 0)
  {
    __break(1u);
    goto LABEL_41;
  }
  id v24 = [v5 textLayoutManager];
  if (v24)
  {
    uint64_t v25 = v24;
    char v63 = a4;
    id v26 = sub_10001357C(0, v23);
    if (v26)
    {
      uint64_t v27 = v26;
      sub_100010218(&qword_100802488);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1006D6280;
      *(void *)(inited + 32) = NSForegroundColorAttributeName;
      uint64_t v61 = a3;
      if (v21)
      {
        uint64_t v29 = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
      }
      else
      {
        uint64_t v29 = 0;
        *(void *)(inited + 48) = 0;
        *(void *)(inited + 56) = 0;
      }
      *(void *)(inited + 40) = v21;
      *(void *)(inited + 64) = v29;
      uint64_t v30 = NSForegroundColorAttributeName;
      id v62 = v21;
      unint64_t v31 = sub_100397260(inited);
      sub_1001C6B6C(v31);
      swift_bridgeObjectRelease();
      type metadata accessor for Key(0);
      sub_1001C71A4((unint64_t *)&qword_10080A680, type metadata accessor for Key);
      Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v25 setRenderingAttributes:isa forTextRange:v27];

      id v33 = [v27 location];
      uint64_t v34 = swift_allocObject();
      *(void *)(v34 + 16) = v25;
      *(void *)(v34 + 24) = v27;
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = sub_1001C7310;
      *(void *)(v35 + 24) = v34;
      unsigned __int8 v68 = sub_1001C7314;
      uint64_t v69 = v35;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v65 = 1107296256;
      unsigned __int8 v66 = sub_10012DFC8;
      unsigned __int8 v67 = &unk_10079CFF0;
      uint64_t v36 = _Block_copy(&aBlock);
      id v37 = v25;
      id v38 = v27;
      swift_retain();
      swift_release();
      id v39 = [v37 enumerateTextLayoutFragmentsFromLocation:v33 options:0 usingBlock:v36];
      swift_unknownObjectRelease();
      swift_unknownObjectRelease();

      _Block_release(v36);
      LOBYTE(v37) = swift_isEscapingClosureAtFileLocation();

      swift_release();
      swift_release();
      if ((v37 & 1) == 0)
      {
        a3 = v61;
        a4 = v63;
        goto LABEL_25;
      }
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
  }
  else
  {
    uint64_t v25 = v21;
  }

LABEL_25:
  swift_getKeyPath();
  long long aBlock = (void **)v16;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v40 = *(void ***)(v16 + 16);
  if (v40)
  {
    uint64_t v41 = *(void *)(v16 + 24);
    uint64_t v42 = swift_getObjectType();
    long long aBlock = v40;
    if (((*(uint64_t (**)(uint64_t))(*(void *)(v41 + 8) + 8))(v42) & 1) != 0
      && v5[OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIRange + 16] == 1)
    {
      sub_1001C5B14();
    }
  }
  if ((a4 & 1) == 0)
  {
    id v43 = [self labelColor];
    id v44 = [v5 textLayoutManager];
    if (v44)
    {
      long long v45 = v44;
      id v46 = sub_10001357C(a2, a3);
      if (v46)
      {
        uint64_t v47 = v46;
        sub_100010218(&qword_100802488);
        uint64_t v48 = swift_initStackObject();
        *(_OWORD *)(v48 + 16) = xmmword_1006D6280;
        *(void *)(v48 + 32) = NSForegroundColorAttributeName;
        if (v43)
        {
          uint64_t v49 = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
        }
        else
        {
          uint64_t v49 = 0;
          *(void *)(v48 + 48) = 0;
          *(void *)(v48 + 56) = 0;
        }
        *(void *)(v48 + 40) = v43;
        *(void *)(v48 + 64) = v49;
        uint64_t v50 = NSForegroundColorAttributeName;
        id v51 = v43;
        unint64_t v52 = sub_100397260(v48);
        sub_1001C6B6C(v52);
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_1001C71A4((unint64_t *)&qword_10080A680, type metadata accessor for Key);
        Class v53 = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v45 setRenderingAttributes:v53 forTextRange:v47];

        id v54 = [v47 location];
        uint64_t v55 = swift_allocObject();
        *(void *)(v55 + 16) = v45;
        *(void *)(v55 + 24) = v47;
        uint64_t v56 = swift_allocObject();
        *(void *)(v56 + 16) = sub_1001C7310;
        *(void *)(v56 + 24) = v55;
        unsigned __int8 v68 = sub_1001C7314;
        uint64_t v69 = v56;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v65 = 1107296256;
        unsigned __int8 v66 = sub_10012DFC8;
        unsigned __int8 v67 = &unk_10079CF78;
        uint64_t v57 = _Block_copy(&aBlock);
        id v58 = v45;
        id v59 = v47;
        swift_retain();
        swift_release();
        id v60 = [v58 enumerateTextLayoutFragmentsFromLocation:v54 options:0 usingBlock:v57];
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

        _Block_release(v57);
        LOBYTE(v58) = swift_isEscapingClosureAtFileLocation();

        swift_release();
        swift_release();
        if ((v58 & 1) == 0) {
          return;
        }
LABEL_42:
        __break(1u);
        return;
      }
    }
    else
    {
      long long v45 = v43;
    }
  }
}

void sub_1001C5B14()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ColorResource();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  id v6 = (char *)v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [v0 textStorage];
  id v8 = [v7 string];

  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v11 = v10;

  sub_10065BEF8(v9, v11, (uint64_t)&aBlock);
  uint64_t v12 = (uint64_t)aBlock;
  uint64_t v13 = v57;
  LOBYTE(v9) = (_BYTE)v58;
  uint64_t v14 = (uint64_t)v59;
  id v54 = v60;
  int v55 = v61;
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    uint64_t v53 = v14;
    uint64_t v15 = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    if (qword_1007F7FC8 != -1) {
      swift_once();
    }
    uint64_t v16 = sub_100026A54(v2, (uint64_t)qword_10083F078);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v16, v2);
    uint64_t v17 = (void *)UIColor.init(resource:)();
    id v18 = [v1 textLayoutManager];
    if (v18)
    {
      uint64_t v19 = v18;
      id v20 = sub_10001357C(v12, v13);
      if (v20)
      {
        id v21 = v20;
        v51[0] = v1;
        sub_100010218(&qword_100802488);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_1006D6280;
        *(void *)(inited + 64) = v15;
        *(void *)(inited + 32) = NSForegroundColorAttributeName;
        *(void *)(inited + 40) = v17;
        uint64_t v23 = NSForegroundColorAttributeName;
        id v52 = v17;
        unint64_t v24 = sub_100397260(inited);
        sub_1001C6B6C(v24);
        v51[1] = 0;
        swift_bridgeObjectRelease();
        type metadata accessor for Key(0);
        sub_1001C71A4((unint64_t *)&qword_10080A680, type metadata accessor for Key);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        [v19 setRenderingAttributes:isa forTextRange:v21];

        id v26 = [v21 location];
        uint64_t v27 = swift_allocObject();
        *(void *)(v27 + 16) = v19;
        *(void *)(v27 + 24) = v21;
        uint64_t v28 = swift_allocObject();
        *(void *)(v28 + 16) = sub_1001C7310;
        *(void *)(v28 + 24) = v27;
        id v60 = sub_1001C7314;
        uint64_t v61 = (void *)v28;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v57 = 1107296256;
        id v58 = sub_10012DFC8;
        id v59 = &unk_10079CF00;
        uint64_t v29 = _Block_copy(&aBlock);
        id v30 = v19;
        id v31 = v21;
        swift_retain();
        swift_release();
        id v32 = [v30 enumerateTextLayoutFragmentsFromLocation:v26 options:0 usingBlock:v29];
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();

        _Block_release(v29);
        LOBYTE(v30) = swift_isEscapingClosureAtFileLocation();

        swift_release();
        swift_release();
        if (v30)
        {
          __break(1u);
          return;
        }
        uint64_t v1 = (void *)v51[0];
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v19 = v17;
    }

LABEL_11:
    uint64_t v14 = v53;
  }
  if (v55) {
    return;
  }
  uint64_t v33 = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
  if (qword_1007F7FC0 != -1) {
    swift_once();
  }
  uint64_t v34 = sub_100026A54(v2, (uint64_t)qword_10083F060);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v34, v2);
  uint64_t v35 = (void *)UIColor.init(resource:)();
  id v36 = [v1 textLayoutManager];
  if (v36)
  {
    id v37 = v36;
    id v38 = sub_10001357C(v14, (uint64_t)v54);
    if (!v38)
    {

      goto LABEL_21;
    }
    id v39 = v38;
    sub_100010218(&qword_100802488);
    uint64_t v40 = swift_initStackObject();
    *(_OWORD *)(v40 + 16) = xmmword_1006D6280;
    *(void *)(v40 + 64) = v33;
    *(void *)(v40 + 32) = NSForegroundColorAttributeName;
    *(void *)(v40 + 40) = v35;
    uint64_t v41 = NSForegroundColorAttributeName;
    uint64_t v42 = v35;
    unint64_t v43 = sub_100397260(v40);
    sub_1001C6B6C(v43);
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    sub_1001C71A4((unint64_t *)&qword_10080A680, type metadata accessor for Key);
    Class v44 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v37 setRenderingAttributes:v44 forTextRange:v39];

    id v45 = [v39 location];
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v37;
    *(void *)(v46 + 24) = v39;
    uint64_t v35 = (void *)swift_allocObject();
    v35[2] = sub_1001C7294;
    v35[3] = v46;
    id v60 = sub_1001C72AC;
    uint64_t v61 = v35;
    long long aBlock = _NSConcreteStackBlock;
    uint64_t v57 = 1107296256;
    id v58 = sub_10012DFC8;
    id v59 = &unk_10079CE88;
    uint64_t v47 = _Block_copy(&aBlock);
    id v48 = v37;
    id v49 = v39;
    swift_retain();
    swift_release();
    id v50 = [v48 enumerateTextLayoutFragmentsFromLocation:v45 options:0 usingBlock:v47];
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    _Block_release(v47);
    LOBYTE(v48) = swift_isEscapingClosureAtFileLocation();

    swift_release();
    swift_release();
    if ((v48 & 1) == 0) {
      return;
    }
    __break(1u);
  }
  id v37 = v35;
LABEL_21:
}

void sub_1001C62EC()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Journal14TranscriptView_shouldShowWaitingUI;
  if (v0[OBJC_IVAR____TtC7Journal14TranscriptView_shouldShowWaitingUI] != 1) {
    goto LABEL_13;
  }
  uint64_t v3 = &v0[OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIRange];
  if (v0[OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIRange + 16] == 1)
  {
    uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC7Journal14TranscriptView_model];
    swift_getKeyPath();
    aBlock[0] = v4;
    sub_1001C71A4((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v5 = *(void *)(v4 + 16);
    if (v5)
    {
      uint64_t v6 = *(void *)(v4 + 24);
      uint64_t ObjectType = swift_getObjectType();
      aBlock[0] = v5;
      if ((*(uint64_t (**)(uint64_t))(*(void *)(v6 + 8) + 8))(ObjectType))
      {
        id v8 = [objc_allocWithZone((Class)type metadata accessor for TranscriptWaitingViewTextAttachment()) init];
        id v9 = [self attributedStringWithAttachment:v8];
        id v10 = objc_allocWithZone((Class)NSMutableAttributedString);
        NSString v11 = String._bridgeToObjectiveC()();
        id v12 = [v10 initWithString:v11];

        id v13 = [v1 textStorage];
        id v14 = [v13 string];

        uint64_t v15 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v17 = v16;

        unint64_t v18 = sub_1005A86F4(v15, v17);
        unint64_t v20 = v19;
        swift_bridgeObjectRelease();
        if (!v20)
        {
LABEL_11:
          [v12 appendAttributedString:v9];
          sub_1001C4B84();
          type metadata accessor for Key(0);
          sub_1001C71A4((unint64_t *)&qword_10080A680, type metadata accessor for Key);
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v27 = v12;
          id v28 = [v27 length];

          [v27 addAttributes:isa range:0 v28];
          id v29 = [v1 textStorage];
          id v30 = [v29 length];

          id v31 = [v27 length];
          *(void *)uint64_t v3 = v30;
          *((void *)v3 + 1) = v31;
          v3[16] = 0;
          id v32 = [v1 textStorage];
          [v32 appendAttributedString:v27];

          uint64_t v33 = *(void **)&v1[OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIAttachment];
          *(void *)&v1[OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIAttachment] = v8;

          return;
        }
        unint64_t v21 = sub_1005B3994(v18, v20);
        if ((v21 & 0x100000000) == 0)
        {
          int v22 = v21;
          swift_bridgeObjectRelease();
          if ((v22 - 14) <= 0xFFFFFFFB && (v22 - 8232) >= 2 && v22 != 133)
          {
            id v23 = objc_allocWithZone((Class)NSAttributedString);
            NSString v24 = String._bridgeToObjectiveC()();
            id v25 = [v23 initWithString:v24];

            [v12 appendAttributedString:v25];
          }
          goto LABEL_11;
        }
        goto LABEL_22;
      }
    }
  }
  if ((v1[v2] & 1) == 0)
  {
LABEL_13:
    uint64_t v34 = OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIAttachment;
    uint64_t v35 = *(void **)&v1[OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIAttachment];
    if (v35)
    {
      uint64_t v36 = *(void *)&v1[OBJC_IVAR____TtC7Journal14TranscriptView_model];
      swift_getKeyPath();
      aBlock[0] = v36;
      sub_1001C71A4((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
      id v37 = v35;
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v38 = *(void *)(v36 + 16);
      if (v38
        && (uint64_t v39 = *(void *)(v36 + 24),
            uint64_t v40 = swift_getObjectType(),
            aBlock[0] = v38,
            ((*(uint64_t (**)(uint64_t))(*(void *)(v39 + 8) + 8))(v40) & 1) != 0)
        || (uint64_t v41 = &v1[OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIRange],
            (v1[OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIRange + 16] & 1) != 0))
      {
        uint64_t v42 = 0;
      }
      else
      {
        uint64_t v44 = *(void *)v41;
        uint64_t v43 = *((void *)v41 + 1);
        id v45 = [v1 textStorage];
        id v46 = [v1 textStorage];
        id v47 = [v46 length];

        id v48 = (void *)swift_allocObject();
        v48[2] = v37;
        v48[3] = v1;
        v48[4] = v44;
        v48[5] = v43;
        uint64_t v49 = swift_allocObject();
        uint64_t v42 = sub_1001C7168;
        *(void *)(v49 + 16) = sub_1001C7168;
        *(void *)(v49 + 24) = v48;
        aBlock[4] = sub_1001C7184;
        aBlock[5] = v49;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_1005A7B04;
        void aBlock[3] = &unk_10079CE10;
        id v50 = _Block_copy(aBlock);
        id v51 = v37;
        id v52 = v1;
        swift_retain();
        swift_release();
        [v45 enumerateAttribute:NSAttachmentAttributeName inRange:0 options:v47 usingBlock:v50];

        _Block_release(v50);
        LOBYTE(v45) = swift_isEscapingClosureAtFileLocation();
        swift_release();
        if (v45)
        {
          __break(1u);
LABEL_22:
          __break(1u);
          return;
        }
      }
      uint64_t v53 = &v1[OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIRange];
      *(void *)uint64_t v53 = 0;
      *((void *)v53 + 1) = 0;
      v53[16] = 1;
      id v54 = *(void **)&v1[v34];
      *(void *)&v1[v34] = 0;

      sub_10001ABB8((uint64_t)v42);
    }
  }
}

void sub_1001C698C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  sub_1001C71EC(a1, (uint64_t)v17);
  if (v18)
  {
    sub_10001B284(0, &qword_100802480);
    if (swift_dynamicCast())
    {
      sub_10001B284(0, (unint64_t *)&unk_100800920);
      if (static NSObject.== infix(_:_:)())
      {
        sub_1001C4B84();
        id v11 = objc_allocWithZone((Class)NSAttributedString);
        NSString v12 = String._bridgeToObjectiveC()();
        type metadata accessor for Key(0);
        sub_1001C71A4((unint64_t *)&qword_10080A680, type metadata accessor for Key);
        Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v14 = [v11 initWithString:v12 attributes:isa];

        id v15 = [a6 textStorage];
        [v15 replaceCharactersInRange:a7 withAttributedString:a8];
      }
      else
      {
      }
    }
  }
  else
  {
    sub_10001457C((uint64_t)v17, &qword_1007FAD50);
  }
}

uint64_t sub_1001C6B6C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 64);
  uint64_t v34 = a1 + 64;
  uint64_t v2 = -1 << *(unsigned char *)(a1 + 32);
  id v46 = _swiftEmptyDictionarySingleton;
  if (-v2 < 64) {
    uint64_t v3 = ~(-1 << -(char)v2);
  }
  else {
    uint64_t v3 = -1;
  }
  unint64_t v4 = v3 & v1;
  int64_t v33 = (unint64_t)(63 - v2) >> 6;
  uint64_t v5 = (char *)v42 + 8;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v4) {
    goto LABEL_38;
  }
LABEL_7:
  int64_t v9 = i + 1;
  if (!__OFADD__(i, 1))
  {
    if (v9 < v33)
    {
      unint64_t v10 = *(void *)(v34 + 8 * v9);
      int64_t v11 = i + 1;
      if (v10) {
        goto LABEL_22;
      }
      int64_t v11 = i + 2;
      if (i + 2 >= v33) {
        goto LABEL_39;
      }
      unint64_t v10 = *(void *)(v34 + 8 * v11);
      if (v10) {
        goto LABEL_22;
      }
      int64_t v11 = i + 3;
      if (i + 3 >= v33) {
        goto LABEL_39;
      }
      unint64_t v10 = *(void *)(v34 + 8 * v11);
      if (v10) {
        goto LABEL_22;
      }
      int64_t v11 = i + 4;
      if (i + 4 >= v33) {
        goto LABEL_39;
      }
      unint64_t v10 = *(void *)(v34 + 8 * v11);
      if (v10)
      {
LABEL_22:
        unint64_t v4 = (v10 - 1) & v10;
        unint64_t v13 = __clz(__rbit64(v10)) + (v11 << 6);
        for (i = v11; ; unint64_t v13 = v32 | (i << 6))
        {
          id v14 = *(void **)(*(void *)(a1 + 48) + 8 * v13);
          sub_1001C71EC(*(void *)(a1 + 56) + 32 * v13, (uint64_t)v44 + 8);
          *(void *)&v44[0] = v14;
          v42[0] = v44[0];
          v42[1] = v44[1];
          uint64_t v43 = v45;
          sub_1001C71EC((uint64_t)v5, (uint64_t)&v36);
          if (v37)
          {
            sub_10002102C(&v36, v41);
            uint64_t v15 = *(void *)&v42[0];
            uint64_t v39 = *(void *)&v42[0];
            unint64_t v16 = v5;
            sub_1000685B8((uint64_t)v5, (uint64_t)v40);
            sub_10002102C(v41, v38);
            unint64_t v17 = v46;
            unint64_t v18 = v46[2];
            if (v46[3] <= v18)
            {
              uint64_t v20 = v18 + 1;
              id v21 = v14;
              sub_100544268(v20, 1);
              unint64_t v17 = v46;
            }
            else
            {
              id v19 = v14;
            }
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            Hasher.init(_seed:)();
            String.hash(into:)();
            Swift::Int v22 = Hasher._finalize()();
            uint64_t result = swift_bridgeObjectRelease();
            id v23 = v17 + 8;
            uint64_t v24 = -1 << *((unsigned char *)v17 + 32);
            unint64_t v25 = v22 & ~v24;
            unint64_t v26 = v25 >> 6;
            if (((-1 << v25) & ~v17[(v25 >> 6) + 8]) != 0)
            {
              unint64_t v27 = __clz(__rbit64((-1 << v25) & ~v17[(v25 >> 6) + 8])) | v25 & 0x7FFFFFFFFFFFFFC0;
            }
            else
            {
              char v28 = 0;
              unint64_t v29 = (unint64_t)(63 - v24) >> 6;
              do
              {
                if (++v26 == v29 && (v28 & 1) != 0)
                {
                  __break(1u);
                  goto LABEL_40;
                }
                BOOL v30 = v26 == v29;
                if (v26 == v29) {
                  unint64_t v26 = 0;
                }
                v28 |= v30;
                uint64_t v31 = v23[v26];
              }
              while (v31 == -1);
              unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
            }
            *(void *)((char *)v23 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
            *(void *)(v17[6] + 8 * v27) = v15;
            sub_10002102C(v38, (_OWORD *)(v17[7] + 32 * v27));
            ++v17[2];
            uint64_t result = sub_10001457C((uint64_t)v40, &qword_1007FAD50);
            uint64_t v5 = v16;
            if (!v4) {
              goto LABEL_7;
            }
          }
          else
          {
            id v8 = v14;
            sub_10001457C((uint64_t)v42, &qword_100802490);
            uint64_t result = sub_10001457C((uint64_t)&v36, &qword_1007FAD50);
            if (!v4) {
              goto LABEL_7;
            }
          }
LABEL_38:
          unint64_t v32 = __clz(__rbit64(v4));
          v4 &= v4 - 1;
        }
      }
      int64_t v12 = i + 5;
      if (i + 5 < v33)
      {
        unint64_t v10 = *(void *)(v34 + 8 * v12);
        if (v10)
        {
          int64_t v11 = i + 5;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v11 = v12 + 1;
          if (__OFADD__(v12, 1)) {
            goto LABEL_41;
          }
          if (v11 >= v33) {
            break;
          }
          unint64_t v10 = *(void *)(v34 + 8 * v11);
          ++v12;
          if (v10) {
            goto LABEL_22;
          }
        }
      }
    }
LABEL_39:
    sub_100082D3C();
    return (uint64_t)v46;
  }
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1001C6F48(void *a1, id a2, void *a3)
{
  id v5 = [a2 textViewportLayoutController];
  id v6 = [v5 renderingSurfaceForKey:a1];

  if (v6)
  {
    self;
    id v7 = (void *)swift_dynamicCastObjCClass();
    if (v7) {
      [v7 setNeedsDisplay];
    }
    swift_unknownObjectRelease();
  }
  id v8 = [a1 rangeInElement];
  unsigned int v9 = [v8 containsLocation:[a3 endLocation]];

  swift_unknownObjectRelease();
  return v9 ^ 1;
}

id sub_1001C707C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TranscriptView();
  [super dealloc];
}

uint64_t type metadata accessor for TranscriptView()
{
  return self;
}

uint64_t sub_1001C7128()
{
  return swift_deallocObject();
}

void sub_1001C7168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_1001C698C(a1, a2, a3, a4, *(void *)(v4 + 16), *(void **)(v4 + 24), *(void *)(v4 + 32), *(void *)(v4 + 40));
}

uint64_t sub_1001C7174()
{
  return swift_deallocObject();
}

uint64_t sub_1001C7184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1005A7ADC(a1, a2, a3, a4, *(uint64_t (**)(void))(v4 + 16));
}

uint64_t sub_1001C718C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001C719C()
{
  return swift_release();
}

uint64_t sub_1001C71A4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001C71EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007FAD50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001C7254()
{
  return swift_deallocObject();
}

uint64_t sub_1001C7294(void *a1)
{
  return sub_1001C6F48(a1, *(id *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1001C729C()
{
  return swift_deallocObject();
}

uint64_t sub_1001C72AC(uint64_t a1)
{
  return sub_10012DF9C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_1001C72B4()
{
  return swift_deallocObject();
}

uint64_t sub_1001C72C4()
{
  return swift_deallocObject();
}

uint64_t sub_1001C72D4()
{
  return swift_deallocObject();
}

uint64_t sub_1001C7318(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_1001C736C(uint64_t a1, char a2)
{
  [v2 loadViewIfNeeded];
  uint64_t v5 = OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_viewModel;
  *(void *)&v2[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_viewModel] = a1;
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)&v2[v5];
  if (v6)
  {
    id v7 = *(void **)(v6 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController);
    if (v7) {
      [v7 setDelegate:v2];
    }
  }
  id v8 = (objc_class *)type metadata accessor for JournalEntryCollectionViewPrefetcher();
  unsigned int v9 = (char *)objc_allocWithZone(v8);
  *(void *)&v9[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewPrefetcher_prefetchEntryTasks] = &_swiftEmptyDictionarySingleton;
  *(void *)&v9[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewPrefetcher_viewModel] = a1;
  v14.receiver = v9;
  v14.super_class = v8;
  swift_retain();
  id v10 = [super init];
  uint64_t v11 = OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_prefetcher;
  int64_t v12 = *(void **)&v2[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_prefetcher];
  *(void *)&v2[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_prefetcher] = v10;

  unint64_t v13 = *(void **)&v2[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView];
  if (v13) {
    [v13 setPrefetchDataSource:v2[v11] v14.receiver, v14.super_class];
  }
  if (a2) {
    sub_1001C824C();
  }
}

uint64_t sub_1001C7490(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v63 = *(void *)(v2 - 8);
  uint64_t v64 = v2;
  __chkstk_darwin(v2);
  uint64_t v61 = (char *)&v53 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = type metadata accessor for DispatchQoS();
  uint64_t v60 = *(void *)(v62 - 8);
  __chkstk_darwin(v62);
  id v59 = (char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchTimeInterval();
  uint64_t v56 = *(void *)(v5 - 8);
  uint64_t v57 = v5;
  __chkstk_darwin(v5);
  int v55 = (uint64_t *)((char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v66 = type metadata accessor for DispatchTime();
  uint64_t v58 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  id v54 = (char *)&v53 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v65 = (char *)&v53 - v9;
  uint64_t v10 = sub_100010218(&qword_1007FD5E0);
  __chkstk_darwin(v10 - 8);
  int64_t v12 = (char *)&v53 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v53 - v14;
  __chkstk_darwin(v16);
  unint64_t v18 = (char *)&v53 - v17;
  uint64_t v19 = sub_100010218((uint64_t *)&unk_1007FD5F0);
  uint64_t v20 = *(void *)(v19 - 8);
  id v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v20 + 48);
  int v22 = v21(a1, 1, v19);
  sub_10001B220(a1, (uint64_t)v15, &qword_1007FD5E0);
  if (v21((uint64_t)v15, 1, v19) == 1)
  {
    uint64_t v23 = v67;
    uint64_t v24 = *(void **)(v67 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_dataSource);
    if (v24)
    {
      id v25 = v24;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      uint64_t v26 = 0;
    }
    else
    {
      uint64_t v26 = 1;
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 56))(v18, v26, 1, v19);
    sub_10001457C((uint64_t)v15, &qword_1007FD5E0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v18, v15, v19);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v18, 0, 1, v19);
    uint64_t v23 = v67;
  }
  sub_10001B220((uint64_t)v18, (uint64_t)v12, &qword_1007FD5E0);
  if (v21((uint64_t)v12, 1, v19) == 1)
  {
    sub_10001457C((uint64_t)v12, &qword_1007FD5E0);
  }
  else
  {
    uint64_t v27 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v19);
    uint64_t v28 = *(void *)(v27 + 16);
    if (v28)
    {
      uint64_t v29 = *(void *)(v27 + 16 * v28 + 24);
      swift_bridgeObjectRelease();
      if (v22 == 1)
      {
        if (v29 == 1)
        {
          *(unsigned char *)(v23 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_hasLoadedContent) = 0;
          uint64_t v30 = v23 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_delegate;
          if (swift_unknownObjectWeakLoadStrong())
          {
            uint64_t v31 = *(void *)(v30 + 8);
            uint64_t ObjectType = swift_getObjectType();
            (*(void (**)(uint64_t, uint64_t))(v31 + 48))(ObjectType, v31);
            swift_unknownObjectRelease();
          }
          goto LABEL_20;
        }
      }
      else if (v29 == 1)
      {
        return sub_10001457C((uint64_t)v18, &qword_1007FD5E0);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  if ((*(unsigned char *)(v23 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_hasLoadedContent) & 1) == 0)
  {
    *(unsigned char *)(v23 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_hasLoadedContent) = 1;
    uint64_t v33 = v23 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v34 = *(void *)(v33 + 8);
      uint64_t v35 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v34 + 56))(v35, v34);
      swift_unknownObjectRelease();
    }
  }
  if (v22 == 1)
  {
LABEL_20:
    if (*(unsigned char *)(v23 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_shouldPlayVideoAfterDelay) == 1)
    {
      *(unsigned char *)(v23 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_shouldPlayVideoAfterDelay) = 0;
      sub_10001B284(0, (unint64_t *)&qword_100805AB0);
      uint64_t v67 = static OS_dispatch_queue.main.getter();
      long long v36 = v54;
      static DispatchTime.now()();
      uint64_t v38 = v55;
      uint64_t v37 = v56;
      *int v55 = 1000;
      uint64_t v39 = v57;
      (*(void (**)(void *, void, uint64_t))(v37 + 104))(v38, enum case for DispatchTimeInterval.milliseconds(_:), v57);
      + infix(_:_:)();
      (*(void (**)(void *, uint64_t))(v37 + 8))(v38, v39);
      uint64_t v58 = *(void *)(v58 + 8);
      ((void (*)(char *, uint64_t))v58)(v36, v66);
      uint64_t v40 = swift_allocObject();
      swift_unknownObjectWeakInit();
      aBlock[4] = sub_1001D5DC4;
      aBlock[5] = v40;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10017D530;
      void aBlock[3] = &unk_10079D878;
      uint64_t v41 = _Block_copy(aBlock);
      swift_release();
      uint64_t v42 = v59;
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_1001D59FC((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100010218(&qword_100804DB0);
      sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
      uint64_t v43 = v18;
      uint64_t v44 = v61;
      uint64_t v45 = v64;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      id v46 = v65;
      id v47 = (void *)v67;
      OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
      _Block_release(v41);

      id v48 = v44;
      unint64_t v18 = v43;
      (*(void (**)(char *, uint64_t))(v63 + 8))(v48, v45);
      (*(void (**)(char *, uint64_t))(v60 + 8))(v42, v62);
      ((void (*)(char *, uint64_t))v58)(v46, v66);
    }
    uint64_t v49 = v23 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_delegate;
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v50 = *(void *)(v49 + 8);
      uint64_t v51 = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v50 + 64))(v51, v50);
      swift_unknownObjectRelease();
    }
  }
  return sub_10001457C((uint64_t)v18, &qword_1007FD5E0);
}

BOOL sub_1001C7CF4()
{
  return !UIAccessibilityIsReduceTransparencyEnabled();
}

void sub_1001C7D10()
{
  uint64_t v1 = *(void *)((char *)v0 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_fadeView);
  sub_100010218((uint64_t *)&unk_1007FC0F0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1006D70D0;
  uint64_t v3 = self;
  id v4 = [v3 blackColor];
  id v5 = [v4 CGColor];

  type metadata accessor for CGColor(0);
  uint64_t v7 = v6;
  *(void *)(v2 + 56) = v6;
  *(void *)(v2 + 32) = v5;
  id v8 = [v3 blackColor];
  id v9 = [v8 CGColor];

  *(void *)(v2 + 88) = v7;
  *(void *)(v2 + 64) = v9;
  id v10 = [v3 blackColor];
  id v11 = [v10 colorWithAlphaComponent:0.45];

  id v12 = [v11 CGColor];
  *(void *)(v2 + 120) = v7;
  *(void *)(v2 + 96) = v12;
  id v13 = [v3 blackColor];
  id v14 = [v13 colorWithAlphaComponent:0.45];

  id v15 = [v14 CGColor];
  *(void *)(v2 + 152) = v7;
  *(void *)(v2 + 128) = v15;
  uint64_t v16 = OBJC_IVAR____TtC7Journal10FadingView_fadeColors;
  *(void *)(v1 + OBJC_IVAR____TtC7Journal10FadingView_fadeColors) = v2;
  swift_bridgeObjectRelease();
  uint64_t v17 = OBJC_IVAR____TtC7Journal10FadingView_contentFadeGradientLayer;
  unint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC7Journal10FadingView_contentFadeGradientLayer);
  if (*(void *)(v1 + v16))
  {
    swift_bridgeObjectRetain();
    v19.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v19.super.Class isa = 0;
  }
  [v18 setColors:v19.super.isa];

  if ((*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x2C8))())
  {
    if (qword_1007F68B0 != -1) {
      swift_once();
    }
    double v20 = *(double *)&qword_10083CDA8 + 60.0;
    id v21 = self;
    id v22 = [v21 mainScreen];
    [v22 bounds];
    CGFloat v24 = v23;
    CGFloat v26 = v25;
    CGFloat v28 = v27;
    CGFloat v30 = v29;

    v56.origin.CGFloat x = v24;
    v56.origin.y = v26;
    v56.size.width = v28;
    v56.size.height = v30;
    double v31 = 1.0 - v20 / CGRectGetHeight(v56);
    id v32 = [v21 mainScreen];
    [v32 bounds];
    CGFloat v34 = v33;
    CGFloat v36 = v35;
    CGFloat v38 = v37;
    CGFloat v40 = v39;

    v57.origin.CGFloat x = v34;
    v57.origin.y = v36;
    v57.size.width = v38;
    v57.size.height = v40;
    double v41 = v31 + v20 * 0.5 / CGRectGetHeight(v57);
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v42 = swift_allocObject();
    *(_OWORD *)(v42 + 16) = xmmword_1006D6D30;
    sub_10001B284(0, (unint64_t *)&qword_1007FEB30);
    *(NSNumber *)(v42 + 32) = NSNumber.init(integerLiteral:)(0);
    id v43 = objc_allocWithZone((Class)NSNumber);
    *(float *)&CGFloat v34 = v31;
    LODWORD(v44) = LODWORD(v34);
    *(void *)(v42 + 40) = [v43 initWithFloat:v44];
    id v45 = objc_allocWithZone((Class)NSNumber);
    *(float *)&CGFloat v34 = v41;
    LODWORD(v46) = LODWORD(v34);
    *(void *)(v42 + 48) = [v45 initWithFloat:v46];
    *(NSNumber *)(v42 + 56) = NSNumber.init(integerLiteral:)(1);
    uint64_t v54 = v42;
    specialized Array._endMutation()();
    uint64_t v47 = OBJC_IVAR____TtC7Journal10FadingView_fadeLocations;
    *(void *)(v1 + OBJC_IVAR____TtC7Journal10FadingView_fadeLocations) = v54;
    swift_bridgeObjectRelease();
    id v48 = *(void **)(v1 + v17);
    if (*(void *)(v1 + v47))
    {
      swift_bridgeObjectRetain();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      Class isa = 0;
    }
    [v48 setLocations:isa, isa];
  }
  else
  {
    uint64_t v49 = OBJC_IVAR____TtC7Journal10FadingView_fadeLocations;
    *(void *)(v1 + OBJC_IVAR____TtC7Journal10FadingView_fadeLocations) = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    uint64_t v50 = *(void **)(v1 + v17);
    if (*(void *)(v1 + v49))
    {
      sub_10001B284(0, (unint64_t *)&qword_1007FEB30);
      swift_bridgeObjectRetain();
      Class v52 = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
    }
    else
    {
      Class v52 = 0;
    }
    [v50 setLocations:v52, v52];
  }
}

void sub_1001C824C()
{
  *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_hasPerformedInitialFetch) = 1;
  uint64_t v1 = OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_viewModel;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_viewModel);
  if (!v2) {
    return;
  }
  uint64_t v3 = v0;
  id v4 = *(void **)(v2 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController);
  if (!v4) {
    goto LABEL_10;
  }
  v15[0] = 0;
  if ([v4 performFetch:v15])
  {
    id v5 = v15[0];
    uint64_t v6 = *(void *)(v0 + v1);
    if (!v6) {
      return;
    }
    goto LABEL_11;
  }
  id v7 = v15[0];
  _convertNSErrorToError(_:)();

  swift_willThrow();
  if (qword_1007F6AE8 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100026A54(v8, (uint64_t)qword_10083D088);
  swift_errorRetain();
  swift_errorRetain();
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    id v11 = (uint8_t *)swift_slowAlloc();
    id v12 = (void *)swift_slowAlloc();
    *(_DWORD *)id v11 = 138412290;
    swift_errorRetain();
    id v13 = (void *)_swift_stdlib_bridgeErrorToNSError();
    v15[0] = v13;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v12 = v13;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "Fetch error: %@", v11, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
LABEL_10:
    uint64_t v6 = *(void *)(v3 + v1);
    if (!v6) {
      return;
    }
    goto LABEL_11;
  }
  swift_errorRelease();
  swift_errorRelease();
  swift_errorRelease();

  uint64_t v6 = *(void *)(v3 + v1);
  if (!v6) {
    return;
  }
LABEL_11:
  if (!*(void *)(v6 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_currentFilters))
  {
    swift_retain();
    sub_100035E94();
    if (qword_1007F6E00 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_100010218(qword_100802748);
    sub_100026A54(v14, (uint64_t)qword_10083D390);
    swift_beginAccess();
    Tips.Parameter.wrappedValue.setter();
    swift_endAccess();
    swift_release();
  }
}

uint64_t sub_1001C857C(uint64_t a1, char a2, char a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v18 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  id v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = a1;
  *(unsigned char *)(v14 + 32) = a2;
  *(unsigned char *)(v14 + 33) = a3;
  aBlock[4] = sub_1001D5DCC;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  void aBlock[3] = &unk_10079D850;
  id v15 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001D59FC((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v17);
}

void sub_1001C889C()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  id v59 = *(void (***)(char *, uint64_t))(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for IndexPath();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218((uint64_t *)&unk_1007FD5D0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView;
  id v15 = *(void **)(v0 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  if (v15)
  {
    uint64_t v58 = v11;
    int v55 = v7;
    id v54 = v15;
    id v16 = [v54 indexPathsForVisibleItems];
    uint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v18 = v17;
    uint64_t v19 = *(void *)(v17 + 16);
    uint64_t v53 = v18;
    if (v19)
    {
      uint64_t v48 = v4;
      uint64_t v49 = v3;
      uint64_t v50 = v1;
      id v21 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
      uint64_t v20 = v9 + 16;
      uint64_t v63 = v21;
      unint64_t v22 = v18 + ((*(unsigned __int8 *)(v20 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 64));
      double v23 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 40);
      uint64_t v52 = OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_coreDataContext;
      uint64_t v61 = (void (**)(char *, char *, uint64_t))(v20 + 16);
      uint64_t v62 = (unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 32);
      uint64_t v60 = *(void *)(v20 + 56);
      uint64_t v47 = v67;
      double v46 = v59 + 1;
      id v45 = (void (**)(char *, uint64_t))(v5 + 8);
      id v59 = (void (**)(char *, uint64_t))(v20 - 8);
      v41[0] = (v20 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      CGFloat v24 = v58;
      uint64_t v56 = v20;
      uint64_t v57 = v0;
      uint64_t v51 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v20 + 40);
      v21(v14, v22, v8);
      while (1)
      {
        double v25 = *v23;
        (*v23)(v14, 0, 1, v8);
        if ((*v62)(v14, 1, v8) == 1) {
          goto LABEL_26;
        }
        (*v61)(v24, v14, v8);
        CGFloat v26 = *(void **)(v0 + v64);
        if (v26)
        {
          id v27 = v26;
          if (!objc_msgSend(v27, "dataSource", v41[0])) {
            goto LABEL_5;
          }
          sub_100010218(&qword_1007FAA68);
          if (!swift_dynamicCastClass())
          {
            swift_unknownObjectRelease();
LABEL_5:

LABEL_6:
            CGFloat v24 = v58;
            goto LABEL_7;
          }
          dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();
          CGFloat v28 = aBlock;
          id v29 = (id)v66;
          if (LOBYTE(v67[0]) != 2)
          {
            if (LOBYTE(v67[0]) == 255)
            {

              swift_unknownObjectRelease();
            }
            else
            {
              sub_1000D7EA0(aBlock, (id)v66, v67[0]);
              swift_unknownObjectRelease();
            }
            uint64_t v0 = v57;
            goto LABEL_6;
          }
          id v30 = [*(id *)(v57 + v52) objectWithID:aBlock];
          swift_unknownObjectRelease();

          sub_1000D7EA0(v28, v29, 2);
          type metadata accessor for JournalEntryMO();
          double v31 = (void *)swift_dynamicCastClass();
          if (v31)
          {
            id v32 = v31;
            id v33 = [v31 managedObjectContext];
            if (!v33) {
              id v33 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:2];
            }
            type metadata accessor for Journaling.EntryViewModel();
            swift_allocObject();
            uint64_t v34 = sub_10057F170(v32, 0, 0, v33);
            uint64_t v43 = v34;
            sub_10001B284(0, (unint64_t *)&qword_100805AB0);
            uint64_t v44 = static OS_dispatch_queue.main.getter();
            uint64_t v35 = swift_allocObject();
            swift_unknownObjectWeakInit();
            uint64_t v36 = swift_allocObject();
            *(void *)(v36 + 16) = v35;
            *(void *)(v36 + 24) = v34;
            *(_WORD *)(v36 + 32) = 257;
            v67[2] = sub_1001D5D5C;
            v67[3] = v36;
            long long aBlock = _NSConcreteStackBlock;
            uint64_t v66 = 1107296256;
            v67[0] = sub_10017D530;
            v67[1] = &unk_10079D788;
            uint64_t v42 = _Block_copy(&aBlock);
            swift_retain();
            swift_release();
            static DispatchQoS.unspecified.getter();
            long long aBlock = (void **)_swiftEmptyArrayStorage;
            v41[1] = sub_1001D59FC((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
            sub_100010218(&qword_100804DB0);
            sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
            double v37 = v49;
            uint64_t v38 = v50;
            dispatch thunk of SetAlgebra.init<A>(_:)();
            double v39 = v42;
            CGFloat v40 = (void *)v44;
            OS_dispatch_queue.async(group:qos:flags:execute:)();
            uint64_t v0 = v57;
            _Block_release(v39);

            (*v46)(v37, v38);
            (*v45)(v55, v48);
            swift_release();
          }
          else
          {

            uint64_t v0 = v57;
          }
          CGFloat v24 = v58;
          double v23 = v51;
        }
LABEL_7:
        (*v59)(v24, v8);
        v22 += v60;
        if (!--v19)
        {
          v25(v14, 1, 1, v8);
          goto LABEL_26;
        }
        v63(v14, v22, v8);
      }
    }
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
LABEL_26:

    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1001C906C(uint64_t a1, int a2, int a3)
{
  uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FD5D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v63[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for IndexPath();
  __chkstk_darwin(v10);
  __chkstk_darwin(v11);
  __chkstk_darwin(v12);
  uint64_t v19 = &v63[-v18];
  uint64_t v20 = *(void **)(v3 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  if (!v20) {
    return 0;
  }
  uint64_t v66 = v14;
  uint64_t v65 = v17;
  uint64_t v70 = v16;
  uint64_t v71 = v3;
  uint64_t v72 = v15;
  uint64_t v69 = v13;
  id v74 = v20;
  id v21 = [v74 visibleCells];
  sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
  unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v67 = v19;
  int v64 = a3;
  unsigned __int8 v68 = v9;
  LODWORD(v73) = a2;
  if (!(v22 >> 62))
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v23) {
      goto LABEL_4;
    }
    goto LABEL_19;
  }
LABEL_18:
  swift_bridgeObjectRetain();
  uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v23)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    if (v73)
    {
      uint64_t v42 = (uint64_t)v68;
      sub_1000D7C44(a1, (uint64_t)v68);
      uint64_t v43 = v72;
      uint64_t v44 = v69;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v42, 1, v69) == 1)
      {

        sub_10001457C(v42, (uint64_t *)&unk_1007FD5D0);
      }
      else
      {
        id v45 = *(char **)(v43 + 32);
        ((void (*)(unsigned char *, uint64_t, uint64_t))v45)(v67, v42, v44);
        double v46 = (void (*)(uint64_t, uint64_t, uint64_t))v45;
        uint64_t v75 = (void (*)(char *, uint64_t, uint64_t))v45;
        IndexPath.row.getter();
        IndexPath.section.getter();
        uint64_t v47 = v70;
        IndexPath.init(row:section:)();
        if (v64) {
          double v48 = 0.3;
        }
        else {
          double v48 = 0.0;
        }
        id v78 = self;
        uint64_t v49 = v43;
        char v76 = *(void (**)(uint64_t, uint64_t, uint64_t))(v43 + 16);
        uint64_t v50 = v65;
        v76(v65, v47, v44);
        uint64_t v51 = *(unsigned __int8 *)(v49 + 80);
        uint64_t v73 = v51 | 7;
        uint64_t v52 = swift_allocObject();
        id v53 = v74;
        *(void *)(v52 + 16) = v74;
        v46(v52 + ((v51 + 24) & ~v51), v50, v44);
        uint64_t v83 = sub_1001D5B68;
        uint64_t v84 = (void *)v52;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v80 = 1107296256;
        uint64_t v81 = sub_10017D530;
        uint64_t v82 = &unk_10079D6E8;
        uint64_t v77 = (char *)_Block_copy(&aBlock);
        id v54 = v53;
        uint64_t v55 = a1;
        id v56 = v54;
        swift_release();
        uint64_t v57 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v76(v50, v70, v44);
        uint64_t v58 = (char *)swift_allocObject();
        *((void *)v58 + 2) = v57;
        *((void *)v58 + 3) = v55;
        *((void *)v58 + 4) = v56;
        v75(&v58[(v51 + 40) & ~v51], v50, v44);
        uint64_t v83 = sub_1001D5CE0;
        uint64_t v84 = v58;
        long long aBlock = _NSConcreteStackBlock;
        uint64_t v80 = 1107296256;
        uint64_t v81 = sub_1001C7318;
        uint64_t v82 = &unk_10079D738;
        id v59 = _Block_copy(&aBlock);
        id v60 = v56;
        swift_retain();
        swift_release();
        uint64_t v61 = v77;
        [v78 animateWithDuration:0 delay:v77 options:v59 animations:v48 completion:0.0];
        _Block_release(v59);
        _Block_release(v61);

        uint64_t v62 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
        v62(v70, v44);
        v62((uint64_t)v67, v44);
      }
    }
    else
    {
    }
    return 0;
  }
LABEL_4:
  uint64_t v75 = (void (*)(char *, uint64_t, uint64_t))OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_id;
  char v76 = (void (*)(uint64_t, uint64_t, uint64_t))v23;
  unint64_t v24 = v22 & 0xC000000000000001;
  uint64_t v25 = 4;
  while (1)
  {
    if (v24) {
      id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v26 = *(id *)(v22 + 8 * v25);
    }
    id v27 = v26;
    uint64_t v28 = v25 - 3;
    if (__OFADD__(v25 - 4, 1))
    {
      __break(1u);
      goto LABEL_18;
    }
    type metadata accessor for JournalEntryCollectionViewCell();
    uint64_t v29 = swift_dynamicCastClass();
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v77 = (char *)OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry;
      uint64_t v31 = *(void *)(v29 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry);
      if (v31)
      {
        id v32 = *(void **)(v31 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_id);
        id v33 = *(void **)((char *)v75 + a1);
        sub_10001B284(0, (unint64_t *)&qword_100800A40);
        id v34 = v32;
        id v78 = v27;
        unint64_t v35 = v22;
        id v36 = v34;
        id v37 = v33;
        char v38 = static NSObject.== infix(_:_:)();

        unint64_t v22 = v35;
        id v27 = v78;

        uint64_t v23 = (uint64_t)v76;
        if (v38) {
          break;
        }
      }
    }

    ++v25;
    if (v28 == v23) {
      goto LABEL_19;
    }
  }
  swift_bridgeObjectRelease();
  double v39 = v77;
  *(void *)&v77[v30] = a1;
  swift_retain_n();
  swift_release();
  sub_1003ED2D4();
  sub_1003EDA5C();
  uint64_t v40 = *(void *)&v39[v30];
  if (v40)
  {
    swift_retain();
    sub_10037A920();
    sub_1003E4374(*(unsigned char *)(v40 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked), 0);
    sub_1003E4104(v40);
    sub_1003EDCCC();
    sub_1003EDF48();

    swift_release();
  }
  else
  {
  }
  swift_release();

  return 1;
}

void sub_1001C979C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void **)(v4 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  if (v17)
  {
    uint64_t v29 = v14;
    uint64_t v27 = v13;
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    uint64_t v18 = v8;
    uint64_t v19 = a2;
    id v20 = v17;
    uint64_t v28 = static OS_dispatch_queue.main.getter();
    uint64_t v21 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v22 = swift_allocObject();
    *(unsigned char *)(v22 + 16) = a1 & 1;
    *(void *)(v22 + 24) = v21;
    *(void *)(v22 + 32) = v20;
    *(void *)(v22 + 40) = v19;
    *(void *)(v22 + 48) = a3;
    aBlock[4] = sub_1001D5A8C;
    aBlock[5] = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    void aBlock[3] = &unk_10079D698;
    uint64_t v23 = _Block_copy(aBlock);
    id v24 = v20;
    swift_retain();
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1001D59FC((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v25 = (void *)v28;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v18);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v16, v29);
  }
}

void *sub_1001C9AF0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result = (void *)sub_1001D44B0(a1, a2, *(void **)(v3 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_coreDataContext));
  if (result)
  {
    id v6 = result;
    id v7 = [v6 managedObjectContext];
    if (!v7) {
      id v7 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:2];
    }
    type metadata accessor for Journaling.EntryViewModel();
    swift_allocObject();
    uint64_t v8 = sub_10057F170(v6, 0, 0, v7);
    char v9 = sub_1001C906C(v8, 1, a3 & 1);

    swift_release();
    return (void *)(v9 & 1);
  }
  return result;
}

void sub_1001C9BD4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FD5D0);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void **)(v2 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  if (v16)
  {
    id v17 = v16;
    sub_1000D7C44(a1, (uint64_t)v15);
    uint64_t v18 = type metadata accessor for IndexPath();
    int v19 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v15, 1, v18);
    sub_10001457C((uint64_t)v15, (uint64_t *)&unk_1007FD5D0);
    if (v19 == 1)
    {
      if (qword_1007F6AE8 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_100026A54(v20, (uint64_t)qword_10083D088);
      uint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v23 = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Did not find an existing indexPath to scroll to. Reload the data and try again.", v23, 2u);
        swift_slowDealloc();
      }

      uint64_t v24 = a1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_uuid;
      swift_beginAccess();
      sub_10001B220(v24, (uint64_t)v8, &qword_100800950);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
      {

        sub_10001457C((uint64_t)v8, &qword_100800950);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
        uint64_t v25 = OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_disableReloadAnimations;
        *(unsigned char *)(v3 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_disableReloadAnimations) = 1;
        [v17 reloadData];
        uint64_t v26 = UUID.uuidString.getter();
        sub_1001C9AF0(v26, v27, 0);
        swift_bridgeObjectRelease();

        (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
        *(unsigned char *)(v3 + v25) = 0;
      }
    }
    else
    {
      sub_1001C857C(a1, 1, a2 & 1);
    }
  }
}

uint64_t sub_1001C9F74(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&ObjectType - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v12 - 8);
  uint64_t v26 = v12;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&ObjectType - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1004B83A4(*(void *)(v4 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentFilterOptions), a1);
  if (v15)
  {
    if (*(void *)(v4 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentEntryIds))
    {
      if (a2)
      {
        swift_bridgeObjectRetain();
        unint64_t v16 = swift_bridgeObjectRetain();
        unsigned __int8 v17 = sub_1004B8418(v16, a2);
        swift_bridgeObjectRelease();
        uint64_t v15 = swift_bridgeObjectRelease();
        if (v17) {
          return a3(v15);
        }
      }
    }
    else if (!a2)
    {
      return a3(v15);
    }
  }
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  int v19 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v20;
  v21[3] = a3;
  v21[4] = a4;
  v21[5] = a2;
  uint64_t v22 = ObjectType;
  v21[6] = a1;
  v21[7] = v22;
  aBlock[4] = sub_1001D59EC;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  void aBlock[3] = &unk_10079D648;
  uint64_t v23 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_1001D59FC((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v23);

  (*(void (**)(char *, uint64_t))(v27 + 8))(v11, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v25 + 8))(v14, v26);
}

void *sub_1001CA324(char *a1)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  if (!v2) {
    return 0;
  }
  uint64_t v3 = v2;
  id v4 = [(id)v3 visibleCells];
  sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
  uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if ((unint64_t)v5 >> 62) {
    goto LABEL_94;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v6)
  {
LABEL_95:

    goto LABEL_96;
  }
LABEL_4:
  uint64_t v51 = (void *)v3;
  unint64_t v7 = 0;
  unint64_t v8 = v5 & 0xC000000000000001;
  uint64_t v57 = v5 + 32;
  uint64_t v58 = v5 & 0xFFFFFFFFFFFFFF8;
  uint64_t v53 = v5;
  while (1)
  {
    if (v8)
    {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      if (v7 >= *(void *)(v58 + 16)) {
        goto LABEL_93;
      }
      id v9 = *(id *)(v57 + 8 * v7);
    }
    uint64_t v10 = v9;
    if (__OFADD__(v7++, 1))
    {
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      swift_bridgeObjectRetain();
      uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v6) {
        goto LABEL_95;
      }
      goto LABEL_4;
    }
    type metadata accessor for JournalEntryCollectionViewCell();
    uint64_t v12 = swift_dynamicCastClass();
    if (v12)
    {
      uint64_t v13 = *(void *)(v12 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry);
      if (v13) {
        break;
      }
    }

LABEL_6:
    if (v7 == v6)
    {

LABEL_96:
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  uint64_t v59 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry;
  uint64_t v60 = v12;
  uint64_t v63 = v10;
  sub_10001B284(0, (unint64_t *)&unk_100800920);
  uint64_t v14 = *(void **)(v13 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_id);
  swift_retain();
  id v15 = v14;
  uint64_t v16 = v13;
  id v17 = v15;
  uint64_t v3 = static NSObject.== infix(_:_:)();

  if ((v3 & 1) == 0 || (uint64_t v3 = v16, (v18 = (void *)sub_1000EC3E8(a1)) == 0))
  {
    swift_release();
LABEL_40:

    goto LABEL_6;
  }

  uint64_t v19 = v60;
  uint64_t v20 = *(void **)(*(void *)(v60 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView)
                 + OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView);
  uint64_t v21 = v63;
  if (v20)
  {
    char v54 = *(unsigned char *)(v60 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded);
    id v52 = v20;
    uint64_t v3 = (uint64_t)[v52 visibleCells];
    uint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!((unint64_t)v5 >> 62))
    {
      uint64_t v22 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v22) {
        goto LABEL_19;
      }
      goto LABEL_46;
    }
    if (v5 < 0) {
      uint64_t v3 = v5;
    }
    else {
      uint64_t v3 = v5 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v22)
    {
LABEL_46:
      id v64 = 0;
LABEL_47:
      swift_bridgeObjectRelease();

LABEL_48:
      uint64_t v5 = v53;
      uint64_t v21 = v63;
      uint64_t v19 = v60;
      goto LABEL_49;
    }
LABEL_19:
    id v64 = 0;
    unint64_t v62 = v5 & 0xC000000000000001;
    uint64_t v3 = 4;
    uint64_t v55 = v5;
    while (1)
    {
      if (v62) {
        id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v23 = *(id *)(v5 + 8 * v3);
      }
      uint64_t v24 = v23;
      uint64_t v25 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        goto LABEL_92;
      }
      type metadata accessor for MosaicCell();
      uint64_t v26 = swift_dynamicCastClass();
      if (!v26) {
        goto LABEL_22;
      }
      uint64_t v27 = (char *)v26;
      if (*(unsigned char *)(v26 + OBJC_IVAR____TtC7Journal10MosaicCell_index + 8))
      {

        swift_bridgeObjectRelease();
        goto LABEL_48;
      }
      uint64_t v61 = *(void *)(v26 + OBJC_IVAR____TtC7Journal10MosaicCell_index);
      if (*(unsigned char *)(v26 + OBJC_IVAR____TtC7Journal10MosaicCell_overflowDetail))
      {

        id v28 = v24;
        id v64 = v27;
      }
      uint64_t v29 = *(void **)&v27[OBJC_IVAR____TtC7Journal10MosaicCell_journalAsset];
      if (!v29) {
        goto LABEL_22;
      }
      unint64_t v30 = v8;
      uint64_t v31 = v6;
      id v32 = v29;
      char v33 = static UUID.== infix(_:_:)();

      if ((v33 & 1) == 0) {
        break;
      }
      char v34 = v54;
      if (v61 < 5) {
        char v34 = 1;
      }
      if (v34)
      {

        swift_bridgeObjectRelease();
        id v64 = *(id *)&v27[OBJC_IVAR____TtC7Journal10MosaicCell_canvasAssetView];

        swift_bridgeObjectRelease();
LABEL_90:

        swift_release();
        return v64;
      }
      unint64_t v8 = v30;

      if (v64)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_90;
      }
      id v64 = 0;
      uint64_t v6 = v31;
      uint64_t v5 = v55;
LABEL_23:
      ++v3;
      if (v25 == v22) {
        goto LABEL_47;
      }
    }
    uint64_t v6 = v31;
    unint64_t v8 = v30;
    uint64_t v5 = v55;
LABEL_22:

    goto LABEL_23;
  }
LABEL_49:
  uint64_t v35 = *(void *)(v19 + v59);
  if (!v35)
  {

    swift_release();
    goto LABEL_6;
  }
  uint64_t v3 = v35 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll;
  swift_beginAccess();
  uint64_t v36 = *(void *)v3;
  if (*(void *)v3 >> 62)
  {
    if (v36 < 0) {
      uint64_t v3 = *(void *)v3;
    }
    else {
      uint64_t v3 = v36 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain_n();
    swift_retain();
    uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
    if (!v37) {
      goto LABEL_56;
    }
  }
  else
  {
    uint64_t v37 = *(void *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    swift_retain();
    if (!v37) {
      goto LABEL_56;
    }
  }
  unint64_t v65 = v36 & 0xC000000000000001;
  if ((v36 & 0xC000000000000001) != 0) {
    char v38 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    char v38 = *(id *)(v36 + 32);
  }
  double v39 = v38;
  uint64_t v3 = (uint64_t)v38;
  if ((*(uint64_t (**)(void))((swift_isaMask & *v38) + 0x200))()) {
    goto LABEL_62;
  }

  if (v37 == 1) {
    goto LABEL_56;
  }
  uint64_t v40 = v65 ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v36 + 40);
  double v39 = v40;
  uint64_t v3 = (uint64_t)v40;
  if ((*(uint64_t (**)(void))((swift_isaMask & *v40) + 0x200))())
  {
LABEL_62:
    uint64_t v5 = v53;
    swift_bridgeObjectRelease_n();
    swift_getObjectType();
    uint64_t v41 = swift_conformsToProtocol2();
    if (v41) {
      uint64_t v42 = v41;
    }
    else {
      uint64_t v42 = 0;
    }
    if (v41) {
      uint64_t v3 = (uint64_t)v39;
    }
    else {
      uint64_t v3 = 0;
    }
    if (!v3)
    {

      swift_release();
      swift_release();

      goto LABEL_6;
    }
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v44 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v42 + 80))(ObjectType, v42);

    _s5AssetCMa();
    id v45 = a1;
    id v46 = v44;
    uint64_t v3 = static NSObject.== infix(_:_:)();

    swift_release();
    if (v3)
    {

      swift_bridgeObjectRelease();
      id v64 = *(id *)(v60 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_slimAssetView);
      id v50 = v64;

      return v64;
    }
    goto LABEL_40;
  }

  if (v37 == 2)
  {
LABEL_56:
    swift_bridgeObjectRelease_n();

    swift_release();
    swift_release();
    uint64_t v5 = v53;
    goto LABEL_6;
  }
  uint64_t v47 = 6;
  while (1)
  {
    uint64_t result = v65 ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v36 + 8 * v47);
    double v39 = result;
    uint64_t v49 = v47 - 3;
    if (__OFADD__(v47 - 4, 1)) {
      break;
    }
    uint64_t v3 = (uint64_t)result;
    if ((*(uint64_t (**)(void))((swift_isaMask & *result) + 0x200))()) {
      goto LABEL_62;
    }

    ++v47;
    if (v49 == v37) {
      goto LABEL_56;
    }
  }
  __break(1u);
  return result;
}

id sub_1001CABB4()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  if (!v1)
  {
LABEL_22:
    unint64_t v17 = (unint64_t)_swiftEmptyArrayStorage;
    if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
      goto LABEL_41;
    }
    goto LABEL_23;
  }
  id v30 = v1;
  id v2 = [v30 visibleCells];
  sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v4) {
      goto LABEL_4;
    }
    goto LABEL_20;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
  {
LABEL_20:
    swift_bridgeObjectRelease();
LABEL_21:

    goto LABEL_22;
  }
LABEL_4:
  uint64_t v5 = 4;
  while (1)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      uint64_t v6 = (uint64_t *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      uint64_t v6 = (uint64_t *)*(id *)(v3 + 8 * v5);
    }
    unint64_t v7 = v6;
    uint64_t v8 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    type metadata accessor for JournalEntryCollectionViewCell();
    uint64_t v9 = swift_dynamicCastClass();
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)(v9 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry);
      if (v11) {
        break;
      }
    }
LABEL_5:

    ++v5;
    if (v8 == v4) {
      goto LABEL_20;
    }
  }
  sub_10001B284(0, (unint64_t *)&unk_100800920);
  uint64_t v12 = *(void **)(v11 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_id);
  swift_retain();
  id v13 = v12;
  char v14 = static NSObject.== infix(_:_:)();

  if ((v14 & 1) == 0)
  {
    swift_release();
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  id v15 = *(void **)(*(void *)(v10 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView)
                 + OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView);
  if (!v15)
  {

    swift_release();
    goto LABEL_21;
  }
  id v16 = [v15 visibleCells];
  unint64_t v17 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v17 >> 62) {
    goto LABEL_40;
  }
  swift_bridgeObjectRetain();
  dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
  sub_10001B284(0, (unint64_t *)&qword_100802730);

  swift_release();
  swift_bridgeObjectRelease();
LABEL_23:
  while (1)
  {
    uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v18) {
      break;
    }
    while (1)
    {
      if ((v17 & 0xC000000000000001) != 0)
      {
        uint64_t v19 = 0;
        unint64_t v7 = &OBJC_IVAR____TtC7Journal10MosaicCell_overflowDetail;
        while (1)
        {
          uint64_t v20 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v21 = v19 + 1;
          if (__OFADD__(v19, 1)) {
            break;
          }
          id v22 = (id)v20;
          type metadata accessor for MosaicCell();
          uint64_t v23 = swift_dynamicCastClass();
          if (v23 && *(unsigned char *)(v23 + OBJC_IVAR____TtC7Journal10MosaicCell_overflowDetail) == 1) {
            goto LABEL_37;
          }
          swift_unknownObjectRelease();
          ++v19;
          if (v21 == v18) {
            goto LABEL_42;
          }
        }
        __break(1u);
      }
      else
      {
        uint64_t v24 = 0;
        unint64_t v7 = (uint64_t *)OBJC_IVAR____TtC7Journal10MosaicCell_overflowDetail;
        while (1)
        {
          uint64_t v25 = v24 + 1;
          if (__OFADD__(v24, 1)) {
            break;
          }
          uint64_t v26 = *(void **)(v17 + 8 * v24 + 32);
          type metadata accessor for MosaicCell();
          uint64_t v27 = swift_dynamicCastClass();
          if (v27 && *((unsigned char *)v7 + v27) == 1)
          {
            id v22 = v26;
LABEL_37:
            swift_bridgeObjectRelease_n();
            return v22;
          }
          ++v24;
          if (v25 == v18) {
            goto LABEL_42;
          }
        }
      }
      __break(1u);
LABEL_40:
      sub_10001B284(0, (unint64_t *)&qword_100802730);
      swift_bridgeObjectRetain();
      unint64_t v28 = _bridgeCocoaArray<A>(_:)();

      swift_release();
      swift_bridgeObjectRelease_n();
      unint64_t v17 = v28;
      if (!(v28 >> 62)) {
        break;
      }
LABEL_41:
      swift_bridgeObjectRetain();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      if (!v18) {
        goto LABEL_42;
      }
    }
  }
LABEL_42:
  swift_bridgeObjectRelease_n();
  return 0;
}

void sub_1001CB018()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  if (!v1) {
    return;
  }
  id v2 = v1;
  id v3 = [v2 visibleCells];
  sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_4;
    }
LABEL_18:

    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_18;
  }
LABEL_4:
  if (v5 < 1)
  {
    __break(1u);
  }
  else
  {
    char v14 = v2;
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v4 + 8 * i + 32);
      }
      uint64_t v9 = v8;
      type metadata accessor for JournalEntryCollectionViewCell();
      uint64_t v10 = swift_dynamicCastClass();
      if (v10)
      {
        uint64_t v11 = *(void **)(*(void *)(v10 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView)
                       + OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView);
        if (v11)
        {
          id v12 = [v11 visibleCells:v14];
          unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (v13 >> 62)
          {
            sub_10001B284(0, (unint64_t *)&qword_100802730);
            swift_bridgeObjectRetain();
            unint64_t v7 = _bridgeCocoaArray<A>(_:)();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
            sub_10001B284(0, (unint64_t *)&qword_100802730);
            unint64_t v7 = v13;
          }
          swift_bridgeObjectRelease();
          sub_1000C89E4(v7);
        }
      }
    }
    swift_bridgeObjectRelease();
  }
}

double *sub_1001CB274(uint64_t (*a1)(id *), double *a2, unint64_t a3)
{
  unint64_t v4 = a3;
  uint64_t v19 = _swiftEmptyArrayStorage;
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v4 & 0xC000000000000001;
      unint64_t v15 = v4;
      while (v17)
      {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_9:
        uint64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v9;
        id v12 = a2;
        char v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
          specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
          unint64_t v4 = v15;
          specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized ContiguousArray._endMutation()();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          id v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  id v12 = _swiftEmptyArrayStorage;
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

void sub_1001CB420(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v42 = a1;
  uint64_t v43 = a2;
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v37 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v13 = __chkstk_darwin(v12);
  id v45 = (char *)&v30 - v14;
  id v46 = _swiftEmptyArrayStorage;
  uint64_t v38 = *(void *)(a3 + 16);
  if (v38)
  {
    unint64_t v15 = 0;
    uint64_t v39 = v10 + 48;
    uint64_t v44 = (void (**)(char *))(v10 + 32);
    uint64_t v40 = v10 + 56;
    uint64_t v41 = v10 + 16;
    unint64_t v32 = (v10 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    char v33 = (void (**)(char *, uint64_t))(v10 + 8);
    uint64_t v36 = v10;
    while (v15 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v17 = *(void *)(v10 + 72);
      (*(void (**)(char *, unint64_t, uint64_t, __n128))(v10 + 16))(v8, a3 + v16 + v17 * v15, v9, v13);
      id v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v18)(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
        goto LABEL_17;
      }
      uint64_t v35 = v18;
      uint64_t v19 = a3;
      uint64_t v20 = v8;
      uint64_t v21 = v45;
      id v22 = *v44;
      uint64_t v23 = v20;
      (*v44)(v45);
      char v24 = v42(v21);
      if (v4)
      {
        (*v33)(v45, v9);
        swift_bridgeObjectRelease();
        swift_release();
        return;
      }
      if (v24)
      {
        ((void (*)(char *, char *, uint64_t))v22)(v37, v45, v9);
        uint64_t v25 = v46;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v34 = 0;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_100095C5C(0, v25[2] + 1, 1);
          uint64_t v25 = v46;
        }
        unint64_t v28 = v25[2];
        unint64_t v27 = v25[3];
        unint64_t v29 = v28 + 1;
        if (v28 >= v27 >> 1)
        {
          unint64_t v31 = v28 + 1;
          sub_100095C5C(v27 > 1, v28 + 1, 1);
          unint64_t v29 = v31;
          uint64_t v25 = v46;
        }
        _OWORD v25[2] = v29;
        ((void (*)(char *, char *, uint64_t))v22)((char *)v25 + v16 + v28 * v17, v37, v9);
        id v46 = v25;
        uint64_t v4 = v34;
      }
      else
      {
        (*v33)(v45, v9);
      }
      a3 = v19;
      ++v15;
      unint64_t v8 = v23;
      uint64_t v10 = v36;
      if (v38 == v15)
      {
        v35(v23, 1, 1, v9, v13);
        goto LABEL_17;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v13);
LABEL_17:
    swift_bridgeObjectRelease();
    sub_10001457C((uint64_t)v8, (uint64_t *)&unk_1007FC470);
  }
}

void sub_1001CB7E0(uint64_t a1, void *a2, void *a3, char a4)
{
  switch(a4)
  {
    case 1:
      Swift::UInt v6 = 1;
      goto LABEL_9;
    case 2:
      Hasher._combine(_:)(2uLL);
      id v7 = a2;
      NSObject.hash(into:)();
      sub_100062C10(a2, a3, 2);
      break;
    case 3:
      Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)(a2);
      break;
    case 4:
      Swift::UInt v6 = 4;
LABEL_9:
      Hasher._combine(_:)(v6);
      String.hash(into:)();
      break;
    default:
      Hasher._combine(_:)(0);
      String.hash(into:)();
      swift_bridgeObjectRelease();
      break;
  }
}

Swift::Int sub_1001CB9B8(void *a1, void *a2, char a3)
{
  Hasher.init(_seed:)();
  switch(a3)
  {
    case 1:
      Swift::UInt v6 = 1;
      goto LABEL_7;
    case 2:
      Hasher._combine(_:)(2uLL);
      id v7 = a1;
      NSObject.hash(into:)();
      sub_100062C10(a1, a2, 2);
      break;
    case 3:
      Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)(a1);
      break;
    case 4:
      Swift::UInt v6 = 4;
LABEL_7:
      Hasher._combine(_:)(v6);
      String.hash(into:)();
      break;
    default:
      Hasher._combine(_:)(0);
      String.hash(into:)();
      swift_bridgeObjectRelease();
      break;
  }
  return Hasher._finalize()();
}

Swift::Int sub_1001CBB78()
{
  uint64_t v1 = *(void *)(v0 + 8);
  Hasher.init(_seed:)();
  switch(v1)
  {
    case 0:
      Swift::UInt v2 = 0;
      goto LABEL_7;
    case 1:
      Swift::UInt v2 = 1;
      goto LABEL_7;
    case 2:
      Swift::UInt v2 = 3;
      goto LABEL_7;
    case 3:
      Swift::UInt v2 = 4;
LABEL_7:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(2uLL);
      String.hash(into:)();
      break;
  }
  return Hasher._finalize()();
}

void sub_1001CBC48()
{
  switch(*(void *)(v0 + 8))
  {
    case 0:
      Swift::UInt v1 = 0;
      goto LABEL_9;
    case 1:
      Swift::UInt v1 = 1;
      goto LABEL_9;
    case 2:
      Swift::UInt v1 = 3;
      goto LABEL_9;
    case 3:
      Swift::UInt v1 = 4;
LABEL_9:
      Hasher._combine(_:)(v1);
      break;
    default:
      Hasher._combine(_:)(2uLL);
      String.hash(into:)();
      break;
  }
}

Swift::Int sub_1001CBD10()
{
  uint64_t v1 = *(void *)(v0 + 8);
  Hasher.init(_seed:)();
  switch(v1)
  {
    case 0:
      Swift::UInt v2 = 0;
      goto LABEL_7;
    case 1:
      Swift::UInt v2 = 1;
      goto LABEL_7;
    case 2:
      Swift::UInt v2 = 3;
      goto LABEL_7;
    case 3:
      Swift::UInt v2 = 4;
LABEL_7:
      Hasher._combine(_:)(v2);
      break;
    default:
      Hasher._combine(_:)(2uLL);
      String.hash(into:)();
      break;
  }
  return Hasher._finalize()();
}

uint64_t sub_1001CBDDC(uint64_t *a1, uint64_t a2)
{
  return sub_1001D4220(*a1, a1[1], *(void *)a2, *(void *)(a2 + 8));
}

Swift::Int sub_1001CBDF0()
{
  return sub_1001CB9B8(*(void **)v0, *(void **)(v0 + 8), *(unsigned char *)(v0 + 16));
}

void sub_1001CBDFC(uint64_t a1)
{
  sub_1001CB7E0(a1, *(void **)v1, *(void **)(v1 + 8), *(unsigned char *)(v1 + 16));
}

Swift::Int sub_1001CBE08()
{
  uint64_t v1 = *(void **)v0;
  Swift::UInt v2 = *(void **)(v0 + 8);
  uint64_t v3 = *(unsigned __int8 *)(v0 + 16);
  Hasher.init(_seed:)();
  switch(v3)
  {
    case 1:
      Swift::UInt v4 = 1;
      goto LABEL_7;
    case 2:
      Hasher._combine(_:)(2uLL);
      id v5 = v1;
      NSObject.hash(into:)();
      sub_100062C10(v1, v2, 2);
      break;
    case 3:
      Hasher._combine(_:)(3uLL);
      Hasher._combine(_:)(v1);
      break;
    case 4:
      Swift::UInt v4 = 4;
LABEL_7:
      Hasher._combine(_:)(v4);
      String.hash(into:)();
      break;
    default:
      Hasher._combine(_:)(0);
      String.hash(into:)();
      swift_bridgeObjectRelease();
      break;
  }
  return Hasher._finalize()();
}

uint64_t sub_1001CBFC0(uint64_t a1, uint64_t a2)
{
  return sub_1001D3EF0(*(void **)a1, *(void **)(a1 + 8), *(unsigned char *)(a1 + 16), *(void **)a2, *(void **)(a2 + 8), *(unsigned char *)(a2 + 16));
}

uint64_t sub_1001CBFDC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_10083D088);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_10083D088);
  if (qword_1007F7D80 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EC80);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1001CC0A4()
{
  qword_1008024A0 = 0x4034000000000000;
}

void sub_1001CC0B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ColorResource();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::UInt v6 = (objc_class *)type metadata accessor for JournalEntryCollectionViewController();
  v41.receiver = v0;
  v41.super_class = v6;
  [super viewDidLoad];
  id v7 = [v0 view];
  if (!v7)
  {
    __break(1u);
    goto LABEL_14;
  }
  unint64_t v8 = v7;
  sub_10001B284(0, (unint64_t *)&qword_1007FC140);
  if (qword_1007F7FF0 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100026A54(v2, (uint64_t)qword_10083F0F0);
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v10(v5, v9, v2);
  uint64_t v11 = (void *)UIColor.init(resource:)();
  [v8 setBackgroundColor:v11];

  uint64_t v12 = (void *)(*(uint64_t (**)(void))((swift_isaMask & *v1) + 0x2D8))();
  id v13 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:v12 collectionViewLayout:0.0, 0.0, 0.0, 0.0];

  uint64_t v14 = OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView;
  unint64_t v15 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  *(void *)((char *)v1 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView) = v13;

  unint64_t v16 = *(void **)((char *)v1 + v14);
  if (v16)
  {
    uint64_t v39 = v9;
    uint64_t v17 = *(uint64_t (**)(void))((swift_isaMask & *v1) + 0x2F8);
    id v18 = v16;
    uint64_t v19 = v17();
    uint64_t v20 = OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_dataSource;
    uint64_t v21 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_dataSource);
    *(void *)((char *)v1 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_dataSource) = v19;

    [v18 setDataSource:*(void *)((char *)v1 + v20)];
    [v18 setDelegate:v1];
    [v18 setPrefetchDataSource:*(void *)((char *)v1 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_prefetcher)];
    v38[1] = type metadata accessor for GradientView();
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1006D6D20;
    if (qword_1007F8000 != -1) {
      swift_once();
    }
    uint64_t v23 = sub_100026A54(v2, (uint64_t)qword_10083F120);
    v10(v5, v23, v2);
    *(void *)(v22 + 32) = UIColor.init(resource:)();
    if (qword_1007F7FF8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_100026A54(v2, (uint64_t)qword_10083F108);
    v10(v5, v24, v2);
    *(void *)(v22 + 40) = UIColor.init(resource:)();
    v10(v5, v39, v2);
    *(void *)(v22 + 48) = UIColor.init(resource:)();
    uint64_t v40 = v22;
    specialized Array._endMutation()();
    static UnitPoint.top.getter();
    static UnitPoint.bottom.getter();
    id v25 = sub_1005D4D6C();
    [v18 setBackgroundView:v25];

    id v26 = [v1 view];
    if (v26)
    {
      unint64_t v27 = v26;
      unint64_t v28 = *(void **)((char *)v1 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_fadeView);
      [v26 addSubview:v28];

      sub_1001DCF60(0.0);
      swift_bridgeObjectRelease();
      sub_1001C7D10();
      [v28 addSubview:v18];
      unint64_t v29 = self;
      id v30 = v18;
      id v31 = [v29 clearColor];
      [v30 setBackgroundColor:v31];

      sub_1001DCF60(0.0);
      swift_bridgeObjectRelease();
      id v32 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v1 action:"handleTap:"];
      [v32 setDelegate:v1];
      [v32 setCancelsTouchesInView:0];
      id v33 = [v1 view];
      if (v33)
      {
        uint64_t v34 = v33;
        [v33 addGestureRecognizer:v32];

        uint64_t v35 = self;
        id v36 = [v35 defaultCenter];
        [v36 addObserver:v1 selector:"appWillEnterForeground" name:UIApplicationWillEnterForegroundNotification object:0];

        id v37 = [v35 defaultCenter];
        [v37 addObserver:v1 selector:"setUpBottomFade" name:UIAccessibilityReduceTransparencyStatusDidChangeNotification object:0];

        return;
      }
LABEL_15:
      __break(1u);
      return;
    }
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
}

void sub_1001CC7C8(char a1)
{
  v12.receiver = v1;
  v12.super_class = (Class)type metadata accessor for JournalEntryCollectionViewController();
  [super viewDidAppear:a1 & 1];
  uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView];
  if (v3)
  {
    uint64_t v10 = &type metadata for JournalFeatureFlags;
    unint64_t v11 = sub_10005F364();
    v9[0] = 3;
    id v4 = v3;
    char v5 = isFeatureEnabled(_:)();
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v9);
    if (v5)
    {
      id v6 = v4;
      [v6 contentOffset];
      [v6 contentOffset];
      [v6 setContentOffset:];
    }
    [v4 contentOffset];
    uint64_t v8 = v7;

    *(void *)&v1[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_originY] = v8;
  }
}

id sub_1001CC93C()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentSelectedCell];
  if (!v1) {
    goto LABEL_5;
  }
  id v2 = v1;
  id v3 = [v0 parentViewController];
  if (!v3)
  {

LABEL_5:
    v7.receiver = v0;
    v7.super_class = (Class)type metadata accessor for JournalEntryCollectionViewController();
    return [super accessibilityPerformMagicTap];
  }
  id v4 = v3;
  sub_1003EEB38(0);
  id v5 = [v4 accessibilityPerformMagicTap];

  return v5;
}

void sub_1001CCA38()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10030A6C4();
  }
}

id sub_1001CCAD4()
{
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v1 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v5[4] = sub_1001D5970;
  void v5[5] = v0;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  v5[2] = sub_1003657F0;
  v5[3] = &unk_10079D580;
  id v2 = _Block_copy(v5);
  swift_retain();
  id v3 = [v1 initWithSectionProvider:v2];
  _Block_release(v2);
  swift_release();
  swift_release();
  return v3;
}

id sub_1001CCBD8()
{
  uint64_t v0 = self;
  id v1 = [v0 fractionalWidthDimension:1.0];
  if (qword_1007F73C0 != -1) {
    swift_once();
  }
  id v2 = [v0 estimatedDimension:*(double *)&qword_10083D9D0];
  id v43 = self;
  id v3 = [v43 sizeWithWidthDimension:v1 heightDimension:v2];

  id v4 = self;
  id v5 = [v4 itemWithLayoutSize:v3];
  id v6 = self;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1006D6D00;
  *(void *)(v7 + 32) = v5;
  uint64_t v45 = v7;
  specialized Array._endMutation()();
  sub_10001B284(0, &qword_100807690);
  id v8 = v5;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [v6 horizontalGroupWithLayoutSize:v3 subitems:isa];

  unint64_t v11 = self;
  uint64_t v44 = v10;
  id v12 = [v11 sectionWithGroup:v10];
  if (qword_1007F72D8 != -1) {
    swift_once();
  }
  [v12 setInterGroupSpacing:*(double *)&qword_10083D8A0];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v14 = (void *)Strong;
    uint64_t v42 = v8;
    id v8 = v3;
    unint64_t v15 = *(void **)(Strong + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_dataSource);
    id v16 = v15;

    if (v15)
    {
      dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)();

      id v3 = v8;
      id v8 = v42;
      switch(v46)
      {
        case 0uLL:
          id v17 = [v0 estimatedDimension:80.0];
          id v18 = [v0 estimatedDimension:32.0];
          id v19 = [v43 sizeWithWidthDimension:v17 heightDimension:v18];

          id v20 = [v4 itemWithLayoutSize:v19];
          uint64_t v21 = swift_allocObject();
          *(_OWORD *)(v21 + 16) = xmmword_1006D6D00;
          *(void *)(v21 + 32) = v20;
          uint64_t v45 = v21;
          specialized Array._endMutation()();
          id v22 = v20;
          Class v23 = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v24 = [v6 horizontalGroupWithLayoutSize:v19 subitems:v23];

          id v25 = [v11 sectionWithGroup:v24];
          [v25 setOrthogonalScrollingBehavior:1];
          if (qword_1007F72E0 != -1) {
            swift_once();
          }
          [v25 setContentInsets:*(double *)&qword_10083D8A8, *(double *)&qword_10083D8B0, *(double *)&qword_10083D8B8, *(double *)&qword_10083D8C0];
          [v25 setInterGroupSpacing:10.0];

          id v8 = v22;
          id v3 = v24;
          id v12 = v25;

          break;
        case 1uLL:
          if (qword_1007F72E8 != -1) {
            swift_once();
          }
          [v12 setContentInsets:*(double *)&qword_10083D8C8, *(double *)&qword_10083D8D0, *(double *)&qword_10083D8D8, *(double *)&qword_10083D8E0];
          goto LABEL_20;
        case 2uLL:
        case 3uLL:
          goto LABEL_20;
        case 4uLL:
          goto LABEL_13;
        default:
          sub_1001D5978(v45, v46);
          goto LABEL_12;
      }
      goto LABEL_21;
    }
LABEL_12:
    id v3 = v8;
    id v8 = v42;
  }
LABEL_13:
  if (qword_1007F72F0 != -1) {
    swift_once();
  }
  [v12 setContentInsets:*(double *)&qword_10083D8E8, *(double *)&qword_10083D8F0, *(double *)&qword_10083D8F8, *(double *)&qword_10083D900];
  uint64_t v47 = &type metadata for JournalFeatureFlags;
  unint64_t v48 = sub_10005F364();
  LOBYTE(v45) = 2;
  char v26 = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v45);
  if (v26)
  {
    id v27 = [v0 fractionalWidthDimension:1.0];
    id v28 = [v0 estimatedDimension:30.0];
    id v29 = [v43 sizeWithWidthDimension:v27 heightDimension:v28];

    static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v30 = v29;
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v32 = [self boundarySupplementaryItemWithLayoutSize:v30 elementKind:v31 alignment:1];

    id v33 = v3;
    UIAccessibilityTraits v34 = UIAccessibilityTraitHeader;
    id v35 = v32;
    unint64_t v36 = (unint64_t)[v35 accessibilityTraits];
    if ((v34 & ~v36) != 0) {
      UIAccessibilityTraits v37 = v34;
    }
    else {
      UIAccessibilityTraits v37 = 0;
    }
    id v3 = v33;
    [v35 setAccessibilityTraits:v37 | v36];

    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1006D6D00;
    *(void *)(v38 + 32) = v35;
    uint64_t v45 = v38;
    specialized Array._endMutation()();
    sub_10001B284(0, (unint64_t *)&unk_100802720);
    id v39 = v35;
    Class v40 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v12 setBoundarySupplementaryItems:v40];

    [v12 contentInsets];
    [v12 setContentInsets:0.0];
  }
LABEL_20:

LABEL_21:
  return v12;
}

uint64_t sub_1001CD364()
{
  id v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_100010218(&qword_100802698);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v74 = v5;
  uint64_t v75 = (char *)&v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v8 = (char *)&v66 - v7;
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1008026A0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v76 = v11;
  uint64_t v77 = (char *)&v66 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  char v86 = (char *)&v66 - v13;
  uint64_t v14 = sub_100010218(&qword_1007FAA60);
  char v87 = *(void **)(v14 - 8);
  uint64_t v15 = v87[8];
  __chkstk_darwin(v14);
  uint64_t v83 = (char *)&v66 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v82 = (char *)&v66 - v17;
  __chkstk_darwin(v18);
  uint64_t v84 = (char *)&v66 - v19;
  __chkstk_darwin(v20);
  uint64_t v85 = (char *)&v66 - v21;
  uint64_t v22 = *(void *)(sub_100010218(&qword_1008026B0) - 8);
  __chkstk_darwin(*(void *)(v22 + 64));
  __chkstk_darwin(v23);
  uint64_t v81 = v1;
  id v29 = *(void **)&v1[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView];
  if (!v29) {
    return 0;
  }
  uint64_t v67 = v8;
  uint64_t v68 = v4;
  uint64_t v69 = v3;
  uint64_t v79 = v28;
  uint64_t v80 = (char *)&v66 - v25;
  uint64_t v72 = v24;
  uint64_t v88 = v27;
  uint64_t v89 = v26;
  swift_allocObject();
  uint64_t v73 = ObjectType;
  swift_unknownObjectWeakInit();
  type metadata accessor for JournalEntryCollectionViewCell();
  uint64_t v70 = v14;
  sub_10001B284(0, (unint64_t *)&qword_100800A40);
  id v30 = v29;
  uint64_t v31 = v9;
  uint64_t v78 = v9;
  UICollectionView.CellRegistration.init(handler:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v32 = sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
  id v33 = v85;
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v34 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v35 = (void *)swift_allocObject();
  v35[2] = v30;
  v35[3] = sub_1001D52E8;
  v35[4] = v34;
  id v71 = v30;
  unint64_t v36 = v86;
  UICollectionView.CellRegistration.init(handler:)();
  UIAccessibilityTraits v37 = v84;
  uint64_t v66 = v32;
  UICollectionView.CellRegistration.init(handler:)();
  uint64_t v38 = v77;
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v77, v36, v31);
  id v39 = v87;
  Class v40 = (void (*)(char *, char *, uint64_t))v87[2];
  uint64_t v41 = v70;
  v40(v82, v33, v70);
  uint64_t v42 = v88;
  (*(void (**)(uint64_t, char *, uint64_t))(v88 + 16))(v79, v80, v89);
  v40(v83, v37, v41);
  unint64_t v43 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v44 = *((unsigned __int8 *)v39 + 80);
  unint64_t v45 = (v76 + v44 + v43) & ~v44;
  unint64_t v46 = (v15 + *(unsigned __int8 *)(v42 + 80) + v45) & ~(unint64_t)*(unsigned __int8 *)(v42 + 80);
  unint64_t v47 = (v72 + v44 + v46) & ~v44;
  uint64_t v48 = swift_allocObject();
  uint64_t v76 = v10;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v48 + v43, v38, v78);
  uint64_t v49 = (void (*)(unint64_t, char *, uint64_t))v39[4];
  v49(v48 + v45, v82, v41);
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v88 + 32))(v48 + v46, v79, v89);
  v49(v48 + v47, v83, v41);
  *(void *)(v48 + ((v15 + v47 + 7) & 0xFFFFFFFFFFFFFFF8)) = v73;
  objc_allocWithZone((Class)sub_100010218(&qword_1007FAA68));
  id v50 = v71;
  uint64_t v51 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
  uint64_t v91 = &type metadata for JournalFeatureFlags;
  unint64_t v92 = sub_10005F364();
  v90[0] = 2;
  LOBYTE(v45) = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v90);
  if (v45)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v52 = swift_allocObject();
    uint64_t v53 = v81;
    *(void *)(v52 + 16) = v81;
    id v54 = v53;
    uint64_t v55 = v67;
    UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
    uint64_t v56 = v41;
    uint64_t v57 = v68;
    uint64_t v58 = v75;
    uint64_t v59 = v69;
    (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v75, v55, v69);
    unint64_t v60 = (*(unsigned __int8 *)(v57 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
    uint64_t v61 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v57 + 32))(v61 + v60, v58, v59);
    dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();

    (*(void (**)(char *, uint64_t))(v57 + 8))(v55, v59);
    unint64_t v62 = (void (*)(char *, uint64_t))v87[1];
    v62(v84, v56);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v86, v78);
    uint64_t v63 = v85;
    uint64_t v64 = v56;
  }
  else
  {

    unint64_t v62 = (void (*)(char *, uint64_t))v87[1];
    v62(v84, v41);
    (*(void (**)(char *, uint64_t))(v76 + 8))(v86, v78);
    uint64_t v63 = v85;
    uint64_t v64 = v41;
  }
  v62(v63, v64);
  (*(void (**)(char *, uint64_t))(v88 + 8))(v80, v89);
  return v51;
}

void sub_1001CDC68(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4 = *a3;
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    id v7 = [*(id *)(Strong + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_coreDataContext) objectWithID:v4];
    type metadata accessor for JournalEntryMO();
    uint64_t v8 = swift_dynamicCastClass();
    if (v8)
    {
      uint64_t v9 = (void *)v8;
      id v10 = v7;
      id v11 = [v9 managedObjectContext];
      if (!v11) {
        id v11 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:2];
      }
      type metadata accessor for Journaling.EntryViewModel();
      swift_allocObject();
      uint64_t v12 = sub_10057F170(v9, 0, 0, v11);
      *(void *)(a1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_cellDelegate + 8) = &off_10079D138;
      swift_unknownObjectWeakAssign();
      *(void *)(a1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_actionDelegate + 8) = &off_10079D168;
      swift_unknownObjectWeakAssign();
      swift_weakLoadStrong();
      swift_weakAssign();
      swift_weakLoadStrong();
      swift_weakAssign();
      swift_release();
      if (*(void *)(a1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_slimAssetView))
      {
        swift_weakLoadStrong();
        swift_weakAssign();
        swift_release();
      }
      swift_release();
      uint64_t v13 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry;
      *(void *)(a1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry) = v12;
      swift_retain_n();
      swift_release();
      sub_1003ED2D4();
      sub_1003EDA5C();
      uint64_t v14 = *(void *)(a1 + v13);
      if (v14)
      {
        swift_retain();
        sub_10037A920();
        sub_1003E4374(*(unsigned char *)(v14 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked), 0);
        sub_1003E4104(v14);
        sub_1003EDCCC();
        sub_1003EDF48();
        swift_release_n();
        swift_release();
      }
      else
      {
        swift_release_n();
      }
    }
  }
}

uint64_t sub_1001CDF34(void *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_100010218(&qword_1008026B8);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v22[-1] - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AnyTip();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v22[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *a3;
  uint64_t v12 = a3[1];
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v15 = (void *)result;
    uint64_t v16 = result + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_tip;
    swift_beginAccess();
    sub_10001B220(v16, (uint64_t)v7, &qword_1008026B8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {

      return sub_10001457C((uint64_t)v7, &qword_1008026B8);
    }
    uint64_t v17 = (*(uint64_t (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    uint64_t v21 = (uint64_t)&v21;
    __chkstk_darwin(v17);
    *(&v21 - 2) = (uint64_t)v11;
    *(&v21 - 1) = (uint64_t)v15;
    v22[3] = sub_100010218(&qword_1008026C0);
    v22[4] = sub_100014488(&qword_1008026C8, &qword_1008026C0);
    sub_100062E54(v22);
    sub_100010218(&qword_1008026D0);
    sub_1001D582C();
    UIHostingConfiguration<>.init(content:)();
    UICollectionViewCell.contentConfiguration.setter();
    sub_1001D591C();
    if (v13 == Tip.id.getter() && v12 == v18)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v19 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v19 & 1) == 0)
      {
        [a1 setTintColor:0];
        goto LABEL_10;
      }
    }
    id v20 = [self systemMintColor];
    [a1 setTintColor:v20];

    uint64_t v15 = v20;
LABEL_10:

    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  return result;
}

uint64_t sub_1001CE29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v3 = type metadata accessor for ColorResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100010218(&qword_1007FF230);
  __chkstk_darwin(v44);
  uint64_t v8 = (uint64_t *)((char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for AnyTip();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218(&qword_1008026E0);
  uint64_t v42 = *(void *)(v13 - 8);
  uint64_t v43 = v13;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100010218(&qword_100802700);
  uint64_t v45 = *(void *)(v16 - 8);
  uint64_t v46 = v16;
  __n128 v17 = __chkstk_darwin(v16);
  uint64_t v41 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v10 + 16))(v12, a1, v9, v17);
  sub_1001D59FC(&qword_100802708, (void (*)(uint64_t))&type metadata accessor for AnyTip);
  swift_retain();
  TipView.init(_:arrowEdge:action:)();
  if (qword_1007F7FA8 != -1) {
    swift_once();
  }
  uint64_t v19 = sub_100026A54(v3, (uint64_t)qword_10083F018);
  id v20 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  uint64_t v47 = v4 + 16;
  uint64_t v48 = v3;
  Class v40 = v20;
  v20(v6, v19, v3);
  uint64_t v21 = Color.init(_:)();
  uint64_t v22 = v44;
  uint64_t v23 = (char *)v8 + *(int *)(v44 + 36);
  uint64_t v24 = enum case for BlendMode.normal(_:);
  uint64_t v25 = type metadata accessor for BlendMode();
  uint64_t v26 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v25 - 8) + 104);
  v26(v23, v24, v25);
  v26((char *)v8 + *(int *)(v22 + 40), enum case for BlendMode.plusLighter(_:), v25);
  *uint64_t v8 = v21;
  sub_100014488((unint64_t *)&unk_100802710, &qword_1007FF230);
  uint64_t v50 = AnyShapeStyle.init<A>(_:)();
  sub_100014488(&qword_1008026E8, &qword_1008026E0);
  uint64_t v27 = v41;
  uint64_t v28 = v43;
  View.tipBackground<A>(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v42 + 8))(v15, v28);
  if (qword_1007F7458 != -1) {
    swift_once();
  }
  uint64_t v29 = qword_10083DA68;
  if (qword_1007F7FB0 != -1) {
    swift_once();
  }
  uint64_t v30 = v48;
  uint64_t v31 = sub_100026A54(v48, (uint64_t)qword_10083F030);
  v40(v6, v31, v30);
  uint64_t v32 = Color.init(_:)();
  if (qword_1007F7460 != -1) {
    swift_once();
  }
  uint64_t v33 = qword_10083DA70;
  uint64_t v35 = v45;
  uint64_t v34 = v46;
  uint64_t v36 = v49;
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 16))(v49, v27, v46);
  UIAccessibilityTraits v37 = (uint64_t *)(v36 + *(int *)(sub_100010218(&qword_1008026D0) + 36));
  *UIAccessibilityTraits v37 = v32;
  v37[1] = v29;
  v37[2] = 0;
  uint64_t v37[3] = v33;
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v27, v34);
}

void sub_1001CE8A4(char a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    uint64_t v4 = Strong + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_delegate;
    uint64_t v5 = swift_unknownObjectWeakLoadStrong();
    uint64_t v6 = *(void *)(v4 + 8);

    if (v5)
    {
      swift_beginAccess();
      uint64_t v7 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v7)
      {

        unint64_t v8 = 0x407030000uLL >> (8 * a1);
      }
      else
      {
        unint64_t v8 = 9;
      }
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v6 + 72))(v8, ObjectType, v6);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1001CE998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void **)a3;
  uint64_t v4 = *(void **)(a3 + 8);
  int v5 = *(unsigned __int8 *)(a3 + 16);
  if (v5 == 2)
  {
    type metadata accessor for JournalEntryCollectionViewCell();
    sub_10001B284(0, (unint64_t *)&qword_100800A40);
    id v6 = v3;
    uint64_t v7 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
    sub_100062C10(v3, v4, 2);
  }
  else if (v5 == 1)
  {
    sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
    swift_bridgeObjectRetain();
    uint64_t v7 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
    sub_100062C10(v3, v4, 1);
  }
  else
  {
    if (*(unsigned char *)(a3 + 16))
    {
      if (qword_1007F6AE8 != -1) {
        swift_once();
      }
      uint64_t v8 = type metadata accessor for Logger();
      sub_100026A54(v8, (uint64_t)qword_10083D088);
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v9, v10))
      {
        uint64_t v11 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "Unhandled cell type", v11, 2u);
        swift_slowDealloc();
      }

      sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
    }
    else
    {
      sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
    }
    return UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
  }
  return v7;
}

uint64_t sub_1001CEC00(void *a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = type metadata accessor for UIListContentConfiguration();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_1000D7A80();
  if (result)
  {
    uint64_t v14 = result;
    uint64_t v26 = v10;
    uint64_t v27 = a1;
    static UIListContentConfiguration.prominentInsetGroupedHeader()();
    uint64_t v15 = v14 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_displayDate;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v8, v15, v2);
    Date.init()();
    sub_1002A8F8C((uint64_t)v5);
    uint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
    v16(v5, v2);
    v16(v8, v2);
    UIListContentConfiguration.text.setter();
    if (qword_1007F7380 != -1) {
      swift_once();
    }
    double v17 = *(double *)&qword_10083D990 + 1.0;
    uint64_t v18 = (void (*)(uint64_t *, void))UIListContentConfiguration.directionalLayoutMargins.modify();
    *(double *)(v19 + 16) = v17;
    v18(v28, 0);
    v28[3] = v9;
    void v28[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    id v20 = sub_100062E54(v28);
    uint64_t v21 = v26;
    (*(void (**)(uint64_t *, char *, uint64_t))(v26 + 16))(v20, v12, v9);
    uint64_t v22 = v27;
    UICollectionViewCell.contentConfiguration.setter();
    UIAccessibilityTraits v23 = UIAccessibilityTraitHeader;
    unint64_t v24 = (unint64_t)[v22 accessibilityTraits];
    if ((v23 & ~v24) != 0) {
      UIAccessibilityTraits v25 = v23;
    }
    else {
      UIAccessibilityTraits v25 = 0;
    }
    [v22 setAccessibilityTraits:v25 | v24];
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v12, v9);
  }
  return result;
}

void sub_1001CEF24(uint64_t a1, uint64_t a2, char a3, char a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    uint64_t v10 = *(void **)(Strong + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
    id v11 = v10;

    if (v10)
    {
      uint64_t v19 = (void (*)(char))AudioRecordingActivityState.hash(into:);
      uint64_t v20 = 0;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v16 = 1107296256;
      double v17 = sub_1003F44E4;
      uint64_t v18 = &unk_10079D7B0;
      uint64_t v12 = _Block_copy(&aBlock);
      swift_release();
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = a1;
      *(void *)(v13 + 24) = a2;
      *(unsigned char *)(v13 + 32) = a3 & 1;
      *(unsigned char *)(v13 + 33) = a4 & 1;
      uint64_t v19 = sub_1001D5D70;
      uint64_t v20 = v13;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v16 = 1107296256;
      double v17 = sub_1001C7318;
      uint64_t v18 = &unk_10079D800;
      uint64_t v14 = _Block_copy(&aBlock);
      swift_retain();
      swift_retain();
      swift_release();
      [v11 performBatchUpdates:v12 completion:v14];
      _Block_release(v14);
      _Block_release(v12);
    }
  }
}

void sub_1001CF0EC(char a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v9 = (void *)Strong;
      sub_1001C906C(a3, a4 & 1, a5 & 1);
    }
  }
}

void sub_1001CF16C(char a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a1)
  {
    swift_beginAccess();
    uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
    if (!Strong)
    {
LABEL_23:
      UIAccessibilityNotifications v27 = UIAccessibilityScreenChangedNotification;
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      id v29 = [a4 cellForItemAtIndexPath:isa];

      UIAccessibilityPostNotification(v27, v29);
      return;
    }
    uint64_t v7 = *(void **)&Strong[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView];
    if (v7)
    {
      uint64_t v30 = Strong;
      id v31 = v7;
      id v8 = [v31 visibleCells];
      sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
      unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v32 = a4;
      if (v9 >> 62)
      {
LABEL_20:
        swift_bridgeObjectRetain();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (v10)
        {
LABEL_6:
          uint64_t v33 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_id;
          unint64_t v34 = v9;
          unint64_t v11 = v9 & 0xC000000000000001;
          uint64_t v12 = 4;
          while (1)
          {
            if (v11) {
              uint64_t v13 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              uint64_t v13 = (char *)*(id *)(v9 + 8 * v12);
            }
            uint64_t v14 = v13;
            uint64_t v15 = v12 - 3;
            if (__OFADD__(v12 - 4, 1))
            {
              __break(1u);
              goto LABEL_20;
            }
            type metadata accessor for JournalEntryCollectionViewCell();
            uint64_t v16 = swift_dynamicCastClass();
            if (v16)
            {
              uint64_t v17 = v16;
              uint64_t v35 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry;
              uint64_t v18 = *(void *)(v16 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry);
              if (v18)
              {
                uint64_t v19 = v10;
                uint64_t v20 = *(void **)(v18 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_id);
                uint64_t v21 = a3;
                uint64_t v22 = *(void **)(a3 + v33);
                sub_10001B284(0, (unint64_t *)&qword_100800A40);
                id v23 = v20;
                id v24 = v22;
                char v25 = static NSObject.== infix(_:_:)();

                uint64_t v10 = v19;
                a3 = v21;
                unint64_t v9 = v34;
                if (v25) {
                  break;
                }
              }
            }

            ++v12;
            if (v15 == v10) {
              goto LABEL_21;
            }
          }
          swift_bridgeObjectRelease();
          *(void *)(v17 + v35) = a3;
          swift_retain_n();
          swift_release();
          sub_1003ED2D4();
          sub_1003EDA5C();
          uint64_t v26 = *(void *)(v17 + v35);
          if (v26)
          {
            swift_retain();
            sub_10037A920();
            sub_1003E4374(*(unsigned char *)(v26 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked), 0);
            sub_1003E4104(v26);
            sub_1003EDCCC();
            sub_1003EDF48();

            swift_release();
          }
          else
          {
          }
          a4 = v32;
          swift_release();

          uint64_t Strong = v14;
          goto LABEL_22;
        }
      }
      else
      {
        uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (v10) {
          goto LABEL_6;
        }
      }
LABEL_21:

      swift_bridgeObjectRelease();
      a4 = v32;
      uint64_t Strong = v30;
    }
LABEL_22:

    goto LABEL_23;
  }
}

uint64_t sub_1001CF4B0(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  if (!qword_10083D488) {
    goto LABEL_13;
  }
  uint64_t v30 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v31 = v4;
  uint64_t v11 = qword_10083D490;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v11 + 80);
  swift_unknownObjectRetain();
  uint64_t v29 = ObjectType;
  uint64_t v14 = ObjectType;
  uint64_t v15 = v9;
  v13(v14, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    swift_unknownObjectRelease();
    sub_10001457C((uint64_t)v7, (uint64_t *)&unk_100800A60);
LABEL_12:
    uint64_t v4 = v31;
LABEL_13:
    uint64_t v25 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v4, 1, 1, v25);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v26 = static MainActor.shared.getter();
    UIAccessibilityNotifications v27 = (void *)swift_allocObject();
    v27[2] = v26;
    _OWORD v27[3] = &protocol witness table for MainActor;
    v27[4] = a1;
    sub_100328A60((uint64_t)v4, (uint64_t)&unk_100802660, (uint64_t)v27);
    return swift_release();
  }
  uint64_t v16 = *(void (**)(char *, char *, uint64_t))(v9 + 32);
  uint64_t v17 = v30;
  v16(v30, v7, v8);
  uint64_t v18 = (unint64_t *)(a1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  uint64_t v19 = swift_beginAccess();
  unint64_t v20 = *v18;
  __chkstk_darwin(v19);
  *(&v28 - 2) = (uint64_t)v17;
  swift_bridgeObjectRetain();
  unint64_t v21 = (unint64_t)sub_1001CB274((uint64_t (*)(id *))sub_1001D4CC4, (double *)&v28 - 4, v20);
  unint64_t v22 = v21;
  if (!(v21 >> 62))
  {
    if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_6;
    }
LABEL_10:
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_10;
  }
LABEL_6:
  if ((v22 & 0xC000000000000001) != 0)
  {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRelease();
  if (v23)
  {
LABEL_8:
    (*(void (**)(uint64_t, uint64_t))(v11 + 128))(v29, v11);
    type metadata accessor for AudioManager(0);
    sub_1003A6CDC();
    swift_unknownObjectRelease();
LABEL_11:
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v8);
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001CF8B4(uint64_t *a1, uint64_t a2)
{
  uint64_t v38 = sub_100010218((uint64_t *)&unk_10080B430);
  __chkstk_darwin(v38);
  uint64_t v39 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v5 - 8);
  UIAccessibilityTraits v37 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v35 - v8;
  __chkstk_darwin(v10);
  Class v40 = (char *)&v35 - v11;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v36 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v18 = *a1;
  _s10AudioAssetCMa(0);
  uint64_t v19 = swift_dynamicCastClass();
  unint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v20(v17, a2, v12);
  if (v19)
  {
    unint64_t v21 = *(void *)(v18 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments);
    if (v21 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v23 = (uint64_t)v39;
    id v24 = v40;
    if (v22)
    {
      if ((v21 & 0xC000000000000001) != 0) {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        swift_retain();
      }
      swift_bridgeObjectRelease();
      uint64_t v25 = v40;
      sub_1005DA2EC(v40);
      id v24 = v25;
      swift_release();
      uint64_t v23 = (uint64_t)v39;
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v13 + 56))(v24, 1, 1, v12);
    }
    v20(v9, (uint64_t)v17, v12);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v9, 0, 1, v12);
    uint64_t v27 = v23 + *(int *)(v38 + 48);
    sub_10001B220((uint64_t)v24, v23, (uint64_t *)&unk_100800A60);
    sub_10001B220((uint64_t)v9, v27, (uint64_t *)&unk_100800A60);
    uint64_t v28 = (uint64_t)v24;
    uint64_t v29 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48);
    if (v29(v23, 1, v12) == 1)
    {
      sub_10001457C((uint64_t)v9, (uint64_t *)&unk_100800A60);
      sub_10001457C(v28, (uint64_t *)&unk_100800A60);
      (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
      if (v29(v27, 1, v12) == 1)
      {
        sub_10001457C(v23, (uint64_t *)&unk_100800A60);
        char v26 = 1;
        return v26 & 1;
      }
    }
    else
    {
      uint64_t v30 = (uint64_t)v37;
      sub_10001B220(v23, (uint64_t)v37, (uint64_t *)&unk_100800A60);
      if (v29(v27, 1, v12) != 1)
      {
        uint64_t v32 = v36;
        (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v36, v27, v12);
        sub_1001D59FC(&qword_100802670, (void (*)(uint64_t))&type metadata accessor for URL);
        char v26 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v33 = *(void (**)(char *, uint64_t))(v13 + 8);
        v33(v32, v12);
        sub_10001457C((uint64_t)v9, (uint64_t *)&unk_100800A60);
        sub_10001457C((uint64_t)v40, (uint64_t *)&unk_100800A60);
        v33(v17, v12);
        v33(v37, v12);
        sub_10001457C(v23, (uint64_t *)&unk_100800A60);
        return v26 & 1;
      }
      sub_10001457C((uint64_t)v9, (uint64_t *)&unk_100800A60);
      sub_10001457C((uint64_t)v40, (uint64_t *)&unk_100800A60);
      id v31 = *(void (**)(char *, uint64_t))(v13 + 8);
      v31(v17, v12);
      v31((char *)v30, v12);
    }
    sub_10001457C(v23, (uint64_t *)&unk_10080B430);
    char v26 = 0;
    return v26 & 1;
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
  char v26 = 0;
  return v26 & 1;
}

void sub_1001CFE64(char a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  if (a1) {
    double v9 = 0.3;
  }
  else {
    double v9 = 0.0;
  }
  uint64_t v10 = self;
  uint64_t v11 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v11;
  *(void *)(v13 + 24) = a3;
  *(unsigned char *)(v13 + 32) = a1;
  uint64_t v22 = sub_1001D4DB4;
  uint64_t v23 = v13;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256;
  unint64_t v20 = sub_10017D530;
  unint64_t v21 = &unk_10079D3F0;
  uint64_t v14 = _Block_copy(&aBlock);
  id v15 = a3;
  swift_release();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a4;
  *(void *)(v16 + 24) = a5;
  uint64_t v22 = sub_1001D3D90;
  uint64_t v23 = v16;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v19 = 1107296256;
  unint64_t v20 = sub_1001C7318;
  unint64_t v21 = &unk_10079D440;
  uint64_t v17 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  [v10 animateWithDuration:0 delay:v14 options:v17 animations:v9 completion:0.0];
  _Block_release(v17);
  _Block_release(v14);
}

void sub_1001D0074(uint64_t a1, void *a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    double v7 = *(double *)(Strong + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_originY);
    uint64_t v8 = a3 & 1;
    [a2 setContentOffset:v8 animated:0.0 v7];
    [a2 setContentOffset:v8 animated:0.0 v7];
  }
}

id sub_1001D0120(uint64_t a1)
{
  if (UIAccessibilityIsVoiceOverRunning()
    && (sub_100018A80(a1, (uint64_t)&off_1007937B8) & 1) != 0
    && (uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView]) != 0
    && (uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentSelectedCell]) != 0)
  {
    id v5 = v3;
    id v6 = v4;
    [v5 bounds];
    double Height = CGRectGetHeight(v42);
    if (a1 == 4) {
      double v8 = Height;
    }
    else {
      double v8 = -Height;
    }
    [v5 contentOffset];
    CGFloat v10 = v9;
    CGFloat v12 = v11;
    CGAffineTransformMakeTranslation(&v39, 0.0, v8);
    v41.CGFloat x = v10;
    v41.double y = v12;
    CGPoint v13 = CGPointApplyAffineTransform(v41, &v39);
    [v5 adjustedContentInset];
    double v15 = v14;
    [v5 contentSize];
    double v17 = v16;
    [v5 adjustedContentInset];
    double v19 = v18;
    [v5 bounds];
    double v20 = CGRectGetHeight(v43);
    [v6 frame];
    double v25 = -v15;
    double v26 = v17 + v19 - v20;
    if (a1 == 4)
    {
      double MaxY = CGRectGetMaxY(*(CGRect *)&v21);
      [v5 adjustedContentInset];
      double v29 = MaxY + v28;
      [v5 bounds];
      double y = v29 - CGRectGetHeight(v44);
      if (v13.y < y) {
        double y = v13.y;
      }
      if (v26 < y) {
        double y = v26;
      }
      if (y > v25) {
        double v31 = y;
      }
      else {
        double v31 = v25;
      }
    }
    else
    {
      double MinY = CGRectGetMinY(*(CGRect *)&v21);
      if (qword_1007F6AF0 != -1)
      {
        double v38 = MinY;
        swift_once();
        double MinY = v38;
      }
      double v35 = MinY - *(double *)&qword_1008024A0;
      [v5 safeAreaInsets];
      double v37 = v35 - v36;
      if (v37 <= v13.y) {
        double v37 = v13.y;
      }
      if (v37 <= v25) {
        double v37 = v25;
      }
      if (v26 >= v37) {
        double v31 = v37;
      }
      else {
        double v31 = v26;
      }
    }
    uint64_t v32 = 1;
    [v5 setContentOffset:CGPointMake(1, v13.x) animated:v31];
  }
  else
  {
    v40.receiver = v1;
    v40.super_class = (Class)type metadata accessor for JournalEntryCollectionViewController();
    return [super accessibilityScroll:a1];
  }
  return (id)v32;
}

uint64_t sub_1001D03EC(uint64_t a1, int64_t a2, uint64_t a3, uint64_t (*a4)(void), void *a5)
{
  uint64_t v135 = a4;
  uint64_t v132 = sub_100010218((uint64_t *)&unk_1007FD5F0);
  uint64_t v131 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  uint64_t v130 = (char *)&v120 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218((uint64_t *)&unk_1007FD5D0);
  __chkstk_darwin(v10 - 8);
  uint64_t v138 = (char *)&v120 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v139 = (char *)&v120 - v13;
  uint64_t v142 = type metadata accessor for IndexPath();
  uint64_t v14 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  double v16 = (char *)&v120 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v133 = (char *)&v120 - v18;
  unint64_t v145 = type metadata accessor for IndexSet();
  unint64_t v19 = *(void *)(v145 - 8);
  __chkstk_darwin(v145);
  char v143 = (char *)&v120 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v134 = (char *)&v120 - v22;
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return ((uint64_t (*)(void))a2)();
  }
  id v24 = Strong;
  uint64_t v127 = v16;
  uint64_t v25 = *(void *)&Strong[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_viewModel];
  if (!v25
    || (uint64_t v146 = OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView,
        (double v26 = *(void **)&Strong[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView]) == 0))
  {

    return ((uint64_t (*)(void))a2)();
  }
  uint64_t v124 = a3;
  v147[0] = _swiftEmptyArrayStorage;
  id v27 = v26;
  swift_retain();
  id v129 = v27;
  unint64_t v28 = (unint64_t)[v27 visibleCells];
  sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
  int64_t v29 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v128 = (uint64_t (*)(void))a2;
  char v144 = v24;
  uint64_t v126 = v25;
  uint64_t v122 = v14;
  if ((unint64_t)v29 >> 62)
  {
    if (v29 < 0) {
      unint64_t v28 = v29;
    }
    else {
      unint64_t v28 = v29 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v141 = (uint64_t)a5;
    if (!v31) {
      goto LABEL_24;
    }
  }
  else
  {
    unint64_t v30 = v29 & 0xFFFFFFFFFFFFFF8;
    uint64_t v31 = *(void *)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v141 = (uint64_t)a5;
    if (!v31) {
      goto LABEL_24;
    }
  }
  if (v31 < 1) {
    goto LABEL_113;
  }
  for (uint64_t i = 0; i != v31; ++i)
  {
    if ((v29 & 0xC000000000000001) != 0) {
      id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v33 = *(id *)(v29 + 8 * i + 32);
    }
    unint64_t v34 = v33;
    type metadata accessor for JournalEntryCollectionViewCell();
    uint64_t v35 = swift_dynamicCastClass();
    if (v35 && *(void *)(v35 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry))
    {
      swift_retain_n();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)v147[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v147[0] & 0xFFFFFFFFFFFFFF8)
                                                                                              + 0x18) >> 1)
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      swift_release();
      a5 = (void *)v141;
    }
    else
    {
    }
  }
LABEL_24:
  unint64_t v121 = v19;

  swift_bridgeObjectRelease();
  id v37 = v147[0];
  unint64_t v150 = (unint64_t)v147[0];
  uint64_t v38 = OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_disableReloadAnimations;
  v144[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_disableReloadAnimations] = 1;
  id v5 = &off_1007F6000;
  a2 = (int64_t)v135;
  uint64_t v123 = v38;
  unint64_t v125 = (unint64_t)v37;
  if (v135)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v19 = (unint64_t)sub_1002A6864(0, 1, 1, _swiftEmptyArrayStorage);
    unint64_t v28 = *(void *)(v19 + 16);
    unint64_t v30 = *(void *)(v19 + 24);
    int64_t v29 = v28 + 1;
    uint64_t v14 = (uint64_t)v139;
    if (v28 >= v30 >> 1) {
      goto LABEL_114;
    }
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  unint64_t v19 = (unint64_t)_swiftEmptyArrayStorage;
  a2 = (int64_t)v128;
  uint64_t v14 = (uint64_t)v139;
  uint64_t v44 = a5[2];
  if (v44) {
    goto LABEL_33;
  }
LABEL_72:
  uint64_t v78 = v144;
  if (*(void *)(v19 + 16))
  {
    uint64_t v79 = (void *)swift_bridgeObjectRetain();
    sub_100294A28(v79);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_100294A28(_swiftEmptyArrayStorage);
    if (v5[349] != (_UNKNOWN *)-1) {
      swift_once();
    }
    uint64_t v80 = type metadata accessor for Logger();
    sub_100026A54(v80, (uint64_t)qword_10083D088);
    uint64_t v81 = Logger.logObject.getter();
    os_log_type_t v82 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v81, v82))
    {
      uint64_t v83 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v83 = 0;
      _os_log_impl((void *)&_mh_execute_header, v81, v82, "Filter cleared.", v83, 2u);
      swift_slowDealloc();
    }
  }
  *(void *)&v78[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentFilterOptions] = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)&v78[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentEntryIds] = v135;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v84 = v129;
  [v129 contentOffset];
  double v86 = v85;
  [v84 adjustedContentInset];
  if (v86 + v87 <= 0.0) {
    goto LABEL_87;
  }
  if (v125 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v106 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v106 >= 0) {
      uint64_t v107 = v106;
    }
    else {
      uint64_t v107 = v106 + 1;
    }
    if (v106 < -1)
    {
      __break(1u);
      goto LABEL_120;
    }
    int64_t v29 = v107 >> 1;
    uint64_t v78 = v144;
    uint64_t v14 = (uint64_t)v139;
  }
  else
  {
    int64_t v29 = *(void *)((v125 & 0xFFFFFFFFFFFFFF8) + 0x10) >> 1;
  }
  sub_1001D59FC(&qword_100802678, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  dispatch thunk of SetAlgebra.init()();
  a2 = 0;
  while (1)
  {
    int64_t v149 = a2;
    dispatch thunk of SetAlgebra.insert(_:)();
    if (v29 == a2) {
      break;
    }
    BOOL v88 = __OFADD__(a2++, 1);
    if (v88)
    {
      __break(1u);
      goto LABEL_87;
    }
  }
  unint64_t v137 = v19;
  unint64_t v89 = v121;
  id v5 = (_UNKNOWN **)v134;
  unint64_t v90 = v145;
  (*(void (**)(char *, char *, unint64_t))(v121 + 32))(v134, v143, v145);
  swift_bridgeObjectRelease();
  sub_100010218(&qword_100802680);
  sub_100014488((unint64_t *)&unk_100802688, &qword_100802680);
  MutableCollection.move(fromOffsets:toOffset:)();
  uint64_t v91 = *(void (**)(_UNKNOWN **, unint64_t))(v89 + 8);
  a5 = (void *)(v89 + 8);
  v91(v5, v90);
  a2 = v150;
  if (!(v150 >> 62))
  {
    unint64_t v19 = *(void *)((v150 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    unint64_t v28 = v142;
    if (v19)
    {
LABEL_90:
      unint64_t v145 = a2 & 0xC000000000000001;
      uint64_t v141 = a2 & 0xFFFFFFFFFFFFFF8;
      *(void *)&long long v140 = a2 + 32;
      unint64_t v92 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v122 + 48);
      uint64_t v136 = (char *)(v122 + 32);
      unint64_t v30 = v122 + 56;
      char v143 = (char *)(v122 + 56);
      while (1)
      {
        BOOL v88 = __OFSUB__(v19--, 1);
        if (v88)
        {
          __break(1u);
LABEL_111:
          __break(1u);
LABEL_112:
          __break(1u);
LABEL_113:
          __break(1u);
LABEL_114:
          unint64_t v19 = (unint64_t)sub_1002A6864((double *)(v30 > 1), v29, 1, (double *)v19);
LABEL_26:
          *(void *)(v19 + 16) = v29;
          unint64_t v39 = v19 + 24 * v28;
          *(_WORD *)(v39 + 32) = 514;
          *(void *)(v39 + 40) = 0;
          *(void *)(v39 + 48) = a2;
          a2 = (int64_t)v128;
          if (v5[349] != (_UNKNOWN *)-1) {
            swift_once();
          }
          uint64_t v40 = type metadata accessor for Logger();
          sub_100026A54(v40, (uint64_t)qword_10083D088);
          CGPoint v41 = Logger.logObject.getter();
          os_log_type_t v42 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v41, v42))
          {
            CGRect v43 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)CGRect v43 = 0;
            _os_log_impl((void *)&_mh_execute_header, v41, v42, "Filtering limited by Search or Insights", v43, 2u);
            swift_slowDealloc();
          }

          uint64_t v44 = a5[2];
          if (!v44) {
            goto LABEL_72;
          }
LABEL_33:
          swift_bridgeObjectRetain();
          uint64_t v45 = 0;
          *(void *)&long long v46 = 136315138;
          long long v140 = v46;
          uint64_t v136 = (char *)&type metadata for Any + 8;
          do
          {
            uint64_t v47 = *((unsigned __int8 *)a5 + v45++ + 32);
            uint64_t v48 = &off_1007937E8;
            switch(v47)
            {
              case 1:
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v19 = (unint64_t)sub_1002A6864(0, *(void *)(v19 + 16) + 1, 1, (double *)v19);
                }
                unint64_t v50 = *(void *)(v19 + 16);
                unint64_t v49 = *(void *)(v19 + 24);
                if (v50 >= v49 >> 1) {
                  unint64_t v19 = (unint64_t)sub_1002A6864((double *)(v49 > 1), v50 + 1, 1, (double *)v19);
                }
                *(void *)(v19 + 16) = v50 + 1;
                unint64_t v51 = v19 + 24 * v50;
                *(_WORD *)(v51 + 32) = 513;
                *(void *)(v51 + 40) = 0;
                *(void *)(v51 + 48) = 0;
                if (v5[349] != (_UNKNOWN *)-1) {
                  swift_once();
                }
                uint64_t v52 = type metadata accessor for Logger();
                sub_100026A54(v52, (uint64_t)qword_10083D088);
                uint64_t v53 = Logger.logObject.getter();
                os_log_type_t v54 = static os_log_type_t.default.getter();
                if (!os_log_type_enabled(v53, v54)) {
                  goto LABEL_54;
                }
                uint64_t v55 = (uint8_t *)swift_slowAlloc();
                *(_WORD *)uint64_t v55 = 0;
                uint64_t v56 = v53;
                os_log_type_t v57 = v54;
                uint64_t v58 = "Filtering by Bookmarked";
                goto LABEL_53;
              case 2:
                goto LABEL_63;
              case 3:
                uint64_t v48 = &off_100793810;
                goto LABEL_63;
              case 4:
                uint64_t v48 = &off_100793838;
                goto LABEL_63;
              case 5:
                uint64_t v48 = &off_100793860;
                goto LABEL_63;
              case 6:
                uint64_t v48 = &off_100793888;
                goto LABEL_63;
              case 7:
                uint64_t v48 = &off_1007938B0;
                goto LABEL_63;
              case 8:
                uint64_t v48 = &off_1007938D8;
                goto LABEL_63;
              case 9:
                uint64_t v48 = &off_100793900;
                goto LABEL_63;
              case 10:
                uint64_t v48 = &off_100793928;
LABEL_63:
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v19 = (unint64_t)sub_1002A6864(0, *(void *)(v19 + 16) + 1, 1, (double *)v19);
                }
                unint64_t v65 = *(void *)(v19 + 16);
                unint64_t v64 = *(void *)(v19 + 24);
                if (v65 >= v64 >> 1) {
                  unint64_t v19 = (unint64_t)sub_1002A6864((double *)(v64 > 1), v65 + 1, 1, (double *)v19);
                }
                *(void *)(v19 + 16) = v65 + 1;
                unint64_t v66 = v19 + 24 * v65;
                *(_WORD *)(v66 + 32) = 514;
                *(void *)(v66 + 40) = v48;
                *(void *)(v66 + 48) = 0;
                if (v5[349] != (_UNKNOWN *)-1) {
                  swift_once();
                }
                uint64_t v67 = type metadata accessor for Logger();
                sub_100026A54(v67, (uint64_t)qword_10083D088);
                uint64_t v68 = Logger.logObject.getter();
                os_log_type_t v69 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v68, v69))
                {
                  uint64_t v70 = swift_slowAlloc();
                  v147[0] = (id)swift_slowAlloc();
                  *(_DWORD *)uint64_t v70 = v140;
                  sub_1001EB1F4(v47);
                  uint64_t v71 = v45;
                  uint64_t v72 = v44;
                  uint64_t v73 = v5;
                  uint64_t v74 = Array.description.getter();
                  unint64_t v137 = v19;
                  unint64_t v76 = v75;
                  swift_bridgeObjectRelease();
                  uint64_t v77 = v74;
                  id v5 = v73;
                  uint64_t v44 = v72;
                  uint64_t v45 = v71;
                  *(void *)(v70 + 4) = sub_10011EA98(v77, v76, (uint64_t *)v147);
                  unint64_t v19 = v137;
                  swift_bridgeObjectRelease();
                  _os_log_impl((void *)&_mh_execute_header, v68, v69, "Filtering by types: %s", (uint8_t *)v70, 0xCu);
                  swift_arrayDestroy();
                  a5 = (void *)v141;
                  swift_slowDealloc();
                  swift_slowDealloc();
                }

                break;
              case 11:
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v19 = (unint64_t)sub_1002A6864(0, *(void *)(v19 + 16) + 1, 1, (double *)v19);
                }
                unint64_t v60 = *(void *)(v19 + 16);
                unint64_t v59 = *(void *)(v19 + 24);
                if (v60 >= v59 >> 1) {
                  unint64_t v19 = (unint64_t)sub_1002A6864((double *)(v59 > 1), v60 + 1, 1, (double *)v19);
                }
                *(void *)(v19 + 16) = v60 + 1;
                unint64_t v61 = v19 + 24 * v60;
                *(_WORD *)(v61 + 32) = 258;
                *(void *)(v61 + 40) = 0;
                *(void *)(v61 + 48) = 0;
                if (v5[349] != (_UNKNOWN *)-1) {
                  swift_once();
                }
                uint64_t v62 = type metadata accessor for Logger();
                sub_100026A54(v62, (uint64_t)qword_10083D088);
                uint64_t v53 = Logger.logObject.getter();
                os_log_type_t v63 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v53, v63))
                {
                  uint64_t v55 = (uint8_t *)swift_slowAlloc();
                  *(_WORD *)uint64_t v55 = 0;
                  uint64_t v56 = v53;
                  os_log_type_t v57 = v63;
                  uint64_t v58 = "Filtering by textOnly";
LABEL_53:
                  _os_log_impl((void *)&_mh_execute_header, v56, v57, v58, v55, 2u);
                  swift_slowDealloc();
                }
LABEL_54:

                break;
              default:
                break;
            }
          }
          while (v44 != v45);
          swift_bridgeObjectRelease();
          a2 = (int64_t)v128;
          uint64_t v14 = (uint64_t)v139;
          goto LABEL_72;
        }
        unint64_t v30 = v145;
        if (v145)
        {
          id v5 = (_UNKNOWN **)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if ((v19 & 0x8000000000000000) != 0) {
            goto LABEL_111;
          }
          unint64_t v30 = *(void *)(v141 + 16);
          if (v19 >= v30) {
            goto LABEL_112;
          }
          id v5 = *(_UNKNOWN ***)(v140 + 8 * v19);
          swift_retain();
        }
        uint64_t v93 = *(void **)&v78[v146];
        if (v93) {
          break;
        }
LABEL_95:
        swift_release();
        if (!v19) {
          goto LABEL_124;
        }
      }
      id v94 = v93;
      char v95 = [v94 dataSource];
      if (v95)
      {
        a5 = v95;
        sub_100010218(&qword_1007FAA68);
        if (swift_dynamicCastClass())
        {
          v147[0] = *(_UNKNOWN **)((char *)v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_id);
          v147[1] = 0;
          char v148 = 2;
          id v96 = v147[0];
          uint64_t v97 = (uint64_t)v138;
          dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

          swift_unknownObjectRelease();
          int64_t v29 = (int64_t)v92;
          uint64_t v98 = *v92;
          a5 = (void *)v142;
          if ((*v92)(v97, 1, v142) != 1)
          {
            uint64_t v99 = v97;
            unsigned __int8 v100 = *(void (**)(char *, uint64_t, unint64_t))v136;
            uint64_t v14 = (uint64_t)v139;
            (*(void (**)(char *, uint64_t, void *))v136)(v139, v99, a5);
            (*(void (**)(uint64_t, void, uint64_t, void *))v143)(v14, 0, 1, a5);
            unsigned int v101 = v98(v14, 1, (uint64_t)a5);
            unint64_t v28 = (unint64_t)a5;
            if (v101 != 1)
            {
              double v102 = v133;
              v100(v133, v14, v28);
              IndexPath.row.getter();
              IndexPath.section.getter();
              double v103 = v127;
              IndexPath.init(row:section:)();
              Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
              [v94 scrollToItemAtIndexPath:isa atScrollPosition:2 animated:0];

              uint64_t v105 = *(void (**)(char *, unint64_t))(v122 + 8);
              v105(v103, v28);
              v105(v102, v28);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
              a2 = (int64_t)v128;
              uint64_t v78 = v144;
              goto LABEL_109;
            }
            goto LABEL_94;
          }
          sub_10001457C(v97, (uint64_t *)&unk_1007FD5D0);
          unint64_t v28 = (unint64_t)a5;
          uint64_t v14 = (uint64_t)v139;
LABEL_93:
          (*(void (**)(uint64_t, uint64_t, uint64_t, unint64_t))v143)(v14, 1, 1, v28);
LABEL_94:

          sub_10001457C(v14, (uint64_t *)&unk_1007FD5D0);
          uint64_t v78 = v144;
          goto LABEL_95;
        }
        swift_unknownObjectRelease();
        unint64_t v28 = v142;
      }

      goto LABEL_93;
    }
    goto LABEL_124;
  }
LABEL_120:
  if (a2 < 0) {
    int64_t v29 = a2;
  }
  else {
    int64_t v29 = a2 & 0xFFFFFFFFFFFFFF8;
  }
  swift_bridgeObjectRetain();
  unint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
  unint64_t v28 = v142;
  if (v19) {
    goto LABEL_90;
  }
LABEL_124:
  swift_bridgeObjectRelease();
  uint64_t v108 = *(void **)&v78[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_dataSource];
  if (!v108)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a2 = (int64_t)v128;
    goto LABEL_109;
  }
  id v109 = v108;
  uint64_t v110 = v130;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v111 = v132;
  uint64_t v112 = NSDiffableDataSourceSnapshot.sectionIdentifiers.getter();
  (*(void (**)(char *, uint64_t))(v131 + 8))(v110, v111);
  uint64_t v113 = *(void *)(v112 + 16);
  a2 = (int64_t)v128;
  uint64_t v114 = v122;
  if (v113)
  {
    uint64_t v115 = 0;
    uint64_t v116 = 40;
    while (*(void *)(v112 + v116) == 1)
    {
      ++v115;
      v116 += 16;
      if (v113 == v115) {
        goto LABEL_87;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100010218(&qword_1007FC110);
    uint64_t v117 = swift_allocObject();
    *(_OWORD *)(v117 + 16) = xmmword_1006D6280;
    *(void *)(v117 + 32) = v115;
    uint64_t v118 = v127;
    IndexPath.init(arrayLiteral:)();
    Class v119 = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(char *, uint64_t))(v114 + 8))(v118, v142);
    [v129 scrollToItemAtIndexPath:v119 atScrollPosition:1 animated:0];

    goto LABEL_109;
  }
LABEL_87:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_109:
  v78[v123] = 0;
  sub_10030A6C4();
  ((void (*)(void))a2)();

  return swift_release();
}

id sub_1001D1848(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_coreDataContext;
  uint64_t v7 = qword_1007F6D38;
  double v8 = v3;
  if (v7 != -1) {
    swift_once();
  }
  uint64_t v9 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
  *(void *)&v3[v6] = v9;
  *(void *)&v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_weakInit();
  *(void *)&v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_timelineScrollDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentFilterOptions] = &off_100793978;
  *(void *)&v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentEntryIds] = 0;
  *(void *)&v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_originY] = 0;
  v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_shouldPlayVideoAfterDelay] = 1;
  v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_disableReloadAnimations] = 0;
  *(void *)&v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_prefetcher] = 0;
  *(void *)&v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_viewModel] = 0;
  *(void *)&v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView] = 0;
  uint64_t v10 = OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_fadeView;
  type metadata accessor for FadingView();
  id v11 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v12 = v9;
  *(void *)&v8[v10] = [v11 init];
  *(void *)&v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentSelectedCell] = 0;
  v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_hasLoadedContent] = 0;
  *(void *)&v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_initialYOffset] = 0;
  *(void *)&v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_collectionViewTopConstraint] = 0;
  uint64_t v13 = &v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_tip];
  uint64_t v14 = type metadata accessor for AnyTip();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = &v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_tipActionHandler];
  *(void *)uint64_t v15 = AudioRecordingActivityState.hash(into:);
  *((void *)v15 + 1) = 0;
  v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_showsInsights] = 0;
  *(void *)&v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_dataSource] = 0;
  v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_hasPerformedInitialFetch] = 0;

  if (a2)
  {
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v16 = 0;
  }
  v19.receiver = v8;
  v19.super_class = (Class)type metadata accessor for JournalEntryCollectionViewController();
  id v17 = [super initWithNibName:v16 bundle:a3];

  return v17;
}

id sub_1001D1B50(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_coreDataContext;
  uint64_t v4 = qword_1007F6D38;
  id v5 = v1;
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v6 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
  *(void *)&v5[v3] = v6;
  *(void *)&v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_weakInit();
  *(void *)&v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_timelineScrollDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentFilterOptions] = &off_1007939A0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentEntryIds] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_originY] = 0;
  v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_shouldPlayVideoAfterDelay] = 1;
  v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_disableReloadAnimations] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_prefetcher] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_viewModel] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView] = 0;
  uint64_t v7 = OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_fadeView;
  type metadata accessor for FadingView();
  id v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v9 = v6;
  *(void *)&v5[v7] = [v8 init];
  *(void *)&v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentSelectedCell] = 0;
  v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_hasLoadedContent] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_initialYOffset] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_collectionViewTopConstraint] = 0;
  uint64_t v10 = &v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_tip];
  uint64_t v11 = type metadata accessor for AnyTip();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  id v12 = &v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_tipActionHandler];
  void *v12 = AudioRecordingActivityState.hash(into:);
  v12[1] = 0;
  v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_showsInsights] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_dataSource] = 0;
  v5[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_hasPerformedInitialFetch] = 0;

  v15.receiver = v5;
  v15.super_class = (Class)type metadata accessor for JournalEntryCollectionViewController();
  [super initWithCoder:a1];

  return v13;
}

id sub_1001D1DE4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalEntryCollectionViewController();
  [super dealloc];
}

uint64_t sub_1001D1F44()
{
  return type metadata accessor for JournalEntryCollectionViewController();
}

uint64_t type metadata accessor for JournalEntryCollectionViewController()
{
  uint64_t result = qword_100802558;
  if (!qword_100802558) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001D1F98()
{
  sub_1001D20A8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1001D20A8()
{
  if (!qword_100802568)
  {
    type metadata accessor for AnyTip();
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100802568);
    }
  }
}

id sub_1001D219C(void *a1)
{
  id result = [v1 view];
  if (result)
  {
    uint64_t v4 = result;
    id v5 = [result window];

    double Height = 0.0;
    if (v5)
    {
      id v7 = [v5 windowScene];

      if (v7)
      {
        id v8 = [v7 statusBarManager];

        if (v8)
        {
          [v8 statusBarFrame];
          CGFloat v10 = v9;
          CGFloat v12 = v11;
          CGFloat v14 = v13;
          CGFloat v16 = v15;

          v26.origin.CGFloat x = v10;
          v26.origin.double y = v12;
          v26.size.width = v14;
          v26.size.height = v16;
          double Height = CGRectGetHeight(v26);
        }
      }
    }
    [a1 contentInset];
    double v18 = v17;
    if (qword_1007F73D0 != -1) {
      swift_once();
    }
    double v19 = *(double *)&qword_10083D9E0;
    if (qword_1007F73D8 != -1) {
      swift_once();
    }
    double v20 = *(double *)&qword_10083D9E8;
    uint64_t v21 = &v1[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_timelineScrollDelegate];
    id result = (id)swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v22 = *((void *)v21 + 1);
      uint64_t ObjectType = swift_getObjectType();
      [a1 contentOffset];
      (*(void (**)(uint64_t, uint64_t, double))(v22 + 8))(ObjectType, v22, Height + v18 + v19 + v20 + v24);
      return (id)swift_unknownObjectRelease();
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1001D24E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  void v5[5] = v7;
  void v5[6] = v6;
  return _swift_task_switch(sub_1001D257C, v7, v6);
}

uint64_t sub_1001D257C()
{
  if (qword_1007F7120 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[2];
  objc_super v2 = (void *)qword_10083D6B0;
  v0[7] = qword_10083D6B0;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1006D6D00;
  *(void *)(v3 + 32) = v1;
  uint64_t v7 = v3;
  specialized Array._endMutation()();
  v0[8] = v7;
  v2;
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[9] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1001D26B8;
  uint64_t v5 = v0[3];
  return sub_100092208(v7, 1, v5);
}

uint64_t sub_1001D26B8()
{
  uint64_t v1 = *v0;
  objc_super v2 = *(void **)(*v0 + 56);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_100193204, v4, v3);
}

uint64_t sub_1001D2814()
{
  unint64_t v0 = self;
  id v1 = [v0 mainBundle];
  v11._uint64_t countAndFlagsBits = 0xD000000000000012;
  v11._unint64_t object = (void *)0x800000010068F0A0;
  v2._unint64_t object = (void *)0x800000010068F080;
  v2._uint64_t countAndFlagsBits = 0xD000000000000011;
  v3._uint64_t countAndFlagsBits = 0;
  v3._unint64_t object = (void *)0xE000000000000000;
  Swift::String v4 = NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v11);

  id v5 = [v0 mainBundle];
  v12._uint64_t countAndFlagsBits = 0xD000000000000014;
  v6._uint64_t countAndFlagsBits = 0xD00000000000005FLL;
  v12._unint64_t object = (void *)0x800000010068F120;
  v6._unint64_t object = (void *)0x800000010068F0C0;
  v7._uint64_t countAndFlagsBits = 0;
  v7._unint64_t object = (void *)0xE000000000000000;
  Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v12);

  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001D298C(uint64_t result)
{
  if (result)
  {
    if (*(void *)&v1[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_viewModel])
    {
      uint64_t v2 = result;
      uint64_t v3 = swift_allocObject();
      *(void *)(v3 + 16) = sub_1001D3D88;
      *(void *)(v3 + 24) = v2;
      uint64_t v4 = swift_retain_n();
      sub_1002560F8(v4, v1, (uint64_t)sub_1001D3D90, v3);
      swift_release();
      return swift_release_n();
    }
  }
  return result;
}

uint64_t sub_1001D2A34(uint64_t result, char a2)
{
  if (result)
  {
    uint64_t v4 = v2 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_delegate;
    id result = swift_unknownObjectWeakLoadStrong();
    if (result)
    {
      uint64_t v5 = *(void *)(v4 + 8);
      uint64_t ObjectType = swift_getObjectType();
      Swift::String v7 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v5 + 40);
      uint64_t v8 = swift_retain();
      v7(v8, a2 & 1, ObjectType, v5);
      swift_release();
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

uint64_t sub_1001D2AF8(uint64_t a1)
{
  uint64_t v3 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  type metadata accessor for MainActor();
  swift_retain();
  id v7 = v1;
  uint64_t v8 = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_allocObject();
  v9[2] = v8;
  _OWORD v9[3] = &protocol witness table for MainActor;
  v9[4] = a1;
  v9[5] = v7;
  sub_100328A60((uint64_t)v5, (uint64_t)&unk_100802650, (uint64_t)v9);
  return swift_release();
}

void sub_1001D2C24()
{
  type metadata accessor for UnsupportedEntryViewController();
  id v1 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v2 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v1];
  [v0 presentViewController:v2 animated:1 completion:0];
}

uint64_t sub_1001D2CC0(void *a1)
{
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentSelectedCell);
  *(void *)(v1 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentSelectedCell) = a1;
  id v3 = a1;

  uint64_t v4 = v1 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(ObjectType, v6);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_1001D2D50(uint64_t a1)
{
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  if (!v2) {
    return;
  }
  id v4 = v2;
  id v5 = [v4 visibleCells];
  sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_4:
      if (v7 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v22 = v4;
        uint64_t v8 = 0;
        unint64_t v9 = v6 & 0xC000000000000001;
        uint64_t v23 = v7;
        do
        {
          if (v9) {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v10 = *(id *)(v6 + 8 * v8 + 32);
          }
          uint64_t v11 = v10;
          type metadata accessor for JournalEntryCollectionViewCell();
          uint64_t v12 = swift_dynamicCastClass();
          if (v12)
          {
            uint64_t v13 = v12;
            if ((static NSObject.== infix(_:_:)() & 1) == 0)
            {
              uint64_t v14 = a1;
              double v15 = *(void **)(v13 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView);
              CGFloat v16 = self;
              uint64_t v17 = swift_allocObject();
              *(void *)(v17 + 16) = v15;
              unint64_t v28 = sub_1001D5E40;
              uint64_t v29 = v17;
              long long aBlock = _NSConcreteStackBlock;
              uint64_t v25 = 1107296256;
              CGRect v26 = sub_10017D530;
              id v27 = &unk_10079D350;
              double v18 = _Block_copy(&aBlock);
              double v19 = v15;
              swift_release();
              unint64_t v28 = (uint64_t (*)())AudioRecordingActivityState.hash(into:);
              uint64_t v29 = 0;
              long long aBlock = _NSConcreteStackBlock;
              uint64_t v25 = 1107296256;
              CGRect v26 = sub_1001C7318;
              id v27 = &unk_10079D378;
              double v20 = _Block_copy(&aBlock);
              swift_release();
              [v16 animateWithDuration:4 delay:v18 options:v20 animations:0.3 completion:0.0 v22];
              _Block_release(v20);
              _Block_release(v18);
              uint64_t v21 = *(void **)&v19[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_contentScrollView];
              a1 = v14;
              unint64_t v9 = v6 & 0xC000000000000001;
              uint64_t v7 = v23;
              [v21 setScrollEnabled:0];
            }
          }
          ++v8;
        }
        while (v7 != v8);

        swift_bridgeObjectRelease();
      }
      return;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_4;
    }
  }

  swift_bridgeObjectRelease();
}

void sub_1001D3090(uint64_t a1)
{
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  if (!v2) {
    return;
  }
  id v4 = v2;
  id v5 = [v4 visibleCells];
  sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7)
    {
LABEL_4:
      if (v7 < 1)
      {
        __break(1u);
      }
      else
      {
        uint64_t v22 = v4;
        uint64_t v8 = 0;
        unint64_t v9 = v6 & 0xC000000000000001;
        uint64_t v23 = v7;
        do
        {
          if (v9) {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v10 = *(id *)(v6 + 8 * v8 + 32);
          }
          uint64_t v11 = v10;
          type metadata accessor for JournalEntryCollectionViewCell();
          uint64_t v12 = swift_dynamicCastClass();
          if (v12)
          {
            uint64_t v13 = v12;
            if ((static NSObject.== infix(_:_:)() & 1) == 0)
            {
              uint64_t v14 = a1;
              double v15 = *(void **)(v13 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView);
              CGFloat v16 = self;
              uint64_t v17 = swift_allocObject();
              *(void *)(v17 + 16) = v15;
              unint64_t v28 = sub_1001D5E40;
              uint64_t v29 = v17;
              long long aBlock = _NSConcreteStackBlock;
              uint64_t v25 = 1107296256;
              CGRect v26 = sub_10017D530;
              id v27 = &unk_10079D2D8;
              double v18 = _Block_copy(&aBlock);
              double v19 = v15;
              swift_release();
              unint64_t v28 = (uint64_t (*)())AudioRecordingActivityState.hash(into:);
              uint64_t v29 = 0;
              long long aBlock = _NSConcreteStackBlock;
              uint64_t v25 = 1107296256;
              CGRect v26 = sub_1001C7318;
              id v27 = &unk_10079D300;
              double v20 = _Block_copy(&aBlock);
              swift_release();
              [v16 animateWithDuration:4 delay:v18 options:v20 animations:0.3 completion:0.0 v22];
              _Block_release(v20);
              _Block_release(v18);
              uint64_t v21 = *(void **)&v19[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_contentScrollView];
              a1 = v14;
              unint64_t v9 = v6 & 0xC000000000000001;
              uint64_t v7 = v23;
              [v21 setScrollEnabled:1];
            }
          }
          ++v8;
        }
        while (v7 != v8);

        swift_bridgeObjectRelease();
      }
      return;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_4;
    }
  }

  swift_bridgeObjectRelease();
}

void *sub_1001D33D0()
{
  uint64_t result = *(void **)(v0 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  if (result)
  {
    id v2 = [result visibleCells];
    sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v3 >> 62) {
      goto LABEL_14;
    }
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
    {
      for (uint64_t i = 4; ; ++i)
      {
        id v6 = (v3 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v3 + 8 * i);
        uint64_t v7 = v6;
        if (__OFADD__(i - 4, 1)) {
          break;
        }
        type metadata accessor for JournalEntryCollectionViewCell();
        uint64_t v8 = swift_dynamicCastClass();
        if (v8)
        {
          unint64_t v9 = *(void **)(v8 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView);
          id v14 = self;
          uint64_t v10 = swift_allocObject();
          *(void *)(v10 + 16) = v9;
          double v19 = sub_1001D4CE4;
          uint64_t v20 = v10;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v16 = 1107296256;
          uint64_t v17 = sub_10017D530;
          double v18 = &unk_10079D260;
          uint64_t v11 = _Block_copy(&aBlock);
          uint64_t v12 = v9;
          swift_release();
          double v19 = (id (*)())AudioRecordingActivityState.hash(into:);
          uint64_t v20 = 0;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v16 = 1107296256;
          uint64_t v17 = sub_1001C7318;
          double v18 = &unk_10079D288;
          uint64_t v13 = _Block_copy(&aBlock);
          swift_release();
          [v14 animateWithDuration:4 delay:v11 options:v13 animations:0.3 completion:0.0];
          _Block_release(v13);
          _Block_release(v11);
          [*(id *)&v12[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_contentScrollView] setScrollEnabled:1];
        }

        if (i - 3 == v4) {
          return (void *)swift_bridgeObjectRelease_n();
        }
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
    }
    return (void *)swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1001D3698()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentSelectedCell);
  *(void *)(v0 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_currentSelectedCell) = 0;

  uint64_t v2 = v0 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = *(void *)(v2 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(ObjectType, v4);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1001D3780(id result, id a2, char a3)
{
  if (a3 == 4) {
    return (id)swift_bridgeObjectRetain();
  }
  if (a3 != 2)
  {
    if (a3 != 1) {
      return result;
    }
    return (id)swift_bridgeObjectRetain();
  }
  return result;
}

void destroy for JournalEntryCollectionViewController.Item(uint64_t a1)
{
}

uint64_t _s7Journal36JournalEntryCollectionViewControllerC4ItemOwCP_0(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1001D3780(*(id *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for JournalEntryCollectionViewController.Item(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_1001D3780(*(id *)a2, v4, v5);
  id v6 = *(void **)a1;
  uint64_t v7 = *(void **)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_100062C10(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for JournalEntryCollectionViewController.Item(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for JournalEntryCollectionViewController.Item(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void **)a1;
  char v5 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_100062C10(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for JournalEntryCollectionViewController.Item(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for JournalEntryCollectionViewController.Item(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 252;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_1001D3948(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_1001D3950(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for JournalEntryCollectionViewController.Item()
{
  return &type metadata for JournalEntryCollectionViewController.Item;
}

unint64_t destroy for JournalEntryCollectionViewController.Section(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s7Journal36JournalEntryCollectionViewControllerC7SectionOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *assignWithCopy for JournalEntryCollectionViewController.Section(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for JournalEntryCollectionViewController.Section(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for JournalEntryCollectionViewController.Section(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for JournalEntryCollectionViewController.Section(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_1001D3B88(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1001D3BA0(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for JournalEntryCollectionViewController.Section()
{
  return &type metadata for JournalEntryCollectionViewController.Section;
}

unint64_t sub_1001D3BD4()
{
  unint64_t result = qword_100802630;
  if (!qword_100802630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802630);
  }
  return result;
}

unint64_t sub_1001D3C2C()
{
  unint64_t result = qword_100802638;
  if (!qword_100802638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802638);
  }
  return result;
}

uint64_t sub_1001D3C80()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001D3CC8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  char v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *char v8 = v2;
  v8[1] = sub_10002C194;
  return sub_1001D24E4(a1, v4, v5, v7, v6);
}

uint64_t sub_1001D3D88()
{
  return sub_1001CF4B0(v0);
}

void sub_1001D3D94(void *a1)
{
  if (qword_1007F6AE8 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100026A54(v2, (uint64_t)qword_10083D088);
  unint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Empty cell dequeued! This should not happen. Please debug me.", v5, 2u);
    swift_slowDealloc();
  }

  [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v6 = [a1 heightAnchor];
  id v7 = [v6 constraintEqualToConstant:0.0];

  [v7 setActive:1];
}

uint64_t sub_1001D3EF0(void *a1, void *a2, char a3, void *a4, void *a5, char a6)
{
  switch(a3)
  {
    case 1:
      if (a6 != 1) {
        goto LABEL_18;
      }
      if (a1 == a4 && a2 == a5) {
        goto LABEL_17;
      }
      goto LABEL_19;
    case 2:
      if (a6 != 2) {
        goto LABEL_18;
      }
      sub_10001B284(0, (unint64_t *)&unk_100800920);
      sub_1001D3780(a1, a2, 2);
      sub_1001D3780(a4, a5, 2);
      char v15 = static NSObject.== infix(_:_:)();
      sub_100062C10(a4, a5, 2);
      sub_100062C10(a1, a2, 2);
      uint64_t result = v15 & 1;
      break;
    case 3:
      return a6 == 3 && a4 == a1;
    case 4:
      if (a6 != 4) {
        goto LABEL_18;
      }
      if (a1 == a4 && a2 == a5)
      {
LABEL_17:
        uint64_t result = 1;
      }
      else
      {
LABEL_19:
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      break;
    default:
      if (a6)
      {
LABEL_18:
        uint64_t result = 0;
      }
      else
      {
        unint64_t v10 = 0xEF73656972746E45;
        uint64_t v11 = 0x724F6B6165727473;
        uint64_t v12 = a1;
        uint64_t v13 = 0x724F6B6165727473;
        unint64_t v14 = 0xEF73656972746E45;
        switch(v12)
        {
          case 1:
            unint64_t v14 = 0xE600000000000000;
            uint64_t v13 = 0x6B6165727473;
            break;
          case 2:
            unint64_t v14 = 0xE700000000000000;
            uint64_t v13 = 0x73656972746E65;
            break;
          case 3:
            unint64_t v14 = 0xE500000000000000;
            uint64_t v13 = 0x7364726F77;
            break;
          case 4:
            unint64_t v14 = 0xE400000000000000;
            uint64_t v13 = 1937334628;
            break;
          default:
            break;
        }
        switch((char)a4)
        {
          case 1:
            unint64_t v10 = 0xE600000000000000;
            uint64_t v11 = 0x6B6165727473;
            break;
          case 2:
            unint64_t v10 = 0xE700000000000000;
            uint64_t v11 = 0x73656972746E65;
            break;
          case 3:
            unint64_t v10 = 0xE500000000000000;
            uint64_t v11 = 0x7364726F77;
            break;
          case 4:
            unint64_t v10 = 0xE400000000000000;
            uint64_t v11 = 1937334628;
            break;
          default:
            break;
        }
        if (v13 == v11 && v14 == v10)
        {
          swift_bridgeObjectRelease_n();
          uint64_t result = 1;
        }
        else
        {
          char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = v17 & 1;
        }
      }
      break;
  }
  return result;
}

uint64_t sub_1001D4220(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  switch(a2)
  {
    case 0:
      if (a4) {
        goto LABEL_14;
      }
      uint64_t result = 1;
      break;
    case 1:
      if (a4 != 1) {
        goto LABEL_14;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a4 != 2) {
        goto LABEL_14;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a4 != 3) {
        goto LABEL_14;
      }
      uint64_t result = 1;
      break;
    default:
      if (a4 < 4)
      {
LABEL_14:
        uint64_t result = 0;
      }
      else if (a1 == a3 && a2 == a4)
      {
        uint64_t result = 1;
      }
      else
      {
        uint64_t result = _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      break;
  }
  return result;
}

void *sub_1001D42C8(unint64_t a1, void *a2)
{
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    if (v4) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v4)
    {
LABEL_3:
      uint64_t v5 = 4;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v6 = *(id *)(a1 + 8 * v5);
        }
        id v7 = v6;
        uint64_t v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1))
        {
          __break(1u);
          goto LABEL_20;
        }
        id v9 = [a2 objectWithID:v6];
        type metadata accessor for JournalEntryMO();
        if (swift_dynamicCastClass()) {
          break;
        }
        type metadata accessor for JournalEntryAssetMO();
        unint64_t v10 = (void *)swift_dynamicCastClass();
        if (v10)
        {
          id v11 = [v10 entry];

          if (v11) {
            goto LABEL_12;
          }
        }
        else
        {
        }
LABEL_5:
        ++v5;
        if (v8 == v4) {
          goto LABEL_21;
        }
      }

LABEL_12:
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      goto LABEL_5;
    }
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1001D44B0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v32 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init(uuidString:)();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10001457C((uint64_t)v12, &qword_100800950);
    URL.init(string:)();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_10001457C((uint64_t)v6, (uint64_t *)&unk_100800A60);
      return 0;
    }
    uint64_t v20 = v32;
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v32, v6, v7);
    sub_100010218(&qword_100802740);
    unint64_t v21 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1006D6280;
    uint64_t v16 = (char *)(v22 + v21);
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v16, v20, v7);
    id v23 = a3;
    unint64_t v24 = sub_1000698E4(v22, v23);
    unint64_t v25 = (unint64_t)sub_1001D42C8(v24, v23);
    swift_bridgeObjectRelease();

    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    if (v25 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v13)
      {
LABEL_7:
        if ((v25 & 0xC000000000000001) != 0)
        {
          id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          goto LABEL_10;
        }
        if (*(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v26 = *(id *)(v25 + 32);
LABEL_10:
          id v17 = v26;
          swift_bridgeObjectRelease();
LABEL_19:
          (*(void (**)(char *, uint64_t))(v8 + 8))(v20, v7);
          return (uint64_t)v17;
        }
        __break(1u);
        goto LABEL_26;
      }
    }
    swift_bridgeObjectRelease();
    id v17 = 0;
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  sub_100010218((uint64_t *)&unk_10080A130);
  unint64_t v18 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1006D6280;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 16))(v19 + v18, v16, v13);
  unint64_t v27 = sub_10057AD94(v19);
  swift_setDeallocating();
  swift_arrayDestroy();
  uint64_t result = swift_deallocClassInstance();
  if (!(v27 >> 62))
  {
    if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_13;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    id v17 = 0;
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v30) {
    goto LABEL_21;
  }
LABEL_13:
  if ((v27 & 0xC000000000000001) != 0)
  {
LABEL_26:
    id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_16;
  }
  if (*(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v29 = *(id *)(v27 + 32);
LABEL_16:
    id v17 = v29;
    swift_bridgeObjectRelease();
LABEL_22:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    return (uint64_t)v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1001D4BD0()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001D4C10(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_10005BB6C(a1, v4, v5, v6);
}

uint64_t sub_1001D4CC4(uint64_t *a1)
{
  return sub_1001CF8B4(a1, *(void *)(v1 + 16)) & 1;
}

id sub_1001D4CE4()
{
  return sub_10000A120(*(char **)(v0 + 16));
}

uint64_t sub_1001D4CEC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001D4CFC()
{
  return swift_release();
}

uint64_t sub_1001D4D04()
{
  return swift_deallocObject();
}

uint64_t sub_1001D4D3C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1001D4D74()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1001D4DB4()
{
  sub_1001D0074(*(void *)(v0 + 16), *(void **)(v0 + 24), *(unsigned char *)(v0 + 32));
}

uint64_t sub_1001D4DC0()
{
  swift_release();

  return swift_deallocObject();
}

void *sub_1001D4DF8(uint64_t a1, double (*a2)(double, double), uint64_t a3, uint64_t a4)
{
  uint64_t result = *(void **)(v4 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  if (result)
  {
    id v6 = [result visibleCells];
    sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
    unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v7 >> 62) {
      goto LABEL_14;
    }
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (; v8; uint64_t v8 = _CocoaArrayWrapper.endIndex.getter())
    {
      unint64_t v25 = v7 & 0xC000000000000001;
      uint64_t v9 = 4;
      unint64_t v21 = v7;
      while (1)
      {
        id v10 = v25 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v7 + 8 * v9);
        uint64_t v11 = v10;
        if (__OFADD__(v9 - 4, 1)) {
          break;
        }
        type metadata accessor for JournalEntryCollectionViewCell();
        uint64_t v12 = swift_dynamicCastClass();
        if (v12)
        {
          uint64_t v13 = v8;
          uint64_t v14 = *(void **)(v12 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView);
          uint64_t v15 = self;
          uint64_t v16 = swift_allocObject();
          *(void *)(v16 + 16) = v14;
          uint64_t v30 = a2;
          uint64_t v31 = v16;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v27 = 1107296256;
          unint64_t v28 = sub_10017D530;
          uint64_t v29 = a3;
          id v17 = _Block_copy(&aBlock);
          unint64_t v18 = v14;
          swift_release();
          uint64_t v30 = AudioRecordingActivityState.hash(into:);
          uint64_t v31 = 0;
          long long aBlock = _NSConcreteStackBlock;
          uint64_t v27 = 1107296256;
          unint64_t v28 = sub_1001C7318;
          uint64_t v29 = a4;
          uint64_t v19 = _Block_copy(&aBlock);
          swift_release();
          [v15 animateWithDuration:4 delay:v17 options:v19 animations:0.3 completion:0.0];
          _Block_release(v19);
          _Block_release(v17);
          uint64_t v20 = *(void **)&v18[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_contentScrollView];
          uint64_t v8 = v13;
          unint64_t v7 = v21;
          [v20 setScrollEnabled:1];
        }

        if (v9 - 3 == v8) {
          return (void *)swift_bridgeObjectRelease_n();
        }
        ++v9;
      }
      __break(1u);
LABEL_14:
      swift_bridgeObjectRetain();
    }
    return (void *)swift_bridgeObjectRelease_n();
  }
  return result;
}

uint64_t sub_1001D50C0()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  if (!v1) {
    return 0;
  }
  id v2 = [v1 visibleCells];
  sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62) {
    goto LABEL_21;
  }
  uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (v3 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(v3 + 8 * v5);
      unint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      type metadata accessor for JournalEntryCollectionViewCell();
      uint64_t v9 = swift_dynamicCastClass();
      if (v9)
      {
        id v10 = *(char **)(v9 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView);
        uint64_t v11 = *(void **)&v10[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_contentScrollView];
        uint64_t v12 = v10;
        [v11 contentOffset];
        double v14 = v13;
        [*(id *)&v12[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_leftButtonsStackView] frame];
        double v16 = v15;
        if (qword_1007F72D8 != -1) {
          swift_once();
        }
        double v17 = *(double *)&qword_10083D8A0;

        if (vabdd_f64(v14, v16 + v17) > 1.0)
        {
          uint64_t v4 = 1;
          goto LABEL_18;
        }
      }
      else
      {
      }
      ++v5;
      if (v8 == v4)
      {
        uint64_t v4 = 0;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_21:
    swift_bridgeObjectRetain();
  }
LABEL_18:
  swift_bridgeObjectRelease_n();
  return v4;
}

void sub_1001D52D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
}

uint64_t sub_1001D52E0(void *a1, uint64_t a2, uint64_t *a3)
{
  return sub_1001CDF34(a1, a2, a3);
}

void sub_1001D52E8(char a1)
{
}

uint64_t sub_1001D52F0()
{
  swift_release();

  return swift_deallocObject();
}

id sub_1001D5330(uint64_t a1, uint64_t a2, char *a3)
{
  return sub_10062FC24(a1, a2, a3, *(void **)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32));
}

uint64_t sub_1001D533C()
{
  uint64_t v15 = sub_100010218((uint64_t *)&unk_1008026A0);
  uint64_t v1 = *(void *)(v15 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v14 = sub_100010218(&qword_1007FAA60);
  uint64_t v3 = *(void *)(v14 - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (v13 + v2 + v4) & ~v4;
  uint64_t v6 = *(void *)(v3 + 64);
  uint64_t v7 = sub_100010218(&qword_1008026B0);
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (v5 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v10 = (*(void *)(v8 + 64) + v4 + v9) & ~v4;
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v13, v15);
  uint64_t v11 = *(void (**)(unint64_t, uint64_t))(v3 + 8);
  v11(v0 + v5, v14);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);
  v11(v0 + v10, v14);

  return swift_deallocObject();
}

uint64_t sub_1001D5558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100010218((uint64_t *)&unk_1008026A0);
  sub_100010218(&qword_1007FAA60);
  sub_100010218(&qword_1008026B0);

  return sub_1001CE998(a1, a2, a3);
}

uint64_t sub_1001D56F0(void *a1)
{
  return sub_1001CEC00(a1);
}

uint64_t sub_1001D56F8()
{
  uint64_t v1 = sub_100010218(&qword_100802698);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1001D578C()
{
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
}

uint64_t sub_1001D5824@<X0>(uint64_t a1@<X8>)
{
  return sub_1001CE29C(*(void *)(v1 + 16), a1);
}

unint64_t sub_1001D582C()
{
  unint64_t result = qword_1008026D8;
  if (!qword_1008026D8)
  {
    sub_100014440(&qword_1008026D0);
    sub_100014440(&qword_1008026E0);
    sub_100014488(&qword_1008026E8, &qword_1008026E0);
    swift_getOpaqueTypeConformance2();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008026D8);
  }
  return result;
}

unint64_t sub_1001D591C()
{
  unint64_t result = qword_1008026F0;
  if (!qword_1008026F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008026F0);
  }
  return result;
}

id sub_1001D5970()
{
  return sub_1001CCBD8();
}

uint64_t sub_1001D5978(uint64_t a1, unint64_t a2)
{
  if (a2 != 4) {
    return sub_1001D5988(a1, a2);
  }
  return a1;
}

uint64_t sub_1001D5988(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001D599C()
{
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1001D59EC()
{
  return sub_1001D03EC(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(uint64_t (**)(void))(v0 + 40), *(void **)(v0 + 48));
}

uint64_t sub_1001D59FC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001D5A44()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

void sub_1001D5A8C()
{
  sub_1001CFE64(*(unsigned char *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48));
}

uint64_t sub_1001D5A9C()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1001D5B68()
{
  type metadata accessor for IndexPath();
  uint64_t v1 = *(void **)(v0 + 16);
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  [v1 scrollToItemAtIndexPath:isa atScrollPosition:2 animated:0];
}

uint64_t sub_1001D5C04()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1001D5CE0(char a1)
{
  type metadata accessor for IndexPath();
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  unint64_t v5 = (void *)v1[4];

  sub_1001CF16C(a1, v3, v4, v5);
}

void sub_1001D5D5C()
{
  sub_1001CEF24(*(void *)(v0 + 16), *(void *)(v0 + 24), *(unsigned char *)(v0 + 32), *(unsigned char *)(v0 + 33));
}

void sub_1001D5D70(char a1)
{
  sub_1001CF0EC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(unsigned char *)(v1 + 33));
}

uint64_t sub_1001D5D84()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_1001D5DC4()
{
}

uint64_t *sub_1001D5E94(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1001D5EE8(a1, a2, a3);
}

uint64_t *sub_1001D5EE8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v6 = *v3;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(*v3 + 80) - 8) + 32))((uint64_t)v3 + *(void *)(*v3 + 96), a1);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v6 + 88) - 8) + 32))((uint64_t)v3 + *(void *)(*v3 + 104), a2);
  *((unsigned char *)v3 + *(void *)(*v3 + 112)) = a3;
  return v3;
}

uint64_t *sub_1001D5FE4()
{
  uint64_t v1 = *v0;
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*v0 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 96));
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 104));
  return v0;
}

uint64_t sub_1001D60B0()
{
  sub_1001D5FE4();

  return swift_deallocClassInstance();
}

uint64_t LRUCache.__allocating_init(maxSize:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  LRUCache.init(maxSize:)(a1);
  return v2;
}

void *LRUCache.init(maxSize:)(uint64_t a1)
{
  v1[3] = 0;
  type metadata accessor for LRUCacheNode();
  type metadata accessor for DoublyLinkedList();
  v1[5] = DoublyLinkedList.__allocating_init()();
  v1[2] = a1;
  type metadata accessor for Node();
  v1[4] = Dictionary.init(minimumCapacity:)();
  return v1;
}

uint64_t type metadata accessor for LRUCacheNode()
{
  return sub_100073C20();
}

uint64_t LRUCache.subscript.getter@<X0>(uint64_t a1@<X8>)
{
  LRUCache.refreshIfNeeded(at:)();

  return LRUCache.value(for:)(a1);
}

uint64_t LRUCache.refreshIfNeeded(at:)()
{
  swift_beginAccess();
  type metadata accessor for LRUCacheNode();
  type metadata accessor for Node();
  Dictionary.subscript.getter();
  if (!v1) {
    return swift_endAccess();
  }
  swift_endAccess();
  swift_beginAccess();
  if (*(unsigned char *)(v1[2] + *(void *)(*(void *)v1[2] + 112)))
  {
    swift_retain();
    DoublyLinkedList.remove(node:)(v1);
    swift_release();
    swift_retain();
    DoublyLinkedList.prepend(node:)((uint64_t)v1);
    swift_release();
  }
  return swift_release();
}

uint64_t LRUCache.value(for:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  swift_beginAccess();
  uint64_t v4 = *(void *)(v3 + 88);
  type metadata accessor for LRUCacheNode();
  type metadata accessor for Node();
  Dictionary.subscript.getter();
  swift_endAccess();
  if (!v8) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(a1, 1, 1, v4);
  }
  swift_beginAccess();
  uint64_t v5 = *(void *)(v8 + 16);
  swift_retain();
  swift_release();
  uint64_t v6 = *(void *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, v5 + *(void *)(*(void *)v5 + 104), v4);
  swift_release();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v4);
}

uint64_t LRUCache.cache(value:for:expires:)(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v37 = a3;
  uint64_t v36 = a1;
  uint64_t v6 = (void *)*v3;
  uint64_t v7 = v6[11];
  uint64_t v34 = *(void *)(v7 - 8);
  __chkstk_darwin(a1);
  unint64_t v9 = (char *)&v33 - v8;
  uint64_t v10 = v6[10];
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v33 - v13;
  uint64_t v38 = v4 + 4;
  swift_beginAccess();
  uint64_t v35 = v7;
  type metadata accessor for LRUCacheNode();
  uint64_t v15 = a2;
  type metadata accessor for Node();
  uint64_t v33 = v6[12];
  Dictionary.subscript.getter();
  double v16 = v39;
  if (v39)
  {
    swift_endAccess();
    if ((Node.isLinked.getter() & 1) != 0
      || (uint64_t v22 = v4[5], swift_beginAccess(), (v23 = *(uint64_t **)(v22 + 16)) != 0) && v23 == v16)
    {
      swift_retain();
      DoublyLinkedList.remove(node:)(v16);
      swift_release();
      uint64_t result = swift_release();
      uint64_t v18 = v4[3];
      BOOL v19 = __OFSUB__(v18, 1);
      uint64_t v20 = v18 - 1;
      if (v19) {
        goto LABEL_17;
      }
      uint64_t v21 = (uint64_t)v9;
      v4[3] = v20;
    }
    else
    {
      uint64_t v21 = (uint64_t)v9;
      swift_release();
    }
  }
  else
  {
    uint64_t v21 = (uint64_t)v9;
    swift_endAccess();
  }
  unint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v24(v14, a2, v10);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 16))(v21, v36, v35);
  swift_allocObject();
  char v25 = v37;
  uint64_t v40 = sub_1001D5EE8((uint64_t)v14, v21, v37 & 1);
  uint64_t v26 = Node.__allocating_init(value:)((uint64_t)&v40);
  v24(v14, v15, v10);
  unint64_t v39 = (uint64_t *)v26;
  swift_beginAccess();
  type metadata accessor for Dictionary();
  swift_retain();
  swift_retain();
  Dictionary.subscript.setter();
  swift_endAccess();
  if ((v25 & 1) == 0) {
    goto LABEL_15;
  }
  swift_retain();
  DoublyLinkedList.prepend(node:)(v26);
  uint64_t result = swift_release();
  uint64_t v27 = v4[3];
  uint64_t v28 = v27 + 1;
  if (!__OFADD__(v27, 1))
  {
    v4[3] = v28;
    uint64_t v29 = v4[5];
    swift_beginAccess();
    uint64_t v30 = *(uint64_t **)(v29 + 24);
    if (v30 && v4[2] < v28)
    {
      swift_beginAccess();
      swift_beginAccess();
      swift_retain();
      Dictionary.removeValue(forKey:)();
      swift_endAccess();
      swift_release();
      swift_retain();
      DoublyLinkedList.remove(node:)(v30);
      swift_release();
      swift_release();
      swift_release();
      uint64_t result = swift_release();
      uint64_t v31 = v4[3];
      BOOL v19 = __OFSUB__(v31, 1);
      uint64_t v32 = v31 - 1;
      if (!v19)
      {
        v4[3] = v32;
        return result;
      }
      goto LABEL_18;
    }
LABEL_15:
    swift_release();
    return swift_release();
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

Swift::Void __swiftcall LRUCache.clear(percentage:)(Swift::Double percentage)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v38 = type metadata accessor for Optional();
  uint64_t v5 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v7 = (char *)&v31 - v6;
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v31 - v10;
  if (percentage >= 1.0)
  {
    swift_beginAccess();
    type metadata accessor for LRUCacheNode();
    type metadata accessor for Node();
    type metadata accessor for Dictionary();
    Dictionary.removeAll(keepingCapacity:)(1);
    swift_endAccess();
    swift_retain();
    DoublyLinkedList.removeAll()();
    swift_release();
    v1[3] = 0;
  }
  else
  {
    uint64_t v33 = v1;
    if (percentage > 0.0)
    {
      uint64_t v36 = v9;
      uint64_t v12 = v33 + 4;
      swift_beginAccess();
      type metadata accessor for LRUCacheNode();
      uint64_t v13 = type metadata accessor for Node();
      uint64_t v14 = *(void *)(v3 + 96);
      swift_bridgeObjectRetain();
      uint64_t v39 = v14;
      uint64_t v40 = v13;
      uint64_t v15 = Dictionary.count.getter();
      swift_bridgeObjectRelease();
      double v16 = floor((double)v15 * percentage);
      if ((~*(void *)&v16 & 0x7FF0000000000000) == 0)
      {
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
      if (v16 <= -9.22337204e18)
      {
LABEL_24:
        __break(1u);
        goto LABEL_25;
      }
      if (v16 >= 9.22337204e18)
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      uint64_t v17 = (uint64_t)v16;
      if ((uint64_t)v16 < 0)
      {
LABEL_26:
        __break(1u);
        return;
      }
      uint64_t v18 = v36;
      if (v17)
      {
        uint64_t v19 = 0;
        uint64_t v20 = v5;
        uint64_t v21 = (unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48);
        uint64_t v36 = (uint64_t)v16;
        int v37 = (void (**)(char *, char *, uint64_t))(v18 + 32);
        uint64_t v22 = (void (**)(char *, uint64_t))(v18 + 8);
        id v23 = (void (**)(char *, uint64_t))(v20 + 8);
        uint64_t v32 = (uint64_t)v16;
        while (v19 != v17)
        {
          uint64_t v35 = v19;
          unint64_t v24 = v33;
          uint64_t v25 = v33[5];
          swift_beginAccess();
          uint64_t v26 = *(uint64_t **)(v25 + 24);
          if (v26)
          {
            swift_beginAccess();
            uint64_t v34 = v26[2] + *(void *)(*(void *)v26[2] + 96);
            swift_beginAccess();
            type metadata accessor for Dictionary();
            swift_retain();
            Dictionary.removeValue(forKey:)();
            swift_endAccess();
            swift_release();
            swift_retain();
            DoublyLinkedList.remove(node:)(v26);
            swift_release();
            swift_release();
            uint64_t v27 = v24[3];
            BOOL v28 = __OFSUB__(v27, 1);
            uint64_t v29 = v27 - 1;
            if (v28) {
              goto LABEL_22;
            }
            _OWORD v24[3] = v29;
          }
          else
          {
            type metadata accessor for Dictionary.Keys();
            uint64_t v30 = v36;
            do
            {
              uint64_t v41 = *v12;
              swift_getWitnessTable();
              Collection.first.getter();
              if ((*v21)(v7, 1, v4) == 1)
              {
                (*v23)(v7, v38);
              }
              else
              {
                (*v37)(v11, v7, v4);
                swift_beginAccess();
                type metadata accessor for Dictionary();
                Dictionary.removeValue(forKey:)();
                swift_endAccess();
                swift_release();
                (*v22)(v11, v4);
              }
              --v30;
            }
            while (v30);
          }
          uint64_t v19 = v35 + 1;
          --v36;
          uint64_t v17 = v32;
          if (v35 + 1 == v32) {
            return;
          }
        }
        __break(1u);
LABEL_22:
        __break(1u);
        goto LABEL_23;
      }
    }
  }
}

uint64_t LRUCache.deinit()
{
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t LRUCache.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1001D6FE0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_1001D70BC()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for LRUCache()
{
  return sub_100073C20();
}

uint64_t destroy for TickerView(uint64_t a1)
{
  _s7Journal19DynamicWaveformViewVwxx_0(a1);

  return swift_release();
}

uint64_t initializeWithCopy for TickerView(uint64_t a1, uint64_t a2)
{
  long long v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  return a1;
}

uint64_t *assignWithCopy for TickerView(uint64_t *a1, uint64_t *a2)
{
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for TickerView(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for TickerView(uint64_t a1, uint64_t a2)
{
  _s7Journal19DynamicWaveformViewVwxx_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TickerView(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TickerView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TickerView()
{
  return &type metadata for TickerView;
}

uint64_t sub_1001D7378()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_1001D7394()
{
  qword_100802850 = 0x4020000000000000;
}

void sub_1001D73A4()
{
  qword_100802858 = 0x4010000000000000;
}

void sub_1001D73B4()
{
  qword_100802860 = 0x3FF0000000000000;
}

void sub_1001D73C4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  sub_10002E0BC((void *)v0, v1);
  double v3 = ceil(((*(double (**)(uint64_t, uint64_t))(v2 + 24))(v1, v2) * *(double *)(v0 + 40) + *(double *)(v0 + 48))/ *(double *)(v0 + 56));
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (v3 >= 9.22337204e18) {
LABEL_7:
  }
    __break(1u);
}

void sub_1001D7478(uint64_t a1)
{
  sub_1001D73C4();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t v8 = v2;
    swift_getKeyPath();
    sub_1001D7E10(a1, (uint64_t)v6);
    double v3 = (_OWORD *)swift_allocObject();
    long long v4 = v6[3];
    v3[3] = v6[2];
    v3[4] = v4;
    v3[5] = v6[4];
    long long v5 = v6[1];
    v3[1] = v6[0];
    v3[2] = v5;
    sub_100010218(&qword_100801A78);
    sub_100010218(&qword_100802880);
    sub_1001B5294();
    sub_1001D7D70();
    ForEach<>.init(_:id:content:)();
  }
}

double sub_1001D757C@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  char v4 = (*a1 & 3) == 0;
  uint64_t v5 = static HorizontalAlignment.leading.getter();
  sub_1001D76B8(v4, v3, (uint64_t)&v21);
  uint64_t v6 = v21;
  char v7 = v22;
  uint64_t v8 = v23;
  char v9 = v24;
  long long v19 = v26;
  long long v20 = v25;
  long long v18 = v27;
  uint64_t v10 = v28;
  uint64_t v11 = v29;
  __int16 v12 = v30;
  char v33 = 0;
  char v32 = v22;
  char v31 = v24;
  static Alignment.leading.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v13 = v21;
  char v14 = v22;
  uint64_t v15 = v23;
  char v16 = v24;
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = 0;
  *(unsigned char *)(a2 + 16) = 0;
  *(void *)(a2 + 24) = v6;
  *(unsigned char *)(a2 + 32) = v7;
  *(void *)(a2 + 40) = v8;
  *(unsigned char *)(a2 + 48) = v9;
  *(_OWORD *)(a2 + 56) = v20;
  *(_OWORD *)(a2 + 72) = v19;
  *(_OWORD *)(a2 + 88) = v18;
  *(void *)(a2 + 104) = v10;
  *(void *)(a2 + 112) = v11;
  *(_WORD *)(a2 + 120) = v12;
  *(void *)(a2 + 128) = v13;
  *(unsigned char *)(a2 + 136) = v14;
  *(void *)(a2 + 144) = v15;
  *(unsigned char *)(a2 + 152) = v16;
  double result = *(double *)&v25;
  *(_OWORD *)(a2 + 160) = v25;
  return result;
}

uint64_t sub_1001D76B8@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for Duration.TimeFormatStyle.Pattern();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for Duration.TimeFormatStyle();
  __chkstk_darwin(v10);
  if (qword_1007F6B08 != -1) {
    swift_once();
  }
  if ((a1 & 1) == 0)
  {
    if (qword_1007F6B00 == -1) {
      goto LABEL_7;
    }
    goto LABEL_13;
  }
  if (qword_1007F6AF8 != -1) {
LABEL_13:
  }
    swift_once();
LABEL_7:
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  uint64_t v55 = v58;
  int v54 = v59;
  uint64_t v53 = v60;
  int v52 = v61;
  uint64_t v50 = v63;
  uint64_t v51 = v62;
  id v49 = self;
  id v11 = [v49 tertiaryLabelColor];
  uint64_t v12 = Color.init(_:)();
  uint64_t KeyPath = swift_getKeyPath();
  if (a1)
  {
    uint64_t v14 = -1000000000000000000;
    if (a2 >= -3) {
      uint64_t v14 = 0;
    }
    uint64_t v56 = 1000000000000000000 * (a2 / 4);
    uint64_t v57 = v14 + (((unint64_t)(a2 / 4) * (unsigned __int128)0xDE0B6B3A7640000uLL) >> 64);
    static Duration.TimeFormatStyle.Pattern.minuteSecond.getter();
    static FormatStyle<>.time(pattern:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    sub_1001D7F20((unint64_t *)&qword_1008019E0, (void (*)(uint64_t))&type metadata accessor for Duration.TimeFormatStyle);
    uint64_t v15 = Text.init<A>(_:format:)();
    uint64_t v17 = v16;
    char v19 = v18 & 1;
    static Font.caption.getter();
    uint64_t v20 = Text.font(_:)();
    uint64_t v22 = v21;
    uint64_t v47 = KeyPath;
    uint64_t v48 = v12;
    char v24 = v23;
    swift_release();
    sub_10002B8D0(v15, v17, v19);
    swift_bridgeObjectRelease();
    static Font.Weight.medium.getter();
    uint64_t v25 = Text.fontWeight(_:)();
    uint64_t v27 = v26;
    char v29 = v28 & 1;
    sub_10002B8D0(v20, v22, v24 & 1);
    swift_bridgeObjectRelease();
    uint64_t v30 = Text.monospacedDigit()();
    uint64_t v32 = v31;
    LOBYTE(v22) = v33 & 1;
    sub_10002B8D0(v25, v27, v29);
    swift_bridgeObjectRelease();
    id v34 = [v49 secondaryLabelColor];
    Color.init(_:)();
    uint64_t v35 = Text.foregroundColor(_:)();
    uint64_t v37 = v36;
    LOBYTE(v20) = v38;
    uint64_t v40 = v39;
    swift_release();
    uint64_t v41 = v20 & 1;
    uint64_t v42 = v30;
    uint64_t v43 = v32;
    uint64_t KeyPath = v47;
    uint64_t v12 = v48;
    sub_10002B8D0(v42, v43, v22);
    swift_bridgeObjectRelease();
    __int16 v44 = 1;
  }
  else
  {
    uint64_t v35 = 0;
    uint64_t v37 = 0;
    uint64_t v41 = 0;
    uint64_t v40 = 0;
    __int16 v44 = 0;
  }
  *(void *)a3 = v55;
  *(unsigned char *)(a3 + 8) = v54;
  *(void *)(a3 + 16) = v53;
  *(unsigned char *)(a3 + 24) = v52;
  uint64_t v45 = v50;
  *(void *)(a3 + 32) = v51;
  *(void *)(a3 + 40) = v45;
  *(void *)(a3 + 48) = KeyPath;
  *(void *)(a3 + 56) = v12;
  *(void *)(a3 + 64) = v35;
  *(void *)(a3 + 72) = v37;
  *(void *)(a3 + 80) = v41;
  *(void *)(a3 + 88) = v40;
  *(_WORD *)(a3 + 96) = v44;
  swift_retain();
  swift_retain();
  sub_1001D7E98(v35, v37, v41, v40);
  sub_1001D7EDC(v35, v37, v41, v40);
  swift_release();
  return swift_release();
}

uint64_t sub_1001D7BC8()
{
  uint64_t v0 = type metadata accessor for PinnedScrollableViews();
  __chkstk_darwin(v0);
  static VerticalAlignment.top.getter();
  sub_1001D7F20(&qword_1008023B0, (void (*)(uint64_t))&type metadata accessor for PinnedScrollableViews);
  dispatch thunk of OptionSet.init(rawValue:)();
  sub_100010218(&qword_100802868);
  sub_1001D7CFC();
  return LazyHStack.init(alignment:spacing:pinnedViews:content:)();
}

void sub_1001D7CF4()
{
  sub_1001D7478(*(void *)(v0 + 16));
}

unint64_t sub_1001D7CFC()
{
  unint64_t result = qword_100802870;
  if (!qword_100802870)
  {
    sub_100014440(&qword_100802868);
    sub_1001D7D70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802870);
  }
  return result;
}

unint64_t sub_1001D7D70()
{
  unint64_t result = qword_100802878;
  if (!qword_100802878)
  {
    sub_100014440(&qword_100802880);
    sub_100014488(&qword_100802888, &qword_100802890);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802878);
  }
  return result;
}

uint64_t sub_1001D7E10(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1001D7E48()
{
  _s7Journal19DynamicWaveformViewVwxx_0(v0 + 16);
  swift_release();

  return swift_deallocObject();
}

double sub_1001D7E88@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001D757C(a1, a2);
}

uint64_t sub_1001D7E98(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1000C04A4(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1001D7EDC(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_10002B8D0(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1001D7F20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001D7F68()
{
  return sub_100014488(&qword_100802898, &qword_1008028A0);
}

void sub_1001D7FA4()
{
  if (qword_1007F7270 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_10083D838;
  uint64_t v1 = self;
  id v2 = v0;
  id v3 = [v1 configurationWithFont:v2 scale:2];

  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [self systemImageNamed:v4 withConfiguration:v3];

  qword_10083D0C8 = (uint64_t)v5;
}

void sub_1001D8150()
{
  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for CanvasDatePicker();
  [super viewDidLoad];
  id v1 = [v0 navigationController];
  if (v1)
  {
    id v2 = v1;
    id v3 = [v1 view];

    if (!v3) {
      goto LABEL_7;
    }
    id v4 = [self tertiarySystemGroupedBackgroundColor];
    [v3 setBackgroundColor:v4];
  }
  id v5 = [v0 view];
  if (v5)
  {
    uint64_t v6 = v5;
    [v5 setAccessibilityViewIsModal:1];

    sub_1001D8544();
    return;
  }
  __break(1u);
LABEL_7:
  __break(1u);
}

id sub_1001D8544()
{
  id v1 = v0;
  id v2 = [objc_allocWithZone((Class)UIView) init];
  id v188 = self;
  id v3 = [v188 effectWithStyle:8];
  id v4 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v3];
  uint64_t v5 = self;
  id v6 = v4;
  id v192 = (id)v5;
  objc_super v7 = (void *)v5;
  uint64_t v8 = v2;
  id v9 = [v7 clearColor];
  [v6 setBackgroundColor:v9];

  id v10 = v6;
  [v2 bounds];
  [v10 setFrame:];

  [v10 setAutoresizingMask:18];
  [v10 setUserInteractionEnabled:0];
  [v2 insertSubview:v10 atIndex:0];

  id v11 = [v2 layer];
  [v11 setCornerRadius:14.0];

  [v2 setClipsToBounds:1];
  uint64_t v190 = v1;
  id result = [v1 view];
  if (!result)
  {
    __break(1u);
LABEL_63:
    __break(1u);
    return result;
  }
  uint64_t v13 = result;
  [result addSubview:v2];

  id v14 = [v2 superview];
  if (v14)
  {
    uint64_t v15 = v14;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v16 = [v2 leadingAnchor];
    id v17 = [v15 leadingAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    [v18 setConstant:8.0];
    id v19 = v18;
    [v19 setActive:1];
  }
  id v20 = [v2 superview];
  if (v20)
  {
    uint64_t v21 = v20;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v22 = [v2 trailingAnchor];
    id v23 = [v21 trailingAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    [v24 setConstant:-8.0];
    id v25 = v24;
    [v25 setActive:1];
  }
  id v26 = [v2 superview];
  if (v26)
  {
    uint64_t v27 = v26;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v28 = [v2 topAnchor];
    id v29 = [v27 topAnchor];
    id v30 = [v28 constraintEqualToAnchor:v29];

    [v30 setConstant:0.0];
    id v31 = v30;
    [v31 setActive:1];
  }
  id v32 = [objc_allocWithZone((Class)UIView) init];
  [v8 addSubview:v32];
  id v33 = [v32 superview];
  if (v33)
  {
    id v34 = v33;
    [v32 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v35 = [v32 leadingAnchor];
    id v36 = [v34 leadingAnchor];
    id v37 = [v35 constraintEqualToAnchor:v36];

    [v37 setConstant:0.0];
    id v38 = v37;
    [v38 setActive:1];
  }
  id v39 = [v32 superview];
  if (v39)
  {
    uint64_t v40 = v39;
    [v32 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v41 = [v32 topAnchor];
    id v42 = [v40 topAnchor];
    id v43 = [v41 constraintEqualToAnchor:v42];

    [v43 setConstant:0.0];
    id v44 = v43;
    [v44 setActive:1];
  }
  id v45 = [v32 superview];
  if (v45)
  {
    long long v46 = v45;
    [v32 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v47 = [v32 trailingAnchor];
    id v48 = [v46 trailingAnchor];
    id v49 = [v47 constraintEqualToAnchor:v48];

    [v49 setConstant:0.0];
    id v50 = v49;
    [v50 setActive:1];
  }
  id v51 = [self sharedApplication];
  id v52 = [v51 preferredContentSizeCategory];

  LOBYTE(v51) = UIContentSizeCategory.isAccessibilityCategory.getter();
  id v53 = [objc_allocWithZone((Class)UIImageView) init];
  if (qword_1007F6B10 != -1) {
    swift_once();
  }
  [v53 setImage:qword_10083D0C8];
  id v54 = [v192 labelColor];
  [v53 setTintColor:v54];

  [v53 setContentMode:1];
  [v32 addSubview:v53];
  if (qword_1007F72F8 != -1) {
    swift_once();
  }
  id v191 = v8;
  double v55 = *(double *)&qword_10083D908;
  id v56 = [v53 superview];
  if (v56)
  {
    uint64_t v57 = v56;
    [v53 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v58 = [v53 leadingAnchor];
    id v59 = [v57 leadingAnchor];
    id v60 = [v58 constraintEqualToAnchor:v59];

    [v60 setConstant:v55];
    id v61 = v60;
    [v61 setActive:1];
  }
  id v62 = [v53 superview];
  if (v62)
  {
    uint64_t v63 = v62;
    [v53 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v64 = [v53 centerYAnchor];
    id v65 = [v63 centerYAnchor];
    id v66 = [v64 constraintEqualToAnchor:v65];

    [v66 setConstant:0.0];
    id v67 = v66;
    [v67 setActive:1];
  }
  [v53 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v68 = [v53 heightAnchor];
  id v69 = [v53 widthAnchor];
  id v70 = [v68 constraintEqualToAnchor:v69 multiplier:1.0];

  [v70 setActive:1];
  id v71 = [objc_allocWithZone((Class)UILabel) init];
  if (qword_1007F74F8 != -1) {
    swift_once();
  }
  id v189 = v53;
  NSString v72 = String._bridgeToObjectiveC()();
  [v71 setText:v72];

  if (qword_1007F7278 != -1) {
    swift_once();
  }
  [v71 setFont:qword_10083D840];
  [v71 setAdjustsFontSizeToFitWidth:1];
  [v71 setAdjustsFontForContentSizeCategory:1];
  [v32 addSubview:v71];
  [v71 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v73 = [v71 leadingAnchor];
  id v74 = [v53 trailingAnchor];
  id v75 = [v73 constraintEqualToAnchor:v74];

  [v75 setConstant:8.0];
  [v75 setActive:1];

  id v76 = [v71 superview];
  if (v76)
  {
    uint64_t v77 = v76;
    [v71 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v78 = [v71 trailingAnchor];
    id v79 = [v77 trailingAnchor];
    id v80 = [v78 constraintLessThanOrEqualToAnchor:v79];

    [v80 setConstant:-8.0];
    id v81 = v80;
    [v81 setActive:1];
  }
  [v71 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v82 = [v71 centerYAnchor];
  id v83 = [v53 centerYAnchor];
  id v84 = [v82 constraintEqualToAnchor:v83];

  [v84 setActive:1];
  id v85 = [v71 superview];
  if (v85)
  {
    double v86 = v85;
    [v71 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v87 = [v71 trailingAnchor];
    id v88 = [v86 trailingAnchor];
    id v89 = [v87 constraintEqualToAnchor:v88];

    [v89 setConstant:-8.0];
    id v90 = v89;
    [v90 setActive:1];
  }
  uint64_t v91 = *(void **)&v190[OBJC_IVAR____TtC7Journal16CanvasDatePicker_datePicker];
  [v91 setPreferredDatePickerStyle:3];
  [v91 setDatePickerMode:1];
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  [v91 setDate:isa animated:1];

  id v93 = [v192 systemIndigoColor];
  [v91 setTintColor:v93];

  [v8 addSubview:v91];
  [v91 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v94 = [v91 topAnchor];
  id v95 = [v32 bottomAnchor];
  id v96 = [v94 constraintEqualToAnchor:v95];

  [v96 setConstant:0.0];
  [v96 setActive:1];

  id v97 = [v91 superview];
  if (v97)
  {
    uint64_t v98 = v97;
    [v91 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v99 = [v91 leadingAnchor];
    id v100 = [v98 leadingAnchor];
    id v101 = [v99 constraintEqualToAnchor:v100];

    [v101 setConstant:8.0];
    id v102 = v101;
    [v102 setActive:1];
  }
  id v103 = [v91 superview];
  if (v103)
  {
    uint64_t v104 = v103;
    [v91 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v105 = [v91 trailingAnchor];
    id v106 = [v104 trailingAnchor];
    id v107 = [v105 constraintEqualToAnchor:v106];

    [v107 setConstant:-8.0];
    id v108 = v107;
    [v108 setActive:1];
  }
  id v109 = [objc_allocWithZone((Class)UIView) init];
  id v110 = [v192 lightGrayColor];
  id v111 = [v110 colorWithAlphaComponent:0.5];

  [v109 setBackgroundColor:v111];
  [v8 addSubview:v109];
  id v112 = [v109 superview];
  uint64_t v113 = &stru_1007D7000;
  if (v112)
  {
    uint64_t v114 = v112;
    [v109 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v115 = [v109 leadingAnchor];
    id v116 = [v114 leadingAnchor];
    id v117 = [v115 constraintEqualToAnchor:v116];

    uint64_t v113 = &stru_1007D7000;
    [v117 setConstant:0.0];
    id v118 = v117;
    [v118 setActive:1];
  }
  id v119 = [v109 superview];
  if (v119)
  {
    uint64_t v120 = v119;
    [v109 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v121 = [v109 trailingAnchor];
    id v122 = [v120 trailingAnchor];
    id v123 = [v121 constraintEqualToAnchor:v122];

    [v123 setConstant:0.0];
    id v124 = v123;
    uint64_t v113 = &stru_1007D7000;
    id v125 = v124;
    [v124 setActive:1];
  }
  [v109 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v126 = [v109 heightAnchor];
  id v127 = [v126 constraintEqualToConstant:0.5];

  [v127 v113[90].name:1];
  [v109 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v128 = [v109 topAnchor];
  id v129 = [v91 bottomAnchor];
  id v130 = [v128 constraintEqualToAnchor:v129];

  [v130 setConstant:0.0];
  [v130 v113[90].name:1];

  id v131 = [objc_allocWithZone((Class)UIButton) init];
  id v132 = [v192 systemIndigoColor];
  [v131 setTitleColor:v132 forState:0];

  id v133 = [v131 titleLabel];
  if (v133)
  {
    uint64_t v134 = v133;
    if (qword_1007F72C8 != -1) {
      swift_once();
    }
    [v134 setFont:qword_10083D890];
  }
  if (qword_1007F7480 != -1) {
    swift_once();
  }
  NSString v135 = String._bridgeToObjectiveC()();
  [v131 setTitle:v135 forState:0];

  id v136 = v131;
  NSString v137 = String._bridgeToObjectiveC()();
  [v136 setAccessibilityIdentifier:v137];

  [v136 addTarget:v190 action:"doneClickedWithSender:" forControlEvents:64];
  [v191 addSubview:v136];
  [v136 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v138 = [v136 topAnchor];
  id v139 = [v109 bottomAnchor];
  id v140 = [v138 constraintEqualToAnchor:v139];

  [v140 setConstant:0.0];
  [v140 setActive:1];

  id v141 = [v136 superview];
  if (v141)
  {
    uint64_t v142 = v141;
    [v136 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v143 = [v136 leadingAnchor];
    id v144 = [v142 leadingAnchor];
    id v145 = [v143 constraintEqualToAnchor:v144];

    [v145 setConstant:0.0];
    id v146 = v145;
    [v146 setActive:1];
  }
  id v147 = [v136 superview];
  if (v147)
  {
    char v148 = v147;
    [v136 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v149 = [v136 trailingAnchor];
    id v150 = [v148 trailingAnchor];
    id v151 = [v149 constraintEqualToAnchor:v150];

    [v151 setConstant:0.0];
    id v152 = v151;
    [v152 setActive:1];
  }
  id v153 = [v136 heightAnchor];
  id v154 = [v32 heightAnchor];
  id v155 = [v153 constraintEqualToAnchor:v154];

  [v155 setActive:1];
  id v156 = [objc_allocWithZone((Class)UIView) init];
  id v157 = [v188 effectWithStyle:8];
  id v158 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v157];
  id v159 = [v192 clearColor];
  [v158 setBackgroundColor:v159];

  id v160 = v158;
  [v156 bounds];
  [v160 setFrame:];

  [v160 setAutoresizingMask:18];
  [v160 setUserInteractionEnabled:0];
  [v156 insertSubview:v160 atIndex:0];

  id v161 = [v156 layer];
  [v161 setCornerRadius:14.0];

  [v156 setClipsToBounds:1];
  id result = [v190 view];
  if (!result) {
    goto LABEL_63;
  }
  uint64_t v162 = result;
  [result addSubview:v156];

  [v156 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v163 = [v156 topAnchor];
  id v164 = [v191 bottomAnchor];
  id v165 = [v163 constraintEqualToAnchor:v164];

  [v165 setConstant:8.0];
  [v165 setActive:1];

  id v166 = [v156 superview];
  if (v166)
  {
    long long v167 = v166;
    [v156 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v168 = [v156 leadingAnchor];
    id v169 = [v167 leadingAnchor];
    id v170 = [v168 constraintEqualToAnchor:v169];

    [v170 setConstant:8.0];
    id v171 = v170;
    [v171 setActive:1];
  }
  id v172 = [v156 superview];
  if (v172)
  {
    uint64_t v173 = v172;
    [v156 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v174 = [v156 trailingAnchor];
    id v175 = [v173 trailingAnchor];
    id v176 = [v174 constraintEqualToAnchor:v175];

    [v176 setConstant:-8.0];
    id v177 = v176;
    [v177 setActive:1];
  }
  id v178 = [v156 heightAnchor];
  id v179 = [v32 heightAnchor];
  id v180 = [v178 constraintEqualToAnchor:v179];

  [v180 setActive:1];
  id v181 = [objc_allocWithZone((Class)UIButton) init];
  id v182 = [v192 systemIndigoColor];
  [v181 setTitleColor:v182 forState:0];

  id v183 = [v181 titleLabel];
  if (v183)
  {
    uint64_t v184 = v183;
    if (qword_1007F72C8 != -1) {
      swift_once();
    }
    [v184 setFont:qword_10083D890];
  }
  if (qword_1007F7470 != -1) {
    swift_once();
  }
  NSString v185 = String._bridgeToObjectiveC()();
  [v181 setTitle:v185 forState:0];

  id v186 = v181;
  NSString v187 = String._bridgeToObjectiveC()();
  [v186 setAccessibilityIdentifier:v187];

  [v186 addTarget:v190 action:"cancelClickedWithSender:" forControlEvents:64];
  [v156 addSubview:v186];
  sub_1001DCF60(0.0);

  return (id)swift_bridgeObjectRelease();
}

id sub_1001DA33C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasDatePicker();
  return [super dealloc];
}

uint64_t sub_1001DA404()
{
  return type metadata accessor for CanvasDatePicker();
}

uint64_t type metadata accessor for CanvasDatePicker()
{
  uint64_t result = qword_1008028E0;
  if (!qword_1008028E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1001DA458()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1001DA500(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FABA8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001DA560()
{
  uint64_t v1 = sub_100010218(&qword_1007FABA8);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC7Journal16CanvasDatePicker_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = sub_100010218((uint64_t *)&unk_100804070);
    uint64_t v9 = *(int *)(v8 + 48);
    id v10 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v0
                                                                + OBJC_IVAR____TtC7Journal16CanvasDatePicker_datePicker), "date"));
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    v3[v9] = 3;
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 0, 1, v8);
    sub_100062EC0((uint64_t)v3, ObjectType, v6);
    swift_unknownObjectRelease();
    return sub_1001DA500((uint64_t)v3);
  }
  return result;
}

uint64_t sub_1001DA6B0(char a1, char a2)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v5 - 8);
  objc_super v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = &protocol witness table for MainActor;
  *(void *)(v11 + 32) = v9;
  *(unsigned char *)(v11 + 40) = a2;
  *(unsigned char *)(v11 + 41) = a1;
  *(void *)(v11 + 48) = ObjectType;
  swift_release();
  sub_100328A60((uint64_t)v7, (uint64_t)&unk_100802A08, v11);
  return swift_release();
}

id sub_1001DA824()
{
  id result = [self configurationWithPointSize:4 weight:3 scale:46.0];
  qword_10083D0D8 = (uint64_t)result;
  return result;
}

void sub_1001DA870()
{
  id v0 = [self preferredFontForTextStyle:UIFontTextStyleLargeTitle];
  id v1 = [self configurationWithFont:v0 scale:-1];

  qword_10083D0E0 = (uint64_t)v1;
}

id sub_1001DA8F4()
{
  if (qword_1007F71E8 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_10083D7B0;
  qword_10083D0E8 = qword_10083D7B0;

  return v0;
}

unint64_t sub_1001DA958(char a1)
{
  unint64_t result = 0x6F746F6870;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F65646976;
      break;
    case 2:
      unint64_t result = 0x636973756DLL;
      break;
    case 3:
      unint64_t result = 0x7374736163646F70;
      break;
    case 4:
      unint64_t result = 1802465122;
      break;
    case 5:
      unint64_t result = 0x6D726F6665766177;
      break;
    case 6:
      unint64_t result = 0xD000000000000012;
      break;
    case 7:
      unint64_t result = 0x722E657275676966;
      break;
    case 8:
      unint64_t result = 0x772E657275676966;
      break;
    case 9:
      unint64_t result = 0x6574756F72;
      break;
    case 10:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
      unint64_t result = 0xD000000000000011;
      break;
    case 12:
      unint64_t result = 0x6F6E2E636973756DLL;
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1001DAAE4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC7Journal23CanvasFallbackAssetView_symbolImageView;
  id v10 = objc_allocWithZone((Class)UIImageView);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];

  v31.receiver = v11;
  v31.super_class = (Class)type metadata accessor for CanvasFallbackAssetView();
  [super initWithFrame:a1, a2, a3, a4];
  [v12 setContentMode:2];
  uint64_t v13 = qword_1007F6B28;
  id v14 = (char *)v12;
  if (v13 != -1) {
    swift_once();
  }
  [v14 setBackgroundColor:qword_10083D0E8];

  uint64_t v15 = OBJC_IVAR____TtC7Journal23CanvasFallbackAssetView_symbolImageView;
  id v16 = *(void **)&v14[OBJC_IVAR____TtC7Journal23CanvasFallbackAssetView_symbolImageView];
  [v16 setContentMode:2];
  [v16 setTintColor:qword_10083D0E8];
  [v14 addSubview:v16];
  id v17 = v16;
  id v18 = [v17 superview];
  id v19 = &stru_1007D7000;
  if (v18)
  {
    id v20 = v18;
    [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v21 = [v17 centerYAnchor];
    id v22 = [v20 centerYAnchor];
    id v23 = [v21 constraintEqualToAnchor:v22];

    [v23 setConstant:0.0];
    if (v23)
    {
      id v23 = v23;
      [v23 setActive:1];

      id v20 = v23;
    }

    id v19 = &stru_1007D7000;
  }
  else
  {
    id v23 = 0;
  }

  id v24 = *(id *)&v14[v15];
  id v25 = [v24 superview];
  if (v25)
  {
    id v26 = v25;
    [v24 v19[96].name];
    id v27 = [v24 centerXAnchor];
    id v28 = [v26 centerXAnchor];
    id v29 = [v27 constraintEqualToAnchor:v28];

    [v29 setConstant:0.0];
    if (v29)
    {
      id v29 = v29;
      [v29 setActive:1];
    }
  }
  else
  {
    id v29 = 0;
    id v26 = v14;
  }

  return v14;
}

uint64_t sub_1001DAEE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, char a6)
{
  *(unsigned char *)(v6 + 121) = a6;
  *(unsigned char *)(v6 + 120) = a5;
  *(void *)(v6 + 40) = a4;
  type metadata accessor for MainActor();
  *(void *)(v6 + 48) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 56) = v8;
  *(void *)(v6 + 64) = v7;
  return _swift_task_switch(sub_1001DAF84, v8, v7);
}

uint64_t sub_1001DAF84()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 72) = Strong;
  if (Strong)
  {
    uint64_t v2 = Strong;
    if (((1 << *(unsigned char *)(v0 + 120)) & 0x1A) != 0)
    {
      uint64_t v3 = qword_1007F6B38;
      uint64_t v4 = &qword_1008028F8;
    }
    else
    {
      uint64_t v3 = qword_1007F6B30;
      uint64_t v4 = &qword_1008028F0;
    }
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v7 = *v4;
    *(void *)(v0 + 80) = v7;
    *(void *)(v0 + 88) = *(void *)(v2 + OBJC_IVAR____TtC7Journal23CanvasFallbackAssetView_symbolImageView);
    *(void *)(v0 + 96) = sub_1001DA958(*(unsigned char *)(v0 + 121));
    *(void *)(v0 + 104) = v8;
    swift_retain();
    return _swift_task_switch(sub_1001DB0EC, v7, 0);
  }
  else
  {
    swift_release();
    uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
    return v5();
  }
}

uint64_t sub_1001DB0EC()
{
  sub_1001DB1FC(v0[12], v0[13]);
  v0[14] = v1;
  swift_bridgeObjectRelease();
  uint64_t v2 = v0[7];
  uint64_t v3 = v0[8];
  return _swift_task_switch(sub_1001DB164, v2, v3);
}

uint64_t sub_1001DB164()
{
  uint64_t v1 = (void *)v0[14];
  uint64_t v2 = (void *)v0[11];
  uint64_t v3 = (void *)v0[9];
  swift_release();
  [v2 setImage:v1];

  swift_release();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_1001DB1FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (uint64_t *)(v2 + 120);
  swift_beginAccess();
  uint64_t v7 = *(void *)(v2 + 120);
  if (*(void *)(v7 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v8 = sub_10001B5D0(a1, a2);
    if (v9)
    {
      *(id *)(*(void *)(v7 + 56) + 8 * v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = *(void **)(v3 + 112);
  swift_bridgeObjectRetain();
  id v11 = v10;
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [self _systemImageNamed:v12 withConfiguration:v11];

  if (v13)
  {
    swift_beginAccess();
    swift_bridgeObjectRetain();
    id v14 = v13;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v16 = *v6;
    *uint64_t v6 = 0x8000000000000000;
    sub_100599300((uint64_t)v14, a1, a2, isUniquelyReferenced_nonNull_native);
    *uint64_t v6 = v16;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_endAccess();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1001DB39C()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1001DB3DC(uint64_t a1)
{
  return sub_1001DB434(a1, &qword_1007F6B18, (void **)&qword_10083D0D8, &qword_1008028F0);
}

uint64_t sub_1001DB408(uint64_t a1)
{
  return sub_1001DB434(a1, &qword_1007F6B20, (void **)&qword_10083D0E0, &qword_1008028F8);
}

uint64_t sub_1001DB434(uint64_t a1, void *a2, void **a3, uint64_t *a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v6 = *a3;
  type metadata accessor for CanvasFallbackAssetView.SymbolImageCache();
  uint64_t v7 = swift_allocObject();
  id v8 = v6;
  uint64_t result = swift_defaultActor_initialize();
  *(void *)(v7 + 112) = v8;
  *(void *)(v7 + 120) = &_swiftEmptyDictionarySingleton;
  *a4 = v7;
  return result;
}

id sub_1001DB4B8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasFallbackAssetView();
  return [super dealloc];
}

uint64_t type metadata accessor for CanvasFallbackAssetView()
{
  return self;
}

uint64_t type metadata accessor for CanvasFallbackAssetView.SymbolImageCache()
{
  return self;
}

uint64_t sub_1001DB544()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1001DB57C()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001DB5BC(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 41);
  char v8 = *(unsigned char *)(v1 + 40);
  char v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10002C194;
  return sub_1001DAEE4(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_1001DB698(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  _OWORD v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100807640);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_1001DB788, 0, 0);
}

uint64_t sub_1001DB788()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = sub_1001DBBB8(v1);
  uint64_t v4 = v3;
  v0[8] = v3;
  uint64_t v5 = sub_10008E7B4();
  unint64_t v7 = sub_1001DC648(v5, v6, 0xD000000000000029, (void *)0x800000010068F330, 0, 0);
  uint64_t v9 = v8;
  v0[9] = v8;
  swift_bridgeObjectRelease();
  unint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata);
  if (v10)
  {
    uint64_t v11 = v0[7];
    uint64_t v12 = v0[4];
    uint64_t v13 = v0[5];
    swift_retain();
    sub_100039278(v11);
    swift_release();
    int v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12);
    uint64_t v15 = v0[7];
    if (v14)
    {
      sub_1001DC500(v0[7]);
      uint64_t v16 = 0;
      unint64_t v10 = 0;
    }
    else
    {
      uint64_t v17 = v0[6];
      sub_100090BD0(v0[7], v17);
      sub_1001DC500(v15);
      uint64_t v16 = sub_10008ACF8();
      unint64_t v10 = v18;
      sub_100090B74(v17);
    }
  }
  else
  {
    uint64_t v16 = 0;
  }
  unint64_t v19 = sub_1001DC648(v16, v10, 0xD000000000000029, (void *)0x800000010068F360, 0, 0);
  v0[10] = v20;
  swift_bridgeObjectRelease();
  id v21 = (void *)swift_task_alloc();
  v0[11] = v21;
  *id v21 = v0;
  v21[1] = sub_1001DB994;
  uint64_t v22 = v0[2];
  return sub_1005E885C(v22, v2, v4, 0, 0, v7, v9, v19);
}

uint64_t sub_1001DB994(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(v6 + 96) = v2;
  swift_task_dealloc();
  if (v2)
  {
    return _swift_task_switch(sub_1001DBB24, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v7(a1, a2);
  }
}

uint64_t sub_1001DBB24()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001DBBB8(uint64_t a1)
{
  uint64_t v2 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_100807640);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata)) {
    return 0;
  }
  swift_retain();
  sub_100039278((uint64_t)v8);
  swift_release();
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2))
  {
    sub_100090BD0((uint64_t)v8, (uint64_t)v5);
    sub_1001DC500((uint64_t)v8);
    unint64_t v10 = (unint64_t)sub_10008B2E4();
    uint64_t result = sub_100090B74((uint64_t)v5);
    if (!v10) {
      return 0;
    }
    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t result = swift_bridgeObjectRelease();
      if (v16)
      {
LABEL_9:
        if ((v10 & 0xC000000000000001) != 0)
        {
          id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return result;
          }
          id v11 = *(id *)(v10 + 32);
        }
        uint64_t v12 = v11;
        swift_bridgeObjectRelease();
        id v13 = [objc_allocWithZone((Class)UIColor) initWithCGColor:v12];
        unint64_t v17 = 0;
        unint64_t v18 = 0xE000000000000000;
        _StringGuts.grow(_:)(20);
        swift_bridgeObjectRelease();
        unint64_t v17 = 0xD000000000000011;
        unint64_t v18 = 0x800000010068F3B0;
        v14._uint64_t countAndFlagsBits = sub_100256794();
        String.append(_:)(v14);
        swift_bridgeObjectRelease();
        v15._uint64_t countAndFlagsBits = 59;
        v15._unint64_t object = (void *)0xE100000000000000;
        String.append(_:)(v15);

        return v17;
      }
    }
    else if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1001DC500((uint64_t)v8);
  return 0;
}

uint64_t sub_1001DBE48(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1001DBEDC;
  return sub_1001DB698(a1);
}

uint64_t sub_1001DBEDC(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

double sub_1001DBFEC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_100807640);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata))
  {
    swift_retain();
    sub_100039278((uint64_t)v5);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      sub_10001ABC8((uint64_t)v5, (uint64_t)v10);
      uint64_t v11 = sub_10008AF84();
      uint64_t v13 = v12;
      uint64_t v14 = sub_10008B130();
      uint64_t v16 = v15;
      *(void *)(a1 + 24) = &_s6ResultVN;
      *(void *)(a1 + 32) = sub_1001DC560();
      *(void *)(a1 + 40) = sub_1001DC5B4();
      unint64_t v17 = (void *)swift_allocObject();
      *(void *)a1 = v17;
      v17[2] = v11;
      v17[3] = v13;
      v17[4] = v14;
      v17[5] = v16;
      sub_100090B74((uint64_t)v10);
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v5, 1, 1, v6, v8);
  }
  sub_1001DC500((uint64_t)v5);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_1001DC1D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v12[0] = a4;
  v12[1] = a5;
  uint64_t v7 = sub_100010218(&qword_100802A48);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_1001DCC74();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v14 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v5)
  {
    char v13 = 1;
    KeyedEncodingContainer.encode(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_1001DC34C(uint64_t a1)
{
  unint64_t result = sub_1001DC374();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1001DC374()
{
  unint64_t result = qword_100802A10;
  if (!qword_100802A10)
  {
    _s16StateOfMindAssetCMa(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802A10);
  }
  return result;
}

uint64_t sub_1001DC3CC()
{
  if (*v0) {
    return 0x746169636F737361;
  }
  else {
    return 0x736C6562616CLL;
  }
}

uint64_t sub_1001DC40C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1001DC968(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1001DC434(uint64_t a1)
{
  unint64_t v2 = sub_1001DCC74();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001DC470(uint64_t a1)
{
  unint64_t v2 = sub_1001DCC74();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001DC4AC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1001DCA6C(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1001DC4DC(void *a1)
{
  return sub_1001DC1D4(a1, *v1, v1[1], v1[2], v1[3]);
}

uint64_t sub_1001DC500(uint64_t a1)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_100807640);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001DC560()
{
  unint64_t result = qword_100802A28;
  if (!qword_100802A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802A28);
  }
  return result;
}

unint64_t sub_1001DC5B4()
{
  unint64_t result = qword_100802A30;
  if (!qword_100802A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802A30);
  }
  return result;
}

uint64_t sub_1001DC608()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_1001DC648(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, uint64_t a5, void *a6)
{
  if (!a2) {
    return 0;
  }
  uint64_t v8 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v8 = a1 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v9 = (void *)0xE000000000000000;
  if (!v8) {
    return 0;
  }
  _StringGuts.grow(_:)(39);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = a3;
  v14._unint64_t object = a4;
  String.append(_:)(v14);
  v15._uint64_t countAndFlagsBits = 0x3D656C7974732022;
  v15._unint64_t object = (void *)0xE900000000000022;
  String.append(_:)(v15);
  if (a6) {
    uint64_t v9 = a6;
  }
  else {
    a5 = 0;
  }
  swift_bridgeObjectRetain();
  v16._uint64_t countAndFlagsBits = a5;
  v16._unint64_t object = v9;
  String.append(_:)(v16);
  swift_bridgeObjectRelease();
  v17._uint64_t countAndFlagsBits = 15906;
  v17._unint64_t object = (void *)0xE200000000000000;
  String.append(_:)(v17);
  v18._uint64_t countAndFlagsBits = a1;
  v18._unint64_t object = (void *)a2;
  String.append(_:)(v18);
  v19._uint64_t countAndFlagsBits = 0x3E7669642F3CLL;
  v19._unint64_t object = (void *)0xE600000000000000;
  String.append(_:)(v19);
  return 0xD000000000000010;
}

uint64_t _s6ResultVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s6ResultVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s6ResultVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s6ResultVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6ResultVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s6ResultVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s6ResultVMa()
{
  return &_s6ResultVN;
}

uint64_t sub_1001DC968(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736C6562616CLL && a2 == 0xE600000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746169636F737361 && a2 == 0xEC000000736E6F69)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1001DCA6C(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_100802A38);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = a1[4];
  sub_10002E0BC(a1, a1[3]);
  sub_1001DCC74();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v1)
  {
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  else
  {
    char v11 = 0;
    uint64_t v7 = KeyedDecodingContainer.decode(_:forKey:)();
    char v10 = 1;
    swift_bridgeObjectRetain();
    KeyedDecodingContainer.decode(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    swift_bridgeObjectRetain();
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

unint64_t sub_1001DCC74()
{
  unint64_t result = qword_100802A40;
  if (!qword_100802A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802A40);
  }
  return result;
}

unsigned char *_s6ResultV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001DCD94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa()
{
  return &_s6ResultV10CodingKeysON;
}

unint64_t sub_1001DCDD0()
{
  unint64_t result = qword_100802A50;
  if (!qword_100802A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802A50);
  }
  return result;
}

unint64_t sub_1001DCE28()
{
  unint64_t result = qword_100802A58;
  if (!qword_100802A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802A58);
  }
  return result;
}

unint64_t sub_1001DCE80()
{
  unint64_t result = qword_100802A60;
  if (!qword_100802A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802A60);
  }
  return result;
}

id sub_1001DCED4()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s12UnknownAssetCMa();
  [super dealloc];
}

uint64_t sub_1001DCF0C()
{
  return _s12UnknownAssetCMa();
}

uint64_t _s12UnknownAssetCMa()
{
  uint64_t result = qword_100802A90;
  if (!qword_100802A90) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1001DCF60(double a1)
{
  objc_super v2 = v1;
  id v4 = [v1 superview];
  if (v4)
  {
    uint64_t v5 = v4;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v2 leadingAnchor];
    id v7 = [v5 leadingAnchor];
    id v8 = [v6 constraintEqualToAnchor:v7];

    [v8 setConstant:a1];
    if (v8)
    {
      id v9 = v8;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  id v10 = [v2 superview];
  if (v10)
  {
    id v11 = v10;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v12 = [v2 trailingAnchor];
    id v13 = [v11 trailingAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13];

    [v14 setConstant:-a1];
    if (v14)
    {
      id v15 = v14;
      [v15 setActive:1];

      id v11 = v15;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  id v16 = [v2 superview];
  if (v16)
  {
    Swift::String v17 = v16;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v18 = [v2 topAnchor];
    id v19 = [v17 topAnchor];
    id v20 = [v18 constraintEqualToAnchor:v19];

    [v20 setConstant:a1];
    if (v20)
    {
      id v21 = v20;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  id v22 = [v2 superview];
  if (v22)
  {
    id v23 = v22;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v24 = [v2 bottomAnchor];
    id v25 = [v23 bottomAnchor];
    id v26 = [v24 constraintEqualToAnchor:v25];

    if (v26)
    {
      [v26 setConstant:-a1];

      id v23 = v26;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)&_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
  }
  id v27 = self;
  sub_10001B284(0, (unint64_t *)&qword_1008059B0);
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v27 activateConstraints:isa];

  return &_swiftEmptyArrayStorage;
}

id sub_1001DD438(char a1, char a2, double a3)
{
  id v4 = v3;
  id v8 = [v4 superview];
  if (!v8) {
    return 0;
  }
  id v9 = v8;
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  if (a1)
  {
    id v10 = [v4 bottomAnchor];
    if (a1 == 1)
    {
      id v11 = [v9 bottomAnchor];
      id v12 = [v10 constraintGreaterThanOrEqualToAnchor:v11];
    }
    else
    {
      id v11 = [v9 bottomAnchor];
      id v12 = [v10 constraintLessThanOrEqualToAnchor:v11];
    }
  }
  else
  {
    id v10 = [v4 bottomAnchor];
    id v11 = [v9 bottomAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];
  }
  id v13 = v12;

  if (v13)
  {
    [v13 setConstant:-a3];
    if (a2)
    {
      id v14 = v13;
      [v14 setActive:1];
    }
  }
  else if (a2)
  {
    id v13 = 0;
  }

  return v13;
}

Swift::Void __swiftcall UIView.removeAllConstraints()()
{
  uint64_t v1 = v0;
  id v2 = [v0 superview];
  if (v2)
  {
    id v3 = v2;
    do
    {
      id v4 = v3;
      id v5 = [v4 constraints];
      sub_10001B284(0, (unint64_t *)&qword_1008059B0);
      unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v6 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v7) {
          goto LABEL_3;
        }
      }
      else
      {
        uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
        if (!v7) {
          goto LABEL_3;
        }
      }
      if (v7 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v7; ++i)
      {
        if ((v6 & 0xC000000000000001) != 0) {
          id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v9 = *(id *)(v6 + 8 * i + 32);
        }
        id v10 = v9;
        if ([v9 firstItem])
        {
          self;
          if (swift_dynamicCastObjCClass())
          {
            sub_10001B284(0, (unint64_t *)&unk_100800920);
            if (static NSObject.== infix(_:_:)()) {
              [v4 removeConstraint:v10];
            }
          }
          swift_unknownObjectRelease();
        }
        if ([v10 secondItem])
        {
          self;
          if (swift_dynamicCastObjCClass())
          {
            sub_10001B284(0, (unint64_t *)&unk_100800920);
            if (static NSObject.== infix(_:_:)()) {
              [v4 removeConstraint:v10];
            }
          }
          swift_unknownObjectRelease();
        }
      }
LABEL_3:
      swift_bridgeObjectRelease();
      id v3 = [v4 superview];
    }
    while (v3);
  }
  Class isa = (Class)[v1 constraints];
  if (!isa)
  {
    sub_10001B284(0, (unint64_t *)&qword_1008059B0);
    static Array._unconditionallyBridgeFromObjectiveC(_:)();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  [v1 removeConstraints:isa];

  [v1 setTranslatesAutoresizingMaskIntoConstraints:1];
}

id sub_1001DD900(char a1, char a2, double a3)
{
  [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
  uint64_t v7 = (SEL *)(&off_10079DCA0)[a1];
  id v8 = [v3 heightAnchor];
  id v9 = [v8 *v7:a3];

  [v9 setActive:a2 & 1];
  return v9;
}

void sub_1001DD9AC(uint64_t a1, double a2, double a3)
{
  id v4 = v3;
  id v7 = [v3 constraints];
  sub_10001B284(0, (unint64_t *)&qword_1008059B0);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  double v10 = 0.0;
  double v11 = 0.0;
  if (v9)
  {
    sub_10001B284(0, (unint64_t *)&unk_100800920);
    if (v9 < 1)
    {
      __break(1u);
      return;
    }
    uint64_t v12 = 0;
    id v36 = (id)(v8 & 0xC000000000000001);
    id v13 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
    unint64_t v14 = v8;
    do
    {
      if (v36) {
        id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v16 = *(id *)(v8 + 8 * v12 + 32);
      }
      Swift::String v17 = v16;
      id v18 = v13;
      id v19 = [v16 v13[448]];
      id v20 = [v4 widthAnchor];
      char v21 = static NSObject.== infix(_:_:)();

      if (v21)
      {
        [v17 constant];
        double v11 = v15;
        id v13 = v18;
      }
      else
      {
        id v22 = v4;
        id v23 = v18;
        id v24 = [v17 v18[448]];
        id v25 = v22;
        id v26 = [v22 heightAnchor];
        char v27 = static NSObject.== infix(_:_:)();

        if (v27)
        {
          [v17 constant];
          double v10 = v28;
        }
        id v13 = v23;
        id v4 = v25;
      }
      ++v12;

      unint64_t v8 = v14;
    }
    while (v9 != v12);
  }
  swift_bridgeObjectRelease();
  id v29 = [objc_allocWithZone((Class)UIBezierPath) init];
  double v30 = v11 * 0.5;
  double v31 = v11 * 0.5 - a2;
  [v29 moveToPoint:v31, v10];
  id v32 = v4;
  [v29 addLineToPoint:v30 + 0.0, v10 + a3];
  [v29 addLineToPoint:v30 + a2, v10];
  [v29 addLineToPoint:v31, v10];
  id v33 = [objc_allocWithZone((Class)CAShapeLayer) init];
  id v34 = [v29 CGPath];
  [v33 setPath:v34];

  [v33 setFillColor:a1];
  id v37 = [v32 layer];
  [v37 addSublayer:v33];
}

id sub_1001DDD3C(char a1, double a2)
{
  id v5 = [v2 superview];
  if (!v5) {
    return 0;
  }
  unint64_t v6 = v5;
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  if (a1)
  {
    id v7 = [v2 bottomAnchor];
    id v8 = [v6 safeAreaLayoutGuide];
    if (a1 == 1)
    {
      id v9 = [v8 bottomAnchor];

      id v10 = [v7 constraintGreaterThanOrEqualToAnchor:v9];
    }
    else
    {
      id v9 = [v8 bottomAnchor];

      id v10 = [v7 constraintLessThanOrEqualToAnchor:v9];
    }
  }
  else
  {
    id v7 = [v2 bottomAnchor];
    id v12 = [v6 safeAreaLayoutGuide];
    id v9 = [v12 bottomAnchor];

    id v10 = [v7 constraintEqualToAnchor:v9];
  }
  id v11 = v10;

  if (v11)
  {
    [v11 setConstant:-a2];
    id v13 = v11;
    [v13 setActive:1];
  }
  return v11;
}

id sub_1001DDF20(char a1, double a2)
{
  id v5 = [v2 superview];
  if (!v5) {
    return 0;
  }
  unint64_t v6 = v5;
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  if (a1)
  {
    id v7 = [v2 topAnchor];
    id v8 = [v6 safeAreaLayoutGuide];
    if (a1 == 1)
    {
      id v9 = [v8 topAnchor];

      id v10 = [v7 constraintGreaterThanOrEqualToAnchor:v9];
    }
    else
    {
      id v9 = [v8 topAnchor];

      id v10 = [v7 constraintLessThanOrEqualToAnchor:v9];
    }
  }
  else
  {
    id v7 = [v2 topAnchor];
    id v12 = [v6 safeAreaLayoutGuide];
    id v9 = [v12 topAnchor];

    id v10 = [v7 constraintEqualToAnchor:v9];
  }
  id v11 = v10;

  [v11 setConstant:a2];
  if (v11)
  {
    id v13 = v11;
    [v13 setActive:1];
  }
  return v11;
}

uint64_t (*sub_1001DE104(void (**a1)(id *), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1001DE220(v6, a2, a3);
  return sub_1001DE16C;
}

uint64_t (*sub_1001DE170(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_1001DE2A0(v6, a2, a3);
  return sub_1001DE16C;
}

void sub_1001DE1D8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

void (*sub_1001DE220(void (*result)(id *), unint64_t a2, uint64_t a3))(id *)
{
  id v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)id v3 = v4;
    return j__s32MOPOIAnnotationViewConfigurationVwxx;
  }
  __break(1u);
  return result;
}

void (*sub_1001DE2A0(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  id v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)id v3 = v4;
    return _s32MOPOIAnnotationViewConfigurationVwxx;
  }
  __break(1u);
  return result;
}

void _s32MOPOIAnnotationViewConfigurationVwxx(id *a1)
{
}

id sub_1001DE554()
{
  return sub_1001DE6AC(type metadata accessor for TranscriptWaitingViewTextAttachment);
}

uint64_t type metadata accessor for TranscriptWaitingViewTextAttachment()
{
  return self;
}

id sub_1001DE694()
{
  return sub_1001DE6AC(type metadata accessor for TranscriptWaitingViewTextAttachmentViewProvider);
}

id sub_1001DE6AC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for TranscriptWaitingViewTextAttachmentViewProvider()
{
  return self;
}

uint64_t sub_1001DE708(void *a1, uint64_t a2, id a3)
{
  uint64_t v5 = OBJC_IVAR____TtC7Journal35TranscriptWaitingViewTextAttachment_textAttachmentViewProvider;
  uint64_t result = *(void *)&v3[OBJC_IVAR____TtC7Journal35TranscriptWaitingViewTextAttachment_textAttachmentViewProvider];
  if (!result)
  {
    id v8 = [a3 textLayoutManager];
    id v9 = objc_allocWithZone((Class)type metadata accessor for TranscriptWaitingViewTextAttachmentViewProvider());
    id v10 = a1;
    id v11 = v3;
    id v12 = [v9 initWithTextAttachment:v11 parentView:v10 textLayoutManager:v8 location:a2];

    id v13 = *(void **)&v3[v5];
    *(void *)&v3[v5] = v12;

    return *(void *)&v3[v5];
  }
  return result;
}

uint64_t sub_1001DE7CC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

id sub_1001DE840()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Journal36AudioRecordingLiveActivityStopButton____lazy_storage___packageView;
  objc_super v3 = *(void **)(v0 + OBJC_IVAR____TtC7Journal36AudioRecordingLiveActivityStopButton____lazy_storage___packageView);
  id v4 = v3;
  if (v3 == (void *)1)
  {
    id v5 = objc_allocWithZone((Class)type metadata accessor for AudioRecordingLiveActivityStopButton.PackageView());
    id v4 = sub_1001DF324();
    unint64_t v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v4;
    id v7 = v4;
    sub_1000D39C0(v6);
  }
  sub_1000D5E74(v3);
  return v4;
}

id sub_1001DE8D8(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = sub_100010218(&qword_1007F9770);
  __chkstk_darwin(v9 - 8);
  id v33 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UIBackgroundConfiguration();
  __chkstk_darwin(v11 - 8);
  v32[1] = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UIButton.Configuration();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for UIView.Invalidations.Configuration();
  __chkstk_darwin(v17);
  uint64_t v18 = sub_100010218(&qword_100802BA0);
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  char v21 = (char *)v32 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = &v4[OBJC_IVAR____TtC7Journal36AudioRecordingLiveActivityStopButton__phase];
  char v35 = 1;
  id v23 = v4;
  UIView.Invalidations.Configuration.init()();
  sub_1001DF2D0();
  uint64_t v24 = v13;
  UIView.Invalidating.init(wrappedValue:_:)();
  (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v22, v21, v18);
  *(void *)&v23[OBJC_IVAR____TtC7Journal36AudioRecordingLiveActivityStopButton____lazy_storage___packageView] = 1;

  id v25 = (objc_class *)type metadata accessor for AudioRecordingLiveActivityStopButton();
  v34.receiver = v23;
  v34.super_class = v25;
  [super initWithFrame:a1, a2, a3, a4];
  static UIButton.Configuration.plain()();
  static UIBackgroundConfiguration.clear()();
  UIButton.Configuration.background.setter();
  char v27 = v33;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v33, v16, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
  id v28 = v26;
  UIButton.configuration.setter();

  id v29 = sub_1001DE840();
  if (v29)
  {
    double v30 = v29;
    [v29 setUserInteractionEnabled:0];
    [v28 addSubview:v30];
    sub_1001DCF60(0.0);

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v24);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v24);
  }
  return v28;
}

uint64_t sub_1001DECF4(void *a1)
{
  uint64_t v3 = type metadata accessor for UIView.Invalidations.Configuration();
  __chkstk_darwin(v3);
  uint64_t v4 = sub_100010218(&qword_100802BA0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = &v12[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  id v8 = &v1[OBJC_IVAR____TtC7Journal36AudioRecordingLiveActivityStopButton__phase];
  v12[15] = 1;
  uint64_t v9 = v1;
  UIView.Invalidations.Configuration.init()();
  sub_1001DF2D0();
  UIView.Invalidating.init(wrappedValue:_:)();

  (*(void (**)(char *, unsigned char *, uint64_t))(v5 + 32))(v8, v7, v4);
  uint64_t v10 = OBJC_IVAR____TtC7Journal36AudioRecordingLiveActivityStopButton____lazy_storage___packageView;
  *(void *)&v9[OBJC_IVAR____TtC7Journal36AudioRecordingLiveActivityStopButton____lazy_storage___packageView] = 1;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  sub_1000D39C0(*(id *)&v9[v10]);

  type metadata accessor for AudioRecordingLiveActivityStopButton();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1001DEF28()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  swift_release();
  [v0 isHighlighted];
  switch(v4)
  {
    case 1:
      id v1 = sub_1001DE840();
      if (v1) {
        goto LABEL_5;
      }
      break;
    case 3:
      id v1 = sub_1001DE840();
      if (v1) {
        goto LABEL_5;
      }
      break;
    default:
      id v1 = sub_1001DE840();
      if (v1)
      {
LABEL_5:
        uint64_t v2 = v1;
        sub_1001DF84C();
      }
      break;
  }
  return swift_bridgeObjectRelease();
}

id sub_1001DF0C8()
{
  return sub_1001DF998((uint64_t (*)(void))type metadata accessor for AudioRecordingLiveActivityStopButton);
}

uint64_t sub_1001DF164()
{
  return type metadata accessor for AudioRecordingLiveActivityStopButton();
}

uint64_t type metadata accessor for AudioRecordingLiveActivityStopButton()
{
  uint64_t result = qword_100802B48;
  if (!qword_100802B48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001DF1B8()
{
  sub_1001DF250();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1001DF250()
{
  if (!qword_100802B58)
  {
    type metadata accessor for UIView.Invalidations.Configuration();
    sub_1001DF2D0();
    unint64_t v0 = type metadata accessor for UIView.Invalidating();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100802B58);
    }
  }
}

unint64_t sub_1001DF2D0()
{
  unint64_t result = qword_100802B60;
  if (!qword_100802B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802B60);
  }
  return result;
}

id sub_1001DF324()
{
  id v1 = objc_allocWithZone((Class)NSDataAsset);
  uint64_t v2 = v0;
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [v1 initWithName:v3];

  if (!v4) {
    goto LABEL_8;
  }
  id v5 = [v4 data];
  uint64_t v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v8 = v7;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Class isa = Data._bridgeToObjectiveC()().super.isa;
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v30 = 0;
  id v11 = [self packageWithData:isa type:v10 options:0 error:&v30];

  if (!v11)
  {
    id v28 = v30;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_100040DD0(v6, v8);

    swift_errorRelease();
LABEL_9:
    type metadata accessor for AudioRecordingLiveActivityStopButton.PackageView();
    swift_deallocPartialClassInstance();
    return 0;
  }
  id v12 = v30;
  sub_100040DD0(v6, v8);
  id v13 = [v11 rootLayer];
  if (!v13)
  {

LABEL_8:
    goto LABEL_9;
  }
  uint64_t v14 = v13;
  *(void *)&v2[OBJC_IVAR____TtCC7Journal36AudioRecordingLiveActivityStopButtonP33_9B17AF2B67F796200586389DA24B04BC11PackageView_rootLayer] = v13;
  id v15 = objc_allocWithZone((Class)CAStateController);
  id v16 = v14;
  id result = [v15 initWithLayer:v16];
  if (result)
  {
    *(void *)&v2[OBJC_IVAR____TtCC7Journal36AudioRecordingLiveActivityStopButtonP33_9B17AF2B67F796200586389DA24B04BC11PackageView_stateController] = result;

    [v16 frame];
    double v19 = v18;
    double v21 = v20;
    double v23 = v22;
    double v25 = v24;
    v29.receiver = v2;
    v29.super_class = (Class)type metadata accessor for AudioRecordingLiveActivityStopButton.PackageView();
    id v26 = [super initWithFrame:v19, v21, v23, v25];
    [v16 setGeometryFlipped:[v11 isGeometryFlipped]];
    id v27 = [v26 layer];
    [v27 addSublayer:v16];

    return v26;
  }
  __break(1u);
  return result;
}

id sub_1001DF6C8()
{
  v10.receiver = v0;
  v10.super_class = (Class)type metadata accessor for AudioRecordingLiveActivityStopButton.PackageView();
  [super layoutSubviews];
  [v0 bounds];
  double Width = CGRectGetWidth(v11);
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtCC7Journal36AudioRecordingLiveActivityStopButtonP33_9B17AF2B67F796200586389DA24B04BC11PackageView_rootLayer];
  [v2 bounds];
  double v3 = Width / CGRectGetWidth(v12);
  [v0 bounds];
  double Height = CGRectGetHeight(v13);
  [v2 bounds];
  double v5 = Height / CGRectGetHeight(v14);
  if (v5 >= v3) {
    CGFloat v6 = v3;
  }
  else {
    CGFloat v6 = v5;
  }
  [v0 bounds];
  double MidX = CGRectGetMidX(v15);
  [v0 bounds];
  [v2 setPosition:MidX, CGRectGetMidY(v16)];
  CATransform3DMakeScale(&v9, v6, v6, 1.0);
  return [v2 setTransform:&v9];
}

void sub_1001DF84C()
{
  id v1 = *(void **)&v0[OBJC_IVAR____TtCC7Journal36AudioRecordingLiveActivityStopButtonP33_9B17AF2B67F796200586389DA24B04BC11PackageView_rootLayer];
  NSString v2 = String._bridgeToObjectiveC()();
  id v7 = [v1 stateWithName:v2];

  if (![self areAnimationsEnabled])
  {
    double v5 = *(void **)&v0[OBJC_IVAR____TtCC7Journal36AudioRecordingLiveActivityStopButtonP33_9B17AF2B67F796200586389DA24B04BC11PackageView_stateController];
    goto LABEL_5;
  }
  id v3 = [v0 traitCollection];
  id v4 = [v3 _backlightLuminance];

  double v5 = *(void **)&v0[OBJC_IVAR____TtCC7Journal36AudioRecordingLiveActivityStopButtonP33_9B17AF2B67F796200586389DA24B04BC11PackageView_stateController];
  LODWORD(v6) = 1.0;
  if (v4 == (id)1) {
LABEL_5:
  }
    double v6 = 0.0;
  [v5 setState:v7 ofLayer:v1 transitionSpeed:v6];
}

id sub_1001DF980()
{
  return sub_1001DF998((uint64_t (*)(void))type metadata accessor for AudioRecordingLiveActivityStopButton.PackageView);
}

id sub_1001DF998(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return [super dealloc];
}

uint64_t type metadata accessor for AudioRecordingLiveActivityStopButton.PackageView()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for AudioRecordingLiveActivityStopButton.Phase(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001DFB14);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudioRecordingLiveActivityStopButton.Phase()
{
  return &type metadata for AudioRecordingLiveActivityStopButton.Phase;
}

uint64_t getEnumTagSinglePayload for InsightsTip(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for InsightsTip(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001DFCC4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InsightsTip()
{
  return &type metadata for InsightsTip;
}

uint64_t sub_1001DFCFC()
{
  uint64_t v0 = sub_100010218(&qword_100801138);
  sub_100035380(v0, qword_10083D0F0);
  sub_100026A54(v0, (uint64_t)qword_10083D0F0);
  if (qword_1007F6E48 != -1) {
    swift_once();
  }
  [(id)qword_10083D3C0 isStreakReminderEnabled];
  sub_100010218(&qword_100801180);
  type metadata accessor for Tips.ParameterOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1006D6280;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_1001DFE7C()
{
  uint64_t v0 = sub_100010218(qword_100802748);
  sub_100035380(v0, qword_10083D108);
  sub_100026A54(v0, (uint64_t)qword_10083D108);
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

double *sub_1001DFF24()
{
  uint64_t v0 = type metadata accessor for Tips.Action();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Tips.Action.init(id:perform:_:)();
  sub_100010218(&qword_100802BF0);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1006D6280;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v1 + 32))(v5 + v4, v3, v0);
  unsigned int v6 = sub_1001FA7E8(v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_1001E00B4()
{
  return sub_1001E00F4();
}

uint64_t sub_1001E00D8()
{
  return sub_1001E00F4();
}

uint64_t sub_1001E00F4()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_1001E0144@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100010218(&qword_100801140);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_100801148);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  CATransform3D v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014488(&qword_100801150, &qword_100801148);
  static PredicateExpressions.build_Arg<A>(_:)();
  v11[15] = 0;
  static PredicateExpressions.build_Arg<A>(_:)();
  a1[3] = sub_100010218(&qword_100801158);
  a1[4] = sub_1001A3300();
  sub_100062E54(a1);
  sub_100014488(&qword_100801178, &qword_100801140);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1001E0384@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  v16[1] = a1;
  uint64_t v3 = type metadata accessor for PredicateExpressions.ComparisonOperator();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100010218(&qword_100802BB0);
  uint64_t v7 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  CATransform3D v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_100802BB8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  CGRect v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014488(&qword_100802BC0, &qword_100802BB8);
  static PredicateExpressions.build_Arg<A>(_:)();
  uint64_t v18 = 5;
  static PredicateExpressions.build_Arg<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for PredicateExpressions.ComparisonOperator.greaterThanOrEqual(_:), v3);
  a2[3] = sub_100010218(&qword_100802BC8);
  a2[4] = sub_1001E0E20();
  sub_100062E54(a2);
  sub_100014488(&qword_100802BE8, &qword_100802BB0);
  uint64_t v14 = v17;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1001E0688()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_1001E06F0()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_1001E0758()
{
  return Image.init(systemName:)();
}

double *sub_1001E076C()
{
  return sub_1001DFF24();
}

uint64_t sub_1001E0778()
{
  uint64_t v0 = sub_100010218(&qword_100801128);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Tips.MaxDisplayCount();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100801130);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Tips.MaxDisplayCount.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = v4;
  CGRect v16 = &protocol witness table for Tips.MaxDisplayCount;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  uint64_t v15 = v8;
  CGRect v16 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v13 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

uint64_t sub_1001E0A14@<X0>(uint64_t *a1@<X8>)
{
  sub_1001E0F50();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1001E0A58()
{
  unint64_t result = qword_100802BA8;
  if (!qword_100802BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802BA8);
  }
  return result;
}

uint64_t sub_1001E0AAC()
{
  uint64_t v0 = sub_100010218(qword_100802748);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218(&qword_100801138);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Tips.Rule();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F6B40 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100026A54(v4, (uint64_t)qword_10083D0F0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v9 + 8);
  v13(v11, v8);
  if (qword_1007F6B48 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100026A54(v0, (uint64_t)qword_10083D108);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v14, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v13(v11, v8);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  uint64_t v15 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

unint64_t sub_1001E0E20()
{
  unint64_t result = qword_100802BD0;
  if (!qword_100802BD0)
  {
    sub_100014440(&qword_100802BC8);
    sub_100014488(&qword_100802BD8, &qword_100802BB8);
    sub_1001E0EE0(&qword_100802BE0, &qword_100802BB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802BD0);
  }
  return result;
}

uint64_t sub_1001E0EE0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001E0F50()
{
  unint64_t result = qword_100802BF8;
  if (!qword_100802BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802BF8);
  }
  return result;
}

uint64_t sub_1001E0FA4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100802C00);
  sub_100026A54(v0, (uint64_t)qword_100802C00);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1001E10A0(uint64_t a1)
{
  return UIMutableTraits.userInterfaceStyle.setter();
}

uint64_t sub_1001E10E0()
{
  v1[4] = v0;
  sub_100010218((uint64_t *)&unk_10080E8F0);
  v1[5] = swift_task_alloc();
  id v2 = (void *)swift_task_alloc();
  v1[6] = v2;
  *id v2 = v1;
  v2[1] = sub_1001E11A0;
  return sub_100527E94();
}

uint64_t sub_1001E11A0(uint64_t a1)
{
  *(void *)(*(void *)v1 + 56) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1001E12A0, 0, 0);
}

uint64_t sub_1001E12A0()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (v1)
  {
LABEL_13:
    swift_task_dealloc();
    double v21 = *(uint64_t (**)(uint64_t))(v0 + 8);
    return v21(v1);
  }
  uint64_t v2 = *(void *)(v0 + 40);
  sub_1001E1B04(*(void *)(v0 + 32) + qword_10083D120, v2);
  uint64_t v3 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v2, 1, v3);
  uint64_t v5 = *(void *)(v0 + 40);
  if (v4 == 1)
  {
    sub_1001E1AA4(*(void *)(v0 + 40));
LABEL_8:
    if (qword_1007F6B50 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_100026A54(v17, (uint64_t)qword_100802C00);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      double v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "generateImage no route info in metadata", v20, 2u);
      swift_slowDealloc();
    }

    goto LABEL_13;
  }
  uint64_t v6 = sub_1004A8CD8();
  sub_100108A48(v5);
  if (!v6) {
    goto LABEL_8;
  }
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v8 = v7 + qword_100810AF0;
  uint64_t v9 = *(void *)(v7 + qword_100810AF0);
  *(void *)(v0 + 64) = v9;
  uint64_t v10 = *(void *)(v8 + 8);
  *(void *)(v0 + 72) = v10;
  uint64_t v11 = (objc_class *)type metadata accessor for RouteMapGenerator();
  uint64_t v12 = (char *)objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR____TtC7Journal17RouteMapGenerator_mapSnapshotter] = 0;
  *(void *)&v12[OBJC_IVAR____TtC7Journal17RouteMapGenerator_lineWidth] = 0x4008000000000000;
  uint64_t v13 = &v12[OBJC_IVAR____TtC7Journal17RouteMapGenerator_id];
  *(void *)uint64_t v13 = v9;
  *((void *)v13 + 1) = v10;
  *(void *)&v12[OBJC_IVAR____TtC7Journal17RouteMapGenerator_routeCoordinates] = v6;
  *(void *)(v0 + 16) = v12;
  *(void *)(v0 + 24) = v11;
  swift_bridgeObjectRetain();
  [super init];
  char v14 = *(unsigned char *)(v7 + qword_100810B20);
  *(unsigned char *)(v0 + 104) = v14;
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v15;
  *uint64_t v15 = v0;
  v15[1] = sub_1001E1580;
  return sub_1001986DC(v14);
}

uint64_t sub_1001E1580(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 96) = a1;
  swift_task_dealloc();

  return _swift_task_switch(sub_1001E169C, 0, 0);
}

uint64_t sub_1001E169C()
{
  uint64_t v1 = *(void **)(v0 + 96);
  if (v1)
  {
    switch(*(unsigned char *)(v0 + 104))
    {
      case 5:
        swift_bridgeObjectRelease();
        break;
      default:
        char v7 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0)
        {
          if (qword_1007F6BA0 != -1) {
            swift_once();
          }
          sub_100529CC4(v1, *(void *)(v0 + 64), *(void *)(v0 + 72));
        }
        break;
    }
    uint64_t v6 = *(void *)(v0 + 96);
  }
  else
  {
    if (qword_1007F6B50 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100026A54(v2, (uint64_t)qword_100802C00);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "error generating route map image", v5, 2u);
      swift_slowDealloc();
    }

    uint64_t v6 = 0;
  }
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v8(v6);
}

uint64_t sub_1001E18F8()
{
  return sub_1001E1AA4(v0 + qword_10083D120);
}

uint64_t sub_1001E1908(uint64_t a1)
{
  return sub_1001E1AA4(a1 + qword_10083D120);
}

uint64_t type metadata accessor for WorkoutRouteThumbnailCacheOperation()
{
  uint64_t result = qword_100802C40;
  if (!qword_100802C40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001E1964()
{
  sub_1001E19F4();
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

void sub_1001E19F4()
{
  if (!qword_100802C58)
  {
    _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100802C58);
    }
  }
}

uint64_t sub_1001E1A4C()
{
  return type metadata accessor for WorkoutRouteThumbnailCacheOperation();
}

uint64_t sub_1001E1A54(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1001E1AA4(uint64_t a1)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_10080E8F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1001E1B04(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_10080E8F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for RecordingViewHeader()
{
  return &type metadata for RecordingViewHeader;
}

uint64_t sub_1001E1B7C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1001E1B98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_100010218(&qword_100802D98);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100802DA0);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_100802DA8);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  char v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v6 = static HorizontalAlignment.center.getter();
  *((void *)v6 + 1) = 0x4010000000000000;
  v6[16] = 0;
  uint64_t v15 = sub_100010218(&qword_100802DB0);
  sub_1001E1DCC(a1, (uint64_t)&v6[*(int *)(v15 + 44)]);
  LOBYTE(a1) = static Edge.Set.all.getter();
  sub_10001B220((uint64_t)v6, (uint64_t)v10, &qword_100802D98);
  CGRect v16 = &v10[*(int *)(v8 + 44)];
  *CGRect v16 = a1;
  *(_OWORD *)(v16 + 8) = 0u;
  *(_OWORD *)(v16 + 24) = 0u;
  v16[40] = 1;
  sub_10001457C((uint64_t)v6, &qword_100802D98);
  uint64_t KeyPath = swift_getKeyPath();
  sub_10001B220((uint64_t)v10, (uint64_t)v14, &qword_100802DA0);
  uint64_t v18 = &v14[*(int *)(v12 + 44)];
  *(void *)uint64_t v18 = KeyPath;
  *((void *)v18 + 1) = 1;
  v18[16] = 0;
  sub_10001457C((uint64_t)v10, &qword_100802DA0);
  uint64_t v19 = swift_getKeyPath();
  sub_10001B220((uint64_t)v14, a2, &qword_100802DA8);
  double v20 = (uint64_t *)(a2 + *(int *)(sub_100010218(&qword_100802DB8) + 36));
  *double v20 = v19;
  v20[1] = 0x3FEC28F5C28F5C29;
  return sub_10001457C((uint64_t)v14, &qword_100802DA8);
}

uint64_t sub_1001E1DCC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v52 = a1;
  uint64_t v57 = a2;
  uint64_t v2 = sub_100010218(&qword_100802DC0);
  uint64_t v55 = *(void *)(v2 - 8);
  uint64_t v56 = v2;
  __chkstk_darwin(v2);
  id v54 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v53 = (char *)&v50 - v5;
  uint64_t v51 = type metadata accessor for AccessibilityTraits();
  uint64_t v50 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v7 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100802DC8);
  __chkstk_darwin(v8 - 8);
  uint64_t v58 = (uint64_t)&v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v59 = (uint64_t)&v50 - v11;
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v12 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  static Font.title2.getter();
  Font.bold()();
  swift_release();
  uint64_t v17 = Text.font(_:)();
  uint64_t v19 = v18;
  char v21 = v20;
  swift_release();
  sub_10002B8D0(v12, v14, v16);
  swift_bridgeObjectRelease();
  LODWORD(v60._countAndFlagsBits) = static HierarchicalShapeStyle.primary.getter();
  uint64_t v22 = Text.foregroundStyle<A>(_:)();
  double v24 = v23;
  char v26 = v25;
  uint64_t v28 = v27;
  sub_10002B8D0(v17, v19, v21 & 1);
  swift_bridgeObjectRelease();
  v60._uint64_t countAndFlagsBits = v22;
  v60._unint64_t object = v24;
  LOBYTE(v61) = v26 & 1;
  uint64_t v62 = v28;
  static AccessibilityTraits.isHeader.getter();
  uint64_t v29 = v58;
  View.accessibilityAddTraits(_:)();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v7, v51);
  sub_10002B8D0(v60._countAndFlagsBits, (uint64_t)v60._object, v61);
  swift_bridgeObjectRelease();
  sub_1001E323C(v29, v59);
  uint64_t v30 = static VerticalAlignment.center.getter();
  sub_1001E22BC(v52, &v60);
  uint64_t countAndFlagsBits = v60._countAndFlagsBits;
  unint64_t object = v60._object;
  uint64_t v33 = v61;
  uint64_t v34 = v62;
  char v35 = (char)v63;
  uint64_t v36 = static Font.subheadline.getter();
  uint64_t KeyPath = swift_getKeyPath();
  int v38 = static HierarchicalShapeStyle.secondary.getter();
  v60._uint64_t countAndFlagsBits = v30;
  v60._unint64_t object = 0;
  LOBYTE(v61) = 1;
  uint64_t v62 = countAndFlagsBits;
  uint64_t v63 = object;
  uint64_t v64 = v33;
  uint64_t v65 = v34;
  char v66 = v35;
  uint64_t v67 = KeyPath;
  uint64_t v68 = v36;
  int v69 = v38;
  sub_100010218(&qword_100802DD0);
  sub_1001E32AC();
  id v39 = v53;
  View.monospacedDigit()();
  sub_1000C2204(countAndFlagsBits, (uint64_t)object, v33);
  swift_release();
  swift_release();
  uint64_t v40 = v58;
  uint64_t v41 = v59;
  sub_10001B220(v59, v58, &qword_100802DC8);
  id v43 = v54;
  uint64_t v42 = v55;
  id v44 = *(void (**)(char *, char *, uint64_t))(v55 + 16);
  uint64_t v45 = v56;
  v44(v54, v39, v56);
  uint64_t v46 = v57;
  sub_10001B220(v40, v57, &qword_100802DC8);
  uint64_t v47 = sub_100010218(&qword_100802E00);
  v44((char *)(v46 + *(int *)(v47 + 48)), v43, v45);
  id v48 = *(void (**)(char *, uint64_t))(v42 + 8);
  v48(v39, v45);
  sub_10001457C(v41, &qword_100802DC8);
  v48(v43, v45);
  return sub_10001457C(v40, &qword_100802DC8);
}

double sub_1001E22BC@<D0>(uint64_t a1@<X0>, Swift::String *a2@<X8>)
{
  uint64_t v62 = a2;
  uint64_t v3 = type metadata accessor for Duration.TimeFormatStyle.Pattern();
  uint64_t v59 = *(void *)(v3 - 8);
  uint64_t v60 = v3;
  __chkstk_darwin(v3);
  uint64_t v57 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Duration.TimeFormatStyle();
  uint64_t v61 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v58 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = type metadata accessor for Date.FormatStyle.TimeStyle();
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v8 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = type metadata accessor for Date.FormatStyle.DateStyle();
  uint64_t v9 = *(void *)(v54 - 8);
  __chkstk_darwin(v54);
  uint64_t v11 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  char v15 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v16 - 8);
  if (*(unsigned char *)(a1 + 80) == 1)
  {
    uint64_t v17 = sub_1001E28D8(0, a1);
    uint64_t v19 = v18;
    char v21 = v20 & 1;
    uint64_t v22 = sub_1001E28D8(1, a1);
    uint64_t v24 = v23;
    char v26 = v25 & 1;
    uint64_t v27 = Text.accessibilityLabel(_:)();
    uint64_t v60 = v28;
    uint64_t v61 = v27;
    uint64_t v30 = v29;
    uint64_t v32 = v31 & 1;
    sub_10002B8D0(v22, v24, v26);
    swift_bridgeObjectRelease();
    sub_10002B8D0(v17, v19, v21);
    swift_bridgeObjectRelease();
    uint64_t v63 = v61;
    uint64_t v64 = v30;
    uint64_t v65 = v32;
    uint64_t v66 = v60;
    char v67 = 0;
  }
  else
  {
    uint64_t v53 = v5;
    LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v33._uint64_t countAndFlagsBits = 10794;
    v33._unint64_t object = (void *)0xE200000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v33);
    sub_1003D5A80((uint64_t)v15);
    static Date.FormatStyle.DateStyle.omitted.getter();
    static Date.FormatStyle.TimeStyle.shortened.getter();
    uint64_t v34 = Date.formatted(date:time:)();
    uint64_t v36 = v35;
    (*(void (**)(char *, uint64_t))(v55 + 8))(v8, v56);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v54);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    v37._uint64_t countAndFlagsBits = v34;
    v37._unint64_t object = v36;
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v37);
    swift_bridgeObjectRelease();
    v38._uint64_t countAndFlagsBits = 2107946;
    v38._unint64_t object = (void *)0xE300000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v38);
    double v39 = sub_1003D58AC();
    static Duration.seconds(_:)();
    uint64_t v40 = v57;
    if (v39 >= 3600.0) {
      static Duration.TimeFormatStyle.Pattern.hourMinuteSecond.getter();
    }
    else {
      static Duration.TimeFormatStyle.Pattern.minuteSecond.getter();
    }
    uint64_t v41 = v61;
    uint64_t v42 = v58;
    static FormatStyle<>.time(pattern:)();
    (*(void (**)(char *, uint64_t))(v59 + 8))(v40, v60);
    sub_1001E3410((unint64_t *)&qword_1008019E0, (void (*)(uint64_t))&type metadata accessor for Duration.TimeFormatStyle);
    uint64_t v43 = v53;
    Duration.formatted<A>(_:)();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v42, v43);
    LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v68);
    swift_bridgeObjectRelease();
    v44._uint64_t countAndFlagsBits = 0;
    v44._unint64_t object = (void *)0xE000000000000000;
    LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v44);
    LocalizedStringKey.init(stringInterpolation:)();
    uint64_t v63 = Text.init(_:tableName:bundle:comment:)();
    uint64_t v64 = v46;
    uint64_t v65 = v45 & 1;
    uint64_t v66 = v47;
    char v67 = 1;
  }
  _ConditionalContent<>.init(storage:)();
  double result = *(double *)&v68._countAndFlagsBits;
  Swift::String v49 = v69;
  char v50 = v70;
  uint64_t v51 = v62;
  *uint64_t v62 = v68;
  v51[1] = v49;
  LOBYTE(v51[2]._countAndFlagsBits) = v50;
  return result;
}

uint64_t sub_1001E28D8(char a1, uint64_t a2)
{
  uint64_t v80 = a2;
  uint64_t v75 = type metadata accessor for Date.FormatStyle.TimeStyle();
  uint64_t v79 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  id v71 = (char *)&v58 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date.FormatStyle.DateStyle();
  uint64_t v77 = *(void *)(v4 - 8);
  uint64_t v78 = v4;
  __chkstk_darwin(v4);
  id v76 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v73 = *(void *)(v6 - 8);
  uint64_t v74 = v6;
  __chkstk_darwin(v6);
  uint64_t v72 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for LocalizedStringKey.StringInterpolation();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for Locale();
  __chkstk_darwin(v9 - 8);
  char v70 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for Duration.UnitsFormatStyle.FractionalPartDisplayStrategy();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  char v67 = (char *)&v58 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for Duration.UnitsFormatStyle.UnitWidth();
  uint64_t v66 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  uint64_t v64 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for Duration.UnitsFormatStyle();
  uint64_t v69 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v65 = (char *)&v58 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v24 - 8);
  if (a1)
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v25._uint64_t countAndFlagsBits = 0x6E6F697461727544;
    v25._unint64_t object = (void *)0xEA0000000000203ALL;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v25);
    sub_1003D5524();
    uint64_t v62 = static Duration.seconds(_:)();
    uint64_t v61 = v26;
    sub_100010218(&qword_100801910);
    type metadata accessor for Duration.UnitsFormatStyle.Unit();
    uint64_t v63 = v13;
    uint64_t v59 = v18;
    uint64_t v60 = v22;
    uint64_t v58 = v14;
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1006D7C30;
    static Duration.UnitsFormatStyle.Unit.hours.getter();
    static Duration.UnitsFormatStyle.Unit.minutes.getter();
    static Duration.UnitsFormatStyle.Unit.seconds.getter();
    sub_1000F8DD8(v27);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v28 = v64;
    static Duration.UnitsFormatStyle.UnitWidth.abbreviated.getter();
    uint64_t v29 = v67;
    static Duration.UnitsFormatStyle.ZeroValueUnitsDisplayStrategy.hide.getter();
    static Duration.UnitsFormatStyle.FractionalPartDisplayStrategy.hide.getter();
    uint64_t v30 = v65;
    static FormatStyle<>.units(allowed:width:maximumUnitCount:zeroValueUnits:valueLength:fractionalPart:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v58);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v29, v59);
    (*(void (**)(char *, uint64_t))(v66 + 8))(v28, v68);
    sub_1001E3410(&qword_1008019E8, (void (*)(uint64_t))&type metadata accessor for Duration.UnitsFormatStyle);
    uint64_t v31 = v60;
    Duration.formatted<A>(_:)();
    (*(void (**)(char *, uint64_t))(v69 + 8))(v30, v31);
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v81);
    swift_bridgeObjectRelease();
    v32._uint64_t countAndFlagsBits = 0;
    v32._unint64_t object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v32);
    String.LocalizationValue.init(stringInterpolation:)();
    static Locale.current.getter();
    uint64_t v33 = String.init(localized:table:bundle:locale:comment:)();
  }
  else
  {
    sub_1003D5524();
    uint64_t v35 = static Duration.seconds(_:)();
    uint64_t v33 = sub_10039FDE8(v35, v36);
  }
  uint64_t v37 = v33;
  Swift::String v38 = v34;
  LocalizedStringKey.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v39._uint64_t countAndFlagsBits = 0;
  v39._unint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v39);
  v40._uint64_t countAndFlagsBits = v37;
  v40._unint64_t object = v38;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v40);
  swift_bridgeObjectRelease();
  v41._uint64_t countAndFlagsBits = 548913696;
  v41._unint64_t object = (void *)0xA400000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v41);
  uint64_t v42 = v72;
  sub_1003D5A80(v72);
  uint64_t v43 = sub_1002AA9E0();
  char v45 = v44;
  uint64_t v46 = v74;
  uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v73 + 8);
  v47(v42, v74);
  v48._uint64_t countAndFlagsBits = v43;
  v48._unint64_t object = v45;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v48);
  swift_bridgeObjectRelease();
  v49._uint64_t countAndFlagsBits = 8236;
  v49._unint64_t object = (void *)0xE200000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v49);
  sub_1003D5A80(v42);
  char v50 = v76;
  static Date.FormatStyle.DateStyle.omitted.getter();
  uint64_t v51 = v71;
  static Date.FormatStyle.TimeStyle.shortened.getter();
  uint64_t v52 = Date.formatted(date:time:)();
  uint64_t v54 = v53;
  (*(void (**)(char *, uint64_t))(v79 + 8))(v51, v75);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v50, v78);
  v47(v42, v46);
  v55._uint64_t countAndFlagsBits = v52;
  v55._unint64_t object = v54;
  LocalizedStringKey.StringInterpolation.appendInterpolation(_:)(v55);
  swift_bridgeObjectRelease();
  v56._uint64_t countAndFlagsBits = 0;
  v56._unint64_t object = (void *)0xE000000000000000;
  LocalizedStringKey.StringInterpolation.appendLiteral(_:)(v56);
  LocalizedStringKey.init(stringInterpolation:)();
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_1001E3224@<X0>(uint64_t a1@<X8>)
{
  return sub_1001E1B98(*v1, a1);
}

uint64_t sub_1001E323C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100802DC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1001E32AC()
{
  unint64_t result = qword_100802DD8;
  if (!qword_100802DD8)
  {
    sub_100014440(&qword_100802DD0);
    sub_1001E334C();
    sub_100014488(&qword_1007FC8A8, &qword_1007FC8A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802DD8);
  }
  return result;
}

unint64_t sub_1001E334C()
{
  unint64_t result = qword_100802DE0;
  if (!qword_100802DE0)
  {
    sub_100014440(&qword_100802DE8);
    sub_100014488(&qword_100802DF0, &qword_100802DF8);
    sub_100014488(&qword_1007F9638, &qword_1007F9640);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802DE0);
  }
  return result;
}

uint64_t sub_1001E3410(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1001E345C()
{
  unint64_t result = qword_100802E08;
  if (!qword_100802E08)
  {
    sub_100014440(&qword_100802DB8);
    sub_1001E34FC();
    sub_100014488(&qword_100800688, &qword_100800690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802E08);
  }
  return result;
}

unint64_t sub_1001E34FC()
{
  unint64_t result = qword_100802E10;
  if (!qword_100802E10)
  {
    sub_100014440(&qword_100802DA8);
    sub_1001E359C();
    sub_100014488(&qword_100800678, &qword_100800680);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802E10);
  }
  return result;
}

unint64_t sub_1001E359C()
{
  unint64_t result = qword_100802E18;
  if (!qword_100802E18)
  {
    sub_100014440(&qword_100802DA0);
    sub_100014488(&qword_100802E20, &qword_100802D98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802E18);
  }
  return result;
}

uint64_t sub_1001E363C()
{
  sub_100052EAC(v0 + OBJC_IVAR____TtC7Journal11MusicPlayer_currentTrackURL);

  return swift_deallocClassInstance();
}

uint64_t sub_1001E36A8()
{
  return type metadata accessor for MusicPlayer();
}

uint64_t type metadata accessor for MusicPlayer()
{
  uint64_t result = qword_100802E50;
  if (!qword_100802E50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001E36FC()
{
  sub_1000265E4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

unsigned char *storeEnumTagSinglePayload for RecordingState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001E386CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordingState()
{
  return &type metadata for RecordingState;
}

unint64_t sub_1001E38A8()
{
  unint64_t result = qword_100802F48;
  if (!qword_100802F48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802F48);
  }
  return result;
}

unint64_t sub_1001E3900()
{
  unint64_t result = qword_100802F50;
  if (!qword_100802F50)
  {
    sub_100014440(&qword_100802F58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100802F50);
  }
  return result;
}

void sub_1001E395C(void *a1@<X8>)
{
  *a1 = &off_1007939C8;
}

void sub_1001E39AC()
{
  v27.receiver = v0;
  v27.super_class = (Class)type metadata accessor for AlertProgressContentViewController();
  [super viewDidLoad];
  id v1 = [objc_allocWithZone((Class)UIProgressView) init];
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v1 setObservedProgress:*(void *)&v0[OBJC_IVAR____TtC7JournalP33_C0870F0871EA99EA9E6D05F47CB4490834AlertProgressContentViewController_progress]];
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_8;
  }
  int v3 = v2;
  [v2 addSubview:v1];

  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1006D6D30;
  id v5 = [v1 topAnchor];
  id v6 = [v0 view];
  if (!v6)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = v6;
  id v8 = [v6 topAnchor];

  id v9 = [v5 constraintEqualToAnchor:v8];
  *(void *)(v4 + 32) = v9;
  id v10 = [v1 leadingAnchor];
  id v11 = [v0 view];
  if (!v11)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v12 = v11;
  id v13 = [v11 leadingAnchor];

  id v14 = [v10 constraintEqualToAnchor:v13 constant:16.0];
  *(void *)(v4 + 40) = v14;
  id v15 = [v1 bottomAnchor];
  id v16 = [v0 view];
  if (!v16)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  uint64_t v17 = v16;
  id v18 = [v16 bottomAnchor];

  id v19 = [v15 constraintLessThanOrEqualToAnchor:v18];
  *(void *)(v4 + 48) = v19;
  id v20 = [v1 trailingAnchor];
  id v21 = [v0 view];
  if (v21)
  {
    uint64_t v22 = v21;
    uint64_t v23 = self;
    id v24 = [v22 trailingAnchor];

    id v25 = [v20 constraintEqualToAnchor:v24 constant:-16.0];
    *(void *)(v4 + 56) = v25;
    specialized Array._endMutation()();
    sub_1001E3DF8();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v23 activateConstraints:isa];

    return;
  }
LABEL_11:
  __break(1u);
}

id sub_1001E3D8C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AlertProgressContentViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for AlertProgressContentViewController()
{
  return self;
}

unint64_t sub_1001E3DF8()
{
  unint64_t result = qword_1008059B0;
  if (!qword_1008059B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1008059B0);
  }
  return result;
}

uint64_t sub_1001E3E38()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100802F90);
  sub_100026A54(v0, (uint64_t)qword_100802F90);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

void sub_1001E3F2C(uint64_t a1, void *a2, int a3, void *a4)
{
  int v78 = a3;
  id v82 = a2;
  uint64_t v83 = a1;
  uint64_t v6 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v6 - 8);
  double v86 = &v70[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100010218((uint64_t *)&unk_1007FC0C0);
  __chkstk_darwin(v8 - 8);
  uint64_t v79 = &v70[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v75 = *(void *)(v10 - 8);
  uint64_t v76 = v10;
  __chkstk_darwin(v10);
  uint64_t v72 = &v70[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for URL.DirectoryHint();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  id v15 = &v70[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for URL();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  id v19 = &v70[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  uint64_t v73 = &v70[-v21];
  __chkstk_darwin(v22);
  uint64_t v74 = &v70[-v23];
  id v24 = (int *)type metadata accessor for ExportOptions();
  uint64_t v77 = *((void *)v24 - 1);
  __chkstk_darwin(v24);
  uint64_t v80 = v25;
  Swift::String v81 = &v70[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v26);
  id v87 = &v70[-v27];
  swift_unknownObjectWeakAssign();
  id v28 = sub_1001E4920();
  uint64_t v29 = OBJC_IVAR____TtC7Journal13ExportManager_progressAlertController;
  uint64_t v30 = *(void **)&v4[OBJC_IVAR____TtC7Journal13ExportManager_progressAlertController];
  *(void *)&v4[OBJC_IVAR____TtC7Journal13ExportManager_progressAlertController] = v28;

  id v84 = v4;
  uint64_t v31 = *(void **)&v4[v29];
  if (v31)
  {
    id v85 = v31;
    [a4 presentViewController:animated:completion:];
    if (qword_1007F6EF8 != -1) {
      swift_once();
    }
    Swift::String v32 = v73;
    if (qword_10083D468)
    {
      sub_1004FD498(qword_10083D460, (void *)qword_10083D468, (uint64_t)v19);
      uint64_t v33 = *(void (**)(unsigned char *))(v13 + 104);
      unsigned int v71 = enum case for URL.DirectoryHint.inferFromPath(_:);
      v33(v15);
      sub_100014344();
      URL.appending<A>(components:directoryHint:)();
      (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
      (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v19, v16);
    }
    else
    {
      static URL.temporaryDirectory.getter();
      unsigned int v71 = enum case for URL.DirectoryHint.inferFromPath(_:);
    }
    uint64_t v88 = 0x2D74726F707845;
    unint64_t v89 = 0xE700000000000000;
    uint64_t v34 = v72;
    UUID.init()();
    uint64_t v35 = UUID.uuidString.getter();
    uint64_t v37 = v36;
    (*(void (**)(unsigned char *, uint64_t))(v75 + 8))(v34, v76);
    v38._uint64_t countAndFlagsBits = v35;
    v38._unint64_t object = v37;
    String.append(_:)(v38);
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, void, uint64_t))(v13 + 104))(v15, v71, v12);
    sub_100014344();
    Swift::String v39 = v74;
    URL.appending<A>(path:directoryHint:)();
    (*(void (**)(unsigned char *, uint64_t))(v13 + 8))(v15, v12);
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v17 + 8))(v32, v16);
    Swift::String v40 = v87;
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v17 + 32))(v87, v39, v16);
    v40[v24[5]] = v78;
    v40[v24[6]] = 1;
    Swift::String v41 = &v40[v24[7]];
    *Swift::String v41 = 0xD000000000000013;
    v41[1] = 0x800000010068A1B0;
    uint64_t v42 = &v40[v24[8]];
    *uint64_t v42 = 0x73656972746E45;
    v42[1] = 0xE700000000000000;
    uint64_t v43 = &v40[v24[9]];
    void *v43 = 0x656372756F736552;
    v43[1] = 0xE900000000000073;
    Swift::String v44 = &v40[v24[10]];
    strcpy(v44, "Journal.html");
    v44[13] = 0;
    *((_WORD *)v44 + 7) = -5120;
    char v45 = &v40[v24[11]];
    *char v45 = 0xD000000000000017;
    v45[1] = 0x800000010068A1D0;
    *(int64x2_t *)&v40[v24[12]] = vdupq_n_s64(0x406F400000000000uLL);
    uint64_t v46 = v24[13];
    id v47 = [objc_allocWithZone((Class)NSProgress) init];
    *(void *)&v40[v46] = v47;
    Swift::String v48 = (objc_class *)type metadata accessor for AlertProgressContentViewController();
    Swift::String v49 = (char *)objc_allocWithZone(v48);
    *(void *)&v49[OBJC_IVAR____TtC7JournalP33_C0870F0871EA99EA9E6D05F47CB4490834AlertProgressContentViewController_progress] = v47;
    v90.receiver = v49;
    v90.super_class = v48;
    id v50 = v47;
    id v51 = [super initWithNibName:0 bundle:0];
    [v51 preferredContentSize];
    [v51 setPreferredContentSize:];
    [v85 setContentViewController:v51];

    uint64_t v52 = v79;
    sub_100095A1C((uint64_t)v40, (uint64_t)v79);
    uint64_t v53 = v77;
    (*(void (**)(unsigned char *, void, uint64_t, int *))(v77 + 56))(v52, 0, 1, v24);
    uint64_t v54 = v84;
    uint64_t v55 = (uint64_t)&v84[OBJC_IVAR____TtC7Journal13ExportManager_currentExportOptions];
    swift_beginAccess();
    sub_100095A80((uint64_t)v52, v55);
    swift_endAccess();
    uint64_t v56 = OBJC_IVAR____TtC7Journal13ExportManager_currentExportTask;
    if (*(void *)&v54[OBJC_IVAR____TtC7Journal13ExportManager_currentExportTask])
    {
      if (qword_1007F6B58 != -1) {
        swift_once();
      }
      uint64_t v57 = type metadata accessor for Logger();
      sub_100026A54(v57, (uint64_t)qword_100802F90);
      uint64_t v58 = Logger.logObject.getter();
      os_log_type_t v59 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v58, v59))
      {
        uint64_t v60 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v60 = 0;
        _os_log_impl((void *)&_mh_execute_header, v58, v59, "ExportManager.startExport previous currentExportTask is not nil. This is unexpected.", v60, 2u);
        swift_slowDealloc();
      }

      if (*(void *)&v54[v56])
      {
        swift_retain();
        Task.cancel()();
        swift_release();
      }
      *(void *)&v54[v56] = 0;
      swift_release();
    }
    uint64_t v61 = type metadata accessor for TaskPriority();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v61 - 8) + 56))(v86, 1, 1, v61);
    uint64_t v62 = v81;
    sub_100095A1C((uint64_t)v87, (uint64_t)v81);
    type metadata accessor for MainActor();
    uint64_t v63 = v83;
    swift_bridgeObjectRetain();
    id v82 = v82;
    uint64_t v64 = v54;
    uint64_t v65 = static MainActor.shared.getter();
    uint64_t v66 = v54;
    unint64_t v67 = (*(unsigned __int8 *)(v53 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v53 + 80);
    unint64_t v68 = (v80 + v67 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v69 = (void *)swift_allocObject();
    v69[2] = v65;
    v69[3] = &protocol witness table for MainActor;
    v69[4] = v63;
    sub_1001E6DC0((uint64_t)v62, (uint64_t)v69 + v67);
    *(void *)((char *)v69 + v68) = v82;
    *(void *)((char *)v69 + ((v68 + 15) & 0xFFFFFFFFFFFFFFF8)) = v64;
    *(void *)&v66[v56] = sub_100328A60((uint64_t)v86, (uint64_t)&unk_100803018, (uint64_t)v69);

    swift_release();
    sub_100095AE8((uint64_t)v87);
  }
}

id sub_1001E4920()
{
  uint64_t v0 = self;
  id v1 = [v0 settingsBundle];
  v19._uint64_t countAndFlagsBits = 0xD000000000000025;
  v19._unint64_t object = (void *)0x800000010068FAF0;
  v2._unint64_t object = (void *)0x800000010068FAD0;
  v2._uint64_t countAndFlagsBits = 0xD000000000000019;
  v3._uint64_t countAndFlagsBits = 0;
  v3._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v2, (Swift::String_optional)0, (NSBundle)v1, v3, v19);

  id v4 = [v0 settingsBundle];
  v20._uint64_t countAndFlagsBits = 0xD000000000000028;
  v5._uint64_t countAndFlagsBits = 0xD00000000000003CLL;
  v20._unint64_t object = (void *)0x800000010068FB60;
  v5._unint64_t object = (void *)0x800000010068FB20;
  v6._uint64_t countAndFlagsBits = 0;
  v6._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v5, (Swift::String_optional)0, (NSBundle)v4, v6, v20);

  type metadata accessor for JurassicAlertController();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v7 message:v8 preferredStyle:1];

  id v10 = [v0 settingsBundle];
  v21._unint64_t object = (void *)0xE600000000000000;
  v11._uint64_t countAndFlagsBits = 0x6C65636E6143;
  v11._unint64_t object = (void *)0xE600000000000000;
  v12._uint64_t countAndFlagsBits = 0;
  v12._unint64_t object = (void *)0xE000000000000000;
  v21._uint64_t countAndFlagsBits = 0x6C65636E6143;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v21);

  uint64_t v13 = swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_retain();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1001E718C;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007453C;
  void aBlock[3] = &unk_10079DFC0;
  id v15 = _Block_copy(aBlock);
  swift_release();
  id v16 = [self actionWithTitle:v14 style:1 handler:v15];
  _Block_release(v15);
  swift_release();

  [v9 addAction:v16];
  return v9;
}

uint64_t sub_1001E4C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[24] = a6;
  v7[25] = a7;
  v7[22] = a4;
  v7[23] = a5;
  uint64_t v8 = type metadata accessor for URL.DirectoryHint();
  v7[26] = v8;
  v7[27] = *(void *)(v8 - 8);
  v7[28] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for URL();
  v7[29] = v9;
  v7[30] = *(void *)(v9 - 8);
  v7[31] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for CancellationError();
  v7[32] = v10;
  v7[33] = *(void *)(v10 - 8);
  v7[34] = swift_task_alloc();
  v7[35] = type metadata accessor for ExportOptions();
  v7[36] = swift_task_alloc();
  type metadata accessor for MainActor();
  v7[37] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[38] = v12;
  v7[39] = v11;
  return _swift_task_switch(sub_1001E4E08, v12, v11);
}

uint64_t sub_1001E4E08()
{
  id v1 = self;
  v0[40] = v1;
  id v2 = [v1 sharedApplication];
  [v2 setIdleTimerDisabled:1];

  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_100811300 + dword_100811300);
  Swift::String v3 = (void *)swift_task_alloc();
  v0[41] = v3;
  *Swift::String v3 = v0;
  v3[1] = sub_1001E4EF0;
  uint64_t v4 = v0[23];
  uint64_t v5 = v0[24];
  uint64_t v6 = v0[22];
  return v8(v6, v4, v5);
}

uint64_t sub_1001E4EF0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 336) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 312);
  uint64_t v4 = *(void *)(v2 + 304);
  if (v0) {
    uint64_t v5 = sub_1001E5484;
  }
  else {
    uint64_t v5 = sub_1001E502C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1001E502C()
{
  uint64_t v40 = v0;
  swift_release();
  if (qword_1007F6B58 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v3 = type metadata accessor for Logger();
  sub_100026A54(v3, (uint64_t)qword_100802F90);
  sub_100095A1C(v2, v1);
  uint64_t v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(void *)(v0 + 288);
  if (v6)
  {
    os_log_type_t type = v5;
    uint64_t v8 = *(void *)(v0 + 280);
    uint64_t v34 = v4;
    uint64_t v9 = *(void *)(v0 + 248);
    uint64_t v10 = *(void *)(v0 + 224);
    uint64_t v32 = *(void *)(v0 + 232);
    uint64_t v33 = *(void *)(v0 + 240);
    uint64_t v11 = *(void *)(v0 + 208);
    uint64_t v12 = *(void *)(v0 + 216);
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315138;
    uint64_t v14 = (void *)(v7 + *(int *)(v8 + 44));
    uint64_t v15 = v14[1];
    *(void *)(v0 + 112) = *v14;
    *(void *)(v0 + 120) = v15;
    unsigned int v36 = enum case for URL.DirectoryHint.inferFromPath(_:);
    uint64_t v35 = *(void (**)(uint64_t))(v12 + 104);
    v35(v10);
    sub_100014344();
    swift_bridgeObjectRetain();
    URL.appending<A>(path:directoryHint:)();
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
    swift_bridgeObjectRelease();
    sub_1001E6FE4((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v18 = v17;
    (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v9, v32);
    *(void *)(v0 + 168) = sub_10011EA98(v16, v18, &v39);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100095AE8(v7);
    _os_log_impl((void *)&_mh_execute_header, v34, type, "Export succeeded: %s", v13, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    Swift::String v19 = (void (*)(uint64_t, uint64_t, uint64_t))v35;
    uint64_t v20 = v36;
  }
  else
  {
    uint64_t v21 = *(void *)(v0 + 216);
    sub_100095AE8(*(void *)(v0 + 288));

    uint64_t v20 = enum case for URL.DirectoryHint.inferFromPath(_:);
    Swift::String v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 104);
  }
  uint64_t v23 = *(void *)(v0 + 240);
  uint64_t v22 = *(void *)(v0 + 248);
  uint64_t v24 = *(void *)(v0 + 224);
  uint64_t v25 = *(void *)(v0 + 208);
  uint64_t v26 = *(void *)(v0 + 216);
  *(void *)typea = *(void *)(v0 + 232);
  uint64_t v27 = (void *)(*(void *)(v0 + 184) + *(int *)(*(void *)(v0 + 280) + 44));
  uint64_t v28 = v27[1];
  *(void *)(v0 + 128) = *v27;
  *(void *)(v0 + 136) = v28;
  v19(v24, v20, v25);
  sub_100014344();
  swift_bridgeObjectRetain();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v24, v25);
  swift_bridgeObjectRelease();
  sub_1001E5B14(v22);
  (*(void (**)(uint64_t, os_log_type_t *))(v23 + 8))(v22, *(os_log_type_t **)typea);
  id v29 = [*(id *)(v0 + 320) sharedApplication];
  [v29 setIdleTimerDisabled:0];

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = *(uint64_t (**)(void))(v0 + 8);
  return v30();
}

uint64_t sub_1001E5484()
{
  uint64_t v1 = v0[42];
  swift_release();
  v0[20] = v1;
  swift_errorRetain();
  sub_100010218((uint64_t *)&unk_1007FC0D0);
  char v2 = swift_dynamicCast();
  uint64_t v3 = v0[42];
  if (v2)
  {
    swift_errorRelease();
    if (qword_1007F6B58 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100026A54(v4, (uint64_t)qword_100802F90);
    os_log_type_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Export was canceled", v7, 2u);
      swift_slowDealloc();
    }
    uint64_t v9 = v0[33];
    uint64_t v8 = v0[34];
    uint64_t v10 = v0[32];

    sub_100505804();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  }
  else
  {
    swift_errorRelease();
    v0[19] = v3;
    swift_errorRetain();
    if (swift_dynamicCast() && *((unsigned char *)v0 + 344) == 3)
    {
      swift_errorRelease();
      if (qword_1007F6B58 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      sub_100026A54(v11, (uint64_t)qword_100802F90);
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "Nothing to export", v14, 2u);
        swift_slowDealloc();
      }
      uint64_t v15 = v0[25];

      sub_100505804();
      uint64_t v16 = *(void **)(v15 + OBJC_IVAR____TtC7Journal13ExportManager_progressAlertController);
      if (v16)
      {
        uint64_t v17 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v0[6] = sub_1001E6FC0;
        v0[7] = v17;
        v0[2] = _NSConcreteStackBlock;
        v0[3] = 1107296256;
        v0[4] = sub_10017D530;
        v0[5] = &unk_10079DEF8;
        unint64_t v18 = _Block_copy(v0 + 2);
        id v19 = v16;
        swift_release();
        [v19 dismissViewControllerAnimated:1 completion:v18];
        _Block_release(v18);
      }
    }
    else
    {
      swift_errorRelease();
      if (qword_1007F6B58 != -1) {
        swift_once();
      }
      uint64_t v20 = type metadata accessor for Logger();
      sub_100026A54(v20, (uint64_t)qword_100802F90);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v21, v22))
      {
        uint64_t v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v33 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v23 = 138412290;
        swift_errorRetain();
        uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
        v0[18] = v24;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v33 = v24;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v21, v22, "Export failed: %@", v23, 0xCu);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
      }
      uint64_t v25 = v0[25];

      sub_100505804();
      uint64_t v26 = *(void **)(v25 + OBJC_IVAR____TtC7Journal13ExportManager_progressAlertController);
      if (v26)
      {
        uint64_t v27 = swift_allocObject();
        swift_unknownObjectWeakInit();
        v0[12] = sub_1001E6FA0;
        v0[13] = v27;
        v0[8] = _NSConcreteStackBlock;
        v0[9] = 1107296256;
        v0[10] = sub_10017D530;
        v0[11] = &unk_10079DED0;
        uint64_t v28 = _Block_copy(v0 + 8);
        id v29 = v26;
        swift_release();
        [v29 dismissViewControllerAnimated:1 completion:v28];
        swift_errorRelease();
        _Block_release(v28);

        goto LABEL_23;
      }
    }
  }
  swift_errorRelease();
LABEL_23:
  id v30 = [(id)v0[40] sharedApplication];
  [v30 setIdleTimerDisabled:0];

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1001E5B14(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v23 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v21 = *(void *)(v5 - 8);
  uint64_t v22 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for URL();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001FB8C();
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  unint64_t v13 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v14 = swift_allocObject();
  uint64_t v15 = v20;
  *(void *)(v14 + 16) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v14 + v13, v11, v8);
  aBlock[4] = sub_1001E6FCC;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  void aBlock[3] = &unk_10079DF48;
  uint64_t v16 = _Block_copy(aBlock);
  id v17 = v15;
  static DispatchQoS.unspecified.getter();
  uint64_t v24 = _swiftEmptyArrayStorage;
  sub_1001E6FE4((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v2);
  (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v22);
  return swift_release();
}

void sub_1001E5E88()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();
    if (v2)
    {
      uint64_t v3 = (void *)v2;
      uint64_t v4 = self;
      id v5 = [v4 settingsBundle];
      v14._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
      v14._unint64_t object = (void *)0x800000010068FA70;
      v6._unint64_t object = (void *)0x800000010068FA50;
      v6._uint64_t countAndFlagsBits = 0xD000000000000013;
      v7._uint64_t countAndFlagsBits = 0;
      v7._unint64_t object = (void *)0xE000000000000000;
      Swift::String v8 = NSLocalizedString(_:tableName:bundle:value:comment:)(v6, (Swift::String_optional)0, (NSBundle)v5, v7, v14);

      id v9 = [v4 settingsBundle];
      v10._uint64_t countAndFlagsBits = 0xD000000000000014;
      v15._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
      v15._unint64_t object = (void *)0x800000010068FAB0;
      v10._unint64_t object = (void *)0x800000010068FA90;
      v11._uint64_t countAndFlagsBits = 0;
      v11._unint64_t object = (void *)0xE000000000000000;
      Swift::String v12 = NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v15);

      id v13 = sub_100397850(v8._countAndFlagsBits, (uint64_t)v8._object, v12._countAndFlagsBits, (uint64_t)v12._object, (uint64_t)AudioRecordingActivityState.hash(into:), 0);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v1 = v13;
    }
  }
}

void sub_1001E6044()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1001E60A0(0, 0);
  }
}

void sub_1001E60A0(uint64_t a1, uint64_t a2)
{
  id v3 = [self settingsBundle];
  v14._unint64_t object = (void *)0xED000064656C6961;
  v4._uint64_t countAndFlagsBits = 0x662074726F707845;
  v4._unint64_t object = (void *)0xED000064656C6961;
  v5._uint64_t countAndFlagsBits = 0;
  v5._unint64_t object = (void *)0xE000000000000000;
  v14._uint64_t countAndFlagsBits = 0x662074726F707845;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v4, (Swift::String_optional)0, (NSBundle)v3, v5, v14);

  swift_bridgeObjectRetain();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (a2)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }
  type metadata accessor for JurassicAlertController();
  id v12 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v6 message:v7 preferredStyle:1];

  if (qword_1007F7478 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v9 = [self actionWithTitle:v8 style:0 handler:0];

  [v12 addAction:v9];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v11 = Strong;
    [Strong presentViewController:v12 animated:1 completion:0];
  }
}

void sub_1001E62D8()
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    if (*(void *)&Strong[OBJC_IVAR____TtC7Journal13ExportManager_currentExportTask])
    {
      swift_retain();
      Task.cancel()();

      swift_release();
    }
    else
    {
    }
  }
}

void sub_1001E6374(uint64_t a1, void *a2, void *a3)
{
  type metadata accessor for JurassicAlertController();
  Swift::String v5 = self;
  id v6 = [v5 settingsBundle];
  v33._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
  v33._unint64_t object = (void *)0x800000010068FBB0;
  v7._unint64_t object = (void *)0x800000010068FB90;
  v7._uint64_t countAndFlagsBits = 0xD000000000000017;
  v8._uint64_t countAndFlagsBits = 0;
  v8._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v33);

  id v9 = [v5 settingsBundle];
  v10._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v34._uint64_t countAndFlagsBits = 0xD00000000000002ALL;
  v34._unint64_t object = (void *)0x800000010068FBF0;
  v10._unint64_t object = (void *)0x800000010068FBD0;
  v11._uint64_t countAndFlagsBits = 0;
  v11._unint64_t object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v10, (Swift::String_optional)0, (NSBundle)v9, v11, v34);

  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v14 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v12 message:v13 preferredStyle:1];

  id v15 = [v5 settingsBundle];
  v35._unint64_t object = (void *)0xE600000000000000;
  v16._uint64_t countAndFlagsBits = 0x6C65636E6143;
  v16._unint64_t object = (void *)0xE600000000000000;
  v17._uint64_t countAndFlagsBits = 0;
  v17._unint64_t object = (void *)0xE000000000000000;
  v35._uint64_t countAndFlagsBits = 0x6C65636E6143;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v35);

  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v19 = self;
  id v20 = [v19 actionWithTitle:v18 style:1 handler:0];

  [v14 addAction:v20];
  id v21 = [v5 settingsBundle];
  v36._unint64_t object = (void *)0xE900000000000074;
  v22._uint64_t countAndFlagsBits = 0x74726F707845;
  v22._unint64_t object = (void *)0xE600000000000000;
  v23._uint64_t countAndFlagsBits = 0;
  v23._unint64_t object = (void *)0xE000000000000000;
  v36._uint64_t countAndFlagsBits = 0x726F707865206F44;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v36);

  uint64_t v24 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v25 = (void *)swift_allocObject();
  _OWORD v25[2] = v24;
  v25[3] = a1;
  v25[4] = a2;
  v25[5] = a3;
  swift_bridgeObjectRetain();
  id v26 = a2;
  id v27 = a3;
  swift_retain();
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1001E71E4;
  aBlock[5] = v25;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10007453C;
  void aBlock[3] = &unk_10079E010;
  id v29 = _Block_copy(aBlock);
  swift_release();
  id v30 = [v19 actionWithTitle:v28 style:0 handler:v29];
  _Block_release(v29);
  swift_release();

  [v14 addAction:v30];
  [v27 presentViewController:v14 animated:1 completion:0];
}

void sub_1001E67A8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v9 = (void *)Strong;
    sub_1001E3F2C(a3, a4, 0, a5);
  }
}

void sub_1001E6824(char *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __n128 v7 = __chkstk_darwin(v4);
  Swift::String v8 = *(void **)&a1[OBJC_IVAR____TtC7Journal13ExportManager_progressAlertController];
  if (v8)
  {
    (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))((char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4, v7);
    unint64_t v9 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = a1;
    (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v10 + v9, (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v4);
    aBlock[4] = sub_1001E70FC;
    aBlock[5] = v10;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    void aBlock[3] = &unk_10079DF98;
    Swift::String v11 = _Block_copy(aBlock);
    id v12 = v8;
    NSString v13 = a1;
    swift_release();
    [v12 dismissViewControllerAnimated:1 completion:v11];
    _Block_release(v11);
  }
}

void sub_1001E69F8(uint64_t a1, uint64_t a2)
{
  sub_100010218(&qword_100802740);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1006D6280;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 16))(v7 + v6, a2, v4);
  id v8 = objc_allocWithZone((Class)UIDocumentPickerViewController);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v12 = [v8 initForExportingURLs:isa asCopy:1];

  [v12 setDelegate:a1];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    Swift::String v11 = Strong;
    [Strong presentViewController:v12 animated:1 completion:0];
  }
}

uint64_t sub_1001E6C44()
{
  uint64_t v1 = (int *)(type metadata accessor for ExportOptions() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = v0 + v2;
  uint64_t v5 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1001E6DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ExportOptions();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001E6E24(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for ExportOptions() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1[2];
  uint64_t v8 = v1[3];
  uint64_t v9 = v1[4];
  uint64_t v10 = (uint64_t)v1 + v5;
  uint64_t v11 = *(void *)((char *)v1 + v6);
  uint64_t v12 = *(void *)((char *)v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8));
  NSString v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *NSString v13 = v2;
  v13[1] = sub_10002C194;
  return sub_1001E4C28(a1, v7, v8, v9, v10, v11, v12);
}

uint64_t sub_1001E6F68()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1001E6FA0()
{
}

uint64_t sub_1001E6FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001E6FB8()
{
  return swift_release();
}

void sub_1001E6FC0()
{
}

uint64_t sub_1001E6FCC()
{
  return sub_1001E7114((uint64_t (*)(uint64_t, uint64_t))sub_1001E6824);
}

uint64_t sub_1001E6FE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001E7030()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1001E70FC()
{
  return sub_1001E7114((uint64_t (*)(uint64_t, uint64_t))sub_1001E69F8);
}

uint64_t sub_1001E7114(uint64_t (*a1)(uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));

  return a1(v3, v4);
}

void sub_1001E718C()
{
}

uint64_t sub_1001E7194()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1001E71E4(uint64_t a1)
{
  sub_1001E67A8(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40));
}

id sub_1001E72F4(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Journal10FadingView_contentFadeGradientLayer;
  id v4 = objc_allocWithZone((Class)CAGradientLayer);
  unint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC7Journal10FadingView_fadeLocations] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal10FadingView_fadeColors] = 0;

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for FadingView();
  [super initWithCoder:a1];
  id v7 = v6;
  if (v6)
  {
    id v8 = v6;
    sub_1001E73E0();
  }
  return v7;
}

void sub_1001E73E0()
{
  id v1 = [self clearColor];
  [v0 setBackgroundColor:v1];

  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC7Journal10FadingView_contentFadeGradientLayer];
  [v2 setStartPoint:0.5, 0.0];
  [v2 setEndPoint:0.5, 1.0];
  [v0 bounds];
  [v2 setFrame:];
  id v3 = [v0 layer];
  [v3 setMask:v2];
}

id sub_1001E75C8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FadingView();
  return [super dealloc];
}

uint64_t type metadata accessor for FadingView()
{
  return self;
}

uint64_t sub_1001E767C()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001FB8C();
  id v8 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = sub_1001E9D58;
  aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  void aBlock[3] = &unk_10079E088;
  objc_super v10 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v10);

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

void sub_1001E78FC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (unsigned char *)Strong;
    uint64_t v2 = OBJC_IVAR____TtC7Journal16ContactAssetView_contactLabel;
    id v3 = *(void **)(Strong + OBJC_IVAR____TtC7Journal16ContactAssetView_contactLabel);
    uint64_t v4 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
    switch(*(unsigned char *)(Strong + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType))
    {
      case 4:
        id v5 = v3;
        swift_bridgeObjectRelease();
        goto LABEL_5;
      default:
        char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
        id v7 = v3;
        swift_bridgeObjectRelease();
        if (v6)
        {
LABEL_5:
          swift_bridgeObjectRetain();
          sub_100369CE8();
          uint64_t v9 = v8;
          swift_bridgeObjectRelease();
          if (!v9)
          {
            NSString v10 = 0;
            goto LABEL_9;
          }
        }
        else
        {
          swift_bridgeObjectRetain();
        }
        NSString v10 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
LABEL_9:
        [v3 setText:v10];

        uint64_t v11 = *(void **)&v1[v2];
        switch(v1[v4])
        {
          case 4:
            id v12 = v11;
            swift_bridgeObjectRelease();
            uint64_t v13 = 1;
            break;
          default:
            char v14 = _stringCompareWithSmolCheck(_:_:expecting:)();
            id v15 = v11;
            swift_bridgeObjectRelease();
            if (v14)
            {
              uint64_t v13 = 1;
            }
            else if (sub_1000186F0(v1[v4], (uint64_t)&off_100793A20))
            {
              uint64_t v13 = 2;
            }
            else
            {
              uint64_t v13 = 3;
            }
            break;
        }
        [v11 setNumberOfLines:v13];

        Swift::String v16 = *(void **)&v1[v2];
        [v16 setLineBreakMode:4];
        switch(v1[v4])
        {
          case 2:
            id v17 = v16;
LABEL_20:
            swift_bridgeObjectRelease();
            uint64_t v20 = 1;
            break;
          default:
            char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
            id v19 = v16;
            swift_bridgeObjectRelease();
            if (v18)
            {
LABEL_22:
              uint64_t v20 = 1;
            }
            else
            {
              switch(v1[v4])
              {
                case 4:
                  goto LABEL_20;
                default:
                  char v21 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v21) {
                    goto LABEL_22;
                  }
                  switch(v1[v4])
                  {
                    case 5:
                      goto LABEL_20;
                    default:
                      char v39 = _stringCompareWithSmolCheck(_:_:expecting:)();
                      swift_bridgeObjectRelease();
                      uint64_t v20 = v39 & 1;
                      break;
                  }
                  break;
              }
            }
            break;
        }
        [v16 setTextAlignment:v20];

        switch(v1[v4])
        {
          case 5:
            swift_bridgeObjectRelease();
            goto LABEL_28;
          default:
            char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v22)
            {
LABEL_28:
              uint64_t v23 = qword_1007F7268;
              id v24 = *(id *)&v1[v2];
              if (v23 != -1) {
                swift_once();
              }
              [v24 setFont:qword_10083D830];

              uint64_t v25 = *(void **)&v1[v2];
              id v26 = self;
              id v27 = v25;
              id v28 = [v26 labelColor];
            }
            else
            {
              switch(v1[v4])
              {
                case 4:
                  swift_bridgeObjectRelease();
                  goto LABEL_33;
                default:
                  char v29 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v29)
                  {
LABEL_33:
                    uint64_t v30 = qword_1007F7248;
                    id v31 = *(id *)&v1[v2];
                    if (v30 != -1) {
                      swift_once();
                    }
                    [v31 setFont:qword_10083D810];

                    uint64_t v32 = *(void **)&v1[v2];
                    Swift::String v33 = self;
                    id v27 = v32;
                    id v28 = [v33 secondaryLabelColor];
                  }
                  else
                  {
                    uint64_t v34 = qword_1007F72A0;
                    id v35 = *(id *)&v1[v2];
                    if (v34 != -1) {
                      swift_once();
                    }
                    [v35 setFont:qword_10083D868];

                    Swift::String v36 = *(void **)&v1[v2];
                    uint64_t v37 = self;
                    id v27 = v36;
                    id v28 = [v37 secondaryLabelColor];
                  }
                  break;
              }
            }
            id v38 = v28;
            [v27 setTextColor:v38];

            break;
        }
        break;
    }
  }
}

uint64_t sub_1001E8268()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v19 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView);
  uint64_t v9 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
  NSString v10 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v8) + 0x58);
  uint64_t v11 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
  id v12 = v8;
  v10(6, v11);

  int v13 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7Journal20ContactAssetGridView_previousSizeType);
  if (v13 == 6 || (uint64_t result = sub_10017CB6C(*(unsigned char *)(v1 + v9), v13), (result & 1) == 0))
  {
    UIView.removeAllConstraints()();
    UIView.removeAllConstraints()();
    sub_1001E767C();
    sub_10001FB8C();
    id v15 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_1001E9D38;
    aBlock[5] = v16;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    void aBlock[3] = &unk_10079E060;
    id v17 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10004F6A0();
    sub_100010218(&qword_100804DB0);
    sub_10001B1BC();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v17);

    (*(void (**)(char *, uint64_t))(v19 + 8))(v4, v2);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v18);
  }
  return result;
}

void sub_1001E85A8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (unsigned char *)Strong;
    uint64_t v2 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
    switch(*(unsigned char *)(Strong + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType))
    {
      case 2:
        sub_1001E9110();
        break;
      case 4:
        sub_1001E86AC();
        break;
      case 5:
        sub_1001E960C();
        break;
      default:
        sub_1001E8BA8();
        break;
    }
    v1[OBJC_IVAR____TtC7Journal20ContactAssetGridView_previousSizeType] = v1[v2];
    [v1 layoutIfNeeded];
    [*(id *)&v1[OBJC_IVAR____TtC7Journal16ContactAssetView_contactLabel] layoutIfNeeded];
    [*(id *)&v1[OBJC_IVAR____TtC7Journal16ContactAssetView_assetImageView] layoutIfNeeded];
  }
}

void sub_1001E86AC()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16ContactAssetView_assetImageView);
  id v2 = [v1 superview];
  if (v2)
  {
    uint64_t v3 = v2;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v4 = [v1 leadingAnchor];
    id v5 = [v3 leadingAnchor];
    id v6 = [v4 constraintEqualToAnchor:v5];

    [v6 setConstant:8.0];
    if (v6)
    {
      id v7 = v6;
      [v7 setActive:1];
    }
  }
  id v8 = [v1 superview];
  if (v8)
  {
    uint64_t v9 = v8;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v10 = [v1 trailingAnchor];
    id v11 = [v9 trailingAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    [v12 setConstant:-8.0];
    if (v12)
    {
      id v13 = v12;
      [v13 setActive:1];
    }
  }
  id v14 = [v1 superview];
  if (v14)
  {
    id v15 = v14;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v16 = [v1 topAnchor];
    id v17 = [v15 topAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    [v18 setConstant:8.0];
    if (v18)
    {
      id v19 = v18;
      [v19 setActive:1];
    }
  }
  uint64_t v20 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16ContactAssetView_contactLabel);
  id v21 = [v20 superview];
  if (v21)
  {
    char v22 = v21;
    [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v23 = [v20 leadingAnchor];
    id v24 = [v22 leadingAnchor];
    id v25 = [v23 constraintEqualToAnchor:v24];

    [v25 setConstant:8.0];
    if (v25)
    {
      id v26 = v25;
      [v26 setActive:1];
    }
  }
  id v27 = [v20 superview];
  if (v27)
  {
    id v28 = v27;
    [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v29 = [v20 trailingAnchor];
    id v30 = [v28 trailingAnchor];
    id v31 = [v29 constraintEqualToAnchor:v30];

    [v31 setConstant:-8.0];
    if (v31)
    {
      id v32 = v31;
      [v32 setActive:1];
    }
  }
  [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v33 = [v20 topAnchor];
  id v34 = [v1 bottomAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34];

  [v35 setConstant:8.0];
  [v35 setActive:1];

  id v36 = sub_1001DD438(0, 1, 8.0);
}

void sub_1001E8BA8()
{
  uint64_t v1 = v0;
  id v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16ContactAssetView_assetImageView);
  id v3 = [v2 superview];
  if (v3)
  {
    id v4 = v3;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = [v2 leadingAnchor];
    id v6 = [v4 leadingAnchor];
    id v7 = [v5 constraintEqualToAnchor:v6];

    [v7 setConstant:8.0];
    if (v7)
    {
      id v8 = v7;
      [v8 setActive:1];
    }
  }
  id v9 = [v2 superview];
  if (v9)
  {
    id v10 = v9;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v11 = [v2 topAnchor];
    id v12 = [v10 topAnchor];
    id v13 = [v11 constraintEqualToAnchor:v12];

    [v13 setConstant:8.0];
    if (v13)
    {
      id v14 = v13;
      [v14 setActive:1];
    }
  }

  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v15 = [v2 heightAnchor];
  id v16 = [v2 widthAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16 multiplier:1.0];

  [v17 setActive:1];
  id v18 = *(void **)(v1 + OBJC_IVAR____TtC7Journal16ContactAssetView_contactLabel);
  [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v19 = [v18 leadingAnchor];
  id v20 = [v2 trailingAnchor];
  id v21 = &stru_1007D7000;
  id v22 = [v19 constraintEqualToAnchor:v20];

  [v22 setConstant:12.0];
  [v22 setActive:1];

  id v23 = [v18 superview];
  if (v23)
  {
    id v24 = v23;
    [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v25 = [v18 centerYAnchor];
    id v26 = [v24 centerYAnchor];
    id v27 = [v25 constraintEqualToAnchor:v26];

    [v27 setConstant:0.0];
    id v28 = v27;
    id v21 = &stru_1007D7000;
    id v29 = v28;
    [v28 setActive:1];
  }
  id v30 = [v18 superview];
  if (v30)
  {
    id v31 = v30;
    [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v32 = [v18 trailingAnchor];
    id v33 = [v31 trailingAnchor];
    id v34 = [v32 constraintLessThanOrEqualToAnchor:v33];

    [v34 setConstant:-8.0];
    id v35 = v34;
    id v21 = &stru_1007D7000;
    id v36 = v35;
    [v35 setActive:1];
  }
  id v37 = [v18 superview];
  if (v37)
  {
    id v38 = v37;
    [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v39 = [v18 topAnchor];
    id v40 = [v38 topAnchor];
    id v41 = [v39 v21[68].types:v40];

    [v41 setConstant:-8.0];
    id v42 = v41;
    [v42 setActive:1];
  }
  id v43 = sub_1001DD438(0, 1, -8.0);
}

void sub_1001E9110()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16ContactAssetView_assetImageView);
  id v2 = [v1 superview];
  if (v2)
  {
    id v3 = v2;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v4 = [v1 leadingAnchor];
    id v5 = [v3 leadingAnchor];
    id v6 = [v4 constraintEqualToAnchor:v5];

    [v6 setConstant:12.0];
    if (v6)
    {
      id v7 = v6;
      [v7 setActive:1];
    }
  }
  id v8 = [v1 superview];
  if (v8)
  {
    id v9 = v8;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v10 = [v1 trailingAnchor];
    id v11 = [v9 trailingAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    [v12 setConstant:-12.0];
    if (v12)
    {
      id v13 = v12;
      [v13 setActive:1];
    }
  }
  id v14 = [v1 superview];
  if (v14)
  {
    id v15 = v14;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v16 = [v1 topAnchor];
    id v17 = [v15 topAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    [v18 setConstant:16.0];
    if (v18)
    {
      id v19 = v18;
      [v19 setActive:1];
    }
  }
  id v20 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16ContactAssetView_contactLabel);
  id v21 = [v20 superview];
  if (v21)
  {
    id v22 = v21;
    [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v23 = [v20 leadingAnchor];
    id v24 = [v22 leadingAnchor];
    id v25 = [v23 constraintEqualToAnchor:v24];

    [v25 setConstant:12.0];
    if (v25)
    {
      id v26 = v25;
      [v26 setActive:1];
    }
  }
  id v27 = [v20 superview];
  if (v27)
  {
    id v28 = v27;
    [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v29 = [v20 trailingAnchor];
    id v30 = [v28 trailingAnchor];
    id v31 = [v29 constraintEqualToAnchor:v30];

    [v31 setConstant:-12.0];
    if (v31)
    {
      id v32 = v31;
      [v32 setActive:1];
    }
  }
  [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v33 = [v20 topAnchor];
  id v34 = [v1 bottomAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34];

  [v35 setConstant:8.0];
  [v35 setActive:1];

  id v36 = sub_1001DD438(0, 1, 13.0);
}

void sub_1001E960C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16ContactAssetView_assetImageView);
  if (qword_1007F73E8 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_10083D9F8;
  id v3 = [v1 superview];
  if (v3)
  {
    id v4 = v3;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = [v1 leadingAnchor];
    id v6 = [v4 leadingAnchor];
    id v7 = [v5 constraintEqualToAnchor:v6];

    [v7 setConstant:v2];
    if (v7)
    {
      id v8 = v7;
      [v8 setActive:1];
    }
  }
  double v9 = *(double *)&qword_10083D9F8;
  id v10 = [v1 superview];
  if (v10)
  {
    id v11 = v10;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v12 = [v1 trailingAnchor];
    id v13 = [v11 trailingAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13];

    [v14 setConstant:-v9];
    if (v14)
    {
      id v15 = v14;
      [v15 setActive:1];
    }
  }
  if (qword_1007F73F0 != -1) {
    swift_once();
  }
  double v16 = *(double *)&qword_10083DA00;
  id v17 = [v1 superview];
  if (v17)
  {
    id v18 = v17;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v19 = [v1 topAnchor];
    id v20 = [v18 topAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20];

    [v21 setConstant:v16];
    if (v21)
    {
      id v22 = v21;
      [v22 setActive:1];
    }
  }
  id v23 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16ContactAssetView_contactLabel);
  double v24 = *(double *)&qword_10083D9F8;
  id v25 = [v23 superview];
  if (v25)
  {
    id v26 = v25;
    [v23 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v27 = [v23 leadingAnchor];
    id v28 = [v26 leadingAnchor];
    id v29 = [v27 constraintEqualToAnchor:v28];

    [v29 setConstant:v24];
    if (v29)
    {
      id v30 = v29;
      [v30 setActive:1];
    }
  }
  double v31 = *(double *)&qword_10083D9F8;
  id v32 = [v23 superview];
  if (v32)
  {
    id v33 = v32;
    [v23 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v34 = [v23 trailingAnchor];
    id v35 = [v33 trailingAnchor];
    id v36 = [v34 constraintEqualToAnchor:v35];

    [v36 setConstant:-v31];
    if (v36)
    {
      id v37 = v36;
      [v37 setActive:1];
    }
  }
  if (qword_1007F72F8 != -1) {
    swift_once();
  }
  double v38 = *(double *)&qword_10083D908;
  [v23 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v39 = [v23 topAnchor];
  id v40 = [v1 bottomAnchor];
  id v41 = [v39 constraintEqualToAnchor:v40];

  [v41 setConstant:v38];
  [v41 setActive:1];

  id v42 = sub_1001DD438(0, 1, *(double *)&qword_10083D908);
}

id sub_1001E9CA8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ContactAssetGridView();
  [super dealloc];
}

uint64_t type metadata accessor for ContactAssetGridView()
{
  return self;
}

uint64_t sub_1001E9D00()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1001E9D38()
{
}

uint64_t sub_1001E9D40(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001E9D50()
{
  return swift_release();
}

void sub_1001E9D58()
{
}

uint64_t type metadata accessor for MapManager()
{
  return self;
}

void sub_1001E9D8C(uint64_t a1)
{
  uint64_t v2 = _s10VisitAssetC9VisitDataVMa(0);
  __chkstk_darwin(v2);
  id v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(a1 + 16);
  if (v6)
  {
    uint64_t v7 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v8 = *(void *)(v3 + 72);
    swift_bridgeObjectRetain();
    double v9 = (double *)_swiftEmptyArrayStorage;
    do
    {
      sub_10003F820(v7, (uint64_t)v5);
      uint64_t v10 = *(int *)(v2 + 44);
      id v11 = &v5[*(int *)(v2 + 40)];
      if (v11[8]) {
        double v12 = INFINITY;
      }
      else {
        double v12 = *(double *)v11;
      }
      if (v5[v10 + 8]) {
        double v13 = INFINITY;
      }
      else {
        double v13 = *(double *)&v5[v10];
      }
      sub_10003F884((uint64_t)v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        double v9 = (double *)sub_1002A5A10(0, *((void *)v9 + 2) + 1, 1, v9);
      }
      unint64_t v15 = *((void *)v9 + 2);
      unint64_t v14 = *((void *)v9 + 3);
      if (v15 >= v14 >> 1) {
        double v9 = (double *)sub_1002A5A10((void *)(v14 > 1), v15 + 1, 1, v9);
      }
      *((void *)v9 + 2) = v15 + 1;
      double v16 = &v9[2 * v15];
      v16[4] = v12;
      v16[5] = v13;
      v7 += v8;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    double v9 = (double *)_swiftEmptyArrayStorage;
  }
  unint64_t v17 = *((void *)v9 + 2);
  unint64_t v18 = v17 != 0;
  if (v17 == v18)
  {
LABEL_22:
    swift_bridgeObjectRelease();
  }
  else
  {
    id v19 = &v9[2 * v18 + 5];
    while (v18 < v17)
    {
      if (*(v19 - 1) == v9[4] && *v19 == v9[5])
      {
        ++v18;
        v19 += 2;
        if (v17 != v18) {
          continue;
        }
      }
      goto LABEL_22;
    }
    __break(1u);
  }
}

uint64_t sub_1001E9FC0(uint64_t a1, char a2)
{
  uint64_t result = 1;
  switch(a2)
  {
    case 1:
    case 3:
    case 4:
      if (*(void *)(a1 + 16))
      {
        sub_1001E9D8C(a1);
        if ((v4 & 1) == 0) {
          goto LABEL_5;
        }
      }
      uint64_t result = 2;
      break;
    case 2:
      return result;
    case 5:
LABEL_5:
      uint64_t result = 4;
      break;
    default:
      if (*(void *)(a1 + 16) == 1)
      {
        uint64_t result = 0;
      }
      else
      {
        sub_1001E9D8C(a1);
        uint64_t result = (v5 & 1) == 0;
      }
      break;
  }
  return result;
}

uint64_t sub_1001EA06C(uint64_t a1)
{
  uint64_t v2 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v3 = *((void *)v2 - 1);
  __chkstk_darwin(v2);
  uint64_t v65 = (uint64_t)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (uint64_t *)((char *)&v58 - v6);
  uint64_t v8 = _swiftEmptyArrayStorage;
  unint64_t v9 = sub_100397F2C((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v10 = *(void *)(a1 + 16);
  if (!v10)
  {
LABEL_36:
    swift_bridgeObjectRelease();
    return (uint64_t)v8;
  }
  uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v12 = *(void *)(v3 + 72);
  uint64_t v58 = a1;
  swift_bridgeObjectRetain();
  uint64_t v59 = v12;
  while (1)
  {
    sub_10003F820(v11, (uint64_t)v7);
    unint64_t v15 = (double *)((char *)v7 + v2[10]);
    if ((_BYTE)v15[1]) {
      goto LABEL_4;
    }
    double v16 = (double *)((char *)v7 + v2[11]);
    if ((_BYTE)v16[1]) {
      goto LABEL_4;
    }
    double v17 = *v15;
    double v18 = *v16;
    if (*(void *)(v9 + 16))
    {
      sub_10001BAD0(v17, *v16);
      if (v19) {
        goto LABEL_4;
      }
    }
    uint64_t v20 = (uint64_t *)((char *)v7 + v2[13]);
    unint64_t v21 = v20[1];
    int v64 = *((unsigned __int8 *)v7 + v2[14]);
    if (v21 >> 60 == 15)
    {
      id v22 = 0;
    }
    else
    {
      uint64_t v23 = *v20;
      sub_100040D64(*v20, v21);
      id v22 = (void *)sub_10003F8E0(v23, v21);
      sub_100040DBC(v23, v21);
    }
    double v24 = (char *)v7 + v2[16];
    uint64_t v25 = *(void *)v24;
    int v26 = v24[8];
    sub_10003F820((uint64_t)v7, v65);
    if (v26 == 1)
    {
      id v27 = (uint64_t *)(v65 + v2[15]);
      if (v27[1])
      {
        uint64_t v25 = 0;
        if (v22)
        {
          id v28 = [v22 placemark];
          id v29 = [v28 location];

          if (v29)
          {
            [v29 horizontalAccuracy];
            uint64_t v25 = v30;
          }
        }
      }
      else
      {
        uint64_t v25 = *v27;
      }
    }
    sub_10003F884(v65);
    double v31 = (void *)v7[1];
    uint64_t v63 = v8;
    if (v31)
    {
      uint64_t v66 = *v7;
      id v32 = v31;
    }
    else
    {
      uint64_t v66 = 0;
      id v32 = (void *)0xE000000000000000;
    }
    id v33 = v22;
    swift_bridgeObjectRetain();
    id v62 = v33;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v67 = (void *)v9;
    unint64_t v36 = sub_10001BAD0(v17, v18);
    uint64_t v37 = *(void *)(v9 + 16);
    BOOL v38 = (v35 & 1) == 0;
    uint64_t v39 = v37 + v38;
    if (__OFADD__(v37, v38)) {
      break;
    }
    char v40 = v35;
    if (*(void *)(v9 + 24) >= v39)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_100549CB4();
      }
    }
    else
    {
      sub_100545FFC(v39, isUniquelyReferenced_nonNull_native);
      uint64_t v41 = sub_10001BAD0(v17, v18);
      if ((v40 & 1) != (v42 & 1)) {
        goto LABEL_39;
      }
      unint64_t v36 = v41;
    }
    char v43 = v64 & 1;
    Swift::String v44 = v67;
    uint64_t v60 = v22;
    unint64_t v61 = (unint64_t)v67;
    v64 &= 1u;
    if (v40)
    {
      uint64_t v45 = v67[7] + 104 * v36;
      uint64_t v46 = v2;
      id v47 = *(void **)(v45 + 16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();

      uint64_t v2 = v46;
      char v48 = v64;
      swift_bridgeObjectRelease();
      *(double *)uint64_t v45 = v17;
      *(double *)(v45 + 8) = v18;
      *(void *)(v45 + 16) = v22;
      *(void *)(v45 + 24) = 0;
      *(unsigned char *)(v45 + 32) = 1;
      *(void *)(v45 + 40) = v66;
      *(void *)(v45 + 48) = v32;
      *(unsigned char *)(v45 + 56) = v48;
      *(void *)(v45 + 64) = 0;
      *(void *)(v45 + 72) = 0;
      *(void *)(v45 + 80) = v25;
      *(void *)(v45 + 88) = 0;
      *(void *)(v45 + 96) = 0xE000000000000000;
    }
    else
    {
      v67[(v36 >> 6) + 8] |= 1 << v36;
      Swift::String v49 = (double *)(v44[6] + 16 * v36);
      double *v49 = v17;
      v49[1] = v18;
      uint64_t v50 = v44[7] + 104 * v36;
      *(double *)uint64_t v50 = v17;
      *(double *)(v50 + 8) = v18;
      *(void *)(v50 + 16) = v22;
      *(void *)(v50 + 24) = 0;
      *(unsigned char *)(v50 + 32) = 1;
      *(void *)(v50 + 40) = v66;
      *(void *)(v50 + 48) = v32;
      *(unsigned char *)(v50 + 56) = v43;
      *(void *)(v50 + 64) = 0;
      *(void *)(v50 + 72) = 0;
      *(void *)(v50 + 80) = v25;
      *(void *)(v50 + 88) = 0;
      *(void *)(v50 + 96) = 0xE000000000000000;
      uint64_t v51 = v44[2];
      BOOL v52 = __OFADD__(v51, 1);
      uint64_t v53 = v51 + 1;
      if (v52) {
        goto LABEL_38;
      }
      _OWORD v44[2] = v53;
    }
    swift_bridgeObjectRelease();
    id v54 = v62;
    id v62 = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v8 = v63;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v8 = sub_1002A60B8(0, v8[2] + 1, 1, v8);
    }
    unint64_t v9 = v61;
    unint64_t v56 = v8[2];
    unint64_t v55 = v8[3];
    if (v56 >= v55 >> 1) {
      uint64_t v8 = sub_1002A60B8((void *)(v55 > 1), v56 + 1, 1, v8);
    }
    v8[2] = v56 + 1;
    double v13 = (double *)&v8[13 * v56];
    v13[4] = v17;
    v13[5] = v18;
    *((void *)v13 + 6) = v60;
    v13[7] = 0.0;
    *((unsigned char *)v13 + 64) = 1;
    id v14 = v62;
    *((void *)v13 + 9) = v66;
    *((void *)v13 + 10) = v14;
    *((unsigned char *)v13 + 88) = v64;
    v13[12] = 0.0;
    v13[13] = 0.0;
    *((void *)v13 + 14) = v25;
    v13[15] = 0.0;
    v13[16] = -2.68156159e154;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    uint64_t v12 = v59;
LABEL_4:
    sub_10003F884((uint64_t)v7);
    v11 += v12;
    if (!--v10)
    {
      swift_bridgeObjectRelease();
      goto LABEL_36;
    }
  }
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  type metadata accessor for CLLocationCoordinate2D(0);
  uint64_t result = KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
  __break(1u);
  return result;
}

BOOL sub_1001EA5E4(double a1, double a2, double a3, double a4)
{
  if (a1 < -90.0 || a1 > 90.0 || a2 < -180.0 || a2 > 180.0) {
    return 0;
  }
  BOOL v7 = a4 >= 0.0;
  if (a4 > 360.0) {
    BOOL v7 = 0;
  }
  if (a3 > 180.0) {
    BOOL v7 = 0;
  }
  return a3 >= 0.0 && v7;
}

void sub_1001EA664(void *a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return;
  }
  id v3 = [a1 memberAnnotations];
  sub_100010218((uint64_t *)&unk_1007FEAC0);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_4;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v15 = sub_1001EA06C(a2);
    id v16 = [self currentTraitCollection];
    double v17 = (void *)sub_100311520(v15, 0, 5, v16, 1);

    swift_bridgeObjectRelease();
    [v17 region];
    swift_bridgeObjectRelease();

    return;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    goto LABEL_15;
  }
LABEL_4:
  sub_100095DF8(0, v5 & ~(v5 >> 63), 0);
  if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    do
    {
      if ((v4 & 0xC000000000000001) != 0)
      {
        BOOL v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        BOOL v7 = *(void **)(v4 + 8 * v6 + 32);
        swift_unknownObjectRetain();
      }
      [v7 coordinate];
      uint64_t v9 = v8;
      uint64_t v11 = v10;
      swift_unknownObjectRelease();
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        sub_100095DF8(v12 > 1, v13 + 1, 1);
      }
      ++v6;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      id v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v9;
      v14[5] = v11;
    }
    while (v5 != v6);
    goto LABEL_15;
  }
  __break(1u);
}

uint64_t sub_1001EA8CC(char a1)
{
  LOBYTE(v5) = a1;
  uint64_t v1 = type metadata accessor for ImageResource();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v5;
  switch((char)v5)
  {
    case 1:
      if (qword_1007F7B40 != -1) {
        swift_once();
      }
      uint64_t v5 = qword_10083E828;
      id v6 = (id)qword_10083E828;
      break;
    case 2:
      if (qword_1007F7B68 != -1) {
        swift_once();
      }
      uint64_t v5 = qword_10083E850;
      id v7 = (id)qword_10083E850;
      break;
    case 3:
      if (qword_1007F7B70 != -1) {
        swift_once();
      }
      uint64_t v5 = qword_10083E858;
      id v8 = (id)qword_10083E858;
      break;
    case 4:
      if (qword_1007F7B78 != -1) {
        swift_once();
      }
      uint64_t v5 = qword_10083E860;
      id v9 = (id)qword_10083E860;
      break;
    case 5:
      if (qword_1007F7B80 != -1) {
        swift_once();
      }
      uint64_t v5 = qword_10083E868;
      id v10 = (id)qword_10083E868;
      break;
    case 6:
      if (qword_1007F7B90 != -1) {
        swift_once();
      }
      uint64_t v5 = qword_10083E878;
      id v11 = (id)qword_10083E878;
      break;
    case 7:
      if (qword_1007F7B88 != -1) {
        swift_once();
      }
      uint64_t v5 = qword_10083E870;
      id v12 = (id)qword_10083E870;
      break;
    case 8:
      if (qword_1007F7BB0 != -1) {
        swift_once();
      }
      uint64_t v5 = qword_10083E898;
      id v13 = (id)qword_10083E898;
      break;
    case 9:
      if (qword_1007F7B98 != -1) {
        swift_once();
      }
      uint64_t v5 = qword_10083E880;
      id v14 = (id)qword_10083E880;
      break;
    case 10:
      if (qword_1007F7BA0 != -1) {
        swift_once();
      }
      uint64_t v5 = qword_10083E888;
      id v15 = (id)qword_10083E888;
      break;
    case 11:
      sub_1001EB508();
      if (qword_1007F8020 != -1) {
        swift_once();
      }
      uint64_t v16 = sub_100026A54(v1, (uint64_t)qword_10083F180);
      (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v16, v1);
      uint64_t v5 = UIImage.init(resource:)();
      break;
    default:
      return v5;
  }
  return v5;
}

uint64_t FilterOption.description.getter(char a1)
{
  switch(a1)
  {
    case 1:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v2 = 0xD000000000000025;
      unint64_t v10 = 0x800000010068FED0;
      unint64_t v3 = 0x6B72616D6B6F6F42;
      unint64_t v4 = 0xEA00000000006465;
      goto LABEL_15;
    case 2:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v10 = 0x800000010068FEA0;
      unint64_t v3 = 0x736F746F6850;
      goto LABEL_12;
    case 3:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v10 = 0x800000010068FE70;
      unint64_t v3 = 0x736F65646956;
      goto LABEL_12;
    case 4:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v2 = 0xD000000000000029;
      unint64_t v10 = 0x800000010068FE40;
      unint64_t v3 = 0x646564726F636552;
      unint64_t v4 = 0xEE006F6964754120;
      goto LABEL_15;
    case 5:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v3 = 0xD000000000000010;
      unint64_t v2 = 0xD00000000000002BLL;
      unint64_t v10 = 0x800000010068FE10;
      unint64_t v4 = 0x800000010068FDF0;
      goto LABEL_15;
    case 6:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v2 = 0xD000000000000023;
      unint64_t v10 = 0x800000010068FDC0;
      unint64_t v3 = 0x7974697669746341;
      unint64_t v4 = 0xE800000000000000;
      goto LABEL_15;
    case 7:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v2 = 0xD000000000000026;
      unint64_t v4 = 0xEB00000000736E6FLL;
      unint64_t v10 = 0x800000010068FD90;
      unint64_t v3 = 0x697463656C666552;
      goto LABEL_15;
    case 8:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v2 = 0xD000000000000028;
      unint64_t v10 = 0x800000010068FD60;
      unint64_t v3 = 0x61737265766E6F43;
      unint64_t v4 = 0xED0000736E6F6974;
      goto LABEL_15;
    case 9:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v10 = 0x800000010068FD30;
      unint64_t v3 = 0x736563616C50;
LABEL_12:
      unint64_t v4 = 0xE600000000000000;
      v5.super.Class isa = v1;
      uint64_t v6 = 0;
      unint64_t v7 = 0xE000000000000000;
      unint64_t v2 = 0xD000000000000021;
      goto LABEL_16;
    case 10:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v2 = 0xD000000000000028;
      unint64_t v10 = 0x800000010068FD00;
      unint64_t v3 = 0x666F206574617453;
      unint64_t v4 = 0xED0000646E694D20;
      goto LABEL_15;
    case 11:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v2 = 0xD000000000000020;
      unint64_t v10 = 0x800000010068FCD0;
      unint64_t v3 = 0x6C6E4F2074786554;
      unint64_t v4 = 0xE900000000000079;
      goto LABEL_15;
    default:
      uint64_t v1 = (objc_class *)[self mainBundle];
      unint64_t v2 = 0xD000000000000026;
      unint64_t v10 = 0x800000010068FF00;
      unint64_t v3 = 0x72746E45206C6C41;
      unint64_t v4 = 0xEB00000000736569;
LABEL_15:
      v5.super.Class isa = v1;
      uint64_t v6 = 0;
      unint64_t v7 = 0xE000000000000000;
LABEL_16:
      uint64_t countAndFlagsBits = NSLocalizedString(_:tableName:bundle:value:comment:)(*(Swift::String *)&v3, (Swift::String_optional)0, v5, *(Swift::String *)&v6, *(Swift::String *)&v2)._countAndFlagsBits;

      return countAndFlagsBits;
  }
}

BOOL static FilterOption.< infix(_:_:)(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 < a2;
}

uint64_t sub_1001EB1F4(char a1)
{
  return (uint64_t)*(&off_10079E140 + a1);
}

_UNKNOWN **static FilterOption.allCases.getter()
{
  return &off_100793A48;
}

unint64_t sub_1001EB218@<X0>(unint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = _s7Journal12FilterOptionO8rawValueACSgSi_tcfC_0(*a1);
  *a2 = result;
  return result;
}

void sub_1001EB244(void *a1@<X8>)
{
  *a1 = &off_100793A48;
}

uint64_t sub_1001EB254()
{
  return FilterOption.description.getter(*v0);
}

BOOL sub_1001EB25C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_1001EB270(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_1001EB284(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_1001EB298(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

unint64_t _s7Journal12FilterOptionO8rawValueACSgSi_tcfC_0(unint64_t result)
{
  if (result >= 0xC) {
    return 12;
  }
  return result;
}

unint64_t sub_1001EB2C0()
{
  unint64_t result = qword_100803128;
  if (!qword_100803128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100803128);
  }
  return result;
}

unint64_t sub_1001EB318()
{
  unint64_t result = qword_100803130;
  if (!qword_100803130)
  {
    sub_100014440(&qword_100803138);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100803130);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for FilterOption(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FilterOption(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1001EB4D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FilterOption()
{
  return &type metadata for FilterOption;
}

unint64_t sub_1001EB508()
{
  unint64_t result = qword_10080A1F0;
  if (!qword_10080A1F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10080A1F0);
  }
  return result;
}

id sub_1001EB548()
{
  id result = [objc_allocWithZone((Class)UICubicTimingParameters) initWithControlPoint1:0.42 controlPoint2:0.0, 1.0];
  qword_10083D138 = (uint64_t)result;
  return result;
}

id sub_1001EB590()
{
  id result = [objc_allocWithZone((Class)UICubicTimingParameters) initWithControlPoint1:0.25 controlPoint2:0.1];
  qword_10083D140 = (uint64_t)result;
  return result;
}

id sub_1001EB5D8()
{
  id result = [objc_allocWithZone((Class)UICubicTimingParameters) initWithControlPoint1:0.25 controlPoint2:0.1];
  qword_10083D148 = (uint64_t)result;
  return result;
}

void sub_1001EB620(void *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v6 = (char *)[objc_allocWithZone((Class)type metadata accessor for VariableBlurView()) init];
  *(void *)&v6[OBJC_IVAR____TtC7Journal16VariableBlurView_blurRadius] = 0;
  id v7 = [v6 layer];
  Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  NSString v9 = String._bridgeToObjectiveC()();
  [v7 setValue:isa forKeyPath:v9];

  if (qword_1007F6B60 != -1) {
    swift_once();
  }
  id v10 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:qword_10083D138 timingParameters:0.28];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v3;
  id v32 = sub_1001EBEFC;
  id v33 = (void *)v11;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_10017D530;
  double v31 = &unk_10079E1C8;
  id v12 = _Block_copy(&aBlock);
  id v13 = a1;
  swift_release();
  [v10 addAnimations:v12];
  _Block_release(v12);
  if (qword_1007F6B68 != -1) {
    swift_once();
  }
  id v14 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:qword_10083D140 timingParameters:0.12];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v13;
  id v32 = sub_100010950;
  id v33 = (void *)v15;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_10017D530;
  double v31 = &unk_10079E218;
  uint64_t v16 = _Block_copy(&aBlock);
  id v17 = v13;
  swift_release();
  [v14 addAnimations:v16];
  _Block_release(v16);
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = a2;
  _OWORD v18[3] = a3;
  v18[4] = v17;
  v18[5] = v6;
  v18[6] = v3;
  id v32 = sub_1001EBF64;
  id v33 = v18;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_1001EBC80;
  double v31 = &unk_10079E268;
  char v19 = _Block_copy(&aBlock);
  id v20 = v17;
  swift_retain();
  unint64_t v21 = v6;
  swift_release();
  [v14 addCompletion:v19];
  _Block_release(v19);
  [v20 addSubview:v21];
  id v22 = v21;
  [v20 bounds];
  [v22 setFrame:];

  if (qword_1007F6B70 != -1) {
    swift_once();
  }
  id v23 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:qword_10083D148 timingParameters:0.12];
  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v22;
  *(void *)(v24 + 24) = v3;
  id v32 = sub_1001EBF74;
  id v33 = (void *)v24;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v29 = 1107296256;
  uint64_t v30 = sub_10017D530;
  double v31 = &unk_10079E2B8;
  uint64_t v25 = _Block_copy(&aBlock);
  int v26 = v22;
  swift_release();
  [v23 addAnimations:v25];
  _Block_release(v25);
  [v10 startAnimation];
  [v14 startAnimationAfterDelay:0.1];
  [v23 startAnimation];
}

void sub_1001EBB4C(void *a1)
{
  id v1 = [a1 layer];
  CATransform3DMakeScale(&v2, 0.95, 0.95, 1.0);
  [v1 setTransform:&v2];
}

uint64_t sub_1001EBBDC(uint64_t result, void (*a2)(void (*)(), void *), uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  if (!result)
  {
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = a4;
    void v11[3] = a5;
    v11[4] = a6;
    id v12 = a4;
    id v13 = a5;
    a2(sub_1001EBFBC, v11);
    return swift_release();
  }
  return result;
}

uint64_t sub_1001EBC80(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

void sub_1001EBCD4(char *a1)
{
  *(void *)&a1[OBJC_IVAR____TtC7Journal16VariableBlurView_blurRadius] = 8;
  id v1 = [a1 layer];
  Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  NSString v3 = String._bridgeToObjectiveC()();
  [v1 setValue:isa forKeyPath:v3];
}

id sub_1001EBD88()
{
  id result = [objc_allocWithZone((Class)UICubicTimingParameters) initWithControlPoint1:0.35 controlPoint2:0.1, 0.15, 1.0];
  qword_10083D150 = (uint64_t)result;
  return result;
}

id sub_1001EBDE0()
{
  id result = [objc_allocWithZone((Class)UICubicTimingParameters) initWithControlPoint1:0.25 controlPoint2:0.1];
  qword_10083D158 = (uint64_t)result;
  return result;
}

id sub_1001EBE68()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FadeBlurTransition();
  return [super dealloc];
}

uint64_t type metadata accessor for FadeBlurTransition()
{
  return self;
}

uint64_t sub_1001EBEC4()
{
  return swift_deallocObject();
}

void sub_1001EBEFC()
{
  sub_1001EBB4C(*(void **)(v0 + 16));
}

uint64_t sub_1001EBF04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001EBF14()
{
  return swift_release();
}

uint64_t sub_1001EBF1C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001EBF64(uint64_t a1)
{
  return sub_1001EBBDC(a1, *(void (**)(void (*)(), void *))(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48));
}

void sub_1001EBF74()
{
  sub_1001EBCD4(*(char **)(v0 + 16));
}

uint64_t sub_1001EBF7C()
{
  return swift_deallocObject();
}

void sub_1001EBFBC()
{
  sub_1001EBFC8(*(void **)(v0 + 16), *(void **)(v0 + 24), 0.0);
}

void sub_1001EBFC8(void *a1, void *a2, double a3)
{
  if (qword_1007F6B78 != -1) {
    swift_once();
  }
  id v6 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:qword_10083D150 timingParameters:0.3];
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  uint64_t v18 = sub_1001EC290;
  uint64_t v19 = v7;
  id v14 = _NSConcreteStackBlock;
  uint64_t v15 = 1107296256;
  uint64_t v16 = sub_10017D530;
  id v17 = &unk_10079E330;
  int v8 = _Block_copy(&v14);
  id v9 = a1;
  swift_release();
  [v6 addAnimations:v8];
  _Block_release(v8);
  if (qword_1007F6B80 != -1) {
    swift_once();
  }
  id v10 = [objc_allocWithZone((Class)UIViewPropertyAnimator) initWithDuration:qword_10083D158 timingParameters:0.23];
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v9;
  uint64_t v18 = sub_1001EC298;
  uint64_t v19 = v11;
  id v14 = _NSConcreteStackBlock;
  uint64_t v15 = 1107296256;
  uint64_t v16 = sub_10017D530;
  id v17 = &unk_10079E380;
  id v12 = _Block_copy(&v14);
  id v13 = v9;
  swift_release();
  [v10 addAnimations:v12];
  _Block_release(v12);
  [a2 removeFromSuperview];
  [v6 startAnimationAfterDelay:a3];
  [v10 startAnimationAfterDelay:a3];
}

uint64_t sub_1001EC258()
{
  return swift_deallocObject();
}

void sub_1001EC290()
{
  sub_10000C294(*(void **)(v0 + 16));
}

id sub_1001EC298()
{
  return [*(id *)(v0 + 16) setAlpha:1.0];
}

uint64_t sub_1001EC2E0()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal14MediaAssetView____lazy_storage___musicPlayerManager;
  if (*(void *)(v0 + OBJC_IVAR____TtC7Journal14MediaAssetView____lazy_storage___musicPlayerManager))
  {
    uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Journal14MediaAssetView____lazy_storage___musicPlayerManager);
  }
  else
  {
    if (qword_1007F6D58 != -1) {
      swift_once();
    }
    uint64_t v2 = qword_10083D310;
    *(void *)(v0 + v1) = qword_10083D310;
    swift_retain_n();
    swift_release();
  }
  swift_retain();
  return v2;
}

void sub_1001EC380()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_1001ECFE8();
  }
}

id sub_1001EC3D4(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC7Journal14MediaAssetView____lazy_storage___musicPlayerManager] = 0;
  uint64_t v9 = OBJC_IVAR____TtC7Journal14MediaAssetView_assetImageView;
  id v10 = objc_allocWithZone((Class)UIImageView);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  *(void *)&v11[OBJC_IVAR____TtC7Journal14MediaAssetView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v11[OBJC_IVAR____TtC7Journal14MediaAssetView_playbackStateObserver] = 0;
  v11[OBJC_IVAR____TtC7Journal14MediaAssetView_mediaType] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal14MediaAssetView_mediaAsset] = 0;
  id v12 = &v11[OBJC_IVAR____TtC7Journal14MediaAssetView_latestImageRequestID];
  uint64_t v13 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);

  v16.receiver = v11;
  v16.super_class = (Class)type metadata accessor for MediaAssetView();
  [super initWithFrame:a1, a2, a3, a4];
  sub_1001EC6BC();

  return v14;
}

id sub_1001EC550(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal14MediaAssetView____lazy_storage___musicPlayerManager] = 0;
  uint64_t v3 = OBJC_IVAR____TtC7Journal14MediaAssetView_assetImageView;
  id v4 = objc_allocWithZone((Class)UIImageView);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC7Journal14MediaAssetView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v5[OBJC_IVAR____TtC7Journal14MediaAssetView_playbackStateObserver] = 0;
  v5[OBJC_IVAR____TtC7Journal14MediaAssetView_mediaType] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal14MediaAssetView_mediaAsset] = 0;
  id v6 = &v5[OBJC_IVAR____TtC7Journal14MediaAssetView_latestImageRequestID];
  uint64_t v7 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);

  v12.receiver = v5;
  v12.super_class = (Class)type metadata accessor for MediaAssetView();
  [super initWithCoder:a1];
  id v9 = v8;
  if (v8)
  {
    id v10 = v8;
    sub_1001EC6BC();
  }
  return v9;
}

void sub_1001EC6BC()
{
  id v1 = [self clearColor];
  [v0 setBackgroundColor:v1];

  [v0 addSubview:*(void *)&v0[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView]];
  uint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC7Journal14MediaAssetView_assetImageView];
  [v0 addSubview:v2];
  [v2 setAlpha:0.0];
  [v2 setContentMode:2];
  [v2 setIsAccessibilityElement:1];
  UIAccessibilityTraits v3 = UIAccessibilityTraitImage;
  unint64_t v4 = (unint64_t)[v2 accessibilityTraits];
  if ((v3 & ~v4) != 0) {
    UIAccessibilityTraits v5 = v3;
  }
  else {
    UIAccessibilityTraits v5 = 0;
  }
  [v2 setAccessibilityTraits:v5 | v4];
  [v2 setAccessibilityIgnoresInvertColors:1];
  if (qword_1007F7AB8 != -1) {
    swift_once();
  }
  NSString v6 = String._bridgeToObjectiveC()();
  [v2 setAccessibilityLabel:v6];

  NSString v7 = String._bridgeToObjectiveC()();
  [v0 setAccessibilityIdentifier:v7];
}

void sub_1001EC884(void *a1)
{
  uint64_t v2 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  uint64_t v43 = *(void *)(v2 - 8);
  uint64_t v44 = v2;
  __chkstk_darwin(v2);
  unint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_1007F9DD8);
  __chkstk_darwin(v5 - 8);
  NSString v7 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = _s12PodcastAssetC11PodcastDataVMa(0);
  uint64_t v42 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_1007F8F98);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = _s10MusicAssetC9MusicDataVMa(0);
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  id v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100010218(&qword_1007F9E58);
  __chkstk_darwin(v18 - 8);
  id v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10MusicAssetCMa(0);
  uint64_t v21 = swift_dynamicCastClass();
  id v46 = a1;
  if (v21)
  {
    if (*(void *)(v21 + OBJC_IVAR____TtCC7Journal10Journaling10MusicAsset_metadata))
    {
      id v22 = v46;
      swift_retain();
      sub_100039F48((uint64_t)v20);

      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14))
      {
        sub_10001457C((uint64_t)v20, &qword_1007F9E58);
        LOBYTE(v23) = 0;
        goto LABEL_15;
      }
      sub_1001F00D8((uint64_t)v20, (uint64_t)v17, _s10MusicAssetC9MusicDataVMa);
      sub_10001457C((uint64_t)v20, &qword_1007F9E58);
      int v23 = v17[*(int *)(v14 + 44)];
      sub_1001F0078((uint64_t)v17, _s10MusicAssetC9MusicDataVMa);
      if (v23 != 8) {
        goto LABEL_15;
      }
    }
    LOBYTE(v23) = 0;
    goto LABEL_15;
  }
  uint64_t v25 = v42;
  uint64_t v24 = v43;
  uint64_t v26 = (uint64_t)v10;
  uint64_t v27 = v44;
  _s12PodcastAssetCMa(0);
  uint64_t v28 = swift_dynamicCastClass();
  if (v28)
  {
    if (*(void *)(v28 + OBJC_IVAR____TtCC7Journal10Journaling12PodcastAsset_metadata))
    {
      id v29 = v46;
      swift_retain();
      sub_10003A27C((uint64_t)v13);

      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v13, 1, v8))
      {
        sub_10001457C((uint64_t)v13, &qword_1007F8F98);
      }
      else
      {
        sub_1001F00D8((uint64_t)v13, v26, _s12PodcastAssetC11PodcastDataVMa);
        sub_10001457C((uint64_t)v13, &qword_1007F8F98);
        int v23 = *(unsigned __int8 *)(v26 + *(int *)(v8 + 40));
        sub_1001F0078(v26, _s12PodcastAssetC11PodcastDataVMa);
        if (v23 != 8) {
          goto LABEL_15;
        }
      }
    }
    LOBYTE(v23) = 2;
    goto LABEL_15;
  }
  _s9BookAssetCMa(0);
  if (swift_dynamicCastClass())
  {
    LOBYTE(v23) = 4;
    goto LABEL_15;
  }
  _s20ThirdPartyMediaAssetCMa(0);
  uint64_t v39 = swift_dynamicCastClass();
  uint64_t v30 = v45;
  if (v39)
  {
    if (*(void *)(v39 + OBJC_IVAR____TtCC7Journal10Journaling20ThirdPartyMediaAsset_metadata))
    {
      id v40 = v46;
      swift_retain();
      sub_10003A8E4((uint64_t)v7);

      swift_release();
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v7, 1, v27))
      {
        sub_1001F00D8((uint64_t)v7, (uint64_t)v4, _s20ThirdPartyMediaAssetC12MetadataTypeVMa);
        sub_10001457C((uint64_t)v7, &qword_1007F9DD8);
        LOBYTE(v23) = *v4;
        sub_1001F0078((uint64_t)v4, _s20ThirdPartyMediaAssetC12MetadataTypeVMa);
        goto LABEL_15;
      }
      sub_10001457C((uint64_t)v7, &qword_1007F9DD8);
    }
    LOBYTE(v23) = 5;
LABEL_15:
    uint64_t v30 = v45;
    *(unsigned char *)(v45 + OBJC_IVAR____TtC7Journal14MediaAssetView_mediaType) = v23;
  }
  uint64_t v31 = OBJC_IVAR____TtC7Journal14MediaAssetView_mediaAsset;
  id v32 = *(void **)(v30 + OBJC_IVAR____TtC7Journal14MediaAssetView_mediaAsset);
  id v33 = v46;
  *(void *)(v30 + OBJC_IVAR____TtC7Journal14MediaAssetView_mediaAsset) = v46;
  id v34 = v33;

  sub_1001ECFE8();
  uint64_t v35 = *(void *)(v30 + v31);
  if (v35)
  {
    uint64_t v36 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v37 = (void (**)())(v35 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
    uint64_t v38 = *(void *)(v35 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
    *uint64_t v37 = sub_1001F0070;
    v37[1] = (void (*)())v36;
    sub_10001ABB8(v38);
  }

  sub_1001EE630();
}

id sub_1001ECEAC(void *a1, uint64_t a2, SEL *a3)
{
  v5.receiver = a1;
  v5.super_class = (Class)type metadata accessor for MediaAssetView();
  return [super *a3];
}

void sub_1001ECEFC(void *a1, double a2, double a3, double a4, double a5, uint64_t a6, const char **a7)
{
  v16.receiver = a1;
  v16.super_class = (Class)type metadata accessor for MediaAssetView();
  uint64_t v12 = *a7;
  uint64_t v13 = (char *)v16.receiver;
  [super v12:a2, a3, a4, a5];
  id v14 = *(id *)&v13[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView];
  [v13 bounds];
  [v14 setFrame:];

  uint64_t v15 = *(void **)&v13[OBJC_IVAR____TtC7Journal14MediaAssetView_assetImageView];
  [v13 bounds];
  [v15 setFrame:];
}

void sub_1001ECFE8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v2 - 8);
  unint64_t v4 = &v51[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v51[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v60 = v7;
  __chkstk_darwin(v9);
  uint64_t v11 = &v51[-v10];
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  __chkstk_darwin(v14);
  unint64_t v61 = &v51[-v16];
  id v17 = *(void **)(v1 + OBJC_IVAR____TtC7Journal14MediaAssetView_mediaAsset);
  if (!v17) {
    return;
  }
  uint64_t v55 = v15;
  unint64_t v56 = v8;
  _s10MusicAssetCMa(0);
  uint64_t v18 = swift_dynamicCastClass();
  uint64_t v58 = v13;
  uint64_t v59 = v12;
  uint64_t v57 = v17;
  if (v18)
  {
    uint64_t v19 = v17;
    uint64_t v20 = v5;
    uint64_t v21 = *(void **)(v1 + OBJC_IVAR____TtC7Journal14MediaAssetView_assetImageView);
    id v22 = v19;
    sub_1000AF550();
    if (v23)
    {
LABEL_4:
      NSString v24 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
LABEL_8:
      [v21 setAccessibilityValue:v24];

      goto LABEL_9;
    }
LABEL_7:
    NSString v24 = 0;
    goto LABEL_8;
  }
  _s12PodcastAssetCMa(0);
  if (swift_dynamicCastClass())
  {
    uint64_t v25 = v17;
    uint64_t v20 = v5;
    uint64_t v21 = *(void **)(v1 + OBJC_IVAR____TtC7Journal14MediaAssetView_assetImageView);
    id v22 = v25;
    sub_100391E44();
    if (v26) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  _s9BookAssetCMa(0);
  if (swift_dynamicCastClass())
  {
    uint64_t v45 = v17;
    uint64_t v20 = v5;
    uint64_t v21 = *(void **)(v1 + OBJC_IVAR____TtC7Journal14MediaAssetView_assetImageView);
    id v22 = v45;
    sub_100047E08();
    if (v46) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  _s20ThirdPartyMediaAssetCMa(0);
  uint64_t v47 = swift_dynamicCastClass();
  char v48 = v17;
  if (v47)
  {
    uint64_t v20 = v5;
    uint64_t v21 = *(void **)(v1 + OBJC_IVAR____TtC7Journal14MediaAssetView_assetImageView);
    id v22 = v48;
    sub_10064A610();
    if (v49) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  uint64_t v20 = v5;
  id v50 = v48;
LABEL_9:
  Date.init()();
  uint64_t v27 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
  switch(*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType))
  {
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_15;
    default:
      char v28 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if (v28)
      {
LABEL_15:
        if (qword_1007F6A60 != -1) {
          swift_once();
        }
        id v29 = &qword_10083CF68;
      }
      else
      {
        if (qword_1007F6A58 != -1) {
          swift_once();
        }
        id v29 = &qword_10083CF60;
      }
      id v54 = (id)*v29;
      UUID.init()();
      uint64_t v30 = v11;
      uint64_t v31 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 16);
      uint64_t v53 = v30;
      v31(v4, v30, v20);
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v20);
      uint64_t v32 = v1 + OBJC_IVAR____TtC7Journal14MediaAssetView_latestImageRequestID;
      swift_beginAccess();
      sub_10001ACF4((uint64_t)v4, v32);
      swift_endAccess();
      unsigned int v52 = *(unsigned __int8 *)(v1 + v27);
      uint64_t v33 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v34 = v56;
      v31(v56, v30, v20);
      uint64_t v36 = v58;
      uint64_t v35 = v59;
      uint64_t v37 = v55;
      (*(void (**)(uint64_t, unsigned char *, uint64_t))(v58 + 16))(v55, v61, v59);
      unint64_t v38 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
      unint64_t v39 = (v60 + *(unsigned __int8 *)(v36 + 80) + v38) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
      uint64_t v40 = swift_allocObject();
      *(void *)(v40 + 16) = v33;
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v6 + 32))(v40 + v38, v34, v20);
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v36 + 32))(v40 + v39, v37, v35);
      uint64_t v41 = self;
      swift_retain();
      id v42 = [v41 currentTraitCollection];
      uint64_t v43 = v54;
      uint64_t v44 = v57;
      sub_10017D574(v52, 0, 1, v54, v42, (uint64_t)sub_1001EFD60, v40);

      swift_release();
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v53, v20);
      (*(void (**)(unsigned char *, uint64_t))(v36 + 8))(v61, v35);
      swift_release();
      break;
  }
}

uint64_t sub_1001ED6C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a3;
  uint64_t v31 = a4;
  uint64_t v33 = a1;
  uint64_t v36 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v39 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v35 = (char *)&v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  __chkstk_darwin(v5);
  id v34 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v29 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v29);
  char v28 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  uint64_t v32 = static OS_dispatch_queue.main.getter();
  uint64_t v13 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v30, v9);
  uint64_t v15 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v31, v29);
  unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v17 = (v11 + *(unsigned __int8 *)(v7 + 80) + v16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v33;
  *(void *)(v18 + 16) = v13;
  *(void *)(v18 + 24) = v19;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v18 + v16, v12, v9);
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v18 + v17, v28, v15);
  aBlock[4] = sub_1001EFF98;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  void aBlock[3] = &unk_10079E470;
  uint64_t v20 = _Block_copy(aBlock);
  id v21 = v19;
  swift_retain();
  id v22 = v34;
  static DispatchQoS.unspecified.getter();
  uint64_t v40 = _swiftEmptyArrayStorage;
  sub_1000E4FD0((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  NSString v24 = v35;
  uint64_t v23 = v36;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v25 = (void *)v32;
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v20);

  (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v23);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v22, v38);
  swift_release();
  return swift_release();
}

void sub_1001EDB94(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v64 = a4;
  uint64_t v68 = a3;
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v65 = *(void *)(v5 - 8);
  uint64_t v66 = v5;
  __chkstk_darwin(v5);
  uint64_t v60 = (char *)&v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v59 = (char *)&v59 - v8;
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v9 - 8);
  uint64_t v61 = (uint64_t)&v59 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  unint64_t v67 = (char *)&v59 - v12;
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v62 = (char *)&v59 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100010218((uint64_t *)&unk_1007FEB40);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v59 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v19 - 8);
  id v21 = (char *)&v59 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  NSString v24 = (char *)&v59 - v23;
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v59 - v26;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_7;
  }
  uint64_t v29 = Strong;
  id v63 = a2;
  if (!a2)
  {

LABEL_7:
    swift_beginAccess();
    uint64_t v35 = swift_unknownObjectWeakLoadStrong();
    if (!v35) {
      return;
    }
    uint64_t v36 = (void *)v35;
    int v37 = *(unsigned __int8 *)(v35 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading);
    *(unsigned char *)(v35 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading) = 1;
    if (v37 == 1 || !swift_unknownObjectWeakLoadStrong())
    {

      return;
    }
    sub_100491AF4();
    goto LABEL_29;
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v27, v68, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v27, 0, 1, v13);
  uint64_t v30 = (uint64_t)v29 + OBJC_IVAR____TtC7Journal14MediaAssetView_latestImageRequestID;
  swift_beginAccess();
  sub_10001B220(v30, (uint64_t)v24, &qword_100800950);
  uint64_t v31 = (uint64_t)&v18[*(int *)(v16 + 48)];
  sub_10001B220((uint64_t)v27, (uint64_t)v18, &qword_100800950);
  sub_10001B220((uint64_t)v24, v31, &qword_100800950);
  uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  if (v32((uint64_t)v18, 1, v13) == 1)
  {
    id v33 = v63;
    id v34 = v63;
    sub_10001457C((uint64_t)v24, &qword_100800950);
    sub_10001457C((uint64_t)v27, &qword_100800950);
    if (v32(v31, 1, v13) == 1)
    {
      sub_10001457C((uint64_t)v18, &qword_100800950);
      goto LABEL_16;
    }
LABEL_14:
    sub_10001457C((uint64_t)v18, (uint64_t *)&unk_1007FEB40);
    goto LABEL_30;
  }
  sub_10001B220((uint64_t)v18, (uint64_t)v21, &qword_100800950);
  if (v32(v31, 1, v13) == 1)
  {
    id v38 = v63;
    id v39 = v63;
    sub_10001457C((uint64_t)v24, &qword_100800950);
    sub_10001457C((uint64_t)v27, &qword_100800950);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v21, v13);
    id v33 = v38;
    goto LABEL_14;
  }
  uint64_t v40 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 32))(v62, v31, v13);
  sub_1000E4FD0((unint64_t *)&qword_1007FEB50, (void (*)(uint64_t))&type metadata accessor for UUID);
  id v41 = v63;
  LODWORD(v68) = dispatch thunk of static Equatable.== infix(_:_:)();
  id v42 = *(void (**)(char *, uint64_t))(v14 + 8);
  v42(v40, v13);
  sub_10001457C((uint64_t)v24, &qword_100800950);
  sub_10001457C((uint64_t)v27, &qword_100800950);
  v42(v21, v13);
  id v33 = v63;
  sub_10001457C((uint64_t)v18, &qword_100800950);
  if ((v68 & 1) == 0) {
    goto LABEL_30;
  }
LABEL_16:
  char v43 = 1;
  [*(id *)((char *)v29 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView) setHidden:1];
  uint64_t v44 = *(void **)((char *)v29 + OBJC_IVAR____TtC7Journal14MediaAssetView_assetImageView);
  [v44 setImage:v33];
  id v45 = [v44 setContentMode:2];
  (*(void (**)(id))((swift_isaMask & *v29) + 0x238))(v45);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v47 = v65;
  uint64_t v46 = v66;
  switch(*((unsigned char *)v29 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType))
  {
    case 5:
      break;
    default:
      char v43 = _stringCompareWithSmolCheck(_:_:expecting:)();
      break;
  }
  swift_retain_n();
  swift_bridgeObjectRelease();
  uint64_t v48 = (uint64_t)v67;
  (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v67, v64, v46);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v47 + 56))(v48, 0, 1, v46);
  if ((v43 & 1) == 0)
  {
    uint64_t v49 = v61;
    sub_10001B220(v48, v61, (uint64_t *)&unk_1007FC470);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48))(v49, 1, v46) == 1)
    {
      sub_10001457C(v49, (uint64_t *)&unk_1007FC470);
LABEL_24:
      static Animation.easeIn(duration:)();
      sub_10001B284(0, (unint64_t *)&qword_100802730);
      static UIView.animate(_:changes:completion:)();
      swift_release_n();
      swift_release();
      goto LABEL_26;
    }
    id v50 = v59;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 32))(v59, v49, v46);
    uint64_t v51 = v60;
    static Date.now.getter();
    Date.timeIntervalSince(_:)();
    double v53 = v52;
    id v54 = *(void (**)(char *, uint64_t))(v47 + 8);
    v54(v51, v46);
    v54(v50, v46);
    if (v53 >= 0.1) {
      goto LABEL_24;
    }
  }
  swift_beginAccess();
  uint64_t v55 = swift_unknownObjectWeakLoadStrong();
  if (v55)
  {
    unint64_t v56 = (void *)v55;
    id v57 = *(id *)(v55 + OBJC_IVAR____TtC7Journal14MediaAssetView_assetImageView);

    [v57 setAlpha:1.0];
    swift_release_n();
  }
  else
  {
    swift_release_n();
  }
LABEL_26:
  sub_10001457C(v48, (uint64_t *)&unk_1007FC470);
  swift_release();
  char v58 = *((unsigned char *)v29 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading);
  *((unsigned char *)v29 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading) = 1;
  if ((v58 & 1) == 0 && swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v36 = v29;
    sub_100491AF4();

LABEL_29:
    swift_unknownObjectRelease();
    return;
  }
LABEL_30:
}

void sub_1001EE5B4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC7Journal14MediaAssetView_assetImageView);

    [v2 setAlpha:1.0];
  }
}

void sub_1001EE630()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC7Journal14MediaAssetView_mediaAsset))
  {
    _s10MusicAssetCMa(0);
    if (swift_dynamicCastClass())
    {
      id v1 = [self defaultCenter];
      id v2 = [self mainQueue];
      uint64_t v3 = swift_allocObject();
      swift_unknownObjectWeakInit();
      v6[4] = sub_1001EFBE8;
      _OWORD v6[5] = v3;
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 1107296256;
      v6[2] = sub_1001EE860;
      v6[3] = &unk_10079E3F8;
      uint64_t v4 = _Block_copy(v6);
      swift_release();
      id v5 = [v1 addObserverForName:MPMusicPlayerControllerPlaybackStateDidChangeNotification object:0 queue:v2 usingBlock:v4];
      _Block_release(v4);

      *(void *)(v0 + OBJC_IVAR____TtC7Journal14MediaAssetView_playbackStateObserver) = v5;
      swift_unknownObjectRelease();
    }
  }
}

void sub_1001EE7C0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = (void *)Strong;
    uint64_t v2 = Strong + OBJC_IVAR____TtC7Journal14MediaAssetView_delegate;
    uint64_t v3 = swift_unknownObjectWeakLoadStrong();
    uint64_t v4 = *(void *)(v2 + 8);

    if (v3)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(ObjectType, v4);
      swift_unknownObjectRelease();
    }
  }
}

uint64_t sub_1001EE860(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Notification();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void (**)(char *))(a1 + 32);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  v6(v5);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1001EE954()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView);
  unint64_t v3 = 0xC0C0C0403030202uLL >> (8 * *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal14MediaAssetView_mediaType));
  uint64_t v4 = *(void (**)(unint64_t, uint64_t))((swift_isaMask & *v2) + 0x58);
  uint64_t v5 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
  uint64_t v6 = v2;
  v4(v3, v5);

  sub_1001ECFE8();
}

void *sub_1001EEA24()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14MediaAssetView_mediaAsset);
  id v2 = v1;
  return v1;
}

uint64_t sub_1001EEA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[7] = a5;
  v6[8] = a6;
  _OWORD v6[5] = a1;
  void v6[6] = a4;
  type metadata accessor for MainActor();
  v6[9] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[10] = v8;
  v6[11] = v7;
  return _swift_task_switch(sub_1001EEAF0, v8, v7);
}

uint64_t sub_1001EEAF0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 96) = Strong;
  if (Strong)
  {
    id v2 = (void *)Strong;
    *(void *)(v0 + 104) = sub_1001EC2E0();

    unint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v3;
    *unint64_t v3 = v0;
    v3[1] = sub_1001EEC14;
    uint64_t v5 = *(void *)(v0 + 56);
    uint64_t v4 = *(void *)(v0 + 64);
    return sub_1002BE374(v5, v4);
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 40) = *(void *)(v0 + 96) == 0;
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_1001EEC14()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_1001EED58, v3, v2);
}

uint64_t sub_1001EED58()
{
  swift_release();
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 96) == 0;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001EEDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v6;
  v4[9] = v5;
  return _swift_task_switch(sub_1001EEE64, v6, v5);
}

uint64_t sub_1001EEE64()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = sub_1001EC2E0();
    *(void *)(v0 + 88) = v3;

    return _swift_task_switch(sub_1001EEF50, v3, 0);
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 40) = *(void *)(v0 + 80) == 0;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1001EEF50()
{
  id v1 = sub_1002BE974();
  [v1 pause];

  swift_release();
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = *(void *)(v0 + 72);
  return _swift_task_switch(sub_1001EEFD0, v2, v3);
}

uint64_t sub_1001EEFD0()
{
  swift_release();
  **(unsigned char **)(v0 + 40) = *(void *)(v0 + 80) == 0;
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1001EF044()
{
  v1[2] = v0;
  sub_100010218(&qword_1007F9E58);
  v1[3] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[5] = v3;
  v1[6] = v2;
  return _swift_task_switch(sub_1001EF10C, v3, v2);
}

uint64_t sub_1001EF10C()
{
  id v1 = *(void **)(v0[2] + OBJC_IVAR____TtC7Journal14MediaAssetView_mediaAsset);
  v0[7] = v1;
  if (!v1 || (_s10MusicAssetCMa(0), !swift_dynamicCastClass()))
  {
    swift_release();
    goto LABEL_6;
  }
  uint64_t v2 = v0[3];
  id v3 = v1;
  sub_1003F4294(v2);
  uint64_t v4 = _s10MusicAssetC9MusicDataVMa(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v2, 1, v4) == 1)
  {
    uint64_t v5 = v0[3];
    swift_release();

    sub_10001457C(v5, &qword_1007F9E58);
LABEL_6:
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6(0);
  }
  uint64_t v8 = (uint64_t *)v0[3];
  uint64_t v9 = *v8;
  uint64_t v10 = v8[1];
  v0[8] = v10;
  swift_bridgeObjectRetain();
  sub_1001F0078((uint64_t)v8, _s10MusicAssetC9MusicDataVMa);
  v0[9] = sub_1001EC2E0();
  uint64_t v11 = (void *)swift_task_alloc();
  v0[10] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1001EF2DC;
  return sub_1002BE1F0(v9, v10);
}

uint64_t sub_1001EF2DC(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 88) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  return _swift_task_switch(sub_1001EF444, v4, v3);
}

uint64_t sub_1001EF444()
{
  id v1 = *(void **)(v0 + 56);
  swift_release();

  uint64_t v2 = *(unsigned __int8 *)(v0 + 88);
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1001EF4BC()
{
  swift_release();

  sub_1000109BC(v0 + OBJC_IVAR____TtC7Journal14MediaAssetView_delegate);
  swift_unknownObjectRelease();

  return sub_10001457C(v0 + OBJC_IVAR____TtC7Journal14MediaAssetView_latestImageRequestID, &qword_100800950);
}

id sub_1001EF538()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC7Journal14MediaAssetView_playbackStateObserver];
  if (v1)
  {
    uint64_t v2 = self;
    swift_unknownObjectRetain();
    id v3 = [v2 defaultCenter];
    [v3 removeObserver:v1];
    swift_unknownObjectRelease();
  }
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MediaAssetView();
  return [super dealloc];
}

uint64_t sub_1001EF720()
{
  return type metadata accessor for MediaAssetView();
}

uint64_t type metadata accessor for MediaAssetView()
{
  uint64_t result = qword_1008031C8;
  if (!qword_1008031C8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001EF774()
{
  sub_10001A7A4();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1001EF834()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v16 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218(&qword_1007F9E58);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14MediaAssetView_mediaAsset);
  if (v7)
  {
    _s10MusicAssetCMa(0);
    if (swift_dynamicCastClass())
    {
      id v8 = v7;
      sub_1003F4294((uint64_t)v6);
      uint64_t v9 = _s10MusicAssetC9MusicDataVMa(0);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v6, 1, v9) == 1)
      {

        sub_10001457C((uint64_t)v6, &qword_1007F9E58);
      }
      else
      {
        uint64_t v11 = *v6;
        uint64_t v10 = v6[1];
        swift_bridgeObjectRetain();
        sub_1001F0078((uint64_t)v6, _s10MusicAssetC9MusicDataVMa);
        uint64_t v12 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v3, 1, 1, v12);
        uint64_t v13 = swift_allocObject();
        swift_unknownObjectWeakInit();
        type metadata accessor for MainActor();
        swift_retain();
        uint64_t v14 = static MainActor.shared.getter();
        uint64_t v15 = (void *)swift_allocObject();
        v15[2] = v14;
        id v15[3] = &protocol witness table for MainActor;
        v15[4] = v13;
        v15[5] = v11;
        v15[6] = v10;
        swift_release();
        sub_100328C78((uint64_t)v3, (uint64_t)&unk_1008031F0, (uint64_t)v15);
        swift_release();
      }
    }
  }
}

uint64_t sub_1001EFAA0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1001EFAD8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1001EFB20(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10002C194;
  return sub_1001EEA54(a1, v4, v5, v6, v7, v8);
}

void sub_1001EFBE8()
{
}

uint64_t sub_1001EFBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001EFC00()
{
  return swift_release();
}

uint64_t sub_1001EFC08()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_1001EFD60(void *a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v3 + 64);
  uint64_t v6 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v8 = v1 + ((v4 + v5 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_1001ED6C0(a1, v7, v1 + v4, v8);
}

uint64_t sub_1001EFE38()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

void sub_1001EFF98()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v6 = *(void **)(v0 + 24);
  uint64_t v7 = v0 + ((v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  sub_1001EDB94(v5, v6, v0 + v2, v7);
}

void sub_1001F0068()
{
}

void sub_1001F0070()
{
}

uint64_t sub_1001F0078(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001F00D8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

id sub_1001F02EC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JurassicAlertController();
  [super dealloc];
}

uint64_t type metadata accessor for JurassicAlertController()
{
  return self;
}

double *sub_1001F0344()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC7Journal20CanvasViewController_assetsGridView)
                + OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  id v2 = [v1 visibleCells];
  sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    sub_10001B284(0, (unint64_t *)&qword_100802730);
    swift_bridgeObjectRetain();
    uint64_t v4 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10001B284(0, (unint64_t *)&qword_100802730);
    uint64_t v4 = v3;
  }
  swift_bridgeObjectRelease();
  return (double *)v4;
}

char *sub_1001F046C(void *a1)
{
  if (((*(uint64_t (**)(void))((swift_isaMask & *a1) + 0x200))() & 1) == 0) {
    return (char *)sub_10037DE04((uint64_t)a1, 0);
  }
  unint64_t v3 = *(char **)(v1 + OBJC_IVAR____TtC7Journal20CanvasViewController_slimAssetView);
  if (!*(void *)&v3[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset]) {
    return (char *)sub_10037DE04((uint64_t)a1, 0);
  }
  uint64_t v4 = *(void *)&v3[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 80))(ObjectType, v4);
  _s5AssetCMa();
  uint64_t v7 = a1;
  char v8 = static NSObject.== infix(_:_:)();

  if ((v8 & 1) == 0) {
    return (char *)sub_10037DE04((uint64_t)a1, 0);
  }
  uint64_t v9 = v3;
  return v3;
}

uint64_t sub_1001F058C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v15 = a2;
  uint64_t v4 = sub_100010218(&qword_1007F9F50);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100803338);
  uint64_t v16 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s15GenericMapAssetC14GenericMapDataVMa(0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_1001F3DD4();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v2)
  {
    _s10VisitAssetC9VisitDataVMa(0);
    sub_1001F3894(&qword_1007F9F18, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa);
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v7);
    sub_10002C4EC((uint64_t)v6, (uint64_t)v12, &qword_1007F9F50);
    sub_1001F39A4((uint64_t)v12, v15, _s15GenericMapAssetC14GenericMapDataVMa);
  }
  return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
}

uint64_t sub_1001F07EC()
{
  return 0x6144737469736976;
}

uint64_t sub_1001F0808@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6144737469736976 && a2 == 0xEA00000000006174)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = _stringCompareWithSmolCheck(_:_:expecting:)();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1001F08AC(uint64_t a1)
{
  unint64_t v2 = sub_1001F3DD4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1001F08E8(uint64_t a1)
{
  unint64_t v2 = sub_1001F3DD4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1001F0924@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1001F058C(a1, a2);
}

uint64_t sub_1001F093C(void *a1)
{
  uint64_t v2 = sub_100010218(&qword_100803348);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_1001F3DD4();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  _s10VisitAssetC9VisitDataVMa(0);
  sub_1001F3894(&qword_1007F9F30, (void (*)(uint64_t))_s10VisitAssetC9VisitDataVMa);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

id sub_1001F0AB0(int a1, uint64_t a2, char a3, uint64_t a4, void *a5, void *a6)
{
  int v12 = a3 & 1;
  uint64_t v13 = sub_100010218(&qword_1007F9DB8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v16 = objc_allocWithZone((Class)type metadata accessor for GenericMapThumbnailCacheOperation());
  uint64_t v17 = v6;
  swift_bridgeObjectRetain();
  id v18 = a6;
  id v19 = v16;
  sub_1003F2D04((uint64_t)v15);
  sub_10002C4EC((uint64_t)v15, (uint64_t)v19 + qword_10083D3B8, &qword_1007F9DB8);

  return sub_100529128(v17, a1, a2, v12, a4, a5, v18);
}

uint64_t sub_1001F0BD0(uint64_t a1, char a2, id a3)
{
  uint64_t v6 = v3 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id;
  id v7 = [a3 userInterfaceStyle];

  return sub_1003209E8(v6, a1, (uint64_t)v7, 0, 0, 1, a2);
}

uint64_t sub_1001F0C48()
{
  uint64_t v1 = sub_100010218(&qword_1007F9F50);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v24[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v4);
  uint64_t v6 = (uint64_t *)&v24[-v5];
  uint64_t v7 = sub_100010218(&qword_1007F9DB8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v24[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = _s15GenericMapAssetC14GenericMapDataVMa(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = __chkstk_darwin(v10);
  uint64_t v14 = &v24[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling15GenericMapAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56))(v9, 1, 1, v10, v12);
    goto LABEL_6;
  }
  swift_retain();
  sub_10003B080((uint64_t)v9);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
LABEL_6:
    sub_10001457C((uint64_t)v9, &qword_1007F9DB8);
    return 0;
  }
  sub_1001F39A4((uint64_t)v9, (uint64_t)v14, _s15GenericMapAssetC14GenericMapDataVMa);
  sub_100010218((uint64_t *)&unk_10080C370);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6270;
  sub_1001F38DC((uint64_t)v14, (uint64_t)v6);
  uint64_t v16 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v17 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 48);
  if (v17(v6, 1, v16) == 1)
  {
    sub_10001457C((uint64_t)v6, &qword_1007F9F50);
    uint64_t v18 = 0;
    uint64_t v19 = 0;
  }
  else
  {
    uint64_t v18 = *v6;
    uint64_t v19 = v6[1];
    swift_bridgeObjectRetain();
    sub_1001F3944((uint64_t)v6, _s10VisitAssetC9VisitDataVMa);
  }
  *(void *)(inited + 32) = v18;
  *(void *)(inited + 40) = v19;
  sub_1001F38DC((uint64_t)v14, (uint64_t)v3);
  if (v17((uint64_t *)v3, 1, v16) == 1)
  {
    sub_10001457C((uint64_t)v3, &qword_1007F9F50);
    uint64_t v21 = 0;
    uint64_t v22 = 0;
  }
  else
  {
    uint64_t v21 = *((void *)v3 + 2);
    uint64_t v22 = *((void *)v3 + 3);
    swift_bridgeObjectRetain();
    sub_1001F3944((uint64_t)v3, _s10VisitAssetC9VisitDataVMa);
  }
  *(void *)(inited + 48) = v21;
  *(void *)(inited + 56) = v22;
  uint64_t v20 = sub_10023DA38(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_100010218(&qword_100803920);
  swift_arrayDestroy();
  sub_1001F3944((uint64_t)v14, _s15GenericMapAssetC14GenericMapDataVMa);
  return v20;
}

uint64_t sub_1001F0FF8()
{
  return swift_release();
}

id sub_1001F1008()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s15GenericMapAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_1001F1050()
{
  return _s15GenericMapAssetCMa(0);
}

uint64_t _s15GenericMapAssetCMa(uint64_t a1)
{
  return sub_10003352C(a1, (uint64_t *)&unk_100803248);
}

uint64_t sub_1001F1078()
{
  return swift_updateClassMetadata2();
}

uint64_t *sub_1001F10BC(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *(void *)(sub_100010218(&qword_1007F9F50) - 8);
  int v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = v4;
    uint64_t v7 = (int *)_s10VisitAssetC9VisitDataVMa(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      uint64_t v11 = a2[3];
      a1[2] = a2[2];
      a1[3] = v11;
      uint64_t v12 = a2[5];
      a1[4] = a2[4];
      a1[5] = v12;
      uint64_t v13 = v7[7];
      uint64_t v50 = v8;
      __dst = (char *)a1 + v13;
      uint64_t v14 = (char *)a2 + v13;
      uint64_t v15 = type metadata accessor for Date();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v17(v14, 1, v15))
      {
        uint64_t v18 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(__dst, v14, *(void *)(*(void *)(v18 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(__dst, v14, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(__dst, 0, 1, v15);
      }
      uint64_t v19 = v7[8];
      uint64_t v20 = (char *)a1 + v19;
      uint64_t v21 = (char *)a2 + v19;
      if (v17((char *)a2 + v19, 1, v15))
      {
        uint64_t v22 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v20, v21, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v20, 0, 1, v15);
      }
      uint64_t v23 = v7[9];
      NSString v24 = (char *)a1 + v23;
      uint64_t v25 = (char *)a2 + v23;
      if (v17((char *)a2 + v23, 1, v15))
      {
        uint64_t v26 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v24, v25, v15);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v24, 0, 1, v15);
      }
      uint64_t v27 = v7[10];
      char v28 = (char *)a1 + v27;
      uint64_t v29 = (char *)a2 + v27;
      *(void *)char v28 = *(void *)v29;
      v28[8] = v29[8];
      uint64_t v30 = v7[11];
      uint64_t v31 = (char *)a1 + v30;
      uint64_t v32 = (char *)a2 + v30;
      *(void *)uint64_t v31 = *(void *)v32;
      v31[8] = v32[8];
      uint64_t v33 = v7[12];
      id v34 = (char *)a1 + v33;
      uint64_t v35 = (char *)a2 + v33;
      unint64_t v36 = *((void *)v35 + 1);
      if (v36 >> 60 == 15)
      {
        *(_OWORD *)id v34 = *(_OWORD *)v35;
      }
      else
      {
        uint64_t v37 = *(void *)v35;
        sub_100040D64(*(void *)v35, *((void *)v35 + 1));
        *(void *)id v34 = v37;
        *((void *)v34 + 1) = v36;
      }
      uint64_t v38 = v7[13];
      id v39 = (char *)a1 + v38;
      uint64_t v40 = (char *)a2 + v38;
      unint64_t v41 = *((void *)v40 + 1);
      if (v41 >> 60 == 15)
      {
        *(_OWORD *)id v39 = *(_OWORD *)v40;
      }
      else
      {
        uint64_t v42 = *(void *)v40;
        sub_100040D64(*(void *)v40, *((void *)v40 + 1));
        *(void *)id v39 = v42;
        *((void *)v39 + 1) = v41;
      }
      *((unsigned char *)a1 + v7[14]) = *((unsigned char *)a2 + v7[14]);
      uint64_t v43 = v7[15];
      uint64_t v44 = (char *)a1 + v43;
      id v45 = (char *)a2 + v43;
      *(void *)uint64_t v44 = *(void *)v45;
      v44[8] = v45[8];
      uint64_t v46 = v7[16];
      uint64_t v47 = (char *)a1 + v46;
      uint64_t v48 = (char *)a2 + v46;
      *(void *)uint64_t v47 = *(void *)v48;
      v47[8] = v48[8];
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v50 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1001F1554(uint64_t a1)
{
  objc_super v2 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((void *)v2 - 1) + 48))(a1, 1, v2);
  if (!result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = a1 + v2[7];
    uint64_t v5 = type metadata accessor for Date();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(v4, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    }
    uint64_t v8 = a1 + v2[8];
    if (!v7(v8, 1, v5)) {
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    }
    uint64_t v9 = a1 + v2[9];
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v7)(v9, 1, v5);
    if (!result) {
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
    }
    uint64_t v10 = (uint64_t *)(a1 + v2[12]);
    unint64_t v11 = v10[1];
    if (v11 >> 60 != 15) {
      uint64_t result = sub_100040DD0(*v10, v11);
    }
    uint64_t v12 = (uint64_t *)(a1 + v2[13]);
    unint64_t v13 = v12[1];
    if (v13 >> 60 != 15)
    {
      uint64_t v14 = *v12;
      return sub_100040DD0(v14, v13);
    }
  }
  return result;
}

void *sub_1001F1748(void *a1, void *a2)
{
  uint64_t v4 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_100010218(&qword_1007F9F50);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v10 = v4[7];
    uint64_t v47 = v5;
    __dst = (char *)a1 + v10;
    unint64_t v11 = (char *)a2 + v10;
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v16 = v4[8];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    if (v14((char *)a2 + v16, 1, v12))
    {
      uint64_t v19 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v17, v18, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v17, 0, 1, v12);
    }
    uint64_t v20 = v4[9];
    uint64_t v21 = (char *)a1 + v20;
    uint64_t v22 = (char *)a2 + v20;
    if (v14((char *)a2 + v20, 1, v12))
    {
      uint64_t v23 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v21, v22, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v21, 0, 1, v12);
    }
    uint64_t v24 = v4[10];
    uint64_t v25 = (char *)a1 + v24;
    uint64_t v26 = (char *)a2 + v24;
    *(void *)uint64_t v25 = *(void *)v26;
    v25[8] = v26[8];
    uint64_t v27 = v4[11];
    char v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    *(void *)char v28 = *(void *)v29;
    v28[8] = v29[8];
    uint64_t v30 = v4[12];
    uint64_t v31 = (char *)a1 + v30;
    uint64_t v32 = (char *)a2 + v30;
    unint64_t v33 = *((void *)v32 + 1);
    if (v33 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    }
    else
    {
      uint64_t v34 = *(void *)v32;
      sub_100040D64(*(void *)v32, *((void *)v32 + 1));
      *(void *)uint64_t v31 = v34;
      *((void *)v31 + 1) = v33;
    }
    uint64_t v35 = v4[13];
    unint64_t v36 = (char *)a1 + v35;
    uint64_t v37 = (char *)a2 + v35;
    unint64_t v38 = *((void *)v37 + 1);
    if (v38 >> 60 == 15)
    {
      *(_OWORD *)unint64_t v36 = *(_OWORD *)v37;
    }
    else
    {
      uint64_t v39 = *(void *)v37;
      sub_100040D64(*(void *)v37, *((void *)v37 + 1));
      *(void *)unint64_t v36 = v39;
      *((void *)v36 + 1) = v38;
    }
    *((unsigned char *)a1 + v4[14]) = *((unsigned char *)a2 + v4[14]);
    uint64_t v40 = v4[15];
    unint64_t v41 = (char *)a1 + v40;
    uint64_t v42 = (char *)a2 + v40;
    *(void *)unint64_t v41 = *(void *)v42;
    v41[8] = v42[8];
    uint64_t v43 = v4[16];
    uint64_t v44 = (char *)a1 + v43;
    id v45 = (char *)a2 + v43;
    *(void *)uint64_t v44 = *(void *)v45;
    v44[8] = v45[8];
    (*(void (**)(void *, void, uint64_t, int *))(v47 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *sub_1001F1BA0(char *a1, char *a2)
{
  uint64_t v4 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_1001F3944((uint64_t)a1, _s10VisitAssetC9VisitDataVMa);
      goto LABEL_7;
    }
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = *((void *)a2 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = *((void *)a2 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *((void *)a1 + 4) = *((void *)a2 + 4);
    *((void *)a1 + 5) = *((void *)a2 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = v4[7];
    uint64_t v17 = &a1[v16];
    uint64_t v18 = &a2[v16];
    uint64_t v19 = type metadata accessor for Date();
    uint64_t v20 = *(void *)(v19 - 8);
    uint64_t v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
    int v22 = v21(v17, 1, v19);
    int v23 = v21(v18, 1, v19);
    if (v22)
    {
      if (!v23)
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
        goto LABEL_28;
      }
    }
    else
    {
      if (!v23)
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v17, v18, v19);
LABEL_28:
        uint64_t v59 = v4[8];
        uint64_t v60 = &a1[v59];
        uint64_t v61 = &a2[v59];
        int v62 = v21(&a1[v59], 1, v19);
        int v63 = v21(v61, 1, v19);
        if (v62)
        {
          if (!v63)
          {
            (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v60, v61, v19);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v60, 0, 1, v19);
            goto LABEL_34;
          }
        }
        else
        {
          if (!v63)
          {
            (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v60, v61, v19);
LABEL_34:
            uint64_t v65 = v4[9];
            uint64_t v66 = &a1[v65];
            unint64_t v67 = &a2[v65];
            int v68 = v21(&a1[v65], 1, v19);
            int v69 = v21(v67, 1, v19);
            if (v68)
            {
              if (!v69)
              {
                (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v66, v67, v19);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v66, 0, 1, v19);
                goto LABEL_40;
              }
            }
            else
            {
              if (!v69)
              {
                (*(void (**)(char *, char *, uint64_t))(v20 + 24))(v66, v67, v19);
LABEL_40:
                uint64_t v71 = v4[10];
                uint64_t v72 = &a1[v71];
                uint64_t v73 = &a2[v71];
                uint64_t v74 = *(void *)v73;
                v72[8] = v73[8];
                *(void *)uint64_t v72 = v74;
                uint64_t v75 = v4[11];
                uint64_t v76 = &a1[v75];
                uint64_t v77 = &a2[v75];
                uint64_t v78 = *(void *)v77;
                v76[8] = v77[8];
                *(void *)uint64_t v76 = v78;
                uint64_t v79 = v4[12];
                uint64_t v80 = (uint64_t *)&a1[v79];
                Swift::String v81 = (uint64_t *)&a2[v79];
                unint64_t v82 = *(void *)&a2[v79 + 8];
                if (*(void *)&a1[v79 + 8] >> 60 == 15)
                {
                  if (v82 >> 60 != 15)
                  {
                    uint64_t v83 = *v81;
                    sub_100040D64(v83, v82);
                    *uint64_t v80 = v83;
                    v80[1] = v82;
                    goto LABEL_47;
                  }
                }
                else
                {
                  if (v82 >> 60 != 15)
                  {
                    uint64_t v84 = *v81;
                    sub_100040D64(v84, v82);
                    uint64_t v85 = *v80;
                    unint64_t v86 = v80[1];
                    *uint64_t v80 = v84;
                    v80[1] = v82;
                    sub_100040DD0(v85, v86);
LABEL_47:
                    uint64_t v87 = v4[13];
                    uint64_t v88 = (uint64_t *)&a1[v87];
                    unint64_t v89 = (uint64_t *)&a2[v87];
                    unint64_t v90 = *(void *)&a2[v87 + 8];
                    if (*(void *)&a1[v87 + 8] >> 60 == 15)
                    {
                      if (v90 >> 60 != 15)
                      {
                        uint64_t v91 = *v89;
                        sub_100040D64(v91, v90);
                        uint64_t *v88 = v91;
                        v88[1] = v90;
LABEL_54:
                        a1[v4[14]] = a2[v4[14]];
                        uint64_t v95 = v4[15];
                        id v96 = &a1[v95];
                        id v97 = &a2[v95];
                        uint64_t v98 = *(void *)v97;
                        v96[8] = v97[8];
                        *(void *)id v96 = v98;
                        uint64_t v99 = v4[16];
                        id v100 = &a1[v99];
                        id v101 = &a2[v99];
                        uint64_t v102 = *(void *)v101;
                        v100[8] = v101[8];
                        *(void *)id v100 = v102;
                        return a1;
                      }
                    }
                    else
                    {
                      if (v90 >> 60 != 15)
                      {
                        uint64_t v92 = *v89;
                        sub_100040D64(v92, v90);
                        uint64_t v93 = *v88;
                        unint64_t v94 = v88[1];
                        uint64_t *v88 = v92;
                        v88[1] = v90;
                        sub_100040DD0(v93, v94);
                        goto LABEL_54;
                      }
                      sub_1001F2560((uint64_t)v88);
                    }
                    *(_OWORD *)uint64_t v88 = *(_OWORD *)v89;
                    goto LABEL_54;
                  }
                  sub_1001F2560((uint64_t)v80);
                }
                *(_OWORD *)uint64_t v80 = *(_OWORD *)v81;
                goto LABEL_47;
              }
              (*(void (**)(char *, uint64_t))(v20 + 8))(v66, v19);
            }
            uint64_t v70 = sub_100010218((uint64_t *)&unk_1007FC470);
            memcpy(v66, v67, *(void *)(*(void *)(v70 - 8) + 64));
            goto LABEL_40;
          }
          (*(void (**)(char *, uint64_t))(v20 + 8))(v60, v19);
        }
        uint64_t v64 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v60, v61, *(void *)(*(void *)(v64 - 8) + 64));
        goto LABEL_34;
      }
      (*(void (**)(char *, uint64_t))(v20 + 8))(v17, v19);
    }
    uint64_t v58 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v17, v18, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_28;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v15 = sub_100010218(&qword_1007F9F50);
    memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *((void *)a1 + 1) = *((void *)a2 + 1);
  *((void *)a1 + 2) = *((void *)a2 + 2);
  *((void *)a1 + 3) = *((void *)a2 + 3);
  *((void *)a1 + 4) = *((void *)a2 + 4);
  *((void *)a1 + 5) = *((void *)a2 + 5);
  uint64_t v9 = v4[7];
  __dst = &a1[v9];
  uint64_t v10 = &a2[v9];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v24 = v4[8];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  if (v13(&a2[v24], 1, v11))
  {
    uint64_t v27 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v25, v26, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v25, 0, 1, v11);
  }
  uint64_t v28 = v4[9];
  uint64_t v29 = &a1[v28];
  uint64_t v30 = &a2[v28];
  if (v13(&a2[v28], 1, v11))
  {
    uint64_t v31 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v29, v30, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v29, v30, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v29, 0, 1, v11);
  }
  uint64_t v32 = v4[10];
  unint64_t v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  uint64_t v35 = *(void *)v34;
  v33[8] = v34[8];
  *(void *)unint64_t v33 = v35;
  uint64_t v36 = v4[11];
  uint64_t v37 = &a1[v36];
  unint64_t v38 = &a2[v36];
  uint64_t v39 = *(void *)v38;
  v37[8] = v38[8];
  *(void *)uint64_t v37 = v39;
  uint64_t v40 = v4[12];
  unint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  unint64_t v43 = *((void *)v42 + 1);
  if (v43 >> 60 == 15)
  {
    *(_OWORD *)unint64_t v41 = *(_OWORD *)v42;
  }
  else
  {
    uint64_t v44 = *(void *)v42;
    sub_100040D64(*(void *)v42, *((void *)v42 + 1));
    *(void *)unint64_t v41 = v44;
    *((void *)v41 + 1) = v43;
  }
  uint64_t v45 = v4[13];
  uint64_t v46 = &a1[v45];
  uint64_t v47 = &a2[v45];
  unint64_t v48 = *((void *)v47 + 1);
  if (v48 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v46 = *(_OWORD *)v47;
  }
  else
  {
    uint64_t v49 = *(void *)v47;
    sub_100040D64(*(void *)v47, *((void *)v47 + 1));
    *(void *)uint64_t v46 = v49;
    *((void *)v46 + 1) = v48;
  }
  a1[v4[14]] = a2[v4[14]];
  uint64_t v50 = v4[15];
  uint64_t v51 = &a1[v50];
  double v52 = &a2[v50];
  uint64_t v53 = *(void *)v52;
  v51[8] = v52[8];
  *(void *)uint64_t v51 = v53;
  uint64_t v54 = v4[16];
  uint64_t v55 = &a1[v54];
  unint64_t v56 = &a2[v54];
  uint64_t v57 = *(void *)v56;
  v55[8] = v56[8];
  *(void *)uint64_t v55 = v57;
  (*(void (**)(char *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1001F2560(uint64_t a1)
{
  return a1;
}

_OWORD *sub_1001F25B4(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v5 + 48))(a2, 1, v4))
  {
    uint64_t v6 = sub_100010218(&qword_1007F9F50);
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  else
  {
    long long v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    a1[2] = a2[2];
    uint64_t v8 = v4[7];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v15 = v4[8];
    uint64_t v16 = (char *)a1 + v15;
    uint64_t v17 = (char *)a2 + v15;
    if (v13((char *)a2 + v15, 1, v11))
    {
      uint64_t v18 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v17, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
    uint64_t v19 = v4[9];
    uint64_t v20 = (char *)a1 + v19;
    uint64_t v21 = (char *)a2 + v19;
    if (v13((char *)a2 + v19, 1, v11))
    {
      uint64_t v22 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v21, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
    }
    uint64_t v23 = v4[10];
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    uint64_t v26 = v4[11];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    v27[8] = v28[8];
    *(void *)uint64_t v27 = *(void *)v28;
    *(_OWORD *)((char *)a1 + v4[12]) = *(_OWORD *)((char *)a2 + v4[12]);
    *(_OWORD *)((char *)a1 + v4[13]) = *(_OWORD *)((char *)a2 + v4[13]);
    *((unsigned char *)a1 + v4[14]) = *((unsigned char *)a2 + v4[14]);
    uint64_t v29 = v4[15];
    uint64_t v30 = (char *)a1 + v29;
    uint64_t v31 = (char *)a2 + v29;
    v30[8] = v31[8];
    *(void *)uint64_t v30 = *(void *)v31;
    uint64_t v32 = v4[16];
    unint64_t v33 = (char *)a1 + v32;
    uint64_t v34 = (char *)a2 + v32;
    v33[8] = v34[8];
    *(void *)unint64_t v33 = *(void *)v34;
    (*(void (**)(_OWORD *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  }
  return a1;
}

char *sub_1001F2970(char *a1, char *a2)
{
  uint64_t v4 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *((void *)v4 - 1);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, int *))(v5 + 48);
  int v7 = v6(a1, 1, v4);
  int v8 = v6(a2, 1, v4);
  if (!v7)
  {
    if (v8)
    {
      sub_1001F3944((uint64_t)a1, _s10VisitAssetC9VisitDataVMa);
      goto LABEL_7;
    }
    uint64_t v18 = *((void *)a2 + 1);
    *(void *)a1 = *(void *)a2;
    *((void *)a1 + 1) = v18;
    swift_bridgeObjectRelease();
    uint64_t v19 = *((void *)a2 + 3);
    *((void *)a1 + 2) = *((void *)a2 + 2);
    *((void *)a1 + 3) = v19;
    swift_bridgeObjectRelease();
    uint64_t v20 = *((void *)a2 + 5);
    *((void *)a1 + 4) = *((void *)a2 + 4);
    *((void *)a1 + 5) = v20;
    swift_bridgeObjectRelease();
    uint64_t v21 = v4[7];
    uint64_t v22 = &a1[v21];
    uint64_t v23 = &a2[v21];
    uint64_t v24 = type metadata accessor for Date();
    uint64_t v25 = *(void *)(v24 - 8);
    uint64_t v26 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v25 + 48);
    int v27 = v26(v22, 1, v24);
    int v28 = v26(v23, 1, v24);
    if (v27)
    {
      if (!v28)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v22, v23, v24);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
        goto LABEL_22;
      }
    }
    else
    {
      if (!v28)
      {
        (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v22, v23, v24);
LABEL_22:
        uint64_t v50 = v4[8];
        uint64_t v51 = &a1[v50];
        double v52 = &a2[v50];
        int v53 = v26(&a1[v50], 1, v24);
        int v54 = v26(v52, 1, v24);
        if (v53)
        {
          if (!v54)
          {
            (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v51, v52, v24);
            (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v51, 0, 1, v24);
            goto LABEL_28;
          }
        }
        else
        {
          if (!v54)
          {
            (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v51, v52, v24);
LABEL_28:
            uint64_t v56 = v4[9];
            uint64_t v57 = &a1[v56];
            uint64_t v58 = &a2[v56];
            int v59 = v26(&a1[v56], 1, v24);
            int v60 = v26(v58, 1, v24);
            if (v59)
            {
              if (!v60)
              {
                (*(void (**)(char *, char *, uint64_t))(v25 + 32))(v57, v58, v24);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v57, 0, 1, v24);
                goto LABEL_34;
              }
            }
            else
            {
              if (!v60)
              {
                (*(void (**)(char *, char *, uint64_t))(v25 + 40))(v57, v58, v24);
LABEL_34:
                uint64_t v62 = v4[10];
                int v63 = &a1[v62];
                uint64_t v64 = &a2[v62];
                *(void *)int v63 = *(void *)v64;
                v63[8] = v64[8];
                uint64_t v65 = v4[11];
                uint64_t v66 = &a1[v65];
                unint64_t v67 = &a2[v65];
                *(void *)uint64_t v66 = *(void *)v67;
                v66[8] = v67[8];
                uint64_t v68 = v4[12];
                int v69 = (uint64_t *)&a1[v68];
                uint64_t v70 = (uint64_t *)&a2[v68];
                unint64_t v71 = *(void *)&a1[v68 + 8];
                if (v71 >> 60 != 15)
                {
                  unint64_t v72 = v70[1];
                  if (v72 >> 60 != 15)
                  {
                    uint64_t v73 = *v69;
                    *int v69 = *v70;
                    v69[1] = v72;
                    sub_100040DD0(v73, v71);
LABEL_39:
                    uint64_t v74 = v4[13];
                    uint64_t v75 = (uint64_t *)&a1[v74];
                    uint64_t v76 = (uint64_t *)&a2[v74];
                    unint64_t v77 = *(void *)&a1[v74 + 8];
                    if (v77 >> 60 != 15)
                    {
                      unint64_t v78 = v76[1];
                      if (v78 >> 60 != 15)
                      {
                        uint64_t v79 = *v75;
                        uint64_t *v75 = *v76;
                        v75[1] = v78;
                        sub_100040DD0(v79, v77);
                        goto LABEL_44;
                      }
                      sub_1001F2560((uint64_t)v75);
                    }
                    *(_OWORD *)uint64_t v75 = *(_OWORD *)v76;
LABEL_44:
                    a1[v4[14]] = a2[v4[14]];
                    uint64_t v80 = v4[15];
                    Swift::String v81 = &a1[v80];
                    unint64_t v82 = &a2[v80];
                    *(void *)Swift::String v81 = *(void *)v82;
                    v81[8] = v82[8];
                    uint64_t v83 = v4[16];
                    uint64_t v84 = &a1[v83];
                    uint64_t v85 = &a2[v83];
                    *(void *)uint64_t v84 = *(void *)v85;
                    v84[8] = v85[8];
                    return a1;
                  }
                  sub_1001F2560((uint64_t)v69);
                }
                *(_OWORD *)int v69 = *(_OWORD *)v70;
                goto LABEL_39;
              }
              (*(void (**)(char *, uint64_t))(v25 + 8))(v57, v24);
            }
            uint64_t v61 = sub_100010218((uint64_t *)&unk_1007FC470);
            memcpy(v57, v58, *(void *)(*(void *)(v61 - 8) + 64));
            goto LABEL_34;
          }
          (*(void (**)(char *, uint64_t))(v25 + 8))(v51, v24);
        }
        uint64_t v55 = sub_100010218((uint64_t *)&unk_1007FC470);
        memcpy(v51, v52, *(void *)(*(void *)(v55 - 8) + 64));
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v25 + 8))(v22, v24);
    }
    uint64_t v49 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v22, v23, *(void *)(*(void *)(v49 - 8) + 64));
    goto LABEL_22;
  }
  if (v8)
  {
LABEL_7:
    uint64_t v17 = sub_100010218(&qword_1007F9F50);
    memcpy(a1, a2, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  long long v9 = *((_OWORD *)a2 + 1);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v9;
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
  uint64_t v10 = v4[7];
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
  if (v15(v12, 1, v13))
  {
    uint64_t v16 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v11, v12, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  uint64_t v29 = v4[8];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  if (v15(&a2[v29], 1, v13))
  {
    uint64_t v32 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v30, v31, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v30, 0, 1, v13);
  }
  uint64_t v33 = v4[9];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = &a2[v33];
  if (v15(&a2[v33], 1, v13))
  {
    uint64_t v36 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v34, v35, v13);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v34, 0, 1, v13);
  }
  uint64_t v37 = v4[10];
  unint64_t v38 = &a1[v37];
  uint64_t v39 = &a2[v37];
  *(void *)unint64_t v38 = *(void *)v39;
  v38[8] = v39[8];
  uint64_t v40 = v4[11];
  unint64_t v41 = &a1[v40];
  uint64_t v42 = &a2[v40];
  v41[8] = v42[8];
  *(void *)unint64_t v41 = *(void *)v42;
  *(_OWORD *)&a1[v4[12]] = *(_OWORD *)&a2[v4[12]];
  *(_OWORD *)&a1[v4[13]] = *(_OWORD *)&a2[v4[13]];
  a1[v4[14]] = a2[v4[14]];
  uint64_t v43 = v4[15];
  uint64_t v44 = &a1[v43];
  uint64_t v45 = &a2[v43];
  v44[8] = v45[8];
  *(void *)uint64_t v44 = *(void *)v45;
  uint64_t v46 = v4[16];
  uint64_t v47 = &a1[v46];
  unint64_t v48 = &a2[v46];
  v47[8] = v48[8];
  *(void *)uint64_t v47 = *(void *)v48;
  (*(void (**)(char *, void, uint64_t, int *))(v5 + 56))(a1, 0, 1, v4);
  return a1;
}

uint64_t sub_1001F31E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001F31FC);
}

uint64_t sub_1001F31FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F9F50);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1001F326C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001F3280);
}

uint64_t sub_1001F3280(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F9F50);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t _s15GenericMapAssetC14GenericMapDataVMa(uint64_t a1)
{
  return sub_10003352C(a1, (uint64_t *)&unk_1008032B0);
}

void sub_1001F3314()
{
  sub_1001F33A0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1001F33A0()
{
  if (!qword_1008032C0)
  {
    _s10VisitAssetC9VisitDataVMa(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1008032C0);
    }
  }
}

uint64_t sub_1001F33F8()
{
  return swift_retain();
}

uint64_t sub_1001F3408(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling15GenericMapAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_1001F3420()
{
  return sub_1001F0C48();
}

int *sub_1001F3444()
{
  uint64_t v1 = sub_100010218(&qword_1007F9F50);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_1007F9DB8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s15GenericMapAssetC14GenericMapDataVMa(0);
  uint64_t v12 = *(void *)(v11 - 8);
  __n128 v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling15GenericMapAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v12 + 56))(v10, 1, 1, v11, v13);
    goto LABEL_6;
  }
  swift_retain();
  sub_10003B080((uint64_t)v10);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
LABEL_6:
    uint64_t v16 = &qword_1007F9DB8;
    uint64_t v17 = (uint64_t)v10;
    goto LABEL_7;
  }
  sub_1001F39A4((uint64_t)v10, (uint64_t)v15, _s15GenericMapAssetC14GenericMapDataVMa);
  sub_1001F38DC((uint64_t)v15, (uint64_t)v3);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) != 1)
  {
    sub_1001F39A4((uint64_t)v3, (uint64_t)v7, _s10VisitAssetC9VisitDataVMa);
    sub_100010218(&qword_10080F280);
    unint64_t v20 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1006D6280;
    sub_10003F820((uint64_t)v7, v21 + v20);
    uint64_t v18 = sub_10003E604(v21);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    sub_1001F3944((uint64_t)v7, _s10VisitAssetC9VisitDataVMa);
    sub_1001F3944((uint64_t)v15, _s15GenericMapAssetC14GenericMapDataVMa);
    return v18;
  }
  sub_1001F3944((uint64_t)v15, _s15GenericMapAssetC14GenericMapDataVMa);
  uint64_t v16 = &qword_1007F9F50;
  uint64_t v17 = (uint64_t)v3;
LABEL_7:
  sub_10001457C(v17, v16);
  return 0;
}

int *sub_1001F37E0()
{
  return sub_1001F3444();
}

uint64_t sub_1001F3804()
{
  return sub_1001F3894(&qword_1007F9DC0, (void (*)(uint64_t))_s15GenericMapAssetC14GenericMapDataVMa);
}

uint64_t sub_1001F384C()
{
  return sub_1001F3894(&qword_1008032F0, (void (*)(uint64_t))_s15GenericMapAssetC14GenericMapDataVMa);
}

uint64_t sub_1001F3894(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1001F38DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F9F50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001F3944(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1001F39A4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1001F3A0C(uint64_t result, uint64_t a2)
{
  *(void *)(result + 16) = a2;
  *(void *)(result + 24) = 2 * a2;
  return result;
}

uint64_t sub_1001F3A1C(uint64_t a1, uint64_t a2)
{
  *(void *)(a1 + 16) = a2;
  *(void *)(a1 + 24) = 2 * a2;
  _s10VisitAssetC9VisitDataVMa(0);
  return a1;
}

char *sub_1001F3A84(char a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F9DA8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = _s15GenericMapAssetC14GenericMapDataVMa(0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  __n128 v13 = (char *)&v23 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v23 - v15;
  UUID.init()();
  *(void *)((char *)objc_allocWithZone((Class)_s15GenericMapAssetCMa(0))
            + OBJC_IVAR____TtCC7Journal10Journaling15GenericMapAsset_metadata) = 0;
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
  uint64_t v17 = (char *)sub_1001817C4((uint64_t)v13, 9, a1);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  sub_1001F39A4(a2, (uint64_t)v9, _s10VisitAssetC9VisitDataVMa);
  uint64_t v18 = _s10VisitAssetC9VisitDataVMa(0);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v9, 0, 1, v18);
  sub_1001F39A4((uint64_t)v9, (uint64_t)v6, _s15GenericMapAssetC14GenericMapDataVMa);
  swift_storeEnumTagMultiPayload();
  sub_100010218(&qword_100803330);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v19 + *(void *)(*(void *)v19 + 104);
  uint64_t v21 = sub_100010218(&qword_1007F9DB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  *(_OWORD *)(v19 + *(void *)(*(void *)v19 + 112)) = xmmword_1006D6A80;
  sub_10002C4EC((uint64_t)v6, v19 + *(void *)(*(void *)v19 + 120), &qword_1007F9DA8);
  *(void *)&v17[OBJC_IVAR____TtCC7Journal10Journaling15GenericMapAsset_metadata] = v19;
  swift_release();
  return v17;
}

unint64_t sub_1001F3DD4()
{
  unint64_t result = qword_100803340;
  if (!qword_100803340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100803340);
  }
  return result;
}

unsigned char *_s15GenericMapAssetC14GenericMapDataV10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1001F3EC4);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s15GenericMapAssetC14GenericMapDataV10CodingKeysOMa()
{
  return &_s15GenericMapAssetC14GenericMapDataV10CodingKeysON;
}

unint64_t sub_1001F3F00()
{
  unint64_t result = qword_100803350;
  if (!qword_100803350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100803350);
  }
  return result;
}

unint64_t sub_1001F3F58()
{
  unint64_t result = qword_100803358;
  if (!qword_100803358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100803358);
  }
  return result;
}

unint64_t sub_1001F3FB0()
{
  unint64_t result = qword_100803360;
  if (!qword_100803360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100803360);
  }
  return result;
}

ValueMetadata *type metadata accessor for JournalShortcutsProvider()
{
  return &type metadata for JournalShortcutsProvider;
}

uint64_t sub_1001F401C()
{
  uint64_t v110 = type metadata accessor for LocalizedStringResource.BundleDescription();
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  id v108 = (char *)v91 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v1 = type metadata accessor for Locale();
  __chkstk_darwin(v1 - 8);
  id v107 = (char *)v91 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v3 - 8);
  id v105 = (char *)v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for LocalizedStringResource();
  __chkstk_darwin(v5 - 8);
  id v106 = (char *)v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v121 = type metadata accessor for AppShortcutPhraseToken();
  uint64_t v7 = *(void *)(v121 - 8);
  __chkstk_darwin(v121);
  uint64_t v9 = (char *)v91 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_100803368);
  __chkstk_darwin(v10);
  id v101 = (char *)v91 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v99 = (char *)v91 - v13;
  __chkstk_darwin(v14);
  uint64_t v98 = (char *)v91 - v15;
  __chkstk_darwin(v16);
  id v97 = (char *)v91 - v17;
  __chkstk_darwin(v18);
  id v96 = (char *)v91 - v19;
  __chkstk_darwin(v20);
  uint64_t v95 = (char *)v91 - v21;
  __chkstk_darwin(v22);
  unint64_t v94 = (char *)v91 - v23;
  __chkstk_darwin(v24);
  id v111 = (char *)v91 - v25;
  __chkstk_darwin(v26);
  uint64_t v93 = (char *)v91 - v27;
  __chkstk_darwin(v28);
  uint64_t v104 = type metadata accessor for AppShortcut();
  uint64_t v103 = *(void *)(v104 - 8);
  __chkstk_darwin(v104);
  uint64_t v102 = (char *)v91 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10034D5F4(&v122);
  sub_100010218(&qword_100803370);
  uint64_t v30 = *(void *)(sub_100010218(&qword_100803378) - 8);
  uint64_t v31 = *(void *)(v30 + 72);
  unint64_t v32 = (*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80);
  uint64_t v33 = swift_allocObject();
  uint64_t v100 = v33;
  *(_OWORD *)(v33 + 16) = xmmword_1006DEE60;
  unint64_t v34 = v33 + v32;
  unint64_t v35 = sub_1001F4FE0();
  AppShortcutPhrase.init(stringLiteral:)();
  unint64_t v119 = v34;
  AppShortcutPhrase.init(stringLiteral:)();
  uint64_t v92 = 2 * v31;
  v91[1] = v34 + 2 * v31;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v36._uint64_t countAndFlagsBits = 0x2061206574697257;
  v36._unint64_t object = (void *)0xEC0000002077656ELL;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v36);
  unsigned int v118 = enum case for AppShortcutPhraseToken.applicationName(_:);
  uint64_t v37 = v7;
  unint64_t v38 = *(void (**)(void))(v7 + 104);
  uint64_t v117 = v7 + 104;
  uint64_t v120 = (void (*)(char *, void, uint64_t))v38;
  id v112 = v9;
  uint64_t v39 = v121;
  v38(v9);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v37 + 8);
  uint64_t v113 = v37 + 8;
  v40(v9, v39);
  unint64_t v41 = v40;
  id v116 = v40;
  v42._uint64_t countAndFlagsBits = 0x7972746E6520;
  v42._unint64_t object = (void *)0xE600000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v42);
  unint64_t v115 = v35;
  AppShortcutPhrase.init(stringInterpolation:)();
  unint64_t v43 = v119;
  v92 += v119 + v31;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v44._uint64_t countAndFlagsBits = 0x6120657461657243;
  v44._unint64_t object = (void *)0xEF206B6E616C6220;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v44);
  uint64_t v45 = v112;
  uint64_t v46 = v118;
  v120(v112, v118, v39);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v41(v45, v39);
  v47._uint64_t countAndFlagsBits = 0x7972746E6520;
  v47._unint64_t object = (void *)0xE600000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v47);
  AppShortcutPhrase.init(stringInterpolation:)();
  AppShortcutPhrase.init(stringLiteral:)();
  uint64_t v93 = (char *)(v43 + 5 * v31);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v48._uint64_t countAndFlagsBits = 0x2061207472617453;
  v48._unint64_t object = (void *)0xEC0000002077656ELL;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v48);
  uint64_t v49 = v112;
  uint64_t v50 = v46;
  uint64_t v51 = v120;
  uint64_t v52 = v121;
  v120(v112, v50, v121);
  int v53 = v49;
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v116(v49, v52);
  v54._uint64_t countAndFlagsBits = 0x7972746E6520;
  v54._unint64_t object = (void *)0xE600000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v54);
  AppShortcutPhrase.init(stringInterpolation:)();
  unint64_t v55 = v119;
  AppShortcutPhrase.init(stringLiteral:)();
  uint64_t v114 = v31;
  id v111 = (char *)(8 * v31);
  uint64_t v93 = (char *)(v55 + 7 * v31);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v56._uint64_t countAndFlagsBits = 0x2061206E69676542;
  v56._unint64_t object = (void *)0xEC0000002077656ELL;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v56);
  uint64_t v57 = v118;
  uint64_t v58 = v121;
  v51(v53, v118, v121);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v59 = v58;
  int v60 = v116;
  v116(v53, v59);
  v61._uint64_t countAndFlagsBits = 0x7972746E6520;
  v61._unint64_t object = (void *)0xE600000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v61);
  AppShortcutPhrase.init(stringInterpolation:)();
  unint64_t v94 = &v111[v55];
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v62._uint64_t countAndFlagsBits = 0x6E69206574697257;
  v62._unint64_t object = (void *)0xE900000000000020;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v62);
  int v63 = v120;
  uint64_t v64 = v121;
  v120(v53, v57, v121);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v60(v53, v64);
  v65._uint64_t countAndFlagsBits = 0;
  v65._unint64_t object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v65);
  AppShortcutPhrase.init(stringInterpolation:)();
  uint64_t v66 = v114;
  v111 += v119 + v114;
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v67._uint64_t countAndFlagsBits = 0x6E69206574697257;
  v67._unint64_t object = (void *)0xEC00000020796D20;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v67);
  uint64_t v68 = v118;
  v63(v53, v118, v64);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v116(v53, v64);
  v69._uint64_t countAndFlagsBits = 0;
  v69._unint64_t object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v69);
  AppShortcutPhrase.init(stringInterpolation:)();
  unint64_t v70 = v119;
  id v111 = (char *)(v119 + 10 * v66);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v71._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  v71._unint64_t object = (void *)0x80000001006900E0;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v71);
  uint64_t v72 = v121;
  v120(v53, v68, v121);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  uint64_t v73 = v116;
  v116(v53, v72);
  v74._uint64_t countAndFlagsBits = 0;
  v74._unint64_t object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v74);
  AppShortcutPhrase.init(stringInterpolation:)();
  id v97 = (char *)(v70 + 11 * v114);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v75._uint64_t countAndFlagsBits = 0xD000000000000018;
  id v111 = (char *)0xD000000000000018;
  v75._unint64_t object = (void *)0x8000000100690100;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v75);
  uint64_t v76 = v118;
  unint64_t v77 = v120;
  v120(v53, v118, v72);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v73(v53, v72);
  v78._uint64_t countAndFlagsBits = 0;
  v78._unint64_t object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v78);
  AppShortcutPhrase.init(stringInterpolation:)();
  uint64_t v98 = (char *)(v119 + 12 * v114);
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v79._uint64_t countAndFlagsBits = 0xD000000000000015;
  v79._unint64_t object = (void *)0x8000000100690120;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v79);
  uint64_t v80 = v112;
  uint64_t v81 = v76;
  uint64_t v82 = v121;
  v77(v112, v81, v121);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v73(v80, v82);
  v83._uint64_t countAndFlagsBits = 0;
  v83._unint64_t object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v83);
  AppShortcutPhrase.init(stringInterpolation:)();
  AppShortcutPhrase.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v84._unint64_t object = (void *)0x8000000100690140;
  v84._uint64_t countAndFlagsBits = (uint64_t)v111;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v84);
  v120(v80, v118, v82);
  AppShortcutPhrase.StringInterpolation.appendInterpolation(_:)();
  v116(v80, v82);
  v85._uint64_t countAndFlagsBits = 0;
  v85._unint64_t object = (void *)0xE000000000000000;
  AppShortcutPhrase.StringInterpolation.appendLiteral(_:)(v85);
  AppShortcutPhrase.init(stringInterpolation:)();
  AppShortcutPhrase.init(stringLiteral:)();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  (*(void (**)(char *, void, uint64_t))(v109 + 104))(v108, enum case for LocalizedStringResource.BundleDescription.main(_:), v110);
  LocalizedStringResource.init(_:table:locale:bundle:comment:)();
  unint64_t v86 = v102;
  AppShortcut.init<A>(intent:phrases:shortTitle:systemImageName:)();
  uint64_t v87 = static AppShortcutsBuilder.buildExpression(_:)();
  (*(void (**)(char *, uint64_t))(v103 + 8))(v86, v104);
  sub_100010218(&qword_100803388);
  uint64_t v88 = swift_allocObject();
  *(_OWORD *)(v88 + 16) = xmmword_1006D6280;
  *(void *)(v88 + 32) = v87;
  uint64_t v89 = static AppShortcutsBuilder.buildBlock(_:)();
  swift_bridgeObjectRelease();
  return v89;
}

unint64_t sub_1001F4FE0()
{
  unint64_t result = qword_100803380;
  if (!qword_100803380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100803380);
  }
  return result;
}

void sub_1001F5034()
{
  uint64_t v1 = v0;
  sub_1005B6914();
  if (v2 || (sub_1005B6920(), v3) || (sub_1005B6B28(), v4) || (byte_10083D318 & 1) != 0 || (byte_10083D319 & 1) != 0)
  {
    if (qword_1007F6B88 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100026A54(v5, (uint64_t)qword_100803390);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(oslog, v6)) {
      goto LABEL_11;
    }
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    uint64_t v8 = "(cleanupOrphans) Not ready for orphans cleanup";
LABEL_10:
    _os_log_impl((void *)&_mh_execute_header, oslog, v6, v8, v7, 2u);
    swift_slowDealloc();
LABEL_11:

    return;
  }
  if (byte_1008033A8)
  {
    if (qword_1007F6B88 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100026A54(v9, (uint64_t)qword_100803390);
    oslog = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(oslog, v6)) {
      goto LABEL_11;
    }
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    uint64_t v8 = "(cleanupOrphans) Orphans cleanup already triggered";
    goto LABEL_10;
  }
  byte_1008033A8 = 1;
  if (qword_1007F6B88 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100026A54(v10, (uint64_t)qword_100803390);
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "(cleanupOrphans) Orphans cleanup not triggered, triggering", v13, 2u);
    swift_slowDealloc();
  }

  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v14 = [*(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container) newBackgroundContext];
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = v14;
  *(void *)(v15 + 24) = v1;
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = sub_1001F9768;
  *(void *)(v16 + 24) = v15;
  aBlock[4] = sub_10001AC84;
  aBlock[5] = v16;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003F44E4;
  void aBlock[3] = &unk_10079E5D8;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = v14;
  swift_retain();
  swift_release();
  [v18 performBlockAndWait:v17];

  _Block_release(v17);
  LOBYTE(v18) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v18) {
    __break(1u);
  }
}

uint64_t sub_1001F5450()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100803390);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100803390);
  if (qword_1007F7D28 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB78);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1001F5518(void *a1)
{
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v155 = (char *)&v143 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v5 - 8);
  char v148 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v147 = (char *)&v143 - v8;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v143 - v10;
  __chkstk_darwin(v12);
  id v14 = (char *)&v143 - v13;
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v15 = *(id *)(qword_10083D2F8 + 16);
  unint64_t v16 = (unint64_t)sub_1004F2144(a1, 1);

  unint64_t v163 = (unint64_t)_swiftEmptyArrayStorage;
  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v154 = v2;
  id v145 = a1;
  uint64_t v144 = v3;
  if (v17)
  {
    if (v17 >= 1)
    {
      uint64_t v18 = 0;
      id v156 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      unint64_t v157 = v16 & 0xC000000000000001;
      uint64_t v19 = (unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
      id v151 = (void (**)(char *, char *, uint64_t))(v3 + 16);
      *(void *)&long long v150 = v3 + 8;
      uint64_t v20 = (void (**)(char *, char *, uint64_t))&_swiftEmptyDictionarySingleton;
      long long v149 = xmmword_1006D6D00;
      id v152 = (void (**)(char *, uint64_t))v16;
      id v146 = (unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
      while (1)
      {
        uint64_t v21 = v17;
        if (v157) {
          id v22 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v22 = *(id *)(v16 + 8 * v18 + 32);
        }
        uint64_t v23 = v22;
        id v24 = [v22 parentID];
        if (v24)
        {
          uint64_t v25 = v24;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v26 = 0;
        }
        else
        {
          uint64_t v26 = 1;
        }
        (*v156)(v11, v26, 1, v2);
        sub_10018750C((uint64_t)v11, (uint64_t)v14);
        if ((*v19)(v14, 1, v2))
        {

          sub_1000ADA74((uint64_t)v14);
        }
        else
        {
          uint64_t v27 = v155;
          (*v151)(v155, v14, v2);
          sub_1000ADA74((uint64_t)v14);
          uint64_t v28 = UUID.uuidString.getter();
          uint64_t v29 = v2;
          uint64_t v31 = v30;
          (*(void (**)(char *, uint64_t))v150)(v27, v29);
          if (!v20[2]) {
            goto LABEL_23;
          }
          swift_bridgeObjectRetain();
          unint64_t v32 = sub_10001B5D0(v28, (uint64_t)v31);
          if ((v33 & 1) == 0)
          {
            swift_bridgeObjectRelease();
LABEL_23:
            sub_100010218((uint64_t *)&unk_1007FA1C0);
            uint64_t v39 = swift_allocObject();
            *(_OWORD *)(v39 + 16) = v149;
            *(void *)(v39 + 32) = v23;
            v162[0] = v39;
            specialized Array._endMutation()();
            uint64_t v40 = (uint64_t)v20;
            uint64_t v41 = v162[0];
            swift_bridgeObjectRetain();
            id v153 = v23;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v162[0] = v40;
            sub_100599EBC(v41, v28, (uint64_t)v31, isUniquelyReferenced_nonNull_native);
            uint64_t v43 = v162[0];
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
            Swift::String v44 = *(void **)(*(void *)(qword_10083D2F8 + 24) + OBJC_IVAR____TtC7Journal13CloudKitStack_zone);
            swift_bridgeObjectRetain();
            id v45 = [v44 zoneID];
            v46._uint64_t countAndFlagsBits = v28;
            v46._unint64_t object = v31;
            CKRecordID.init(recordName:zoneID:)(v46, (CKRecordZoneID)v45);
            swift_bridgeObjectRelease();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v163 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v163 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();

            uint64_t v20 = (void (**)(char *, char *, uint64_t))v43;
            uint64_t v2 = v154;
            unint64_t v16 = (unint64_t)v152;
            goto LABEL_9;
          }
          uint64_t v34 = *((void *)v20[7] + v32);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v162[0] = v34;
          id v153 = v23;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          uint64_t v35 = (uint64_t)v20;
          if (*(void *)((v162[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v162[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          Swift::String v36 = v153;
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          uint64_t v37 = v162[0];
          char v38 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v160 = v35;
          sub_100599EBC(v37, v28, (uint64_t)v31, v38);
          uint64_t v20 = (void (**)(char *, char *, uint64_t))v160;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v2 = v154;
          unint64_t v16 = (unint64_t)v152;
          uint64_t v19 = v146;
        }
LABEL_9:
        ++v18;
        uint64_t v17 = v21;
        if (v21 == v18)
        {
          swift_bridgeObjectRelease();
          unint64_t v47 = v163;
          goto LABEL_28;
        }
      }
    }
    __break(1u);
    goto LABEL_79;
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = (void (**)(char *, char *, uint64_t))&_swiftEmptyDictionarySingleton;
  unint64_t v47 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_28:
  id v151 = v20;
  uint64_t v48 = (uint64_t)v148;
  uint64_t v49 = v147;
  if (v47 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v79 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v79)
    {
LABEL_30:
      if (qword_1007F6B88 == -1)
      {
LABEL_31:
        uint64_t v50 = type metadata accessor for Logger();
        sub_100026A54(v50, (uint64_t)qword_100803390);
        uint64_t v51 = Logger.logObject.getter();
        os_log_type_t v52 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v51, v52))
        {
          int v53 = (uint8_t *)swift_slowAlloc();
          v162[0] = swift_slowAlloc();
          *(_DWORD *)int v53 = 136315138;
          swift_beginAccess();
          sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
          swift_bridgeObjectRetain();
          uint64_t v54 = Array.description.getter();
          unint64_t v56 = v55;
          swift_bridgeObjectRelease();
          uint64_t v160 = sub_10011EA98(v54, v56, v162);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v51, v52, "(cleanupOrphans) entryParentIDs: %s", v53, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }

        uint64_t v57 = Logger.logObject.getter();
        os_log_type_t v58 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v57, v58))
        {
          uint64_t v59 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v59 = 134217984;
          swift_beginAccess();
          if (v163 >> 62)
          {
            swift_bridgeObjectRetain();
            uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v60 = *(void *)((v163 & 0xFFFFFFFFFFFFFF8) + 0x10);
          }
          v162[0] = v60;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          _os_log_impl((void *)&_mh_execute_header, v57, v58, "(cleanupOrphans) entryParentIDs.count: %ld", v59, 0xCu);
          swift_slowDealloc();
        }

        swift_beginAccess();
        uint64_t v61 = *(void *)(qword_10083D2F8 + 24);
        Swift::String v62 = *(void **)(v61 + OBJC_IVAR____TtC7Journal13CloudKitStack_ckDatabase);
        unint64_t v63 = v163;
        uint64_t v64 = *(void **)(v61 + OBJC_IVAR____TtC7Journal13CloudKitStack_assetDownloadConfig);
        Swift::String v65 = (objc_class *)type metadata accessor for BatchRecordDownloadOperation();
        uint64_t v66 = (char *)objc_allocWithZone(v65);
        *(void *)&v66[qword_10080B850] = v63;
        *(void *)&v66[qword_10080B828] = v62;
        *(void *)&v66[qword_10080B830] = v64;
        v161.receiver = v66;
        v161.super_class = v65;
        swift_bridgeObjectRetain();
        id v67 = v62;
        id v68 = v64;
        id v69 = [super init];
        uint64_t v70 = swift_allocObject();
        Swift::String v71 = v145;
        uint64_t v72 = v151;
        *(void *)(v70 + 16) = v145;
        *(void *)(v70 + 24) = v72;
        uint64_t v73 = swift_allocObject();
        *(void *)(v73 + 16) = sub_1001F979C;
        *(void *)(v73 + 24) = v70;
        __chkstk_darwin(v73);
        *(&v143 - 2) = (uint64_t)sub_1001F97A4;
        *(&v143 - 1) = v74;
        uint64_t v76 = (uint64_t)&v75[4];
        unint64_t v77 = v75 + 10;
        swift_bridgeObjectRetain();
        id v78 = v71;
        swift_retain();
        os_unfair_lock_lock(v77);
        sub_1001F97A8(v76);
        os_unfair_lock_unlock(v77);
        swift_release();
        swift_release();
        if (qword_1007F7E60 != -1) {
          swift_once();
        }
        [*(id *)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_batchRecordDownloadQueue) addOperation:v69];

        goto LABEL_77;
      }
LABEL_79:
      swift_once();
      goto LABEL_31;
    }
  }
  else if (*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_30;
  }
  id v80 = *(id *)(qword_10083D2F8 + 16);
  unint64_t v81 = sub_10052D4D8(v145);

  unint64_t v159 = (unint64_t)_swiftEmptyArrayStorage;
  if (v81 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v82 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v82) {
      goto LABEL_44;
    }
  }
  else
  {
    uint64_t v82 = *(void *)((v81 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v82)
    {
LABEL_44:
      if (v82 < 1)
      {
        __break(1u);
        goto LABEL_86;
      }
      uint64_t v83 = 0;
      id v156 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v81 & 0xC000000000000001);
      Swift::String v84 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v144 + 56);
      Swift::String v85 = (unsigned int (**)(void *, uint64_t, uint64_t))(v144 + 48);
      id v153 = (void (**)(char *, void *, uint64_t))(v144 + 16);
      id v152 = (void (**)(char *, uint64_t))(v144 + 8);
      unint64_t v86 = &_swiftEmptyDictionarySingleton;
      long long v150 = xmmword_1006D6D00;
      unint64_t v157 = v81;
      while (1)
      {
        id v87 = v156 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v81 + 8 * v83 + 32);
        uint64_t v88 = v87;
        id v89 = [v87 parentID];
        if (v89)
        {
          unint64_t v90 = v89;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v91 = 0;
        }
        else
        {
          uint64_t v91 = 1;
        }
        (*v84)(v48, v91, 1, v2);
        sub_10018750C(v48, (uint64_t)v49);
        if (!(*v85)(v49, 1, v2)) {
          break;
        }

        sub_1000ADA74((uint64_t)v49);
LABEL_47:
        ++v83;
        unint64_t v81 = v157;
        if (v82 == v83)
        {
          swift_bridgeObjectRelease();
          unint64_t v110 = v159;
          uint64_t v49 = v86;
          if (!(v159 >> 62)) {
            goto LABEL_66;
          }
LABEL_82:
          swift_bridgeObjectRetain();
          uint64_t v142 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (!v142) {
            goto LABEL_83;
          }
LABEL_67:
          if (qword_1007F6B88 == -1)
          {
LABEL_68:
            uint64_t v111 = type metadata accessor for Logger();
            sub_100026A54(v111, (uint64_t)qword_100803390);
            id v112 = Logger.logObject.getter();
            os_log_type_t v113 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v112, v113))
            {
              uint64_t v114 = (uint8_t *)swift_slowAlloc();
              v162[0] = swift_slowAlloc();
              *(_DWORD *)uint64_t v114 = 136315138;
              unint64_t v157 = (unint64_t)(v114 + 4);
              swift_beginAccess();
              sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
              unint64_t v115 = v49;
              swift_bridgeObjectRetain();
              uint64_t v116 = Array.description.getter();
              unint64_t v118 = v117;
              swift_bridgeObjectRelease();
              uint64_t v119 = v116;
              uint64_t v49 = v115;
              uint64_t v160 = sub_10011EA98(v119, v118, v162);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease();
              _os_log_impl((void *)&_mh_execute_header, v112, v113, "(cleanupOrphans) assetParentIDs: %s", v114, 0xCu);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }

            uint64_t v120 = Logger.logObject.getter();
            os_log_type_t v121 = static os_log_type_t.default.getter();
            if (os_log_type_enabled(v120, v121))
            {
              uint64_t v122 = (uint8_t *)swift_slowAlloc();
              *(_DWORD *)uint64_t v122 = 134217984;
              swift_beginAccess();
              if (v159 >> 62)
              {
                swift_bridgeObjectRetain();
                uint64_t v123 = _CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
              }
              else
              {
                uint64_t v123 = *(void *)((v159 & 0xFFFFFFFFFFFFFF8) + 0x10);
              }
              v162[0] = v123;
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              _os_log_impl((void *)&_mh_execute_header, v120, v121, "(cleanupOrphans) assetParentIDs.count: %ld", v122, 0xCu);
              swift_slowDealloc();
            }

            swift_beginAccess();
            uint64_t v124 = *(void *)(qword_10083D2F8 + 24);
            id v125 = *(void **)(v124 + OBJC_IVAR____TtC7Journal13CloudKitStack_ckDatabase);
            unint64_t v126 = v159;
            id v127 = *(void **)(v124 + OBJC_IVAR____TtC7Journal13CloudKitStack_assetDownloadConfig);
            id v128 = (objc_class *)type metadata accessor for BatchRecordDownloadOperation();
            id v129 = (char *)objc_allocWithZone(v128);
            *(void *)&v129[qword_10080B850] = v126;
            *(void *)&v129[qword_10080B828] = v125;
            *(void *)&v129[qword_10080B830] = v127;
            v158.receiver = v129;
            v158.super_class = v128;
            swift_bridgeObjectRetain();
            id v130 = v125;
            id v131 = v127;
            [super init];
            uint64_t v133 = swift_allocObject();
            uint64_t v134 = v145;
            *(void *)(v133 + 16) = v145;
            *(void *)(v133 + 24) = v49;
            uint64_t v135 = swift_allocObject();
            *(void *)(v135 + 16) = sub_1001F9808;
            *(void *)(v135 + 24) = v133;
            __chkstk_darwin(v135);
            *(&v143 - 2) = (uint64_t)sub_1001F97A4;
            *(&v143 - 1) = v136;
            uint64_t v138 = (uint64_t)&v137[4];
            id v139 = v137 + 10;
            id v140 = v134;
            swift_bridgeObjectRetain();
            swift_retain();
            os_unfair_lock_lock(v139);
            sub_1001F9960(v138);
            os_unfair_lock_unlock(v139);
            swift_release();
            swift_release();
            if (qword_1007F7E60 != -1) {
              swift_once();
            }
            [*(id *)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_batchRecordDownloadQueue) addOperation:v132];
            swift_bridgeObjectRelease();

            swift_bridgeObjectRelease();
            goto LABEL_77;
          }
LABEL_86:
          swift_once();
          goto LABEL_68;
        }
      }
      uint64_t v92 = v155;
      (*v153)(v155, v49, v2);
      sub_1000ADA74((uint64_t)v49);
      uint64_t v93 = UUID.uuidString.getter();
      uint64_t v94 = v2;
      id v96 = v95;
      (*v152)(v92, v94);
      if (*((void *)v86 + 2))
      {
        swift_bridgeObjectRetain();
        unint64_t v97 = sub_10001B5D0(v93, (uint64_t)v96);
        if (v98)
        {
          uint64_t v99 = *(void *)(*((void *)v86 + 7) + 8 * v97);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          v162[0] = v99;
          id v100 = v88;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v162[0] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v162[0] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          uint64_t v101 = v162[0];
          char v102 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v160 = (uint64_t)v86;
          sub_100599E90(v101, v93, (uint64_t)v96, v102);
          unint64_t v86 = (void *)v160;

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_64:
          uint64_t v2 = v154;
          uint64_t v48 = (uint64_t)v148;
          uint64_t v49 = v147;
          goto LABEL_47;
        }
        swift_bridgeObjectRelease();
      }
      sub_100010218((uint64_t *)&unk_1007FA1C0);
      uint64_t v103 = swift_allocObject();
      *(_OWORD *)(v103 + 16) = v150;
      *(void *)(v103 + 32) = v88;
      v162[0] = v103;
      specialized Array._endMutation()();
      uint64_t v104 = v162[0];
      swift_bridgeObjectRetain();
      id v105 = v88;
      char v106 = swift_isUniquelyReferenced_nonNull_native();
      v162[0] = (uint64_t)v86;
      sub_100599E90(v104, v93, (uint64_t)v96, v106);
      unint64_t v86 = (void *)v162[0];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
      id v107 = *(void **)(*(void *)(qword_10083D2F8 + 24) + OBJC_IVAR____TtC7Journal13CloudKitStack_zone);
      swift_bridgeObjectRetain();
      id v108 = [v107 zoneID];
      v109._uint64_t countAndFlagsBits = v93;
      v109._unint64_t object = v96;
      CKRecordID.init(recordName:zoneID:)(v109, (CKRecordZoneID)v108);
      swift_bridgeObjectRelease();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v159 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v159 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      goto LABEL_64;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v49 = &_swiftEmptyDictionarySingleton;
  unint64_t v110 = (unint64_t)_swiftEmptyArrayStorage;
  if ((unint64_t)_swiftEmptyArrayStorage >> 62) {
    goto LABEL_82;
  }
LABEL_66:
  if (*(void *)((v110 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_67;
  }
LABEL_83:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_77:
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t *sub_1001F6934(uint64_t *result, void *a2, uint64_t a3)
{
  uint64_t v3 = *result;
  if (*result)
  {
    uint64_t v6 = (void *)swift_allocObject();
    v6[2] = v3;
    v6[3] = a3;
    v6[4] = a2;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_1001F9938;
    *(void *)(v7 + 24) = v6;
    v10[4] = sub_10001B3DC;
    v10[5] = v7;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    _OWORD v10[2] = sub_1003F44E4;
    v10[3] = &unk_10079E768;
    uint64_t v8 = _Block_copy(v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v9 = a2;
    swift_retain();
    swift_release();
    [v9 performBlockAndWait:v8];
    _Block_release(v8);
    LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    unint64_t result = (uint64_t *)swift_release();
    if (v9) {
      __break(1u);
    }
  }
  return result;
}

void sub_1001F6AB4(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a1;
  uint64_t v157 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v158 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = swift_bridgeObjectRetain();
  int64_t v176 = 0;
  *(void *)&long long v9 = 136315394;
  long long v152 = v9;
  uint64_t v154 = v8;
  uint64_t v156 = a2;
  while (v7)
  {
    unint64_t v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v11 = v10 | (v176 << 6);
LABEL_18:
    id v15 = *(void **)(*(void *)(v4 + 48) + 8 * v11);
    uint64_t v16 = *(void *)(v4 + 56) + 16 * v11;
    uint64_t v17 = *(void **)v16;
    if (*(unsigned char *)(v16 + 8))
    {
      sub_1001F987C(v17, 1);
      sub_1001F987C(v17, 1);
      uint64_t v18 = qword_1007F6B88;
      id v171 = v15;
      if (v18 != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      sub_100026A54(v19, (uint64_t)qword_100803390);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        uint64_t v23 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 138412290;
        swift_errorRetain();
        uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v22 + 4) = v24;
        *uint64_t v23 = v24;
        sub_1001F9888(v17, 1);
        sub_1001F9888(v17, 1);
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "(cleanupOrphans) record download expected error:%@", (uint8_t *)v22, 0xCu);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1001F9888(v17, 1);
        sub_1001F9888(v17, 1);
      }

      v178[0] = (uint64_t)v17;
      swift_errorRetain();
      sub_100010218((uint64_t *)&unk_1007FC0D0);
      type metadata accessor for CKError(0);
      if (swift_dynamicCast())
      {
        sub_1001F9894();
        _BridgedStoredNSError.code.getter();
        if (v178[0] == 11)
        {
          id v153 = v177;
          id v34 = [v171 recordName];
          uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v37 = v36;

          if (*(void *)(a2 + 16))
          {
            unint64_t v38 = sub_10001B5D0(v35, v37);
            if (v39)
            {
              unint64_t v174 = v7;
              unint64_t v40 = *(void *)(*(void *)(a2 + 56) + 8 * v38);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRelease();
              id v41 = v171;
              Swift::String v42 = Logger.logObject.getter();
              os_log_type_t v43 = static os_log_type_t.default.getter();
              unint64_t v44 = v40 >> 62;
              id v165 = v41;
              unint64_t v168 = v40;
              if (os_log_type_enabled(v42, v43))
              {
                uint64_t v45 = swift_slowAlloc();
                v178[0] = swift_slowAlloc();
                *(_DWORD *)uint64_t v45 = v152;
                id v46 = [v41 recordName];
                uint64_t v47 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                unint64_t v49 = v48;

                uint64_t v50 = v47;
                id v41 = v165;
                sub_10011EA98(v50, v49, v178);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();

                swift_bridgeObjectRelease();
                *(_WORD *)(v45 + 12) = 2048;
                unint64_t v40 = v168;
                if (v44)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v51 = _CocoaArrayWrapper.endIndex.getter();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v51 = *(void *)((v168 & 0xFFFFFFFFFFFFFF8) + 0x10);
                }
                swift_bridgeObjectRelease();
                id v177 = (void *)v51;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v42, v43, "(cleanupOrphans) for parent entry:%s doesn't exist and should remove asset orphans:%ld", (uint8_t *)v45, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                uint64_t v4 = v154;
              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              a2 = v156;
              if (v44)
              {
                swift_bridgeObjectRetain();
                uint64_t v114 = _CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
                unint64_t v7 = v174;
                if (v114)
                {
LABEL_78:
                  if (v114 < 1) {
                    goto LABEL_116;
                  }
                  uint64_t v115 = 0;
                  unint64_t v164 = v40 & 0xC000000000000001;
                  do
                  {
                    if (v164) {
                      id v116 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                    }
                    else {
                      id v116 = *(id *)(v40 + 8 * v115 + 32);
                    }
                    unint64_t v117 = v116;
                    [v116 setIsRemovedFromCloud:1 v152];
                    id v118 = v41;
                    id v119 = v117;
                    uint64_t v120 = Logger.logObject.getter();
                    os_log_type_t v121 = static os_log_type_t.error.getter();
                    if (os_log_type_enabled(v120, v121))
                    {
                      id v122 = v119;
                      uint64_t v123 = swift_slowAlloc();
                      unint64_t v159 = (void *)swift_slowAlloc();
                      uint64_t v162 = v122;
                      v178[0] = swift_slowAlloc();
                      *(_DWORD *)uint64_t v123 = 138412546;
                      *(void *)(v123 + 4) = v122;
                      *unint64_t v159 = v122;
                      *(_WORD *)(v123 + 12) = 2080;
                      uint64_t v124 = v114;
                      id v125 = [v118 recordName];
                      uint64_t v126 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                      id v127 = v17;
                      unint64_t v129 = v128;

                      uint64_t v114 = v124;
                      uint64_t v130 = v126;
                      unint64_t v7 = v174;
                      *(void *)(v123 + 14) = sub_10011EA98(v130, v129, v178);

                      uint64_t v17 = v127;
                      a2 = v156;
                      swift_bridgeObjectRelease();
                      _os_log_impl((void *)&_mh_execute_header, v120, v121, "(cleanupOrphans) asset orphan is marked as removed from cloud orphanMO: %@ because parent is not found parent:%s", (uint8_t *)v123, 0x16u);
                      sub_100010218((uint64_t *)&unk_1007FC430);
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_slowDealloc();
                    }
                    else
                    {
                    }
                    ++v115;
                    id v41 = v165;
                    unint64_t v40 = v168;
                  }
                  while (v114 != v115);
                  uint64_t v4 = v154;
                }
              }
              else
              {
                uint64_t v114 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
                unint64_t v7 = v174;
                if (v114) {
                  goto LABEL_78;
                }
              }
            }
          }
          swift_bridgeObjectRelease();
          id v139 = v171;
          id v140 = Logger.logObject.getter();
          os_log_type_t v141 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v140, v141))
          {
            uint64_t v142 = swift_slowAlloc();
            v178[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v142 = 136315138;
            uint64_t v143 = v17;
            unint64_t v144 = v7;
            id v145 = [v139 recordName];
            uint64_t v146 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v148 = v147;

            unint64_t v7 = v144;
            *(void *)(v142 + 4) = sub_10011EA98(v146, v148, v178);

            uint64_t v4 = v154;
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v140, v141, "(cleanupOrphans) parent entry not found with id:%s", (uint8_t *)v142, 0xCu);
            swift_arrayDestroy();
            a2 = v156;
            swift_slowDealloc();
            swift_slowDealloc();

            sub_1001F9888(v143, 1);
            long long v149 = v143;
            goto LABEL_105;
          }

          sub_1001F9888(v17, 1);
          id v80 = v153;
          goto LABEL_103;
        }
      }
      swift_errorRetain();
      swift_errorRetain();
      Swift::String v75 = Logger.logObject.getter();
      os_log_type_t v76 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v75, v76))
      {
        uint64_t v77 = swift_slowAlloc();
        id v78 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v77 = 138412290;
        swift_errorRetain();
        uint64_t v79 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v77 + 4) = v79;
        void *v78 = v79;
        sub_1001F9888(v17, 1);
        sub_1001F9888(v17, 1);
        _os_log_impl((void *)&_mh_execute_header, v75, v76, "(cleanupOrphans) parent entry unexpected error: %@", (uint8_t *)v77, 0xCu);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_1001F9888(v17, 1);
        id v80 = v171;
LABEL_103:

        goto LABEL_104;
      }

      sub_1001F9888(v17, 1);
      sub_1001F9888(v17, 1);
      swift_errorRelease();

LABEL_104:
      long long v149 = v17;
LABEL_105:
      sub_1001F9888(v149, 1);
    }
    else
    {
      uint64_t v25 = a2;
      sub_1001F987C(v17, 0);
      sub_1001F987C(v17, 0);
      uint64_t v26 = qword_1007F6B88;
      id v27 = v15;
      if (v26 != -1) {
        swift_once();
      }
      uint64_t v28 = type metadata accessor for Logger();
      sub_100026A54(v28, (uint64_t)qword_100803390);
      id v29 = v17;
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.default.getter();
      id v172 = v29;
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        char v33 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v32 = 138412290;
        *(void *)(v32 + 4) = v29;
        *char v33 = v17;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "(cleanupOrphans) lost parent entry found: %@", (uint8_t *)v32, 0xCu);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        a2 = v25;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1001F9888(v17, 0);
        a2 = v25;
      }

      id v52 = [v27 recordName];
      uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v55 = v54;

      if (*(void *)(a2 + 16) && (unint64_t v56 = sub_10001B5D0(v53, v55), (v57 & 1) != 0))
      {
        unint64_t v163 = v17;
        unint64_t v175 = v7;
        unint64_t v58 = *(void *)(*(void *)(a2 + 56) + 8 * v56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (qword_1007F6D38 != -1) {
          swift_once();
        }
        id v59 = *(id *)(qword_10083D2F8 + 16);
        id v60 = [v27 recordName];
        uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v63 = v62;

        uint64_t v166 = sub_10056A2E0(v61, v63, a3);
        swift_bridgeObjectRelease();
        id v64 = *(id *)(qword_10083D2F8 + 16);
        id v169 = v27;
        id v65 = [v27 recordName];
        uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v68 = v67;

        id v69 = [a3 updatedObjects];
        sub_10001B284(0, &qword_1008113A0);
        sub_100082CD4();
        uint64_t v70 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        swift_bridgeObjectRetain();
        sub_1002A3DE4(v70, v66, v68);
        uint64_t v72 = v71;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v72)
        {
          type metadata accessor for JournalEntryMO();
          uint64_t v73 = swift_dynamicCastClass();
          if (v73)
          {
            uint64_t v74 = (void *)v73;

            swift_bridgeObjectRelease();
            goto LABEL_57;
          }
        }
        id v81 = [a3 insertedObjects:v152];
        uint64_t v82 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        swift_bridgeObjectRetain();
        sub_1002A3DE4(v82, v66, v68);
        Swift::String v84 = v83;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v84)
        {
          type metadata accessor for JournalEntryMO();
          uint64_t v74 = (void *)swift_dynamicCastClass();

          swift_bridgeObjectRelease();
          Swift::String v85 = v169;
          unint64_t v86 = v172;
          if (!v74) {

          }
          goto LABEL_58;
        }

        swift_bridgeObjectRelease();
        uint64_t v74 = 0;
LABEL_57:
        Swift::String v85 = v169;
        unint64_t v86 = v172;
LABEL_58:
        id v87 = (void *)v166;
        unint64_t v88 = v58 >> 62;
        if (v166)
        {
          id v89 = (id)v166;
          goto LABEL_62;
        }
        if (v74)
        {
          id v89 = v74;
          id v87 = 0;
LABEL_62:
          id v90 = v85;
          id v170 = v87;
          uint64_t v91 = Logger.logObject.getter();
          os_log_type_t v92 = static os_log_type_t.default.getter();
          long long v167 = v74;
          uint64_t v173 = v90;
          if (os_log_type_enabled(v91, v92))
          {
            buf = (uint8_t *)swift_slowAlloc();
            v178[0] = swift_slowAlloc();
            *(_DWORD *)buf = 136315138;
            id v93 = [v90 recordName];
            uint64_t v94 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v96 = v95;

            uint64_t v97 = v94;
            unint64_t v88 = v58 >> 62;
            id v177 = (void *)sub_10011EA98(v97, v96, v178);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v91, v92, "(cleanupOrphans) lost parent entry %s found locally", buf, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          uint64_t v4 = v154;
          char v98 = *(void **)(qword_10083D2F8 + 16);
          if (v88)
          {
            swift_bridgeObjectRetain();
            id v138 = v98;
            uint64_t v99 = _CocoaArrayWrapper.endIndex.getter();
            uint64_t v101 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
            if (!v99) {
              goto LABEL_98;
            }
          }
          else
          {
            uint64_t v99 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            id v100 = v98;
            uint64_t v101 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
            if (!v99) {
              goto LABEL_98;
            }
          }
          if (v99 < 1) {
            goto LABEL_115;
          }
          for (uint64_t i = 0; i != v99; ++i)
          {
            if ((v58 & 0xC000000000000001) != 0) {
              id v103 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v103 = *(id *)(v58 + 8 * i + 32);
            }
            uint64_t v104 = v103;
            [v89 v101[109] v103 v152];
          }
LABEL_98:
          swift_bridgeObjectRelease();
          sub_1001F9888(v163, 0);
          swift_bridgeObjectRelease();

          sub_1001F9888(v163, 0);
          a2 = v156;
          unint64_t v7 = v175;
        }
        else
        {
          id v105 = sub_10057AEE8(v86, (uint64_t)a3);
          swift_bridgeObjectRetain_n();
          id v106 = v105;
          id v107 = Logger.logObject.getter();
          os_log_type_t v108 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v107, v108))
          {
            uint64_t v109 = swift_slowAlloc();
            objc_super v161 = (void *)swift_slowAlloc();
            v178[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v109 = 138412546;
            id v110 = v106;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *objc_super v161 = v106;

            *(_WORD *)(v109 + 12) = 2080;
            type metadata accessor for JournalEntryAssetMO();
            swift_bridgeObjectRetain();
            uint64_t v111 = Array.description.getter();
            unint64_t v113 = v112;
            swift_bridgeObjectRelease();
            id v177 = (void *)sub_10011EA98(v111, v113, v178);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v107, v108, "(cleanupOrphans) lost parent entry re-created: %@ with children%s", (uint8_t *)v109, 0x16u);
            sub_100010218((uint64_t *)&unk_1007FC430);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          id v131 = *(void **)(qword_10083D2F8 + 16);
          if (v88)
          {
            swift_bridgeObjectRetain();
            id v150 = v131;
            uint64_t v132 = _CocoaArrayWrapper.endIndex.getter();
            uint64_t v134 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
            if (!v132) {
              goto LABEL_107;
            }
          }
          else
          {
            uint64_t v132 = *(void *)((v58 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            id v133 = v131;
            uint64_t v134 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
            if (!v132) {
              goto LABEL_107;
            }
          }
          if (v132 < 1) {
            goto LABEL_117;
          }
          for (uint64_t j = 0; j != v132; ++j)
          {
            if ((v58 & 0xC000000000000001) != 0) {
              id v136 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v136 = *(id *)(v58 + 8 * j + 32);
            }
            NSString v137 = v136;
            [v106 v134[109] v136 v152];
          }
LABEL_107:
          swift_bridgeObjectRelease();
          sub_1001F9888(v17, 0);
          swift_bridgeObjectRelease();

          sub_1001F9888(v17, 0);
          uint64_t v4 = v154;
          unint64_t v7 = v175;
          a2 = v156;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1001F9888(v17, 0);

        sub_1001F9888(v17, 0);
      }
    }
  }
  if (__OFADD__(v176++, 1))
  {
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
LABEL_117:
    __break(1u);
    goto LABEL_118;
  }
  if (v176 >= v158) {
    goto LABEL_109;
  }
  unint64_t v13 = *(void *)(v157 + 8 * v176);
  if (v13) {
    goto LABEL_17;
  }
  int64_t v14 = v176 + 1;
  if (v176 + 1 >= v158) {
    goto LABEL_109;
  }
  unint64_t v13 = *(void *)(v157 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v176 + 2;
  if (v176 + 2 >= v158) {
    goto LABEL_109;
  }
  unint64_t v13 = *(void *)(v157 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v176 = v14;
LABEL_17:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v176 << 6);
    goto LABEL_18;
  }
  int64_t v14 = v176 + 3;
  if (v176 + 3 < v158)
  {
    unint64_t v13 = *(void *)(v157 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        int64_t v176 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_114;
        }
        if (v176 >= v158) {
          goto LABEL_109;
        }
        unint64_t v13 = *(void *)(v157 + 8 * v176);
        ++v14;
        if (v13) {
          goto LABEL_17;
        }
      }
    }
    goto LABEL_16;
  }
LABEL_109:
  swift_release();
  if (([a3 hasChanges] & 1) == 0) {
    return;
  }
  if (qword_1007F6D38 != -1) {
LABEL_118:
  }
    swift_once();
  id v151 = *(id *)(qword_10083D2F8 + 16);
  sub_10029BA60(a3);
}

uint64_t *sub_1001F8018(uint64_t *result, void *a2, uint64_t a3)
{
  uint64_t v3 = *result;
  if (*result)
  {
    uint64_t v6 = (void *)swift_allocObject();
    v6[2] = v3;
    v6[3] = a3;
    v6[4] = a2;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_1001F9860;
    *(void *)(v7 + 24) = v6;
    v10[4] = sub_10001B3DC;
    v10[5] = v7;
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 1107296256;
    _OWORD v10[2] = sub_1003F44E4;
    v10[3] = &unk_10079E6F0;
    uint64_t v8 = _Block_copy(v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v9 = a2;
    swift_retain();
    swift_release();
    [v9 performBlockAndWait:v8];
    _Block_release(v8);
    LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    unint64_t result = (uint64_t *)swift_release();
    if (v9) {
      __break(1u);
    }
  }
  return result;
}

void sub_1001F8198(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a1;
  uint64_t v160 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v161 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = swift_bridgeObjectRetain();
  int64_t v179 = 0;
  *(void *)&long long v9 = 136315394;
  long long v155 = v9;
  uint64_t v157 = v8;
  uint64_t v159 = a2;
  while (v7)
  {
    unint64_t v10 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v11 = v10 | (v179 << 6);
LABEL_18:
    id v15 = *(void **)(*(void *)(v4 + 48) + 8 * v11);
    uint64_t v16 = *(void *)(v4 + 56) + 16 * v11;
    uint64_t v17 = *(void **)v16;
    if (*(unsigned char *)(v16 + 8))
    {
      sub_1001F987C(v17, 1);
      sub_1001F987C(v17, 1);
      uint64_t v18 = qword_1007F6B88;
      id v174 = v15;
      if (v18 != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      sub_100026A54(v19, (uint64_t)qword_100803390);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v20 = Logger.logObject.getter();
      os_log_type_t v21 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v20, v21))
      {
        uint64_t v22 = swift_slowAlloc();
        uint64_t v23 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v22 = 138412290;
        swift_errorRetain();
        uint64_t v24 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v22 + 4) = v24;
        *uint64_t v23 = v24;
        sub_1001F9888(v17, 1);
        sub_1001F9888(v17, 1);
        _os_log_impl((void *)&_mh_execute_header, v20, v21, "(cleanupOrphans) record download expected error:%@", (uint8_t *)v22, 0xCu);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1001F9888(v17, 1);
        sub_1001F9888(v17, 1);
      }

      v181[0] = (uint64_t)v17;
      swift_errorRetain();
      sub_100010218((uint64_t *)&unk_1007FC0D0);
      type metadata accessor for CKError(0);
      if (swift_dynamicCast())
      {
        sub_1001F9894();
        _BridgedStoredNSError.code.getter();
        if (v181[0] == 11)
        {
          uint64_t v156 = v180;
          id v34 = [v174 recordName];
          uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v37 = v36;

          if (*(void *)(a2 + 16))
          {
            unint64_t v38 = sub_10001B5D0(v35, v37);
            if (v39)
            {
              unint64_t v177 = v7;
              unint64_t v40 = *(void *)(*(void *)(a2 + 56) + 8 * v38);
              swift_bridgeObjectRetain_n();
              swift_bridgeObjectRelease();
              id v41 = v174;
              Swift::String v42 = Logger.logObject.getter();
              os_log_type_t v43 = static os_log_type_t.default.getter();
              unint64_t v44 = v40 >> 62;
              unint64_t v171 = v40;
              if (os_log_type_enabled(v42, v43))
              {
                uint64_t v45 = swift_slowAlloc();
                v181[0] = swift_slowAlloc();
                *(_DWORD *)uint64_t v45 = v155;
                id v46 = [v41 recordName];
                unint64_t v47 = v44;
                uint64_t v48 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                unint64_t v50 = v49;

                uint64_t v51 = v48;
                unint64_t v44 = v47;
                sub_10011EA98(v51, v50, v181);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();

                swift_bridgeObjectRelease();
                *(_WORD *)(v45 + 12) = 2048;
                unint64_t v40 = v171;
                if (v47)
                {
                  swift_bridgeObjectRetain();
                  uint64_t v52 = _CocoaArrayWrapper.endIndex.getter();
                  swift_bridgeObjectRelease();
                }
                else
                {
                  uint64_t v52 = *(void *)((v171 & 0xFFFFFFFFFFFFFF8) + 0x10);
                }
                swift_bridgeObjectRelease();
                id v180 = (void *)v52;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v42, v43, "(cleanupOrphans) for parent asset:%s doesn't exist and should remove attachments orphans:%ld", (uint8_t *)v45, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                uint64_t v4 = v157;
              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              a2 = v159;
              if (v44)
              {
                swift_bridgeObjectRetain();
                uint64_t v117 = _CocoaArrayWrapper.endIndex.getter();
                swift_bridgeObjectRelease();
                unint64_t v7 = v177;
                if (v117)
                {
LABEL_77:
                  if (v117 < 1) {
                    goto LABEL_115;
                  }
                  uint64_t v118 = 0;
                  unint64_t v167 = v40 & 0xC000000000000001;
                  uint64_t v170 = v117;
                  do
                  {
                    if (v167) {
                      id v119 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                    }
                    else {
                      id v119 = *(id *)(v40 + 8 * v118 + 32);
                    }
                    uint64_t v120 = v119;
                    [v119 setIsRemovedFromCloud:1 v155];
                    id v121 = v41;
                    id v122 = v120;
                    uint64_t v123 = Logger.logObject.getter();
                    os_log_type_t v124 = static os_log_type_t.error.getter();
                    if (os_log_type_enabled(v123, v124))
                    {
                      id v125 = v122;
                      uint64_t v126 = swift_slowAlloc();
                      uint64_t v162 = (void *)swift_slowAlloc();
                      id v165 = v125;
                      v181[0] = swift_slowAlloc();
                      *(_DWORD *)uint64_t v126 = 138412546;
                      *(void *)(v126 + 4) = v125;
                      void *v162 = v125;
                      *(_WORD *)(v126 + 12) = 2080;
                      id v127 = v41;
                      id v128 = [v121 recordName];
                      uint64_t v129 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                      uint64_t v130 = v17;
                      unint64_t v132 = v131;

                      id v41 = v127;
                      uint64_t v133 = v129;
                      unint64_t v7 = v177;
                      *(void *)(v126 + 14) = sub_10011EA98(v133, v132, v181);

                      uint64_t v17 = v130;
                      a2 = v159;
                      swift_bridgeObjectRelease();
                      _os_log_impl((void *)&_mh_execute_header, v123, v124, "(cleanupOrphans) attachment orphan is marked as removed from cloud orphanMO: %@ because parent is not found parent:%s", (uint8_t *)v126, 0x16u);
                      sub_100010218((uint64_t *)&unk_1007FC430);
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_arrayDestroy();
                      swift_slowDealloc();
                      swift_slowDealloc();
                    }
                    else
                    {
                    }
                    unint64_t v40 = v171;
                    ++v118;
                  }
                  while (v170 != v118);
                  uint64_t v4 = v157;
                }
              }
              else
              {
                uint64_t v117 = *(void *)((v40 & 0xFFFFFFFFFFFFFF8) + 0x10);
                unint64_t v7 = v177;
                if (v117) {
                  goto LABEL_77;
                }
              }
            }
          }
          swift_bridgeObjectRelease();
          id v142 = v174;
          uint64_t v143 = Logger.logObject.getter();
          os_log_type_t v144 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v143, v144))
          {
            uint64_t v145 = swift_slowAlloc();
            v181[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v145 = 136315138;
            uint64_t v146 = v17;
            unint64_t v147 = v7;
            id v148 = [v142 recordName];
            uint64_t v149 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v151 = v150;

            unint64_t v7 = v147;
            *(void *)(v145 + 4) = sub_10011EA98(v149, v151, v181);

            uint64_t v4 = v157;
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v143, v144, "(cleanupOrphans) parent asset not found with id:%s", (uint8_t *)v145, 0xCu);
            swift_arrayDestroy();
            a2 = v159;
            swift_slowDealloc();
            swift_slowDealloc();

            sub_1001F9888(v146, 1);
            long long v152 = v146;
            goto LABEL_104;
          }

          sub_1001F9888(v17, 1);
          Swift::String v85 = v156;
          goto LABEL_102;
        }
      }
      swift_errorRetain();
      swift_errorRetain();
      id v80 = Logger.logObject.getter();
      os_log_type_t v81 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v80, v81))
      {
        uint64_t v82 = swift_slowAlloc();
        uint64_t v83 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v82 = 138412290;
        swift_errorRetain();
        uint64_t v84 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v82 + 4) = v84;
        *uint64_t v83 = v84;
        sub_1001F9888(v17, 1);
        sub_1001F9888(v17, 1);
        _os_log_impl((void *)&_mh_execute_header, v80, v81, "(cleanupOrphans) parent asset unexpected error: %@", (uint8_t *)v82, 0xCu);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        sub_1001F9888(v17, 1);
        Swift::String v85 = v174;
LABEL_102:

        goto LABEL_103;
      }

      sub_1001F9888(v17, 1);
      sub_1001F9888(v17, 1);
      swift_errorRelease();

LABEL_103:
      long long v152 = v17;
LABEL_104:
      sub_1001F9888(v152, 1);
    }
    else
    {
      uint64_t v25 = a2;
      sub_1001F987C(v17, 0);
      sub_1001F987C(v17, 0);
      uint64_t v26 = qword_1007F6B88;
      id v27 = v15;
      if (v26 != -1) {
        swift_once();
      }
      uint64_t v28 = type metadata accessor for Logger();
      sub_100026A54(v28, (uint64_t)qword_100803390);
      id v29 = v17;
      uint64_t v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.default.getter();
      unint64_t v175 = v29;
      if (os_log_type_enabled(v30, v31))
      {
        uint64_t v32 = swift_slowAlloc();
        char v33 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v32 = 138412290;
        *(void *)(v32 + 4) = v29;
        *char v33 = v17;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "(cleanupOrphans) lost parent asset found: %@", (uint8_t *)v32, 0xCu);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        a2 = v25;
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        sub_1001F9888(v17, 0);
        a2 = v25;
      }

      id v53 = [v27 recordName];
      uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v56 = v55;

      if (*(void *)(a2 + 16) && (unint64_t v57 = sub_10001B5D0(v54, v56), (v58 & 1) != 0))
      {
        uint64_t v166 = v17;
        unint64_t v178 = v7;
        unint64_t v59 = *(void *)(*(void *)(a2 + 56) + 8 * v57);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (qword_1007F6D38 != -1) {
          swift_once();
        }
        id v60 = *(id *)(qword_10083D2F8 + 16);
        id v61 = [v27 recordName];
        uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v64 = v63;

        uint64_t v168 = sub_1004ECAB0(v62, v64, a3);
        swift_bridgeObjectRelease();
        id v65 = *(id *)(qword_10083D2F8 + 16);
        id v172 = v27;
        id v66 = [v27 recordName];
        uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v69 = v68;

        id v70 = [a3 updatedObjects];
        sub_10001B284(0, &qword_1008113A0);
        sub_100082CD4();
        uint64_t v71 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

        swift_bridgeObjectRetain();
        sub_1002A43F8(v71, v67, v69);
        uint64_t v73 = v72;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (!v73) {
          goto LABEL_53;
        }
        uint64_t v74 = v65;
        type metadata accessor for JournalEntryAssetMO();
        uint64_t v75 = swift_dynamicCastClass();
        if (!v75)
        {

LABEL_53:
          id v86 = [a3 insertedObjects:v155];
          uint64_t v87 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

          swift_bridgeObjectRetain();
          sub_1002A43F8(v87, v67, v69);
          id v89 = v88;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v89)
          {
            type metadata accessor for JournalEntryAssetMO();
            uint64_t v79 = (void *)swift_dynamicCastClass();

            swift_bridgeObjectRelease();
            uint64_t v77 = v172;
            id v78 = v175;
            if (!v79) {
          }
            }
          else
          {

            swift_bridgeObjectRelease();
            uint64_t v79 = 0;
            uint64_t v77 = v172;
            id v78 = v175;
          }
          goto LABEL_57;
        }
        os_log_type_t v76 = (void *)v75;

        swift_bridgeObjectRelease();
        uint64_t v77 = v172;
        id v78 = v175;
        uint64_t v79 = v76;
LABEL_57:
        id v90 = (void *)v168;
        if (v168)
        {
          unint64_t v176 = v59 >> 62;
          unint64_t v163 = v79;
          id v91 = (id)v168;
          goto LABEL_61;
        }
        if (v79)
        {
          unint64_t v176 = v59 >> 62;
          unint64_t v163 = v79;
          id v91 = v79;
          id v90 = 0;
LABEL_61:
          id v92 = v77;
          id v169 = v90;
          id v93 = Logger.logObject.getter();
          os_log_type_t v94 = static os_log_type_t.default.getter();
          uint64_t v173 = v92;
          if (os_log_type_enabled(v93, v94))
          {
            unint64_t v95 = (uint8_t *)swift_slowAlloc();
            v181[0] = swift_slowAlloc();
            *(_DWORD *)unint64_t v95 = 136315138;
            id v96 = [v92 recordName];
            uint64_t v97 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v99 = v98;

            id v180 = (void *)sub_10011EA98(v97, v99, v181);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();

            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v93, v94, "(cleanupOrphans) lost parent asset %s found locally", v95, 0xCu);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
          }
          uint64_t v4 = v157;
          id v100 = *(void **)(qword_10083D2F8 + 16);
          if (v176)
          {
            swift_bridgeObjectRetain();
            id v141 = v100;
            uint64_t v101 = _CocoaArrayWrapper.endIndex.getter();
            id v103 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
            if (!v101) {
              goto LABEL_97;
            }
          }
          else
          {
            uint64_t v101 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            id v102 = v100;
            id v103 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
            if (!v101) {
              goto LABEL_97;
            }
          }
          if (v101 < 1) {
            goto LABEL_114;
          }
          for (uint64_t i = 0; i != v101; ++i)
          {
            if ((v59 & 0xC000000000000001) != 0) {
              id v105 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v105 = *(id *)(v59 + 8 * i + 32);
            }
            id v106 = v105;
            [v91 v103[476] v105 v155];
          }
LABEL_97:
          swift_bridgeObjectRelease();
          sub_1001F9888(v166, 0);
          swift_bridgeObjectRelease();

          sub_1001F9888(v166, 0);
          a2 = v159;
          unint64_t v7 = v178;
        }
        else
        {
          id v107 = *(id *)(qword_10083D2F8 + 16);
          id v108 = sub_1004ECD3C(v78, (uint64_t)a3);

          swift_bridgeObjectRetain_n();
          id v109 = v108;
          id v110 = Logger.logObject.getter();
          os_log_type_t v111 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v110, v111))
          {
            uint64_t v112 = swift_slowAlloc();
            unint64_t v164 = (void *)swift_slowAlloc();
            v181[0] = swift_slowAlloc();
            *(_DWORD *)uint64_t v112 = 138412546;
            id v113 = v109;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            *unint64_t v164 = v109;

            *(_WORD *)(v112 + 12) = 2080;
            type metadata accessor for JournalEntryAssetFileAttachmentMO();
            swift_bridgeObjectRetain();
            uint64_t v114 = Array.description.getter();
            unint64_t v116 = v115;
            swift_bridgeObjectRelease();
            id v180 = (void *)sub_10011EA98(v114, v116, v181);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl((void *)&_mh_execute_header, v110, v111, "(cleanupOrphans) lost parent asset re-created: %@ with children%s", (uint8_t *)v112, 0x16u);
            sub_100010218((uint64_t *)&unk_1007FC430);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {

            swift_bridgeObjectRelease_n();
          }
          uint64_t v134 = *(void **)(qword_10083D2F8 + 16);
          if (v59 >> 62)
          {
            swift_bridgeObjectRetain();
            id v153 = v134;
            uint64_t v135 = _CocoaArrayWrapper.endIndex.getter();
            NSString v137 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
            if (!v135) {
              goto LABEL_106;
            }
          }
          else
          {
            uint64_t v135 = *(void *)((v59 & 0xFFFFFFFFFFFFFF8) + 0x10);
            swift_bridgeObjectRetain();
            id v136 = v134;
            NSString v137 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
            if (!v135) {
              goto LABEL_106;
            }
          }
          if (v135 < 1) {
            goto LABEL_116;
          }
          for (uint64_t j = 0; j != v135; ++j)
          {
            if ((v59 & 0xC000000000000001) != 0) {
              id v139 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v139 = *(id *)(v59 + 8 * j + 32);
            }
            id v140 = v139;
            [v109 v137[476] v139 v155];
          }
LABEL_106:
          swift_bridgeObjectRelease();
          sub_1001F9888(v17, 0);
          swift_bridgeObjectRelease();

          sub_1001F9888(v17, 0);
          uint64_t v4 = v157;
          unint64_t v7 = v178;
          a2 = v159;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        sub_1001F9888(v17, 0);

        sub_1001F9888(v17, 0);
      }
    }
  }
  if (__OFADD__(v179++, 1))
  {
    __break(1u);
LABEL_113:
    __break(1u);
LABEL_114:
    __break(1u);
LABEL_115:
    __break(1u);
LABEL_116:
    __break(1u);
    goto LABEL_117;
  }
  if (v179 >= v161) {
    goto LABEL_108;
  }
  unint64_t v13 = *(void *)(v160 + 8 * v179);
  if (v13) {
    goto LABEL_17;
  }
  int64_t v14 = v179 + 1;
  if (v179 + 1 >= v161) {
    goto LABEL_108;
  }
  unint64_t v13 = *(void *)(v160 + 8 * v14);
  if (v13) {
    goto LABEL_16;
  }
  int64_t v14 = v179 + 2;
  if (v179 + 2 >= v161) {
    goto LABEL_108;
  }
  unint64_t v13 = *(void *)(v160 + 8 * v14);
  if (v13)
  {
LABEL_16:
    int64_t v179 = v14;
LABEL_17:
    unint64_t v7 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v179 << 6);
    goto LABEL_18;
  }
  int64_t v14 = v179 + 3;
  if (v179 + 3 < v161)
  {
    unint64_t v13 = *(void *)(v160 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        int64_t v179 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          goto LABEL_113;
        }
        if (v179 >= v161) {
          goto LABEL_108;
        }
        unint64_t v13 = *(void *)(v160 + 8 * v179);
        ++v14;
        if (v13) {
          goto LABEL_17;
        }
      }
    }
    goto LABEL_16;
  }
LABEL_108:
  swift_release();
  if (([a3 hasChanges] & 1) == 0) {
    return;
  }
  if (qword_1007F6D38 != -1) {
LABEL_117:
  }
    swift_once();
  id v154 = *(id *)(qword_10083D2F8 + 16);
  sub_10029BA60(a3);
}

uint64_t sub_1001F9730()
{
  return swift_deallocObject();
}

uint64_t sub_1001F9768()
{
  return sub_1001F5518(*(void **)(v0 + 16));
}

uint64_t sub_1001F9770()
{
  return swift_deallocObject();
}

uint64_t sub_1001F9780(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1001F9790()
{
  return swift_release();
}

uint64_t *sub_1001F979C(uint64_t *a1)
{
  return sub_1001F6934(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001F97A8(uint64_t a1)
{
  return sub_100183E78(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001F97C8()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t *sub_1001F9808(uint64_t *a1)
{
  return sub_1001F8018(a1, *(void **)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_1001F9810()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1001F9848(uint64_t a1)
{
  return sub_10018414C(*(void *)a1, *(unsigned char *)(a1 + 8), *(void (**)(uint64_t *))(v1 + 16));
}

void sub_1001F9860()
{
  sub_1001F8198(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1001F986C()
{
  return swift_deallocObject();
}

id sub_1001F987C(void *a1, char a2)
{
  if (a2) {
    return (id)swift_errorRetain();
  }
  else {
    return a1;
  }
}

void sub_1001F9888(void *a1, char a2)
{
  if (a2) {
    swift_errorRelease();
  }
  else {
}
  }

unint64_t sub_1001F9894()
{
  unint64_t result = qword_1007FC440;
  if (!qword_1007FC440)
  {
    type metadata accessor for CKError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FC440);
  }
  return result;
}

uint64_t sub_1001F98F0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1001F9938()
{
  sub_1001F6AB4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1001F9944()
{
  return swift_deallocObject();
}

uint64_t sub_1001F9960(uint64_t a1)
{
  return sub_1001F97A8(a1);
}

ValueMetadata *type metadata accessor for SuggestionsTip()
{
  return &type metadata for SuggestionsTip;
}

uint64_t sub_1001F9990()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v4 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v6 = v5;
  char v8 = v7;
  if (qword_1007F7F18 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_100026A54(v0, (uint64_t)qword_10083EE68);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v9, v0);
  void v12[2] = Color.init(_:)();
  uint64_t v10 = Text.foregroundStyle<A>(_:)();
  sub_10002B8D0(v4, v6, v8 & 1);
  swift_release();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1001F9B88@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  v16[1] = a1;
  uint64_t v3 = type metadata accessor for PredicateExpressions.ComparisonOperator();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100010218(&qword_100802BB0);
  uint64_t v7 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_100802BB8);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014488(&qword_100802BC0, &qword_100802BB8);
  static PredicateExpressions.build_Arg<A>(_:)();
  uint64_t v18 = 3;
  static PredicateExpressions.build_Arg<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, enum case for PredicateExpressions.ComparisonOperator.greaterThan(_:), v3);
  a2[3] = sub_100010218(&qword_100802BC8);
  a2[4] = sub_1001E0E20();
  sub_100062E54(a2);
  sub_100014488(&qword_100802BE8, &qword_100802BB0);
  uint64_t v14 = v17;
  static PredicateExpressions.build_Comparison<A, B>(lhs:rhs:op:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v14);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1001F9E8C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_100010218(&qword_100801140);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = sub_100010218(&qword_100801148);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = &v11[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100014488(&qword_100801150, &qword_100801148);
  static PredicateExpressions.build_Arg<A>(_:)();
  v11[15] = 1;
  static PredicateExpressions.build_Arg<A>(_:)();
  a1[3] = sub_100010218(&qword_100801158);
  a1[4] = sub_1001A3300();
  sub_100062E54(a1);
  sub_100014488(&qword_100801178, &qword_100801140);
  static PredicateExpressions.build_Equal<A, B>(lhs:rhs:)();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1001FA0D0()
{
  uint64_t v0 = sub_100010218(&qword_100801138);
  sub_100035380(v0, qword_1008033B0);
  sub_100026A54(v0, (uint64_t)qword_1008033B0);
  id v1 = [self sharedInstance];
  [v1 onboardingFlowCompletionStatus];

  sub_100010218(&qword_100801180);
  type metadata accessor for Tips.ParameterOption();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1006D6280;
  static Tips.ParameterOption.transient.getter();
  return Tips.Parameter.init<A>(_:_:_:_:)();
}

uint64_t sub_1001FA24C()
{
  return Text.init(_:tableName:bundle:comment:)();
}

uint64_t sub_1001FA2B4()
{
  return Text.init(_:tableName:bundle:comment:)();
}

double *sub_1001FA31C()
{
  uint64_t v0 = type metadata accessor for Tips.Action();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  Tips.Action.init(id:perform:_:)();
  sub_100010218(&qword_100802BF0);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1006D6280;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v1 + 32))(v5 + v4, v3, v0);
  uint64_t v6 = sub_1001FA7E8(v5);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v6;
}

uint64_t sub_1001FA4B4()
{
  uint64_t v0 = sub_100010218(&qword_100801128);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Tips.MaxDisplayCount();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100801130);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  Tips.MaxDisplayCount.init(_:)();
  static Tips.OptionsBuilder.buildExpression<A>(_:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = v4;
  uint64_t v16 = &protocol witness table for Tips.MaxDisplayCount;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  static Tips.OptionsBuilder.buildPartialBlock<A>(first:)();
  uint64_t v15 = v8;
  uint64_t v16 = (void *)OpaqueTypeConformance2;
  swift_getOpaqueTypeConformance2();
  uint64_t v13 = static Tips.OptionsBuilder.buildFinalResult<A>(_:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

uint64_t sub_1001FA750@<X0>(uint64_t *a1@<X8>)
{
  sub_1001FB118();
  uint64_t result = Tip.id.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1001FA794()
{
  unint64_t result = qword_1008033C8;
  if (!qword_1008033C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008033C8);
  }
  return result;
}

double *sub_1001FA7E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Tips.Action();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_100010218(&qword_1008033D0);
  __chkstk_darwin(v41);
  unint64_t v40 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  char v39 = (uint64_t *)((char *)&v31 - v8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v31 - v10;
  Swift::String v42 = _swiftEmptyArrayStorage;
  sub_1001FAAE8(0, 0, 0);
  uint64_t v12 = v42;
  uint64_t v13 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  uint64_t v38 = v13;
  uint64_t v31 = a1;
  if (v13)
  {
    uint64_t v14 = 0;
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v15 = v3 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    unint64_t v34 = (*(unsigned __int8 *)(v15 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 64);
    uint64_t v35 = v16;
    uint64_t v18 = a1 + v34;
    uint64_t v19 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v36 = v15;
    uint64_t v37 = v2;
    uint64_t v32 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v33 = v17;
    do
    {
      uint64_t v20 = v41;
      os_log_type_t v21 = &v40[*(int *)(v41 + 48)];
      v35(v21, v18, v2);
      uint64_t v22 = v19;
      uint64_t v23 = (uint64_t)v39;
      uint64_t v24 = (char *)v39 + *(int *)(v20 + 48);
      *char v39 = v14;
      uint64_t v25 = *v22;
      (*v22)(v24, v21, v2);
      sub_1001FB050(v23, (uint64_t)v11);
      Tips.Action.with(index:)();
      sub_1001FB0B8((uint64_t)v11);
      uint64_t v12 = v42;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1001FAAE8(0, *((void *)v12 + 2) + 1, 1);
        uint64_t v12 = v42;
      }
      unint64_t v27 = *((void *)v12 + 2);
      unint64_t v26 = *((void *)v12 + 3);
      if (v27 >= v26 >> 1)
      {
        sub_1001FAAE8(v26 > 1, v27 + 1, 1);
        uint64_t v12 = v42;
      }
      ++v14;
      *((void *)v12 + 2) = v27 + 1;
      uint64_t v28 = v33;
      unint64_t v29 = (unint64_t)v12 + v34 + v27 * v33;
      uint64_t v2 = v37;
      uint64_t v19 = v32;
      v25((char *)v29, v5, v37);
      Swift::String v42 = v12;
      v18 += v28;
    }
    while (v38 != v14);
  }
  swift_bridgeObjectRelease();
  return v12;
}

size_t sub_1001FAAE8(size_t a1, int64_t a2, char a3)
{
  size_t result = sub_1001FAB08(a1, a2, a3, *v3);
  *uint64_t v3 = result;
  return result;
}

size_t sub_1001FAB08(size_t result, int64_t a2, char a3, unint64_t a4)
{
  char v5 = result;
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_30:
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100010218(&qword_100802BF0);
  uint64_t v10 = *(void *)(type metadata accessor for Tips.Action() - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (double *)swift_allocObject();
  size_t result = j__malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (result - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_29;
  }
  *((void *)v13 + 2) = v8;
  *((void *)v13 + 3) = 2 * ((uint64_t)(result - v12) / v11);
LABEL_19:
  uint64_t v15 = *(void *)(type metadata accessor for Tips.Action() - 8);
  if (v5)
  {
    if ((unint64_t)v13 < a4
      || (unint64_t v16 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80),
          (unint64_t)v13 + v16 >= a4 + v16 + *(void *)(v15 + 72) * v8))
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (double *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return (size_t)v13;
}

uint64_t sub_1001FACDC()
{
  uint64_t v0 = sub_100010218(&qword_100801138);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218(qword_100802748);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Tips.Rule();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F6E00 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_100026A54(v4, (uint64_t)qword_10083D390);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v12, v4);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v9 + 8);
  v13(v11, v8);
  if (qword_1007F6B90 != -1) {
    swift_once();
  }
  uint64_t v14 = sub_100026A54(v0, (uint64_t)qword_1008033B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v14, v0);
  Tips.Rule.init<A>(_:_:)();
  static Tips.RuleBuilder.buildExpression(_:)();
  v13(v11, v8);
  static Tips.RuleBuilder.buildPartialBlock(first:)();
  swift_bridgeObjectRelease();
  uint64_t v15 = static Tips.RuleBuilder.buildPartialBlock(accumulated:next:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1001FB050(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1008033D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1001FB0B8(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1008033D0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1001FB118()
{
  unint64_t result = qword_1008033D8;
  if (!qword_1008033D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008033D8);
  }
  return result;
}

uint64_t type metadata accessor for AssetAnalytics()
{
  return self;
}

double sub_1001FB190()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v23 - v5;
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void **)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v23 - v12;
  sub_100045944(v0, (uint64_t)v6);
  uint64_t v14 = (unsigned int (*)(char *, uint64_t, uint64_t))v8[6];
  if (v14(v6, 1, v7) == 1)
  {
    uint64_t v15 = (uint64_t)v6;
  }
  else
  {
    unint64_t v16 = v6;
    uint64_t v17 = (void (*)(char *, char *, uint64_t))v8[4];
    v17(v13, v16, v7);
    uint64_t v18 = type metadata accessor for AssetAnalytics.AssetTransferEvent.TimeRange(0);
    sub_100045944(v0 + *(int *)(v18 + 20), (uint64_t)v3);
    if (v14(v3, 1, v7) != 1)
    {
      v17(v10, v3, v7);
      Date.timeIntervalSince(_:)();
      double v19 = v20;
      os_log_type_t v21 = (void (*)(char *, uint64_t))v8[1];
      v21(v10, v7);
      v21(v13, v7);
      return v19;
    }
    ((void (*)(char *, uint64_t))v8[1])(v13, v7);
    uint64_t v15 = (uint64_t)v3;
  }
  sub_1000AC7D4(v15);
  return 0.0;
}

void sub_1001FB3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100010218(&qword_100803478);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6270;
  *(void *)(inited + 32) = 0x74657373416D756ELL;
  *(void *)(inited + 40) = 0xE900000000000073;
  *(void *)(inited + 48) = [objc_allocWithZone((Class)NSNumber) initWithInteger:a1];
  *(void *)(inited + 56) = 0xD000000000000010;
  *(void *)(inited + 64) = 0x80000001006902F0;
  *(void *)(inited + 72) = [objc_allocWithZone((Class)NSNumber) initWithInteger:a2];
  sub_100397390(inited);
  if (*(void *)(a3 + 8))
  {
    id v7 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain();
    NSString v8 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v9 = [v7 initWithString:v8];

    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_10059A074((uint64_t)v9, 0x726566736E617274, 0xEA00000000004449, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  type metadata accessor for AssetAnalytics.AssetTransferEvent(0);
  double v11 = sub_1001FB190() * 10000.0;
  if ((~*(void *)&v11 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v11 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (v11 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v12 = [objc_allocWithZone((Class)NSNumber) initWithInteger:(uint64_t)v11];
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  sub_10059A074((uint64_t)v12, 0xD000000000000011, 0x8000000100690310, v13);
  swift_bridgeObjectRelease();
  double v14 = sub_1001FB190() * 10000.0;
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v14 >= 9.22337204e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v15 = [objc_allocWithZone((Class)NSNumber) initWithInteger:(uint64_t)v14];
  char v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_10059A074((uint64_t)v15, 0xD000000000000011, 0x8000000100690330, v16);
  swift_bridgeObjectRelease();
  double v17 = sub_1001FB190() * 10000.0;
  if ((~*(void *)&v17 & 0x7FF0000000000000) == 0)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (v17 <= -9.22337204e18)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v17 < 9.22337204e18)
  {
    id v18 = [objc_allocWithZone((Class)NSNumber) initWithInteger:(uint64_t)v17];
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    sub_10059A074((uint64_t)v18, 0xD000000000000012, 0x8000000100690350, v19);
    swift_bridgeObjectRelease();
    return;
  }
LABEL_21:
  __break(1u);
}

uint64_t type metadata accessor for AssetAnalytics.AssetTransferEvent(uint64_t a1)
{
  return sub_10003352C(a1, qword_100803568);
}

uint64_t type metadata accessor for AssetAnalytics.AssetTransferEvent.TimeRange(uint64_t a1)
{
  return sub_10003352C(a1, qword_1008034D8);
}

uint64_t *sub_1001FB7E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    id v9 = *(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      uint64_t v10 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v12 = *(int *)(a3 + 20);
    char v13 = (char *)a1 + v12;
    double v14 = (char *)a2 + v12;
    if (v9((uint64_t *)v14, 1, v7))
    {
      uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v13, v14, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1001FB9F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v4 - 8);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  if (!v5(a1, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v4);
  }
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v6, 1, v4);
  if (!result)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    return v8(v6, v4);
  }
  return result;
}

char *sub_1001FBB24(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(v12, 1, v6))
  {
    uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *sub_1001FBCE4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  double v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(v13, v14, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  return a1;
}

char *sub_1001FBF60(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v10 = *(int *)(a3 + 20);
  uint64_t v11 = &a1[v10];
  uint64_t v12 = &a2[v10];
  if (v8(v12, 1, v6))
  {
    uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v11, v12, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v11, 0, 1, v6);
  }
  return a1;
}

char *sub_1001FC120(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
LABEL_6:
    uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  double v14 = &a2[v12];
  int v15 = v8(&a1[v12], 1, v6);
  int v16 = v8(v14, 1, v6);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(v13, v14, v6);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v13, v6);
    goto LABEL_12;
  }
  if (v16)
  {
LABEL_12:
    uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v13, v14, *(void *)(*(void *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v13, v14, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v13, 0, 1, v6);
  return a1;
}

uint64_t sub_1001FC39C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FC3B0);
}

uint64_t sub_1001FC3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1001FC420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FC434);
}

uint64_t sub_1001FC434(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_1001FC4A8()
{
  sub_100033618();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *sub_1001FC534(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    int v9 = (char *)a1 + v8;
    int v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for Date();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    uint64_t v16 = type metadata accessor for AssetAnalytics.AssetTransferEvent.TimeRange(0);
    uint64_t v17 = *(int *)(v16 + 20);
    id v18 = &v9[v17];
    char v19 = &v10[v17];
    if (v13(v19, 1, v11))
    {
      uint64_t v20 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v19, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
    }
    uint64_t v21 = a3[6];
    uint64_t v22 = (char *)v4 + v21;
    uint64_t v23 = (char *)a2 + v21;
    if (v13((char *)a2 + v21, 1, v11))
    {
      uint64_t v24 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v22, v23, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v22, v23, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v22, 0, 1, v11);
    }
    uint64_t v25 = *(int *)(v16 + 20);
    unint64_t v26 = &v22[v25];
    unint64_t v27 = &v23[v25];
    if (v13(v27, 1, v11))
    {
      uint64_t v28 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v26, v27, *(void *)(*(void *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v26, v27, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v26, 0, 1, v11);
    }
    uint64_t v29 = a3[7];
    uint64_t v30 = (char *)v4 + v29;
    uint64_t v31 = (char *)a2 + v29;
    if (v13(v31, 1, v11))
    {
      uint64_t v32 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v30, v31, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v30, v31, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v30, 0, 1, v11);
    }
    uint64_t v33 = *(int *)(v16 + 20);
    unint64_t v34 = &v30[v33];
    uint64_t v35 = &v31[v33];
    if (v13(v35, 1, v11))
    {
      uint64_t v36 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v34, v35, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v34, 0, 1, v11);
    }
  }
  return v4;
}

uint64_t sub_1001FC9D0(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v4, v5);
  }
  uint64_t v7 = type metadata accessor for AssetAnalytics.AssetTransferEvent.TimeRange(0);
  uint64_t v8 = v4 + *(int *)(v7 + 20);
  if (!v6(v8, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v8, v5);
  }
  uint64_t v9 = a1 + a2[6];
  if (!v6(v9, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v9, v5);
  }
  uint64_t v10 = v9 + *(int *)(v7 + 20);
  if (!v6(v10, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v10, v5);
  }
  uint64_t v11 = a1 + a2[7];
  if (!v6(v11, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v11, v5);
  }
  uint64_t v12 = v11 + *(int *)(v7 + 20);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v12, 1, v5);
  if (!result)
  {
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8);
    return v14(v12, v5);
  }
  return result;
}

void *sub_1001FCC10(void *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = type metadata accessor for AssetAnalytics.AssetTransferEvent.TimeRange(0);
  uint64_t v15 = *(int *)(v14 + 20);
  uint64_t v16 = &v8[v15];
  uint64_t v17 = &v9[v15];
  if (v12(v17, 1, v10))
  {
    uint64_t v18 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v17, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
  }
  uint64_t v19 = a3[6];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = &a2[v19];
  if (v12(&a2[v19], 1, v10))
  {
    uint64_t v22 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v20, v21, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
  }
  uint64_t v23 = *(int *)(v14 + 20);
  uint64_t v24 = &v20[v23];
  uint64_t v25 = &v21[v23];
  if (v12(v25, 1, v10))
  {
    uint64_t v26 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v24, v25, *(void *)(*(void *)(v26 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v24, v25, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
  }
  uint64_t v27 = a3[7];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = &a2[v27];
  if (v12(v29, 1, v10))
  {
    uint64_t v30 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v28, v29, *(void *)(*(void *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v28, v29, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v28, 0, 1, v10);
  }
  uint64_t v31 = *(int *)(v14 + 20);
  uint64_t v32 = &v28[v31];
  uint64_t v33 = &v29[v31];
  if (v12(v33, 1, v10))
  {
    uint64_t v34 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v32, v33, *(void *)(*(void *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v32, v33, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v32, 0, 1, v10);
  }
  return a1;
}

char *sub_1001FD05C(char *a1, void *a2, int *a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  unint64_t v47 = a1;
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = type metadata accessor for AssetAnalytics.AssetTransferEvent.TimeRange(0);
  uint64_t v16 = *(int *)(v15 + 20);
  uint64_t v17 = &v7[v16];
  uint64_t v18 = &v8[v16];
  int v19 = v11(v17, 1, v9);
  int v20 = v11(v18, 1, v9);
  if (v19)
  {
    if (!v20)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v17, v18, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v17, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v20)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v17, v9);
LABEL_12:
    uint64_t v21 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v17, v18, v9);
LABEL_13:
  uint64_t v22 = a3[6];
  uint64_t v23 = &v47[v22];
  uint64_t v24 = (char *)a2 + v22;
  int v25 = v11(&v47[v22], 1, v9);
  int v26 = v11(v24, 1, v9);
  if (v25)
  {
    if (!v26)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v23, v24, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v23, v9);
LABEL_18:
    uint64_t v27 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v23, v24, *(void *)(*(void *)(v27 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v23, v24, v9);
LABEL_19:
  uint64_t v28 = *(int *)(v15 + 20);
  uint64_t v29 = &v23[v28];
  uint64_t v30 = &v24[v28];
  int v31 = v11(v29, 1, v9);
  int v32 = v11(v30, 1, v9);
  if (v31)
  {
    if (!v32)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v29, v30, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v29, 0, 1, v9);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v32)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v29, v9);
LABEL_24:
    uint64_t v33 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v29, v30, *(void *)(*(void *)(v33 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v29, v30, v9);
LABEL_25:
  uint64_t v34 = a3[7];
  uint64_t v35 = &v47[v34];
  uint64_t v36 = (char *)a2 + v34;
  int v37 = v11(&v47[v34], 1, v9);
  int v38 = v11(v36, 1, v9);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v35, v36, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v35, 0, 1, v9);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v35, v9);
LABEL_30:
    uint64_t v39 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v35, v36, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v35, v36, v9);
LABEL_31:
  uint64_t v40 = *(int *)(v15 + 20);
  uint64_t v41 = &v35[v40];
  Swift::String v42 = &v36[v40];
  int v43 = v11(v41, 1, v9);
  int v44 = v11(v42, 1, v9);
  if (!v43)
  {
    if (!v44)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v41, v42, v9);
      return v47;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v41, v9);
    goto LABEL_36;
  }
  if (v44)
  {
LABEL_36:
    uint64_t v45 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v41, v42, *(void *)(*(void *)(v45 - 8) + 64));
    return v47;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v41, v42, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v41, 0, 1, v9);
  return v47;
}

_OWORD *sub_1001FD708(_OWORD *a1, char *a2, int *a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    uint64_t v12 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = type metadata accessor for AssetAnalytics.AssetTransferEvent.TimeRange(0);
  uint64_t v14 = *(int *)(v13 + 20);
  uint64_t v15 = &v7[v14];
  uint64_t v16 = &v8[v14];
  if (v11(v16, 1, v9))
  {
    uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
  }
  uint64_t v18 = a3[6];
  int v19 = (char *)a1 + v18;
  int v20 = &a2[v18];
  if (v11(&a2[v18], 1, v9))
  {
    uint64_t v21 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v20, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  uint64_t v22 = *(int *)(v13 + 20);
  uint64_t v23 = &v19[v22];
  uint64_t v24 = &v20[v22];
  if (v11(v24, 1, v9))
  {
    uint64_t v25 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v23, v24, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, v9);
  }
  uint64_t v26 = a3[7];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = &a2[v26];
  if (v11(v28, 1, v9))
  {
    uint64_t v29 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v27, v28, *(void *)(*(void *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v27, v28, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v27, 0, 1, v9);
  }
  uint64_t v30 = *(int *)(v13 + 20);
  int v31 = &v27[v30];
  int v32 = &v28[v30];
  if (v11(v32, 1, v9))
  {
    uint64_t v33 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v31, v32, *(void *)(*(void *)(v33 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v31, v32, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v31, 0, 1, v9);
  }
  return a1;
}

char *sub_1001FDB4C(char *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v48 = a1;
  uint64_t v8 = &a1[v7];
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int v13 = v12(v8, 1, v10);
  int v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v8, v9, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  uint64_t v16 = type metadata accessor for AssetAnalytics.AssetTransferEvent.TimeRange(0);
  uint64_t v17 = *(int *)(v16 + 20);
  uint64_t v18 = &v8[v17];
  int v19 = &v9[v17];
  int v20 = v12(v18, 1, v10);
  int v21 = v12(v19, 1, v10);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v18, v19, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v18, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v21)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
LABEL_12:
    uint64_t v22 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v18, v19, v10);
LABEL_13:
  uint64_t v23 = a3[6];
  uint64_t v24 = &v48[v23];
  uint64_t v25 = (char *)a2 + v23;
  int v26 = v12(&v48[v23], 1, v10);
  int v27 = v12(v25, 1, v10);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v24, v25, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v24, 0, 1, v10);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v27)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v24, v10);
LABEL_18:
    uint64_t v28 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v24, v25, v10);
LABEL_19:
  uint64_t v29 = *(int *)(v16 + 20);
  uint64_t v30 = &v24[v29];
  int v31 = &v25[v29];
  int v32 = v12(v30, 1, v10);
  int v33 = v12(v31, 1, v10);
  if (v32)
  {
    if (!v33)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v30, v31, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v30, 0, 1, v10);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  if (v33)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v30, v10);
LABEL_24:
    uint64_t v34 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v30, v31, *(void *)(*(void *)(v34 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v30, v31, v10);
LABEL_25:
  uint64_t v35 = a3[7];
  uint64_t v36 = &v48[v35];
  int v37 = (char *)a2 + v35;
  int v38 = v12(&v48[v35], 1, v10);
  int v39 = v12(v37, 1, v10);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v37, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v36, 0, 1, v10);
      goto LABEL_31;
    }
    goto LABEL_30;
  }
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v36, v10);
LABEL_30:
    uint64_t v40 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v36, v37, *(void *)(*(void *)(v40 - 8) + 64));
    goto LABEL_31;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v36, v37, v10);
LABEL_31:
  uint64_t v41 = *(int *)(v16 + 20);
  Swift::String v42 = &v36[v41];
  int v43 = &v37[v41];
  int v44 = v12(v42, 1, v10);
  int v45 = v12(v43, 1, v10);
  if (!v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v42, v43, v10);
      return v48;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v42, v10);
    goto LABEL_36;
  }
  if (v45)
  {
LABEL_36:
    uint64_t v46 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
    return v48;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v42, v43, v10);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v42, 0, 1, v10);
  return v48;
}

uint64_t sub_1001FE1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1001FE1FC);
}

uint64_t sub_1001FE1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = type metadata accessor for AssetAnalytics.AssetTransferEvent.TimeRange(0);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1001FE2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1001FE2CC);
}

uint64_t sub_1001FE2CC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = type metadata accessor for AssetAnalytics.AssetTransferEvent.TimeRange(0);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_1001FE374()
{
  uint64_t result = type metadata accessor for AssetAnalytics.AssetTransferEvent.TimeRange(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1001FE410()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  sub_10002C4EC((uint64_t)v14, (uint64_t)v15, &qword_1007FAD50);
  if (!v15[3])
  {
    sub_10001457C((uint64_t)v15, &qword_1007FAD50);
    goto LABEL_10;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_10:
    unint64_t v5 = 0x8000000100690550;
    uint64_t v3 = 1;
    goto LABEL_11;
  }
  uint64_t v3 = v13;
  unint64_t v4 = "No iCloud Syncing Enabled within UserDefaults";
  if (v13) {
    unint64_t v4 = "iCloud Syncing is Enabled within UserDefaults";
  }
  unint64_t v5 = (unint64_t)(v4 - 32) | 0x8000000000000000;
LABEL_11:
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100026A54(v6, (uint64_t)qword_1008035B0);
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    v15[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v10 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&v14[0] = sub_10011EA98(v10, v11, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    swift_bridgeObjectRetain();
    *(void *)&v14[0] = sub_10011EA98(0xD00000000000002DLL, v5, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  return v3;
}

uint64_t sub_1001FE798()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1008035B0);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1008035B0);
  if (qword_1007F7D10 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB30);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1001FE860(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v101 = a1;
  id v103 = (void *)type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v3 = *(v103 - 1);
  __chkstk_darwin(v103);
  unint64_t v5 = (char *)v97 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8);
  sub_100010218(&qword_100803900);
  swift_allocObject();
  v1[6] = PassthroughSubject.init()();
  v1[7] = 0;
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  static DispatchQoS.background.getter();
  id v105 = (unint64_t *)&_swiftEmptyArrayStorage;
  sub_10021852C((unint64_t *)&unk_100804D90, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100010218((uint64_t *)&unk_100803980);
  sub_100014488(&qword_100804DA0, (uint64_t *)&unk_100803980);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, void *))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v103);
  v1[8] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  os_log_type_t v8 = (uint64_t (*)(__n128))((char *)v1 + OBJC_IVAR____TtC7Journal9DataStack_downloadStagingPath);
  type metadata accessor for AssetsFileManager();
  sub_1000C534C(v8);
  *(void *)((char *)v2 + OBJC_IVAR____TtC7Journal9DataStack_assetIDsToRefresh) = &_swiftEmptySetSingleton;
  *(void *)((char *)v2 + OBJC_IVAR____TtC7Journal9DataStack_attachmentIDsToRefresh) = &_swiftEmptySetSingleton;
  *(void *)((char *)v2 + OBJC_IVAR____TtC7Journal9DataStack_deletedAssetsToStop) = &_swiftEmptySetSingleton;
  *(void *)((char *)v2 + OBJC_IVAR____TtC7Journal9DataStack_deletedEntriesToStop) = &_swiftEmptySetSingleton;
  *((unsigned char *)v2 + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) = 0;
  uint64_t v9 = OBJC_IVAR____TtC7Journal9DataStack_lockIsProtectedDataAvailable;
  *(void *)((char *)v2 + v9) = [objc_allocWithZone((Class)NSLock) init];
  UUID.init()();
  *((unsigned char *)v2 + OBJC_IVAR____TtC7Journal9DataStack_syncState) = 0;
  sub_1000C65A0();
  id v10 = objc_allocWithZone((Class)type metadata accessor for CoreDataStack());
  uint64_t v11 = swift_retain();
  uint64_t v12 = (void *)sub_100297090(v11);
  v2[2] = v12;
  id v13 = objc_allocWithZone((Class)type metadata accessor for CloudKitStack());
  uint64_t v14 = swift_retain();
  uint64_t v15 = sub_1002C9FBC(v14);
  v2[3] = v15;
  Class v99 = (Class)type metadata accessor for JurassicSyncEngineDataSource();
  id v16 = objc_allocWithZone(v99);
  id v17 = v12;
  uint64_t v18 = v15;
  id v19 = sub_1000A5624(v17, v18);

  v2[5] = v19;
  id v20 = [self sharedApplication];
  LOBYTE(v17) = [v20 isProtectedDataAvailable];

  *((unsigned char *)v2 + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) = (_BYTE)v17;
  int v21 = self;
  uint64_t v22 = v2[3];
  uint64_t v23 = v2[5];
  id v24 = *(id *)(v22 + OBJC_IVAR____TtC7Journal13CloudKitStack_ckDatabase);
  swift_unknownObjectRetain();
  URL._bridgeToObjectiveC()(v25);
  int v27 = v26;
  id v28 = [v21 configCreate:v24 ds:v23 md:0 directory:v26 fileProtectionType:*(void *)(v2[2] + OBJC_IVAR____TtC7Journal13CoreDataStack_storeFileProtectionType) assetDownloadStagingManager:*(void *)(v22 + OBJC_IVAR____TtC7Journal13CloudKitStack_assetDownloadStagingManager)];

  swift_unknownObjectRelease();
  id v29 = [v21 engineCreate:v28];
  _OWORD v2[4] = v29;
  [v29 setAutomaticSyncingEnabled:0];
  id v102 = v2;
  id v30 = [v21 idsToSaveIn:v2[4]];
  uint64_t v31 = sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
  unint64_t v32 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    id v100 = v28;
    if (v33) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    uint64_t v36 = (unint64_t *)&_swiftEmptyArrayStorage;
    goto LABEL_14;
  }
  uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v100 = v28;
  if (!v33) {
    goto LABEL_13;
  }
LABEL_3:
  id v105 = (unint64_t *)&_swiftEmptyArrayStorage;
  uint64_t result = sub_100095B64(0, v33 & ~(v33 >> 63), 0);
  if (v33 < 0)
  {
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v98 = v31;
  id v103 = v21;
  uint64_t v35 = 0;
  uint64_t v36 = v105;
  do
  {
    if ((v32 & 0xC000000000000001) != 0) {
      id v37 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v37 = *(id *)(v32 + 8 * v35 + 32);
    }
    int v38 = v37;
    id v39 = [v37 recordName];
    uint64_t v40 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v42 = v41;

    id v105 = v36;
    unint64_t v44 = v36[2];
    unint64_t v43 = v36[3];
    if (v44 >= v43 >> 1)
    {
      sub_100095B64(v43 > 1, v44 + 1, 1);
      uint64_t v36 = v105;
    }
    ++v35;
    v36[2] = v44 + 1;
    int v45 = &v36[2 * v44];
    v45[4] = v40;
    v45[5] = v42;
  }
  while (v33 != v35);
  swift_bridgeObjectRelease();
  int v21 = v103;
LABEL_14:
  id v46 = [v21 idsToDeleteIn:v102[4]];
  unint64_t v47 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v47 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v48 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v48)
    {
LABEL_16:
      id v105 = (unint64_t *)&_swiftEmptyArrayStorage;
      uint64_t result = sub_100095B64(0, v48 & ~(v48 >> 63), 0);
      if ((v48 & 0x8000000000000000) == 0)
      {
        uint64_t v49 = 0;
        unint64_t v50 = v105;
        id v103 = (void *)(v47 & 0xC000000000000001);
        unint64_t v51 = v47;
        do
        {
          if (v103) {
            id v52 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v52 = *(id *)(v47 + 8 * v49 + 32);
          }
          id v53 = v52;
          id v54 = [v52 recordName];
          uint64_t v55 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v57 = v56;

          id v105 = v50;
          unint64_t v59 = v50[2];
          unint64_t v58 = v50[3];
          if (v59 >= v58 >> 1)
          {
            sub_100095B64(v58 > 1, v59 + 1, 1);
            unint64_t v50 = v105;
          }
          ++v49;
          v50[2] = v59 + 1;
          id v60 = &v50[2 * v59];
          v60[4] = v55;
          v60[5] = v57;
          unint64_t v47 = v51;
        }
        while (v48 != v49);
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
LABEL_36:
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v48 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v48) {
      goto LABEL_16;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v50 = (unint64_t *)&_swiftEmptyArrayStorage;
LABEL_27:
  id v61 = v102;
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v62 = type metadata accessor for Logger();
  sub_100026A54(v62, (uint64_t)qword_1008035B0);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v63 = Logger.logObject.getter();
  os_log_type_t v64 = static os_log_type_t.default.getter();
  int v65 = v64;
  if (os_log_type_enabled(v63, v64))
  {
    uint64_t v66 = swift_slowAlloc();
    uint64_t v67 = (void *)swift_slowAlloc();
    v97[1] = v67;
    id v103 = (void *)swift_slowAlloc();
    id v105 = v103;
    *(_DWORD *)uint64_t v66 = 136447490;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v68 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v104 = sub_10011EA98(v68, v69, (uint64_t *)&v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 12) = 2112;
    LODWORD(v98) = v65;
    id v70 = (void *)v61[4];
    uint64_t v104 = (uint64_t)v70;
    id v71 = v70;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v67 = v70;
    swift_release_n();
    *(_WORD *)(v66 + 22) = 2048;
    uint64_t v72 = v36[2];
    swift_bridgeObjectRelease();
    uint64_t v104 = v72;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 32) = 2048;
    uint64_t v73 = v50[2];
    swift_bridgeObjectRelease();
    uint64_t v104 = v73;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 42) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v74 = Array.description.getter();
    unint64_t v76 = v75;
    swift_bridgeObjectRelease();
    uint64_t v104 = sub_10011EA98(v74, v76, (uint64_t *)&v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 52) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v77 = Array.description.getter();
    unint64_t v79 = v78;
    swift_bridgeObjectRelease();
    uint64_t v80 = v77;
    id v61 = v102;
    uint64_t v104 = sub_10011EA98(v80, v79, (uint64_t *)&v105);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v63, (os_log_type_t)v98, "%{public}s SyncEngine: %@ inited with to Save total: %ld to Delete total: %ld   \nto save:%s \nto delete:%s", (uint8_t *)v66, 0x3Eu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v81 = v61[2];
  uint64_t v82 = swift_allocObject();
  swift_weakInit();
  uint64_t v83 = (uint64_t (**)())(v81 + OBJC_IVAR____TtC7Journal13CoreDataStack_syncEngineMetadataToSave);
  *uint64_t v83 = sub_100219924;
  v83[1] = (uint64_t (*)())v82;
  swift_release();
  uint64_t v84 = swift_dynamicCastClass();
  Swift::String v85 = v100;
  if (v84)
  {
    uint64_t v86 = v84;
    uint64_t v87 = swift_allocObject();
    swift_weakInit();
    unint64_t v88 = (uint64_t (**)())(v86 + OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_handleData);
    uint64_t v89 = *(void *)(v86 + OBJC_IVAR____TtC7Journal28JurassicSyncEngineDataSource_handleData);
    void *v88 = sub_10021992C;
    v88[1] = (uint64_t (*)())v87;
    sub_10001ABB8(v89);
  }
  id v90 = self;
  id v91 = v61;
  id v92 = [v90 defaultCenter];
  [v92 addObserver:v61 selector:"protectedDataDidBecomeAvailableWithNotification:" name:UIApplicationProtectedDataDidBecomeAvailable object:0];

  id v93 = [v90 defaultCenter];
  [v93 addObserver:v61 selector:"protectedDataWillBecomeUnavailableWithNotification:" name:UIApplicationProtectedDataWillBecomeUnavailable object:0];

  id v94 = [v90 defaultCenter];
  [v94 addObserver:v61 selector:"contextDidSaveWithNotification:" name:NSManagedObjectContextDidSaveNotification object:0];

  id v95 = [v90 defaultCenter];
  uint64_t v96 = CKIdentityUpdateNotification;
  swift_retain();
  [v95 addObserver:v91 selector:"identityUpdateNotificationWithNotification:" name:v96 object:0];

  swift_release();
  swift_release();
  return (uint64_t)v91;
}

uint64_t sub_1001FF624()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v1 = Strong;
  if (Strong)
  {
    uint64_t v2 = (char *)*(id *)(Strong + 24);
    swift_release();
    uint64_t v1 = *(void *)&v2[OBJC_IVAR____TtC7Journal13CloudKitStack_inMemoryMetadata];
    sub_100040F10(v1, *(void *)&v2[OBJC_IVAR____TtC7Journal13CloudKitStack_inMemoryMetadata + 8]);
  }
  return v1;
}

uint64_t sub_1001FF6C0()
{
  uint64_t v0 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = result + OBJC_IVAR____TtC7Journal9DataStack_sessionID;
    uint64_t v10 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))((char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v9, v0);
    unint64_t v11 = (*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
    uint64_t v12 = (char *)swift_allocObject();
    *((void *)v12 + 2) = 0;
    *((void *)v12 + 3) = 0;
    *((void *)v12 + 4) = v8;
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(&v12[v11], v3, v0);
    swift_retain();
    sub_100328A60((uint64_t)v6, (uint64_t)&unk_100803990, (uint64_t)v12);
    swift_release();
    return swift_release();
  }
  return result;
}

id *sub_1001FF8D8()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  uint64_t v2 = (char *)v0 + OBJC_IVAR____TtC7Journal9DataStack_downloadStagingPath;
  uint64_t v3 = type metadata accessor for URL();
  (*(void (**)(char *, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  uint64_t v4 = (char *)v0 + OBJC_IVAR____TtC7Journal9DataStack_sessionID;
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return v0;
}

uint64_t sub_1001FFA40()
{
  sub_1001FF8D8();

  return swift_deallocClassInstance();
}

uint64_t sub_1001FFA98()
{
  return type metadata accessor for DataStack();
}

uint64_t type metadata accessor for DataStack()
{
  uint64_t result = qword_100803610;
  if (!qword_100803610) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1001FFAEC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Notification();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = __chkstk_darwin(v4).n128_u64[0];
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC7Journal9DataStack_lockIsProtectedDataAvailable;
  [*(id *)(v2 + OBJC_IVAR____TtC7Journal9DataStack_lockIsProtectedDataAvailable) lock];
  *(unsigned char *)(v2 + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) = 1;
  [*(id *)(v2 + v9) unlock];
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100026A54(v10, (uint64_t)qword_1008035B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  swift_retain_n();
  unint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v28 = v26;
    *(_DWORD *)uint64_t v13 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v27 = sub_10011EA98(v14, v15, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v13 + 12) = 2080;
    sub_10021852C((unint64_t *)&unk_100803940, (void (*)(uint64_t))&type metadata accessor for Notification);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v27 = sub_10011EA98(v16, v17, &v28);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s protectedDataDidBecomeAvailable %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }

  uint64_t v18 = *(void *)(v2 + 16);
  id v19 = [*(id *)(v18 + OBJC_IVAR____TtC7Journal13CoreDataStack_container) viewContext];
  id v20 = [v19 persistentStoreCoordinator];

  if (!v20) {
    goto LABEL_12;
  }
  id v21 = [v20 persistentStores];
  sub_10001B284(0, &qword_1008038C0);
  unint64_t v22 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v22 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease_n();

    if (!v24) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);

    swift_bridgeObjectRelease();
    if (!v23) {
      goto LABEL_12;
    }
  }
  if (*(unsigned char *)(v18 + OBJC_IVAR____TtC7Journal13CoreDataStack_persistentStoresLoadSuccess) == 1)
  {
    sub_1001FFF8C();
    sub_1004D1F8C();
    sub_100203AEC();
    return;
  }
LABEL_12:
  sub_100298890();
}

uint64_t sub_1001FFF8C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_100800F90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v5 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100010218(&qword_1008038F8);
  uint64_t v8 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(v0 + 48);
  swift_retain();
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
  unint64_t v11 = *(void **)(v0 + 64);
  id v19 = v11;
  uint64_t v12 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
  id v13 = v11;
  sub_100010218(&qword_100803900);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  sub_100014488(&qword_100803908, &qword_100803900);
  sub_1002192B0();
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_10001457C((uint64_t)v4, &qword_100800F90);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_100014488(&qword_100803918, &qword_1008038F8);
  uint64_t v14 = v18;
  uint64_t v15 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v14);
  *(void *)(v1 + 56) = v15;
  return swift_release();
}

id sub_1002002F0(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Notification();
  uint64_t v5 = *(void *)(v4 - 8);
  *(void *)&double v6 = __chkstk_darwin(v4).n128_u64[0];
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC7Journal9DataStack_lockIsProtectedDataAvailable;
  [*(id *)(v2 + OBJC_IVAR____TtC7Journal9DataStack_lockIsProtectedDataAvailable) lock:v6];
  *(unsigned char *)(v2 + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) = 0;
  [*(id *)(v2 + v9) unlock];
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100026A54(v10, (uint64_t)qword_1008035B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  swift_retain_n();
  unint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    aBlock[0] = v25;
    *(_DWORD *)uint64_t v13 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v26 = sub_10011EA98(v14, v15, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v13 + 12) = 2080;
    sub_10021852C((unint64_t *)&unk_100803940, (void (*)(uint64_t))&type metadata accessor for Notification);
    uint64_t v16 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v26 = sub_10011EA98(v16, v17, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s protectedDataWillBecomeUnavailable %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }

  uint64_t v18 = *(void *)(v2 + 16);
  uint64_t v19 = OBJC_IVAR____TtC7Journal13CoreDataStack_throttleSaveSubscription;
  if (*(void *)(v18 + OBJC_IVAR____TtC7Journal13CoreDataStack_throttleSaveSubscription))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  *(void *)(v18 + v19) = 0;
  swift_release();
  if (*(void *)(v2 + 56))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  *(void *)(v2 + 56) = 0;
  swift_release();
  [*(id *)(v2 + 32) setAutomaticSyncingEnabled:0];
  uint64_t v20 = *(void **)(v2 + 32);
  uint64_t v21 = swift_allocObject();
  swift_weakInit();
  aBlock[4] = (uint64_t)sub_10021984C;
  aBlock[5] = v21;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_10017D530;
  void aBlock[3] = (uint64_t)&unk_10079F6E0;
  unint64_t v22 = _Block_copy(aBlock);
  id v23 = v20;
  swift_release();
  [v23 cancelOperationsWithCompletionHandler:v22];
  _Block_release(v22);

  sub_1005B6774();
  sub_1005B6790();
  return sub_1005B6900();
}

void sub_1002007D4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Notification();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Notification.object.getter();
  if (v41[3])
  {
    sub_10001B284(0, (unint64_t *)&unk_100806100);
    if (swift_dynamicCast())
    {
      uint64_t v39 = a1;
      uint64_t v8 = (void *)v40;
      if (qword_1007F6B98 != -1) {
        swift_once();
      }
      uint64_t v9 = type metadata accessor for Logger();
      uint64_t v10 = sub_100026A54(v9, (uint64_t)qword_1008035B0);
      swift_retain_n();
      unint64_t v11 = v8;
      os_log_type_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.debug.getter();
      int v14 = v13;
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v15 = swift_slowAlloc();
        uint64_t v16 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v15 = 138412802;
        uint64_t v38 = v10;
        HIDWORD(v37) = v14;
        v41[0] = (uint64_t)v11;
        unint64_t v17 = v11;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v16 = v11;

        *(_WORD *)(v15 + 12) = 2112;
        uint64_t v18 = *(void *)(v2 + 16);
        uint64_t v19 = *(void **)(v18 + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
        v41[0] = (uint64_t)v19;
        id v20 = v19;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        v16[1] = v19;
        swift_release_n();
        *(_WORD *)(v15 + 22) = 2112;
        uint64_t v21 = *(void **)(v18 + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
        v41[0] = (uint64_t)v21;
        id v22 = v21;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void v16[2] = v21;
        swift_release_n();
        _os_log_impl((void *)&_mh_execute_header, v12, BYTE4(v37), "CoreDataStack.contextDidSave context saved:%@ contextMain: %@ contextPrivate: %@", (uint8_t *)v15, 0x20u);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
        os_log_type_t v12 = v11;
      }

      uint64_t v29 = *(void *)(v2 + 16);
      uint64_t v30 = OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate;
      if (v11 == *(NSObject **)(v29 + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate))
      {
        swift_retain_n();
        uint64_t v31 = Logger.logObject.getter();
        os_log_type_t v32 = static os_log_type_t.debug.getter();
        if (os_log_type_enabled(v31, v32))
        {
          uint64_t v33 = (uint8_t *)swift_slowAlloc();
          uint64_t v34 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v33 = 138412290;
          uint64_t v35 = *(void **)(v29 + v30);
          v41[0] = (uint64_t)v35;
          id v36 = v35;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v34 = v35;
          swift_release_n();
          _os_log_impl((void *)&_mh_execute_header, v31, v32, "CoreDataStack.contextDidSave context Private: %@", v33, 0xCu);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_release_n();
        }

        sub_100200E18();
        sub_1002015B0();
        sub_1002017D0();
        type metadata accessor for AssetContentTypeOperation();
        sub_1002AEF80();
      }
      else
      {
        sub_100201ACC();
      }
      sub_100201D14();

      return;
    }
  }
  else
  {
    sub_10001457C((uint64_t)v41, &qword_1007FAD50);
  }
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v23 = type metadata accessor for Logger();
  sub_100026A54(v23, (uint64_t)qword_1008035B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v24 = Logger.logObject.getter();
  os_log_type_t v25 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v26 = (uint8_t *)swift_slowAlloc();
    v41[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v26 = 136315138;
    uint64_t v27 = Notification.debugDescription.getter();
    uint64_t v40 = sub_10011EA98(v27, v28, v41);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl((void *)&_mh_execute_header, v24, v25, "Unable to get sender in contextDidSave, notification:%s", v26, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t sub_100200E18()
{
  uint64_t v53 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  id v52 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for DispatchQoS();
  uint64_t v3 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  unint64_t v50 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v40 - v9;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v60 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v48 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v12;
  __chkstk_darwin(v13);
  id v61 = (char *)&v40 - v14;
  uint64_t v15 = v0 + OBJC_IVAR____TtC7Journal9DataStack_assetIDsToRefresh;
  swift_beginAccess();
  uint64_t v59 = v15;
  uint64_t v16 = swift_bridgeObjectRetain();
  unint64_t v17 = sub_1000CD594(v16);
  swift_bridgeObjectRelease();
  uint64_t v40 = v17;
  uint64_t v18 = *((void *)v17 + 2);
  if (v18)
  {
    uint64_t v19 = self;
    unint64_t v57 = (void (**)(char *, char *))(v60 + 32);
    id v58 = v19;
    uint64_t v44 = v60 + 16;
    unint64_t v43 = v65;
    unint64_t v42 = (void (**)(char *, uint64_t))(v1 + 8);
    unint64_t v41 = (void (**)(char *, uint64_t))(v3 + 8);
    id v20 = (unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
    unint64_t v56 = (void (**)(char *, uint64_t))(v60 + 8);
    uint64_t v21 = (uint64_t *)(v40 + 5);
    unint64_t v47 = v7;
    id v46 = v10;
    int v45 = (unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48);
    do
    {
      uint64_t v24 = *(v21 - 1);
      uint64_t v23 = *v21;
      swift_bridgeObjectRetain();
      uint64_t v62 = v24;
      UUID.init(uuidString:)();
      os_log_type_t v25 = *v20;
      if ((*v20)(v10, 1, v11) == 1)
      {
        sub_10001457C((uint64_t)v10, &qword_100800950);
      }
      else
      {
        uint64_t v26 = v11;
        uint64_t v27 = *v57;
        uint64_t v28 = v26;
        (*v57)(v61, v10);
        if (qword_1007F6BA0 != -1) {
          swift_once();
        }
        uint64_t v55 = v25;
        if (qword_1007F6BA8 != -1) {
          swift_once();
        }
        uint64_t v54 = qword_10083D198;
        uint64_t v29 = v60;
        uint64_t v30 = v48;
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v48, v61, v28);
        unint64_t v31 = (*(unsigned __int8 *)(v29 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
        uint64_t v32 = swift_allocObject();
        ((void (*)(unint64_t, char *, uint64_t))v27)(v32 + v31, v30, v28);
        v65[2] = sub_100219058;
        v65[3] = v32;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        v65[0] = sub_10017D530;
        v65[1] = &unk_10079F6B8;
        uint64_t v33 = _Block_copy(aBlock);
        uint64_t v34 = v50;
        static DispatchQoS.unspecified.getter();
        uint64_t v63 = _swiftEmptyArrayStorage;
        sub_10021852C((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100010218(&qword_100804DB0);
        sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
        uint64_t v35 = v52;
        uint64_t v36 = v53;
        uint64_t v11 = v28;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        _Block_release(v33);
        (*v42)(v35, v36);
        (*v41)(v34, v51);
        swift_release();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v61, v28);
        uint64_t v7 = v47;
        uint64_t v10 = v46;
        id v20 = v45;
        os_log_type_t v25 = v55;
      }
      id v37 = [v58 defaultCenter];
      if (qword_1007F6E78 != -1) {
        swift_once();
      }
      uint64_t v38 = qword_10083D400;
      UUID.init(uuidString:)();
      if (v25(v7, 1, v11) == 1)
      {
        v22.super.Class isa = 0;
      }
      else
      {
        v22.super.Class isa = UUID._bridgeToObjectiveC()().super.isa;
        (*v56)(v7, v11);
      }
      v21 += 2;
      [v37 postNotificationName:v38 object:v22.super.isa];

      swift_unknownObjectRelease();
      swift_beginAccess();
      sub_10026F1A8(v62, v23);
      swift_endAccess();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      --v18;
    }
    while (v18);
  }
  return swift_release();
}

uint64_t sub_1002015B0()
{
  uint64_t v1 = (void *)(v0 + OBJC_IVAR____TtC7Journal9DataStack_attachmentIDsToRefresh);
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1000CD594(v2);
  swift_bridgeObjectRelease();
  void *v1 = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  uint64_t v5 = swift_allocObject();
  swift_weakInit();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v5;
  v6[3] = v3;
  v6[4] = v4;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_10021973C;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_10001B3DC;
  aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1003F44E4;
  void aBlock[3] = &unk_10079F668;
  uint64_t v8 = _Block_copy(aBlock);
  id v9 = v4;
  swift_retain();
  swift_release();
  [v9 performBlockAndWait:v8];

  _Block_release(v8);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002017D0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal9DataStack_deletedEntriesToStop;
  swift_beginAccess();
  if (*(void *)(*(void *)v1 + 16))
  {
    sub_100010218(&qword_100803950);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1006D6280;
    type metadata accessor for Journaling.EntryViewModel();
    sub_100010218(&qword_100803958);
    *(void *)(inited + 32) = String.init<A>(describing:)();
    *(void *)(inited + 40) = v3;
    *(void *)(inited + 48) = *(void *)v1;
    swift_bridgeObjectRetain();
    sub_1003974AC(inited);
    id v4 = [self defaultCenter];
    if (qword_1007F6E88 != -1) {
      swift_once();
    }
    uint64_t v5 = qword_10083D410;
    sub_100010218((uint64_t *)&unk_100803960);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v4 postNotificationName:v5 object:isa];

    *(void *)uint64_t v1 = &_swiftEmptySetSingleton;
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = v0 + OBJC_IVAR____TtC7Journal9DataStack_deletedAssetsToStop;
  uint64_t result = swift_beginAccess();
  if (*(void *)(*(void *)v7 + 16))
  {
    sub_100010218(&qword_100803950);
    uint64_t v9 = swift_initStackObject();
    *(_OWORD *)(v9 + 16) = xmmword_1006D6280;
    uint64_t v14 = _s5AssetCMa();
    sub_100010218(&qword_1008076B0);
    *(void *)(v9 + 32) = String.init<A>(describing:)();
    *(void *)(v9 + 40) = v10;
    *(void *)(v9 + 48) = *(void *)v7;
    swift_bridgeObjectRetain();
    sub_1003974AC(v9);
    id v11 = [self defaultCenter];
    if (qword_1007F6E88 != -1) {
      swift_once();
    }
    uint64_t v12 = qword_10083D410;
    sub_100010218((uint64_t *)&unk_100803960);
    Class v13 = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v11 postNotificationName:v12 object:v13];

    *(void *)uint64_t v7 = &_swiftEmptySetSingleton;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100201ACC()
{
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100026A54(v0, (uint64_t)qword_1008035B0);
  swift_retain_n();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446210;
    uint64_t v8 = v4;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v5 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v5, v6, &v8);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%{public}s Debounce Save - Want to handleData", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  sub_100010218(&qword_100803900);
  sub_100014488((unint64_t *)&unk_100803970, &qword_100803900);
  return Subject<>.send()();
}

void sub_100201D14()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  id v2 = objc_allocWithZone((Class)NSFetchRequest);
  id v3 = v1;
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v2 initWithEntityName:v4];

  NSManagedObjectContext.performAndWait<A>(_:)();
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100026A54(v6, (uint64_t)qword_1008035B0);
  swift_retain_n();
  uint64_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v10 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v10, v11, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s (units count) countDataUpdate coredataEntriesCount: %ld", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  id v12 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v12 initWithEntityName:v13];

  __chkstk_darwin(v15);
  NSManagedObjectContext.performAndWait<A>(_:)();

  swift_retain_n();
  uint64_t v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v19, v20, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "%{public}s (units count) countDataUpdate coredataAssetsCount: %ld", (uint8_t *)v18, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  id v21 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [v21 initWithEntityName:v22];

  __chkstk_darwin(v24);
  NSManagedObjectContext.performAndWait<A>(_:)();

  swift_retain_n();
  os_log_type_t v25 = Logger.logObject.getter();
  os_log_type_t v26 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    uint64_t v40 = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v28, v29, &v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2048;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "%{public}s (units count) countDataUpdate coredataAttachmentsCount: %ld", (uint8_t *)v27, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v30 = self;
  id v31 = [v30 standardUserDefaults];
  Class isa = Int._bridgeToObjectiveC()().super.super.isa;
  NSString v33 = String._bridgeToObjectiveC()();
  [v31 setValue:isa forKey:v33];

  id v34 = [v30 standardUserDefaults];
  Class v35 = Int._bridgeToObjectiveC()().super.super.isa;
  NSString v36 = String._bridgeToObjectiveC()();
  [v34 setValue:v35 forKey:v36];

  id v37 = [v30 standardUserDefaults];
  Class v38 = Int._bridgeToObjectiveC()().super.super.isa;
  NSString v39 = String._bridgeToObjectiveC()();
  [v37 setValue:v38 forKey:v39];
}

void sub_1002025DC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Notification();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100026A54(v8, (uint64_t)qword_1008035B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    v15[1] = v2;
    id v12 = (uint8_t *)v11;
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)id v12 = 136315138;
    sub_10021852C((unint64_t *)&unk_100803940, (void (*)(uint64_t))&type metadata accessor for Notification);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    v15[2] = sub_10011EA98(v13, v14, &v16);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "identityUpdateNotification Notification: %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }

  sub_100202AB8();
}

uint64_t sub_100202898(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *))
{
  uint64_t v5 = type metadata accessor for Notification();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  swift_retain();
  a4(v8);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_100202990()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for UUID();
    if (v2 <= 0x3F) {
      return swift_updateClassMetadata2();
    }
  }
  return result;
}

void sub_100202AB8()
{
  if (sub_1001FE410())
  {
    unint64_t v1 = *(void **)(*(void *)(v0 + 24) + OBJC_IVAR____TtC7Journal13CloudKitStack_ckContainer);
    uint64_t v2 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v3 = (void *)swift_allocObject();
    v3[2] = v2;
    v3[3] = sub_1002195C0;
    v3[4] = v0;
    v5[4] = sub_100219B24;
    void v5[5] = v3;
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 1107296256;
    v5[2] = sub_100254C24;
    v5[3] = &unk_10079F5C8;
    uint64_t v4 = _Block_copy(v5);
    swift_retain_n();
    swift_release();
    [v1 accountStatusWithCompletionHandler:v4];
    _Block_release(v4);
    swift_release();
  }
  else
  {
    sub_100202E00();
  }
}

void sub_100202C14(char a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v11 = a2 + OBJC_IVAR____TtC7Journal9DataStack_sessionID;
    uint64_t v12 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v10, 1, 1, v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v11, v4);
    unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v14 = (char *)swift_allocObject();
    *((void *)v14 + 2) = 0;
    *((void *)v14 + 3) = 0;
    *((void *)v14 + 4) = a2;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v14[v13], v7, v4);
    swift_retain();
    sub_100328A60((uint64_t)v10, (uint64_t)&unk_100803938, (uint64_t)v14);
    swift_release();
  }
  else
  {
    sub_100202E00();
  }
}

void sub_100202E00()
{
  id v1 = *(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  unint64_t v2 = sub_10056A564(v1, 0, 1);
  unint64_t v3 = sub_1004F2518(v1);
  unint64_t v4 = sub_10052D710(v1);
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100026A54(v5, (uint64_t)qword_1008035B0);
  swift_retain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    unint64_t v12 = v2;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446210;
    uint64_t v13 = v9;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v10 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v10, v11, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s Not logged in to iCloud and No Metadata - User was never logged in to iCloud, handling local data", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    unint64_t v2 = v12;
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  sub_10020E808(v3);
  swift_bridgeObjectRelease();
  sub_10020D724(v2);
  swift_bridgeObjectRelease();
  sub_10020F6D0(v4);
  swift_bridgeObjectRelease();
}

uint64_t sub_10020308C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[5] = a4;
  void v5[6] = a5;
  uint64_t v6 = type metadata accessor for UUID();
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  v5[10] = swift_task_alloc();
  return _swift_task_switch(sub_10020315C, 0, 0);
}

uint64_t sub_10020315C()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  void *v1 = v0;
  v1[1] = sub_100203238;
  uint64_t v2 = *(void *)(v0 + 40);
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 112, 0, 0, 0xD000000000000019, 0x8000000100690500, sub_1002185A0, v2, &type metadata for Bool);
}

uint64_t sub_100203238()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100203334, 0, 0);
}

uint64_t sub_100203334()
{
  uint64_t v19 = v0;
  if (*(unsigned char *)(v0 + 112))
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v1;
    void *v1 = v0;
    v1[1] = sub_100203638;
    v1[17] = *(void *)(v0 + 40);
    return _swift_task_switch(sub_100208420, 0, 0);
  }
  else
  {
    if (qword_1007F6B98 != -1) {
      swift_once();
    }
    uint64_t v2 = *(void *)(v0 + 80);
    uint64_t v3 = *(void *)(v0 + 56);
    uint64_t v4 = *(void *)(v0 + 64);
    uint64_t v5 = *(void *)(v0 + 48);
    uint64_t v6 = type metadata accessor for Logger();
    sub_100026A54(v6, (uint64_t)qword_1008035B0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
    os_log_type_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    BOOL v9 = os_log_type_enabled(v7, v8);
    uint64_t v10 = *(void *)(v0 + 80);
    uint64_t v11 = *(void *)(v0 + 56);
    uint64_t v12 = *(void *)(v0 + 64);
    if (v9)
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446210;
      sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v0 + 16) = sub_10011EA98(v14, v15, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s User id is not set, syncing failed to start", v13, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(void, void))(v12 + 8))(*(void *)(v0 + 80), *(void *)(v0 + 56));
    }

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v16 = *(uint64_t (**)(void))(v0 + 8);
    return v16();
  }
}

uint64_t sub_100203638()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1002037BC;
  }
  else {
    uint64_t v2 = sub_10020374C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10020374C()
{
  sub_100204170();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002037BC()
{
  uint64_t v20 = v0;
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v4 = v0[6];
  uint64_t v3 = v0[7];
  uint64_t v5 = type metadata accessor for Logger();
  sub_100026A54(v5, (uint64_t)qword_1008035B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.error.getter();
  BOOL v8 = os_log_type_enabled(v6, v7);
  uint64_t v10 = v0[8];
  uint64_t v9 = v0[9];
  uint64_t v11 = v0[7];
  if (v8)
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v18 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446466;
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[3] = sub_10011EA98(v13, v14, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    *(_WORD *)(v12 + 12) = 2112;
    swift_errorRetain();
    uint64_t v15 = _swift_stdlib_bridgeErrorToNSError();
    v0[4] = v15;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v18 = v15;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s Unable to initialize DataStack: %@", (uint8_t *)v12, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_100203AEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1002A0440();
  unint64_t v4 = v3;
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100026A54(v5, (uint64_t)qword_1008035B0);
  swift_retain();
  sub_100040F10(v2, v4);
  swift_retain();
  sub_100040F10(v2, v4);
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v9, v10, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v8 + 12) = 2080;
    if (v4 >> 60 == 15)
    {
      unint64_t v11 = 0xE300000000000000;
      uint64_t v12 = 7104878;
    }
    else
    {
      sub_100040D64(v2, v4);
      os_log_type_t v22 = v7;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      id v14 = [(objc_class *)isa description];
      uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v11 = v15;

      os_log_type_t v7 = v22;
      sub_100040DBC(v2, v4);
    }
    sub_10011EA98(v12, v11, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100040DBC(v2, v4);
    sub_100040DBC(v2, v4);
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s (startSyncEngine) MetadataPrint [engine init]: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
    sub_100040DBC(v2, v4);
    sub_100040DBC(v2, v4);
  }

  uint64_t v16 = swift_allocObject();
  swift_weakInit();
  swift_retain();
  sub_1005B6774();
  sub_1005B6790();
  sub_1005B6900();
  [*(id *)(v1 + 32) setAutomaticSyncingEnabled:0];
  os_log_type_t v17 = *(void **)(v1 + 32);
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = v1;
  _OWORD v18[3] = v2;
  v18[4] = v4;
  v18[5] = sub_100219588;
  v18[6] = v16;
  aBlock[4] = (uint64_t)sub_1002192AC;
  aBlock[5] = (uint64_t)v18;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  void aBlock[2] = (uint64_t)sub_10017D530;
  void aBlock[3] = (uint64_t)&unk_10079F578;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  sub_100040F10(v2, v4);
  id v20 = v17;
  swift_retain();
  swift_release();
  [v20 cancelOperationsWithCompletionHandler:v19];
  _Block_release(v19);

  swift_release_n();
  return sub_100040DBC(v2, v4);
}

void sub_100203F44(uint64_t a1, const char *a2)
{
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (qword_1007F6B98 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100026A54(v3, (uint64_t)qword_1008035B0);
    swift_retain_n();
    unint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      uint64_t v7 = swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 136446210;
      uint64_t v10 = v7;
      type metadata accessor for UUID();
      sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v8 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v8, v9, &v10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, a2, v6, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      swift_release();
    }
    else
    {

      swift_release_n();
    }
  }
}

uint64_t sub_100204170()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_100219570;
  *(void *)(v3 + 24) = v2;
  v7[4] = sub_10001B3DC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1003F44E4;
  v7[3] = &unk_10079F528;
  unint64_t v4 = _Block_copy(v7);
  id v5 = v1;
  swift_retain();
  swift_release();
  [v5 performBlockAndWait:v4];

  _Block_release(v4);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

void sub_1002042E4()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    if (qword_1007F6B98 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100026A54(v19, (uint64_t)qword_1008035B0);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v3, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v20, "No self in syncChanges", v21, 2u);
      swift_slowDealloc();
    }
    goto LABEL_90;
  }
  uint64_t v1 = Strong;
  uint64_t v2 = *(char **)(Strong + 16);
  uint64_t v3 = *(id *)&v2[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate];
  unint64_t v4 = v2;
  unint64_t v118 = sub_10056A7B4(v3, 0, 1);

  id v5 = *(id *)(v1 + 16);
  unint64_t v116 = sub_10056A564(v3, 0, 1);

  id v6 = *(id *)(v1 + 16);
  unint64_t v7 = sub_1004F2754(0, 1, v3);

  id v8 = *(id *)(v1 + 16);
  unint64_t v115 = sub_1004F2518(v3);

  id v9 = *(id *)(v1 + 16);
  uint64_t v10 = sub_10052D94C(v3);

  id v11 = *(id *)(v1 + 16);
  unint64_t v117 = sub_10052D710(v3);

  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v12 = type metadata accessor for Logger();
  sub_100026A54(v12, (uint64_t)qword_1008035B0);
  swift_retain_n();
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.default.getter();
  uint64_t v114 = v1;
  unint64_t v119 = v7;
  unint64_t v120 = v10;
  if (os_log_type_enabled(v13, v14))
  {
    unint64_t v15 = (uint8_t *)swift_slowAlloc();
    uint64_t v16 = swift_slowAlloc();
    *(_DWORD *)unint64_t v15 = 136446210;
    uint64_t v121 = v16;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v17, v18, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "%{public}s ---Begin of DataStack Sync Init Stats:---", v15, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  os_log_type_t v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = swift_slowAlloc();
    uint64_t v121 = swift_slowAlloc();
    *(_DWORD *)uint64_t v24 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v25, v26, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2048;
    if (v118 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "%{public}s Entries To Save %ld", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v121 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v30, v31, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v29 + 12) = 2048;
    if (v116 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "%{public}s Entries To Delete %ld", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v32 = Logger.logObject.getter();
  os_log_type_t v33 = static os_log_type_t.default.getter();
  unint64_t v113 = v7 >> 62;
  if (os_log_type_enabled(v32, v33))
  {
    uint64_t v34 = swift_slowAlloc();
    uint64_t v121 = swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v35, v36, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v34 + 12) = 2048;
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v32, v33, "%{public}s Assets To Save %ld", (uint8_t *)v34, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  id v37 = Logger.logObject.getter();
  os_log_type_t v38 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = swift_slowAlloc();
    uint64_t v121 = swift_slowAlloc();
    *(_DWORD *)uint64_t v39 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v40 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v40, v41, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v39 + 12) = 2048;
    if (v115 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    unint64_t v42 = v120;
    swift_bridgeObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v37, v38, "%{public}s Assets To Delete %ld", (uint8_t *)v39, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    unint64_t v42 = v120;
  }
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  unint64_t v43 = Logger.logObject.getter();
  os_log_type_t v44 = static os_log_type_t.default.getter();
  unint64_t v112 = v42 >> 62;
  if (os_log_type_enabled(v43, v44))
  {
    uint64_t v45 = swift_slowAlloc();
    uint64_t v121 = swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v46, v47, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 12) = 2048;
    if (v42 >> 62)
    {
      unint64_t v42 = v120;
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v42 = v120;
    }
    swift_bridgeObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v43, v44, "%{public}s Attachments To Save %ld", (uint8_t *)v45, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v48 = Logger.logObject.getter();
  os_log_type_t v49 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v48, v49))
  {
    uint64_t v50 = swift_slowAlloc();
    uint64_t v121 = swift_slowAlloc();
    *(_DWORD *)uint64_t v50 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v51, v52, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v50 + 12) = 2048;
    if (v117 >> 62)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v48, v49, "%{public}s Attachments To Delete %ld", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    unint64_t v42 = v120;
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  swift_retain_n();
  uint64_t v53 = Logger.logObject.getter();
  os_log_type_t v54 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v53, v54))
  {

    swift_release_n();
    goto LABEL_72;
  }
  os_log_type_t v110 = v54;
  log = v53;
  uint64_t v55 = swift_slowAlloc();
  uint64_t v121 = swift_slowAlloc();
  *(_DWORD *)uint64_t v55 = 136446722;
  type metadata accessor for UUID();
  sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v56 = dispatch thunk of CustomStringConvertible.description.getter();
  sub_10011EA98(v56, v57, &v121);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v55 + 12) = 2080;
  id v58 = self;
  id v59 = [v58 idsToSaveIn:*(void *)(v1 + 32)];
  sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
  unint64_t v60 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v60 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v61 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v61 = *(void *)((v60 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v61)
  {
    id v109 = v58;
    sub_100095B64(0, v61 & ~(v61 >> 63), 0);
    if (v61 < 0)
    {
      __break(1u);
      goto LABEL_104;
    }
    uint64_t v62 = 0;
    do
    {
      if ((v60 & 0xC000000000000001) != 0) {
        id v63 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v63 = *(id *)(v60 + 8 * v62 + 32);
      }
      os_log_type_t v64 = v63;
      id v65 = [v63 recordName:v109];
      uint64_t v66 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v68 = v67;

      double v70 = _swiftEmptyArrayStorage[2];
      double v69 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v70 >= *(void *)&v69 >> 1) {
        sub_100095B64(*(void *)&v69 > 1uLL, *(void *)&v70 + 1, 1);
      }
      ++v62;
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v70 + 1;
      id v71 = &_swiftEmptyArrayStorage[2 * *(void *)&v70];
      *((void *)v71 + 4) = v66;
      *((void *)v71 + 5) = v68;
    }
    while (v61 != v62);
    swift_bridgeObjectRelease();
    uint64_t v1 = v114;
    id v58 = v109;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v72 = Array.description.getter();
  unint64_t v74 = v73;
  swift_bridgeObjectRelease();
  sub_10011EA98(v72, v74, &v121);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v55 + 22) = 2080;
  id v75 = [v58 idsToDeleteIn:*(void *)(v1 + 32)];
  unint64_t v76 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v76 >> 62))
  {
    uint64_t v77 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
    unint64_t v42 = v120;
    if (v77) {
      goto LABEL_58;
    }
LABEL_70:
    swift_bridgeObjectRelease();
LABEL_71:
    uint64_t v88 = Array.description.getter();
    unint64_t v90 = v89;
    swift_bridgeObjectRelease();
    sub_10011EA98(v88, v90, &v121);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, log, v110, "%{public}s current engine's \nidsToSave: %s \nidsToDelete: %s", (uint8_t *)v55, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

LABEL_72:
    swift_retain_n();
    id v91 = Logger.logObject.getter();
    os_log_type_t v92 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v91, v92))
    {
      id v93 = (uint8_t *)swift_slowAlloc();
      uint64_t v94 = swift_slowAlloc();
      *(_DWORD *)id v93 = 136446210;
      uint64_t v121 = v94;
      type metadata accessor for UUID();
      sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v95 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v95, v96, &v121);
      unint64_t v42 = v120;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v91, v92, "%{public}s ---End of DataStack Sync Init Stats:---", v93, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    if (v118 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v103 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v103) {
        goto LABEL_79;
      }
    }
    else if (*(void *)((v118 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_79:
      uint64_t v97 = sub_100091A74(v118);
      swift_bridgeObjectRelease();
      uint64_t v98 = sub_100091A74(v116);
      swift_bridgeObjectRelease();
      sub_100205C94(v97, v98, 0x73656972746E45, 0xE700000000000000);
      goto LABEL_80;
    }
    if (v116 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v106 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v106) {
        goto LABEL_79;
      }
    }
    else if (*(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_79;
    }
LABEL_80:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v113)
    {
      swift_bridgeObjectRetain();
      uint64_t v104 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v104) {
        goto LABEL_84;
      }
    }
    else if (*(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_84;
    }
    if (v115 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v107 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v107)
      {
LABEL_85:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v112)
        {
          swift_bridgeObjectRetain();
          uint64_t v105 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v105) {
            goto LABEL_89;
          }
        }
        else if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
LABEL_89:
          uint64_t v101 = sub_100091AB4(v42);
          swift_bridgeObjectRelease();
          uint64_t v102 = sub_100091AB4(v117);
          swift_bridgeObjectRelease();
          sub_100205C94(v101, v102, 0x656D686361747441, 0xEB0000000073746ELL);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
LABEL_90:

          return;
        }
        if (v117 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v108 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          if (v108) {
            goto LABEL_89;
          }
        }
        else if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_89;
        }
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_90;
      }
    }
    else if (!*(void *)((v115 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      goto LABEL_85;
    }
LABEL_84:
    uint64_t v99 = sub_100091A94(v119);
    swift_bridgeObjectRelease();
    uint64_t v100 = sub_100091A94(v115);
    swift_bridgeObjectRelease();
    sub_100205C94(v99, v100, 0x737465737341, 0xE600000000000000);
    goto LABEL_85;
  }
  swift_bridgeObjectRetain();
  uint64_t v77 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  unint64_t v42 = v120;
  if (!v77) {
    goto LABEL_70;
  }
LABEL_58:
  sub_100095B64(0, v77 & ~(v77 >> 63), 0);
  if ((v77 & 0x8000000000000000) == 0)
  {
    uint64_t v78 = 0;
    do
    {
      if ((v76 & 0xC000000000000001) != 0) {
        id v79 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v79 = *(id *)(v76 + 8 * v78 + 32);
      }
      uint64_t v80 = v79;
      id v81 = [v79 recordName];
      uint64_t v82 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v84 = v83;

      double v86 = _swiftEmptyArrayStorage[2];
      double v85 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v86 >= *(void *)&v85 >> 1) {
        sub_100095B64(*(void *)&v85 > 1uLL, *(void *)&v86 + 1, 1);
      }
      ++v78;
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v86 + 1;
      uint64_t v87 = &_swiftEmptyArrayStorage[2 * *(void *)&v86];
      *((void *)v87 + 4) = v82;
      *((void *)v87 + 5) = v84;
    }
    while (v77 != v78);
    swift_bridgeObjectRelease();
    unint64_t v42 = v120;
    goto LABEL_71;
  }
LABEL_104:
  __break(1u);
}

void sub_100205C94(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v6 = v4;
  uint64_t v10 = self;
  id v11 = [v10 idsToSaveIn:*(void *)(v4 + 32)];
  sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v168 = sub_100388C24(v12);
  swift_bridgeObjectRelease();
  id v13 = [v10 idsToDeleteIn:*(void *)(v6 + 32)];
  unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v170 = sub_100388C24(v14);
  swift_bridgeObjectRelease();
  unint64_t v15 = *(void *)(a2 + 16);
  uint64_t v16 = &unk_1006D6000;
  uint64_t v17 = "\b";
  uint64_t v167 = v6;
  unint64_t v180 = a4;
  uint64_t v164 = a1;
  if (v15)
  {
    unint64_t v18 = (void *)(a2 + 32);
    swift_bridgeObjectRetain();
    char v19 = 0;
    os_log_type_t v20 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
    while (1)
    {
      uint64_t v21 = v18[3];
      uint64_t v22 = v18[4];
      sub_10002E0BC(v18, v21);
      uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 24))(v21, v22);
      uint64_t v24 = v23;
      unint64_t v26 = v25;
      id v27 = objc_allocWithZone((Class)NSKeyedUnarchiver);
      uint64_t v175 = v24;
      unint64_t v177 = v26;
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      v182[0] = 0;
      id v29 = [v27 initForReadingFromData:isa error:v182];

      id v30 = v182[0];
      if (!v29) {
        break;
      }
      id v31 = objc_allocWithZone((Class)CKRecord);
      id v32 = v30;
      id v33 = [v31 initWithCoder:v29];

      if (!v33) {
        goto LABEL_19;
      }
      id v34 = [v33 v20[28]];
      char v35 = sub_100542480(v34, v168);

      if (v35)
      {
        sub_100010218((uint64_t *)&unk_1007FA1C0);
        uint64_t v36 = swift_allocObject();
        *(_OWORD *)(v36 + 16) = xmmword_1006D6D00;
        *(void *)(v36 + 32) = [v33 v20[28]];
        v182[0] = (id)v36;
        specialized Array._endMutation()();
        sub_100207F18();
        swift_bridgeObjectRelease();
      }
      id v37 = [v33 v20[28]];
      char v38 = sub_100542480(v37, v170);

      if (v38)
      {

        sub_100040DD0(v175, v177);
      }
      else
      {
        sub_10054D4E8(v182, [v33 v20[28]]);

        sub_100040DD0(v175, v177);
      }
LABEL_5:
      v19 |= v5;
      v18 += 5;
      if (!--v15)
      {
        swift_bridgeObjectRelease();
        a1 = v164;
        uint64_t v17 = "\b";
        uint64_t v16 = (void *)&unk_1006D6000;
        goto LABEL_25;
      }
    }
    id v39 = v182[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F6D68 != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    sub_100026A54(v40, (uint64_t)qword_100806C78);
    swift_errorRetain();
    swift_errorRetain();
    unint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = swift_slowAlloc();
      os_log_type_t v44 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v43 = 138412290;
      swift_errorRetain();
      uint64_t v45 = _swift_stdlib_bridgeErrorToNSError();
      *(void *)(v43 + 4) = v45;
      *os_log_type_t v44 = v45;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Get Record from system fields data:\n%@", (uint8_t *)v43, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      uint64_t v6 = v167;
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    os_log_type_t v20 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
LABEL_19:
    LODWORD(type) = v5;
    if (qword_1007F6B98 != -1) {
      swift_once();
    }
    uint64_t v46 = type metadata accessor for Logger();
    sub_100026A54(v46, (uint64_t)qword_1008035B0);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v47 = Logger.logObject.getter();
    uint64_t v48 = v6;
    os_log_type_t v49 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v47, v49))
    {
      uint64_t v50 = swift_slowAlloc();
      v182[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v50 = 136446466;
      type metadata accessor for UUID();
      sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      a4 = v180;
      uint64_t v51 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v50 + 4) = sub_10011EA98(v51, v52, (uint64_t *)v182);
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v50 + 12) = 2080;
      swift_bridgeObjectRetain();
      *(void *)(v50 + 14) = sub_10011EA98(a3, v180, (uint64_t *)v182);
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v47, v49, "%{public}s (passObjectsToEngine) Unable to get %s record from system fields on cloudable delete", (uint8_t *)v50, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      os_log_type_t v20 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
      swift_slowDealloc();
      sub_100040DD0(v175, v177);
    }
    else
    {
      sub_100040DD0(v175, v177);

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    uint64_t v6 = v48;
    uint64_t v5 = type;
    goto LABEL_5;
  }
  char v19 = 0;
LABEL_25:
  uint64_t v173 = *(void *)(a1 + 16);
  if (!v173)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0) {
      goto LABEL_65;
    }
    goto LABEL_63;
  }
  uint64_t v172 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v53 = 0;
  int v165 = v16[415];
  int v166 = *((void *)v17 + 232);
  uint64_t v54 = 0;
  do
  {
    uint64_t v56 = (void *)(v172 + 40 * v53);
    uint64_t v57 = v56[3];
    uint64_t v58 = v56[4];
    sub_10002E0BC(v56, v57);
    char v178 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 24))(v57, v58);
    uint64_t v60 = v59;
    unint64_t v62 = v61;
    id v63 = objc_allocWithZone((Class)NSKeyedUnarchiver);
    uint64_t type = v60;
    unint64_t v176 = v62;
    Class v64 = Data._bridgeToObjectiveC()().super.isa;
    v182[0] = 0;
    id v65 = [v63 initForReadingFromData:v64 error:v182];

    id v66 = v182[0];
    if (!v65)
    {
      id v73 = v182[0];
      unint64_t v15 = _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_1007F6D68 != -1) {
        swift_once();
      }
      uint64_t v54 = 0;
      uint64_t v74 = type metadata accessor for Logger();
      sub_100026A54(v74, (uint64_t)qword_100806C78);
      swift_errorRetain();
      swift_errorRetain();
      id v75 = Logger.logObject.getter();
      os_log_type_t v76 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v75, v76))
      {
        uint64_t v77 = swift_slowAlloc();
        uint64_t v78 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v77 = v165;
        swift_errorRetain();
        uint64_t v79 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v77 + 4) = v79;
        void *v78 = v79;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v75, v76, "Get Record from system fields data:\n%@", (uint8_t *)v77, 0xCu);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        a4 = v180;
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
LABEL_41:
      if (qword_1007F6B98 != -1) {
        swift_once();
      }
      uint64_t v80 = type metadata accessor for Logger();
      sub_100026A54(v80, (uint64_t)qword_1008035B0);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      id v81 = Logger.logObject.getter();
      os_log_type_t v82 = static os_log_type_t.error.getter();
      uint64_t v5 = v82;
      if (os_log_type_enabled(v81, v82))
      {
        unint64_t v15 = swift_slowAlloc();
        v182[0] = (id)swift_slowAlloc();
        *(_DWORD *)unint64_t v15 = v166;
        type metadata accessor for UUID();
        sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        a4 = v180;
        uint64_t v83 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v15 + 4) = sub_10011EA98(v83, v84, (uint64_t *)v182);
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 12) = 2080;
        swift_bridgeObjectRetain();
        *(void *)(v15 + 14) = sub_10011EA98(a3, v180, (uint64_t *)v182);
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v81, (os_log_type_t)v5, "%{public}s (passObjectsToEngine) Unable to get record from system fields on cloudable save %s", (uint8_t *)v15, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        sub_100040DD0(type, v176);
      }
      else
      {
        sub_100040DD0(type, v176);

        swift_bridgeObjectRelease_n();
        swift_release_n();
      }
      goto LABEL_28;
    }
    id v67 = objc_allocWithZone((Class)CKRecord);
    id v68 = v66;
    id v69 = [v67 initWithCoder:v65];

    if (!v69) {
      goto LABEL_41;
    }
    unint64_t v15 = (unint64_t)&_swiftEmptySetSingleton;
    swift_bridgeObjectRetain();
    id v70 = [v69 recordID];
    uint64_t v5 = (uint64_t)v70;
    if (((unint64_t)&_swiftEmptySetSingleton & 0xC000000000000001) != 0)
    {
      id v71 = v70;
      char v72 = __CocoaSet.contains(_:)();
      swift_bridgeObjectRelease();

      if ((v72 & 1) == 0) {
        goto LABEL_54;
      }
    }
    else
    {
      uint64_t v171 = v54;
      if (!*((void *)&_swiftEmptySetSingleton + 2)) {
        goto LABEL_53;
      }
      Swift::Int v85 = NSObject._rawHashValue(seed:)(*((void *)&_swiftEmptySetSingleton + 5));
      uint64_t v86 = -1 << *((unsigned char *)&_swiftEmptySetSingleton + 32);
      unint64_t v87 = v85 & ~v86;
      if (((*(void *)((char *)&_swiftEmptySetSingleton + ((v87 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v87) & 1) == 0) {
        goto LABEL_53;
      }
      id v88 = *(id *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v87);
      char v89 = static NSObject.== infix(_:_:)();

      if ((v89 & 1) == 0)
      {
        uint64_t v90 = ~v86;
        while (1)
        {
          unint64_t v87 = (v87 + 1) & v90;
          if (((*(void *)((char *)&_swiftEmptySetSingleton + ((v87 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v87) & 1) == 0) {
            break;
          }
          id v91 = *(id *)(*((void *)&_swiftEmptySetSingleton + 6) + 8 * v87);
          char v92 = static NSObject.== infix(_:_:)();

          if (v92)
          {

            swift_bridgeObjectRelease();
            sub_100040DD0(type, v176);
            uint64_t v6 = v167;
            a4 = v180;
            uint64_t v54 = v171;
            goto LABEL_28;
          }
        }
LABEL_53:

        swift_bridgeObjectRelease();
        uint64_t v6 = v167;
        a4 = v180;
        uint64_t v54 = v171;
LABEL_54:
        unint64_t v15 = (unint64_t)&selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
        id v93 = [v69 recordID];
        char v94 = sub_100542480(v93, v170);

        if ((v94 & 1) == 0)
        {
          id v95 = [v69 recordID];
          char v96 = sub_100542480(v95, v168);

          if ((v96 & 1) == 0)
          {
            id v97 = [v69 recordID];
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            unint64_t v15 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v15 >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
          }
        }

        sub_100040DD0(type, v176);
LABEL_28:
        char v55 = v178;
        goto LABEL_29;
      }

      swift_bridgeObjectRelease();
      uint64_t v6 = v167;
      a4 = v180;
      uint64_t v54 = v171;
    }
    char v55 = v178;
    sub_100040DD0(type, v176);
LABEL_29:
    ++v53;
    v19 |= v55;
  }
  while (v53 != v173);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19)
  {
LABEL_63:
    uint64_t v98 = *(void **)(*(void *)(v6 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
    v182[0] = 0;
    if ([v98 save:v182])
    {
      id v99 = v182[0];
      goto LABEL_65;
    }
    id v111 = v182[0];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F6B98 != -1) {
      swift_once();
    }
    uint64_t v112 = type metadata accessor for Logger();
    sub_100026A54(v112, (uint64_t)qword_1008035B0);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_errorRetain();
    unint64_t v113 = Logger.logObject.getter();
    os_log_type_t v114 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v113, v114))
    {
      uint64_t v115 = swift_slowAlloc();
      unint64_t v116 = (void *)swift_slowAlloc();
      v182[0] = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v115 = 136446722;
      type metadata accessor for UUID();
      sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v117 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v117, v118, (uint64_t *)v182);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v115 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_10011EA98(a3, a4, (uint64_t *)v182);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v115 + 22) = 2112;
      swift_errorRetain();
      uint64_t v181 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *unint64_t v116 = v181;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v113, v114, "%{public}s (passObjectsToEngine) Saving %s system fields error: %@", (uint8_t *)v115, 0x20u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_errorRelease();
      swift_errorRelease();
    }
    return;
  }
LABEL_65:
  uint64_t v100 = swift_bridgeObjectRetain();
  int64_t v179 = sub_1000CD6A0(v100);
  swift_bridgeObjectRelease();
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v101 = _CocoaArrayWrapper.endIndex.getter();
    if (!v101) {
      goto LABEL_83;
    }
LABEL_67:
    v182[0] = _swiftEmptyArrayStorage;
    sub_100095B64(0, v101 & ~(v101 >> 63), 0);
    if (v101 < 0)
    {
      __break(1u);
      goto LABEL_113;
    }
    unint64_t v15 = 0;
    uint64_t v102 = v182[0];
    do
    {
      if (((unint64_t)_swiftEmptyArrayStorage & 0xC000000000000001) != 0) {
        id v103 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v103 = *(id *)&_swiftEmptyArrayStorage[v15 + 4];
      }
      uint64_t v104 = v103;
      id v105 = [v103 recordName];
      uint64_t v106 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v5 = v107;

      v182[0] = v102;
      unint64_t v109 = v102[2];
      unint64_t v108 = v102[3];
      if (v109 >= v108 >> 1)
      {
        sub_100095B64(v108 > 1, v109 + 1, 1);
        uint64_t v102 = v182[0];
      }
      ++v15;
      v102[2] = v109 + 1;
      os_log_type_t v110 = &v102[2 * v109];
      v110[4] = v106;
      v110[5] = v5;
      a4 = v180;
    }
    while (v101 != v15);
    swift_bridgeObjectRelease();
    if (((unint64_t)v179 & 0x8000000000000000) == 0) {
      goto LABEL_84;
    }
LABEL_95:
    swift_bridgeObjectRetain();
    uint64_t v119 = _CocoaArrayWrapper.endIndex.getter();
    swift_release();
    if (!v119) {
      goto LABEL_96;
    }
LABEL_86:
    v182[0] = _swiftEmptyArrayStorage;
    sub_100095B64(0, v119 & ~(v119 >> 63), 0);
    if ((v119 & 0x8000000000000000) == 0)
    {
      uint64_t v120 = 0;
      uint64_t v121 = v182[0];
      do
      {
        if (((unint64_t)v179 & 0xC000000000000001) != 0) {
          id v122 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v122 = *(id *)&v179[v120 + 4];
        }
        uint64_t v123 = v122;
        id v124 = [v122 recordName];
        uint64_t v125 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v127 = v126;

        v182[0] = v121;
        unint64_t v129 = v121[2];
        unint64_t v128 = v121[3];
        if (v129 >= v128 >> 1)
        {
          sub_100095B64(v128 > 1, v129 + 1, 1);
          uint64_t v121 = v182[0];
        }
        ++v120;
        v121[2] = v129 + 1;
        uint64_t v130 = &v121[2 * v129];
        v130[4] = v125;
        v130[5] = v127;
        a4 = v180;
      }
      while (v119 != v120);
      goto LABEL_96;
    }
LABEL_113:
    __break(1u);
LABEL_114:
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_100:
    swift_bridgeObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2080;
    swift_bridgeObjectRetain();
    sub_10011EA98(a3, v180, (uint64_t *)v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v5 + 32) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v135 = Array.description.getter();
    unint64_t v137 = v136;
    swift_bridgeObjectRelease();
    uint64_t v138 = v135;
    a4 = v180;
    uint64_t v181 = sub_10011EA98(v138, v137, (uint64_t *)v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)v15, (os_log_type_t)type, "%{public}s (passObjectsToEngine) Will pass %ld %s to save: %s", (uint8_t *)v5, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    uint64_t v139 = v167;
    goto LABEL_102;
  }
  uint64_t v101 = *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v101) {
    goto LABEL_67;
  }
LABEL_83:
  swift_bridgeObjectRelease();
  if (((unint64_t)v179 & 0x8000000000000000) != 0) {
    goto LABEL_95;
  }
LABEL_84:
  if (((unint64_t)v179 & 0x4000000000000000) != 0) {
    goto LABEL_95;
  }
  uint64_t v119 = *((void *)v179 + 2);
  if (v119) {
    goto LABEL_86;
  }
LABEL_96:
  swift_bridgeObjectRelease();
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v131 = type metadata accessor for Logger();
  sub_100026A54(v131, (uint64_t)qword_1008035B0);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  unint64_t v15 = Logger.logObject.getter();
  os_log_type_t v132 = static os_log_type_t.default.getter();
  if (os_log_type_enabled((os_log_t)v15, v132))
  {
    LOBYTE(type) = v132;
    uint64_t v5 = swift_slowAlloc();
    v182[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446978;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v133 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v181 = sub_10011EA98(v133, v134, (uint64_t *)v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2048;
    if (!((unint64_t)_swiftEmptyArrayStorage >> 62)) {
      goto LABEL_100;
    }
    goto LABEL_114;
  }

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_bridgeObjectRelease_n();
  uint64_t v139 = v167;
LABEL_102:
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  swift_bridgeObjectRetain();
  id v140 = Logger.logObject.getter();
  os_log_type_t v141 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v140, v141))
  {
    uint64_t v142 = swift_slowAlloc();
    v182[0] = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v142 = 136446978;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v143 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v143, v144, (uint64_t *)v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v142 + 12) = 2048;
    swift_release();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    *(_WORD *)(v142 + 22) = 2080;
    swift_bridgeObjectRetain();
    sub_10011EA98(a3, a4, (uint64_t *)v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v142 + 32) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v145 = Array.description.getter();
    unint64_t v147 = v146;
    swift_bridgeObjectRelease();
    uint64_t v181 = sub_10011EA98(v145, v147, (uint64_t *)v182);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v140, v141, "%{public}s (passObjectsToEngine) Will pass %ld %s to delete:  %s", (uint8_t *)v142, 0x2Au);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
    swift_release_n();
  }
  swift_beginAccess();
  sub_100207B70();
  swift_bridgeObjectRelease();
  swift_release();
  sub_10020821C();
  sub_100208228();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  id v148 = Logger.logObject.getter();
  os_log_type_t v149 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v148, v149))
  {
    uint64_t v150 = swift_slowAlloc();
    uint64_t v181 = swift_slowAlloc();
    *(_DWORD *)uint64_t v150 = 136446722;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v151 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v151, v152, &v181);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v150 + 12) = 2048;
    swift_bridgeObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v150 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v153 = Array.description.getter();
    unint64_t v155 = v154;
    swift_bridgeObjectRelease();
    sub_10011EA98(v153, v155, &v181);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v148, v149, "%{public}s (passObjectsToEngine) Passed To Save total %ld: %s", (uint8_t *)v150, 0x20u);
    swift_arrayDestroy();
    uint64_t v139 = v167;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v156 = Logger.logObject.getter();
  os_log_type_t v157 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v156, v157))
  {
    uint64_t v158 = swift_slowAlloc();
    uint64_t v181 = swift_slowAlloc();
    *(_DWORD *)uint64_t v158 = 136446722;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v159 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v159, v160, &v181);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v158 + 12) = 2048;
    swift_bridgeObjectRelease();
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    *(_WORD *)(v158 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v161 = Array.description.getter();
    unint64_t v163 = v162;
    swift_bridgeObjectRelease();
    uint64_t v139 = v167;
    sub_10011EA98(v161, v163, &v181);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v156, v157, "%{public}s (passObjectsToEngine) Passed To Delete total %ld: %s", (uint8_t *)v158, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
  }
  [*(id *)(v139 + 32) sendChangesWithCompletionHandler:0];
}

void sub_100207B70()
{
  uint64_t v1 = v0;
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100026A54(v2, (uint64_t)qword_1008035B0);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446722;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v6 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v6, v7, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
    swift_bridgeObjectRetain();
    uint64_t v8 = Array.description.getter();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    sub_10011EA98(v8, v10, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 22) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v11 = Array.description.getter();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    sub_10011EA98(v11, v13, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s addToEngine recordIDsToSave: %s  recordIDsToDelete:%s", (uint8_t *)v5, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  unint64_t v14 = self;
  unint64_t v15 = *(void **)(v1 + 32);
  sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
  id v16 = v15;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  Class v18 = Array._bridgeToObjectiveC()().super.isa;
  [v14 addToEngine:v16 recordIDsToSave:isa recordIDsToDelete:v18];
}

void sub_100207F18()
{
  uint64_t v1 = v0;
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100026A54(v2, (uint64_t)qword_1008035B0);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v6 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v6, v7, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
    swift_bridgeObjectRetain();
    uint64_t v8 = Array.description.getter();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    sub_10011EA98(v8, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%{public}s removeFromEngineToSave recordIDs:%s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  uint64_t v11 = self;
  unint64_t v12 = *(void **)(v1 + 32);
  sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
  id v13 = v12;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  [v11 removeFromEngineToSave:v13 recordIDs:isa];
}

double *sub_10020821C()
{
  return sub_100208234((SEL *)&selRef_idsToSaveIn_);
}

double *sub_100208228()
{
  return sub_100208234((SEL *)&selRef_idsToDeleteIn_);
}

double *sub_100208234(SEL *a1)
{
  id v2 = [self *a1:*(void *)(v1 + 32)];
  sub_10001B284(0, (unint64_t *)&unk_10080F9A0);
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v3 >> 62))
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v4) {
      goto LABEL_3;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRetain();
  uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v4) {
    goto LABEL_13;
  }
LABEL_3:
  uint64_t result = (double *)sub_100095B64(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v6 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v3 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      id v9 = [v7 recordName];
      uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v12 = v11;

      double v14 = _swiftEmptyArrayStorage[2];
      double v13 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v14 >= *(void *)&v13 >> 1) {
        sub_100095B64(*(void *)&v13 > 1uLL, *(void *)&v14 + 1, 1);
      }
      ++v6;
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v14 + 1;
      uint64_t v15 = &_swiftEmptyArrayStorage[2 * *(void *)&v14];
      *((void *)v15 + 4) = v10;
      *((void *)v15 + 5) = v12;
    }
    while (v4 != v6);
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_100208400()
{
  *(void *)(v1 + 136) = v0;
  return _swift_task_switch(sub_100208420, 0, 0);
}

uint64_t sub_100208420()
{
  uint64_t v23 = v0;
  uint64_t v1 = *(void *)(v0[17] + 16);
  id v2 = [*(id *)(v1 + OBJC_IVAR____TtC7Journal13CoreDataStack_container) viewContext];
  id v3 = [v2 persistentStoreCoordinator];

  if (!v3) {
    goto LABEL_15;
  }
  id v4 = [v3 persistentStores];
  sub_10001B284(0, &qword_1008038C0);
  unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v5 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();

    swift_bridgeObjectRelease_n();
    if (v14) {
      goto LABEL_4;
    }
LABEL_15:
    if (qword_1007F6B98 != -1) {
      swift_once();
    }
    uint64_t v15 = type metadata accessor for Logger();
    sub_100026A54(v15, (uint64_t)qword_1008035B0);
    swift_retain_n();
    id v9 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v9, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      *(_DWORD *)uint64_t v17 = 136446210;
      type metadata accessor for UUID();
      sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
      v0[15] = sub_10011EA98(v18, v19, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v16, "%{public}s (syncEngineStartSyncing) Database is not open, not ready to sync", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      goto LABEL_19;
    }
LABEL_20:

    swift_release_n();
    goto LABEL_21;
  }
  uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRelease();

  if (!v6) {
    goto LABEL_15;
  }
LABEL_4:
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal13CoreDataStack_persistentStoresLoadSuccess) != 1) {
    goto LABEL_15;
  }
  if (*(unsigned char *)(v0[17] + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) == 1)
  {
    id v7 = (void *)swift_task_alloc();
    v0[18] = v7;
    *id v7 = v0;
    v7[1] = sub_1002089C8;
    v7[14] = v0[17];
    return _swift_task_switch(sub_100208DDC, 0, 0);
  }
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v8 = type metadata accessor for Logger();
  sub_100026A54(v8, (uint64_t)qword_1008035B0);
  swift_retain_n();
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v9, v10)) {
    goto LABEL_20;
  }
  uint64_t v11 = (uint8_t *)swift_slowAlloc();
  uint64_t v22 = swift_slowAlloc();
  *(_DWORD *)uint64_t v11 = 136446210;
  type metadata accessor for UUID();
  sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
  v0[16] = sub_10011EA98(v12, v13, &v22);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_release_n();
  swift_bridgeObjectRelease();
  _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s (syncEngineStartSyncing) Protected data is not available, not ready to sync", v11, 0xCu);
  swift_arrayDestroy();
  swift_slowDealloc();
LABEL_19:
  swift_slowDealloc();

LABEL_21:
  os_log_type_t v20 = (uint64_t (*)(void))v0[1];
  return v20();
}

uint64_t sub_1002089C8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100208AC4, 0, 0);
}

uint64_t sub_100208AC4()
{
  uint64_t v1 = v0[17];
  [*(id *)(v1 + 32) setAutomaticSyncingEnabled:1];
  id v2 = *(void **)(v1 + 32);
  v0[19] = v2;
  v0[2] = v0;
  v0[3] = sub_100208BD8;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10004F958;
  v0[13] = &unk_10079F380;
  v0[14] = v3;
  [v2 fetchChangesWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100208BD8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 160) = v1;
  if (v1) {
    id v2 = sub_100208D4C;
  }
  else {
    id v2 = sub_100208CE8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100208CE8()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100208D4C()
{
  uint64_t v1 = *(void **)(v0 + 152);
  swift_willThrow();

  id v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100208DBC()
{
  *(void *)(v1 + 112) = v0;
  return _swift_task_switch(sub_100208DDC, 0, 0);
}

uint64_t sub_100208DDC()
{
  uint64_t v19 = v0;
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 120) = sub_100026A54(v1, (uint64_t)qword_1008035B0);
  swift_retain_n();
  id v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  uint64_t v4 = &selRef_drawMapRect_zoomScale_inContext_;
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v6 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 96) = sub_10011EA98(v6, v7, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 1024;
    id v8 = [self standardUserDefaults];
    NSString v9 = String._bridgeToObjectiveC()();
    unsigned int v10 = [v8 BOOLForKey:v9];

    uint64_t v4 = &selRef_drawMapRect_zoomScale_inContext_;
    *(_DWORD *)(v0 + 164) = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s (migrateToProdIfNeeded) start isMigratedToProd: %{BOOL}d", (uint8_t *)v5, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v11 = self;
  *(void *)(v0 + 128) = v11;
  id v12 = [v11 v4[257]];
  NSString v13 = String._bridgeToObjectiveC()();
  unsigned __int8 v14 = [v12 BOOLForKey:v13];

  if (v14)
  {
    uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
    return v15();
  }
  else
  {
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_100209190;
    return sub_1002D0F64();
  }
}

uint64_t sub_100209190(char a1)
{
  uint64_t v3 = *v2;
  *(unsigned char *)(v3 + 168) = a1;
  *(void *)(v3 + 144) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_100209AC4;
  }
  else {
    uint64_t v4 = sub_1002092A8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1002092A8()
{
  uint64_t v38 = v0;
  uint64_t v1 = (uint64_t *)(v0 + 112);
  swift_retain_n();
  id v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    int v35 = *(unsigned __int8 *)(v0 + 168);
    id v34 = *(id *)(v0 + 128);
    uint64_t v4 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446722;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v5 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 104) = sub_10011EA98(v5, v6, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 1024;
    id v7 = [v34 standardUserDefaults];
    NSString v8 = String._bridgeToObjectiveC()();
    unsigned int v9 = [v7 BOOLForKey:v8];

    *(_DWORD *)(v0 + 152) = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v4 + 18) = 1024;
    *(_DWORD *)(v0 + 156) = v35;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s (migrateToProdIfNeeded) isMigratedToProd:%{BOOL}d zoneExists:%{BOOL}d", (uint8_t *)v4, 0x18u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if ((*(unsigned char *)(v0 + 168) & 1) == 0)
    {
LABEL_3:
      swift_retain_n();
      unsigned int v10 = Logger.logObject.getter();
      os_log_type_t v11 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v10, v11))
      {
        id v12 = (uint8_t *)swift_slowAlloc();
        uint64_t v13 = swift_slowAlloc();
        *(_DWORD *)id v12 = 136446210;
        uint64_t v37 = v13;
        type metadata accessor for UUID();
        sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v0 + 80) = sub_10011EA98(v14, v15, &v37);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s (migrateToProdIfNeeded) Re-creating zone in Prod Environment", v12, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_release_n();
      }
      uint64_t v26 = *v1;
      if (*(unsigned char *)(*v1 + OBJC_IVAR____TtC7Journal9DataStack_syncState) == 1) {
        goto LABEL_13;
      }
      *(unsigned char *)(v26 + OBJC_IVAR____TtC7Journal9DataStack_syncState) = 1;
      id v27 = *(void **)(*(void *)(v26 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
      uint64_t v28 = swift_allocObject();
      swift_weakInit();
      id v29 = (void *)swift_allocObject();
      v29[2] = v28;
      v29[3] = AudioRecordingActivityState.hash(into:);
      v29[4] = 0;
      uint64_t v30 = swift_allocObject();
      *(void *)(v30 + 16) = sub_1000AC3D8;
      *(void *)(v30 + 24) = v29;
      *(void *)(v0 + 48) = sub_10001B3DC;
      *(void *)(v0 + 56) = v30;
      *(void *)(v0 + 16) = _NSConcreteStackBlock;
      *(void *)(v0 + 24) = 1107296256;
      *(void *)(v0 + 32) = sub_1003F44E4;
      *(void *)(v0 + 40) = &unk_10079F3E8;
      id v31 = _Block_copy((const void *)(v0 + 16));
      uint64_t v18 = v27;
      swift_retain();
      swift_release();
      [v18 performBlockAndWait:v31];

      _Block_release(v31);
      LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      swift_release();
      if ((v31 & 1) == 0) {
        goto LABEL_13;
      }
      __break(1u);
      goto LABEL_12;
    }
  }
  else
  {

    swift_release_n();
    if ((*(unsigned char *)(v0 + 168) & 1) == 0) {
      goto LABEL_3;
    }
  }
  id v16 = [*(id *)(v0 + 128) standardUserDefaults:v34];
  NSString v17 = String._bridgeToObjectiveC()();
  [v16 setBool:1 forKey:v17];

  swift_retain_n();
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v18, v19))
  {
    id v36 = *(id *)(v0 + 128);
    uint64_t v20 = swift_slowAlloc();
    uint64_t v37 = swift_slowAlloc();
    *(_DWORD *)uint64_t v20 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 88) = sub_10011EA98(v21, v22, &v37);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 1024;
    id v23 = [v36 standardUserDefaults];
    NSString v24 = String._bridgeToObjectiveC()();
    unsigned int v25 = [v23 BOOLForKey:v24];

    *(_DWORD *)(v0 + 160) = v25;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "%{public}s (migrateToProdIfNeeded) setting isMigratedToProd: %{BOOL}d", (uint8_t *)v20, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    goto LABEL_13;
  }
LABEL_12:

  swift_release_n();
LABEL_13:
  id v32 = *(uint64_t (**)(void))(v0 + 8);
  return v32();
}

uint64_t sub_100209AC4()
{
  os_log_type_t v11 = v0;
  swift_retain();
  swift_errorRetain();
  swift_retain();
  swift_errorRetain();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = swift_slowAlloc();
    uint64_t v4 = (void *)swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v5 = dispatch thunk of CustomStringConvertible.description.getter();
    v0[9] = sub_10011EA98(v5, v6, &v10);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v3 + 12) = 2112;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[8] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v4 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "%{public}s (migrateToProdIfNeeded) zoneExistsAsync error:%@", (uint8_t *)v3, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_release_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  NSString v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

void sub_100209D78(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 40);
  id v9 = *(id *)(v7 + OBJC_IVAR____TtC7Journal13CloudKitStack_ckDatabase);
  if (a3 >> 60 == 15) {
    Class isa = 0;
  }
  else {
    Class isa = Data._bridgeToObjectiveC()().super.isa;
  }
  os_log_type_t v11 = self;
  URL._bridgeToObjectiveC()((NSURL *)OBJC_IVAR____TtC7Journal9DataStack_downloadStagingPath);
  uint64_t v13 = v12;
  id v17 = [v11 configCreate:v9 ds:v8 md:isa directory:v12 fileProtectionType:*(void *)(*(void *)(a1 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_storeFileProtectionType) assetDownloadStagingManager:*(void *)(v7 + OBJC_IVAR____TtC7Journal13CloudKitStack_assetDownloadStagingManager)];

  id v14 = [v11 engineCreate:v17];
  unint64_t v15 = *(void **)(a1 + 32);
  *(void *)(a1 + 32) = v14;

  [*(id *)(a1 + 32) setAutomaticSyncingEnabled:0];
  sub_1004D1D60();
  uint64_t v16 = sub_100209EFC();
  a4(v16);
}

uint64_t sub_100209EFC()
{
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_1008035B0);
  swift_retain_n();
  os_log_type_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136446210;
    uint64_t v9 = v5;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v6 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v6, v7, &v9);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "%{public}s Debounce Save - Resetting debounce subscription", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_release_n();
  }

  if (*(void *)(v0 + 56))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  return sub_1001FFF8C();
}

uint64_t sub_10020A11C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *(void *)(v3 + 24);
  unint64_t v7 = (void *)swift_allocObject();
  v7[2] = v3;
  v7[3] = a1;
  v7[4] = a2;
  uint64_t v8 = *(void **)(v6 + OBJC_IVAR____TtC7Journal13CloudKitStack_ckContainer);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v10 = (void *)swift_allocObject();
  _OWORD v10[2] = v9;
  v10[3] = sub_100219324;
  v10[4] = v7;
  v13[4] = sub_100219334;
  v13[5] = v10;
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 1107296256;
  uint64_t v13[2] = sub_100254C24;
  v13[3] = &unk_10079F268;
  os_log_type_t v11 = _Block_copy(v13);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  [v8 accountStatusWithCompletionHandler:v11];
  _Block_release(v11);
  return swift_release();
}

uint64_t sub_10020A28C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = *(void **)(*(void *)(a2 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a2;
  *(unsigned char *)(v9 + 24) = a1;
  *(void *)(v9 + 32) = a3;
  *(void *)(v9 + 40) = a4;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = sub_100219380;
  *(void *)(v10 + 24) = v9;
  v14[4] = sub_10001B3DC;
  v14[5] = v10;
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 1107296256;
  _OWORD v14[2] = sub_1003F44E4;
  v14[3] = &unk_10079F2E0;
  os_log_type_t v11 = _Block_copy(v14);
  id v12 = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_release();
  [v12 performBlockAndWait:v11];

  _Block_release(v11);
  LOBYTE(a4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (a4) {
    __break(1u);
  }
  return result;
}

uint64_t sub_10020A428(uint64_t a1, char a2, void (*a3)(void, unint64_t, uint64_t, void), uint64_t a4)
{
  uint64_t v39 = a3;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v38 = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v12 = (char *)v36 - v11;
  __n128 v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)v36 - v15;
  id v17 = *(void (**)(char *, uint64_t, uint64_t, __n128))(v8 + 16);
  v17((char *)v36 - v15, a1 + OBJC_IVAR____TtC7Journal9DataStack_sessionID, v7, v14);
  if (a2)
  {
    v36[1] = a4;
    if (qword_1007F6B98 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100026A54(v18, (uint64_t)qword_1008035B0);
    os_log_type_t v19 = v38;
    uint64_t v37 = v16;
    ((void (*)(char *, char *, uint64_t))v17)(v38, v16, v7);
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, v21))
    {
      unint64_t v22 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)unint64_t v22 = 136446210;
      sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v40 = sub_10011EA98(v23, v24, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      unsigned int v25 = *(void (**)(char *, uint64_t))(v8 + 8);
      v25(v19, v7);
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%{public}s checkForRecentiCloudLogout - User is loggedIn, ignoring", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      unsigned int v25 = *(void (**)(char *, uint64_t))(v8 + 8);
      v25(v19, v7);
    }

    v39(0, 0xF000000000000000, 1, 0);
    return ((uint64_t (*)(char *, uint64_t))v25)(v37, v7);
  }
  else
  {
    uint64_t v26 = swift_allocObject();
    swift_weakInit();
    ((void (*)(char *, char *, uint64_t))v17)(v12, v16, v7);
    unint64_t v27 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    unint64_t v28 = (v9 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v26;
    (*(void (**)(unint64_t, char *, uint64_t))(v8 + 32))(v29 + v27, v12, v7);
    unint64_t v30 = v29 + v28;
    *(void *)unint64_t v30 = v39;
    *(void *)(v30 + 8) = a4;
    *(unsigned char *)(v30 + 16) = 0;
    swift_retain();
    swift_retain();
    sub_1005B6774();
    sub_1005B6790();
    sub_1005B6900();
    [*(id *)(a1 + 32) setAutomaticSyncingEnabled:0];
    id v31 = *(void **)(a1 + 32);
    uint64_t v32 = swift_allocObject();
    *(void *)(v32 + 16) = a1;
    *(_OWORD *)(v32 + 24) = xmmword_1006D8770;
    *(void *)(v32 + 40) = sub_10021948C;
    *(void *)(v32 + 48) = v29;
    aBlock[4] = (uint64_t)sub_1002192AC;
    aBlock[5] = v32;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = (uint64_t)sub_10017D530;
    void aBlock[3] = (uint64_t)&unk_10079F358;
    id v33 = _Block_copy(aBlock);
    id v34 = v31;
    swift_retain();
    swift_retain();
    swift_release();
    [v34 cancelOperationsWithCompletionHandler:v33];
    _Block_release(v33);

    swift_release();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v16, v7);
    return swift_release();
  }
}

void sub_10020A950(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, unint64_t, void, uint64_t), uint64_t a4, int a5)
{
  int v46 = a5;
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  __n128 v14 = (char *)v41 - v13;
  __chkstk_darwin(v15);
  id v17 = (char *)v41 - v16;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v44 = a4;
    id v19 = *(id *)(Strong + 16);
    uint64_t v20 = sub_1002A0440();
    unint64_t v22 = v21;

    uint64_t v45 = a3;
    if (v22 >> 60 == 15)
    {
      if (qword_1007F6B98 != -1) {
        swift_once();
      }
      uint64_t v23 = type metadata accessor for Logger();
      sub_100026A54(v23, (uint64_t)qword_1008035B0);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v14, a2, v8);
      unint64_t v24 = Logger.logObject.getter();
      os_log_type_t v25 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v24, v25))
      {
        uint64_t v26 = (uint8_t *)swift_slowAlloc();
        uint64_t v48 = swift_slowAlloc();
        *(_DWORD *)uint64_t v26 = 136446210;
        uint64_t v43 = (uint64_t)(v26 + 4);
        sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v47 = sub_10011EA98(v27, v28, &v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
        _os_log_impl((void *)&_mh_execute_header, v24, v25, "%{public}s checkForRecentiCloudLogout - No metadata saved, ignoring", v26, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      }

      v45(0, 0xF000000000000000, v46 & 1, 0);
    }
    else
    {
      if (qword_1007F6B98 != -1) {
        swift_once();
      }
      uint64_t v35 = type metadata accessor for Logger();
      sub_100026A54(v35, (uint64_t)qword_1008035B0);
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      id v36 = Logger.logObject.getter();
      os_log_type_t v37 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v36, v37))
      {
        uint64_t v38 = (uint8_t *)swift_slowAlloc();
        uint64_t v43 = swift_slowAlloc();
        uint64_t v48 = v43;
        os_log_type_t v42 = v38;
        *(_DWORD *)uint64_t v38 = 136446210;
        v41[1] = v38 + 4;
        sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v39 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v47 = sub_10011EA98(v39, v40, &v48);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        _os_log_impl((void *)&_mh_execute_header, v36, v37, "%{public}s checkForRecentiCloudLogout - 1.User is Not Logged in and 2.Metadata exists - Recent Logout Detected", v42, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      }

      sub_100040D64(v20, v22);
      v45(v20, v22, v46 & 1, 1);
      sub_100040DBC(v20, v22);
      sub_100040DBC(v20, v22);
    }
    swift_release();
  }
  else
  {
    if (qword_1007F6B98 != -1) {
      swift_once();
    }
    uint64_t v29 = type metadata accessor for Logger();
    sub_100026A54(v29, (uint64_t)qword_1008035B0);
    (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v17, a2, v8);
    unint64_t v30 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      *(_DWORD *)uint64_t v32 = 136446210;
      sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v33 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v47 = sub_10011EA98(v33, v34, &v48);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "%{public}s CheckForRecentiCloudLogout syncEngineReset no self", v32, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v9 + 8))(v17, v8);
    }
  }
}

uint64_t sub_10020B09C(uint64_t a1, uint64_t a2, char a3, char a4)
{
  uint64_t v9 = *(void **)(*(void *)(v4 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = a1;
  *(void *)(v11 + 32) = a2;
  *(unsigned char *)(v11 + 40) = a3;
  *(unsigned char *)(v11 + 41) = a4;
  *(void *)(v11 + 48) = v9;
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = sub_1002190DC;
  *(void *)(v12 + 24) = v11;
  v16[4] = sub_10001B3DC;
  v16[5] = v12;
  v16[0] = _NSConcreteStackBlock;
  v16[1] = 1107296256;
  void v16[2] = sub_1003F44E4;
  v16[3] = &unk_10079F178;
  uint64_t v13 = _Block_copy(v16);
  swift_bridgeObjectRetain();
  swift_retain();
  id v14 = v9;
  swift_release();
  [v14 performBlockAndWait:v13];

  _Block_release(v13);
  LOBYTE(v14) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v14) {
    __break(1u);
  }
  return result;
}

void sub_10020B260(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, void *a6)
{
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  id v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v16 = Strong;
    int v37 = a5;
    uint64_t v17 = Strong + OBJC_IVAR____TtC7Journal9DataStack_sessionID;
    uint64_t v18 = swift_allocObject();
    id v36 = a6;
    uint64_t v19 = v18;
    swift_weakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v17, v11);
    unint64_t v20 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
    int v35 = a4;
    unint64_t v21 = (v13 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v34 = a2;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v19;
    (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v22 + v20, v14, v11);
    unint64_t v23 = v22 + v21;
    *(void *)unint64_t v23 = v34;
    *(void *)(v23 + 8) = a3;
    *(unsigned char *)(v23 + 16) = v35 & 1;
    *(unsigned char *)(v23 + 17) = v37 & 1;
    unint64_t v24 = v36;
    *(void *)(v22 + ((v21 + 25) & 0xFFFFFFFFFFFFFFF8)) = v36;
    swift_bridgeObjectRetain();
    id v25 = v24;
    swift_retain();
    sub_1005B6774();
    sub_1005B6790();
    sub_1005B6900();
    [*(id *)(v16 + 32) setAutomaticSyncingEnabled:0];
    uint64_t v26 = *(void **)(v16 + 32);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v16;
    *(_OWORD *)(v27 + 24) = xmmword_1006D8770;
    *(void *)(v27 + 40) = sub_100219200;
    *(void *)(v27 + 48) = v22;
    aBlock[4] = sub_1002192AC;
    aBlock[5] = v27;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    void aBlock[2] = sub_10017D530;
    void aBlock[3] = &unk_10079F1F0;
    unint64_t v28 = _Block_copy(aBlock);
    uint64_t v29 = v26;
    swift_retain();
    swift_retain();
    swift_release();
    [v29 cancelOperationsWithCompletionHandler:v28];
    _Block_release(v28);
    swift_release();
    swift_release();
    swift_release();
  }
  else
  {
    if (qword_1007F6B98 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_100026A54(v30, (uint64_t)qword_1008035B0);
    uint64_t v29 = Logger.logObject.getter();
    os_log_type_t v31 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v29, v31))
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v31, "SyncDataReset no self in syncDataReset", v32, 2u);
      swift_slowDealloc();
    }
  }
}

void sub_10020B62C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, void *a7)
{
  LODWORD(v8) = a6;
  int v55 = a5;
  uint64_t v54 = a3;
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  id v14 = &v50[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v15);
  uint64_t v17 = &v50[-v16];
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v19 = Strong;
    if (qword_1007F6B98 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100026A54(v20, (uint64_t)qword_1008035B0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v14, a2, v11);
    swift_bridgeObjectRetain_n();
    uint64_t v21 = a4;
    uint64_t v22 = Logger.logObject.getter();
    os_log_type_t v23 = static os_log_type_t.default.getter();
    int v24 = v23;
    if (os_log_type_enabled(v22, v23))
    {
      uint64_t v25 = swift_slowAlloc();
      int v53 = v8;
      uint64_t v8 = v25;
      uint64_t v52 = swift_slowAlloc();
      uint64_t v57 = v52;
      *(_DWORD *)uint64_t v8 = 136446978;
      sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      int v51 = v24;
      uint64_t v26 = dispatch thunk of CustomStringConvertible.description.getter();
      v56[0] = sub_10011EA98(v26, v27, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);
      *(_WORD *)(v8 + 12) = 2080;
      uint64_t v28 = v54;
      v56[0] = v54;
      v56[1] = v21;
      swift_bridgeObjectRetain();
      sub_100010218(&qword_100803920);
      uint64_t v29 = String.init<A>(describing:)();
      v56[0] = sub_10011EA98(v29, v30, &v57);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v8 + 22) = 1024;
      char v31 = v55;
      LODWORD(v56[0]) = v55 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(_WORD *)(v8 + 28) = 1024;
      LODWORD(v56[0]) = v53 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v22, (os_log_type_t)v51, "%{public}s ->>syncDataReset userID: %s, removeMetadata: %{BOOL}d, removeAllEntries:%{BOOL}d", (uint8_t *)v8, 0x22u);
      swift_arrayDestroy();
      swift_slowDealloc();
      LOBYTE(v8) = v53;
      swift_slowDealloc();

      uint64_t v32 = v21;
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v14, v11);

      swift_bridgeObjectRelease_n();
      char v31 = v55;
      uint64_t v32 = v21;
      uint64_t v28 = v54;
    }
    uint64_t v39 = (uint64_t *)(*(void *)(v19 + 24) + OBJC_IVAR____TtC7Journal13CloudKitStack_inMemoryMetadata);
    uint64_t v40 = *v39;
    unint64_t v41 = v39[1];
    *(_OWORD *)uint64_t v39 = xmmword_1006D8770;
    sub_100040DBC(v40, v41);
    os_log_type_t v42 = *(void **)(v19 + 24);
    uint64_t v43 = self;
    id v44 = v42;
    id v45 = [v43 standardUserDefaults];
    NSString v46 = String._bridgeToObjectiveC()();
    [v45 removeObjectForKey:v46];

    id v47 = *(id *)(v19 + 16);
    sub_1002A10D0(v28, v32);

    if (v8) {
      sub_10047B4D0(a7);
    }
    if (v31)
    {
      id v48 = *(id *)(v19 + 16);
      sub_1002A0B3C();
    }
    id v49 = *(id *)(v19 + 16);
    sub_10029BA60(a7);
    swift_release();
  }
  else
  {
    if (qword_1007F6B98 != -1) {
      swift_once();
    }
    uint64_t v33 = type metadata accessor for Logger();
    sub_100026A54(v33, (uint64_t)qword_1008035B0);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 16))(v17, a2, v11);
    uint64_t v34 = Logger.logObject.getter();
    os_log_type_t v35 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v35))
    {
      id v36 = (uint8_t *)swift_slowAlloc();
      v56[0] = swift_slowAlloc();
      *(_DWORD *)id v36 = 136446210;
      sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v37 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v57 = sub_10011EA98(v37, v38, v56);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v17, v11);
      _os_log_impl((void *)&_mh_execute_header, v34, v35, "%{public}s SyncDataReset syncEngineReset no self", v36, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v17, v11);
    }
  }
}

uint64_t sub_10020BCE4(char *a1, uint64_t a2)
{
  id v88 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v85 = *(void *)(v3 - 8);
  uint64_t v86 = v3;
  __chkstk_darwin(v3);
  os_log_type_t v82 = (char *)&v69 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v83 = *(void *)(v5 - 8);
  uint64_t v84 = v5;
  __chkstk_darwin(v5);
  id v81 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_100010218((uint64_t *)&unk_1008038E0);
  uint64_t v7 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v78 = v8;
  char v92 = (char *)&v69 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v77 = (char *)&v69 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  id v14 = (char *)&v69 - v13;
  uint64_t v15 = swift_allocObject();
  uint64_t v80 = v15;
  *(unsigned char *)(v15 + 16) = 0;
  uint64_t v16 = (unsigned char *)(v15 + 16);
  uint64_t v17 = dispatch_group_create();
  char v89 = v14;
  uint64_t v90 = v10;
  uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  uint64_t v91 = v9;
  os_log_type_t v76 = v18;
  v18(v14, (char *)(a2 + OBJC_IVAR____TtC7Journal9DataStack_sessionID), v9);
  dispatch_group_enter(v17);
  uint64_t v19 = *(void **)(*(void *)(a2 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  uint64_t v20 = swift_allocObject();
  swift_weakInit();
  uint64_t v21 = (void *)swift_allocObject();
  v21[2] = v20;
  v21[3] = v16;
  v21[4] = v17;
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = sub_100218630;
  *(void *)(v22 + 24) = v21;
  uint64_t v79 = v21;
  uint64_t v98 = sub_10001B3DC;
  id v99 = (void *)v22;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v95 = 1107296256;
  char v96 = sub_1003F44E4;
  id v97 = &unk_10079EB88;
  os_log_type_t v23 = _Block_copy(&aBlock);
  id v24 = v19;
  uint64_t v25 = v17;
  swift_retain();
  swift_release();
  [v24 performBlockAndWait:v23];

  _Block_release(v23);
  LOBYTE(v24) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v24)
  {
    __break(1u);
  }
  else
  {
    if (*v16 == 1)
    {
      sub_10001B284(0, (unint64_t *)&qword_100805AB0);
      unint64_t v27 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v28 = v25;
      uint64_t v29 = v92;
      uint64_t v30 = v87;
      (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v92, v88, v87);
      unint64_t v31 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
      unint64_t v32 = (v78 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v33 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v33 + v31, v29, v30);
      *(void *)(v33 + v32) = v80;
      uint64_t v98 = sub_100218958;
      id v99 = (void *)v33;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v95 = 1107296256;
      char v96 = sub_10017D530;
      id v97 = &unk_10079ECC8;
      uint64_t v34 = _Block_copy(&aBlock);
      swift_retain();
      os_log_type_t v35 = v81;
      static DispatchQoS.unspecified.getter();
      id v93 = _swiftEmptyArrayStorage;
      sub_10021852C((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100010218(&qword_100804DB0);
      sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
      id v36 = v82;
      uint64_t v37 = v86;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v34);

      (*(void (**)(char *, uint64_t))(v85 + 8))(v36, v37);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v35, v84);
    }
    else
    {
      dispatch_group_enter(v25);
      uint64_t v71 = *(void *)(a2 + 24);
      uint64_t v38 = swift_allocObject();
      id v70 = v25;
      uint64_t v39 = v38;
      uint64_t v72 = v38;
      swift_weakInit();
      uint64_t v40 = v77;
      uint64_t v41 = v91;
      v76(v77, v89, v91);
      os_log_type_t v42 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
      uint64_t v75 = v7 + 16;
      os_log_type_t v76 = v42;
      uint64_t v43 = v87;
      v42(v92, v88, v87);
      uint64_t v44 = *(unsigned __int8 *)(v90 + 80);
      uint64_t v45 = v7;
      uint64_t v69 = v7;
      uint64_t v46 = v90;
      uint64_t v47 = (v44 + 24) & ~v44;
      unint64_t v48 = (v11 + v47 + 7) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v73 = *(unsigned __int8 *)(v45 + 80);
      uint64_t v49 = (v73 + v48 + 8) & ~v73;
      uint64_t v74 = v73 | 7;
      v78 += 7;
      unint64_t v50 = (v49 + v78) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = v39;
      (*(void (**)(uint64_t, char *, uint64_t))(v46 + 32))(v51 + v47, v40, v41);
      uint64_t v52 = v70;
      *(void *)(v51 + v48) = v70;
      uint64_t v77 = *(char **)(v69 + 32);
      ((void (*)(uint64_t, char *, uint64_t))v77)(v51 + v49, v92, v43);
      uint64_t v53 = v80;
      *(void *)(v51 + v50) = v80;
      uint64_t v54 = *(void **)(v71 + OBJC_IVAR____TtC7Journal13CloudKitStack_ckContainer);
      uint64_t v55 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v56 = (void *)swift_allocObject();
      uint64_t v56[2] = v55;
      v56[3] = sub_1002187DC;
      v56[4] = v51;
      uint64_t v98 = (uint64_t (*)())sub_100218948;
      id v99 = v56;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v95 = 1107296256;
      char v96 = sub_1000D1958;
      id v97 = &unk_10079EC28;
      uint64_t v57 = _Block_copy(&aBlock);
      uint64_t v58 = v52;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_release();
      [v54 fetchUserRecordIDWithCompletionHandler:v57];
      _Block_release(v57);
      swift_release();
      swift_release();
      sub_10001B284(0, (unint64_t *)&qword_100805AB0);
      uint64_t v59 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v60 = v92;
      uint64_t v61 = v87;
      v76(v92, v88, v87);
      uint64_t v62 = (v73 + 16) & ~v73;
      unint64_t v63 = (v62 + v78) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v64 = swift_allocObject();
      ((void (*)(uint64_t, char *, uint64_t))v77)(v64 + v62, v60, v61);
      *(void *)(v64 + v63) = v53;
      uint64_t v98 = sub_100218958;
      id v99 = (void *)v64;
      long long aBlock = _NSConcreteStackBlock;
      uint64_t v95 = 1107296256;
      char v96 = sub_10017D530;
      id v97 = &unk_10079EC78;
      id v65 = _Block_copy(&aBlock);
      swift_retain();
      id v66 = v81;
      static DispatchQoS.unspecified.getter();
      id v93 = _swiftEmptyArrayStorage;
      sub_10021852C((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100010218(&qword_100804DB0);
      sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
      id v67 = v82;
      uint64_t v68 = v86;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v65);

      (*(void (**)(char *, uint64_t))(v85 + 8))(v67, v68);
      (*(void (**)(char *, uint64_t))(v83 + 8))(v66, v84);
    }
    (*(void (**)(char *, uint64_t))(v90 + 8))(v89, v91);
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_10020C874(uint64_t a1, unsigned char *a2, NSObject *a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    id v6 = *(id *)(Strong + 16);
    swift_release();
    sub_1002A17A4();
    uint64_t v8 = v7;

    if (v8)
    {
      swift_bridgeObjectRelease();
      *a2 = 1;
    }
  }
  dispatch_group_leave(a3);
}

void sub_10020C910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, NSObject *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v68 = a8;
  dispatch_group_t v69 = a6;
  uint64_t v60 = a7;
  uint64_t v67 = a1;
  uint64_t v10 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v65 = *(void *)(v10 - 8);
  uint64_t v66 = v10;
  __chkstk_darwin(v10);
  unint64_t v63 = (char *)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = type metadata accessor for DispatchQoS();
  uint64_t v62 = *(void *)(v64 - 8);
  __chkstk_darwin(v64);
  uint64_t v61 = (char *)v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = sub_100010218((uint64_t *)&unk_1008038E0);
  uint64_t v58 = *(void *)(v59 - 8);
  uint64_t v13 = *(void *)(v58 + 64);
  __chkstk_darwin(v59);
  uint64_t v57 = (char *)v56 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for UUID();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v56 - v19;
  __chkstk_darwin(v21);
  os_log_type_t v23 = (char *)v56 - v22;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    if (!a2)
    {
      if (qword_1007F6B98 != -1) {
        swift_once();
      }
      uint64_t v40 = type metadata accessor for Logger();
      sub_100026A54(v40, (uint64_t)qword_1008035B0);
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v20, a5, v14);
      uint64_t v41 = Logger.logObject.getter();
      os_log_type_t v42 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = (uint8_t *)swift_slowAlloc();
        uint64_t v67 = swift_slowAlloc();
        uint64_t aBlock = v67;
        *(_DWORD *)uint64_t v43 = 136446210;
        v56[1] = v43 + 4;
        sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v44 = dispatch thunk of CustomStringConvertible.description.getter();
        os_log_type_t v76 = (double *)sub_10011EA98(v44, v45, &aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "%{public}s Unable to fetch user id from container", v43, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v15 + 8))(v20, v14);
      }

      sub_10001B284(0, (unint64_t *)&qword_100805AB0);
      uint64_t v46 = (void *)static OS_dispatch_queue.main.getter();
      uint64_t v47 = v58;
      unint64_t v48 = v57;
      uint64_t v49 = v59;
      (*(void (**)(char *, uint64_t, uint64_t))(v58 + 16))(v57, v60, v59);
      unint64_t v50 = (*(unsigned __int8 *)(v47 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80);
      uint64_t v51 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v47 + 32))(v51 + v50, v48, v49);
      *(void *)(v51 + ((v13 + v50 + 7) & 0xFFFFFFFFFFFFFFF8)) = v68;
      uint64_t v74 = sub_100218958;
      uint64_t v75 = v51;
      uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
      uint64_t v71 = 1107296256;
      uint64_t v72 = sub_10017D530;
      uint64_t v73 = &unk_10079ED18;
      uint64_t v52 = _Block_copy(&aBlock);
      swift_retain();
      uint64_t v53 = v61;
      static DispatchQoS.unspecified.getter();
      os_log_type_t v76 = _swiftEmptyArrayStorage;
      sub_10021852C((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100010218(&qword_100804DB0);
      sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
      uint64_t v54 = v63;
      uint64_t v55 = v66;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_group.notify(qos:flags:queue:execute:)();
      _Block_release(v52);

      swift_release();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v54, v55);
      (*(void (**)(char *, uint64_t))(v62 + 8))(v53, v64);
      goto LABEL_16;
    }
    uint64_t v25 = *(void **)(*(void *)(Strong + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
    uint64_t v26 = swift_allocObject();
    swift_weakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a5, v14);
    unint64_t v27 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    os_log_type_t v23 = (char *)((v16 + v27 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v26;
    uint64_t v29 = *(void (**)(unint64_t, char *, uint64_t))(v15 + 32);
    v15 += 32;
    v29(v28 + v27, v17, v14);
    uint64_t v30 = (uint64_t *)&v23[v28];
    *uint64_t v30 = v67;
    v30[1] = a2;
    a5 = swift_allocObject();
    *(void *)(a5 + 16) = sub_100218B7C;
    *(void *)(a5 + 24) = v28;
    uint64_t v74 = sub_10001B3DC;
    uint64_t v75 = a5;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v71 = 1107296256;
    uint64_t v72 = sub_1003F44E4;
    uint64_t v73 = &unk_10079ED90;
    unint64_t v31 = _Block_copy(&aBlock);
    swift_bridgeObjectRetain();
    id v32 = v25;
    swift_retain();
    swift_release();
    [v32 performBlockAndWait:v31];

    _Block_release(v31);
    LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    if ((v31 & 1) == 0)
    {
      uint64_t v33 = (unsigned char *)(v68 + 16);
      swift_beginAccess();
      *uint64_t v33 = 1;
      dispatch_group_leave(v69);
      swift_release();
LABEL_16:
      swift_release();
      return;
    }
    __break(1u);
    goto LABEL_18;
  }
  if (qword_1007F6B98 != -1) {
LABEL_18:
  }
    swift_once();
  uint64_t v34 = type metadata accessor for Logger();
  sub_100026A54(v34, (uint64_t)qword_1008035B0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v23, a5, v14);
  os_log_type_t v35 = Logger.logObject.getter();
  os_log_type_t v36 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v35, v36))
  {
    uint64_t v37 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136446210;
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
    os_log_type_t v76 = (double *)sub_10011EA98(v38, v39, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
    _os_log_impl((void *)&_mh_execute_header, v35, v36, "%{public}s handleiCloudUserIDAsync fetchiCloudUserRecordID no self", v37, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v23, v14);
  }
}

void sub_10020D3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v12 = Strong;
    id v13 = *(id *)(Strong + 16);
    sub_1002A10D0(a3, a4);

    uint64_t v14 = *(char **)(v12 + 16);
    uint64_t v15 = *(void **)&v14[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate];
    uint64_t v16 = v14;
    id v17 = v15;
    sub_10029BA60(v17);
    swift_release();
  }
  else
  {
    if (qword_1007F6B98 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100026A54(v18, (uint64_t)qword_1008035B0);
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136446210;
      sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
      v24[1] = sub_10011EA98(v22, v23, &v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "%{public}s handleiCloudUserIDAsync fetchiCloudUserRecordID2 no self", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
  }
}

uint64_t sub_10020D6C4()
{
  return CheckedContinuation.resume(returning:)();
}

unint64_t sub_10020D724(unint64_t result)
{
  unint64_t v2 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v10) {
      return result;
    }
  }
  else if (!*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  uint64_t v3 = *(void **)(*(void *)(v1 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v2;
  v5[4] = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_100219074;
  *(void *)(v6 + 24) = v5;
  v11[4] = sub_10001B3DC;
  v11[5] = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1003F44E4;
  void v11[3] = &unk_10079F0B0;
  uint64_t v7 = _Block_copy(v11);
  id v8 = v3;
  swift_bridgeObjectRetain();
  id v9 = v8;
  swift_retain();
  swift_release();
  [v9 performBlockAndWait:v7];

  _Block_release(v7);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v9) {
    __break(1u);
  }
  return result;
}

void sub_10020D910(uint64_t a1, unint64_t a2, void *a3)
{
  id v89 = a3;
  uint64_t v105 = type metadata accessor for DispatchWorkItemFlags();
  unint64_t v4 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  uint64_t v104 = (char *)v81 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void (***)(char *, uint64_t))(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v102 = (char *)v81 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v81 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v17 = (char *)v81 - v16;
  __chkstk_darwin(v18);
  os_log_type_t v110 = (char *)v81 - v19;
  uint64_t v101 = v20;
  __chkstk_darwin(v21);
  unint64_t v23 = (char *)v81 - v22;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v81[1] = Strong;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    os_log_type_t v82 = v23;
    uint64_t v100 = v12 + 16;
    id v99 = v25;
    v25(v23, (char *)(Strong + OBJC_IVAR____TtC7Journal9DataStack_sessionID), v11);
    unint64_t v88 = a2;
    if (a2 >> 62) {
      goto LABEL_59;
    }
    uint64_t v26 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    for (uint64_t i = v26; i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
    {
      uint64_t v92 = 0;
      unint64_t v87 = v88 & 0xC000000000000001;
      uint64_t v84 = v88 & 0xFFFFFFFFFFFFFF8;
      unint64_t v83 = v88 + 32;
      os_log_type_t v114 = (void (**)(char *, char *, uint64_t))(v12 + 32);
      uint64_t v107 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      unint64_t v109 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      char v96 = v117;
      uint64_t v95 = (void (**)(char *, uint64_t))(v4 + 8);
      unint64_t v4 = 0;
      char v94 = v6 + 1;
      uint64_t v93 = v12 + 8;
      uint64_t v106 = v17;
      uint64_t v85 = i;
      uint64_t v86 = v14;
      uint64_t v98 = v10;
      uint64_t v97 = v12;
      while (1)
      {
        if (v87)
        {
          id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (v4 >= *(void *)(v84 + 16)) {
            goto LABEL_58;
          }
          id v29 = *(id *)(v83 + 8 * v4);
        }
        uint64_t v30 = v29;
        if (__OFADD__(v4++, 1))
        {
          __break(1u);
          goto LABEL_57;
        }
        id v91 = (id)v4;
        unint64_t v32 = (unint64_t)sub_1000E7370();
        id v33 = [v30 assetOrdering];
        if (!v33) {
          goto LABEL_14;
        }
        uint64_t v34 = v33;
        uint64_t v35 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v37 = v36;

        uint64_t v6 = (void (**)(char *, uint64_t))sub_1000400E0();
        unint64_t v38 = v37;
        id v17 = v106;
        sub_100040DD0(v35, v38);
        if (!v6)
        {
LABEL_14:
          swift_bridgeObjectRelease();
          uint64_t v6 = (void (**)(char *, uint64_t))&_swiftEmptyDictionarySingleton;
        }
        uint64_t v90 = v30;
        if ((v32 & 0x8000000000000000) != 0 || (v32 & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          unint64_t v63 = swift_bridgeObjectRetain();
          unint64_t v39 = sub_1000CCB2C(v63);
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v39 = (void *)(v32 & 0xFFFFFFFFFFFFFF8);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        aBlock[0] = v39;
        swift_bridgeObjectRetain();
        uint64_t v40 = v92;
        sub_1000F578C((uint64_t *)aBlock, (uint64_t)v6);
        uint64_t v92 = v40;
        if (v40)
        {
          swift_bridgeObjectRelease_n();
          swift_release();
          __break(1u);
          return;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        unint64_t v4 = (unint64_t)aBlock[0];
        if (((unint64_t)aBlock[0] & 0x8000000000000000) != 0
          || ((unint64_t)aBlock[0] & 0x4000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
          swift_release();
        }
        else
        {
          uint64_t v41 = *((void *)aBlock[0] + 2);
        }
        os_log_type_t v42 = v107;
        if (v41) {
          break;
        }
LABEL_6:
        swift_release();
        uint64_t v28 = v90;
        sub_1005E6C68();
        [v89 deleteObject:v28];

        unint64_t v4 = (unint64_t)v91;
        uint64_t v14 = v86;
        if (v91 == (id)v85) {
          goto LABEL_44;
        }
      }
      if (v41 >= 1)
      {
        uint64_t v43 = 0;
        unint64_t v112 = v4;
        unint64_t v113 = (void *)(v4 & 0xC000000000000001);
        uint64_t v111 = v41;
        while (1)
        {
          unint64_t v45 = v113
              ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
              : (char *)*(id *)(v4 + 8 * v43 + 32);
          uint64_t v6 = (void (**)(char *, uint64_t))v45;
          id v46 = [v45 id];
          if (!v46) {
            break;
          }
          uint64_t v47 = v46;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          unint64_t v48 = *v114;
          (*v114)(v10, v17, v11);
          (*v42)(v10, 0, 1, v11);
          if ((*v109)(v10, 1, v11) == 1) {
            goto LABEL_38;
          }
          v48(v110, v10, v11);
          if (qword_1007F6BA0 != -1) {
            swift_once();
          }
          if (qword_1007F6BA8 != -1) {
            swift_once();
          }
          uint64_t v108 = qword_10083D198;
          uint64_t v49 = v110;
          v99(v17, v110, v11);
          unint64_t v50 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
          uint64_t v51 = swift_allocObject();
          v48((char *)(v51 + v50), v17, v11);
          v117[2] = sub_100219058;
          v117[3] = v51;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = (id)1107296256;
          v117[0] = sub_10017D530;
          v117[1] = &unk_10079F100;
          uint64_t v52 = _Block_copy(aBlock);
          uint64_t v53 = v102;
          static DispatchQoS.unspecified.getter();
          uint64_t v115 = _swiftEmptyArrayStorage;
          sub_10021852C((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
          sub_100010218(&qword_100804DB0);
          sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
          uint64_t v54 = v11;
          uint64_t v55 = v104;
          uint64_t v56 = v105;
          uint64_t v12 = v97;
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v52);
          uint64_t v57 = v55;
          uint64_t v11 = v54;
          uint64_t v58 = v56;
          id v17 = v106;
          (*v95)(v57, v58);
          (*v94)(v53, v103);
          swift_release();
          (*(void (**)(char *, uint64_t))(v12 + 8))(v49, v54);
          uint64_t v10 = v98;
          os_log_type_t v42 = v107;
LABEL_26:
          uint64_t v44 = v111;
          unint64_t v4 = v112;
          ++v43;

          if (v44 == v43) {
            goto LABEL_6;
          }
        }
        (*v42)(v10, 1, 1, v11);
LABEL_38:
        sub_10001457C((uint64_t)v10, &qword_100800950);
        if (qword_1007F7E78 != -1) {
          swift_once();
        }
        uint64_t v59 = type metadata accessor for Logger();
        sub_100026A54(v59, (uint64_t)qword_100812860);
        uint64_t v60 = Logger.logObject.getter();
        os_log_type_t v61 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v60, v61))
        {
          uint64_t v62 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v62 = 0;
          _os_log_impl((void *)&_mh_execute_header, v60, v61, "(purgeCache) unable to get assetId from an asset", v62, 2u);
          swift_slowDealloc();
        }

        uint64_t v6 = (void (**)(char *, uint64_t))v60;
        goto LABEL_26;
      }
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      swift_bridgeObjectRetain();
    }
LABEL_44:
    swift_bridgeObjectRelease();
    aBlock[0] = 0;
    if ([v89 save:aBlock])
    {
      uint64_t v64 = *(void (**)(char *, uint64_t))(v12 + 8);
      id v65 = aBlock[0];
      v64(v82, v11);
      swift_release();
    }
    else
    {
      id v70 = aBlock[0];
      _convertNSErrorToError(_:)();

      swift_willThrow();
      uint64_t v71 = v82;
      if (qword_1007F6B98 != -1) {
        swift_once();
      }
      uint64_t v72 = type metadata accessor for Logger();
      sub_100026A54(v72, (uint64_t)qword_1008035B0);
      v99(v14, v71, v11);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v73 = Logger.logObject.getter();
      os_log_type_t v74 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v73, v74))
      {
        uint64_t v75 = swift_slowAlloc();
        unint64_t v113 = (void *)swift_slowAlloc();
        os_log_type_t v114 = (void (**)(char *, char *, uint64_t))swift_slowAlloc();
        aBlock[0] = v114;
        *(_DWORD *)uint64_t v75 = 136446466;
        sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v76 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v115 = (void *)sub_10011EA98(v76, v77, (uint64_t *)aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v78 = *(void (**)(char *, uint64_t))(v12 + 8);
        v78(v14, v11);
        *(_WORD *)(v75 + 12) = 2112;
        swift_errorRetain();
        uint64_t v79 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v115 = (void *)v79;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v113 = v79;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v73, v74, "%{public}s Error Saving non iCloud user deleted entries: %@", (uint8_t *)v75, 0x16u);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_release();

        swift_errorRelease();
        v78(v82, v11);
      }
      else
      {
        swift_release();

        swift_errorRelease();
        swift_errorRelease();
        uint64_t v80 = *(void (**)(char *, uint64_t))(v12 + 8);
        v80(v14, v11);
        swift_errorRelease();
        v80(v71, v11);
      }
    }
  }
  else
  {
    if (qword_1007F6B98 != -1) {
      swift_once();
    }
    uint64_t v66 = type metadata accessor for Logger();
    sub_100026A54(v66, (uint64_t)qword_1008035B0);
    uint64_t v67 = Logger.logObject.getter();
    os_log_type_t v68 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v67, v68))
    {
      dispatch_group_t v69 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)dispatch_group_t v69 = 0;
      _os_log_impl((void *)&_mh_execute_header, v67, v68, "No self in deleteMarkedAsRemovedEntriesForNonIcloudUser", v69, 2u);
      swift_slowDealloc();
    }
  }
}

unint64_t sub_10020E808(unint64_t result)
{
  unint64_t v2 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v10) {
      return result;
    }
  }
  else if (!*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  uint64_t v3 = *(void **)(*(void *)(v1 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v2;
  v5[4] = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_100219038;
  *(void *)(v6 + 24) = v5;
  v11[4] = sub_10001B3DC;
  v11[5] = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1003F44E4;
  void v11[3] = &unk_10079EFE8;
  uint64_t v7 = _Block_copy(v11);
  id v8 = v3;
  swift_bridgeObjectRetain();
  id v9 = v8;
  swift_retain();
  swift_release();
  [v9 performBlockAndWait:v7];

  _Block_release(v7);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v9) {
    __break(1u);
  }
  return result;
}

void sub_10020E9F4(uint64_t a1, unint64_t a2, void *a3)
{
  id v81 = a3;
  uint64_t v80 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v79 = (char *)v66 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  unint64_t v77 = (char *)v66 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v66 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v66 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v17 = (char *)v66 - v16;
  __chkstk_darwin(v18);
  uint64_t v84 = (char *)v66 - v19;
  uint64_t v76 = v20;
  __chkstk_darwin(v21);
  unint64_t v23 = (char *)v66 - v22;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v66[1] = Strong;
    uint64_t v25 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v74 = v12 + 16;
    uint64_t v73 = v25;
    v25(v23, (char *)(Strong + OBJC_IVAR____TtC7Journal9DataStack_sessionID), v11);
    uint64_t v67 = v23;
    v66[0] = v14;
    uint64_t v88 = a2;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v26 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    unint64_t v27 = v81;
    uint64_t v75 = v12;
    if (!v26)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      aBlock[0] = 0;
      if ([v27 save:aBlock])
      {
        unint64_t v48 = *(void (**)(char *, uint64_t))(v12 + 8);
        id v49 = aBlock[0];
        v48(v67, v11);
        swift_release();
      }
      else
      {
        id v54 = aBlock[0];
        _convertNSErrorToError(_:)();

        swift_willThrow();
        uint64_t v55 = v67;
        if (qword_1007F6B98 != -1) {
          swift_once();
        }
        uint64_t v56 = type metadata accessor for Logger();
        sub_100026A54(v56, (uint64_t)qword_1008035B0);
        uint64_t v57 = v66[0];
        v73((char *)v66[0], v55, v11);
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v58 = Logger.logObject.getter();
        os_log_type_t v59 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v58, v59))
        {
          uint64_t v60 = swift_slowAlloc();
          uint64_t v88 = swift_slowAlloc();
          id v89 = (void (**)(char *, char *, uint64_t))swift_slowAlloc();
          aBlock[0] = v89;
          *(_DWORD *)uint64_t v60 = 136446466;
          sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v61 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v90 = (void *)sub_10011EA98(v61, v62, (uint64_t *)aBlock);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          unint64_t v63 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
          v63(v57, v11);
          *(_WORD *)(v60 + 12) = 2112;
          swift_errorRetain();
          uint64_t v64 = _swift_stdlib_bridgeErrorToNSError();
          uint64_t v90 = (void *)v64;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(void *)uint64_t v88 = v64;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v58, v59, "%{public}s Saving non iCloud user deleted assets: %@", (uint8_t *)v60, 0x16u);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          swift_release();

          swift_errorRelease();
          v63((uint64_t)v67, v11);
        }
        else
        {
          swift_release();

          swift_errorRelease();
          swift_errorRelease();
          id v65 = *(void (**)(uint64_t, uint64_t))(v75 + 8);
          v65(v57, v11);
          swift_errorRelease();
          v65((uint64_t)v55, v11);
        }
      }
      return;
    }
    if (v26 >= 1)
    {
      uint64_t v28 = 0;
      unint64_t v85 = v88 & 0xC000000000000001;
      id v89 = (void (**)(char *, char *, uint64_t))(v12 + 32);
      unint64_t v87 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
      unint64_t v83 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
      uint64_t v71 = v92;
      id v70 = (void (**)(char *, uint64_t))(v4 + 8);
      dispatch_group_t v69 = (void (**)(char *, uint64_t))(v6 + 8);
      uint64_t v68 = v12 + 8;
      uint64_t v72 = v10;
      uint64_t v86 = v26;
      while (1)
      {
        id v30 = v85 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v88 + 8 * v28 + 32);
        unint64_t v31 = v30;
        id v32 = [v30 id:v66[0]];
        if (!v32) {
          break;
        }
        id v33 = v32;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v34 = *v89;
        (*v89)(v10, v17, v11);
        (*v87)(v10, 0, 1, v11);
        if ((*v83)(v10, 1, v11) == 1) {
          goto LABEL_20;
        }
        v34(v84, v10, v11);
        if (qword_1007F6BA0 != -1) {
          swift_once();
        }
        if (qword_1007F6BA8 != -1) {
          swift_once();
        }
        uint64_t v82 = qword_10083D198;
        v73(v17, v84, v11);
        unint64_t v35 = (*(unsigned __int8 *)(v12 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
        uint64_t v36 = swift_allocObject();
        v34((char *)(v36 + v35), v17, v11);
        v92[2] = sub_100219058;
        v92[3] = v36;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = (id)1107296256;
        v92[0] = sub_10017D530;
        v92[1] = &unk_10079F038;
        unint64_t v37 = _Block_copy(aBlock);
        unint64_t v38 = v77;
        static DispatchQoS.unspecified.getter();
        uint64_t v90 = _swiftEmptyArrayStorage;
        sub_10021852C((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
        sub_100010218(&qword_100804DB0);
        sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
        unint64_t v39 = v79;
        uint64_t v40 = v17;
        uint64_t v41 = v80;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_queue.async(group:qos:flags:execute:)();
        os_log_type_t v42 = v37;
        uint64_t v12 = v75;
        _Block_release(v42);
        uint64_t v43 = v41;
        id v17 = v40;
        (*v70)(v39, v43);
        (*v69)(v38, v78);
        swift_release();
        (*(void (**)(char *, uint64_t))(v12 + 8))(v84, v11);
        unint64_t v27 = v81;
        uint64_t v10 = v72;
LABEL_8:
        uint64_t v29 = v86;
        ++v28;
        sub_1005E6760();
        [v27 deleteObject:v31];

        if (v29 == v28) {
          goto LABEL_24;
        }
      }
      (*v87)(v10, 1, 1, v11);
LABEL_20:
      sub_10001457C((uint64_t)v10, &qword_100800950);
      if (qword_1007F7E78 != -1) {
        swift_once();
      }
      uint64_t v44 = type metadata accessor for Logger();
      sub_100026A54(v44, (uint64_t)qword_100812860);
      unint64_t v45 = Logger.logObject.getter();
      os_log_type_t v46 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v47 = 0;
        _os_log_impl((void *)&_mh_execute_header, v45, v46, "(purgeCache) unable to get assetId from an asset", v47, 2u);
        swift_slowDealloc();
      }

      goto LABEL_8;
    }
    __break(1u);
    goto LABEL_37;
  }
  if (qword_1007F6B98 != -1) {
LABEL_37:
  }
    swift_once();
  uint64_t v50 = type metadata accessor for Logger();
  sub_100026A54(v50, (uint64_t)qword_1008035B0);
  uint64_t v51 = Logger.logObject.getter();
  os_log_type_t v52 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v53 = 0;
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "No self in deleteMarkedAsRemovedAssetsForNonIcloudUser", v53, 2u);
    swift_slowDealloc();
  }
}

unint64_t sub_10020F6D0(unint64_t result)
{
  unint64_t v2 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v10) {
      return result;
    }
  }
  else if (!*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    return result;
  }
  uint64_t v3 = *(void **)(*(void *)(v1 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  uint64_t v4 = swift_allocObject();
  swift_weakInit();
  uint64_t v5 = (void *)swift_allocObject();
  v5[2] = v4;
  v5[3] = v2;
  v5[4] = v3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_100219004;
  *(void *)(v6 + 24) = v5;
  v11[4] = sub_10001B3DC;
  v11[5] = v6;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 1107296256;
  v11[2] = sub_1003F44E4;
  void v11[3] = &unk_10079EF70;
  uint64_t v7 = _Block_copy(v11);
  id v8 = v3;
  swift_bridgeObjectRetain();
  id v9 = v8;
  swift_retain();
  swift_release();
  [v9 performBlockAndWait:v7];

  _Block_release(v7);
  LOBYTE(v9) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v9) {
    __break(1u);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for DataStack.SyncState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10020F988);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DataStack.SyncState()
{
  return &type metadata for DataStack.SyncState;
}

unint64_t sub_10020F9C4()
{
  unint64_t result = qword_1008038B0;
  if (!qword_1008038B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008038B0);
  }
  return result;
}

void sub_10020FA18(uint64_t a1, unint64_t a2, void *a3)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v36 - v10;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v41 = Strong;
    os_log_type_t v42 = v11;
    unint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
    v39(v11, Strong + OBJC_IVAR____TtC7Journal9DataStack_sessionID, v5);
    uint64_t v40 = v8;
    if (a2 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
      if (v13) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v13)
      {
LABEL_4:
        if (v13 >= 1)
        {
          for (uint64_t i = 0; i != v13; ++i)
          {
            if ((a2 & 0xC000000000000001) != 0) {
              id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v15 = *(id *)(a2 + 8 * i + 32);
            }
            uint64_t v16 = v15;
            [a3 deleteObject:v15];
          }
          goto LABEL_15;
        }
        __break(1u);
        goto LABEL_23;
      }
    }
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v44 = 0;
    if ([a3 save:&v44])
    {
      uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
      uint64_t v22 = v44;
      v21(v42, v5);
      swift_release();
    }
    else
    {
      unint64_t v23 = v44;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_1007F6B98 != -1) {
        swift_once();
      }
      uint64_t v24 = type metadata accessor for Logger();
      sub_100026A54(v24, (uint64_t)qword_1008035B0);
      uint64_t v25 = v40;
      uint64_t v26 = v42;
      v39(v40, (uint64_t)v42, v5);
      swift_errorRetain();
      swift_errorRetain();
      unint64_t v27 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = swift_slowAlloc();
        unint64_t v38 = (void *)swift_slowAlloc();
        unint64_t v39 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
        uint64_t v44 = v39;
        *(_DWORD *)uint64_t v29 = 136446466;
        sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        os_log_t v37 = v27;
        uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v43 = sub_10011EA98(v30, v31, (uint64_t *)&v44);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        id v32 = *(void (**)(char *, uint64_t))(v6 + 8);
        v32(v25, v5);
        *(_WORD *)(v29 + 12) = 2112;
        swift_errorRetain();
        uint64_t v33 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v43 = v33;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *unint64_t v38 = v33;
        swift_errorRelease();
        swift_errorRelease();
        os_log_t v34 = v37;
        _os_log_impl((void *)&_mh_execute_header, v37, v28, "%{public}s Saving non iCloud user deleted file attachments: %@", (uint8_t *)v29, 0x16u);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
        swift_release();

        swift_errorRelease();
        v32(v26, v5);
      }
      else
      {
        swift_release();

        swift_errorRelease();
        swift_errorRelease();
        unint64_t v35 = *(void (**)(char *, uint64_t))(v6 + 8);
        v35(v25, v5);
        swift_errorRelease();
        v35(v26, v5);
      }
    }
    return;
  }
  if (qword_1007F6B98 != -1) {
LABEL_23:
  }
    swift_once();
  uint64_t v17 = type metadata accessor for Logger();
  sub_100026A54(v17, (uint64_t)qword_1008035B0);
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "No self in deleteMarkedAsRemovedFileAttachmentsForNoniCloudUser", v20, 2u);
    swift_slowDealloc();
  }
}

void sub_100210020(void *a1)
{
  uint64_t v2 = v1;
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = sub_100026A54(v4, (uint64_t)qword_1008035B0);
  swift_retain_n();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v6, v7))
  {
    id v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v32 = v5;
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)id v8 = 136446210;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v34 = sub_10011EA98(v9, v10, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v6, v7, "%{public}s Initialize User Status", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v11 = *(void *)(v2 + 16);
  id v12 = [*(id *)(v11 + OBJC_IVAR____TtC7Journal13CoreDataStack_container) viewContext:v32 aBlock[0]];
  id v13 = [v12 persistentStoreCoordinator];

  if (v13)
  {
    id v14 = [v13 persistentStores];
    sub_10001B284(0, &qword_1008038C0);
    unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v15 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = _CocoaArrayWrapper.endIndex.getter();

      swift_bridgeObjectRelease_n();
      if (!v28) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();

      if (!v16) {
        goto LABEL_15;
      }
    }
    if (*(unsigned char *)(v11 + OBJC_IVAR____TtC7Journal13CoreDataStack_persistentStoresLoadSuccess) == 1)
    {
      if (*(unsigned char *)(v2 + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) == 1)
      {
        uint64_t v17 = self;
        uint64_t v18 = swift_allocObject();
        *(void *)(v18 + 16) = v2;
        *(void *)(v18 + 24) = a1;
        aBlock[4] = (uint64_t)sub_100218378;
        aBlock[5] = v18;
        aBlock[0] = (uint64_t)_NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        id aBlock[2] = (uint64_t)sub_100211A54;
        void aBlock[3] = (uint64_t)&unk_10079E868;
        os_log_type_t v19 = _Block_copy(aBlock);
        swift_retain();
        id v20 = a1;
        swift_release();
        [v17 checkForProvisionedAppleAccount:v19];
        _Block_release(v19);
        return;
      }
      swift_retain_n();
      uint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v21, v22))
      {
        unint64_t v23 = (uint8_t *)swift_slowAlloc();
        uint64_t v24 = swift_slowAlloc();
        *(_DWORD *)unint64_t v23 = 136446210;
        aBlock[0] = v24;
        type metadata accessor for UUID();
        sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v34 = sub_10011EA98(v25, v26, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_release_n();
        swift_bridgeObjectRelease();
        unint64_t v27 = "%{public}s (initializeUserStatus) Protected data is not available, not ready to sync";
LABEL_17:
        _os_log_impl((void *)&_mh_execute_header, v21, v22, v27, v23, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return;
      }
      goto LABEL_18;
    }
  }
LABEL_15:
  swift_retain_n();
  uint64_t v21 = Logger.logObject.getter();
  os_log_type_t v22 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v21, v22))
  {
    unint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)unint64_t v23 = 136446210;
    aBlock[0] = v29;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v34 = sub_10011EA98(v30, v31, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    unint64_t v27 = "%{public}s (initializeUserStatus) Database is not open, not ready to sync";
    goto LABEL_17;
  }
LABEL_18:

  swift_release_n();
}

uint64_t sub_100210684(char a1, char a2, uint64_t a3, void *a4)
{
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100026A54(v6, (uint64_t)qword_1008035B0);
  swift_retain_n();
  os_log_type_t v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    *(void *)&long long aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446978;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v10 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v10, v11, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 18) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v9 + 24) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s (initializeUserStatus) (AppleAccountUtility.check) isAppleAccountLoggedIn:%{BOOL}d isDataclassProvisioned:%{BOOL}d isDataclassEnabled:%{BOOL}d", (uint8_t *)v9, 0x1Eu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  swift_retain_n();
  id v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    *(void *)&long long aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v15, v16, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 1024;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s (initializeUserStatus) dataclass sync toggle switch is enabled:%{BOOL}d", (uint8_t *)v14, 0x12u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if ((a1 & 1) == 0) {
      goto LABEL_13;
    }
  }
  else
  {

    swift_release_n();
    if ((a1 & 1) == 0)
    {
LABEL_13:
      unint64_t v23 = *(void **)(a4[2] + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
      uint64_t v24 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v25 = (void *)swift_allocObject();
      _OWORD v25[2] = v24;
      v25[3] = a4;
      v25[4] = v23;
      id v26 = v23;
      swift_retain();
      id v27 = v26;
      swift_retain();
      sub_10020A11C((uint64_t)sub_1002183B0, (uint64_t)v25);

      swift_release();
      return swift_release();
    }
  }
  if (a2) {
    goto LABEL_13;
  }
  swift_retain_n();
  uint64_t v17 = Logger.logObject.getter();
  os_log_type_t v18 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v17, v18))
  {
    os_log_type_t v19 = (uint8_t *)swift_slowAlloc();
    uint64_t v20 = swift_slowAlloc();
    *(_DWORD *)os_log_type_t v19 = 136446210;
    *(void *)&long long aBlock = v20;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v21, v22, (uint64_t *)&aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "%{public}s (initializeUserStatus) (AppleAccountUtility.check) Force offline, removing sync metadata and make all as not uploaded to cloud, and continue as offline user", v19, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  *((void *)&v42 + 1) = &type metadata for JournalFeatureFlags;
  unint64_t v43 = sub_10005F364();
  LOBYTE(aBlock) = 0;
  char v29 = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&aBlock);
  if ((v29 & 1) == 0) {
    goto LABEL_22;
  }
  if (qword_1007F7878 != -1) {
    goto LABEL_24;
  }
  while (1)
  {
    long long v30 = xmmword_10083E298;
    uint64_t v31 = qword_1007F7880;
    swift_bridgeObjectRetain();
    if (v31 != -1) {
      swift_once();
    }
    long long v32 = xmmword_10083E2A8;
    uint64_t v33 = self;
    swift_bridgeObjectRetain();
    id v34 = [v33 defaultCenter];
    if (qword_1007F6E60 != -1) {
      swift_once();
    }
    long long aBlock = v30;
    long long v42 = v32;
    LOBYTE(v43) = 3;
    [v34 postNotificationName:qword_10083D3E8 object:_bridgeAnythingNonVerbatimToObjectiveC<A>(_:)()];

    swift_unknownObjectRelease();
LABEL_22:
    unint64_t v35 = *(void **)(a4[2] + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
    uint64_t v36 = swift_allocObject();
    *(void *)(v36 + 16) = a4;
    *(void *)(v36 + 24) = v35;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = sub_1002183C0;
    *(void *)(v37 + 24) = v36;
    unint64_t v43 = (unint64_t)sub_10001AC84;
    uint64_t v44 = v37;
    *(void *)&long long aBlock = _NSConcreteStackBlock;
    *((void *)&aBlock + 1) = 1107296256;
    *(void *)&long long v42 = sub_1003F44E4;
    *((void *)&v42 + 1) = &unk_10079E930;
    unint64_t v38 = _Block_copy(&aBlock);
    id v39 = v35;
    swift_retain();
    a4 = v39;
    swift_retain();
    swift_release();
    [a4 performBlockAndWait:v38];
    _Block_release(v38);
    LOBYTE(v38) = swift_isEscapingClosureAtFileLocation();

    swift_release();
    uint64_t result = swift_release();
    if ((v38 & 1) == 0) {
      break;
    }
    __break(1u);
LABEL_24:
    swift_once();
  }
  return result;
}

void sub_100210F74(uint64_t a1, uint64_t a2, char a3, char a4, uint64_t a5, uint64_t a6, void *a7)
{
  v38[1] = a5;
  id v39 = a7;
  uint64_t v41 = a6;
  uint64_t v9 = type metadata accessor for UUID();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v40 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v18);
  unint64_t v22 = (char *)v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a4)
  {
    uint64_t v23 = v19;
    uint64_t v24 = v20;
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    uint64_t v25 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v26 = swift_allocObject();
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    uint64_t v28 = (void *)swift_allocObject();
    char v29 = v39;
    void v28[2] = v41;
    v28[3] = v29;
    void v28[4] = v26;
    aBlock[4] = sub_100218520;
    aBlock[5] = v28;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    id aBlock[2] = sub_10017D530;
    void aBlock[3] = &unk_10079E9A8;
    long long v30 = _Block_copy(aBlock);
    swift_retain();
    id v31 = v29;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10021852C((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v40 + 8))(v17, v15);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
  }
  else
  {
    uint64_t v32 = v10;
    uint64_t v33 = v41;
    if (a3 & 1) != 0 && (sub_1001FE410())
    {
      uint64_t v34 = v33 + OBJC_IVAR____TtC7Journal9DataStack_sessionID;
      uint64_t v35 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v14, 1, 1, v35);
      (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))((char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v34, v9);
      unint64_t v36 = (*(unsigned __int8 *)(v32 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
      uint64_t v37 = (char *)swift_allocObject();
      *((void *)v37 + 2) = 0;
      *((void *)v37 + 3) = 0;
      *((void *)v37 + 4) = v33;
      (*(void (**)(char *, char *, uint64_t))(v32 + 32))(&v37[v36], (char *)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
      swift_retain();
      sub_100328A60((uint64_t)v14, (uint64_t)&unk_1008038D0, (uint64_t)v37);
      swift_release();
    }
    else
    {
      sub_100202E00();
    }
  }
}

void sub_100211494(uint64_t a1, void *a2)
{
  type metadata accessor for JurassicAlertController();
  if (qword_1007F7888 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_1007F7890;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v7 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v5 message:v6 preferredStyle:1];

  if (qword_1007F7520 != -1) {
    swift_once();
  }
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a1;
  *(void *)(v8 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  id v9 = a2;
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_100218578;
  uint64_t v26 = v8;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v22 = 1107296256;
  uint64_t v23 = sub_10007453C;
  uint64_t v24 = &unk_10079E9F8;
  uint64_t v11 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v12 = self;
  id v13 = [v12 actionWithTitle:v10 style:2 handler:v11];
  _Block_release(v11);

  [v7 addAction:v13];
  if (qword_1007F7558 != -1) {
    swift_once();
  }
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v9;
  swift_retain();
  id v15 = v9;
  swift_bridgeObjectRetain();
  NSString v16 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_100218584;
  uint64_t v26 = v14;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v22 = 1107296256;
  uint64_t v23 = sub_10007453C;
  uint64_t v24 = &unk_10079EA48;
  uint64_t v17 = _Block_copy(&aBlock);
  swift_release();
  id v18 = [v12 actionWithTitle:v16 style:0 handler:v17];
  _Block_release(v17);

  [v7 addAction:v18];
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v20 = Strong;
    [Strong presentViewController:v7 animated:1 completion:0];
  }
}

id sub_1002118A8(uint64_t a1, uint64_t a2, void *a3)
{
  return sub_10029BA60(a3);
}

uint64_t sub_1002118F0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = a2;
  *(void *)(v5 + 24) = a3;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_100219A0C;
  *(void *)(v6 + 24) = v5;
  v10[4] = sub_10001B3DC;
  v10[5] = v6;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  _OWORD v10[2] = sub_1003F44E4;
  v10[3] = &unk_10079EAC0;
  id v7 = _Block_copy(v10);
  swift_retain();
  id v8 = a3;
  swift_retain();
  swift_release();
  [v8 performBlockAndWait:v7];
  _Block_release(v7);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v8) {
    __break(1u);
  }
  return result;
}

uint64_t sub_100211A54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(a1 + 32);
  swift_retain();
  v7(a2, a3, a4);

  return swift_release();
}

uint64_t sub_100211AC4(uint64_t a1, uint64_t (*a2)(void), uint64_t a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong) {
    return a2();
  }
  uint64_t v6 = Strong;
  id v7 = *(void **)(Strong + 24);
  id v8 = self;
  id v9 = v7;
  id v10 = [v8 standardUserDefaults];
  NSString v11 = String._bridgeToObjectiveC()();
  [v10 removeObjectForKey:v11];

  uint64_t v12 = (uint64_t *)(*(void *)(v6 + 24) + OBJC_IVAR____TtC7Journal13CloudKitStack_inMemoryMetadata);
  uint64_t v13 = *v12;
  unint64_t v14 = v12[1];
  *(_OWORD *)uint64_t v12 = xmmword_1006D8770;
  sub_100040DBC(v13, v14);
  id v15 = *(id *)(v6 + 16);
  sub_1002A0B3C();

  NSString v16 = (void *)swift_allocObject();
  void v16[2] = v6;
  v16[3] = a2;
  v16[4] = a3;
  swift_retain();
  swift_retain();
  sub_1005B6774();
  sub_1005B6790();
  sub_1005B6900();
  [*(id *)(v6 + 32) setAutomaticSyncingEnabled:0];
  uint64_t v17 = *(void **)(v6 + 32);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = v6;
  *(_OWORD *)(v18 + 24) = xmmword_1006D8770;
  *(void *)(v18 + 4sub_1002A10D0(0, 0) = sub_100219540;
  *(void *)(v18 + 48) = v16;
  aBlock[4] = sub_1002192AC;
  aBlock[5] = v18;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  id aBlock[2] = sub_10017D530;
  void aBlock[3] = &unk_10079F460;
  uint64_t v19 = _Block_copy(aBlock);
  swift_retain();
  id v20 = v17;
  swift_retain();
  swift_release();
  [v20 cancelOperationsWithCompletionHandler:v19];
  _Block_release(v19);

  swift_release();
  return swift_release();
}

uint64_t sub_100211D28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = a2;
  v6[4] = a3;
  swift_retain();
  swift_retain();
  sub_1002CFD94((uint64_t)sub_100219554, (uint64_t)v6);

  return swift_release();
}

void sub_100211DC4(char a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  if (a1)
  {
    id v7 = [self standardUserDefaults];
    NSString v8 = String._bridgeToObjectiveC()();
    [v7 setBool:1 forKey:v8];

    id v9 = *(void **)(*(void *)(a2 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
    uint64_t v10 = swift_allocObject();
    swift_weakInit();
    NSString v11 = (void *)swift_allocObject();
    v11[2] = v10;
    void v11[3] = a3;
    v11[4] = a4;
    v18[4] = sub_100219564;
    v18[5] = v11;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    void v18[2] = sub_10017D530;
    _OWORD v18[3] = &unk_10079F4D8;
    uint64_t v12 = _Block_copy(v18);
    id v13 = v9;
    swift_retain();
    swift_release();
    [v13 performBlock:v12];
    _Block_release(v12);
  }
  else
  {
    if (qword_1007F6B98 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_100026A54(v14, (uint64_t)qword_1008035B0);
    id v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v17 = 0;
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "(handleNoZone) no success creating a zone", v17, 2u);
      swift_slowDealloc();
    }

    a3();
  }
}

uint64_t sub_100212024(uint64_t a1, void (*a2)(void))
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    uint64_t v5 = *(char **)(Strong + 16);
    uint64_t v6 = *(void **)&v5[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate];
    id v7 = v5;
    id v8 = v6;
    sub_10056AB98(v8);

    id v9 = *(char **)(v4 + 16);
    uint64_t v10 = *(void **)&v9[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate];
    NSString v11 = v9;
    id v12 = v10;
    sub_1004F2AC4(v12);

    id v13 = *(char **)(v4 + 16);
    uint64_t v14 = *(void **)&v13[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate];
    id v15 = v13;
    id v16 = v14;
    sub_10052DDCC(v16);

    uint64_t v17 = *(char **)(v4 + 16);
    uint64_t v18 = *(void **)&v17[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate];
    uint64_t v19 = v17;
    id v20 = v18;
    sub_10029BA60(v20);

    *(unsigned char *)(v4 + OBJC_IVAR____TtC7Journal9DataStack_syncState) = 0;
    sub_100202AB8();
    a2();
    return swift_release();
  }
  else
  {
    if (qword_1007F6B98 != -1) {
      swift_once();
    }
    uint64_t v22 = type metadata accessor for Logger();
    sub_100026A54(v22, (uint64_t)qword_1008035B0);
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "(handleNoZone) syncEngineReset no self", v25, 2u);
      swift_slowDealloc();
    }

    return ((uint64_t (*)(void))a2)();
  }
}

uint64_t sub_10021221C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(char **)(a1 + 24);
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  id v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = a2;
  v7[4] = a3;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1006D6D00;
  id v9 = *(void **)&v5[OBJC_IVAR____TtC7Journal13CloudKitStack_zone];
  swift_retain();
  swift_retain();
  *(void *)(v8 + 32) = [v9 zoneID];
  specialized Array._endMutation()();
  uint64_t v10 = (void *)swift_allocObject();
  _OWORD v10[2] = v5;
  v10[3] = sub_100219874;
  v10[4] = v7;
  NSString v11 = v5;
  swift_retain();
  CKDatabase.modifyRecordZones(saving:deleting:completionHandler:)();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_release();
}

uint64_t sub_1002123C4(char a1, uint64_t a2, void (*a3)(void), uint64_t a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    if ((a1 & 1) == 0)
    {
      if (qword_1007F6B98 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_100026A54(v15, (uint64_t)qword_1008035B0);
      id v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.fault.getter();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v18 = 0;
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "Unable to delete zone", v18, 2u);
        swift_slowDealloc();
      }

      *(unsigned char *)(v8 + OBJC_IVAR____TtC7Journal9DataStack_syncState) = 0;
      a3();
      return swift_release();
    }
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = a3;
    *(void *)(v9 + 24) = a4;
    if (*(unsigned char *)(v8 + OBJC_IVAR____TtC7Journal9DataStack_syncState) == 1)
    {
      uint64_t v10 = qword_1007F6B98;
      swift_retain_n();
      if (v10 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      sub_100026A54(v11, (uint64_t)qword_1008035B0);
      id v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "handleNoZone done without purging in manateeIdentityLossHandling", v14, 2u);
        swift_slowDealloc();
      }

      a3();
      swift_release();
      swift_release();
      return swift_release();
    }
    *(unsigned char *)(v8 + OBJC_IVAR____TtC7Journal9DataStack_syncState) = 1;
    uint64_t v19 = *(void **)(*(void *)(v8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
    uint64_t v20 = swift_allocObject();
    swift_weakInit();
    uint64_t v21 = (void *)swift_allocObject();
    v21[2] = v20;
    v21[3] = sub_100219908;
    v21[4] = v9;
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = sub_1000AC8A4;
    *(void *)(v22 + 24) = v21;
    aBlock[4] = sub_10001B3DC;
    aBlock[5] = v22;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    id aBlock[2] = sub_1003F44E4;
    void aBlock[3] = &unk_10079F7D0;
    uint64_t v23 = _Block_copy(aBlock);
    swift_retain_n();
    id v24 = v19;
    swift_retain();
    swift_retain();
    swift_release();
    [v24 performBlockAndWait:v23];

    _Block_release(v23);
    LOBYTE(v23) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t result = swift_release();
    if (v23) {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1002127C4(uint64_t (*a1)(void))
{
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100026A54(v2, (uint64_t)qword_1008035B0);
  int v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "handleNoZone done without purging in manateeIdentityLossHandling", v5, 2u);
    swift_slowDealloc();
  }

  return a1();
}

uint64_t sub_1002128B8()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_100202AB8();
    return swift_release();
  }
  return result;
}

void sub_100212910()
{
  uint64_t v1 = v0;
  id v2 = [self standardUserDefaults];
  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [v2 stringArrayForKey:v3];

  if (v4)
  {
    uint64_t v5 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (*((void *)v5 + 2)) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    if (qword_1007F6B98 != -1) {
      swift_once();
    }
    uint64_t v14 = type metadata accessor for Logger();
    sub_100026A54(v14, (uint64_t)qword_1008035B0);
    swift_retain_n();
    uint64_t v15 = Logger.logObject.getter();
    os_log_type_t v16 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v15, v16))
    {
      os_log_type_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      *(_DWORD *)os_log_type_t v17 = 136446210;
      aBlock[0] = v18;
      type metadata accessor for UUID();
      sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v19 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v19, v20, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "%{public}s No In-progress ids to check", v17, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
    goto LABEL_15;
  }
  uint64_t v5 = _swiftEmptyArrayStorage;
  if (!*(void *)&_swiftEmptyArrayStorage[2]) {
    goto LABEL_8;
  }
LABEL_3:
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100026A54(v6, (uint64_t)qword_1008035B0);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  id v7 = Logger.logObject.getter();
  os_log_type_t v8 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 136446466;
    type metadata accessor for UUID();
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v10 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v10, v11, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2080;
    uint64_t v12 = Array.debugDescription.getter();
    sub_10011EA98(v12, v13, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s inProgressIds: %s", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  id v21 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v22 = String._bridgeToObjectiveC()();
  id v23 = [v21 initWithEntityName:v22];

  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1006D6280;
  *(void *)(v24 + 56) = sub_100010218(&qword_100800A70);
  *(void *)(v24 + 64) = sub_100014488(&qword_1007FFB90, &qword_100800A70);
  *(void *)(v24 + 32) = v5;
  swift_bridgeObjectRetain();
  uint64_t v25 = NSPredicate.init(format:_:)();
  [v23 setPredicate:v25];

  uint64_t v26 = *(void **)(*(void *)(v1 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  id v27 = (objc_class *)swift_allocObject();
  *((void *)v27 + 2) = v26;
  *((void *)v27 + 3) = v23;
  *((void *)v27 + 4) = v5;
  *((void *)v27 + 5) = v1;
  uint64_t v15 = swift_allocObject();
  v15[2].Class isa = (Class)sub_100218CC0;
  v15[3].Class isa = v27;
  aBlock[4] = (uint64_t)sub_10001B3DC;
  aBlock[5] = (uint64_t)v15;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  id aBlock[2] = (uint64_t)sub_1003F44E4;
  void aBlock[3] = (uint64_t)&unk_10079EE80;
  uint64_t v28 = _Block_copy(aBlock);
  id v29 = v26;
  swift_retain();
  id v30 = v29;
  id v31 = v23;
  swift_retain();
  swift_release();
  [v30 performBlockAndWait:v28];

  _Block_release(v28);
  LOBYTE(v3sub_1002A10D0(0, 0) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  swift_release();
  if (v30)
  {
    __break(1u);
LABEL_15:

    swift_release_n();
  }
}

uint64_t sub_100213048()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = sub_100218C58;
  *(void *)(v3 + 24) = v2;
  v7[4] = sub_10001B3DC;
  v7[5] = v3;
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 1107296256;
  v7[2] = sub_1003F44E4;
  v7[3] = &unk_10079EE08;
  id v4 = _Block_copy(v7);
  id v5 = v1;
  swift_retain();
  swift_release();
  [v5 performBlockAndWait:v4];

  _Block_release(v4);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v4) {
    __break(1u);
  }
  return result;
}

void sub_1002131B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v94 = a3;
  uint64_t v95 = a4;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v89 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v89 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = type metadata accessor for UUID();
  uint64_t v11 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  unint64_t v13 = (char *)&v89 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v14 - 8);
  os_log_type_t v16 = (char *)&v89 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v89 - v18;
  type metadata accessor for JournalEntryMO();
  unint64_t v20 = NSManagedObjectContext.fetch<A>(_:)();
  uint64_t v103 = v13;
  uint64_t v90 = v6;
  id v91 = v10;
  unint64_t v21 = v20;
  if (v20 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v92 = v8;
    uint64_t v93 = v7;
    if (v22) {
      goto LABEL_3;
    }
LABEL_20:
    uint64_t v104 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  uint64_t v22 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v92 = v8;
  uint64_t v93 = v7;
  if (!v22) {
    goto LABEL_20;
  }
LABEL_3:
  if (v22 < 1)
  {
    __break(1u);
    return;
  }
  id v23 = 0;
  uint64_t v100 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56);
  unint64_t v101 = v21 & 0xC000000000000001;
  uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  char v96 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v97 = (void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v104 = (char *)_swiftEmptyArrayStorage;
  uint64_t v25 = v99;
  uint64_t v102 = (unint64_t *)v22;
  unint64_t v98 = v21;
  do
  {
    if (v101) {
      id v27 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v27 = *(id *)(v21 + 8 * (void)v23 + 32);
    }
    uint64_t v28 = v27;
    id v29 = [v27 id];
    if (v29)
    {
      id v30 = v29;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v31 = 0;
    }
    else
    {
      uint64_t v31 = 1;
    }
    uint64_t v32 = v103;
    (*v100)(v16, v31, 1, v25);
    sub_10002C4EC((uint64_t)v16, (uint64_t)v19, &qword_100800950);
    if ((*v24)(v19, 1, v25))
    {
      sub_10001457C((uint64_t)v19, &qword_100800950);

      uint64_t v26 = v102;
    }
    else
    {
      (*v97)(v32, v19, v25);
      sub_10001457C((uint64_t)v19, &qword_100800950);
      uint64_t v33 = UUID.uuidString.getter();
      uint64_t v35 = v34;
      (*v96)(v32, v25);

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v104 = sub_1002A54A0(0, *((void *)v104 + 2) + 1, 1, v104);
      }
      unint64_t v37 = *((void *)v104 + 2);
      unint64_t v36 = *((void *)v104 + 3);
      uint64_t v26 = v102;
      if (v37 >= v36 >> 1) {
        uint64_t v104 = sub_1002A54A0((char *)(v36 > 1), v37 + 1, 1, v104);
      }
      unint64_t v38 = v104;
      *((void *)v104 + 2) = v37 + 1;
      id v39 = &v38[16 * v37];
      *((void *)v39 + 4) = v33;
      *((void *)v39 + 5) = v35;
      unint64_t v21 = v98;
      uint64_t v25 = v99;
    }
    id v23 = (unint64_t *)((char *)v23 + 1);
  }
  while (v26 != v23);
LABEL_21:
  swift_bridgeObjectRelease_n();
  uint64_t v40 = swift_bridgeObjectRetain();
  uint64_t v41 = sub_100388854(v40);
  swift_bridgeObjectRelease();
  uint64_t v42 = swift_bridgeObjectRetain();
  uint64_t v43 = sub_100388854(v42);
  swift_bridgeObjectRelease();
  if (*(void *)(v43 + 16) <= *(void *)(v41 + 16) >> 3)
  {
    v106[0] = v41;
    swift_bridgeObjectRetain();
    sub_100218CDC(v43);
    uint64_t v102 = (unint64_t *)v106[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v102 = sub_100159A68(v43, v41);
  }
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v44 = type metadata accessor for Logger();
  uint64_t v45 = sub_100026A54(v44, (uint64_t)qword_1008035B0);
  swift_retain_n();
  swift_bridgeObjectRetain();
  uint64_t v103 = (char *)v45;
  os_log_type_t v46 = Logger.logObject.getter();
  os_log_type_t v47 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v46, v47))
  {
    uint64_t v48 = swift_slowAlloc();
    v106[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v48 = 136446466;
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v49 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v105 = sub_10011EA98(v49, v50, v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v48 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v51 = Set.description.getter();
    unint64_t v53 = v52;
    swift_bridgeObjectRelease();
    uint64_t v105 = sub_10011EA98(v51, v53, v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v46, v47, "%{public}s In-progress All ID's to check: %s", (uint8_t *)v48, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  swift_retain_n();
  swift_bridgeObjectRetain();
  id v54 = Logger.logObject.getter();
  os_log_type_t v55 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v54, v55))
  {
    uint64_t v56 = swift_slowAlloc();
    v106[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v56 = 136446466;
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v57 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v105 = sub_10011EA98(v57, v58, v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v56 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v59 = Set.description.getter();
    unint64_t v61 = v60;
    swift_bridgeObjectRelease();
    uint64_t v105 = sub_10011EA98(v59, v61, v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v54, v55, "%{public}s In-progress Existing ID's to check: %s", (uint8_t *)v56, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  swift_retain_n();
  uint64_t v62 = (uint64_t)v102;
  swift_bridgeObjectRetain_n();
  unint64_t v63 = Logger.logObject.getter();
  os_log_type_t v64 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v63, v64))
  {
    uint64_t v65 = swift_slowAlloc();
    v106[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v65 = 136446466;
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v66 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v105 = sub_10011EA98(v66, v67, v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v65 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v68 = Set.description.getter();
    unint64_t v70 = v69;
    swift_bridgeObjectRelease();
    uint64_t v105 = sub_10011EA98(v68, v70, v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v63, v64, "%{public}s In-progress Non-Existing ID's to check: %s", (uint8_t *)v65, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
  }
  uint64_t v72 = v92;
  uint64_t v71 = v93;
  uint64_t v73 = (uint64_t)v91;
  type metadata accessor for Journaling();
  uint64_t v74 = (uint64_t)v90;
  sub_1004FD1B0((uint64_t)v90);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v74, 1, v71) == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001457C(v74, (uint64_t *)&unk_100800A60);
    swift_retain_n();
    uint64_t v75 = Logger.logObject.getter();
    os_log_type_t v76 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v75, v76))
    {
      unint64_t v77 = (uint8_t *)swift_slowAlloc();
      uint64_t v78 = swift_slowAlloc();
      *(_DWORD *)unint64_t v77 = 136446210;
      v106[0] = v78;
      sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v79 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v105 = sub_10011EA98(v79, v80, v106);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v75, v76, "%{public}s Unable to get in-progress attachments directory", v77, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v73, v74, v71);
    id v81 = sub_1000CD594(v62);
    swift_bridgeObjectRelease();
    sub_100214328((uint64_t)v81, v73);
    swift_release();
    sub_100214BC8((uint64_t)v104, v73);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v73, v71);
  }
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v82 = type metadata accessor for Logger();
  sub_100026A54(v82, (uint64_t)qword_1008035B0);
  swift_retain_n();
  unint64_t v83 = Logger.logObject.getter();
  os_log_type_t v84 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v83, v84))
  {
    unint64_t v85 = (uint8_t *)swift_slowAlloc();
    uint64_t v86 = swift_slowAlloc();
    *(_DWORD *)unint64_t v85 = 136446210;
    v106[0] = v86;
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v87 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v105 = sub_10011EA98(v87, v88, v106);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v83, v84, "%{public}s Cleanup Asset Files For In-progress Entries Successfully Done", v85, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
}

void sub_100214328(uint64_t a1, uint64_t a2)
{
  uint64_t v73 = a2;
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v7 = (char *)v57 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = *(void *)(a1 + 16);
  if (v72)
  {
    uint64_t v8 = v5;
    uint64_t v9 = self;
    uint64_t v60 = v67 + OBJC_IVAR____TtC7Journal9DataStack_sessionID;
    uint64_t v71 = a1 + 32;
    unint64_t v69 = (void (**)(char *))(v4 + 8);
    uint64_t v59 = &v75;
    v57[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    uint64_t v63 = 0;
    uint64_t v11 = &selRef_drawMapRect_zoomScale_inContext_;
    *(void *)&long long v12 = 136446722;
    long long v58 = v12;
    v57[1] = (char *)&type metadata for Any + 8;
    os_log_type_t v64 = "I result type display";
    uint64_t v65 = v8;
    unint64_t v66 = 0x8000000100687CA0;
    uint64_t v13 = v8;
    uint64_t v68 = v7;
    unint64_t v70 = v9;
    while (1)
    {
      uint64_t v18 = (uint64_t *)(v71 + 16 * v10);
      uint64_t v20 = *v18;
      unint64_t v19 = v18[1];
      swift_bridgeObjectRetain();
      URL.appendingPathComponent(_:)();
      char v76 = 1;
      unint64_t v21 = v9;
      id v22 = [v9 v11[231]];
      URL.path.getter();
      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      unsigned int v24 = [v22 fileExistsAtPath:v23 isDirectory:&v76];

      if (!v24) {
        break;
      }
      id v25 = [v21 v11[231]];
      URL._bridgeToObjectiveC()(v26);
      uint64_t v28 = v27;
      id v77 = 0;
      unsigned int v29 = [v25 removeItemAtURL:v27 error:&v77];

      if (v29)
      {
        id v14 = v77;
        sub_100041698(v20, v19);
        goto LABEL_4;
      }
      id v30 = v77;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_1007F6B98 != -1) {
        swift_once();
      }
      uint64_t v63 = 0;
      uint64_t v31 = type metadata accessor for Logger();
      sub_100026A54(v31, (uint64_t)qword_1008035B0);
      swift_retain();
      swift_errorRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_errorRetain();
      uint64_t v32 = Logger.logObject.getter();
      os_log_type_t v33 = static os_log_type_t.error.getter();
      int v34 = v33;
      if (!os_log_type_enabled(v32, v33))
      {

        swift_errorRelease();
        swift_errorRelease();
        swift_release_n();
        swift_bridgeObjectRelease_n();
        swift_errorRelease();
        (*v69)(v7);
        goto LABEL_7;
      }
      uint64_t v35 = swift_slowAlloc();
      uint64_t v62 = (void *)swift_slowAlloc();
      id v77 = v62;
      *(_DWORD *)uint64_t v35 = v58;
      type metadata accessor for UUID();
      sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      int v61 = v34;
      uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v74 = sub_10011EA98(v36, v37, (uint64_t *)&v77);
      uint64_t v7 = v68;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v35 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v74 = sub_10011EA98(v20, v19, (uint64_t *)&v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v35 + 22) = 2080;
      swift_getErrorValue();
      uint64_t v38 = Error.localizedDescription.getter();
      uint64_t v74 = sub_10011EA98(v38, v39, (uint64_t *)&v77);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v32, (os_log_type_t)v61, "%{public}s Unable to remove in-progress directory for entry id: %s %s", (uint8_t *)v35, 0x20u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      os_log_type_t v16 = *v69;
      uint64_t v17 = v7;
      uint64_t v15 = v65;
LABEL_6:
      uint64_t v13 = v15;
      v16(v17);
LABEL_7:
      uint64_t v9 = v70;
      uint64_t v11 = &selRef_drawMapRect_zoomScale_inContext_;
      if (++v10 == v72)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    uint64_t v40 = self;
    id v41 = [v40 standardUserDefaults];
    NSString v42 = String._bridgeToObjectiveC()();
    id v43 = [v41 stringArrayForKey:v42];

    if (v43)
    {
      uint64_t v44 = (double *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
    }
    else
    {
      uint64_t v44 = _swiftEmptyArrayStorage;
    }
    uint64_t v45 = *((void *)v44 + 2);
    uint64_t v7 = v68;
    if (v45)
    {
      if (*((void *)v44 + 4) == v20 && *((void *)v44 + 5) == v19
        || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
      {
        unint64_t v46 = 0;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
LABEL_22:
          unint64_t v47 = *((void *)v44 + 2);
          if (v46 >= v47) {
            __break(1u);
          }
          unint64_t v48 = v47 - 1;
          uint64_t v49 = v47 - 1 - v46;
          if (v49 < 0)
          {
            _fatalErrorMessage(_:_:file:line:flags:)();
            __break(1u);
            return;
          }
          memmove(&v44[2 * v46 + 4], &v44[2 * v46 + 6], 16 * v49);
          *((void *)v44 + 2) = v48;
          swift_bridgeObjectRelease();
          id v50 = [v40 standardUserDefaults];
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          NSString v52 = String._bridgeToObjectiveC()();
          [v50 setObject:isa forKey:v52];
          swift_bridgeObjectRelease();

LABEL_25:
          uint64_t v15 = v65;
          uint64_t v7 = v68;
          goto LABEL_5;
        }
        goto LABEL_42;
      }
      if (v45 != 1)
      {
        if (*((void *)v44 + 6) == v20 && *((void *)v44 + 7) == v19
          || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
        {
          unint64_t v46 = 1;
          if (swift_isUniquelyReferenced_nonNull_native())
          {
            unint64_t v46 = 1;
            goto LABEL_22;
          }
        }
        else
        {
          unint64_t v53 = v44 + 9;
          uint64_t v54 = 2;
          do
          {
            if (v45 == v54)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              goto LABEL_25;
            }
            unint64_t v46 = v54;
            if (*(v53 - 1) == v20 && *v53 == v19) {
              break;
            }
            char v56 = _stringCompareWithSmolCheck(_:_:expecting:)();
            uint64_t v54 = v46 + 1;
            v53 += 2;
          }
          while ((v56 & 1) == 0);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            goto LABEL_22;
          }
        }
LABEL_42:
        uint64_t v44 = (double *)sub_1000EFF88((uint64_t)v44);
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease();
LABEL_4:
    swift_bridgeObjectRelease();
    uint64_t v15 = v13;
LABEL_5:
    os_log_type_t v16 = *v69;
    uint64_t v17 = v7;
    goto LABEL_6;
  }
}

void sub_100214BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v102 = a2;
  uint64_t v5 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v5 - 8);
  uint64_t v106 = (char *)v86 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v105 = (char *)v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v98 = (char *)v86 - v11;
  uint64_t v101 = *(void *)(a1 + 16);
  if (v101)
  {
    long long v12 = self;
    uint64_t v97 = v3 + OBJC_IVAR____TtC7Journal9DataStack_sessionID;
    uint64_t v99 = a1 + 32;
    NSURLResourceKey v96 = NSURLIsDirectoryKey;
    unint64_t v112 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
    unint64_t v109 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v110 = v8 + 16;
    uint64_t v108 = (void (**)(uint64_t, char *, uint64_t))(v8 + 32);
    uint64_t v90 = v8;
    unint64_t v113 = (void (**)(char *, uint64_t))(v8 + 8);
    uint64_t v89 = &v115;
    v86[0] = a1;
    swift_bridgeObjectRetain();
    uint64_t v13 = 0;
    id v14 = &selRef_drawMapRect_zoomScale_inContext_;
    *((void *)&v15 + 1) = 2;
    long long v95 = xmmword_1006D6280;
    *(void *)&long long v15 = 136446722;
    long long v87 = v15;
    v86[1] = (char *)&type metadata for Any + 8;
    *(void *)&long long v15 = 136446466;
    long long v94 = v15;
    uint64_t v107 = v7;
    uint64_t v16 = (uint64_t)v98;
    uint64_t v100 = v12;
    uint64_t v91 = v3;
    while (1)
    {
      uint64_t v18 = (uint64_t *)(v99 + 16 * v13);
      uint64_t v20 = *v18;
      unint64_t v19 = v18[1];
      swift_bridgeObjectRetain();
      uint64_t v103 = v20;
      unint64_t v104 = v19;
      URL.appendingPathComponent(_:)();
      char v116 = 1;
      id v21 = [v12 v14[231]];
      URL.path.getter();
      id v22 = v14;
      NSString v23 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      LODWORD(v19) = [v21 fileExistsAtPath:v23 isDirectory:&v116];

      if (v19)
      {
        id v24 = [v12 v22[231]];
        URL._bridgeToObjectiveC()(v25);
        id v27 = v26;
        sub_100010218(&qword_1008038F0);
        uint64_t v28 = swift_allocObject();
        *(_OWORD *)(v28 + 16) = v95;
        NSURLResourceKey v29 = v96;
        *(void *)(v28 + 32) = v96;
        type metadata accessor for URLResourceKey(0);
        id v30 = v29;
        Class isa = Array._bridgeToObjectiveC()().super.isa;
        swift_bridgeObjectRelease();
        id v117 = 0;
        id v32 = [v24 contentsOfDirectoryAtURL:v27 includingPropertiesForKeys:isa options:4 error:&v117];

        id v33 = v117;
        if (!v32)
        {
          id v55 = v117;
          _convertNSErrorToError(_:)();

          swift_willThrow();
          if (qword_1007F6B98 != -1) {
            swift_once();
          }
          uint64_t v56 = type metadata accessor for Logger();
          sub_100026A54(v56, (uint64_t)qword_1008035B0);
          swift_retain();
          swift_errorRetain();
          unint64_t v57 = v104;
          swift_bridgeObjectRetain();
          swift_retain();
          swift_errorRetain();
          long long v58 = Logger.logObject.getter();
          os_log_type_t v59 = static os_log_type_t.error.getter();
          int v60 = v59;
          if (os_log_type_enabled(v58, v59))
          {
            uint64_t v61 = swift_slowAlloc();
            uint64_t v111 = swift_slowAlloc();
            id v117 = (id)v111;
            *(_DWORD *)uint64_t v61 = v87;
            LODWORD(v93) = v60;
            type metadata accessor for UUID();
            sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v62 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v114 = sub_10011EA98(v62, v63, (uint64_t *)&v117);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v61 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v114 = sub_10011EA98(v103, v57, (uint64_t *)&v117);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease_n();
            *(_WORD *)(v61 + 22) = 2080;
            swift_getErrorValue();
            uint64_t v64 = Error.localizedDescription.getter();
            uint64_t v114 = sub_10011EA98(v64, v65, (uint64_t *)&v117);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v58, (os_log_type_t)v93, "%{public}s Error clear data for finished entries with unfinised assets in-progress entry: %s %s", (uint8_t *)v61, 0x20u);
            swift_arrayDestroy();
            swift_slowDealloc();
            uint64_t v7 = v107;
            swift_slowDealloc();
          }
          else
          {

            swift_errorRelease();
            swift_errorRelease();
            swift_release_n();
            swift_bridgeObjectRelease_n();
          }
          swift_errorRelease();
          uint64_t v16 = (uint64_t)v98;
          (*v113)(v98, v7);
          long long v12 = v100;
          id v14 = &selRef_drawMapRect_zoomScale_inContext_;
          goto LABEL_6;
        }
        uint64_t v34 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
        id v35 = v33;

        uint64_t v36 = *(void *)(v34 + 16);
        if (!v36)
        {
          swift_bridgeObjectRelease();
          if (qword_1007F6B98 != -1) {
            swift_once();
          }
          uint64_t v66 = type metadata accessor for Logger();
          sub_100026A54(v66, (uint64_t)qword_1008035B0);
          unint64_t v67 = v104;
          swift_bridgeObjectRetain_n();
          swift_retain_n();
          uint64_t v68 = Logger.logObject.getter();
          os_log_type_t v69 = static os_log_type_t.default.getter();
          BOOL v70 = os_log_type_enabled(v68, v69);
          uint64_t v16 = (uint64_t)v98;
          if (v70)
          {
            uint64_t v71 = swift_slowAlloc();
            uint64_t v111 = swift_slowAlloc();
            id v117 = (id)v111;
            *(_DWORD *)uint64_t v71 = v94;
            type metadata accessor for UUID();
            sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v7 = v107;
            uint64_t v72 = dispatch thunk of CustomStringConvertible.description.getter();
            *(void *)(v71 + 4) = sub_10011EA98(v72, v73, (uint64_t *)&v117);
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v71 + 12) = 2080;
            swift_bridgeObjectRetain();
            uint64_t v74 = v103;
            *(void *)(v71 + 14) = sub_10011EA98(v103, v67, (uint64_t *)&v117);
            swift_bridgeObjectRelease_n();
            _os_log_impl((void *)&_mh_execute_header, v68, v69, "%{public}s No in-progress sub directories for an entry: %s", (uint8_t *)v71, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            long long v12 = v100;
            id v14 = &selRef_drawMapRect_zoomScale_inContext_;
          }
          else
          {

            swift_bridgeObjectRelease_n();
            swift_release_n();
            long long v12 = v100;
            id v14 = &selRef_drawMapRect_zoomScale_inContext_;
            uint64_t v74 = v103;
          }
          sub_100041698(v74, v67);
          swift_bridgeObjectRelease();
          (*v113)((char *)v16, v7);
          goto LABEL_6;
        }
        uint64_t v93 = v13;
        unint64_t v37 = v34 + ((*(unsigned __int8 *)(v90 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v90 + 80));
        uint64_t v111 = *(void *)(v90 + 72);
        uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v90 + 16);
        uint64_t v92 = v34;
        swift_bridgeObjectRetain();
        unint64_t v39 = (char *)_swiftEmptyArrayStorage;
        uint64_t v41 = (uint64_t)v105;
        uint64_t v40 = v106;
        while (1)
        {
          v38(v40, v37, v7);
          id v43 = *v112;
          (*v112)(v40, 0, 1, v7);
          if ((*v109)(v40, 1, v7) == 1) {
            break;
          }
          (*v108)(v41, v40, v7);
          sub_100215BFC(v41, (uint64_t *)&v117);
          (*v113)((char *)v41, v7);
          uint64_t v44 = v118;
          if (v118)
          {
            id v45 = v117;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v39 = sub_1002A54A0(0, *((void *)v39 + 2) + 1, 1, v39);
            }
            unint64_t v47 = *((void *)v39 + 2);
            unint64_t v46 = *((void *)v39 + 3);
            if (v47 >= v46 >> 1) {
              unint64_t v39 = sub_1002A54A0((char *)(v46 > 1), v47 + 1, 1, v39);
            }
            *((void *)v39 + 2) = v47 + 1;
            NSString v42 = &v39[16 * v47];
            *((void *)v42 + 4) = v45;
            *((void *)v42 + 5) = v44;
            uint64_t v40 = v106;
            uint64_t v7 = v107;
            uint64_t v41 = (uint64_t)v105;
          }
          v37 += v111;
          if (!--v36)
          {
            v43(v40, 1, 1, v7);
            break;
          }
        }
        swift_bridgeObjectRelease_n();
        uint64_t v16 = (uint64_t)v98;
        uint64_t v75 = v104;
        if (qword_1007F6B98 != -1) {
          swift_once();
        }
        uint64_t v76 = type metadata accessor for Logger();
        sub_100026A54(v76, (uint64_t)qword_1008035B0);
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        id v77 = Logger.logObject.getter();
        os_log_type_t v78 = static os_log_type_t.default.getter();
        int v79 = v78;
        if (os_log_type_enabled(v77, v78))
        {
          uint64_t v80 = swift_slowAlloc();
          uint64_t v111 = swift_slowAlloc();
          id v117 = (id)v111;
          *(_DWORD *)uint64_t v80 = v94;
          uint64_t v88 = v80 + 4;
          type metadata accessor for UUID();
          sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          LODWORD(v92) = v79;
          uint64_t v81 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v114 = sub_10011EA98(v81, v82, (uint64_t *)&v117);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v80 + 12) = 2080;
          uint64_t v88 = v80 + 14;
          swift_bridgeObjectRetain();
          uint64_t v83 = Array.description.getter();
          unint64_t v85 = v84;
          swift_bridgeObjectRelease();
          uint64_t v114 = sub_10011EA98(v83, v85, (uint64_t *)&v117);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v77, (os_log_type_t)v92, "%{public}s In-progress asset directories to check: %s", (uint8_t *)v80, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v7 = v107;
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_release_n();
        }
        uint64_t v13 = v93;
        id v14 = &selRef_drawMapRect_zoomScale_inContext_;
        sub_1002160A0((uint64_t)v39, v103, v75, v16);
        swift_bridgeObjectRelease();
      }
      else
      {
        if (qword_1007F6B98 != -1) {
          swift_once();
        }
        uint64_t v48 = type metadata accessor for Logger();
        sub_100026A54(v48, (uint64_t)qword_1008035B0);
        unint64_t v49 = v104;
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        id v50 = Logger.logObject.getter();
        os_log_type_t v51 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v50, v51))
        {
          uint64_t v52 = swift_slowAlloc();
          id v117 = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v52 = v94;
          type metadata accessor for UUID();
          sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)(v52 + 4) = sub_10011EA98(v53, v54, (uint64_t *)&v117);
          swift_release_n();
          uint64_t v16 = (uint64_t)v98;
          swift_bridgeObjectRelease();
          *(_WORD *)(v52 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v17 = v103;
          *(void *)(v52 + 14) = sub_10011EA98(v103, v49, (uint64_t *)&v117);
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v50, v51, "%{public}s No directory for in-progress entry: %s", (uint8_t *)v52, 0x16u);
          swift_arrayDestroy();
          uint64_t v7 = v107;
          swift_slowDealloc();
          swift_slowDealloc();

          id v14 = &selRef_drawMapRect_zoomScale_inContext_;
        }
        else
        {

          swift_bridgeObjectRelease_n();
          swift_release_n();
          id v14 = &selRef_drawMapRect_zoomScale_inContext_;
          uint64_t v17 = v103;
        }
        sub_100041698(v17, v49);
      }
      swift_bridgeObjectRelease();
      (*v113)((char *)v16, v7);
      long long v12 = v100;
LABEL_6:
      if (++v13 == v101)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
  }
}

void sub_100215BFC(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v32 = *(void *)(v4 - 8);
  uint64_t v33 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = &v29[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = type metadata accessor for URLResourceValues();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_100010218(&qword_1008038F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6280;
  *(void *)(inited + 32) = NSURLIsDirectoryKey;
  long long v12 = NSURLIsDirectoryKey;
  sub_1000F400C(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  URL.resourceValues(forKeys:)();
  if (v2)
  {
    swift_bridgeObjectRelease();
    if (qword_1007F6B98 != -1) {
      swift_once();
    }
    uint64_t v13 = type metadata accessor for Logger();
    sub_100026A54(v13, (uint64_t)qword_1008035B0);
    uint64_t v14 = v32;
    uint64_t v15 = v33;
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v32 + 16))(v6, a1, v33);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.error.getter();
    int v18 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v36 = v31;
      *(_DWORD *)uint64_t v19 = 136315394;
      sub_10021852C((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
      int v30 = v18;
      uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v35 = sub_10011EA98(v20, v21, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v6, v15);
      *(_WORD *)(v19 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v22 = Error.localizedDescription.getter();
      uint64_t v35 = sub_10011EA98(v22, v23, &v36);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v16, (os_log_type_t)v30, "Error reading resource for in-progtess values for URL: %s, error: %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v6, v15);
      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_9;
  }
  swift_bridgeObjectRelease();
  if ((URLResourceValues.isDirectory.getter() & 1) == 0)
  {
    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
LABEL_9:
    id v24 = v34;
    *uint64_t v34 = 0;
    v24[1] = 0;
    return;
  }
  uint64_t v25 = URL.lastPathComponent.getter();
  uint64_t v27 = v26;
  (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  uint64_t v28 = v34;
  *uint64_t v34 = v25;
  v28[1] = v27;
}

uint64_t sub_1002160A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v28 = a4;
  uint64_t v29 = a2;
  uint64_t v30 = a3;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v11 initWithEntityName:v12];

  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1006D6280;
  *(void *)(v14 + 56) = sub_100010218(&qword_100800A70);
  *(void *)(v14 + 64) = sub_100014488(&qword_1007FFB90, &qword_100800A70);
  *(void *)(v14 + 32) = a1;
  swift_bridgeObjectRetain();
  uint64_t v15 = NSPredicate.init(format:_:)();
  [v13 setPredicate:v15];

  uint64_t v16 = v5;
  uint64_t v27 = v5;
  os_log_type_t v17 = *(void **)(*(void *)(v5 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v28, v7);
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v19 = (char *)swift_allocObject();
  *((void *)v19 + 2) = v17;
  *((void *)v19 + 3) = v13;
  *((void *)v19 + 4) = a1;
  *((void *)v19 + 5) = v16;
  uint64_t v20 = v30;
  *((void *)v19 + 6) = v29;
  *((void *)v19 + 7) = v20;
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(&v19[v18], v10, v7);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_100218F70;
  *(void *)(v21 + 24) = v19;
  aBlock[4] = sub_10001B3DC;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  id aBlock[2] = sub_1003F44E4;
  void aBlock[3] = &unk_10079EEF8;
  uint64_t v22 = _Block_copy(aBlock);
  id v23 = v17;
  swift_bridgeObjectRetain();
  id v24 = v23;
  id v25 = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v24 performBlockAndWait:v22];

  _Block_release(v22);
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v22) {
    __break(1u);
  }
  return result;
}

void sub_10021643C(uint64_t a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v122 = a7;
  uint64_t v110 = a6;
  uint64_t v111 = a4;
  unint64_t v113 = a3;
  uint64_t v8 = type metadata accessor for URL();
  *(void *)&long long v112 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)v106 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for UUID();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v106 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v15 - 8);
  os_log_type_t v17 = (char *)v106 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)v106 - v19;
  type metadata accessor for JournalEntryAssetMO();
  unint64_t v21 = NSManagedObjectContext.fetch<A>(_:)();
  uint64_t v123 = 0;
  uint64_t v108 = a5;
  uint64_t v125 = (uint64_t)v14;
  uint64_t v121 = v10;
  uint64_t v118 = v8;
  int64_t v29 = v21;
  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v30 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  uint64_t v117 = v11;
  if (v30)
  {
    if (v30 < 1)
    {
LABEL_84:
      __break(1u);
LABEL_85:
      swift_once();
      goto LABEL_75;
    }
    uint64_t v31 = 0;
    uint64_t v119 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    unint64_t v120 = v29 & 0xC000000000000001;
    uint64_t v32 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    char v115 = (void (**)(uint64_t, char *, uint64_t))(v12 + 16);
    uint64_t v114 = (void (**)(uint64_t, uint64_t))(v12 + 8);
    uint64_t v126 = _swiftEmptyArrayStorage;
    uint64_t v124 = v30;
    int64_t v116 = v29;
    do
    {
      if (v120) {
        id v34 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v34 = *(id *)(v29 + 8 * v31 + 32);
      }
      uint64_t v35 = v34;
      id v36 = [v34 id];
      if (v36)
      {
        unint64_t v37 = v36;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v38 = 0;
      }
      else
      {
        uint64_t v38 = 1;
      }
      uint64_t v39 = v125;
      (*v119)(v17, v38, 1, v11);
      sub_10002C4EC((uint64_t)v17, (uint64_t)v20, &qword_100800950);
      if ((*v32)(v20, 1, v11))
      {
        sub_10001457C((uint64_t)v20, &qword_100800950);

        uint64_t v33 = v124;
      }
      else
      {
        (*v115)(v39, v20, v11);
        sub_10001457C((uint64_t)v20, &qword_100800950);
        uint64_t v40 = UUID.uuidString.getter();
        NSString v42 = v41;
        (*v114)(v39, v11);

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v126 = sub_1002A54A0(0, (int64_t)v126[2].isa + 1, 1, (char *)v126);
        }
        unint64_t isa = (unint64_t)v126[2].isa;
        unint64_t v43 = (unint64_t)v126[3].isa;
        uint64_t v33 = v124;
        if (isa >= v43 >> 1) {
          uint64_t v126 = sub_1002A54A0((char *)(v43 > 1), isa + 1, 1, (char *)v126);
        }
        id v45 = v126;
        v126[2].unint64_t isa = (Class)(isa + 1);
        unint64_t v46 = &v45[2 * isa];
        v46[4].unint64_t isa = (Class)v40;
        v46[5].unint64_t isa = v42;
        uint64_t v11 = v117;
        int64_t v29 = v116;
      }
      ++v31;
    }
    while (v33 != v31);
  }
  else
  {
    uint64_t v126 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease_n();
  uint64_t v48 = swift_bridgeObjectRetain();
  unint64_t v49 = (unint64_t *)sub_100388854(v48);
  swift_bridgeObjectRelease();
  uint64_t v50 = sub_100388854((uint64_t)v126);
  swift_bridgeObjectRelease();
  if (*(void *)(v50 + 16) <= v49[2] >> 3)
  {
    uint64_t v130 = v49;
    sub_100218CDC(v50);
    swift_bridgeObjectRelease();
    os_log_type_t v51 = v130;
  }
  else
  {
    os_log_type_t v51 = sub_100159A68(v50, (uint64_t)v49);
    swift_bridgeObjectRelease();
  }
  uint64_t v11 = v110;
  uint64_t v53 = v111;
  unint64_t v54 = v121;
  unint64_t v109 = v51[2];
  if (v109)
  {
    id v55 = 0;
    unint64_t v56 = v51[7];
    char v115 = (void (**)(uint64_t, char *, uint64_t))(v51 + 7);
    uint64_t v57 = 1 << *((unsigned char *)v51 + 32);
    uint64_t v58 = -1;
    if (v57 < 64) {
      uint64_t v58 = ~(-1 << v57);
    }
    unint64_t v59 = v58 & v56;
    uint64_t v114 = (void (**)(uint64_t, uint64_t))(v111 + OBJC_IVAR____TtC7Journal9DataStack_sessionID);
    int64_t v116 = (unint64_t)(v57 + 63) >> 6;
    uint64_t v119 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v112 + 8);
    unint64_t v113 = &v129;
    int v60 = &selRef_drawMapRect_zoomScale_inContext_;
    *(void *)&long long v52 = 136446466;
    long long v107 = v52;
    v106[1] = (char *)&type metadata for Any + 8;
    *(void *)&long long v52 = 136446722;
    long long v112 = v52;
    uint64_t v11 = v118;
    unint64_t v120 = (unint64_t)v51;
    while (1)
    {
      if (v59)
      {
        uint64_t v125 = (v59 - 1) & v59;
        uint64_t v126 = v55;
        unint64_t v61 = __clz(__rbit64(v59)) | ((void)v55 << 6);
      }
      else
      {
        BOOL v62 = __OFADD__(v55, 1);
        unint64_t v63 = ((char *)&v55->isa + 1);
        if (v62)
        {
          __break(1u);
LABEL_82:
          __break(1u);
          swift_once();
          uint64_t v22 = type metadata accessor for Logger();
          sub_100026A54(v22, (uint64_t)qword_1008035B0);
          swift_retain();
          swift_errorRetain();
          swift_retain();
          swift_errorRetain();
          uint64_t v126 = Logger.logObject.getter();
          os_log_type_t v23 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v126, v23))
          {
            uint64_t v24 = swift_slowAlloc();
            uint64_t v130 = (unint64_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v24 = 136446466;
            sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
            uint64_t v25 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v128 = sub_10011EA98(v25, v26, (uint64_t *)&v130);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v24 + 12) = 2080;
            swift_getErrorValue();
            uint64_t v27 = Error.localizedDescription.getter();
            uint64_t v128 = sub_10011EA98(v27, v28, (uint64_t *)&v130);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v126, v23, "%{public}s In-progress assets fetch error: %s", (uint8_t *)v24, 0x16u);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();

            swift_errorRelease();
          }
          else
          {
            swift_errorRelease();
            swift_release_n();
            swift_errorRelease();
            swift_errorRelease();
            unint64_t v47 = (char *)v126;
          }
          return;
        }
        if ((uint64_t)v63 >= v116) {
          goto LABEL_69;
        }
        unint64_t v64 = (unint64_t)v115[(void)v63];
        if (!v64)
        {
          unint64_t v65 = (char *)&v63->isa + 1;
          if ((uint64_t)&v63->isa + 1 >= v116) {
            goto LABEL_69;
          }
          unint64_t v64 = (unint64_t)v115[(void)v65];
          if (!v64)
          {
            unint64_t v65 = (char *)&v63->isa + 2;
            if ((uint64_t)&v63->isa + 2 >= v116) {
              goto LABEL_69;
            }
            unint64_t v64 = (unint64_t)v115[(void)v65];
            if (!v64)
            {
              unint64_t v65 = (char *)&v63->isa + 3;
              if ((uint64_t)&v63->isa + 3 >= v116)
              {
LABEL_69:
                swift_release();
                if (v109) {
                  return;
                }
                if (qword_1007F6B98 != -1) {
                  swift_once();
                }
                uint64_t v95 = type metadata accessor for Logger();
                sub_100026A54(v95, (uint64_t)qword_1008035B0);
                swift_retain_n();
                uint64_t v11 = v110;
                swift_bridgeObjectRetain_n();
                NSURLResourceKey v96 = Logger.logObject.getter();
                os_log_type_t v97 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v96, v97))
                {
                  uint64_t v98 = swift_slowAlloc();
                  uint64_t v130 = (unint64_t *)swift_slowAlloc();
                  *(_DWORD *)uint64_t v98 = v107;
                  sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                  uint64_t v99 = dispatch thunk of CustomStringConvertible.description.getter();
                  uint64_t v128 = sub_10011EA98(v99, v100, (uint64_t *)&v130);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_release_n();
                  swift_bridgeObjectRelease();
                  *(_WORD *)(v98 + 12) = 2080;
                  swift_bridgeObjectRetain();
                  uint64_t v101 = v108;
                  uint64_t v128 = sub_10011EA98(v108, v11, (uint64_t *)&v130);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease_n();
                  uint64_t v102 = "%{public}s Done cleaning in-progress assets for entry: %s";
                  goto LABEL_77;
                }
LABEL_78:

                swift_bridgeObjectRelease_n();
                swift_release_n();
                uint64_t v101 = v108;
                goto LABEL_79;
              }
              unint64_t v64 = (unint64_t)v115[(void)v65];
              if (!v64)
              {
                while (1)
                {
                  unint64_t v63 = (v65 + 1);
                  if (__OFADD__(v65, 1)) {
                    goto LABEL_82;
                  }
                  if ((uint64_t)v63 >= v116) {
                    goto LABEL_69;
                  }
                  unint64_t v64 = (unint64_t)v115[(void)v63];
                  ++v65;
                  if (v64) {
                    goto LABEL_49;
                  }
                }
              }
            }
          }
          unint64_t v63 = v65;
        }
LABEL_49:
        uint64_t v125 = (v64 - 1) & v64;
        uint64_t v126 = v63;
        unint64_t v61 = __clz(__rbit64(v64)) + ((void)v63 << 6);
      }
      uint64_t v66 = (uint64_t *)(v51[6] + 16 * v61);
      uint64_t v67 = *v66;
      unint64_t v68 = v66[1];
      swift_bridgeObjectRetain();
      uint64_t v124 = v67;
      URL.appendingPathComponent(_:)();
      char v127 = 1;
      os_log_type_t v69 = self;
      id v70 = [v69 v60[231]];
      URL.path.getter();
      NSString v71 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      LODWORD(v67) = [v70 fileExistsAtPath:v71 isDirectory:&v127];

      if (!v67) {
        break;
      }
      id v72 = [v69 v60[231]];
      URL._bridgeToObjectiveC()(v73);
      uint64_t v75 = v74;
      uint64_t v130 = 0;
      unsigned int v76 = [v72 removeItemAtURL:v74 error:&v130];

      if (v76)
      {
        uint64_t v87 = qword_1007F6B98;
        uint64_t v88 = v130;
        if (v87 != -1) {
          swift_once();
        }
        uint64_t v89 = type metadata accessor for Logger();
        sub_100026A54(v89, (uint64_t)qword_1008035B0);
        swift_retain_n();
        swift_bridgeObjectRetain();
        uint64_t v90 = Logger.logObject.getter();
        os_log_type_t v91 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v90, v91))
        {
          uint64_t v92 = swift_slowAlloc();
          uint64_t v130 = (unint64_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v92 = v107;
          sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v93 = dispatch thunk of CustomStringConvertible.description.getter();
          *(void *)(v92 + 4) = sub_10011EA98(v93, v94, (uint64_t *)&v130);
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v92 + 12) = 2080;
          swift_bridgeObjectRetain();
          *(void *)(v92 + 14) = sub_10011EA98(v124, v68, (uint64_t *)&v130);
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v90, v91, "%{public}s Delete in-progress asset dir success: %s", (uint8_t *)v92, 0x16u);
          swift_arrayDestroy();
          uint64_t v53 = v111;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_release_n();
          swift_bridgeObjectRelease_n();
        }

        unint64_t v54 = v121;
        ((void (*)(char *, uint64_t))*v119)(v121, v11);
        os_log_type_t v51 = (unint64_t *)v120;
        unint64_t v59 = v125;
        id v55 = v126;
        BOOL v62 = __OFSUB__(v109--, 1);
        int v60 = &selRef_drawMapRect_zoomScale_inContext_;
        if (v62)
        {
          __break(1u);
          goto LABEL_84;
        }
      }
      else
      {
        id v77 = v130;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        if (qword_1007F6B98 != -1) {
          swift_once();
        }
        uint64_t v78 = type metadata accessor for Logger();
        sub_100026A54(v78, (uint64_t)qword_1008035B0);
        swift_retain();
        swift_errorRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_errorRetain();
        int v79 = Logger.logObject.getter();
        uint64_t v80 = v53;
        os_log_type_t v81 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v79, v81))
        {
          uint64_t v82 = swift_slowAlloc();
          uint64_t v130 = (unint64_t *)swift_slowAlloc();
          *(_DWORD *)uint64_t v82 = v112;
          sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v83 = dispatch thunk of CustomStringConvertible.description.getter();
          uint64_t v128 = sub_10011EA98(v83, v84, (uint64_t *)&v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v82 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v128 = sub_10011EA98(v124, v68, (uint64_t *)&v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          *(_WORD *)(v82 + 22) = 2080;
          swift_getErrorValue();
          uint64_t v85 = Error.localizedDescription.getter();
          uint64_t v128 = sub_10011EA98(v85, v86, (uint64_t *)&v130);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v79, v81, "%{public}s Delete in-progress asset dir failure: %s %s", (uint8_t *)v82, 0x20u);
          swift_arrayDestroy();
          swift_slowDealloc();
          int v60 = &selRef_drawMapRect_zoomScale_inContext_;
          swift_slowDealloc();
        }
        else
        {

          swift_errorRelease();
          swift_errorRelease();
          swift_release_n();
          swift_bridgeObjectRelease_n();
        }
        swift_errorRelease();
        unint64_t v54 = v121;
        uint64_t v11 = v118;
        ((void (*)(char *, uint64_t))*v119)(v121, v118);
        uint64_t v123 = 0;
        uint64_t v53 = v80;
LABEL_36:
        os_log_type_t v51 = (unint64_t *)v120;
        unint64_t v59 = v125;
        id v55 = v126;
      }
    }
    ((void (*)(char *, uint64_t))*v119)(v54, v11);
    swift_bridgeObjectRelease();
    goto LABEL_36;
  }
  swift_bridgeObjectRelease();
  if (qword_1007F6B98 != -1) {
    goto LABEL_85;
  }
LABEL_75:
  uint64_t v103 = type metadata accessor for Logger();
  sub_100026A54(v103, (uint64_t)qword_1008035B0);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  NSURLResourceKey v96 = Logger.logObject.getter();
  os_log_type_t v97 = static os_log_type_t.default.getter();
  if (!os_log_type_enabled(v96, v97)) {
    goto LABEL_78;
  }
  uint64_t v98 = swift_slowAlloc();
  uint64_t v130 = (unint64_t *)swift_slowAlloc();
  *(_DWORD *)uint64_t v98 = 136446466;
  sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v104 = dispatch thunk of CustomStringConvertible.description.getter();
  uint64_t v128 = sub_10011EA98(v104, v105, (uint64_t *)&v130);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_release_n();
  swift_bridgeObjectRelease();
  *(_WORD *)(v98 + 12) = 2080;
  swift_bridgeObjectRetain();
  uint64_t v101 = v108;
  uint64_t v128 = sub_10011EA98(v108, v11, (uint64_t *)&v130);
  UnsafeMutableRawBufferPointer.copyMemory(from:)();
  swift_bridgeObjectRelease_n();
  uint64_t v102 = "%{public}s No in-progress assets to clean for an entry: %s";
LABEL_77:
  _os_log_impl((void *)&_mh_execute_header, v96, v97, v102, (uint8_t *)v98, 0x16u);
  swift_arrayDestroy();
  swift_slowDealloc();
  swift_slowDealloc();

LABEL_79:
  sub_100041698(v101, v11);
}

void sub_100217810(void *a1)
{
  type metadata accessor for JournalEntryMO();
  uint64_t v2 = [(id)swift_getObjCClassFromMetadata() fetchRequest];
  sub_10001B284(0, (unint64_t *)&qword_100800A30);
  uint64_t v3 = NSPredicate.init(format:_:)();
  [v2 setPredicate:v3];

  id v4 = [objc_allocWithZone((Class)NSBatchDeleteRequest) initWithFetchRequest:v2];
  [v4 setResultType:2];
  *(void *)&long long v24 = 0;
  id v5 = [a1 executeRequest:v4 error:&v24];
  uint64_t v6 = (void *)v24;
  if (v5)
  {
    uint64_t v7 = v5;
    self;
    uint64_t v8 = swift_dynamicCastObjCClass();
    if (v8)
    {
      id v9 = v6;
      if ([v8 result])
      {
        _bridgeAnyObjectToAny(_:)();
        swift_unknownObjectRelease();
      }
      else
      {
        memset(v23, 0, sizeof(v23));
      }
      sub_10002C4EC((uint64_t)v23, (uint64_t)&v24, &qword_1007FAD50);
      if (*((void *)&v25 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v18 = *(void *)&v23[0];
LABEL_17:
          if (qword_1007F6B98 != -1) {
            swift_once();
          }
          uint64_t v19 = type metadata accessor for Logger();
          sub_100026A54(v19, (uint64_t)qword_1008035B0);
          uint64_t v20 = Logger.logObject.getter();
          os_log_type_t v21 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v20, v21))
          {
            uint64_t v22 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v22 = 134217984;
            *(void *)&long long v24 = v18;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v20, v21, "Removed %ld tips in the model.", v22, 0xCu);
            swift_slowDealloc();
          }
          else
          {
          }
          uint64_t v2 = v8;
          goto LABEL_23;
        }
LABEL_16:
        uint64_t v18 = 0;
        goto LABEL_17;
      }
    }
    else
    {
      id v17 = v6;

      long long v24 = 0u;
      long long v25 = 0u;
    }
    sub_10001457C((uint64_t)&v24, &qword_1007FAD50);
    goto LABEL_16;
  }
  id v10 = (id)v24;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  uint64_t v11 = type metadata accessor for Logger();
  sub_100026A54(v11, (uint64_t)qword_1008035B0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v14 = 138412290;
    swift_errorRetain();
    uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)&long long v24 = v16;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v15 = v16;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Error fetching or saving when cleaning up lock tips on app launch: %@", v14, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
    uint64_t v2 = v12;
  }
LABEL_23:
}