id sub_10037DE04(uint64_t a1, char a2)
{
  uint64_t v2;
  void *v3;
  id v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  id v15;
  void *v16;
  unint64_t v17;
  id v18;
  char v19;
  id v20;
  id v22;
  void *v24;

  v3 = *(void **)(v2 + OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView);
  if (v3)
  {
    v22 = v3;
    v4 = [v22 visibleCells];
    sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
    v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v5 >> 62) {
      goto LABEL_26;
    }
    v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v6)
    {
      v24 = 0;
      v7 = v5 & 0xC000000000000001;
      v8 = 4;
      while (1)
      {
        v9 = v7 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v5 + 8 * v8);
        v10 = v9;
        v11 = v8 - 3;
        if (__OFADD__(v8 - 4, 1)) {
          break;
        }
        type metadata accessor for MosaicCell();
        v12 = swift_dynamicCastClass();
        if (!v12) {
          goto LABEL_6;
        }
        v13 = (char *)v12;
        if (*(unsigned char *)(v12 + OBJC_IVAR____TtC7Journal10MosaicCell_index + 8))
        {

          swift_bridgeObjectRelease();
          goto LABEL_29;
        }
        v14 = *(void *)(v12 + OBJC_IVAR____TtC7Journal10MosaicCell_index);
        if (*(unsigned char *)(v12 + OBJC_IVAR____TtC7Journal10MosaicCell_overflowDetail) == 1)
        {

          v15 = v10;
          v24 = v13;
        }
        v16 = *(void **)&v13[OBJC_IVAR____TtC7Journal10MosaicCell_journalAsset];
        if (!v16) {
          goto LABEL_6;
        }
        v17 = v5;
        v18 = v16;
        v19 = static UUID.== infix(_:_:)();

        if ((v19 & 1) == 0)
        {
          v5 = v17;
LABEL_6:

          goto LABEL_7;
        }
        v5 = v17;
        if ((a2 & 1) == 0 || v14 <= 4)
        {

          swift_bridgeObjectRelease();
          v20 = *(id *)&v13[OBJC_IVAR____TtC7Journal10MosaicCell_canvasAssetView];

          return v20;
        }

        v20 = v24;
        if (v24)
        {

          swift_bridgeObjectRelease();
          return v20;
        }
        v24 = 0;
LABEL_7:
        ++v8;
        if (v11 == v6) {
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_26:
      swift_bridgeObjectRetain();
      v6 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    v24 = 0;
LABEL_28:
    swift_bridgeObjectRelease();

LABEL_29:
  }
  return 0;
}

uint64_t sub_10037E0AC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100809F40);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100809F40);
  if (qword_1007F7D88 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EC98);
  v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10037E174()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(unsigned char **)(v0 + OBJC_IVAR____TtC7Journal14CanvasGridView_mosaicLayout);
  uint64_t v3 = OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry;
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry);
  if (!v4) {
    goto LABEL_11;
  }
  v5 = (unint64_t *)(v4 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  unint64_t v6 = *v5;
  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v7 == 1) {
      goto LABEL_4;
    }
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v11 != 1) {
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  uint64_t v12 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v12) {
    goto LABEL_10;
  }
LABEL_4:
  if ((v6 & 0xC000000000000001) != 0)
  {
    uint64_t v35 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    unint64_t v9 = *(char *)(v35 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type);
    swift_unknownObjectRelease();
    if (v9 < 0xA)
    {
LABEL_7:
      unsigned __int8 v10 = byte_1006E54A2[v9];
      goto LABEL_12;
    }
  }
  else
  {
    if (!*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    v8 = (char *)*(id *)(v6 + 32);
    swift_bridgeObjectRelease();
    unint64_t v9 = v8[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type];

    if (v9 < 0xA) {
      goto LABEL_7;
    }
  }
LABEL_11:
  unsigned __int8 v10 = 1;
LABEL_12:
  char v13 = v2[OBJC_IVAR____TtC7Journal12MosaicLayout_sizeType];
  v2[OBJC_IVAR____TtC7Journal12MosaicLayout_sizeType] = v10;
  if ((sub_10017CB6C(v10, v13) & 1) == 0) {
    [v2 invalidateLayout];
  }
  double v14 = 0.0;
  if (!*(void *)(v1 + v3)) {
    goto LABEL_17;
  }
  swift_retain();
  v15 = (void *)sub_100339674();
  if (v15)
  {
    sub_10033AA5C(v15);
    v17 = v16;
    swift_release();

LABEL_17:
    char v18 = 1;
    double v19 = 0.0;
    goto LABEL_18;
  }
  swift_release();
  uint64_t v34 = *(void *)(v1 + v3);
  if (!v34 || (*(unsigned char *)(v34 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showPhotoMemoryBanner) & 1) != 0) {
    goto LABEL_17;
  }
  char v18 = 0;
  double v14 = *(double *)(v1 + OBJC_IVAR____TtC7Journal14CanvasGridView_outerCornerRadius);
  double v19 = *(double *)(v1 + OBJC_IVAR____TtC7Journal14CanvasGridView_outerCornerRadius + 8);
LABEL_18:
  v20 = (double *)&v2[OBJC_IVAR____TtC7Journal12MosaicLayout_outerTopCornerRadius];
  double v21 = *(double *)&v2[OBJC_IVAR____TtC7Journal12MosaicLayout_outerTopCornerRadius];
  double v22 = *(double *)&v2[OBJC_IVAR____TtC7Journal12MosaicLayout_outerTopCornerRadius + 8];
  int v23 = v2[OBJC_IVAR____TtC7Journal12MosaicLayout_outerTopCornerRadius + 16];
  double *v20 = v14;
  v20[1] = v19;
  *((unsigned char *)v20 + 16) = v18;
  if (v18)
  {
    if (v23) {
      goto LABEL_27;
    }
  }
  else if ((v23 & 1) == 0 && v14 == v21 && v19 == v22)
  {
    goto LABEL_27;
  }
  [v2 invalidateLayout];
LABEL_27:
  double v25 = 0.0;
  if (*(void *)(v1 + v3) && (swift_retain(), char v26 = sub_10018B188(), swift_release(), (v26 & 1) == 0))
  {
    char v27 = 0;
    double v25 = *(double *)(v1 + OBJC_IVAR____TtC7Journal14CanvasGridView_outerCornerRadius);
    double v28 = *(double *)(v1 + OBJC_IVAR____TtC7Journal14CanvasGridView_outerCornerRadius + 8);
  }
  else
  {
    char v27 = 1;
    double v28 = 0.0;
  }
  v29 = (double *)&v2[OBJC_IVAR____TtC7Journal12MosaicLayout_outerBottomCornerRadius];
  double v30 = *(double *)&v2[OBJC_IVAR____TtC7Journal12MosaicLayout_outerBottomCornerRadius];
  double v31 = *(double *)&v2[OBJC_IVAR____TtC7Journal12MosaicLayout_outerBottomCornerRadius + 8];
  int v32 = v2[OBJC_IVAR____TtC7Journal12MosaicLayout_outerBottomCornerRadius + 16];
  double *v29 = v25;
  v29[1] = v28;
  *((unsigned char *)v29 + 16) = v27;
  if (v27)
  {
    if (v32) {
      return;
    }
    goto LABEL_39;
  }
  if ((v32 & 1) != 0 || (v25 == v30 ? (BOOL v33 = v28 == v31) : (BOOL v33 = 0), !v33)) {
LABEL_39:
  }
    [v2 invalidateLayout];
}

void sub_10037E484(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v4 - 8);
  v51 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v50 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  v54 = (char *)&v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  v49 = (char *)&v41 - v9;
  uint64_t v10 = sub_100010218(&qword_10080A0E0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218(&qword_10080A0E8);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = *(void *)(v1 + OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry);
  if (v17)
  {
    char v18 = (unint64_t *)(v17 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
    swift_beginAccess();
    unint64_t v19 = *v18;
    uint64_t v42 = OBJC_IVAR____TtC7Journal14CanvasGridView_gridDataSource;
    v20 = *(void **)(v2 + OBJC_IVAR____TtC7Journal14CanvasGridView_gridDataSource);
    if (v20)
    {
      swift_bridgeObjectRetain();
      id v21 = v20;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
        NSDiffableDataSourceSnapshot.deleteAllItems()();
        goto LABEL_7;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
      swift_bridgeObjectRetain();
    }
    sub_10001457C((uint64_t)v12, &qword_10080A0E0);
    sub_100385088();
    sub_100385B84((unint64_t *)&qword_100811270, (void (*)(uint64_t))&type metadata accessor for UUID);
    NSDiffableDataSourceSnapshot.init()();
LABEL_7:
    uint64_t v45 = v13;
    v43 = v16;
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v22 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
    }
    uint64_t v47 = v2;
    int v46 = a1;
    uint64_t v44 = v14;
    if (v22)
    {
      if (v22 < 1)
      {
        __break(1u);
        return;
      }
      uint64_t v23 = 0;
      unint64_t v52 = v19 & 0xC000000000000001;
      uint64_t v53 = v22;
      uint64_t v24 = (uint64_t)v51;
      double v25 = (void (**)(uint64_t, uint64_t, uint64_t))(v50 + 16);
      char v26 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56);
      char v27 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v50 + 48);
      double v28 = (void (**)(char *, uint64_t, uint64_t))(v50 + 32);
      v29 = (char *)_swiftEmptyArrayStorage;
      unint64_t v48 = v19;
      do
      {
        if (v52) {
          double v30 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          double v30 = (char *)*(id *)(v19 + 8 * v23 + 32);
        }
        double v31 = v30;
        (*v25)(v24, (uint64_t)&v30[OBJC_IVAR____TtCC7Journal10Journaling5Asset_id], v6);
        (*v26)(v24, 0, 1, v6);

        if ((*v27)(v24, 1, v6) == 1)
        {
          sub_10001457C(v24, &qword_100800950);
        }
        else
        {
          int v32 = *v28;
          BOOL v33 = v49;
          (*v28)(v49, v24, v6);
          v32(v54, (uint64_t)v33, v6);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v29 = (char *)sub_1002A55E4(0, *((void *)v29 + 2) + 1, 1, (unint64_t)v29);
          }
          unint64_t v35 = *((void *)v29 + 2);
          unint64_t v34 = *((void *)v29 + 3);
          if (v35 >= v34 >> 1) {
            v29 = (char *)sub_1002A55E4(v34 > 1, v35 + 1, 1, (unint64_t)v29);
          }
          *((void *)v29 + 2) = v35 + 1;
          v32(&v29[((*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80))+ *(void *)(v50 + 72) * v35], (uint64_t)v54, v6);
          uint64_t v24 = (uint64_t)v51;
          unint64_t v19 = v48;
        }
        ++v23;
      }
      while (v53 != v23);
    }
    else
    {
      v29 = (char *)_swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRelease_n();
    v55 = v29;
    sub_100010218(&qword_10080A100);
    sub_100014488((unint64_t *)&unk_10080A108, &qword_10080A100);
    sub_100385B84((unint64_t *)&qword_100811270, (void (*)(uint64_t))&type metadata accessor for UUID);
    Collection<>.uniqued()();
    swift_bridgeObjectRelease();
    uint64_t v36 = v45;
    v37 = v43;
    NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_100791C68);
    LOBYTE(v55) = 0;
    NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
    swift_bridgeObjectRelease();
    v38 = *(void **)(v47 + v42);
    if (v46)
    {
      uint64_t v39 = v44;
      if (v38)
      {
        id v40 = v38;
        dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)();
LABEL_29:
      }
    }
    else
    {
      uint64_t v39 = v44;
      if (v38)
      {
        id v40 = v38;
        dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
        goto LABEL_29;
      }
    }
    sub_10038032C();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v37, v36);
  }
}

void sub_10037EB80()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView);
  if (v1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v2 = v1;
    static UIView.Invalidating.subscript.setter();
  }
  uint64_t v3 = *(unsigned char **)(v0 + OBJC_IVAR____TtC7Journal14CanvasGridView_mosaicLayout);
  int v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal14CanvasGridView_isExpanded);
  int v5 = v3[OBJC_IVAR____TtC7Journal12MosaicLayout_isExpanded];
  v3[OBJC_IVAR____TtC7Journal12MosaicLayout_isExpanded] = v4;
  if (v4 != v5) {
    [v3 invalidateLayout];
  }
  sub_10037EC4C();
}

void sub_10037EC4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_10080A0E0);
  __chkstk_darwin(v2 - 8);
  int v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_10080A0E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry);
  if (v9)
  {
    uint64_t v10 = (unint64_t *)(v9 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
    swift_beginAccess();
    unint64_t v11 = *v10;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      if (_CocoaArrayWrapper.endIndex.getter() >= 6)
      {
LABEL_4:
        if ((v11 & 0xC000000000000001) != 0)
        {
          id v13 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (*(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) < 5uLL)
          {
            __break(1u);
            return;
          }
          id v13 = *(id *)(v11 + 64);
        }
        uint64_t v14 = v13;
        swift_bridgeObjectRelease();
        uint64_t v15 = OBJC_IVAR____TtC7Journal14CanvasGridView_gridDataSource;
        v16 = *(void **)(v1 + OBJC_IVAR____TtC7Journal14CanvasGridView_gridDataSource);
        if (v16)
        {
          id v17 = v16;
          dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

          (*(void (**)(char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) != 1)
          {
            (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
            sub_100010218((uint64_t *)&unk_10080A130);
            uint64_t v18 = type metadata accessor for UUID();
            uint64_t v19 = *(void *)(v18 - 8);
            v20 = v14;
            unint64_t v21 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
            uint64_t v22 = swift_allocObject();
            *(_OWORD *)(v22 + 16) = xmmword_1006D6280;
            unint64_t v23 = v22 + v21;
            uint64_t v24 = v20;
            (*(void (**)(unint64_t, uint64_t, uint64_t))(v19 + 16))(v23, (uint64_t)v20 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id, v18);
            NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v22);
            swift_bridgeObjectRelease();
            double v25 = *(void **)(v1 + v15);
            if (v25)
            {
              id v26 = v25;
              dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

              (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            }
            else
            {
              (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
            }
            return;
          }
        }
        else
        {
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
        }

        sub_10001457C((uint64_t)v4, &qword_10080A0E0);
        return;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v12 >= 6) {
        goto LABEL_4;
      }
    }
    swift_bridgeObjectRelease();
  }
}

void *sub_10037F024@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

id sub_10037F038(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC7Journal14CanvasGridView_indexBeforeCutoff] = 4;
  uint64_t v9 = &v4[OBJC_IVAR____TtC7Journal14CanvasGridView_audioRecorder];
  *(_OWORD *)uint64_t v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((void *)v9 + 4) = 0;
  uint64_t v10 = &v4[OBJC_IVAR____TtC7Journal14CanvasGridView_waveformProvider];
  *((void *)v10 + 4) = 0;
  *(_OWORD *)uint64_t v10 = 0u;
  *((_OWORD *)v10 + 1) = 0u;
  *(void *)&v4[OBJC_IVAR____TtC7Journal14CanvasGridView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_weakInit();
  swift_weakInit();
  *(void *)&v4[OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView] = 0;
  uint64_t v11 = OBJC_IVAR____TtC7Journal14CanvasGridView_mosaicLayout;
  id v12 = objc_allocWithZone((Class)type metadata accessor for MosaicLayout());
  id v13 = v4;
  *(void *)&v4[v11] = [v12 init];
  uint64_t v14 = &v13[OBJC_IVAR____TtC7Journal14CanvasGridView_saveAudioAndAssignFirstResponderToTextView];
  *(void *)uint64_t v14 = AudioRecordingActivityState.hash(into:);
  *((void *)v14 + 1) = 0;
  uint64_t v15 = &v13[OBJC_IVAR____TtC7Journal14CanvasGridView_didDeletePhoto];
  *(void *)uint64_t v15 = AudioRecordingActivityState.hash(into:);
  *((void *)v15 + 1) = 0;
  v13[OBJC_IVAR____TtC7Journal14CanvasGridView_shouldAnimateDifferences] = 0;
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)&v13[OBJC_IVAR____TtC7Journal14CanvasGridView_outerCornerRadius] = _Q0;
  *(void *)&v13[OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry] = 0;
  v13[OBJC_IVAR____TtC7Journal14CanvasGridView_isEditing] = 0;
  v13[OBJC_IVAR____TtC7Journal14CanvasGridView_isExpanded] = 0;
  *(void *)&v13[OBJC_IVAR____TtC7Journal14CanvasGridView_gridDataSource] = 0;
  v13[OBJC_IVAR____TtC7Journal14CanvasGridView_skipLayoutInvalidation] = 0;

  v27.receiver = v13;
  v27.super_class = (Class)type metadata accessor for CanvasGridView();
  id v21 = [super initWithFrame:a1, a2, a3, a4];
  id v22 = [v21 layer];
  [v22 setMasksToBounds:1];

  unint64_t v23 = self;
  id v24 = v21;
  id v25 = [v23 clearColor];
  [v24 setBackgroundColor:v25];

  sub_10037F298();
  return v24;
}

void sub_10037F298()
{
  uint64_t v1 = v0;
  [v0 bounds];
  id v6 = [objc_allocWithZone((Class)type metadata accessor for CanvasGridCollectionView()) initWithFrame:v0[OBJC_IVAR____TtC7Journal14CanvasGridView_mosaicLayout] collectionViewLayout:v2, v3, v4, v5];
  uint64_t v7 = OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView;
  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView];
  *(void *)&v1[OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView] = v6;

  uint64_t v9 = *(void **)&v1[v7];
  if (v9)
  {
    id v10 = v9;
    [v10 setDelegate:v1];
    id v11 = [v10 superview];

    if (!v11)
    {
      [v1 addSubview:v10];
      if (qword_1007F70D0 != -1) {
        swift_once();
      }
      double v12 = *(double *)&qword_10083D670;
      id v13 = [v10 superview];
      if (v13)
      {
        uint64_t v14 = v13;
        [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v15 = [v10 topAnchor];
        id v16 = [v14 topAnchor];
        id v17 = [v15 constraintEqualToAnchor:v16];

        [v17 setConstant:-v12];
        if (v17)
        {
          id v18 = v17;
          [v18 setActive:1];
        }
      }
      double v19 = *(double *)&qword_10083D670;
      id v20 = [v10 superview];
      if (v20)
      {
        id v21 = v20;
        [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v22 = [v10 leadingAnchor];
        id v23 = [v21 leadingAnchor];
        id v24 = [v22 constraintEqualToAnchor:v23];

        [v24 setConstant:-v19];
        if (v24)
        {
          id v25 = v24;
          [v25 setActive:1];
        }
      }
      double v26 = *(double *)&qword_10083D670;
      id v27 = [v10 superview];
      if (v27)
      {
        double v28 = v27;
        [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v29 = [v10 trailingAnchor];
        id v30 = [v28 trailingAnchor];
        id v31 = [v29 constraintEqualToAnchor:v30];

        [v31 setConstant:v26];
        if (v31)
        {
          id v32 = v31;
          [v32 setActive:1];
        }
      }

      [v10 setShowsHorizontalScrollIndicator:0];
      [v10 setShowsVerticalScrollIndicator:0];
      swift_getKeyPath();
      swift_getKeyPath();
      id v33 = v10;
      static UIView.Invalidating.subscript.setter();
      sub_100380104();
    }
    sub_10037E174();
  }
}

id sub_10037F730()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for CanvasGridView();
  return [super dealloc];
}

uint64_t sub_10037F920()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  double v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry);
  if (v5)
  {
    id v6 = (unint64_t *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
    swift_beginAccess();
    unint64_t v7 = *v6;
    if (v7 >> 62)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v10) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_retain();
      if (v8)
      {
LABEL_4:
        IndexPath.init(item:section:)();
        sub_10037FAAC((uint64_t)v4, 0);
        swift_release();
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
        return 1;
      }
    }
    swift_release();
  }
  return 0;
}

uint64_t sub_10037FAAC(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v49 = a1;
  uint64_t v48 = type metadata accessor for IndexPath();
  uint64_t v5 = *(void *)(v48 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v48);
  uint64_t v47 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v10 - 8);
  double v12 = (char *)v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for UUID();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (!result) {
    return result;
  }
  uint64_t v18 = result;
  uint64_t v45 = v6;
  id v46 = a2;
  double v19 = *(void **)(v3 + OBJC_IVAR____TtC7Journal14CanvasGridView_gridDataSource);
  if (!v19)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    goto LABEL_8;
  }
  id v20 = v19;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
LABEL_8:
    sub_10001457C((uint64_t)v12, &qword_100800950);
LABEL_10:
    double v28 = _swiftEmptyDictionarySingleton;
    goto LABEL_11;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  uint64_t v21 = *(void *)(v3 + OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry);
  if (!v21) {
    goto LABEL_9;
  }
  id v22 = (unint64_t *)(v21 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  uint64_t v23 = swift_beginAccess();
  v43[1] = v43;
  unint64_t v24 = *v22;
  __chkstk_darwin(v23);
  v43[-2] = v16;
  swift_bridgeObjectRetain();
  swift_retain();
  id v25 = sub_1000E93D8((uint64_t (*)(id *))sub_1003854D0, (uint64_t)&v43[-4], v24);
  swift_release();
  swift_bridgeObjectRelease();
  if (!v25)
  {
LABEL_9:
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    goto LABEL_10;
  }
  uint64_t v53 = _s5AssetCMa();
  *(void *)&long long v52 = v25;
  sub_10002102C(&v52, v51);
  id v26 = v25;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v50 = _swiftEmptyDictionarySingleton;
  sub_100599164(v51, 0xD00000000000001CLL, 0x800000010069A780, isUniquelyReferenced_nonNull_native);
  double v28 = v50;

  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
LABEL_11:
  id v29 = [self defaultCenter];
  if (qword_1007F6E90 != -1) {
    swift_once();
  }
  uint64_t v30 = qword_10083D418;
  sub_10037DA3C((uint64_t)v28);
  swift_bridgeObjectRelease();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v29 postNotificationName:v30 object:0 userInfo:isa];

  uint64_t v32 = *(void *)(v3 + OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry);
  if (v32)
  {
    uint64_t v33 = type metadata accessor for TaskPriority();
    unint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56);
    uint64_t v44 = v9;
    v34(v9, 1, 1, v33);
    unint64_t v35 = v47;
    uint64_t v36 = v48;
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v47, v49, v48);
    type metadata accessor for MainActor();
    id v37 = v46;
    id v38 = v46;
    swift_retain_n();
    swift_retain();
    uint64_t v39 = static MainActor.shared.getter();
    unint64_t v40 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v41 = (v45 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v42 = (char *)swift_allocObject();
    *((void *)v42 + 2) = v39;
    *((void *)v42 + 3) = &protocol witness table for MainActor;
    *((void *)v42 + 4) = v18;
    *((void *)v42 + 5) = v32;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v42[v40], v35, v36);
    *(void *)&v42[v41] = v37;
    sub_100328A8C((uint64_t)v44, (uint64_t)&unk_10080A148, (uint64_t)v42);
    swift_release();
    swift_release();
  }
  return swift_release();
}

uint64_t type metadata accessor for CanvasGridView()
{
  return self;
}

void sub_100380104()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_10080A208);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - v7;
  uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView);
  if (v9)
  {
    swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MosaicCell();
    type metadata accessor for UUID();
    id v10 = v9;
    UICollectionView.CellRegistration.init(handler:)();
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
    unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v12 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v12 + v11, v5, v2);
    id v13 = objc_allocWithZone((Class)sub_100010218((uint64_t *)&unk_10080A210));
    id v14 = v10;
    uint64_t v15 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
    id v16 = *(void **)(v1 + OBJC_IVAR____TtC7Journal14CanvasGridView_gridDataSource);
    *(void *)(v1 + OBJC_IVAR____TtC7Journal14CanvasGridView_gridDataSource) = v15;

    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  }
}

void sub_10038032C()
{
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView);
  if (!v6) {
    return;
  }
  id v52 = v6;
  id v7 = [v52 visibleCells];
  sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v50 = v2;
  uint64_t v51 = v0;
  uint64_t v48 = v5;
  uint64_t v49 = v3;
  if (v8 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v9) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v9)
    {
LABEL_4:
      if (v9 < 1)
      {
        __break(1u);
        goto LABEL_39;
      }
      uint64_t v10 = 0;
      v54 = (void *)0x8000000100688390;
      long long v53 = xmmword_1006D6280;
      do
      {
        if ((v8 & 0xC000000000000001) != 0) {
          id v11 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v11 = *(id *)(v8 + 8 * v10 + 32);
        }
        uint64_t v12 = v11;
        type metadata accessor for MosaicCell();
        uint64_t v13 = swift_dynamicCastClass();
        if (!v13) {
          goto LABEL_6;
        }
        uint64_t v14 = v13;
        uint64_t v15 = v13 + OBJC_IVAR____TtC7Journal10MosaicCell_overflowDetail;
        *(unsigned char *)(v13 + OBJC_IVAR____TtC7Journal10MosaicCell_overflowDetail) = 0;
        uint64_t v16 = OBJC_IVAR____TtC7Journal10MosaicCell_overflowView;
        uint64_t v17 = *(void **)(v13 + OBJC_IVAR____TtC7Journal10MosaicCell_overflowView);
        if (v17)
        {
          [v17 removeFromSuperview];
          uint64_t v18 = *(void **)(v14 + v16);
        }
        else
        {
          uint64_t v18 = 0;
        }
        *(void *)(v14 + v16) = 0;

        double v19 = *(void **)(v14 + v16);
        if (v19)
        {
          uint64_t v20 = *(void *)(v15 + 8);
          uint64_t v21 = self;
          id v22 = v19;
          id v23 = [v21 mainBundle];
          v56._object = v54;
          v24._countAndFlagsBits = 25637;
          v24._object = (void *)0xE200000000000000;
          v25._countAndFlagsBits = 0;
          v25._object = (void *)0xE000000000000000;
          v56._countAndFlagsBits = 0xD000000000000018;
          NSLocalizedString(_:tableName:bundle:value:comment:)(v24, (Swift::String_optional)0, (NSBundle)v23, v25, v56);

          sub_100010218((uint64_t *)&unk_100806070);
          uint64_t v26 = swift_allocObject();
          *(_OWORD *)(v26 + 16) = v53;
          *(void *)(v26 + 56) = &type metadata for Int;
          *(void *)(v26 + 64) = &protocol witness table for Int;
          *(void *)(v26 + 32) = v20;
          static String.localizedStringWithFormat(_:_:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v27 = *(void **)&v22[OBJC_IVAR____TtC7Journal23CanvasAssetOverflowView_overflowCountLabel];
          if (v27)
          {
            id v28 = v27;
            NSString v29 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
            [v28 setText:v29];
          }
          else
          {

            swift_bridgeObjectRelease();
          }
        }
        else
        {
LABEL_6:
        }
        ++v10;
      }
      while (v9 != v10);
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v9 = OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry;
  uint64_t v1 = v51;
  uint64_t v30 = *(void *)(v51 + OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry);
  if (v30)
  {
    uint64_t v5 = &OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets;
    id v31 = (void *)(v30 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
    swift_beginAccess();
    if (!(*v31 >> 62))
    {
      if (*(uint64_t *)((*v31 & 0xFFFFFFFFFFFFFF8) + 0x10) <= 5) {
        goto LABEL_36;
      }
      goto LABEL_23;
    }
LABEL_39:
    swift_bridgeObjectRetain();
    uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v45 <= 5) {
      goto LABEL_36;
    }
LABEL_23:
    uint64_t v32 = v48;
    IndexPath.init(row:section:)();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t *, uint64_t))(v49 + 8))(v32, v50);
    id v34 = [v52 cellForItemAtIndexPath:isa];

    if (v34)
    {
      type metadata accessor for MosaicCell();
      uint64_t v35 = swift_dynamicCastClass();
      if (!v35)
      {
LABEL_35:

        goto LABEL_36;
      }
      char v36 = *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal14CanvasGridView_isExpanded);
      uint64_t v37 = v1;
      uint64_t v38 = v35 + OBJC_IVAR____TtC7Journal10MosaicCell_overflowDetail;
      *(unsigned char *)(v35 + OBJC_IVAR____TtC7Journal10MosaicCell_overflowDetail) = (v36 & 1) == 0;
      sub_1004DD0F8();
      uint64_t v39 = *(void *)(v37 + v9);
      if (v39)
      {
        unint64_t v40 = (unint64_t *)(v39 + *v5);
        swift_beginAccess();
        unint64_t v41 = *v40;
        if (v41 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v46 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
          uint64_t v43 = v46 - 5;
          if (!__OFSUB__(v46, 5)) {
            goto LABEL_34;
          }
        }
        else
        {
          uint64_t v42 = *(void *)((v41 & 0xFFFFFFFFFFFFFF8) + 0x10);
          uint64_t v43 = v42 - 5;
          if (!__OFSUB__(v42, 5)) {
            goto LABEL_34;
          }
        }
        __break(1u);
        return;
      }
      uint64_t v43 = -5;
LABEL_34:
      *(void *)(v38 + 8) = v43 + 1;
      sub_1004DD0F8();
      goto LABEL_35;
    }
LABEL_36:

    return;
  }
  id v44 = v52;
}

void sub_1003808B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v11 = (unsigned char *)Strong;
    uint64_t v58 = OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry;
    uint64_t v12 = *(void *)(Strong + OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry);
    if (v12)
    {
      uint64_t v13 = (unint64_t *)(v12 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
      uint64_t v14 = swift_beginAccess();
      v57[1] = v57;
      v57[2] = a2;
      uint64_t v15 = v11;
      uint64_t v16 = a1;
      uint64_t v17 = v6;
      unint64_t v18 = *v13;
      __chkstk_darwin(v14);
      v57[-2] = a3;
      swift_bridgeObjectRetain();
      swift_retain();
      double v19 = sub_1000E93D8((uint64_t (*)(id *))sub_100386084, (uint64_t)&v57[-4], v18);
      swift_release();
      uint64_t v6 = v17;
      uint64_t v20 = v16;
      id v11 = v15;
      swift_bridgeObjectRelease();
      if (v19)
      {
        uint64_t v21 = v19;
        sub_1004DD034(v19);
        uint64_t v22 = IndexPath.row.getter();
        uint64_t v23 = v20 + OBJC_IVAR____TtC7Journal10MosaicCell_index;
        *(void *)uint64_t v23 = v22;
        *(unsigned char *)(v23 + 8) = 0;
        uint64_t v24 = OBJC_IVAR____TtC7Journal14CanvasGridView_isEditing;
        int v25 = v15[OBJC_IVAR____TtC7Journal14CanvasGridView_isEditing];
        int v26 = *(unsigned __int8 *)(v20 + OBJC_IVAR____TtC7Journal10MosaicCell_isEditing);
        *(unsigned char *)(v20 + OBJC_IVAR____TtC7Journal10MosaicCell_isEditing) = v25;
        if (v25 != v26)
        {
          if (v25)
          {
            sub_1004DDC48();
          }
          else
          {
            uint64_t v33 = OBJC_IVAR____TtC7Journal10MosaicCell_xPlatterView;
            id v34 = *(void **)(v20 + OBJC_IVAR____TtC7Journal10MosaicCell_xPlatterView);
            if (v34)
            {
              [v34 removeFromSuperview];
              uint64_t v35 = *(void **)(v20 + v33);
            }
            else
            {
              uint64_t v35 = 0;
            }
            *(void *)(v20 + v33) = 0;
          }
        }
        *(void *)(v20 + OBJC_IVAR____TtC7Journal10MosaicCell_delegate + 8) = &off_1007A7C18;
        swift_unknownObjectWeakAssign();
        if (IndexPath.row.getter() == 4)
        {
          uint64_t v36 = *(void *)&v15[v58];
          if (v36)
          {
            uint64_t v37 = (unint64_t *)(v36 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
            swift_beginAccess();
            unint64_t v38 = *v37;
            if (v38 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v45 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              if (v45 >= 6)
              {
LABEL_22:
                uint64_t v39 = v20 + OBJC_IVAR____TtC7Journal10MosaicCell_overflowDetail;
                *(unsigned char *)(v20 + OBJC_IVAR____TtC7Journal10MosaicCell_overflowDetail) = (v11[OBJC_IVAR____TtC7Journal14CanvasGridView_isExpanded] & 1) == 0;
                sub_1004DD0F8();
                uint64_t v40 = *(void *)&v11[v58];
                if (v40)
                {
                  unint64_t v41 = (unint64_t *)(v40 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
                  swift_beginAccess();
                  unint64_t v42 = *v41;
                  if (v42 >> 62)
                  {
                    swift_bridgeObjectRetain();
                    uint64_t v56 = _CocoaArrayWrapper.endIndex.getter();
                    swift_bridgeObjectRelease();
                    uint64_t v44 = v56 - 5;
                    if (!__OFSUB__(v56, 5)) {
                      goto LABEL_28;
                    }
                  }
                  else
                  {
                    uint64_t v43 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
                    uint64_t v44 = v43 - 5;
                    if (!__OFSUB__(v43, 5)) {
                      goto LABEL_28;
                    }
                  }
                  __break(1u);
                  return;
                }
                uint64_t v44 = -5;
LABEL_28:
                *(void *)(v39 + 8) = v44 + 1;
                goto LABEL_31;
              }
            }
            else if (*(uint64_t *)((v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 6)
            {
              goto LABEL_22;
            }
          }
        }
        *(unsigned char *)(v20 + OBJC_IVAR____TtC7Journal10MosaicCell_overflowDetail) = 0;
LABEL_31:
        sub_1004DD0F8();
        uint64_t v46 = OBJC_IVAR____TtCC7Journal10Journaling5Asset_type;
        if (sub_100041A58(v21[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type]) == 0x6C6F686563616C70
          && v47 == 0xEB00000000726564)
        {
          swift_bridgeObjectRelease();
        }
        else
        {
          char v49 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if ((v49 & 1) == 0) {
            goto LABEL_39;
          }
        }
        uint64_t v50 = (uint64_t)&v11[OBJC_IVAR____TtC7Journal14CanvasGridView_audioRecorder];
        swift_beginAccess();
        sub_10001B220(v50, (uint64_t)v60, &qword_100804048);
        uint64_t v51 = v20 + OBJC_IVAR____TtC7Journal10MosaicCell_audioRecorder;
        swift_beginAccess();
        sub_100385FB4((uint64_t)v60, v51);
        swift_endAccess();
        uint64_t v52 = (uint64_t)&v11[OBJC_IVAR____TtC7Journal14CanvasGridView_waveformProvider];
        swift_beginAccess();
        sub_10001B220(v52, (uint64_t)v60, (uint64_t *)&unk_100804050);
        uint64_t v53 = v20 + OBJC_IVAR____TtC7Journal10MosaicCell_waveformProvider;
        swift_beginAccess();
        sub_10038601C((uint64_t)v60, v53);
        swift_endAccess();
        sub_1004DD8DC();
        sub_10001457C((uint64_t)v60, (uint64_t *)&unk_100804050);
LABEL_39:
        char v54 = sub_100018AE4(v21[v46], (uint64_t)&off_100794B20);

        if (v54) {
          char v55 = v11[v24];
        }
        else {
          char v55 = 0;
        }

        *(unsigned char *)(v20 + OBJC_IVAR____TtC7Journal10MosaicCell_showResizeMenu) = v55;
        return;
      }
    }
  }
  if (qword_1007F6EB0 != -1) {
    swift_once();
  }
  uint64_t v27 = type metadata accessor for Logger();
  sub_100026A54(v27, (uint64_t)qword_100809F40);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a3, v6);
  id v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    v60[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 136315138;
    uint64_t v31 = UUID.uuidString.getter();
    uint64_t v59 = sub_10011EA98(v31, v32, v60);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    _os_log_impl((void *)&_mh_execute_header, v28, v29, "Unable to find asset with ID: %s", v30, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

uint64_t sub_100381028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v6, a3, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v6, 0, 1, v7);
  type metadata accessor for MosaicCell();
  uint64_t v9 = UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
  sub_10001457C((uint64_t)v6, &qword_100800950);
  return v9;
}

uint64_t sub_100381168(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[10] = a5;
  v6[11] = a6;
  v6[9] = a4;
  uint64_t v8 = type metadata accessor for DispatchWorkItemFlags();
  v6[12] = v8;
  v6[13] = *(void *)(v8 - 8);
  v6[14] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for DispatchQoS();
  v6[15] = v9;
  v6[16] = *(void *)(v9 - 8);
  v6[17] = swift_task_alloc();
  v6[18] = type metadata accessor for MainActor();
  v6[19] = static MainActor.shared.getter();
  uint64_t v10 = (void *)swift_task_alloc();
  v6[20] = v10;
  *uint64_t v10 = v6;
  v10[1] = sub_1003812E4;
  return sub_1000E99A4(a5);
}

uint64_t sub_1003812E4()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100381420, v1, v0);
}

uint64_t sub_100381420()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[14];
  uint64_t v14 = v0[16];
  uint64_t v15 = v0[15];
  uint64_t v3 = v0[12];
  uint64_t v13 = v0[13];
  uint64_t v4 = (void *)v0[10];
  uint64_t v5 = v0[9];
  swift_release();
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  uint64_t v12 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (void *)swift_allocObject();
  v7[2] = v6;
  v7[3] = v4;
  v7[4] = v5;
  v0[6] = sub_100385274;
  v0[7] = v7;
  v0[2] = _NSConcreteStackBlock;
  v0[3] = 1107296256;
  v0[4] = sub_10017D530;
  v0[5] = &unk_1007A7CB0;
  uint64_t v8 = _Block_copy(v0 + 2);
  swift_retain();
  id v9 = v4;
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v0[8] = _swiftEmptyArrayStorage;
  sub_100385B84((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v8);

  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v2, v3);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v15);
  swift_release();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

void sub_1003816B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100010218(&qword_10080A0E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v10 = Strong;
    uint64_t v11 = *(void **)&Strong[OBJC_IVAR____TtC7Journal14CanvasGridView_gridDataSource];
    if (v11)
    {
      uint64_t v24 = a3;
      id v12 = v11;
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();
      sub_100010218((uint64_t *)&unk_10080A130);
      uint64_t v13 = type metadata accessor for UUID();
      uint64_t v14 = *(void *)(v13 - 8);
      unint64_t v15 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
      uint64_t v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1006D6280;
      (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 16))(v16 + v15, a2 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id, v13);
      NSDiffableDataSourceSnapshot.deleteItems(_:)((Swift::OpaquePointer)v16);
      swift_bridgeObjectRelease();
      dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
      uint64_t v17 = &v10[OBJC_IVAR____TtC7Journal14CanvasGridView_delegate];
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v18 = *((void *)v17 + 1);
        double v19 = (unint64_t *)(v24 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
        swift_beginAccess();
        unint64_t v20 = *v19;
        if (v20 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        uint64_t ObjectType = swift_getObjectType();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 8))(v21, ObjectType, v18);
        swift_unknownObjectRelease();

        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
    }
    else
    {
    }
  }
}

uint64_t sub_1003819C0(uint64_t a1, uint64_t a2)
{
  uint64_t v93 = a2;
  uint64_t v4 = sub_100010218(&qword_10080A0E0);
  __chkstk_darwin(v4 - 8);
  v83 = (char *)v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_10080A0E8);
  uint64_t v84 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = type metadata accessor for IndexPath();
  uint64_t v86 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v85 = v9;
  v91 = (char *)v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v10 - 8);
  uint64_t v90 = (uint64_t)v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for IndexSet();
  uint64_t v87 = *(void *)(v12 - 8);
  uint64_t v13 = *(void *)(v87 + 64);
  __chkstk_darwin(v12);
  v89 = (char *)v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  v88 = (char *)v76 - v15;
  uint64_t v16 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)v76 - v20;
  uint64_t v22 = type metadata accessor for UUID();
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  __n128 v27 = __chkstk_darwin(v24);
  id v28 = *(void **)&v2[OBJC_IVAR____TtC7Journal14CanvasGridView_gridDataSource];
  if (!v28)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v23 + 56))(v21, 1, 1, v22, v27);
    return sub_10001457C((uint64_t)v21, &qword_100800950);
  }
  v80 = v26;
  uint64_t v81 = OBJC_IVAR____TtC7Journal14CanvasGridView_gridDataSource;
  v94 = (char *)v76 - v25;
  v78 = v8;
  uint64_t v79 = v12;
  v82 = v2;
  id v29 = v28;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v30(v21, 1, v22) == 1) {
    return sub_10001457C((uint64_t)v21, &qword_100800950);
  }
  uint64_t v31 = v22;
  v76[0] = v6;
  v76[1] = a1;
  unint64_t v32 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
  v32(v94, v21, v22);
  uint64_t v33 = *(void **)&v82[v81];
  uint64_t v34 = v23;
  if (!v33)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56))(v18, 1, 1, v22);
    goto LABEL_10;
  }
  id v35 = v33;
  uint64_t v77 = v22;
  id v36 = v35;
  uint64_t v37 = v93;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  uint64_t v31 = v77;
  if (v30(v18, 1, v77) == 1)
  {
LABEL_10:
    (*(void (**)(char *, uint64_t))(v23 + 8))(v94, v31);
    return sub_10001457C((uint64_t)v18, &qword_100800950);
  }
  unint64_t v38 = v80;
  v32(v80, v18, v31);
  sub_100385B84((unint64_t *)&unk_100805AC8, (void (*)(uint64_t))&type metadata accessor for IndexPath);
  uint64_t v39 = v92;
  if (dispatch thunk of static Equatable.== infix(_:_:)())
  {
    uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    v40((uint64_t)v38, v31);
    return ((uint64_t (*)(char *, uint64_t))v40)(v94, v31);
  }
  sub_100010218(&qword_1007FC110);
  uint64_t v42 = v37;
  uint64_t v43 = swift_allocObject();
  *(_OWORD *)(v43 + 16) = xmmword_1006D6280;
  *(void *)(v43 + 32) = IndexPath.item.getter();
  uint64_t v95 = v43;
  sub_100385B84(&qword_100802678, (void (*)(uint64_t))&type metadata accessor for IndexSet);
  sub_100010218(&qword_10080A1D0);
  sub_100014488(&qword_10080A1D8, &qword_10080A1D0);
  uint64_t v44 = v88;
  uint64_t v45 = v79;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  uint64_t v46 = v90;
  static TaskPriority.userInitiated.getter();
  uint64_t v47 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v46, 0, 1, v47);
  uint64_t v48 = v87;
  (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v89, v44, v45);
  uint64_t v49 = v86;
  (*(void (**)(char *, uint64_t, uint64_t))(v86 + 16))(v91, v42, v39);
  type metadata accessor for MainActor();
  uint64_t v50 = v82;
  uint64_t v51 = v82;
  uint64_t v52 = static MainActor.shared.getter();
  unint64_t v53 = (*(unsigned __int8 *)(v48 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v48 + 80);
  unint64_t v54 = (v13 + *(unsigned __int8 *)(v49 + 80) + v53) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80);
  char v55 = (char *)swift_allocObject();
  *((void *)v55 + 2) = v52;
  *((void *)v55 + 3) = &protocol witness table for MainActor;
  *((void *)v55 + 4) = v51;
  (*(void (**)(char *, char *, uint64_t))(v48 + 32))(&v55[v53], v89, v45);
  (*(void (**)(char *, char *, uint64_t))(v49 + 32))(&v55[v54], v91, v92);
  sub_100328C78(v90, (uint64_t)&unk_10080A1E8, (uint64_t)v55);
  swift_release();
  uint64_t v56 = *(void **)&v50[v81];
  if (!v56)
  {
    uint64_t v58 = (uint64_t)v83;
    (*(void (**)(char *, uint64_t, uint64_t, void))(v84 + 56))(v83, 1, 1, v76[0]);
    goto LABEL_16;
  }
  id v57 = v56;
  uint64_t v58 = (uint64_t)v83;
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  uint64_t v59 = v84;
  uint64_t v60 = v76[0];
  (*(void (**)(uint64_t, void, uint64_t, void))(v84 + 56))(v58, 0, 1, v76[0]);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v59 + 48))(v58, 1, v60) == 1)
  {
LABEL_16:
    (*(void (**)(char *, uint64_t))(v48 + 8))(v88, v79);
    v63 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
    uint64_t v64 = v77;
    v63((uint64_t)v80, v77);
    v63((uint64_t)v94, v64);
    return sub_10001457C(v58, &qword_10080A0E0);
  }
  v61 = v78;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v78, v58, v60);
  if (static IndexPath.> infix(_:_:)())
  {
    v62 = v94;
    NSDiffableDataSourceSnapshot.moveItem(_:beforeItem:)();
  }
  else
  {
    v62 = v94;
    NSDiffableDataSourceSnapshot.moveItem(_:afterItem:)();
  }
  sub_100010218((uint64_t *)&unk_10080A130);
  uint64_t v65 = *(void *)(v34 + 72);
  unint64_t v66 = (*(unsigned __int8 *)(v34 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v34 + 80);
  uint64_t v67 = swift_allocObject();
  *(_OWORD *)(v67 + 16) = xmmword_1006D6270;
  v68 = *(void (**)(unint64_t, char *, uint64_t))(v34 + 16);
  v69 = v62;
  uint64_t v70 = v77;
  v68(v67 + v66, v69, v77);
  v68(v67 + v66 + v65, v80, v70);
  NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v67);
  swift_bridgeObjectRelease();
  v71 = *(void **)&v82[v81];
  v72 = v61;
  if (v71)
  {
    id v73 = v71;
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
  }
  (*(void (**)(char *, uint64_t))(v59 + 8))(v72, v60);
  (*(void (**)(char *, uint64_t))(v87 + 8))(v88, v79);
  v74 = *(void (**)(uint64_t, uint64_t))(v34 + 8);
  uint64_t v75 = v77;
  v74((uint64_t)v80, v77);
  return ((uint64_t (*)(char *, uint64_t))v74)(v94, v75);
}

uint64_t sub_1003823E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  type metadata accessor for MainActor();
  v6[6] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[7] = v8;
  v6[8] = v7;
  return _swift_task_switch(sub_10038247C, v8, v7);
}

uint64_t sub_10038247C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 24) + OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry);
  *(void *)(v0 + 72) = v1;
  if (v1)
  {
    swift_retain();
    uint64_t v2 = IndexPath.item.getter();
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 80) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_100382590;
    uint64_t v4 = *(void *)(v0 + 32);
    return sub_1000EB9E4(v4, v2);
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 16) = *(void *)(v0 + 72) == 0;
    uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
    return v6();
  }
}

uint64_t sub_100382590()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_1003826D4, v3, v2);
}

uint64_t sub_1003826D4()
{
  swift_release();
  **(unsigned char **)(v0 + 16) = *(void *)(v0 + 72) == 0;
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100382A80(void *a1, void *a2)
{
  id v50 = a1;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FD5D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v51 = (char *)&v45 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v45 - v7;
  uint64_t v9 = type metadata accessor for IndexPath();
  uint64_t v10 = *(void **)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v45 - v14;
  *(void *)&double v17 = __chkstk_darwin(v16).n128_u64[0];
  uint64_t v19 = (char *)&v45 - v18;
  id v20 = [a2 items:v17];
  sub_100010218((uint64_t *)&unk_10080A1C0);
  unint64_t v21 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v21 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v44 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v44)
    {
LABEL_3:
      if ((v21 & 0xC000000000000001) != 0)
      {
        uint64_t v22 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (!*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          goto LABEL_29;
        }
        uint64_t v22 = *(void **)(v21 + 32);
        swift_unknownObjectRetain();
      }
      swift_bridgeObjectRelease();
      id v52 = v22;
      id v23 = [v22 sourceIndexPath];
      if (v23)
      {
        uint64_t v24 = v23;
        id v48 = a2;
        uint64_t v49 = v19;
        uint64_t v47 = v12;
        uint64_t v45 = v2;
        static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v25 = (void (*)(char *, char *, uint64_t))v10[4];
        v25(v8, v15, v9);
        int v26 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v10[7];
        v26(v8, 0, 1, v9);
        uint64_t v46 = v10;
        __n128 v27 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v10[6];
        if (v27((uint64_t)v8, 1, v9) != 1)
        {
          v25(v49, v8, v9);
          id v28 = [v48 destinationIndexPath];
          if (v28)
          {
            id v29 = v28;
            static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v30 = (uint64_t)v51;
            v25(v51, v15, v9);
            v26((char *)v30, 0, 1, v9);
            int v31 = v27(v30, 1, v9);
            unint64_t v32 = v46;
            if (v31 != 1)
            {
              uint64_t v33 = (uint64_t)v47;
              v25(v47, (char *)v30, v9);
              id v35 = v48;
              uint64_t v34 = (uint64_t)v49;
LABEL_16:
              id v38 = [v35 proposal];
              id v39 = [v38 operation];

              if (v39 == (id)3)
              {
                sub_1003819C0(v34, v33);
                id v40 = [v52 dragItem];
                Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
                id v42 = [v35 dropItem:v40 toItemAtIndexPath:isa];
                swift_unknownObjectRelease();
              }
              if (swift_weakLoadStrong())
              {
                sub_10023ED44();
                swift_unknownObjectRelease();
                swift_release();
              }
              else
              {
                swift_unknownObjectRelease();
              }
              uint64_t v43 = (void (*)(uint64_t, uint64_t))v32[1];
              v43(v33, v9);
              v43(v34, v9);
              return;
            }
          }
          else
          {
            uint64_t v30 = (uint64_t)v51;
            v26(v51, 1, 1, v9);
            unint64_t v32 = v46;
          }
          sub_10001457C(v30, (uint64_t *)&unk_1007FD5D0);
          id v36 = v50;
          uint64_t v37 = (char *)[v50 numberOfSections];
          uint64_t v33 = (uint64_t)v47;
          id v35 = v48;
          uint64_t v34 = (uint64_t)v49;
          if (!__OFSUB__(v37, 1))
          {
            [v36 numberOfItemsInSection:v37 - 1];
            IndexPath.init(row:section:)();
            goto LABEL_16;
          }
LABEL_29:
          __break(1u);
          return;
        }
      }
      else
      {
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v10[7])(v8, 1, 1, v9);
      }
      swift_unknownObjectRelease();
      sub_10001457C((uint64_t)v8, (uint64_t *)&unk_1007FD5D0);
      return;
    }
  }
  else if (*(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }

  swift_bridgeObjectRelease();
}

void sub_1003831F8(void *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = v2 + OBJC_IVAR____TtC7Journal14CanvasGridView_audioRecorder;
  swift_beginAccess();
  sub_10001B220(v6, (uint64_t)&v17, &qword_100804048);
  if (v18)
  {
    sub_10001B3BC(&v17, (uint64_t)v19);
    uint64_t v7 = v20;
    uint64_t v8 = v21;
    sub_10002E0BC(v19, v20);
    if ((*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8))
    {
      uint64_t v9 = *(void (**)(uint64_t))(v3
                                          + OBJC_IVAR____TtC7Journal14CanvasGridView_saveAudioAndAssignFirstResponderToTextView);
      uint64_t v10 = swift_retain();
      v9(v10);
      swift_release();
      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v19);
      return;
    }
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v19);
  }
  else
  {
    sub_10001457C((uint64_t)&v17, &qword_100804048);
  }
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v12 = [a1 cellForItemAtIndexPath:isa];

  if (v12)
  {
    type metadata accessor for MosaicCell();
    uint64_t v13 = swift_dynamicCastClass();
    if (v13)
    {
      uint64_t v14 = *(void **)(v13 + OBJC_IVAR____TtC7Journal10MosaicCell_canvasAssetView);
      id v15 = v12;
      id v16 = v14;
      sub_10037FAAC(a2, v14);
    }
    else
    {
    }
  }
}

unsigned char *storeEnumTagSinglePayload for CanvasGridView.Section(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x10038352CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CanvasGridView.Section()
{
  return &type metadata for CanvasGridView.Section;
}

unint64_t sub_100383568()
{
  unint64_t result = qword_10080A0C8;
  if (!qword_10080A0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080A0C8);
  }
  return result;
}

uint64_t sub_1003835BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a1;
  v6[3] = type metadata accessor for MainActor();
  v6[4] = static MainActor.shared.getter();
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_1007FA980 + dword_1007FA980);
  uint64_t v9 = (void *)swift_task_alloc();
  v6[5] = v9;
  *uint64_t v9 = v6;
  v9[1] = sub_10025EEE4;
  return v11(a5, a6);
}

void sub_10038369C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView);
  if (!v1) {
    return;
  }
  id v2 = v1;
  id v3 = [v2 visibleCells];
  sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_4;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5)
    {
LABEL_4:
      if (v5 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v5; ++i)
      {
        if ((v4 & 0xC000000000000001) != 0) {
          id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v7 = *(id *)(v4 + 8 * i + 32);
        }
        uint64_t v8 = v7;
        swift_getObjectType();
        uint64_t v9 = swift_conformsToProtocol2();
        if (v9) {
          uint64_t v10 = v9;
        }
        else {
          uint64_t v10 = 0;
        }
        if (v9) {
          uint64_t v11 = v8;
        }
        else {
          uint64_t v11 = 0;
        }
        if (v11)
        {
          uint64_t ObjectType = swift_getObjectType();
          (*(void (**)(uint64_t, uint64_t))(v10 + 24))(ObjectType, v10);
        }
      }
    }
  }

  swift_bridgeObjectRelease();
}

uint64_t sub_100383838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  v6[2] = a4;
  v6[5] = type metadata accessor for MainActor();
  v6[6] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v6[7] = v8;
  v6[8] = v7;
  return _swift_task_switch(sub_1003838D8, v8, v7);
}

uint64_t sub_1003838D8()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry;
  v0[9] = OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry;
  if (!*(void *)(v1 + v2) || (swift_retain(), id v3 = sub_100584E48(), v5 = v4, swift_release(), (v0[10] = v3) == 0))
  {
LABEL_5:
    uint64_t v16 = v0[4];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v14 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v16 + 64) + **(int **)(v16 + 64));
    uint64_t v8 = (void *)swift_task_alloc();
    v0[12] = v8;
    void *v8 = v0;
    v8[1] = sub_100383D9C;
    uint64_t v9 = v0[4];
    uint64_t v10 = ObjectType;
    uint64_t v11 = v14;
    return v11(v10, v9);
  }
  uint64_t v6 = swift_getObjectType();
  type metadata accessor for UUID();
  sub_100385B84((unint64_t *)&qword_1007FEB50, (void (*)(uint64_t))&type metadata accessor for UUID);
  if (dispatch thunk of static Equatable.== infix(_:_:)())
  {

    goto LABEL_5;
  }
  id v15 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v5 + 72) + **(int **)(v5 + 72));
  uint64_t v12 = (void *)swift_task_alloc();
  v0[11] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_100383B74;
  uint64_t v10 = v6;
  uint64_t v9 = v5;
  uint64_t v11 = v15;
  return v11(v10, v9);
}

uint64_t sub_100383B74()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_100383C94, v3, v2);
}

uint64_t sub_100383C94()
{
  uint64_t v6 = *(void *)(v0 + 32);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v6 + 64) + **(int **)(v6 + 64));
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100383D9C;
  uint64_t v3 = *(void *)(v0 + 32);
  return v5(ObjectType, v3);
}

uint64_t sub_100383D9C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_100383EBC, v3, v2);
}

uint64_t sub_100383EBC()
{
  uint64_t v1 = *(void *)(v0[2] + v0[9]);
  v0[13] = v1;
  if (v1)
  {
    swift_retain();
    v0[14] = static MainActor.shared.getter();
    uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100383FD0, v3, v2);
  }
  else
  {
    swift_release();
    if (*(void *)(v0[2] + v0[9]))
    {
      swift_retain();
      sub_1000E56EC();
      swift_release();
    }
    sub_10037E174();
    sub_10037E484(0);
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_100383FD0()
{
  swift_release();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v2 = v0[13];
  if (Strong)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t ObjectType = swift_getObjectType();
    Swift::Int v5 = sub_1000F678C((uint64_t)&off_100794B48);
    (*(void (**)(uint64_t, Swift::Int, uint64_t, uint64_t))(v3 + 8))(v2, v5, ObjectType, v3);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[8];
  return _swift_task_switch(sub_1003840B0, v6, v7);
}

uint64_t sub_1003840B0()
{
  swift_release();
  if (*(void *)(v0[2] + v0[9]))
  {
    swift_retain();
    sub_1000E56EC();
    swift_release();
  }
  sub_10037E174();
  sub_10037E484(0);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_100384148(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void **)(a1 + OBJC_IVAR____TtC7Journal10MosaicCell_journalAsset);
  if (v7)
  {
    id v8 = v7;
    sub_1004DCE5C();
    uint64_t v9 = *(void *)&v2[OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry];
    if (v9)
    {
      uint64_t v10 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
      type metadata accessor for MainActor();
      swift_retain_n();
      id v11 = v8;
      uint64_t v12 = v2;
      uint64_t v13 = static MainActor.shared.getter();
      uint64_t v14 = (void *)swift_allocObject();
      v14[2] = v13;
      v14[3] = &protocol witness table for MainActor;
      v14[4] = v9;
      v14[5] = v11;
      v14[6] = v12;
      sub_100328A60((uint64_t)v6, (uint64_t)&unk_10080A128, (uint64_t)v14);
      swift_release();
      swift_release();
    }
    id v15 = *(void (**)(uint64_t))&v2[OBJC_IVAR____TtC7Journal14CanvasGridView_didDeletePhoto];
    uint64_t v16 = swift_retain();
    v15(v16);

    swift_release();
  }
}

uint64_t sub_1003842F0(uint64_t *a1)
{
  uint64_t v2 = *a1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a1 = v2;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v2 = sub_1000F93C0(v2);
    *a1 = v2;
  }
  uint64_t v4 = *(void *)(v2 + 16);
  v6[0] = v2 + 32;
  v6[1] = v4;
  sub_10038436C(v6);
  return specialized ContiguousArray._endMutation()();
}

Swift::Int sub_10038436C(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = _minimumMergeRunLength(_:)(v3);
  if (result >= v3)
  {
    if ((v3 & 0x8000000000000000) == 0)
    {
      if ((unint64_t)v3 < 2) {
        return result;
      }
      uint64_t v9 = 0;
      uint64_t v10 = *a1;
      uint64_t v11 = 1;
      while (1)
      {
        uint64_t v12 = *(void *)(v10 + 8 * v11);
        uint64_t v13 = v9;
        do
        {
          if (*(unsigned char *)(v12 + OBJC_IVAR____TtC7Journal10MosaicCell_index + 8)) {
            break;
          }
          uint64_t v14 = *(void *)(v10 + 8 * v13);
          if ((*(unsigned char *)(v14 + OBJC_IVAR____TtC7Journal10MosaicCell_index + 8) & 1) != 0
            || *(void *)(v12 + OBJC_IVAR____TtC7Journal10MosaicCell_index) >= *(void *)(v14
                                                                                          + OBJC_IVAR____TtC7Journal10MosaicCell_index))
          {
            break;
          }
          if (!v10) {
            goto LABEL_211;
          }
          *(void *)(v10 + 8 * v13 + 8) = v14;
          *(void *)(v10 + 8 * v13--) = v12;
        }
        while (v13 != -1);
        ++v11;
        ++v9;
        if (v11 == v3) {
          return result;
        }
      }
    }
    goto LABEL_209;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_216;
  }
  v128 = a1;
  Swift::Int v129 = result;
  uint64_t v131 = v1;
  if (v3 < 2)
  {
    id v15 = (char *)_swiftEmptyArrayStorage;
    uint64_t v142 = (uint64_t)_swiftEmptyArrayStorage;
    id v8 = (char *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 32);
    if (v3 == 1) {
      goto LABEL_20;
    }
    unint64_t v20 = _swiftEmptyArrayStorage[2];
LABEL_172:
    if (v20 < 2)
    {
LABEL_183:
      swift_bridgeObjectRelease();
      *(void *)((v142 & 0xFFFFFFFFFFFFFF8) + 0x10) = 0;
      specialized Array._endMutation()();
      return swift_bridgeObjectRelease();
    }
    uint64_t v122 = *v128;
    while (1)
    {
      unint64_t v123 = v20 - 2;
      if (v20 < 2) {
        break;
      }
      if (!v122) {
        goto LABEL_214;
      }
      uint64_t v124 = *(void *)&v15[16 * v123 + 32];
      uint64_t v125 = *(void *)&v15[16 * v20 + 24];
      sub_100384DB8((char *)(v122 + 8 * v124), (char *)(v122 + 8 * *(void *)&v15[16 * v20 + 16]), v122 + 8 * v125, v8);
      if (v131) {
        goto LABEL_183;
      }
      if (v125 < v124) {
        goto LABEL_203;
      }
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v15 = sub_1000F1E40((uint64_t)v15);
      }
      if (v123 >= *((void *)v15 + 2)) {
        goto LABEL_204;
      }
      v126 = &v15[16 * v123 + 32];
      *(void *)v126 = v124;
      *((void *)v126 + 1) = v125;
      unint64_t v127 = *((void *)v15 + 2);
      if (v20 > v127) {
        goto LABEL_205;
      }
      memmove(&v15[16 * v20 + 16], &v15[16 * v20 + 32], 16 * (v127 - v20));
      *((void *)v15 + 2) = v127 - 1;
      unint64_t v20 = v127 - 1;
      if (v127 <= 2) {
        goto LABEL_183;
      }
    }
LABEL_202:
    __break(1u);
LABEL_203:
    __break(1u);
LABEL_204:
    __break(1u);
LABEL_205:
    __break(1u);
LABEL_206:
    __break(1u);
LABEL_207:
    __break(1u);
LABEL_208:
    __break(1u);
LABEL_209:
    __break(1u);
LABEL_210:
    __break(1u);
LABEL_211:
    __break(1u);
LABEL_212:
    __break(1u);
LABEL_213:
    __break(1u);
LABEL_214:
    __break(1u);
    goto LABEL_215;
  }
  uint64_t v6 = v5 >> 1;
  type metadata accessor for MosaicCell();
  uint64_t v7 = static Array._allocateBufferUninitialized(minimumCapacity:)();
  *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) = v6;
  id v8 = (char *)((v7 & 0xFFFFFFFFFFFFFF8) + 32);
  uint64_t v142 = v7;
LABEL_20:
  Swift::Int v16 = 0;
  uint64_t v17 = *a1;
  uint64_t v133 = v17 - 8;
  id v15 = (char *)_swiftEmptyArrayStorage;
  uint64_t v18 = &OBJC_IVAR____TtC7Journal10MosaicCell_index;
  Swift::Int v19 = v3;
  Swift::Int v130 = v3;
  __dst = v8;
  uint64_t v134 = v17;
LABEL_23:
  Swift::Int v21 = v16 + 1;
  if (v16 + 1 >= v19)
  {
LABEL_49:
    if (v21 < v19) {
      goto LABEL_50;
    }
    goto LABEL_67;
  }
  uint64_t v22 = *v18;
  uint64_t v23 = *(void *)(v17 + 8 * v21) + *v18;
  if (*(unsigned char *)(v23 + 8) & 1) != 0 || (uint64_t v24 = *(void *)(v17 + 8 * v16) + v22, (*(unsigned char *)(v24 + 8)))
  {
    Swift::Int v25 = v16 + 2;
    if (v16 + 2 >= v19) {
      goto LABEL_46;
    }
    BOOL v26 = 0;
    goto LABEL_29;
  }
  BOOL v26 = *(void *)v23 < *(void *)v24;
  Swift::Int v25 = v16 + 2;
  if (v16 + 2 < v19)
  {
LABEL_29:
    if (v19 <= v25 + 1) {
      Swift::Int v27 = v25 + 1;
    }
    else {
      Swift::Int v27 = v19;
    }
    do
    {
      uint64_t v28 = *(void *)(v17 + 8 * v25) + v22;
      if (*(unsigned char *)(v28 + 8) & 1) != 0 || (uint64_t v29 = *(void *)(v17 + 8 * v21) + v22, (*(unsigned char *)(v29 + 8)))
      {
        if (v26) {
          goto LABEL_38;
        }
      }
      else if (((v26 ^ (*(void *)v28 >= *(void *)v29)) & 1) == 0)
      {
        goto LABEL_37;
      }
      Swift::Int v21 = v25++;
    }
    while (v25 < v19);
    Swift::Int v25 = v27;
    Swift::Int v21 = v27;
    if (!v26) {
      goto LABEL_49;
    }
    goto LABEL_38;
  }
LABEL_37:
  Swift::Int v21 = v25;
  if (!v26) {
    goto LABEL_49;
  }
LABEL_38:
  if (v25 < v16) {
    goto LABEL_208;
  }
  if (v16 < v25)
  {
    uint64_t v30 = (uint64_t *)(v133 + 8 * v25);
    Swift::Int v31 = v25;
    Swift::Int v32 = v16;
    uint64_t v33 = (uint64_t *)(v17 + 8 * v16);
    do
    {
      if (v32 != --v31)
      {
        if (!v17) {
          goto LABEL_213;
        }
        uint64_t v34 = *v33;
        *uint64_t v33 = *v30;
        *uint64_t v30 = v34;
      }
      ++v32;
      --v30;
      ++v33;
    }
    while (v32 < v31);
  }
LABEL_46:
  Swift::Int v21 = v25;
  if (v25 < v19)
  {
LABEL_50:
    if (__OFSUB__(v21, v16)) {
      goto LABEL_201;
    }
    if (v21 - v16 < v129)
    {
      Swift::Int v35 = v16 + v129;
      if (__OFADD__(v16, v129)) {
        goto LABEL_206;
      }
      if (v35 >= v19) {
        Swift::Int v35 = v19;
      }
      if (v35 < v16) {
        goto LABEL_207;
      }
      if (v21 != v35)
      {
        id v36 = (uint64_t *)(v133 + 8 * v21);
        do
        {
          uint64_t v37 = *(void *)(v17 + 8 * v21);
          Swift::Int v38 = v16;
          id v39 = v36;
          do
          {
            uint64_t v40 = v37 + *v18;
            if (*(unsigned char *)(v40 + 8)) {
              break;
            }
            uint64_t v41 = *v39;
            uint64_t v42 = *v39 + *v18;
            if ((*(unsigned char *)(v42 + 8) & 1) != 0 || *(void *)v40 >= *(void *)v42) {
              break;
            }
            if (!v17) {
              goto LABEL_210;
            }
            *id v39 = v37;
            v39[1] = v41;
            --v39;
            ++v38;
          }
          while (v21 != v38);
          ++v21;
          ++v36;
        }
        while (v21 != v35);
        Swift::Int v21 = v35;
      }
    }
  }
LABEL_67:
  if (v21 < v16) {
    goto LABEL_200;
  }
  Swift::Int v132 = v21;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v15 = sub_1000F1750(0, *((void *)v15 + 2) + 1, 1, v15);
  }
  id v8 = __dst;
  unint64_t v44 = *((void *)v15 + 2);
  unint64_t v43 = *((void *)v15 + 3);
  unint64_t v20 = v44 + 1;
  if (v44 >= v43 >> 1)
  {
    id v8 = __dst;
    id v15 = sub_1000F1750((char *)(v43 > 1), v44 + 1, 1, v15);
  }
  *((void *)v15 + 2) = v20;
  uint64_t v45 = v15 + 32;
  uint64_t v46 = &v15[16 * v44 + 32];
  *(void *)uint64_t v46 = v16;
  *((void *)v46 + 1) = v132;
  if (!v44)
  {
    unint64_t v20 = 1;
    goto LABEL_22;
  }
  v135 = v15 + 32;
  v136 = v15;
  while (1)
  {
    unint64_t v47 = v20 - 1;
    if (v20 >= 4)
    {
      id v52 = &v45[16 * v20];
      uint64_t v53 = *((void *)v52 - 8);
      uint64_t v54 = *((void *)v52 - 7);
      BOOL v58 = __OFSUB__(v54, v53);
      uint64_t v55 = v54 - v53;
      if (v58) {
        goto LABEL_189;
      }
      uint64_t v57 = *((void *)v52 - 6);
      uint64_t v56 = *((void *)v52 - 5);
      BOOL v58 = __OFSUB__(v56, v57);
      uint64_t v50 = v56 - v57;
      char v51 = v58;
      if (v58) {
        goto LABEL_190;
      }
      unint64_t v59 = v20 - 2;
      uint64_t v60 = &v45[16 * v20 - 32];
      uint64_t v62 = *(void *)v60;
      uint64_t v61 = *((void *)v60 + 1);
      BOOL v58 = __OFSUB__(v61, v62);
      uint64_t v63 = v61 - v62;
      if (v58) {
        goto LABEL_192;
      }
      BOOL v58 = __OFADD__(v50, v63);
      uint64_t v64 = v50 + v63;
      if (v58) {
        goto LABEL_195;
      }
      if (v64 >= v55)
      {
        v82 = &v45[16 * v47];
        uint64_t v84 = *(void *)v82;
        uint64_t v83 = *((void *)v82 + 1);
        BOOL v58 = __OFSUB__(v83, v84);
        uint64_t v85 = v83 - v84;
        if (v58) {
          goto LABEL_199;
        }
        BOOL v75 = v50 < v85;
        goto LABEL_105;
      }
    }
    else
    {
      if (v20 != 3)
      {
        uint64_t v76 = *((void *)v15 + 4);
        uint64_t v77 = *((void *)v15 + 5);
        BOOL v58 = __OFSUB__(v77, v76);
        uint64_t v69 = v77 - v76;
        char v70 = v58;
        goto LABEL_99;
      }
      uint64_t v49 = *((void *)v15 + 4);
      uint64_t v48 = *((void *)v15 + 5);
      BOOL v58 = __OFSUB__(v48, v49);
      uint64_t v50 = v48 - v49;
      char v51 = v58;
    }
    if (v51) {
      goto LABEL_191;
    }
    unint64_t v59 = v20 - 2;
    uint64_t v65 = &v45[16 * v20 - 32];
    uint64_t v67 = *(void *)v65;
    uint64_t v66 = *((void *)v65 + 1);
    BOOL v68 = __OFSUB__(v66, v67);
    uint64_t v69 = v66 - v67;
    char v70 = v68;
    if (v68) {
      goto LABEL_194;
    }
    v71 = &v45[16 * v47];
    uint64_t v73 = *(void *)v71;
    uint64_t v72 = *((void *)v71 + 1);
    BOOL v58 = __OFSUB__(v72, v73);
    uint64_t v74 = v72 - v73;
    if (v58) {
      goto LABEL_197;
    }
    if (__OFADD__(v69, v74)) {
      goto LABEL_198;
    }
    if (v69 + v74 >= v50)
    {
      BOOL v75 = v50 < v74;
LABEL_105:
      if (v75) {
        unint64_t v47 = v59;
      }
      goto LABEL_107;
    }
LABEL_99:
    if (v70) {
      goto LABEL_193;
    }
    v78 = &v45[16 * v47];
    uint64_t v80 = *(void *)v78;
    uint64_t v79 = *((void *)v78 + 1);
    BOOL v58 = __OFSUB__(v79, v80);
    uint64_t v81 = v79 - v80;
    if (v58) {
      goto LABEL_196;
    }
    if (v81 < v69) {
      goto LABEL_22;
    }
LABEL_107:
    if (v47 - 1 >= v20)
    {
      __break(1u);
LABEL_186:
      __break(1u);
LABEL_187:
      __break(1u);
LABEL_188:
      __break(1u);
LABEL_189:
      __break(1u);
LABEL_190:
      __break(1u);
LABEL_191:
      __break(1u);
LABEL_192:
      __break(1u);
LABEL_193:
      __break(1u);
LABEL_194:
      __break(1u);
LABEL_195:
      __break(1u);
LABEL_196:
      __break(1u);
LABEL_197:
      __break(1u);
LABEL_198:
      __break(1u);
LABEL_199:
      __break(1u);
LABEL_200:
      __break(1u);
LABEL_201:
      __break(1u);
      goto LABEL_202;
    }
    if (!v17) {
      goto LABEL_212;
    }
    uint64_t v86 = v18;
    unint64_t v140 = v47 - 1;
    int64_t v141 = v47;
    v139 = &v45[16 * v47 - 16];
    uint64_t v87 = *(void *)v139;
    v88 = &v45[16 * v47];
    uint64_t v90 = *(void *)v88;
    uint64_t v89 = *((void *)v88 + 1);
    v138 = v88;
    v91 = (char *)(v17 + 8 * *(void *)v139);
    uint64_t v92 = (char *)(v17 + 8 * *(void *)v88);
    unint64_t v93 = v17 + 8 * v89;
    uint64_t v94 = v92 - v91;
    uint64_t v95 = v92 - v91 + 7;
    if (v92 - v91 >= 0) {
      uint64_t v95 = v92 - v91;
    }
    uint64_t v96 = v95 >> 3;
    uint64_t v97 = v93 - (void)v92;
    uint64_t v98 = v93 - (void)v92 + 7;
    if ((uint64_t)(v93 - (void)v92) >= 0) {
      uint64_t v98 = v93 - (void)v92;
    }
    uint64_t v99 = v98 >> 3;
    if (v96 >= v98 >> 3) {
      break;
    }
    if (v94 < -7) {
      goto LABEL_215;
    }
    if (v8 != v91 || v8 >= v92)
    {
      uint64_t v100 = v89;
      uint64_t v101 = *(void *)v139;
      memmove(v8, v91, 8 * v96);
      uint64_t v89 = v100;
      uint64_t v87 = v101;
      id v8 = __dst;
    }
    v102 = &v8[8 * v96];
    if (v90 >= v89 || v94 < 8)
    {
      v103 = v8;
      uint64_t v92 = v91;
      uint64_t v17 = v134;
      uint64_t v18 = v86;
      goto LABEL_160;
    }
    v103 = v8;
    uint64_t v18 = v86;
    do
    {
      uint64_t v104 = *(void *)v92;
      uint64_t v105 = *(void *)v92 + *v86;
      if ((*(unsigned char *)(v105 + 8) & 1) == 0)
      {
        uint64_t v106 = *(void *)v103 + *v86;
        if ((*(unsigned char *)(v106 + 8) & 1) == 0 && *(void *)v105 < *(void *)v106)
        {
          if (v91 == v92)
          {
            v92 += 8;
            goto LABEL_131;
          }
          v92 += 8;
          goto LABEL_130;
        }
      }
      if (v91 != v103 || v91 >= v103 + 8)
      {
        uint64_t v104 = *(void *)v103;
        v103 += 8;
LABEL_130:
        *(void *)v91 = v104;
        goto LABEL_131;
      }
      v103 += 8;
LABEL_131:
      v91 += 8;
    }
    while (v103 < v102 && (unint64_t)v92 < v93);
    uint64_t v92 = v91;
    uint64_t v17 = v134;
LABEL_160:
    uint64_t v116 = v102 - v103;
    uint64_t v117 = v102 - v103 + 7;
    if (v116 >= 0) {
      uint64_t v117 = v116;
    }
    if (v116 <= -8) {
      goto LABEL_215;
    }
    uint64_t v118 = v117 >> 3;
    if (v92 != v103 || v92 >= &v103[8 * v118])
    {
      uint64_t v119 = v89;
      uint64_t v120 = v87;
      memmove(v92, v103, 8 * v118);
      uint64_t v89 = v119;
      uint64_t v87 = v120;
    }
    if (v89 < v87) {
      goto LABEL_186;
    }
    id v15 = v136;
    if (v141 > *((void *)v136 + 2)) {
      goto LABEL_187;
    }
    *(void *)v139 = v87;
    uint64_t v45 = v135;
    *(void *)&v135[16 * v140 + 8] = v89;
    unint64_t v121 = *((void *)v136 + 2);
    if (v141 >= (uint64_t)v121) {
      goto LABEL_188;
    }
    unint64_t v20 = v121 - 1;
    memmove(v138, v138 + 16, 16 * (v121 - 1 - v141));
    *((void *)v136 + 2) = v121 - 1;
    id v8 = __dst;
    if (v121 <= 2)
    {
LABEL_22:
      Swift::Int v19 = v130;
      Swift::Int v16 = v132;
      if (v132 >= v130) {
        goto LABEL_172;
      }
      goto LABEL_23;
    }
  }
  if (v97 >= -7)
  {
    uint64_t v18 = v86;
    if ((unint64_t)v8 >= v93 || v8 != v92)
    {
      uint64_t v107 = v89;
      uint64_t v108 = *(void *)v139;
      memmove(v8, v92, 8 * v99);
      uint64_t v89 = v107;
      uint64_t v87 = v108;
      id v8 = __dst;
    }
    v102 = &v8[8 * v99];
    uint64_t v17 = v134;
    if (v87 >= v90 || v97 < 8)
    {
      v103 = v8;
      goto LABEL_160;
    }
    v109 = (char *)(v133 + 8 * v89);
    while (2)
    {
      v110 = v109 + 8;
      uint64_t v111 = *((void *)v102 - 1) + *v18;
      if ((*(unsigned char *)(v111 + 8) & 1) != 0
        || (v112 = v92 - 8, uint64_t v113 = *((void *)v92 - 1), v114 = v113 + *v18, (*(unsigned char *)(v114 + 8) & 1) != 0)
        || *(void *)v111 >= *(void *)v114)
      {
        uint64_t v113 = *((void *)v102 - 1);
        v112 = v92;
        if (v110 != v102)
        {
          v102 -= 8;
          goto LABEL_153;
        }
        BOOL v115 = v109 >= v102;
        v102 -= 8;
        if (v115) {
LABEL_153:
        }
          *(void *)v109 = v113;
      }
      else if (v110 != v92 || v109 >= v92)
      {
        goto LABEL_153;
      }
      if (v91 >= v112 || (v109 -= 8, uint64_t v92 = v112, v8 >= v102))
      {
        v103 = v8;
        uint64_t v92 = v112;
        goto LABEL_160;
      }
      continue;
    }
  }
LABEL_215:
  _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
LABEL_216:
  Swift::Int result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100384DB8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  Swift::Int v27 = __src;
  BOOL v26 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      uint64_t v18 = &v4[8 * v13];
      Swift::Int v25 = v18;
      Swift::Int v27 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        Swift::Int v19 = (char *)(a3 - 8);
        do
        {
          unint64_t v20 = v19 + 8;
          uint64_t v21 = *((void *)v18 - 1) + OBJC_IVAR____TtC7Journal10MosaicCell_index;
          if ((*(unsigned char *)(v21 + 8) & 1) != 0
            || (uint64_t v22 = v6 - 8,
                uint64_t v23 = *((void *)v6 - 1),
                (*(unsigned char *)(v23 + OBJC_IVAR____TtC7Journal10MosaicCell_index + 8) & 1) != 0)
            || *(void *)v21 >= *(void *)(v23 + OBJC_IVAR____TtC7Journal10MosaicCell_index))
          {
            Swift::Int v25 = v18 - 8;
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              *(void *)Swift::Int v19 = *((void *)v18 - 1);
            }
            uint64_t v22 = v6;
            v18 -= 8;
          }
          else
          {
            if (v20 != v6 || v19 >= v6) {
              *(void *)Swift::Int v19 = v23;
            }
            Swift::Int v27 = v6 - 8;
          }
          if (v22 <= v7) {
            break;
          }
          v19 -= 8;
          uint64_t v6 = v22;
        }
        while (v18 > v4);
      }
      goto LABEL_47;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    uint64_t v14 = &v4[8 * v10];
    Swift::Int v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        uint64_t v15 = *(void *)v6 + OBJC_IVAR____TtC7Journal10MosaicCell_index;
        if ((*(unsigned char *)(v15 + 8) & 1) != 0
          || (uint64_t v16 = *(void *)v4 + OBJC_IVAR____TtC7Journal10MosaicCell_index, (*(unsigned char *)(v16 + 8) & 1) != 0)
          || *(void *)v15 >= *(void *)v16)
        {
          if (v7 != v4 || v7 >= v4 + 8) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          BOOL v26 = v4 + 8;
          uint64_t v17 = v6;
          v4 += 8;
        }
        else
        {
          uint64_t v17 = v6 + 8;
          if (v7 < v6 || v7 >= v17 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v17;
      }
      while ((unint64_t)v17 < a3);
      Swift::Int v27 = v7;
    }
LABEL_47:
    sub_1000F1918(&v27, &v26, &v25);
    return 1;
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

unint64_t sub_100385088()
{
  unint64_t result = qword_10080A0F0;
  if (!qword_10080A0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080A0F0);
  }
  return result;
}

uint64_t sub_1003850DC()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10038512C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  int64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *int64_t v9 = v2;
  v9[1] = sub_100052588;
  return sub_100381168(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1003851F4()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10038522C()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

void sub_100385274()
{
  sub_1003816B8(v0[2], v0[3], v0[4]);
}

uint64_t sub_100385280(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100385290()
{
  return swift_release();
}

uint64_t sub_1003852A0()
{
  uint64_t v1 = type metadata accessor for IndexPath();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100385398(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for IndexPath() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_10002C194;
  return sub_1003835BC(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_1003854D0()
{
  return sub_1000EC3A8() & 1;
}

void sub_1003854F0()
{
  *(void *)&v0[OBJC_IVAR____TtC7Journal14CanvasGridView_indexBeforeCutoff] = 4;
  uint64_t v1 = &v0[OBJC_IVAR____TtC7Journal14CanvasGridView_audioRecorder];
  *(_OWORD *)uint64_t v1 = 0u;
  *((_OWORD *)v1 + 1) = 0u;
  *((void *)v1 + 4) = 0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC7Journal14CanvasGridView_waveformProvider];
  *((void *)v2 + 4) = 0;
  *(_OWORD *)uint64_t v2 = 0u;
  *((_OWORD *)v2 + 1) = 0u;
  *(void *)&v0[OBJC_IVAR____TtC7Journal14CanvasGridView_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_weakInit();
  swift_weakInit();
  *(void *)&v0[OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView] = 0;
  uint64_t v3 = OBJC_IVAR____TtC7Journal14CanvasGridView_mosaicLayout;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)type metadata accessor for MosaicLayout()) init];
  uint64_t v4 = &v0[OBJC_IVAR____TtC7Journal14CanvasGridView_saveAudioAndAssignFirstResponderToTextView];
  *uint64_t v4 = AudioRecordingActivityState.hash(into:);
  v4[1] = 0;
  uint64_t v5 = &v0[OBJC_IVAR____TtC7Journal14CanvasGridView_didDeletePhoto];
  void *v5 = AudioRecordingActivityState.hash(into:);
  v5[1] = 0;
  v0[OBJC_IVAR____TtC7Journal14CanvasGridView_shouldAnimateDifferences] = 0;
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)&v0[OBJC_IVAR____TtC7Journal14CanvasGridView_outerCornerRadius] = _Q0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry] = 0;
  v0[OBJC_IVAR____TtC7Journal14CanvasGridView_isEditing] = 0;
  v0[OBJC_IVAR____TtC7Journal14CanvasGridView_isExpanded] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal14CanvasGridView_gridDataSource] = 0;
  v0[OBJC_IVAR____TtC7Journal14CanvasGridView_skipLayoutInvalidation] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

double *sub_100385698()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (swift_weakLoadStrong())
  {
    sub_10023ED44();
    swift_release();
  }
  uint64_t v9 = IndexPath.item.getter();
  uint64_t v10 = v9;
  uint64_t v11 = OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry;
  uint64_t v12 = *(void *)(v1 + OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry);
  if (v12)
  {
    uint64_t v13 = (unint64_t *)(v12 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
    swift_beginAccess();
    unint64_t v14 = *v13;
    if (v14 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = *(void *)((v14 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v10 >= v15) {
      return _swiftEmptyArrayStorage;
    }
  }
  else if (v9 > -2)
  {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v16 = *(void **)(v1 + OBJC_IVAR____TtC7Journal14CanvasGridView_gridDataSource);
  if (!v16)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    goto LABEL_17;
  }
  id v17 = v16;
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
LABEL_17:
    sub_10001457C((uint64_t)v4, &qword_100800950);
    return _swiftEmptyArrayStorage;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  uint64_t v18 = *(void *)(v1 + v11);
  if (!v18) {
    goto LABEL_18;
  }
  Swift::Int v19 = (unint64_t *)(v18 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  uint64_t v20 = swift_beginAccess();
  unint64_t v21 = *v19;
  __chkstk_darwin(v20);
  v31[-2] = v8;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v22 = sub_1000E93D8((uint64_t (*)(id *))sub_100386084, (uint64_t)&v31[-4], v21);
  swift_release();
  swift_bridgeObjectRelease();
  if (!v22)
  {
LABEL_18:
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return _swiftEmptyArrayStorage;
  }
  id v23 = [objc_allocWithZone((Class)NSItemProvider) initWithObject:v22];
  id v24 = [objc_allocWithZone((Class)UIDragItem) initWithItemProvider:v23];
  [v24 setLocalObject:v22];
  uint64_t v25 = v1 + OBJC_IVAR____TtC7Journal14CanvasGridView_delegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v26 = *(void *)(v25 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v26 + 24))(ObjectType, v26);
    swift_unknownObjectRelease();
  }
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1006D6D00;
  *(void *)(v28 + 32) = v24;
  v31[0] = v28;
  specialized Array._endMutation()();
  uint64_t v29 = v31[0];

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return (double *)v29;
}

id sub_100385ABC(void *a1, id a2)
{
  id v3 = [a2 localDragSession];
  swift_unknownObjectRelease();
  if (v3)
  {
    unsigned int v4 = [a1 hasActiveDrag];
    id v5 = objc_allocWithZone((Class)UICollectionViewDropProposal);
    uint64_t v6 = "initWithDropOperation:intent:";
    if (v4) {
      uint64_t v7 = 3;
    }
    else {
      uint64_t v7 = 2;
    }
  }
  else
  {
    id v5 = objc_allocWithZone((Class)UICollectionViewDropProposal);
    uint64_t v6 = "initWithDropOperation:";
    uint64_t v7 = 1;
  }
  return [v5 v6:v7];
}

uint64_t sub_100385B84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100385BCC()
{
  uint64_t v1 = type metadata accessor for IndexSet();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = type metadata accessor for IndexPath();
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v3 + v4 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);

  return swift_deallocObject();
}

uint64_t sub_100385D2C(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(type metadata accessor for IndexSet() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  uint64_t v8 = *(unsigned __int8 *)(*(void *)(type metadata accessor for IndexPath() - 8) + 80);
  unint64_t v9 = v6 + v7 + v8;
  uint64_t v10 = v1[2];
  uint64_t v11 = v1[3];
  uint64_t v12 = v1[4];
  uint64_t v13 = (uint64_t)v1 + v6;
  uint64_t v14 = (uint64_t)v1 + (v9 & ~v8);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v15;
  void *v15 = v3;
  v15[1] = sub_100052588;
  return sub_1003823E0(a1, v10, v11, v12, v13, v14);
}

void sub_100385E8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t sub_100385E94()
{
  uint64_t v1 = sub_100010218(&qword_10080A208);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_100385F28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100010218(&qword_10080A208);

  return sub_100381028(a1, a2, a3);
}

uint64_t sub_100385FB4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100804048);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10038601C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100804050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_100386084()
{
  return sub_1003854D0() & 1;
}

uint64_t sub_1003860A0()
{
  swift_getObjectType();
  if (swift_conformsToProtocol2()) {
    uint64_t v1 = (uint64_t)v0;
  }
  else {
    uint64_t v1 = 0;
  }
  if (!v1)
  {
    id v3 = [v0 childViewControllers];
    sub_10038625C();
    unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v4 >> 62) {
      goto LABEL_24;
    }
    unint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5)
    {
LABEL_25:
      swift_bridgeObjectRelease();
      return 0;
    }
    while (1)
    {
      while (__OFSUB__(v5--, 1))
      {
        __break(1u);
LABEL_22:
        __break(1u);
LABEL_23:
        __break(1u);
LABEL_24:
        swift_bridgeObjectRetain();
        unint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        if (!v5) {
          goto LABEL_25;
        }
      }
      if ((v4 & 0xC000000000000001) != 0)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_17;
      }
      if ((v5 & 0x8000000000000000) != 0) {
        goto LABEL_22;
      }
      if (v5 >= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
        goto LABEL_23;
      }
      id v7 = *(id *)(v4 + 32 + 8 * v5);
LABEL_17:
      uint64_t v8 = v7;
      id v9 = [v7 viewIfLoaded];
      id v10 = [v9 window];

      if (v10)
      {
        uint64_t v1 = sub_1003860A0();

        if (v1)
        {
          swift_bridgeObjectRelease();
          return v1;
        }
      }
      else
      {
      }
      if (!v5) {
        goto LABEL_25;
      }
    }
  }
  id v2 = v0;
  return v1;
}

unint64_t sub_10038625C()
{
  unint64_t result = qword_1008068F0;
  if (!qword_1008068F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1008068F0);
  }
  return result;
}

id sub_10038629C()
{
  uint64_t v1 = sub_100010218(&qword_1007F9DD8);
  __chkstk_darwin(v1 - 8);
  id v3 = &v13.i8[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling20ThirdPartyMediaAsset_metadata))
  {
    swift_retain();
    sub_10003A8E4((uint64_t)v3);
    swift_release();
    uint64_t v4 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
    if ((*(unsigned int (**)(__int8 *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(v3, 1, v4))
    {
      sub_10001457C((uint64_t)v3, &qword_1007F9DD8);
    }
    else
    {
      unint64_t v5 = &v3[*(int *)(v4 + 44)];
      double v6 = *(double *)v5;
      unint64_t v7 = *((void *)v5 + 1);
      uint64_t v8 = *((void *)v5 + 2);
      char v9 = v5[32];
      sub_10001457C((uint64_t)v3, &qword_1007F9DD8);
      if ((v9 & 1) == 0)
      {
        *(void *)&long long v10 = v8;
        long long v14 = v10;
        int64x2_t v13 = vdupq_n_s64(v7);
        id v12 = objc_allocWithZone((Class)UIColor);
        return [v12 initWithRed:v6 green:*(double *)&v13.i64[1] blue:*(double *)&v14 alpha:1.0];
      }
    }
  }
  return 0;
}

char *sub_100386404(char a1, int a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, void *a12, uint64_t a13, void *a14, char a15)
{
  unint64_t v99 = a8;
  uint64_t v111 = a7;
  uint64_t v103 = a6;
  uint64_t v102 = a5;
  int v101 = a2;
  unint64_t v109 = a11;
  uint64_t v110 = a10;
  uint64_t v18 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v18);
  uint64_t v94 = (void (**)(char *, uint64_t))((char *)&v89 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v97 = sub_100010218(&qword_1007F9DC8);
  __chkstk_darwin(v97);
  uint64_t v98 = (char *)&v89 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v21 - 8);
  uint64_t v108 = (uint64_t)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v23 - 8);
  uint64_t v105 = (uint64_t)&v89 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  __chkstk_darwin(v100);
  uint64_t v26 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for UUID();
  uint64_t v28 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v30 = (char *)&v89 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v33 = (char *)&v89 - v32;
  UUID.init()();
  uint64_t v34 = (char *)objc_allocWithZone((Class)_s20ThirdPartyMediaAssetCMa(0));
  *(void *)&v34[OBJC_IVAR____TtCC7Journal10Journaling20ThirdPartyMediaAsset_metadata] = 0;
  (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v30, v33, v27);
  Swift::Int v35 = (char *)sub_1001817C4((uint64_t)v30, 17, a1);
  id v36 = *(void (**)(char *, uint64_t))(v28 + 8);
  uint64_t v90 = v33;
  uint64_t v92 = v27;
  uint64_t v91 = v28 + 8;
  uint64_t v89 = v36;
  v36(v33, v27);
  uint64_t v113 = a3;
  unint64_t v114 = a4;
  unint64_t v37 = v99;
  uint64_t v115 = v111;
  unint64_t v116 = v99;
  unint64_t v38 = v109;
  uint64_t v117 = v110;
  unint64_t v118 = v109;
  uint64_t v93 = v18;
  unint64_t v104 = a4;
  if (a4)
  {
    if ((a4 & 0x2000000000000000) != 0) {
      uint64_t v39 = HIBYTE(a4) & 0xF;
    }
    else {
      uint64_t v39 = a3 & 0xFFFFFFFFFFFFLL;
    }
    swift_bridgeObjectRetain();
    if (v39)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v40 = v35;
      swift_bridgeObjectRetain();
      uint64_t v41 = sub_1002A54A0(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v43 = *((void *)v41 + 2);
      unint64_t v42 = *((void *)v41 + 3);
      if (v43 >= v42 >> 1) {
        uint64_t v41 = sub_1002A54A0((char *)(v42 > 1), v43 + 1, 1, v41);
      }
      *((void *)v41 + 2) = v43 + 1;
      unint64_t v44 = &v41[16 * v43];
      unint64_t v45 = v104;
      *((void *)v44 + 4) = a3;
      *((void *)v44 + 5) = v45;
    }
    else
    {
      unint64_t v47 = v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v41 = (char *)_swiftEmptyArrayStorage;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v46 = v35;
    swift_bridgeObjectRetain();
    uint64_t v41 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v106 = a13;
  uint64_t v107 = a9;
  if (!v37) {
    goto LABEL_21;
  }
  uint64_t v48 = HIBYTE(v37) & 0xF;
  if ((v37 & 0x2000000000000000) == 0) {
    uint64_t v48 = v111 & 0xFFFFFFFFFFFFLL;
  }
  if (!v48)
  {
LABEL_21:
    uint64_t v52 = v110;
    if (!v38) {
      goto LABEL_30;
    }
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v41 = sub_1002A54A0(0, *((void *)v41 + 2) + 1, 1, v41);
  }
  unint64_t v50 = *((void *)v41 + 2);
  unint64_t v49 = *((void *)v41 + 3);
  if (v50 >= v49 >> 1) {
    uint64_t v41 = sub_1002A54A0((char *)(v49 > 1), v50 + 1, 1, v41);
  }
  *((void *)v41 + 2) = v50 + 1;
  char v51 = &v41[16 * v50];
  *((void *)v51 + 4) = v111;
  *((void *)v51 + 5) = v37;
  uint64_t v52 = v117;
  unint64_t v38 = v118;
  if (v118)
  {
LABEL_22:
    uint64_t v53 = HIBYTE(v38) & 0xF;
    if ((v38 & 0x2000000000000000) == 0) {
      uint64_t v53 = v52 & 0xFFFFFFFFFFFFLL;
    }
    if (v53)
    {
      *(void *)&long long v96 = a3;
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v41 = sub_1002A54A0(0, *((void *)v41 + 2) + 1, 1, v41);
      }
      unint64_t v55 = *((void *)v41 + 2);
      unint64_t v54 = *((void *)v41 + 3);
      if (v55 >= v54 >> 1) {
        uint64_t v41 = sub_1002A54A0((char *)(v54 > 1), v55 + 1, 1, v41);
      }
      *((void *)v41 + 2) = v55 + 1;
      uint64_t v56 = &v41[16 * v55];
      *((void *)v56 + 4) = v52;
      *((void *)v56 + 5) = v38;
      a3 = v96;
    }
  }
LABEL_30:
  sub_100010218(&qword_100803920);
  swift_arrayDestroy();
  v112 = v41;
  sub_100010218(&qword_100800A70);
  sub_1000245BC();
  BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  id v57 = objc_allocWithZone((Class)NSAttributedString);
  NSString v58 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v59 = [v57 initWithString:v58];

  uint64_t v60 = *(void **)&v35[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title];
  *(void *)&v35[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title] = v59;

  sub_10001B220(v107, v105, (uint64_t *)&unk_100800A60);
  sub_10001B220(v106, v108, (uint64_t *)&unk_1007FC470);
  uint64_t v61 = a14;
  if (a14)
  {
    id v62 = a14;
    *(double *)&long long v63 = sub_100256AF4();
    long long v96 = v63;
    long long v95 = v64;

    uint64_t v61 = a14;
  }
  else
  {
    long long v96 = 0u;
    long long v95 = 0u;
  }
  uint64_t v65 = (uint64_t)v98;
  uint64_t v66 = v61;
  *uint64_t v26 = v101;
  unint64_t v68 = v104;
  uint64_t v67 = v105;
  *((void *)v26 + 1) = a3;
  *((void *)v26 + 2) = v68;
  uint64_t v69 = v103;
  *((void *)v26 + 3) = v102;
  *((void *)v26 + 4) = v69;
  *((void *)v26 + 5) = v111;
  *((void *)v26 + 6) = v37;
  char v70 = (int *)v100;
  sub_10002C4EC(v67, (uint64_t)&v26[*(int *)(v100 + 32)], (uint64_t *)&unk_100800A60);
  v71 = &v26[v70[9]];
  uint64_t v72 = v108;
  unint64_t v73 = v109;
  *(void *)v71 = v110;
  *((void *)v71 + 1) = v73;
  sub_10002C4EC(v72, (uint64_t)&v26[v70[10]], (uint64_t *)&unk_1007FC470);
  uint64_t v74 = &v26[v70[11]];
  long long v75 = v95;
  *(_OWORD *)uint64_t v74 = v96;
  *((_OWORD *)v74 + 1) = v75;
  v74[32] = v61 == 0;
  v26[v70[12]] = a15;
  sub_100353044((uint64_t)v26, v65);
  swift_storeEnumTagMultiPayload();
  sub_100010218(&qword_10080A228);
  uint64_t v76 = swift_allocObject();
  uint64_t v77 = v76 + *(void *)(*(void *)v76 + 104);
  uint64_t v78 = sub_100010218(&qword_1007F9DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v78 - 8) + 56))(v77, 1, 1, v78);
  *(_OWORD *)(v76 + *(void *)(*(void *)v76 + 112)) = xmmword_1006D6A80;
  sub_10002C4EC(v65, v76 + *(void *)(*(void *)v76 + 120), &qword_1007F9DC8);
  *(void *)&v35[OBJC_IVAR____TtCC7Journal10Journaling20ThirdPartyMediaAsset_metadata] = v76;
  swift_release();
  if (a12)
  {
    uint64_t v79 = (uint64_t)v94;
    void *v94 = a12;
    swift_storeEnumTagMultiPayload();
    id v80 = a12;
    uint64_t v81 = v90;
    UUID.init()();
    uint64_t v82 = UUID.uuidString.getter();
    uint64_t v84 = v83;
    v89(v81, v92);
    type metadata accessor for AssetAttachment(0);
    uint64_t v85 = swift_allocObject();
    *(void *)(v85 + 16) = 0;
    sub_1000D5DA8(v79, v85 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType);
    uint64_t v86 = (uint64_t *)(v85 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID);
    *uint64_t v86 = v82;
    v86[1] = v84;
    uint64_t v87 = &v35[OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments];
    swift_beginAccess();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*(void *)v87 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v87 & 0xFFFFFFFFFFFFFF8)
                                                                                 + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  sub_10001457C(v106, (uint64_t *)&unk_1007FC470);
  sub_10001457C(v107, (uint64_t *)&unk_100800A60);
  sub_10021D0F0((uint64_t)v26);
  return v35;
}

uint64_t sub_100386E04(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, void *a7, uint64_t a8, void *a9, uint64_t a10, void *a11)
{
  _StringGuts.grow(_:)(41);
  swift_bridgeObjectRelease();
  strcpy((char *)v28, "<img src=\"../");
  HIWORD(v28[1]) = -4864;
  uint64_t v16 = (uint64_t *)(a3 + *(int *)(type metadata accessor for ExportOptions() + 36));
  uint64_t v17 = *v16;
  uint64_t v18 = (void *)v16[1];
  swift_bridgeObjectRetain();
  v19._countAndFlagsBits = v17;
  v19._object = v18;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 47;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  v21._countAndFlagsBits = a1;
  v21._object = a2;
  String.append(_:)(v21);
  v22._object = (void *)0x800000010069A7C0;
  v22._countAndFlagsBits = 0xD000000000000017;
  String.append(_:)(v22);
  v29._countAndFlagsBits = a4;
  v29._object = a5;
  uint64_t v23 = sub_1003882D0(v28[0], (void *)v28[1], v29, a6, a7, a8, a9, a10, a11);
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_100386F5C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_10080A230);
  sub_100026A54(v0, (uint64_t)qword_10080A230);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100387050(uint64_t a1)
{
  void (*v17)(long long *__return_ptr, uint64_t, uint64_t);
  id v18;
  void *v19;
  uint64_t v20;
  Swift::String v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  long long v34;
  uint64_t v35;
  long long v36;
  uint64_t v37;

  uint64_t v33 = a1;
  uint64_t v2 = type metadata accessor for URL.DirectoryHint();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  unint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for URL();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v12 = (char *)&v29 - v11;
  swift_getObjectType();
  uint64_t result = swift_conformsToProtocol2();
  if (result) {
    uint64_t v14 = result;
  }
  else {
    uint64_t v14 = 0;
  }
  if (result) {
    uint64_t v15 = v1;
  }
  else {
    uint64_t v15 = 0;
  }
  if (v15)
  {
    Swift::String v29 = v3;
    uint64_t v30 = v12;
    uint64_t v31 = v7;
    uint64_t v32 = v6;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v17 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v14 + 16);
    uint64_t v18 = v1;
    v17(&v34, ObjectType, v14);
    if (v35)
    {
      sub_1001874F4(&v34, &v36);
      sub_100478818((uint64_t)v9);
      Swift::String v19 = v18;
      *(void *)&uint64_t v34 = UUID.uuidString.getter();
      *((void *)&v34 + 1) = v20;
      v21._countAndFlagsBits = 0x6E6F736A2ELL;
      v21._object = (void *)0xE500000000000000;
      String.append(_:)(v21);
      Swift::String v22 = v29;
      (*(void (**)(char *, void, uint64_t))(v29 + 104))(v5, enum case for URL.DirectoryHint.inferFromPath(_:), v2);
      sub_100014344();
      uint64_t v23 = v30;
      URL.appending<A>(path:directoryHint:)();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v5, v2);
      swift_bridgeObjectRelease();
      uint64_t v24 = v32;
      uint64_t v25 = *(void (**)(char *, uint64_t))(v31 + 8);
      v25(v9, v32);
      sub_10002E0BC(&v36, v37);
      type metadata accessor for JSONEncoder();
      swift_allocObject();
      JSONEncoder.init()();
      uint64_t v26 = dispatch thunk of JSONEncoder.encode<A>(_:)();
      uint64_t v28 = v27;
      swift_release();
      Data.write(to:options:)();
      v25(v23, v24);
      sub_100040DD0(v26, v28);

      return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v36);
    }
    else
    {

      return sub_100388920((uint64_t)&v34);
    }
  }
  return result;
}

uint64_t sub_1003875DC(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  v2[4] = type metadata accessor for ExportOptions();
  v2[5] = swift_task_alloc();
  return _swift_task_switch(sub_100387670, 0, 0);
}

uint64_t sub_100387670()
{
  uint64_t v1 = *(void *)(v0 + 24);
  static Date.timeIntervalSinceReferenceDate.getter();
  *(void *)(v0 + 48) = v2;
  uint64_t v3 = sub_100388E08((uint64_t)&off_100791F80, (void (*)(void))sub_100388980, (uint64_t)&type metadata for Journaling.AssetType, (void (*)(char *, void))sub_10054C3AC);
  LOBYTE(v1) = sub_1005419E4(*(unsigned char *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type), v3);
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_10038801C(*(void **)(v0 + 24), *(double *)(v0 + 48));
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void, unint64_t))(v0 + 8);
    return v4(0, 0xE000000000000000);
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 16);
    int v7 = *(unsigned __int8 *)(v6 + *(int *)(*(void *)(v0 + 32) + 20));
    sub_100095A1C(v6, *(void *)(v0 + 40));
    uint64_t v8 = *(void *)(v0 + 40);
    if (v7)
    {
      sub_100095AE8(v8);
    }
    else
    {
      int v9 = *(unsigned __int8 *)(v8 + *(int *)(*(void *)(v0 + 32) + 24));
      sub_100095AE8(v8);
      if (v9) {
        sub_100387050(*(void *)(v0 + 16));
      }
    }
    uint64_t v10 = *(void **)(v0 + 24);
    swift_getObjectType();
    uint64_t v11 = swift_conformsToProtocol2();
    if (v11) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    if (v11) {
      int64x2_t v13 = v10;
    }
    else {
      int64x2_t v13 = 0;
    }
    if (v13)
    {
      uint64_t ObjectType = swift_getObjectType();
      Swift::String v20 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 + 8) + **(int **)(v12 + 8));
      id v15 = v10;
      uint64_t v16 = (void *)swift_task_alloc();
      *(void *)(v0 + 56) = v16;
      void *v16 = v0;
      v16[1] = sub_100387960;
      uint64_t v17 = *(void *)(v0 + 16);
      return v20(v17, ObjectType, v12);
    }
    else
    {
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 88) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_100387B9C;
      uint64_t v19 = *(void *)(v0 + 16);
      return sub_1005E885C(v19, 0, 0, 0, 0, 0, 0, 0);
    }
  }
}

uint64_t sub_100387960(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = (void *)*v3;
  v6[8] = v2;
  swift_task_dealloc();
  if (v2)
  {
    int v7 = (void *)swift_task_alloc();
    v6[15] = v7;
    *int v7 = v6;
    v7[1] = sub_100387D58;
    uint64_t v8 = v6[2];
    return sub_1005E885C(v8, 0, 0, 0, 0, 0, 0, 0);
  }
  else
  {
    v6[9] = a2;
    v6[10] = a1;
    return _swift_task_switch(sub_100387B0C, 0, 0);
  }
}

uint64_t sub_100387B0C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  sub_10038801C(*(void **)(v0 + 24), *(double *)(v0 + 48));
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v2, v1);
}

uint64_t sub_100387B9C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 96) = v2;
  swift_task_dealloc();
  if (v2)
  {
    int v7 = sub_100387FA8;
  }
  else
  {
    *(void *)(v6 + 104) = a2;
    *(void *)(v6 + 112) = a1;
    int v7 = sub_100387CD0;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100387CD0()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v0 + 112);
  sub_10038801C(*(void **)(v0 + 24), *(double *)(v0 + 48));
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v3(v2, v1);
}

uint64_t sub_100387D58(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 128) = v2;
  swift_task_dealloc();
  if (v2)
  {
    int v7 = sub_100387F24;
  }
  else
  {
    *(void *)(v6 + 136) = a2;
    *(void *)(v6 + 144) = a1;
    int v7 = sub_100387E8C;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100387E8C()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_errorRelease();

  uint64_t v2 = *(void *)(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 144);
  sub_10038801C(*(void **)(v0 + 24), *(double *)(v0 + 48));
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v4(v3, v2);
}

uint64_t sub_100387F24()
{
  uint64_t v1 = *(void **)(v0 + 24);
  swift_errorRelease();

  sub_10038801C(*(void **)(v0 + 24), *(double *)(v0 + 48));
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100387FA8()
{
  sub_10038801C(*(void **)(v0 + 24), *(double *)(v0 + 48));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10038801C(void *a1, double a2)
{
  if (qword_1007F6EB8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100026A54(v4, (uint64_t)qword_10080A230);
  id v14 = a1;
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412546;
    id v9 = v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v8 = v14;

    *(_WORD *)(v7 + 12) = 2080;
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1006D6280;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    *(void *)(v10 + 56) = &type metadata for Double;
    *(void *)(v10 + 64) = &protocol witness table for Double;
    *(CFAbsoluteTime *)(v10 + 32) = Current - a2;
    uint64_t v12 = String.init(format:_:)();
    sub_10011EA98(v12, v13, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%@.exportHTML executed in %ss", (uint8_t *)v7, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

uint64_t sub_1003882D0(uint64_t a1, void *a2, Swift::String a3, uint64_t a4, void *a5, uint64_t a6, void *a7, uint64_t a8, void *a9)
{
  v38._countAndFlagsBits = a1;
  v38._object = a2;
  if (a3._object)
  {
    String.append(_:)(a3);
    v13._countAndFlagsBits = 34;
    v13._object = (void *)0xE100000000000000;
    String.append(_:)(v13);
    uint64_t v15 = 0x223D656C797473;
    id v14 = (void *)0xE700000000000000;
  }
  else
  {
    uint64_t v15 = 0;
    id v14 = (void *)0xE000000000000000;
  }
  _StringGuts.grow(_:)(97);
  v16._countAndFlagsBits = 0x7669643C20202020;
  v16._object = (void *)0xED0000223D646920;
  String.append(_:)(v16);
  v17._countAndFlagsBits = UUID.uuidString.getter();
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  v18._object = (void *)0x800000010069A7E0;
  v18._countAndFlagsBits = 0xD00000000000001CLL;
  String.append(_:)(v18);
  v19._countAndFlagsBits = sub_100041A58(*(unsigned char *)(v9 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_type));
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 32;
  v20._object = (void *)0xE100000000000000;
  String.append(_:)(v20);
  if (a5) {
    uint64_t v21 = a4;
  }
  else {
    uint64_t v21 = 0;
  }
  if (a5) {
    Swift::String v22 = a5;
  }
  else {
    Swift::String v22 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v23._countAndFlagsBits = v21;
  v23._object = v22;
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  v24._countAndFlagsBits = 8226;
  v24._object = (void *)0xE200000000000000;
  String.append(_:)(v24);
  v25._countAndFlagsBits = v15;
  v25._object = v14;
  String.append(_:)(v25);
  swift_bridgeObjectRelease();
  v26._countAndFlagsBits = 0x2020202020200A3ELL;
  v26._object = (void *)0xEA00000000002020;
  String.append(_:)(v26);
  if (a7) {
    uint64_t v27 = a6;
  }
  else {
    uint64_t v27 = 0;
  }
  if (a7) {
    uint64_t v28 = a7;
  }
  else {
    uint64_t v28 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v29._countAndFlagsBits = v27;
  v29._object = v28;
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  v30._countAndFlagsBits = 0x202020202020200ALL;
  v30._object = (void *)0xE900000000000020;
  String.append(_:)(v30);
  String.append(_:)(v38);
  v31._countAndFlagsBits = 0x202020202020200ALL;
  v31._object = (void *)0xE900000000000020;
  String.append(_:)(v31);
  if (a9) {
    uint64_t v32 = a8;
  }
  else {
    uint64_t v32 = 0;
  }
  if (a9) {
    uint64_t v33 = a9;
  }
  else {
    uint64_t v33 = (void *)0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  v34._countAndFlagsBits = v32;
  v34._object = v33;
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  v35._countAndFlagsBits = 0x642F3C202020200ALL;
  v35._object = (void *)0xEB000000003E7669;
  String.append(_:)(v35);
  return 0;
}

uint64_t sub_100388570(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Calendar.Component();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v16 - v7;
  uint64_t v9 = *(void *)(a1 + 16);
  sub_100388A28(&qword_1007FDCA8, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v17 = result;
  if (v9)
  {
    Swift::String v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v12 = v13;
    uint64_t v14 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v15 = *(void *)(v11 + 56);
    do
    {
      v12(v5, v14, v2);
      sub_10054B284((uint64_t)v8, v5);
      (*(void (**)(char *, uint64_t))(v11 - 8))(v8, v2);
      v14 += v15;
      --v9;
    }
    while (v9);
    return v17;
  }
  return result;
}

uint64_t sub_10038870C(uint64_t a1)
{
  return sub_100388E08(a1, (void (*)(void))sub_100388A70, (uint64_t)&type metadata for InsightsDataManager.Option, (void (*)(char *, void))sub_10054B920);
}

uint64_t sub_100388740(unint64_t a1)
{
  return sub_100388C54(a1, (unint64_t *)&qword_100811410, (uint64_t)HKSampleType_ptr, &qword_10080A288, (void (*)(id *, uint64_t))sub_10054BC58);
}

uint64_t sub_100388770(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for CLLocationCoordinate2D(0);
  sub_100388A28(&qword_10080A260, type metadata accessor for CLLocationCoordinate2D);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v6 = result;
  if (v2)
  {
    uint64_t v4 = (double *)(a1 + 40);
    do
    {
      sub_10054BC74(&v5, *(v4 - 1), *v4);
      v4 += 2;
      --v2;
    }
    while (v2);
    return v6;
  }
  return result;
}

uint64_t sub_100388820(uint64_t a1)
{
  return sub_100388E08(a1, (void (*)(void))sub_1003889D4, (uint64_t)&type metadata for FilterOption, (void (*)(char *, void))sub_10054BD9C);
}

uint64_t sub_100388854(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_10054BEBC(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_1003888EC(uint64_t a1)
{
  return sub_100388E08(a1, (void (*)(void))sub_100388980, (uint64_t)&type metadata for Journaling.AssetType, (void (*)(char *, void))sub_10054C3AC);
}

uint64_t sub_100388920(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_10080A250);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100388980()
{
  unint64_t result = qword_10080A258;
  if (!qword_10080A258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080A258);
  }
  return result;
}

unint64_t sub_1003889D4()
{
  unint64_t result = qword_10080A268;
  if (!qword_10080A268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080A268);
  }
  return result;
}

uint64_t sub_100388A28(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100388A70()
{
  unint64_t result = qword_10080A270;
  if (!qword_10080A270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080A270);
  }
  return result;
}

uint64_t sub_100388AC4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_100010218(&qword_100803920);
  sub_100388FDC();
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_10054D0D4(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_100388B68(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for MKPointOfInterestCategory(0);
  sub_100388A28(&qword_1007F8B90, type metadata accessor for MKPointOfInterestCategory);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (void **)(a1 + 32);
    do
    {
      Swift::Int v5 = *v4++;
      sub_10054D2A0(&v6, v5);

      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_100388C24(unint64_t a1)
{
  return sub_100388C54(a1, (unint64_t *)&unk_10080F9A0, (uint64_t)CKRecordID_ptr, (unint64_t *)&qword_1007FD1F8, (void (*)(id *, uint64_t))sub_10054D4E8);
}

uint64_t sub_100388C54(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  sub_10001B284(0, a2);
  sub_10038909C(a4, a2);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v11) {
      return v17;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11) {
      return v17;
    }
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        uint64_t v13 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        a5(&v16, v13);
      }
    }
    else
    {
      uint64_t v14 = (void **)(a1 + 32);
      do
      {
        uint64_t v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_100388DD4(uint64_t a1)
{
  return sub_100388E08(a1, (void (*)(void))sub_100389048, (uint64_t)&_s6FieldsON, (void (*)(char *, void))sub_10054D7D0);
}

uint64_t sub_100388E08(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  a2();
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v11 = result;
  if (v6)
  {
    uint64_t v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v9 = *v8++;
      a4(&v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

uint64_t sub_100388E88(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  type metadata accessor for NLTag(0);
  sub_100388A28(&qword_1007F8B08, type metadata accessor for NLTag);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (void **)(a1 + 32);
    do
    {
      Swift::Int v5 = *v4++;
      sub_10054DE10(&v6, v5);

      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t sub_100388F44(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = Set.init(minimumCapacity:)();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_10054E03C(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

unint64_t sub_100388FDC()
{
  unint64_t result = qword_10080A278;
  if (!qword_10080A278)
  {
    sub_100014440(&qword_100803920);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080A278);
  }
  return result;
}

unint64_t sub_100389048()
{
  unint64_t result = qword_10080A280;
  if (!qword_10080A280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080A280);
  }
  return result;
}

uint64_t sub_10038909C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_10001B284(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1003890EC(double a1)
{
  id v3 = [v1 subviews];
  sub_1000108BC();
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v5) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v5) {
      goto LABEL_10;
    }
  }
  if (v5 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((v4 & 0xC000000000000001) != 0) {
      id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v7 = *(id *)(v4 + 8 * i + 32);
    }
    uint64_t v8 = v7;
    sub_1003890EC([v7 setAlpha:a1], a1);
  }
LABEL_10:

  swift_bridgeObjectRelease();
}

void sub_100389214()
{
}

void sub_100389234()
{
}

void sub_100389250(void (*a1)(id), double a2)
{
  id v5 = [v2 subviews];
  sub_1000108BC();
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v7) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      goto LABEL_10;
    }
  }
  if (v7 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v7; ++i)
  {
    if ((v6 & 0xC000000000000001) != 0) {
      id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v9 = *(id *)(v6 + 8 * i + 32);
    }
    char v10 = v9;
    a1([v9 setAlpha:a2]);
  }
LABEL_10:

  swift_bridgeObjectRelease();
}

void sub_100389384()
{
  [v0 alpha];
  if (v1 != 1.0)
  {
    [v0 setAlpha:1.0];
    id v2 = [v0 superview];
    if (v2)
    {
      id v3 = v2;
      sub_100389384();
    }
  }
}

uint64_t sub_100389424()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_10080A290);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_10080A290);
  if (qword_1007F7D20 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB60);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1003894EC(unint64_t a1)
{
  uint64_t v3 = v2;
  if (qword_1007F6EC0 != -1) {
    goto LABEL_22;
  }
  while (1)
  {
    uint64_t v5 = type metadata accessor for Logger();
    sub_100026A54(v5, (uint64_t)qword_10080A290);
    id v6 = v1;
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v7, v8))
    {
      id v9 = (uint8_t *)swift_slowAlloc();
      type = (void *)swift_slowAlloc();
      *(_DWORD *)id v9 = 136446210;
      id v33 = type;
      type metadata accessor for UUID();
      sub_10038D0B4((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v10 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v10, v11, (uint64_t *)&v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "%{public}s (resolve optimisticLockingConflicts)", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    id v12 = v6;
    swift_bridgeObjectRetain_n();
    id v13 = v12;
    uint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      id v33 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v16 = 136446466;
      type metadata accessor for UUID();
      sub_10038D0B4((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v17 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v17, v18, (uint64_t *)&v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v16 + 12) = 2080;
      sub_10038D074();
      swift_bridgeObjectRetain();
      uint64_t v19 = Array.description.getter();
      unint64_t v21 = v20;
      swift_bridgeObjectRelease();
      sub_10011EA98(v19, v21, (uint64_t *)&v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "%{public}s (resolve optimisticLockingConflicts) list: %s", (uint8_t *)v16, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (a1 >> 62) {
      break;
    }
    uint64_t v1 = *(void **)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v1) {
      goto LABEL_17;
    }
LABEL_10:
    uint64_t v22 = 4;
    while (1)
    {
      Swift::String v23 = (a1 & 0xC000000000000001) != 0
          ? (void *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(a1 + 8 * v22);
      Swift::String v24 = v23;
      Swift::String v25 = (void *)(v22 - 3);
      if (__OFADD__(v22 - 4, 1)) {
        break;
      }
      Swift::String v26 = v13;
      swift_bridgeObjectRetain();
      sub_100389E68(1, v24, v26, v26, a1);
      if (v3)
      {
        swift_bridgeObjectRelease();

        return;
      }

      ++v22;
      if (v25 == v1) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_22:
    swift_once();
  }
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)_CocoaArrayWrapper.endIndex.getter();
  if (v1) {
    goto LABEL_10;
  }
LABEL_17:
  swift_bridgeObjectRelease();
  sub_10038D074();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v33 = 0;
  v32.receiver = v13;
  v32.super_class = (Class)type metadata accessor for JurassicMergePolicy();
  unsigned __int8 v28 = objc_msgSendSuper2(&v32, "resolveOptimisticLockingVersionConflicts:error:", isa, &v33);

  if (v28)
  {
    id v29 = v33;
  }
  else
  {
    id v30 = v33;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
}

id sub_100389A7C(uint64_t a1, unint64_t a2, void *a3)
{
  if (qword_1007F6EC0 != -1) {
    swift_once();
  }
  uint64_t v6 = type metadata accessor for Logger();
  sub_100026A54(v6, (uint64_t)qword_10080A290);
  id v7 = a3;
  swift_bridgeObjectRetain_n();
  id v8 = v7;
  id v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v18 = a1;
    uint64_t v11 = swift_slowAlloc();
    id v20 = (id)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446466;
    type metadata accessor for UUID();
    sub_10038D0B4((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v12, v13, (uint64_t *)&v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_10011EA98(v18, a2, (uint64_t *)&v20);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s (resolve optimisticLockingConflicts) %s is nil", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_10038D074();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v20 = 0;
  v19.receiver = v8;
  v19.super_class = (Class)type metadata accessor for JurassicMergePolicy();
  unsigned int v15 = objc_msgSendSuper2(&v19, "resolveOptimisticLockingVersionConflicts:error:", isa, &v20);

  if (v15) {
    return v20;
  }
  id v17 = v20;
  _convertNSErrorToError(_:)();

  return (id)swift_willThrow();
}

void sub_100389E68(int a1, void *a2, unsigned char *a3, void *a4, uint64_t a5)
{
  uint64_t v301 = a5;
  v302 = a4;
  v304 = a2;
  LODWORD(v299) = a1;
  uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v7 - 8);
  v288 = (char *)v272 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  v287 = (char *)v272 - v10;
  __chkstk_darwin(v11);
  v289 = (char *)v272 - v12;
  __chkstk_darwin(v13);
  v297 = (char *)v272 - v14;
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v300 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  v284 = (char *)v272 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  objc_super v19 = (char *)v272 - v18;
  __chkstk_darwin(v20);
  v285 = (char *)v272 - v21;
  __chkstk_darwin(v22);
  v286 = (char *)v272 - v23;
  __chkstk_darwin(v24);
  Swift::String v26 = (char *)v272 - v25;
  __chkstk_darwin(v27);
  v291 = (char *)v272 - v28;
  __chkstk_darwin(v29);
  v294 = (char *)v272 - v30;
  __chkstk_darwin(v31);
  v295 = (char *)v272 - v32;
  BOOL v33 = a3[OBJC_IVAR____TtC7Journal19JurassicMergePolicy_mode] == 0;
  uint64_t v34 = 0x4552203A45444F4DLL;
  if (a3[OBJC_IVAR____TtC7Journal19JurassicMergePolicy_mode]) {
    uint64_t v34 = 0x4F4C203A45444F4DLL;
  }
  unint64_t v296 = v34;
  if (v33) {
    unint64_t v35 = 0xEC00000045544F4DLL;
  }
  else {
    unint64_t v35 = 0xEB000000004C4143;
  }
  if (qword_1007F6EC0 != -1) {
    swift_once();
  }
  uint64_t v36 = type metadata accessor for Logger();
  uint64_t v37 = sub_100026A54(v36, (uint64_t)qword_10080A290);
  Swift::String v38 = a3;
  swift_bridgeObjectRetain();
  v305 = (char *)v37;
  uint64_t v39 = Logger.logObject.getter();
  os_log_type_t v40 = static os_log_type_t.default.getter();
  BOOL v41 = os_log_type_enabled(v39, v40);
  uint64_t v303 = v15;
  uint64_t v298 = v5;
  v283 = v19;
  id v290 = v26;
  if (v41)
  {
    uint64_t v42 = swift_slowAlloc();
    *(void *)&long long v308 = swift_slowAlloc();
    *(_DWORD *)uint64_t v42 = 136446466;
    type metadata accessor for UUID();
    sub_10038D0B4((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v43 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v310 = sub_10011EA98(v43, v44, (uint64_t *)&v308);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v42 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v310 = sub_10011EA98(v296, v35, (uint64_t *)&v308);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v39, v40, "%{public}s (resolve optimisticLockingConflicts) currentMode:%s", (uint8_t *)v42, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  if (v299) {
    unint64_t v45 = 0xD000000000000023;
  }
  else {
    unint64_t v45 = 0xD000000000000017;
  }
  if (v299) {
    unint64_t v46 = 0x800000010069A8B0;
  }
  else {
    unint64_t v46 = 0x800000010069A870;
  }
  unint64_t v47 = v38;
  swift_bridgeObjectRetain_n();
  uint64_t v48 = v47;
  unint64_t v49 = Logger.logObject.getter();
  os_log_type_t v50 = static os_log_type_t.default.getter();
  BOOL v51 = os_log_type_enabled(v49, v50);
  unint64_t v296 = v45;
  if (v51)
  {
    uint64_t v52 = swift_slowAlloc();
    *(void *)&long long v308 = swift_slowAlloc();
    *(_DWORD *)uint64_t v52 = 136446466;
    type metadata accessor for UUID();
    sub_10038D0B4((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v53 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v310 = sub_10011EA98(v53, v54, (uint64_t *)&v308);
    uint64_t v55 = v296;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v310 = sub_10011EA98(v55, v46, (uint64_t *)&v308);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v49, v50, "%{public}s (resolve optimisticLockingConflicts) mergeMergeableStrings with %s", (uint8_t *)v52, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  id v56 = [v304 sourceObject];
  type metadata accessor for JournalEntryMO();
  uint64_t v57 = swift_dynamicCastClass();
  if (!v57)
  {
    swift_bridgeObjectRelease();

    uint64_t v72 = v302;
    uint64_t v73 = v298;
    sub_100389A7C(0x624F656372756F73, 0xEE00454A7463656ALL, v302);
    if (v73)
    {
      swift_bridgeObjectRelease();

      return;
    }

    goto LABEL_86;
  }
  NSString v58 = (void *)v57;
  unint64_t v293 = v46;
  id v59 = v48;
  id v60 = v56;
  uint64_t v61 = v59;
  id v62 = v60;
  long long v63 = Logger.logObject.getter();
  os_log_type_t v64 = static os_log_type_t.default.getter();
  BOOL v65 = os_log_type_enabled(v63, v64);
  id v292 = v62;
  id v282 = v61;
  if (v65)
  {
    uint64_t v66 = swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    uint64_t v299 = (uint64_t)v58;
    unint64_t v68 = (void *)v67;
    v281 = (unsigned int (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
    *(void *)&long long v308 = v281;
    *(_DWORD *)uint64_t v66 = 136446466;
    type metadata accessor for UUID();
    sub_10038D0B4((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v69 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v310 = sub_10011EA98(v69, v70, (uint64_t *)&v308);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v66 + 12) = 2112;
    uint64_t v310 = v299;
    id v71 = v62;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v68 = v299;

    _os_log_impl((void *)&_mh_execute_header, v63, v64, "%{public}s (resolve optimisticLockingConflicts) sourceObjectJE: %@", (uint8_t *)v66, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    NSString v58 = (void *)v299;
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v74 = v303;
  uint64_t v75 = v300;
  id v76 = v297;
  id v77 = [v58 updatedDate];
  uint64_t v78 = v302;
  if (!v77)
  {
    (*(void (**)(id, uint64_t, uint64_t, uint64_t))(v75 + 56))(v76, 1, 1, v74);
    goto LABEL_31;
  }
  uint64_t v79 = v77;
  id v80 = v294;
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v81 = *(void (**)(id, char *, uint64_t))(v75 + 32);
  v81(v76, v80, v74);
  uint64_t v82 = *(void (**)(id, void, uint64_t, uint64_t))(v75 + 56);
  v82(v76, 0, 1, v74);
  uint64_t v83 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v75 + 48);
  v294 = (char *)(v75 + 48);
  v281 = v83;
  if (v83((char *)v76, 1, v74) == 1)
  {
LABEL_31:
    swift_bridgeObjectRelease();
    sub_10001457C((uint64_t)v76, (uint64_t *)&unk_1007FC470);
    uint64_t v102 = v298;
    sub_100389A7C(0xD000000000000017, 0x800000010069A890, v78);
    if (v102)
    {
      swift_bridgeObjectRelease();

      return;
    }

    goto LABEL_86;
  }
  v279 = (void (*)(uint64_t, void, uint64_t, uint64_t))v82;
  uint64_t v280 = v75 + 56;
  uint64_t v84 = v295;
  v81(v295, (char *)v76, v74);
  uint64_t v85 = *(void (**)(char *, id, uint64_t))(v75 + 16);
  uint64_t v86 = v291;
  uint64_t v276 = v75 + 16;
  v275 = v85;
  v85(v291, v84, v74);
  uint64_t v87 = (char *)v282;
  v88 = Logger.logObject.getter();
  os_log_type_t v89 = static os_log_type_t.default.getter();
  LODWORD(v282) = v89;
  BOOL v90 = os_log_type_enabled(v88, v89);
  uint64_t v299 = (uint64_t)v58;
  uint64_t v278 = v75 + 32;
  v277 = (void (*)(id, uint64_t, uint64_t))v81;
  v297 = v87;
  if (v90)
  {
    uint64_t v91 = swift_slowAlloc();
    *(void *)&long long v308 = swift_slowAlloc();
    *(_DWORD *)uint64_t v91 = 136446466;
    os_log_t v274 = v88;
    type metadata accessor for UUID();
    sub_10038D0B4((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v92 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v310 = sub_10011EA98(v92, v93, (uint64_t *)&v308);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v91 + 12) = 2080;
    id v94 = [objc_allocWithZone((Class)NSDateFormatter) init];
    NSString v95 = String._bridgeToObjectiveC()();
    [v94 setDateFormat:v95];

    Class isa = Date._bridgeToObjectiveC()().super.isa;
    id v97 = [v94 stringFromDate:isa];

    uint64_t v98 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v100 = v99;

    uint64_t v101 = v303;
    uint64_t v310 = sub_10011EA98(v98, v100, (uint64_t *)&v308);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    v291 = *(char **)(v300 + 8);
    ((void (*)(char *, uint64_t))v291)(v86, v101);
    v88 = v274;
    _os_log_impl((void *)&_mh_execute_header, v274, (os_log_type_t)v282, "%{public}s (resolve optimisticLockingConflicts) sourceObjectUpdatedDate.stringWithMS: %s", (uint8_t *)v91, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    NSString v58 = (void *)v299;
    swift_slowDealloc();
  }
  else
  {

    v291 = *(char **)(v75 + 8);
    ((void (*)(char *, uint64_t))v291)(v86, v74);
  }

  id v103 = [v58 text];
  if (v103)
  {
    unint64_t v104 = v103;
    uint64_t v105 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v107 = v106;
  }
  else
  {
    uint64_t v105 = 0;
    unint64_t v107 = 0xF000000000000000;
  }
  id v108 = v297;
  uint64_t v310 = v105;
  unint64_t v311 = v107;
  id v109 = [v304 cachedSnapshot];
  if (v109)
  {
    uint64_t v110 = v109;
    uint64_t v111 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v112 = v108;
    swift_bridgeObjectRetain_n();
    uint64_t v113 = (char *)v112;
    unint64_t v114 = Logger.logObject.getter();
    os_log_type_t v115 = static os_log_type_t.default.getter();
    BOOL v116 = os_log_type_enabled(v114, v115);
    v297 = v113;
    if (v116)
    {
      uint64_t v117 = swift_slowAlloc();
      os_log_t v274 = (os_log_t)swift_slowAlloc();
      *(void *)&long long v308 = v274;
      *(_DWORD *)uint64_t v117 = 136446466;
      type metadata accessor for UUID();
      sub_10038D0B4((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v118 = dispatch thunk of CustomStringConvertible.description.getter();
      v306 = (char *)sub_10011EA98(v118, v119, (uint64_t *)&v308);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v117 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v120 = Dictionary.description.getter();
      unint64_t v122 = v121;
      swift_bridgeObjectRelease();
      v306 = (char *)sub_10011EA98(v120, v122, (uint64_t *)&v308);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v114, v115, "%{public}s (resolve optimisticLockingConflicts) cachedSnapshot:%s", (uint8_t *)v117, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v113 = v297;
      swift_slowDealloc();

      id v123 = v290;
      uint64_t v124 = v279;
      uint64_t v125 = (uint64_t)v289;
      v126 = (void *)v111;
      if (!*(void *)(v111 + 16)) {
        goto LABEL_53;
      }
    }
    else
    {

      swift_bridgeObjectRelease_n();
      id v123 = v290;
      uint64_t v124 = v279;
      uint64_t v125 = (uint64_t)v289;
      v126 = (void *)v111;
      if (!*(void *)(v111 + 16)) {
        goto LABEL_53;
      }
    }
    unint64_t v129 = sub_10001B5D0(0x4464657461647075, 0xEB00000000657461);
    if (v130)
    {
      sub_10001B648(v126[7] + 32 * v129, (uint64_t)&v308);
      uint64_t v131 = v303;
      int v132 = swift_dynamicCast();
      v124(v125, v132 ^ 1u, 1, v131);
      if (v281((char *)v125, 1, v131) != 1)
      {
        v277(v123, v125, v303);
        if (v126[2])
        {
          unint64_t v133 = sub_10001B5D0(1954047348, 0xE400000000000000);
          if (v134)
          {
            sub_10001B648(v126[7] + 32 * v133, (uint64_t)&v308);
            if (swift_dynamicCast())
            {
              id v282 = v126;
              unint64_t v135 = v307;
              v289 = v306;
              v136 = v284;
              uint64_t v137 = v303;
              v275(v284, v123, v303);
              v138 = v113;
              v139 = Logger.logObject.getter();
              os_log_type_t v140 = static os_log_type_t.default.getter();
              int v141 = v140;
              if (os_log_type_enabled(v139, v140))
              {
                uint64_t v142 = swift_slowAlloc();
                os_log_t v274 = (os_log_t)swift_slowAlloc();
                *(void *)&long long v308 = v274;
                *(_DWORD *)uint64_t v142 = 136446466;
                int v273 = v141;
                type metadata accessor for UUID();
                sub_10038D0B4((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                uint64_t v143 = dispatch thunk of CustomStringConvertible.description.getter();
                v306 = (char *)sub_10011EA98(v143, v144, (uint64_t *)&v308);
                v272[2] = &v307;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();

                swift_bridgeObjectRelease();
                *(_WORD *)(v142 + 12) = 2080;
                v272[1] = v142 + 14;
                unint64_t v145 = v135;
                id v146 = [objc_allocWithZone((Class)NSDateFormatter) init];
                NSString v147 = String._bridgeToObjectiveC()();
                [v146 setDateFormat:v147];

                Class v148 = Date._bridgeToObjectiveC()().super.isa;
                id v149 = [v146 stringFromDate:v148];

                uint64_t v150 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                v151 = v113;
                unint64_t v153 = v152;

                unint64_t v135 = v145;
                id v123 = v290;
                v306 = (char *)sub_10011EA98(v150, v153, (uint64_t *)&v308);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                uint64_t v113 = v151;
                swift_bridgeObjectRelease();
                ((void (*)(char *, uint64_t))v291)(v284, v303);
                _os_log_impl((void *)&_mh_execute_header, v139, (os_log_type_t)v273, "%{public}s (resolve optimisticLockingConflicts) cachedSnapshotUpdatedDate.stringWithMS: %s", (uint8_t *)v142, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                uint64_t v137 = v303;
                swift_slowDealloc();
              }
              else
              {

                ((void (*)(char *, uint64_t))v291)(v136, v137);
              }

              sub_10038D0B4((unint64_t *)&qword_1007FD120, (void (*)(uint64_t))&type metadata accessor for Date);
              char v223 = dispatch thunk of static Comparable.< infix(_:_:)();
              id v224 = v123;
              unint64_t v154 = v293;
              if (v223)
              {
                ((void (*)(id, uint64_t))v291)(v224, v137);
                sub_100040DD0((uint64_t)v289, v135);
              }
              else
              {
                id v225 = v224;
                v226 = v138;
                uint64_t v227 = (uint64_t)v289;
                sub_100040D64((uint64_t)v289, v135);
                v228 = v226;
                sub_100040D64(v227, v135);
                v229 = Logger.logObject.getter();
                os_log_type_t v230 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v229, v230))
                {
                  uint64_t v231 = swift_slowAlloc();
                  v284 = (char *)swift_slowAlloc();
                  *(void *)&long long v308 = v284;
                  *(_DWORD *)uint64_t v231 = 136446466;
                  type metadata accessor for UUID();
                  sub_10038D0B4((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                  uint64_t v232 = dispatch thunk of CustomStringConvertible.description.getter();
                  v306 = (char *)sub_10011EA98(v232, v233, (uint64_t *)&v308);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();

                  swift_bridgeObjectRelease();
                  *(_WORD *)(v231 + 12) = 2080;
                  sub_100040D64((uint64_t)v289, v135);
                  uint64_t v234 = Data.description.getter();
                  unint64_t v235 = v135;
                  unint64_t v237 = v236;
                  sub_100040DD0((uint64_t)v289, v235);
                  v306 = (char *)sub_10011EA98(v234, v237, (uint64_t *)&v308);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  unint64_t v135 = v235;
                  swift_bridgeObjectRelease();
                  sub_100040DD0((uint64_t)v289, v235);
                  sub_100040DD0((uint64_t)v289, v235);
                  _os_log_impl((void *)&_mh_execute_header, v229, v230, "%{public}s (resolve optimisticLockingConflicts) CachedSnapshot Wins cachedSnapshotBody: %s", (uint8_t *)v231, 0x16u);
                  swift_arrayDestroy();
                  unint64_t v154 = v293;
                  swift_slowDealloc();
                  uint64_t v227 = (uint64_t)v289;
                  swift_slowDealloc();

                  ((void (*)(id, uint64_t))v291)(v290, v303);
                }
                else
                {

                  sub_100040DD0(v227, v135);
                  sub_100040DD0(v227, v135);

                  ((void (*)(id, uint64_t))v291)(v225, v303);
                }
                sub_100040DBC(v310, v311);
                uint64_t v310 = v227;
                unint64_t v311 = v135;
                uint64_t v113 = v297;
              }
              v126 = v282;
LABEL_56:
              id v155 = [v304 persistedSnapshot];
              if (!v155)
              {
                swift_bridgeObjectRelease();
                v170 = v113;
                swift_bridgeObjectRetain();
                v171 = Logger.logObject.getter();
                os_log_type_t v172 = static os_log_type_t.default.getter();
                if (os_log_type_enabled(v171, v172))
                {
                  uint64_t v173 = swift_slowAlloc();
                  v304 = (void *)swift_slowAlloc();
                  *(void *)&long long v308 = v304;
                  *(_DWORD *)uint64_t v173 = 136446466;
                  type metadata accessor for UUID();
                  sub_10038D0B4((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                  uint64_t v174 = dispatch thunk of CustomStringConvertible.description.getter();
                  v306 = (char *)sub_10011EA98(v174, v175, (uint64_t *)&v308);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();

                  swift_bridgeObjectRelease();
                  *(_WORD *)(v173 + 12) = 2080;
                  swift_bridgeObjectRetain();
                  v306 = (char *)sub_10011EA98(v296, v154, (uint64_t *)&v308);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease_n();
                  _os_log_impl((void *)&_mh_execute_header, v171, v172, "%{public}s (resolve optimisticLockingConflicts) %s CONFLICT is Between the NSManagedObjectContext and its in-memory cached state at the NSPersistentStoreCoordinator layer. In this case, the merge conflict has a source object and a cached snapshot but no persisted snapshot", (uint8_t *)v173, 0x16u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  uint64_t v113 = v297;
                  swift_slowDealloc();
                }
                else
                {

                  swift_bridgeObjectRelease_n();
                }
LABEL_77:
                uint64_t v195 = v310;
                unint64_t v196 = v311;
                v197 = v113;
                sub_100040F10(v195, v196);
                v198 = v197;
                sub_100040F10(v195, v196);
                v199 = Logger.logObject.getter();
                os_log_type_t v200 = static os_log_type_t.debug.getter();
                if (os_log_type_enabled(v199, v200))
                {
                  uint64_t v201 = swift_slowAlloc();
                  v304 = (void *)swift_slowAlloc();
                  v306 = (char *)v304;
                  *(_DWORD *)uint64_t v201 = 136446466;
                  type metadata accessor for UUID();
                  sub_10038D0B4((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                  uint64_t v202 = dispatch thunk of CustomStringConvertible.description.getter();
                  *(void *)&long long v308 = sub_10011EA98(v202, v203, (uint64_t *)&v306);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();

                  swift_bridgeObjectRelease();
                  *(_WORD *)(v201 + 12) = 2080;
                  *(void *)&long long v308 = v195;
                  *((void *)&v308 + 1) = v196;
                  sub_100040F10(v195, v196);
                  sub_100010218(&qword_1007FC120);
                  uint64_t v204 = String.init<A>(describing:)();
                  *(void *)&long long v308 = sub_10011EA98(v204, v205, (uint64_t *)&v306);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  swift_bridgeObjectRelease();
                  sub_100040DBC(v195, v196);
                  sub_100040DBC(v195, v196);
                  _os_log_impl((void *)&_mh_execute_header, v199, v200, "%{public}s (resolve optimisticLockingConflicts) resultBody: %s", (uint8_t *)v201, 0x16u);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {

                  sub_100040DBC(v195, v196);
                  sub_100040DBC(v195, v196);
                }

                v206 = (void *)v299;
                swift_beginAccess();
                Class v207 = 0;
                unint64_t v208 = v311;
                if (v311 >> 60 != 15)
                {
                  uint64_t v209 = v310;
                  sub_100040D64(v310, v311);
                  Class v207 = Data._bridgeToObjectiveC()().super.isa;
                  sub_100040DBC(v209, v208);
                }
                [v206 setText:v207];

                v210 = v198;
                id v211 = v292;
                v212 = v210;
                id v213 = v211;
                v214 = Logger.logObject.getter();
                os_log_type_t v215 = static os_log_type_t.debug.getter();
                if (os_log_type_enabled(v214, v215))
                {
                  uint64_t v216 = swift_slowAlloc();
                  v304 = (void *)swift_slowAlloc();
                  v305 = (char *)swift_slowAlloc();
                  v306 = v305;
                  *(_DWORD *)uint64_t v216 = 136446466;
                  type metadata accessor for UUID();
                  sub_10038D0B4((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                  uint64_t v217 = dispatch thunk of CustomStringConvertible.description.getter();
                  uint64_t v312 = sub_10011EA98(v217, v218, (uint64_t *)&v306);
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();

                  swift_bridgeObjectRelease();
                  *(_WORD *)(v216 + 12) = 2112;
                  uint64_t v312 = (uint64_t)v206;
                  id v219 = v213;
                  UnsafeMutableRawBufferPointer.copyMemory(from:)();
                  void *v304 = v206;

                  _os_log_impl((void *)&_mh_execute_header, v214, v215, "%{public}s (resolve optimisticLockingConflicts) Modified Source Object to save: sourceObjectJE %@", (uint8_t *)v216, 0x16u);
                  sub_100010218((uint64_t *)&unk_1007FC430);
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_arrayDestroy();
                  swift_slowDealloc();
                  swift_slowDealloc();
                }
                else
                {
                }
                sub_100040DBC(v310, v311);
                ((void (*)(char *, uint64_t))v291)(v295, v303);

                goto LABEL_86;
              }
              v156 = v155;
              v157 = (void *)static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

              v158 = v113;
              swift_bridgeObjectRetain_n();
              v159 = v158;
              v160 = Logger.logObject.getter();
              os_log_type_t v161 = static os_log_type_t.default.getter();
              BOOL v162 = os_log_type_enabled(v160, v161);
              id v282 = v126;
              v304 = v157;
              if (v162)
              {
                uint64_t v163 = swift_slowAlloc();
                id v290 = (id)swift_slowAlloc();
                *(void *)&long long v308 = v290;
                *(_DWORD *)uint64_t v163 = 136446466;
                type metadata accessor for UUID();
                sub_10038D0B4((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                uint64_t v164 = dispatch thunk of CustomStringConvertible.description.getter();
                v306 = (char *)sub_10011EA98(v164, v165, (uint64_t *)&v308);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();

                swift_bridgeObjectRelease();
                *(_WORD *)(v163 + 12) = 2080;
                swift_bridgeObjectRetain();
                uint64_t v166 = Dictionary.description.getter();
                v289 = (char *)&type metadata for Any + 8;
                unint64_t v168 = v167;
                swift_bridgeObjectRelease();
                v306 = (char *)sub_10011EA98(v166, v168, (uint64_t *)&v308);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                uint64_t v169 = v303;
                swift_bridgeObjectRelease();
                _os_log_impl((void *)&_mh_execute_header, v160, v161, "%{public}s (resolve optimisticLockingConflicts) persistedSnapshot:%s", (uint8_t *)v163, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {

                swift_bridgeObjectRelease_n();
                uint64_t v169 = v303;
              }
              v176 = v159;
              unint64_t v177 = v293;
              swift_bridgeObjectRetain();
              v178 = Logger.logObject.getter();
              os_log_type_t v179 = static os_log_type_t.default.getter();
              BOOL v180 = os_log_type_enabled(v178, v179);
              id v290 = v176;
              if (v180)
              {
                uint64_t v181 = swift_slowAlloc();
                *(void *)&long long v308 = swift_slowAlloc();
                *(_DWORD *)uint64_t v181 = 136446466;
                type metadata accessor for UUID();
                sub_10038D0B4((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                uint64_t v182 = dispatch thunk of CustomStringConvertible.description.getter();
                v306 = (char *)sub_10011EA98(v182, v183, (uint64_t *)&v308);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();

                swift_bridgeObjectRelease();
                *(_WORD *)(v181 + 12) = 2080;
                swift_bridgeObjectRetain();
                v306 = (char *)sub_10011EA98(v296, v177, (uint64_t *)&v308);
                uint64_t v169 = v303;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                _os_log_impl((void *)&_mh_execute_header, v178, v179, "%{public}s (resolve optimisticLockingConflicts) %s CONFLICT is Between the cached state at the NSPersistentStoreCoordinator and the external store (file, database, etc.). In this case, the merge conflict has a cached snapshot and a persisted snapshot.", (uint8_t *)v181, 0x16u);
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();
              }
              else
              {

                swift_bridgeObjectRelease_n();
              }
              v184 = v288;
              v185 = v287;
              v186 = (void (*)(char *, void, uint64_t, uint64_t))v279;
              v187 = v304;
              if (v304[2] && (unint64_t v188 = sub_10001B5D0(0x4464657461647075, 0xEB00000000657461), (v189 & 1) != 0))
              {
                sub_10001B648(v187[7] + 32 * v188, (uint64_t)&v308);
                int v190 = swift_dynamicCast();
                v186(v185, v190 ^ 1u, 1, v169);
                if (v281(v185, 1, v169) != 1)
                {
                  v277(v286, (uint64_t)v185, v169);
                  v191 = v282;
                  if (*((void *)v282 + 2)
                    && (unint64_t v192 = sub_10001B5D0(0x4464657461647075, 0xEB00000000657461), (v193 & 1) != 0))
                  {
                    sub_10001B648(v191[7] + 32 * v192, (uint64_t)&v308);
                  }
                  else
                  {
                    long long v308 = 0u;
                    long long v309 = 0u;
                  }
                  swift_bridgeObjectRelease();
                  if (*((void *)&v309 + 1))
                  {
                    int v220 = swift_dynamicCast();
                    v186(v184, v220 ^ 1u, 1, v169);
                    if (v281(v184, 1, v169) != 1)
                    {
                      v277(v285, (uint64_t)v184, v169);
                      if (v187[2])
                      {
                        unint64_t v221 = sub_10001B5D0(1954047348, 0xE400000000000000);
                        uint64_t v113 = v297;
                        if (v222)
                        {
                          sub_10001B648(v187[7] + 32 * v221, (uint64_t)&v308);
                        }
                        else
                        {
                          long long v308 = 0u;
                          long long v309 = 0u;
                        }
                      }
                      else
                      {
                        long long v308 = 0u;
                        long long v309 = 0u;
                        uint64_t v113 = v297;
                      }
                      swift_bridgeObjectRelease();
                      if (*((void *)&v309 + 1))
                      {
                        if (swift_dynamicCast())
                        {
                          unint64_t v238 = v307;
                          v304 = v306;
                          v239 = v283;
                          v275(v283, v286, v169);
                          id v240 = v290;
                          v241 = Logger.logObject.getter();
                          os_log_type_t v242 = static os_log_type_t.default.getter();
                          int v243 = v242;
                          if (os_log_type_enabled(v241, v242))
                          {
                            uint64_t v244 = swift_slowAlloc();
                            unint64_t v296 = v238;
                            uint64_t v245 = v244;
                            v294 = (char *)swift_slowAlloc();
                            *(void *)&long long v308 = v294;
                            *(_DWORD *)uint64_t v245 = 136446466;
                            LODWORD(v293) = v243;
                            type metadata accessor for UUID();
                            sub_10038D0B4((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                            uint64_t v246 = dispatch thunk of CustomStringConvertible.description.getter();
                            v306 = (char *)sub_10011EA98(v246, v247, (uint64_t *)&v308);
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();

                            swift_bridgeObjectRelease();
                            *(_WORD *)(v245 + 12) = 2080;
                            id v290 = (id)(v245 + 14);
                            id v248 = [objc_allocWithZone((Class)NSDateFormatter) init];
                            NSString v249 = String._bridgeToObjectiveC()();
                            [v248 setDateFormat:v249];

                            Class v250 = Date._bridgeToObjectiveC()().super.isa;
                            id v251 = [v248 stringFromDate:v250];

                            uint64_t v252 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                            unint64_t v254 = v253;

                            v306 = (char *)sub_10011EA98(v252, v254, (uint64_t *)&v308);
                            uint64_t v169 = v303;
                            UnsafeMutableRawBufferPointer.copyMemory(from:)();
                            swift_bridgeObjectRelease();
                            ((void (*)(char *, uint64_t))v291)(v239, v169);
                            _os_log_impl((void *)&_mh_execute_header, v241, (os_log_type_t)v293, "%{public}s (resolve optimisticLockingConflicts) persistedSnapshotUpdatedDate.stringWithMS: %s", (uint8_t *)v245, 0x16u);
                            swift_arrayDestroy();
                            swift_slowDealloc();
                            unint64_t v238 = v296;
                            swift_slowDealloc();
                          }
                          else
                          {

                            ((void (*)(char *, uint64_t))v291)(v239, v169);
                          }

                          v256 = v285;
                          sub_10038D0B4((unint64_t *)&qword_1007FD120, (void (*)(uint64_t))&type metadata accessor for Date);
                          v257 = v286;
                          if ((dispatch thunk of static Comparable.< infix(_:_:)() & 1) == 0)
                          {
                            id v259 = v240;
                            uint64_t v260 = (uint64_t)v304;
                            sub_100040D64((uint64_t)v304, v238);
                            id v261 = v259;
                            sub_100040D64(v260, v238);
                            v262 = Logger.logObject.getter();
                            unint64_t v263 = v238;
                            os_log_type_t v264 = static os_log_type_t.default.getter();
                            if (os_log_type_enabled(v262, v264))
                            {
                              uint64_t v265 = swift_slowAlloc();
                              unint64_t v296 = swift_slowAlloc();
                              *(void *)&long long v308 = v296;
                              *(_DWORD *)uint64_t v265 = 136446466;
                              type metadata accessor for UUID();
                              sub_10038D0B4((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
                              uint64_t v266 = dispatch thunk of CustomStringConvertible.description.getter();
                              v306 = (char *)sub_10011EA98(v266, v267, (uint64_t *)&v308);
                              UnsafeMutableRawBufferPointer.copyMemory(from:)();

                              swift_bridgeObjectRelease();
                              *(_WORD *)(v265 + 12) = 2080;
                              sub_100040D64((uint64_t)v304, v263);
                              uint64_t v268 = Data.description.getter();
                              unint64_t v270 = v269;
                              sub_100040DD0((uint64_t)v304, v263);
                              v306 = (char *)sub_10011EA98(v268, v270, (uint64_t *)&v308);
                              UnsafeMutableRawBufferPointer.copyMemory(from:)();
                              swift_bridgeObjectRelease();
                              sub_100040DD0((uint64_t)v304, v263);
                              sub_100040DD0((uint64_t)v304, v263);
                              _os_log_impl((void *)&_mh_execute_header, v262, v264, "%{public}s (resolve optimisticLockingConflicts) PersistedSnapshot Wins persistedSnapshotBody: %s", (uint8_t *)v265, 0x16u);
                              swift_arrayDestroy();
                              swift_slowDealloc();
                              uint64_t v260 = (uint64_t)v304;
                              swift_slowDealloc();
                            }
                            else
                            {

                              sub_100040DD0(v260, v263);
                              sub_100040DD0(v260, v263);
                            }
                            v271 = (void (*)(char *, uint64_t))v291;
                            ((void (*)(char *, uint64_t))v291)(v285, v169);
                            v271(v286, v169);
                            sub_100040DBC(v310, v311);
                            uint64_t v113 = v297;
                            uint64_t v310 = v260;
                            unint64_t v311 = v263;
                            goto LABEL_77;
                          }
                          sub_100040DD0((uint64_t)v304, v238);
                          v258 = (void (*)(char *, uint64_t))v291;
                          ((void (*)(char *, uint64_t))v291)(v256, v169);
                          v258(v257, v169);
                          goto LABEL_74;
                        }
                      }
                      else
                      {
                        sub_10001457C((uint64_t)&v308, &qword_1007FAD50);
                      }
                      v255 = (void (*)(char *, uint64_t))v291;
                      ((void (*)(char *, uint64_t))v291)(v285, v169);
                      v255(v286, v169);
                      goto LABEL_77;
                    }
                  }
                  else
                  {
                    sub_10001457C((uint64_t)&v308, &qword_1007FAD50);
                    v186(v184, 1, 1, v169);
                  }
                  swift_bridgeObjectRelease();
                  ((void (*)(char *, uint64_t))v291)(v286, v169);
                  uint64_t v194 = (uint64_t)v184;
LABEL_73:
                  sub_10001457C(v194, (uint64_t *)&unk_1007FC470);
LABEL_74:
                  uint64_t v113 = v297;
                  goto LABEL_77;
                }
              }
              else
              {
                v186(v185, 1, 1, v169);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v194 = (uint64_t)v185;
              goto LABEL_73;
            }
          }
        }
        ((void (*)(id, uint64_t))v291)(v123, v303);
LABEL_55:
        unint64_t v154 = v293;
        goto LABEL_56;
      }
LABEL_54:
      sub_10001457C(v125, (uint64_t *)&unk_1007FC470);
      goto LABEL_55;
    }
LABEL_53:
    v124(v125, 1, 1, v303);
    goto LABEL_54;
  }
  swift_bridgeObjectRelease();
  unint64_t v127 = v302;
  uint64_t v128 = v298;
  sub_100389A7C(0x6E53646568636163, 0xEE00746F68737061, v302);
  if (v128)
  {

    sub_100040DBC(v105, v107);
    ((void (*)(char *, uint64_t))v291)(v295, v303);
    swift_bridgeObjectRelease();

    return;
  }

  sub_100040DBC(v105, v107);
  ((void (*)(char *, uint64_t))v291)(v295, v303);

LABEL_86:
  swift_bridgeObjectRelease();
}

id sub_10038CD88()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JurassicMergePolicy();
  return [super dealloc];
}

uint64_t sub_10038CE2C()
{
  return type metadata accessor for JurassicMergePolicy();
}

uint64_t type metadata accessor for JurassicMergePolicy()
{
  uint64_t result = qword_10080A2D0;
  if (!qword_10080A2D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10038CE80()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for JurassicMergePolicy.MergeMode(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10038CFE4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JurassicMergePolicy.MergeMode()
{
  return &type metadata for JurassicMergePolicy.MergeMode;
}

unint64_t sub_10038D020()
{
  unint64_t result = qword_10080A2E0;
  if (!qword_10080A2E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080A2E0);
  }
  return result;
}

unint64_t sub_10038D074()
{
  unint64_t result = qword_10080A2E8;
  if (!qword_10080A2E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10080A2E8);
  }
  return result;
}

uint64_t sub_10038D0B4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10038D0FC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_10080A2F0);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_10080A2F0);
  if (qword_1007F7DF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EDD0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_10038D1C4(uint64_t a1)
{
  uint64_t v3 = sub_100010218(&qword_10080A410);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t)v1 + OBJC_IVAR____TtC7Journal24TranscriptViewController_activeSegment;
  swift_beginAccess();
  sub_100391050(a1, v6);
  swift_endAccess();
  id result = [v1 view];
  if (result)
  {
    uint64_t v8 = result;
    type metadata accessor for TranscriptView();
    uint64_t v9 = swift_dynamicCastClassUnconditional();
    id v10 = sub_10038DAC4();
    uint64_t v11 = v9 + OBJC_IVAR____TtC7Journal14TranscriptView_activeSegmentRange;
    *(void *)uint64_t v11 = v10;
    *(void *)(v11 + 8) = v12;
    *(unsigned char *)(v11 + 16) = v13 & 1;
    sub_1001C4F80();

    sub_10001B220(v6, (uint64_t)v5, &qword_10080A410);
    uint64_t v14 = type metadata accessor for TranscriptViewModelSegment(0);
    int v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48))(v5, 1, v14);
    sub_10001457C((uint64_t)v5, &qword_10080A410);
    if (v15 != 1) {
      sub_10038E290();
    }
    return (id)sub_10001457C(a1, &qword_10080A410);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10038D3A8()
{
  uint64_t v1 = v0;
  objc_allocWithZone((Class)type metadata accessor for TranscriptView());
  uint64_t v2 = swift_retain();
  id v3 = sub_1001C4D34(v2);
  [v3 setDelegate:v1];
  [v1 setView:v3];
  id v4 = [v1 view];
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = [self clearColor];
    [v5 setBackgroundColor:v6];

    id v7 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v1 action:"handleTap:"];
    id v8 = [v1 view];
    if (v8)
    {
      uint64_t v9 = v8;
      [v8 addGestureRecognizer:v7];

      __chkstk_darwin(v10);
      __chkstk_darwin(v11);
      __chkstk_darwin(v12);
      uint64_t v13 = withObservationTracking<A>(_:onChange:)();
      __chkstk_darwin(v13);
      __chkstk_darwin(v14);
      __chkstk_darwin(v15);
      uint64_t v16 = withObservationTracking<A>(_:onChange:)();
      __chkstk_darwin(v16);
      __chkstk_darwin(v17);
      __chkstk_darwin(v18);
      uint64_t v19 = withObservationTracking<A>(_:onChange:)();
      __chkstk_darwin(v19);
      __chkstk_darwin(v20);
      __chkstk_darwin(v21);
      withObservationTracking<A>(_:onChange:)();

      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_10038D868(uint64_t result)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC7Journal24TranscriptViewController_representableAdapter + 8);
  if (v2)
  {
    id v3 = (void *)result;
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC7Journal24TranscriptViewController_representableAdapter);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    [v3 contentOffset];
    [v3 contentSize];
    [v3 frame];
    uint64_t v5 = *(void *)(v1 + OBJC_IVAR____TtC7Journal24TranscriptViewController_model);
    swift_getKeyPath();
    sub_1002A8F2C();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(void *)(v5 + 16))
    {
      uint64_t v6 = *(void *)(v5 + 24);
      uint64_t ObjectType = swift_getObjectType();
      (*(uint64_t (**)(uint64_t))(*(void *)(v6 + 8) + 8))(ObjectType);
    }
    sub_100010218(&qword_1008017C8);
    Binding.wrappedValue.setter();
    Binding.wrappedValue.setter();
    return sub_100390B2C(v4, v2);
  }
  return result;
}

id sub_10038DAC4()
{
  uint64_t v1 = sub_100010218(&qword_10080A410);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)aBlock - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  id v7 = (char *)aBlock - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)aBlock - v9;
  uint64_t v11 = (uint64_t)v0 + OBJC_IVAR____TtC7Journal24TranscriptViewController_activeSegment;
  swift_beginAccess();
  sub_10001B220(v11, (uint64_t)v3, &qword_10080A410);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
    sub_10001457C((uint64_t)v3, &qword_10080A410);
    if (qword_1007F6EC8 != -1) {
      swift_once();
    }
    uint64_t v12 = type metadata accessor for Logger();
    sub_100026A54(v12, (uint64_t)qword_10080A2F0);
    uint64_t v13 = Logger.logObject.getter();
    os_log_type_t v14 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v15 = 0;
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "Asked for rangeForActiveSegment, but activeSegment was nil.", v15, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  sub_100390DC0((uint64_t)v3, (uint64_t)v10);
  id result = [v0 view];
  if (result)
  {
    uint64_t v18 = result;
    type metadata accessor for TranscriptView();
    id v19 = [(id)swift_dynamicCastClassUnconditional() textStorage];

    v30[0] = 0;
    v30[1] = 0;
    char v31 = 1;
    if (qword_1007F6A20 != -1) {
      swift_once();
    }
    uint64_t v20 = static NSAttributedStringKey.audio_transcriptText;
    id v21 = v19;
    id v22 = [v21 length];

    sub_100140F00((uint64_t)v10, (uint64_t)v7);
    unint64_t v23 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    unint64_t v24 = (v6 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v25 = swift_allocObject();
    sub_100390DC0((uint64_t)v7, v25 + v23);
    *(void *)(v25 + v24) = v30;
    uint64_t v26 = swift_allocObject();
    *(void *)(v26 + 16) = sub_100390F7C;
    *(void *)(v26 + 24) = v25;
    aBlock[4] = sub_1001C7184;
    aBlock[5] = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1005A7B04;
    aBlock[3] = &unk_1007A7F08;
    uint64_t v27 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    [v21 enumerateAttribute:v20 inRange:0 options:v22 usingBlock:v27];
    _Block_release(v27);

    sub_100140F64((uint64_t)v10);
    char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
    id result = (id)swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0)
    {
      uint64_t v16 = v30[0];
      swift_release();
      return (id)v16;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_10038DF64(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4, uint64_t a5, uint64_t a6)
{
  sub_10001B220(a1, (uint64_t)v11, &qword_1007FAD50);
  if (!v12) {
    return sub_10001457C((uint64_t)v11, &qword_1007FAD50);
  }
  type metadata accessor for TranscriptMetadata(0);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    if (static UUID.== infix(_:_:)())
    {
      *(void *)a6 = a2;
      *(void *)(a6 + 8) = a3;
      *(unsigned char *)(a6 + 16) = 0;
      *a4 = 1;
    }
    return swift_release();
  }
  return result;
}

void sub_10038E03C()
{
  uint64_t v1 = v0;
  id v2 = [v0 view];
  if (!v2) {
    goto LABEL_11;
  }
  id v3 = v2;
  type metadata accessor for TranscriptView();
  swift_dynamicCastClassUnconditional();
  uint64_t v4 = *(void *)&v0[OBJC_IVAR____TtC7Journal24TranscriptViewController_model];
  swift_retain();
  uint64_t v5 = sub_10013BF44();
  swift_release();
  sub_1001C5220(v5, 0, 0, 1);

  swift_bridgeObjectRelease();
  swift_getKeyPath();
  sub_1002A8F2C();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v4 + 16))
  {
    uint64_t v6 = *(void *)(v4 + 24);
    uint64_t ObjectType = swift_getObjectType();
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v6 + 8) + 8))(ObjectType))
    {
      id v8 = [v0 view];
      if (!v8)
      {
LABEL_12:
        __break(1u);
        goto LABEL_13;
      }
      uint64_t v9 = v8;
      id v10 = [(id)swift_dynamicCastClassUnconditional() textStorage];

      uint64_t v11 = (char *)[v10 length];
      BOOL v12 = __OFSUB__(v11, 1);
      uint64_t v13 = v11 - 1;
      if (!v12)
      {
        id v14 = [v1 view];
        if (v14)
        {
          uint64_t v15 = v14;
          [swift_dynamicCastClassUnconditional() scrollRangeToVisible:v13, 1];

          if (*(void *)&v1[OBJC_IVAR____TtC7Journal24TranscriptViewController_representableAdapter + 8])
          {
            sub_100010218(&qword_1008017C8);
            Binding.wrappedValue.setter();
          }
          return;
        }
LABEL_13:
        __break(1u);
        return;
      }
      __break(1u);
LABEL_11:
      __break(1u);
      goto LABEL_12;
    }
  }
}

void sub_10038E290()
{
  id v1 = sub_10038DAC4();
  uint64_t v3 = v2;
  char v5 = v4;
  if (v4) {
    goto LABEL_11;
  }
  id v6 = [v0 view];
  if (!v6)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v7 = v6;
  type metadata accessor for TranscriptView();
  id v8 = [(id)swift_dynamicCastClassUnconditional() textStorage];

  id v9 = [v8 string];
  if (!v9)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v1 = [v9 paragraphRangeForRange:v1, v3];
  uint64_t v3 = v10;

  if ((v0[OBJC_IVAR____TtC7Journal24TranscriptViewController_previousParagraphRange + 16] & 1) == 0
    && *(id *)&v0[OBJC_IVAR____TtC7Journal24TranscriptViewController_previousParagraphRange] == v1
    && *(void *)&v0[OBJC_IVAR____TtC7Journal24TranscriptViewController_previousParagraphRange + 8] == v3)
  {
    goto LABEL_11;
  }
  id v12 = [v0 view];
  if (v12)
  {
    uint64_t v13 = v12;
    [swift_dynamicCastClassUnconditional() scrollRangeToVisible:v1, v3];

    id v14 = *(void **)&v0[OBJC_IVAR____TtC7Journal24TranscriptViewController_selectionFeedbackGenerator];
    [v14 prepare];
    [v14 impactOccurredWithIntensity:0.5];
LABEL_11:
    uint64_t v15 = &v0[OBJC_IVAR____TtC7Journal24TranscriptViewController_previousParagraphRange];
    *(void *)uint64_t v15 = v1;
    *((void *)v15 + 1) = v3;
    v15[16] = v5 & 1;
    return;
  }
LABEL_14:
  __break(1u);
}

id sub_10038E444@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  id result = [v3 view];
  if (result)
  {
    id v7 = result;
    type metadata accessor for TranscriptView();
    id v8 = [(id)swift_dynamicCastClassUnconditional() textStorage];

    if ((uint64_t)[v8 length] <= a1 || a1 < 0)
    {
    }
    else
    {
      if (qword_1007F6A20 != -1) {
        swift_once();
      }
      if ([v8 attribute:static NSAttributedStringKey.audio_transcriptText atIndex:a1 effectiveRange:0])
      {
        _bridgeAnyObjectToAny(_:)();

        swift_unknownObjectRelease();
      }
      else
      {

        memset(v12, 0, sizeof(v12));
      }
      sub_10002C4EC((uint64_t)v12, (uint64_t)v13, &qword_1007FAD50);
      if (v14)
      {
        type metadata accessor for TranscriptMetadata(0);
        if (swift_dynamicCast())
        {
          sub_100140F00(v11 + OBJC_IVAR____TtC7Journal18TranscriptMetadata_segment, a2);
          swift_release();
          uint64_t v10 = type metadata accessor for TranscriptViewModelSegment(0);
          return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(a2, 0, 1, v10);
        }
      }
      else
      {
        sub_10001457C((uint64_t)v13, &qword_1007FAD50);
      }
    }
    uint64_t v9 = type metadata accessor for TranscriptViewModelSegment(0);
    return (id)(*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a2, 1, 1, v9);
  }
  __break(1u);
  return result;
}

uint64_t sub_10038E678()
{
  uint64_t v1 = sub_100010218(&qword_10080A410);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v6 = (char *)&v13 - v5;
  uint64_t v7 = type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain();
  uint64_t v11 = sub_10013BF44();
  swift_release();
  sub_10038E864(v11, (uint64_t)v6, *(double *)(v0 + OBJC_IVAR____TtC7Journal24TranscriptViewController_playbackTime));
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1) {
    return sub_10001457C((uint64_t)v6, &qword_10080A410);
  }
  sub_100390DC0((uint64_t)v6, (uint64_t)v10);
  sub_100140F00((uint64_t)v10, (uint64_t)v3);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v3, 0, 1, v7);
  sub_10038D1C4((uint64_t)v3);
  return sub_100140F64((uint64_t)v10);
}

uint64_t sub_10038E864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v6 = sub_100010218(&qword_10080A410);
  __chkstk_darwin(v6 - 8);
  uint64_t v41 = (uint64_t)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Logger();
  uint64_t v44 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v43 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v42 = (uint64_t)&v38 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v38 - v15;
  double v47 = 0.0;
  unint64_t v17 = *(void *)(a1 + 16);
  uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v11 + 56);
  uint64_t result = v18(a2, 1, 1, v10, v14);
  if (v17)
  {
    uint64_t v39 = a2;
    uint64_t v40 = v8;
    unint64_t v20 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v21 = *(void *)(v11 + 72);
    uint64_t v38 = a1 + v20;
    sub_100140F00(a1 + v20, (uint64_t)v16);
    if (v17 == 1)
    {
      double v25 = 0.0;
LABEL_13:
      if (v25 + *(double *)&v16[*(int *)(v10 + 24)] <= a3)
      {
        if (qword_1007F6EC8 != -1) {
          swift_once();
        }
        uint64_t v30 = v40;
        uint64_t v31 = sub_100026A54(v40, (uint64_t)qword_10080A2F0);
        BOOL v33 = v43;
        uint64_t v32 = v44;
        (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, v31, v30);
        uint64_t v34 = v42;
        sub_100140F00((uint64_t)v16, v42);
        unint64_t v35 = Logger.logObject.getter();
        os_log_type_t v36 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v35, v36))
        {
          uint64_t v37 = swift_slowAlloc();
          *(_DWORD *)uint64_t v37 = 134218240;
          double v46 = a3;
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *(_WORD *)(v37 + 12) = 2048;
          swift_beginAccess();
          double v45 = v47 + *(double *)(v34 + *(int *)(v10 + 24));
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          sub_100140F64(v34);
          _os_log_impl((void *)&_mh_execute_header, v35, v36, "currentPlaybackTime %f is greater than the total time in the transcript %f. Cannot provide the active segment.", (uint8_t *)v37, 0x16u);
          swift_slowDealloc();
        }
        else
        {

          sub_100140F64(v34);
        }
        (*(void (**)(char *, uint64_t))(v32 + 8))(v33, v40);
        return sub_100140F64((uint64_t)v16);
      }
      double v25 = -1.0;
      unint64_t v22 = v17 - 1;
    }
    else
    {
      unint64_t v22 = 0;
      uint64_t v23 = a1 + v21 + v20;
      double v24 = 0.0;
      while (1)
      {
        double v25 = *(double *)(v23 + *(int *)(v10 + 24));
        if (v25 < 0.0) {
          break;
        }
        if (v24 <= a3 && v25 >= a3) {
          break;
        }
        ++v22;
        sub_100140F64((uint64_t)v16);
        double v47 = v25;
        sub_100140F00(v23, (uint64_t)v16);
        v23 += v21;
        double v24 = v25;
        if (v17 - 1 == v22) {
          goto LABEL_13;
        }
      }
    }
    if (vabdd_f64(a3, v25) >= 0.01)
    {
      uint64_t v29 = v39;
      sub_10001457C(v39, &qword_10080A410);
      sub_100390DC0((uint64_t)v16, v29);
      return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v18)(v29, 0, 1, v10);
    }
    if (v22 + 1 < v17)
    {
      uint64_t v27 = v41;
      sub_100140F00(v38 + v21 * (v22 + 1), v41);
      sub_100140F64((uint64_t)v16);
      uint64_t v28 = v39;
      sub_10001457C(v39, &qword_10080A410);
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v18)(v27, 0, 1, v10);
      return sub_10002C4EC(v27, v28, &qword_10080A410);
    }
    return sub_100140F64((uint64_t)v16);
  }
  return result;
}

uint64_t sub_10038ED4C(double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC7Journal24TranscriptViewController_audioController + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 88))(v18, ObjectType, v4);
  uint64_t v6 = v19;
  if (v19)
  {
    uint64_t v7 = v20;
    sub_10002E0BC(v18, v19);
    uint64_t v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(v6, v7);
    uint64_t v6 = v9;
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v18);
  }
  else
  {
    sub_10001457C((uint64_t)v18, &qword_1007F9470);
    uint64_t v8 = 0;
  }
  sub_1003D53B0((uint64_t)v18);
  uint64_t v10 = v19;
  if (!v19)
  {
    sub_10001457C((uint64_t)v18, &qword_1007F9470);
    if (!v6) {
      goto LABEL_18;
    }
    return swift_bridgeObjectRelease();
  }
  uint64_t v11 = v20;
  sub_10002E0BC(v18, v19);
  uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  uint64_t v14 = v13;
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v18);
  if (!v6)
  {
    if (!v14) {
      goto LABEL_18;
    }
    return swift_bridgeObjectRelease();
  }
  if (!v14) {
    return swift_bridgeObjectRelease();
  }
  if (v8 == v12 && v6 == v14)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if ((v16 & 1) == 0) {
      return result;
    }
  }
LABEL_18:
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(ObjectType, v4);
  if (result)
  {
    *(double *)(v2 + OBJC_IVAR____TtC7Journal24TranscriptViewController_playbackTime) = a1 + 0.5;
    return sub_10038E678();
  }
  return result;
}

void sub_10038EF60(char a1)
{
  uint64_t v3 = sub_100010218(&qword_10080A410);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v24[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC7Journal24TranscriptViewController_audioController + 8);
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v6 + 88))(v24, ObjectType, v6);
  uint64_t v8 = v25;
  if (v25)
  {
    uint64_t v9 = v26;
    sub_10002E0BC(v24, v25);
    uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    uint64_t v8 = v11;
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v24);
  }
  else
  {
    sub_10001457C((uint64_t)v24, &qword_1007F9470);
    uint64_t v10 = 0;
  }
  sub_1003D53B0((uint64_t)v24);
  uint64_t v12 = v25;
  if (!v25)
  {
    sub_10001457C((uint64_t)v24, &qword_1007F9470);
    if (!v8) {
      goto LABEL_15;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v13 = v26;
  sub_10002E0BC(v24, v25);
  uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
  uint64_t v16 = v15;
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v24);
  if (!v8)
  {
    if (!v16) {
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (!v16) {
    goto LABEL_13;
  }
  if (v10 == v14 && v8 == v16)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v17 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0) {
      return;
    }
  }
LABEL_15:
  if (qword_1007F6EC8 != -1) {
    swift_once();
  }
  uint64_t v18 = type metadata accessor for Logger();
  sub_100026A54(v18, (uint64_t)qword_10080A2F0);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Transcript State Machine: Received audio playback change", v21, 2u);
    swift_slowDealloc();
  }

  if ((a1 & 1) == 0)
  {
    uint64_t v22 = type metadata accessor for TranscriptViewModelSegment(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v5, 1, 1, v22);
    sub_10038D1C4((uint64_t)v5);
  }
}

void sub_10038F26C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218(&qword_10080A410);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v12 = __chkstk_darwin(v11).n128_u64[0];
  uint64_t v14 = (char *)v32 - v13;
  id v15 = [v2 view];
  if (!v15)
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v16 = v15;
  type metadata accessor for TranscriptView();
  [a1 locationInView:swift_dynamicCastClassUnconditional()];
  CGFloat v18 = v17;
  CGFloat v20 = v19;

  id v21 = [v2 view];
  if (!v21)
  {
LABEL_14:
    __break(1u);
    return;
  }
  uint64_t v22 = v21;
  swift_dynamicCastClassUnconditional();
  NSUInteger v23 = sub_1000132FC(v18, v20, 1.0, 1.0);
  char v25 = v24;

  if ((v25 & 1) == 0)
  {
    sub_10038E444(v23, (uint64_t)v6);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
    {
      sub_10001457C((uint64_t)v6, &qword_10080A410);
    }
    else
    {
      sub_100390DC0((uint64_t)v6, (uint64_t)v14);
      if (qword_1007F6EC8 != -1) {
        swift_once();
      }
      uint64_t v26 = type metadata accessor for Logger();
      sub_100026A54(v26, (uint64_t)qword_10080A2F0);
      sub_100140F00((uint64_t)v14, (uint64_t)v10);
      uint64_t v27 = Logger.logObject.getter();
      os_log_type_t v28 = static os_log_type_t.debug.getter();
      if (os_log_type_enabled(v27, v28))
      {
        uint64_t v29 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v29 = 134217984;
        v32[1] = *(void *)&v10[*(int *)(v7 + 24)];
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        sub_100140F64((uint64_t)v10);
        _os_log_impl((void *)&_mh_execute_header, v27, v28, "Seeking audiocontroller to timestamp (from tapping): %f", v29, 0xCu);
        swift_slowDealloc();
      }
      else
      {
        sub_100140F64((uint64_t)v10);
      }

      uint64_t v30 = *(void *)&v2[OBJC_IVAR____TtC7Journal24TranscriptViewController_audioController + 8];
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t, double))(v30 + 160))(ObjectType, v30, *(double *)&v14[*(int *)(v7 + 24)]);
      sub_100140F64((uint64_t)v14);
    }
  }
}

void sub_10038F664()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC7Journal24TranscriptViewController_model];
  swift_getKeyPath();
  v18[0] = v2;
  sub_1002A8F2C();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3
    && (uint64_t v4 = *(void *)(v2 + 24),
        uint64_t ObjectType = swift_getObjectType(),
        v18[0] = v3,
        ((*(uint64_t (**)(uint64_t))(*(void *)(v4 + 8) + 8))(ObjectType) & 1) != 0))
  {
    uint64_t v6 = OBJC_IVAR____TtC7Journal24TranscriptViewController_transcriptTimer;
    if (*(void *)&v1[OBJC_IVAR____TtC7Journal24TranscriptViewController_transcriptTimer]) {
      return;
    }
    uint64_t v7 = self;
    uint64_t v8 = swift_allocObject();
    swift_unknownObjectWeakInit();
    v18[4] = sub_100390E5C;
    v18[5] = v8;
    v18[0] = _NSConcreteStackBlock;
    v18[1] = 1107296256;
    v18[2] = sub_10007453C;
    void v18[3] = &unk_1007A7E90;
    uint64_t v9 = _Block_copy(v18);
    swift_release();
    id v10 = [v7 scheduledTimerWithTimeInterval:1 repeats:v9 block:1.0];
    _Block_release(v9);
    uint64_t v11 = *(void **)&v1[v6];
    *(void *)&v1[v6] = v10;
  }
  else
  {
    id v12 = [v1 view:v18[0]];
    if (!v12)
    {
      __break(1u);
      return;
    }
    uint64_t v13 = v12;
    type metadata accessor for TranscriptView();
    uint64_t v14 = swift_dynamicCastClassUnconditional();
    int v15 = *(unsigned __int8 *)(v14 + OBJC_IVAR____TtC7Journal14TranscriptView_shouldShowWaitingUI);
    *(unsigned char *)(v14 + OBJC_IVAR____TtC7Journal14TranscriptView_shouldShowWaitingUI) = 0;
    if (v15 == 1)
    {
      uint64_t v16 = (char *)v14;
      sub_1001C5220(0, 0, 0, 1);
      if (v16[OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIRange + 16] != 1) {
        [v16 scrollRangeToVisible:*(void *)&v16[OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIRange], *(void *)&v16[OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIRange + 8]];
      }
    }

    uint64_t v17 = OBJC_IVAR____TtC7Journal24TranscriptViewController_transcriptTimer;
    [*(id *)&v1[OBJC_IVAR____TtC7Journal24TranscriptViewController_transcriptTimer] invalidate];
    uint64_t v11 = *(void **)&v1[v17];
    *(void *)&v1[v17] = 0;
  }
}

void sub_10038F8CC(void *a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v3 = (void *)Strong;
    sub_10038F938();
  }
  else
  {
    [a1 invalidate];
  }
}

uint64_t sub_10038F938()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_10080A410);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (int *)type metadata accessor for TranscriptViewModelSegment(0);
  uint64_t v6 = *((void *)v5 - 1);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)&v0[OBJC_IVAR____TtC7Journal24TranscriptViewController_model];
  swift_getKeyPath();
  uint64_t v29 = v9;
  sub_1002A8F2C();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  uint64_t v11 = *(void *)(v9 + 16);
  if (v11)
  {
    uint64_t v12 = *(void *)(v9 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v29 = v11;
    uint64_t result = (*(uint64_t (**)(uint64_t))(*(void *)(v12 + 8) + 8))(ObjectType);
    if (result)
    {
      uint64_t v14 = sub_1003D5D5C();
      uint64_t v15 = *((void *)v14 + 2);
      if (v15)
      {
        sub_100140F00((uint64_t)v14+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * (v15 - 1), (uint64_t)v4);
        uint64_t v16 = 0;
      }
      else
      {
        uint64_t v16 = 1;
      }
      (*(void (**)(char *, uint64_t, uint64_t, int *))(v6 + 56))(v4, v16, 1, v5);
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v6 + 48))(v4, 1, v5) == 1)
      {
        return sub_10001457C((uint64_t)v4, &qword_10080A410);
      }
      else
      {
        sub_100390DC0((uint64_t)v4, (uint64_t)v8);
        uint64_t v17 = &v8[v5[5]];
        uint64_t v19 = *(void *)v17;
        unint64_t v18 = *((void *)v17 + 1);
        uint64_t v20 = v19 & 0xFFFFFFFFFFFFLL;
        if ((v18 & 0x2000000000000000) != 0) {
          uint64_t v21 = HIBYTE(v18) & 0xF;
        }
        else {
          uint64_t v21 = v20;
        }
        if (v21)
        {
          double v22 = *(double *)&v8[v5[7]] + *(double *)&v8[v5[6]];
          int v23 = v22 + 2.0 <= sub_1003D58AC();
        }
        else
        {
          int v23 = 0;
        }
        uint64_t result = (uint64_t)[v1 view];
        if (result)
        {
          char v24 = (void *)result;
          type metadata accessor for TranscriptView();
          uint64_t v25 = swift_dynamicCastClassUnconditional();
          int v26 = *(unsigned __int8 *)(v25 + OBJC_IVAR____TtC7Journal14TranscriptView_shouldShowWaitingUI);
          *(unsigned char *)(v25 + OBJC_IVAR____TtC7Journal14TranscriptView_shouldShowWaitingUI) = v23;
          if (v23 != v26)
          {
            uint64_t v27 = (char *)v25;
            sub_1001C5220(0, 0, 0, 1);
            if (v27[OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIRange + 16] != 1) {
              [v27 scrollRangeToVisible:*(void *)&v27[OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIRange], *(void *)&v27[OBJC_IVAR____TtC7Journal14TranscriptView_waitingUIRange + 8]];
            }
          }

          return sub_100140F64((uint64_t)v8);
        }
        else
        {
          __break(1u);
        }
      }
    }
  }
  return result;
}

id sub_10038FCA4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TranscriptViewController();
  return [super dealloc];
}

uint64_t sub_10038FD74()
{
  return type metadata accessor for TranscriptViewController();
}

uint64_t type metadata accessor for TranscriptViewController()
{
  uint64_t result = qword_10080A3E0;
  if (!qword_10080A3E0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10038FDC8()
{
  sub_10038FEAC();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10038FEAC()
{
  if (!qword_10080A3F0)
  {
    type metadata accessor for TranscriptViewModelSegment(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10080A3F0);
    }
  }
}

uint64_t destroy for TranscriptViewControllerRepresentable()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for TranscriptViewControllerRepresentable(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for TranscriptViewControllerRepresentable(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_retain();
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for TranscriptViewControllerRepresentable(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TranscriptViewControllerRepresentable(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for TranscriptViewControllerRepresentable(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TranscriptViewControllerRepresentable(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TranscriptViewControllerRepresentable()
{
  return &type metadata for TranscriptViewControllerRepresentable;
}

uint64_t sub_1003901C8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC7Journal24TranscriptViewController_model);
  swift_getKeyPath();
  sub_1002A8F2C();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  long long v4 = *(double (**)(uint64_t, uint64_t))(v2 + 40);
  swift_unknownObjectRetain();
  double v5 = v4(ObjectType, v2);
  swift_unknownObjectRelease();
  return sub_10038ED4C(v5);
}

uint64_t sub_10039029C()
{
  return withObservationTracking<A>(_:onChange:)();
}

void sub_10039032C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + OBJC_IVAR____TtC7Journal24TranscriptViewController_model);
  swift_getKeyPath();
  sub_1002A8F2C();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  long long v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24);
  swift_unknownObjectRetain();
  LOBYTE(v2) = v4(ObjectType, v2);
  swift_unknownObjectRelease();
  sub_10038EF60(v2 & 1);
}

uint64_t sub_1003903F8()
{
  return withObservationTracking<A>(_:onChange:)();
}

uint64_t sub_100390488()
{
  return withObservationTracking<A>(_:onChange:)();
}

uint64_t sub_100390518()
{
  return withObservationTracking<A>(_:onChange:)();
}

void (*sub_1003905A8(uint64_t a1, uint64_t a2, uint64_t a3))()
{
  uint64_t v5 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v6[2] = v5;
  v6[3] = a2;
  v6[4] = a3;
  swift_retain();
  return sub_10039115C;
}

void sub_100390640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v9 = (void *)Strong;
    uint64_t v10 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
    type metadata accessor for MainActor();
    swift_retain();
    id v11 = v9;
    uint64_t v12 = static MainActor.shared.getter();
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = a2;
    v13[5] = a3;
    v13[6] = v11;
    sub_100328A60((uint64_t)v7, (uint64_t)&unk_10080A420, (uint64_t)v13);
    swift_release();
  }
}

uint64_t sub_1003907A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[3] = a5;
  v6[4] = a6;
  uint64_t v6[2] = a4;
  type metadata accessor for MainActor();
  v6[5] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100390844, v8, v7);
}

uint64_t sub_100390844()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void (*)(uint64_t))v0[2];
  swift_release();
  v2(v1);
  long long v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

id sub_1003908BC()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for TranscriptViewController());
  uint64_t v1 = swift_retain();
  id v2 = sub_100390B9C(v1);
  swift_release();
  return v2;
}

uint64_t sub_100390908(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = *((unsigned __int8 *)v1 + 16);
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = *((unsigned __int8 *)v1 + 40);
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)(a1 + OBJC_IVAR____TtC7Journal24TranscriptViewController_representableAdapter);
  uint64_t v10 = *(void *)(a1 + OBJC_IVAR____TtC7Journal24TranscriptViewController_representableAdapter);
  uint64_t v11 = *(void *)(a1 + OBJC_IVAR____TtC7Journal24TranscriptViewController_representableAdapter + 8);
  *uint64_t v9 = v2;
  v9[1] = v3;
  v9[2] = v4;
  v9[3] = v5;
  v9[4] = v6;
  v9[5] = v7;
  v9[6] = v8;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();

  return sub_100390B2C(v10, v11);
}

uint64_t sub_1003909E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100390D64();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100390A48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100390D64();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100390AAC()
{
}

unint64_t sub_100390AD8()
{
  unint64_t result = qword_10080A3F8;
  if (!qword_10080A3F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080A3F8);
  }
  return result;
}

uint64_t sub_100390B2C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

id sub_100390B9C(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Journal24TranscriptViewController_selectionFeedbackGenerator;
  id v4 = objc_allocWithZone((Class)UIImpactFeedbackGenerator);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  *(void *)&v5[OBJC_IVAR____TtC7Journal24TranscriptViewController_playbackTime] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal24TranscriptViewController_userInteractionDebouncingInterval] = 0x3FC999999999999ALL;
  *(void *)&v5[OBJC_IVAR____TtC7Journal24TranscriptViewController_hapticImpactIntensityForSelectionChange] = 0x3FE0000000000000;
  unint64_t v6 = &v5[OBJC_IVAR____TtC7Journal24TranscriptViewController_representableAdapter];
  *((void *)v6 + 6) = 0;
  *((_OWORD *)v6 + 1) = 0u;
  *((_OWORD *)v6 + 2) = 0u;
  *(_OWORD *)unint64_t v6 = 0u;
  *(void *)&v5[OBJC_IVAR____TtC7Journal24TranscriptViewController_transcriptTimer] = 0;
  uint64_t v7 = &v5[OBJC_IVAR____TtC7Journal24TranscriptViewController_activeSegment];
  uint64_t v8 = type metadata accessor for TranscriptViewModelSegment(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = &v5[OBJC_IVAR____TtC7Journal24TranscriptViewController_previousParagraphRange];
  *(void *)uint64_t v9 = 0;
  *((void *)v9 + 1) = 0;
  v9[16] = 1;
  *(void *)&v5[OBJC_IVAR____TtC7Journal24TranscriptViewController_model] = a1;
  swift_getKeyPath();
  uint64_t v12 = a1;
  sub_1002A8F2C();
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *(_OWORD *)&v5[OBJC_IVAR____TtC7Journal24TranscriptViewController_audioController] = *(_OWORD *)(a1 + 56);
  swift_unknownObjectRetain();

  v11.receiver = v5;
  v11.super_class = (Class)type metadata accessor for TranscriptViewController();
  return [super initWithNibName:0 bundle:0];
}

unint64_t sub_100390D64()
{
  unint64_t result = qword_10080A408;
  if (!qword_10080A408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080A408);
  }
  return result;
}

uint64_t sub_100390DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TranscriptViewModelSegment(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100390E24()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100390E5C(void *a1)
{
}

uint64_t sub_100390E64(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100390E74()
{
  return swift_release();
}

uint64_t sub_100390E7C()
{
  uint64_t v1 = *(unsigned __int8 *)(*(void *)(type metadata accessor for TranscriptViewModelSegment(0) - 8) + 80);
  uint64_t v2 = v0 + ((v1 + 16) & ~v1);
  uint64_t v3 = type metadata accessor for UUID();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100390F7C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  uint64_t v9 = *(void *)(type metadata accessor for TranscriptViewModelSegment(0) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = *(void *)(v4 + ((*(void *)(v9 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10038DF64(a1, a2, a3, a4, v4 + v10, v11);
}

uint64_t sub_100391040()
{
  return swift_deallocObject();
}

uint64_t sub_100391050(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_10080A410);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_1003910B8()
{
}

void (*sub_1003910DC())()
{
  return sub_1003905A8(v0[2], v0[3], v0[4]);
}

uint64_t sub_1003910E8()
{
  return sub_1003901C8(*(void *)(v0 + 16));
}

void sub_1003910F0()
{
  sub_10039032C(*(void *)(v0 + 16));
}

void sub_1003910F8()
{
}

uint64_t sub_10039111C()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_10039115C()
{
  sub_100390640(v0[2], v0[3], v0[4]);
}

uint64_t sub_100391168()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003911B0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10002C194;
  return sub_1003907A8(a1, v4, v5, v6, v7, v8);
}

void sub_100391278()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal24TranscriptViewController_selectionFeedbackGenerator;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImpactFeedbackGenerator) init];
  *(void *)&v0[OBJC_IVAR____TtC7Journal24TranscriptViewController_playbackTime] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal24TranscriptViewController_userInteractionDebouncingInterval] = 0x3FC999999999999ALL;
  *(void *)&v0[OBJC_IVAR____TtC7Journal24TranscriptViewController_hapticImpactIntensityForSelectionChange] = 0x3FE0000000000000;
  uint64_t v2 = &v0[OBJC_IVAR____TtC7Journal24TranscriptViewController_representableAdapter];
  *((void *)v2 + 6) = 0;
  *((_OWORD *)v2 + 1) = 0u;
  *((_OWORD *)v2 + 2) = 0u;
  *(_OWORD *)uint64_t v2 = 0u;
  *(void *)&v0[OBJC_IVAR____TtC7Journal24TranscriptViewController_transcriptTimer] = 0;
  uint64_t v3 = &v0[OBJC_IVAR____TtC7Journal24TranscriptViewController_activeSegment];
  uint64_t v4 = type metadata accessor for TranscriptViewModelSegment(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = &v0[OBJC_IVAR____TtC7Journal24TranscriptViewController_previousParagraphRange];
  *(void *)uint64_t v5 = 0;
  *((void *)v5 + 1) = 0;
  v5[16] = 1;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

unint64_t sub_1003913EC(char a1)
{
  unint64_t result = 0x6449616964656DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x656C746974;
      break;
    case 2:
      unint64_t result = 0x726F68747561;
      break;
    case 3:
      unint64_t result = 0x4C5255616964656DLL;
      break;
    case 4:
      unint64_t result = 0x79616C50656D6974;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x707954616964656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1003914D8(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100010218(&qword_10080A568);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002E0BC(a1, a1[3]);
  sub_100393B34();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v11[15] = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v2)
  {
    v11[14] = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v11[13] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    uint64_t v9 = _s12PodcastAssetC11PodcastDataVMa(0);
    v11[12] = 3;
    type metadata accessor for URL();
    sub_100393564(&qword_1007FC738, (void (*)(uint64_t))&type metadata accessor for URL);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v11[11] = 4;
    type metadata accessor for Date();
    sub_100393564(&qword_1007F99F0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    v11[10] = 5;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v11[9] = *(unsigned char *)(v3 + *(int *)(v9 + 40));
    v11[8] = 6;
    sub_1000B1860();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1003917D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v34 = a2;
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218(&qword_10080A558);
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t v36 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (int *)_s12PodcastAssetC11PodcastDataVMa(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v15 = a1[3];
  uint64_t v37 = a1;
  sub_10002E0BC(a1, v15);
  sub_100393B34();
  uint64_t v16 = v38;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v16) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v37);
  }
  uint64_t v32 = v5;
  BOOL v33 = v8;
  uint64_t v38 = v14;
  char v46 = 0;
  uint64_t v17 = v36;
  unint64_t v18 = v11;
  uint64_t v19 = KeyedDecodingContainer.decode(_:forKey:)();
  uint64_t v20 = v38;
  uint64_t *v38 = v19;
  v20[1] = v21;
  char v45 = 1;
  v20[2] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v20[3] = v22;
  char v44 = 2;
  v20[4] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v20[5] = v23;
  type metadata accessor for URL();
  char v43 = 3;
  sub_100393564(&qword_1007FC720, (void (*)(uint64_t))&type metadata accessor for URL);
  uint64_t v24 = (uint64_t)v33;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_10002C4EC(v24, (uint64_t)v20 + v12[7], (uint64_t *)&unk_100800A60);
  type metadata accessor for Date();
  char v42 = 4;
  sub_100393564(&qword_10080E9D0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v25 = (uint64_t)v32;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_10002C4EC(v25, (uint64_t)v20 + v12[8], (uint64_t *)&unk_1007FC470);
  char v41 = 5;
  uint64_t v26 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v27 = v35;
  uint64_t v28 = (char *)v20 + v12[9];
  *(void *)uint64_t v28 = v26;
  v28[8] = v29 & 1;
  char v39 = 6;
  sub_1000B174C();
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v18, v17);
  *((unsigned char *)v20 + v12[10]) = v40;
  sub_100393B88((uint64_t)v20, v34);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v37);
  return sub_100393BEC((uint64_t)v20);
}

unint64_t sub_100391D60()
{
  return sub_1003913EC(*v0);
}

uint64_t sub_100391D68@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100393EE4(a1, a2);
  *a3 = result;
  return result;
}

void sub_100391D90(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_100391D9C(uint64_t a1)
{
  unint64_t v2 = sub_100393B34();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100391DD8(uint64_t a1)
{
  unint64_t v2 = sub_100393B34();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100391E14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1003917D4(a1, a2);
}

uint64_t sub_100391E2C(void *a1)
{
  return sub_1003914D8(a1);
}

uint64_t sub_100391E44()
{
  uint64_t v1 = sub_100010218(&qword_1007F8F98);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = _s12PodcastAssetC11PodcastDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling12PodcastAsset_metadata))
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v3, 1, 1, v4, v6);
    goto LABEL_5;
  }
  swift_retain();
  sub_10003A27C((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_5:
    sub_10001457C((uint64_t)v3, &qword_1007F8F98);
    return 0;
  }
  sub_100393ACC((uint64_t)v3, (uint64_t)v8, _s12PodcastAssetC11PodcastDataVMa);
  sub_100010218((uint64_t *)&unk_10080C370);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6270;
  *(void *)(inited + 32) = *((void *)v8 + 2);
  *(_OWORD *)(inited + 40) = *(_OWORD *)(v8 + 24);
  *(void *)(inited + 56) = *((void *)v8 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_10023DA38(8236, 0xE200000000000000, inited);
  swift_setDeallocating();
  sub_100010218(&qword_100803920);
  swift_arrayDestroy();
  sub_100393BEC((uint64_t)v8);
  return v10;
}

uint64_t sub_100392080()
{
  return swift_release();
}

id sub_100392090()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s12PodcastAssetCMa(0);
  [super dealloc];
}

uint64_t sub_1003920D8()
{
  return _s12PodcastAssetCMa(0);
}

uint64_t _s12PodcastAssetCMa(uint64_t a1)
{
  return sub_10003352C(a1, (uint64_t *)&unk_10080A458);
}

uint64_t sub_100392100()
{
  return swift_updateClassMetadata2();
}

void *sub_100392144(void *a1, void *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    uint64_t v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    uint64_t v8 = a2[5];
    uint64_t v9 = a3[7];
    __dst = (char *)a1 + v9;
    uint64_t v10 = (char *)a2 + v9;
    a1[4] = a2[4];
    a1[5] = v8;
    uint64_t v11 = type metadata accessor for URL();
    uint64_t v12 = *(void *)(v11 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      uint64_t v14 = sub_100010218((uint64_t *)&unk_100800A60);
      memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v16 = a3[8];
    uint64_t v17 = (char *)v4 + v16;
    unint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = type metadata accessor for Date();
    uint64_t v20 = *(void *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      uint64_t v21 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v17, v18, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    uint64_t v22 = a3[9];
    uint64_t v23 = a3[10];
    uint64_t v24 = (char *)v4 + v22;
    uint64_t v25 = (char *)a2 + v22;
    *(void *)uint64_t v24 = *(void *)v25;
    v24[8] = v25[8];
    *((unsigned char *)v4 + v23) = *((unsigned char *)a2 + v23);
  }
  return v4;
}

uint64_t sub_100392408(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 32);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v8 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v7, 1, v8);
  if (!result)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8);
    return v10(v7, v8);
  }
  return result;
}

void *sub_100392590(void *a1, void *a2, int *a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  uint64_t v8 = a3[7];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100010218((uint64_t *)&unk_100800A60);
    memcpy(__dst, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v14 = a3[8];
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  uint64_t v17 = type metadata accessor for Date();
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    uint64_t v19 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v15, v16, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  }
  uint64_t v20 = a3[9];
  uint64_t v21 = a3[10];
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = (char *)a2 + v20;
  *(void *)uint64_t v22 = *(void *)v23;
  v22[8] = v23[8];
  *((unsigned char *)a1 + v21) = *((unsigned char *)a2 + v21);
  return a1;
}

void *sub_100392804(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[7];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100010218((uint64_t *)&unk_100800A60);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = a3[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  int v21 = v20(v16, 1, v18);
  int v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v16, v17, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_13:
  uint64_t v24 = a3[9];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  uint64_t v27 = *(void *)v26;
  v25[8] = v26[8];
  *(void *)uint64_t v25 = v27;
  *((unsigned char *)a1 + a3[10]) = *((unsigned char *)a2 + a3[10]);
  return a1;
}

_OWORD *sub_100392B54(_OWORD *a1, _OWORD *a2, int *a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = a3[7];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    uint64_t v12 = sub_100010218((uint64_t *)&unk_100800A60);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v13 = a3[8];
  uint64_t v14 = (char *)a1 + v13;
  uint64_t v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for Date();
  uint64_t v17 = *(void *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    uint64_t v18 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v14, v15, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v14, v15, v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  uint64_t v19 = a3[9];
  uint64_t v20 = a3[10];
  int v21 = (char *)a1 + v19;
  int v22 = (char *)a2 + v19;
  *(void *)int v21 = *(void *)v22;
  v21[8] = v22[8];
  *((unsigned char *)a1 + v20) = *((unsigned char *)a2 + v20);
  return a1;
}

void *sub_100392D90(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100010218((uint64_t *)&unk_100800A60);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[8];
  uint64_t v19 = (char *)a1 + v18;
  uint64_t v20 = (char *)a2 + v18;
  uint64_t v21 = type metadata accessor for Date();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v22 + 48);
  int v24 = v23(v19, 1, v21);
  int v25 = v23(v20, 1, v21);
  if (!v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 40))(v19, v20, v21);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v22 + 8))(v19, v21);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    uint64_t v26 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v19, v20, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v19, v20, v21);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
LABEL_13:
  uint64_t v27 = a3[9];
  uint64_t v28 = a3[10];
  char v29 = (char *)a1 + v27;
  uint64_t v30 = (char *)a2 + v27;
  *(void *)char v29 = *(void *)v30;
  v29[8] = v30[8];
  *((unsigned char *)a1 + v28) = *((unsigned char *)a2 + v28);
  return a1;
}

uint64_t sub_1003930AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003930C0);
}

uint64_t sub_1003930C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100010218((uint64_t *)&unk_100800A60);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 32);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_1003931F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100393208);
}

uint64_t sub_100393208(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_100010218((uint64_t *)&unk_100800A60);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 28);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 32);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t _s12PodcastAssetC11PodcastDataVMa(uint64_t a1)
{
  return sub_10003352C(a1, qword_10080A4C0);
}

void sub_10039335C()
{
  sub_1000B0C5C(319, (unint64_t *)&qword_1007F9270, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F)
  {
    sub_1000B0C5C(319, (unint64_t *)&qword_1007FAAE0, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t sub_100393488()
{
  return swift_retain();
}

uint64_t sub_100393498(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling12PodcastAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_1003934B0()
{
  return sub_100391E44();
}

uint64_t sub_1003934D4()
{
  return sub_100393564(&qword_1007F9E78, (void (*)(uint64_t))_s12PodcastAssetC11PodcastDataVMa);
}

uint64_t sub_10039351C()
{
  return sub_100393564(&qword_10080A510, (void (*)(uint64_t))_s12PodcastAssetC11PodcastDataVMa);
}

uint64_t sub_100393564(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_1003935AC(char a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12, unsigned __int8 a13)
{
  uint64_t v53 = a6;
  uint64_t v54 = a8;
  uint64_t v51 = a3;
  uint64_t v52 = a5;
  uint64_t v50 = a2;
  int v58 = a12;
  int v59 = a13;
  uint64_t v56 = a7;
  uint64_t v57 = a11;
  uint64_t v55 = a10;
  id v48 = a4;
  uint64_t v49 = a9;
  uint64_t v60 = sub_100010218(&qword_1007F9E68);
  __chkstk_darwin(v60);
  uint64_t v61 = (uint64_t)&v48 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (int *)_s12PodcastAssetC11PodcastDataVMa(0);
  __chkstk_darwin(v15);
  uint64_t v17 = (id *)((char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v18);
  uint64_t v20 = (id *)((char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = type metadata accessor for UUID();
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  int v24 = (char *)&v48 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v48 - v26;
  UUID.init()();
  uint64_t v28 = (char *)objc_allocWithZone((Class)_s12PodcastAssetCMa(0));
  *(void *)&v28[OBJC_IVAR____TtCC7Journal10Journaling12PodcastAsset_metadata] = 0;
  (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v24, v27, v21);
  id v29 = sub_1001817C4((uint64_t)v24, 4, a1);
  uint64_t v30 = *(void (**)(char *, uint64_t))(v22 + 8);
  v30(v27, v21);
  id v31 = v48;
  void *v20 = v48;
  swift_storeEnumTagMultiPayload();
  uint64_t v32 = (char *)v29;
  id v48 = v31;
  UUID.init()();
  uint64_t v33 = UUID.uuidString.getter();
  uint64_t v35 = v34;
  v30(v27, v21);
  type metadata accessor for AssetAttachment(0);
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = 0;
  sub_100393ACC((uint64_t)v20, v36 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
  uint64_t v37 = (uint64_t *)(v36 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID);
  uint64_t *v37 = v33;
  v37[1] = v35;
  uint64_t v38 = &v32[OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments];
  swift_beginAccess();
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*(void *)v38 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)v38 & 0xFFFFFFFFFFFFFF8)
                                                                               + 0x18) >> 1)
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();

  uint64_t v39 = v51;
  void *v17 = v50;
  v17[1] = v39;
  uint64_t v40 = v53;
  v17[2] = v52;
  v17[3] = v40;
  uint64_t v41 = v49;
  v17[4] = v54;
  v17[5] = v41;
  sub_10002C4EC(v56, (uint64_t)v17 + v15[7], (uint64_t *)&unk_100800A60);
  sub_10002C4EC(v55, (uint64_t)v17 + v15[8], (uint64_t *)&unk_1007FC470);
  char v42 = (char *)v17 + v15[9];
  *(void *)char v42 = v57;
  v42[8] = v58 & 1;
  *((unsigned char *)v17 + v15[10]) = v59;
  uint64_t v43 = v61;
  sub_100393ACC((uint64_t)v17, v61, _s12PodcastAssetC11PodcastDataVMa);
  swift_storeEnumTagMultiPayload();
  sub_100010218(&qword_10080A550);
  uint64_t v44 = swift_allocObject();
  uint64_t v45 = v44 + *(void *)(*(void *)v44 + 104);
  uint64_t v46 = sub_100010218(&qword_1007F8F98);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
  *(_OWORD *)(v44 + *(void *)(*(void *)v44 + 112)) = xmmword_1006D6A80;
  sub_10002C4EC(v43, v44 + *(void *)(*(void *)v44 + 120), &qword_1007F9E68);
  *(void *)&v32[OBJC_IVAR____TtCC7Journal10Journaling12PodcastAsset_metadata] = v44;

  swift_release();
  return v32;
}

uint64_t sub_100393ACC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_100393B34()
{
  unint64_t result = qword_10080A560;
  if (!qword_10080A560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080A560);
  }
  return result;
}

uint64_t sub_100393B88(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s12PodcastAssetC11PodcastDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100393BEC(uint64_t a1)
{
  uint64_t v2 = _s12PodcastAssetC11PodcastDataVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t _s12PodcastAssetC11PodcastDataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12PodcastAssetC11PodcastDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100393DA4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *_s12PodcastAssetC11PodcastDataV10CodingKeysOMa()
{
  return &_s12PodcastAssetC11PodcastDataV10CodingKeysON;
}

unint64_t sub_100393DE0()
{
  unint64_t result = qword_10080A570;
  if (!qword_10080A570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080A570);
  }
  return result;
}

unint64_t sub_100393E38()
{
  unint64_t result = qword_10080A578;
  if (!qword_10080A578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080A578);
  }
  return result;
}

unint64_t sub_100393E90()
{
  unint64_t result = qword_10080A580;
  if (!qword_10080A580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080A580);
  }
  return result;
}

uint64_t sub_100393EE4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6449616964656DLL && a2 == 0xE700000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C746974 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F68747561 && a2 == 0xE600000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x4C5255616964656DLL && a2 == 0xE800000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x79616C50656D6974 && a2 == 0xEA00000000006465 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x800000010068A640 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

UIImage *sub_1003941CC(double a1)
{
  [v1 size];
  double v4 = v3;
  [v17 scale];
  double v6 = v4 * v5;
  [v17 size];
  double v8 = v7;
  [v17 scale];
  double v10 = v8 * v9;
  if (v6 * v10 > a1)
  {
    double v11 = sqrt(a1 / (v6 * v10));
    CGFloat v12 = v6 * v11;
    CGFloat v13 = v10 * v11;
    v19.width = v12;
    v19.height = v13;
    UIGraphicsBeginImageContextWithOptions(v19, 0, 1.0);
    [v17 drawInRect:0.0, 0.0, v12, v13];
    uint64_t v15 = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();
    if (v15) {
      return v15;
    }
  }

  return (UIImage *)v17;
}

id sub_1003942F8(void *a1, CGFloat a2, CGFloat a3)
{
  UIGraphicsBeginImageContextWithOptions(*(CGSize *)&a2, 0, 0.0);
  [a1 setFill];
  v11.origin.x = 0.0;
  v11.origin.y = 0.0;
  v11.size.width = a2;
  v11.size.height = a3;
  UIRectFill(v11);
  double v6 = UIGraphicsGetImageFromCurrentImageContext();
  UIGraphicsEndImageContext();
  if (!v6) {
    goto LABEL_5;
  }
  double v7 = [(UIImage *)v6 CGImage];
  if (!v7)
  {

LABEL_5:
    return 0;
  }
  double v8 = v7;
  id v9 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithCGImage:v7];

  return v9;
}

UIImage *sub_1003943D8(CGFloat a1)
{
  [v1 size];
  double v4 = v3 * a1;
  [v9 size];
  double v6 = v4 / v5;
  if (v6 * a1 <= 0.0)
  {
    return (UIImage *)v9;
  }
  else
  {
    v11.width = v6;
    v11.height = a1;
    UIGraphicsBeginImageContextWithOptions(v11, 0, 0.0);
    [v9 drawInRect:0.0, 0.0, v6, a1];
    double v7 = UIGraphicsGetImageFromCurrentImageContext();
    if (!v7) {
      double v7 = (UIImage *)v9;
    }
    UIGraphicsEndImageContext();
    return v7;
  }
}

uint64_t sub_1003944C0(double a1)
{
  *(void *)(v2 + 136) = v1;
  *(double *)(v2 + 128) = a1;
  uint64_t v3 = type metadata accessor for OSSignpostID();
  *(void *)(v2 + 144) = v3;
  *(void *)(v2 + 152) = *(void *)(v3 - 8);
  *(void *)(v2 + 160) = swift_task_alloc();
  *(void *)(v2 + 168) = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Logger();
  *(void *)(v2 + 176) = v4;
  *(void *)(v2 + 184) = *(void *)(v4 - 8);
  *(void *)(v2 + 192) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for OSSignposter();
  *(void *)(v2 + 200) = v5;
  *(void *)(v2 + 208) = *(void *)(v5 - 8);
  *(void *)(v2 + 216) = swift_task_alloc();
  return _swift_task_switch(sub_10039464C, 0, 0);
}

uint64_t sub_10039464C()
{
  if (qword_1007F6ED0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 184);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v3 = *(void *)(v0 + 176);
  uint64_t v4 = sub_100026A54(v3, (uint64_t)qword_10080A588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  OSSignposter.init(logger:)();
  static OSSignpostID.exclusive.getter();
  uint64_t v5 = OSSignposter.logHandle.getter();
  os_signpost_type_t v6 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v7 = *(void *)(v0 + 160);
    uint64_t v8 = *(void *)(v0 + 144);
    uint64_t v9 = *(void *)(v0 + 152);
    double v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    v10(v7, *(void *)(v0 + 168), v8);
    CGSize v11 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)CGSize v11 = 0;
    os_signpost_id_t v12 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v5, v6, v12, "createThumbnail", "", v11, 2u);
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 152);

    double v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  }
  uint64_t v14 = *(void *)(v0 + 168);
  uint64_t v15 = *(void *)(v0 + 144);
  uint64_t v16 = *(void *)(v0 + 152);
  id v17 = *(void **)(v0 + 136);
  v10(*(void *)(v0 + 160), v14, v15);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  *(void *)(v0 + 224) = OSSignpostIntervalState.init(id:isOpen:)();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  [v17 size];
  double v18 = *(double *)(v0 + 128);
  BOOL v21 = v20 < v19;
  double v22 = v20 / v19 * v18;
  double v23 = v19 / v20 * v18;
  if (v21) {
    double v24 = *(double *)(v0 + 128);
  }
  else {
    double v24 = v22;
  }
  if (v21) {
    double v25 = v23;
  }
  else {
    double v25 = *(double *)(v0 + 128);
  }
  uint64_t v26 = *(void **)(v0 + 136);
  *(void *)(v0 + 16) = v0;
  *(void *)(v0 + 56) = v0 + 120;
  *(void *)(v0 + 24) = sub_100394944;
  uint64_t v27 = swift_continuation_init();
  *(void *)(v0 + 80) = _NSConcreteStackBlock;
  *(void *)(v0 + 88) = 0x40000000;
  *(void *)(v0 + 96) = sub_10052A098;
  *(void *)(v0 + 104) = &unk_1007A8020;
  *(void *)(v0 + 112) = v27;
  [v26 prepareThumbnailOfSize:v0 + 80 completionHandler:v25, v24];
  return _swift_continuation_await(v0 + 16);
}

uint64_t sub_100394944()
{
  return _swift_task_switch(sub_100394A24, 0, 0);
}

uint64_t sub_100394A24()
{
  uint64_t v1 = v0[27];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v4 = v0[15];
  sub_10039534C(v1, (unint64_t)"createThumbnail", 15, 2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(uint64_t))v0[1];
  return v5(v4);
}

id sub_100394B08(double a1)
{
  sub_100010218(&qword_10080A5A0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6280;
  *(void *)(inited + 32) = kCGImageSourceShouldCache;
  *(unsigned char *)(inited + 40) = 1;
  CFStringRef v3 = (id)kCGImageSourceShouldCache;
  sub_100396DE4(inited);
  type metadata accessor for CFString(0);
  sub_100394F3C();
  v4.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  URL._bridgeToObjectiveC()(v5);
  CFURLRef v7 = v6;
  uint64_t v8 = CGImageSourceCreateWithURL(v6, v4.super.isa);

  if (!v8)
  {
    if (qword_1007F6ED0 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100026A54(v19, (uint64_t)qword_10080A588);
    double v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      double v22 = (uint8_t *)swift_slowAlloc();
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)double v22 = 136315138;
      uint64_t v23 = _typeName(_:qualified:)();
      sub_10011EA98(v23, v24, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "%s.createImage | Failed to create CGImageSource with URL", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return 0;
    }

LABEL_14:
    return 0;
  }
  sub_100010218(&qword_10080A5A8);
  uint64_t v9 = swift_initStackObject();
  *(_OWORD *)(v9 + 16) = xmmword_1006D70D0;
  *(void *)(v9 + 32) = kCGImageSourceCreateThumbnailFromImageAlways;
  *(unsigned char *)(v9 + 40) = 1;
  *(void *)(v9 + 64) = &type metadata for Bool;
  *(void *)(v9 + 72) = kCGImageSourceCreateThumbnailWithTransform;
  *(unsigned char *)(v9 + 80) = 1;
  double v10 = (void *)kCGImageSourceSkipMetadata;
  *(void *)(v9 + 104) = &type metadata for Bool;
  *(void *)(v9 + 112) = v10;
  *(unsigned char *)(v9 + 120) = 1;
  *(void *)(v9 + 144) = &type metadata for Bool;
  *(void *)(v9 + 152) = kCGImageSourceThumbnailMaxPixelSize;
  *(void *)(v9 + 184) = &type metadata for CGFloat;
  *(double *)(v9 + 160) = a1;
  CFStringRef v11 = (id)kCGImageSourceCreateThumbnailFromImageAlways;
  CFStringRef v12 = (id)kCGImageSourceCreateThumbnailWithTransform;
  id v13 = v10;
  CFStringRef v14 = (id)kCGImageSourceThumbnailMaxPixelSize;
  sub_100396EE4(v9);
  v15.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  CGImageRef ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(v8, 0, v15.super.isa);
  if (!ThumbnailAtIndex)
  {
    if (qword_1007F6ED0 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_100026A54(v25, (uint64_t)qword_10080A588);
    uint64_t v26 = Logger.logObject.getter();
    os_log_type_t v27 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, v27, "Image downsample failed.", v28, 2u);
      swift_slowDealloc();

      return 0;
    }

    goto LABEL_14;
  }
  CGImageRef v17 = ThumbnailAtIndex;
  id v18 = [objc_allocWithZone((Class)UIImage) initWithCGImage:ThumbnailAtIndex];

  return v18;
}

unint64_t sub_100394F3C()
{
  unint64_t result = qword_1007F8AB8;
  if (!qword_1007F8AB8)
  {
    type metadata accessor for CFString(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F8AB8);
  }
  return result;
}

uint64_t sub_100394F94()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_10080A588);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_10080A588);
  if (qword_1007F7D50 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EBF0);
  CFStringRef v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

UIImage *sub_10039505C(void *a1)
{
  CFAbsoluteTimeGetCurrent();
  if (![a1 imageOrientation]
    || ([a1 size],
        UIGraphicsBeginImageContext(v4),
        objc_msgSend(a1, "drawAtPoint:", 0.0, 0.0),
        uint64_t v2 = UIGraphicsGetImageFromCurrentImageContext(),
        UIGraphicsEndImageContext(),
        !v2))
  {
    uint64_t v2 = a1;
  }
  sub_100395104();
  return v2;
}

void sub_100395104()
{
  v7[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(46);
  v0._countAndFlagsBits = _typeName(_:qualified:)();
  String.append(_:)(v0);
  swift_bridgeObjectRelease();
  v1._object = (void *)0x800000010069AAA0;
  v1._countAndFlagsBits = 0xD000000000000022;
  String.append(_:)(v1);
  CFAbsoluteTimeGetCurrent();
  Double.write<A>(to:)();
  v2._countAndFlagsBits = 0x73646E6F63657320;
  v2._object = (void *)0xE800000000000000;
  String.append(_:)(v2);
  if (qword_1007F6ED0 != -1) {
    swift_once();
  }
  uint64_t v3 = type metadata accessor for Logger();
  sub_100026A54(v3, (uint64_t)qword_10080A588);
  swift_bridgeObjectRetain();
  CGSize v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v4, v5))
  {
    CFURLRef v6 = (uint8_t *)swift_slowAlloc();
    v7[0] = swift_slowAlloc();
    *(_DWORD *)CFURLRef v6 = 136315138;
    swift_bridgeObjectRetain();
    sub_10011EA98(0, 0xE000000000000000, v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "%s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_10039534C(uint64_t a1, unint64_t a2, uint64_t a3, char a4)
{
  unint64_t v26 = a2;
  uint64_t v5 = type metadata accessor for OSSignpostError();
  uint64_t v25 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  CFURLRef v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for OSSignpostID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  CFStringRef v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  CFStringRef v14 = &v23[-v13];
  NSDictionary v15 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  int v24 = static os_signpost_type_t.end.getter();
  if ((OS_os_log.signpostsEnabled.getter() & 1) == 0) {
    goto LABEL_5;
  }
  if ((a4 & 1) == 0)
  {
    uint64_t v16 = (char *)v26;
    if (!v26)
    {
      __break(1u);
LABEL_5:

      return (*(uint64_t (**)(unsigned char *, uint64_t))(v9 + 8))(v14, v8);
    }
    goto LABEL_10;
  }
  uint64_t result = v26;
  if (HIDWORD(v26))
  {
    __break(1u);
    goto LABEL_16;
  }
  if (v26 >> 11 == 27)
  {
LABEL_17:
    __break(1u);
    return result;
  }
  if (WORD1(v26) > 0x10u)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v16 = sub_10036BBB8();
LABEL_10:
  swift_retain();
  checkForErrorAndConsumeState(state:)();
  swift_release();
  uint64_t v18 = v25;
  if ((*(unsigned int (**)(unsigned char *, uint64_t))(v25 + 88))(v7, v5) == enum case for OSSignpostError.doubleEnd(_:))
  {
    uint64_t v19 = "[Error] Interval already ended";
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t))(v18 + 8))(v7, v5);
    uint64_t v19 = "";
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v9 + 16))(v11, v14, v8);
  double v20 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)double v20 = 0;
  os_signpost_id_t v21 = OSSignpostID.rawValue.getter();
  _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, (os_signpost_type_t)v24, v21, v16, v19, v20, 2u);
  swift_slowDealloc();

  double v22 = *(void (**)(unsigned char *, uint64_t))(v9 + 8);
  v22(v14, v8);
  return ((uint64_t (*)(unsigned char *, uint64_t))v22)(v11, v8);
}

void sub_100395664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  type metadata accessor for JurassicAlertController();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v13 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v15 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v13 message:v14 preferredStyle:1];

  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = a5;
  v16[3] = a6;
  v16[4] = a7;
  v16[5] = a8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v17 = String._bridgeToObjectiveC()();
  unsigned char v23[4] = sub_100396058;
  v23[5] = v16;
  v23[0] = _NSConcreteStackBlock;
  v23[1] = 1107296256;
  v23[2] = sub_10007453C;
  v23[3] = &unk_1007A8060;
  uint64_t v18 = _Block_copy(v23);
  swift_release();
  uint64_t v19 = self;
  id v20 = [v19 actionWithTitle:v17 style:0 handler:v18];
  _Block_release(v18);

  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [v19 actionWithTitle:v21 style:1 handler:0];

  [v15 addAction:v22];
  [v15 addAction:v20];
  [v8 presentViewController:v15 animated:1 completion:0];
}

uint64_t sub_1003958D8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  uint64_t v19 = a3;
  uint64_t v20 = a2;
  v17[1] = a1;
  uint64_t v22 = a4;
  uint64_t v18 = type metadata accessor for URLQueryItem();
  uint64_t v4 = *(void *)(v18 - 8);
  uint64_t v5 = v4;
  __chkstk_darwin(v18);
  v17[0] = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for URLComponents();
  uint64_t v7 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  URLComponents.init()();
  URLComponents.scheme.setter();
  URLComponents.host.setter();
  sub_100010218(&qword_1008061C0);
  uint64_t v10 = *(void *)(v4 + 72);
  unint64_t v11 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1006DC550;
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  URLQueryItem.init(name:value:)();
  uint64_t v23 = v19;
  sub_100010218(&qword_100800A70);
  sub_1000245BC();
  BidirectionalCollection<>.joined(separator:)();
  URLQueryItem.init(name:value:)();
  swift_bridgeObjectRelease();
  if (v20)
  {
    uint64_t v13 = v17[0];
    URLQueryItem.init(name:value:)();
    unint64_t v15 = *(void *)(v12 + 16);
    unint64_t v14 = *(void *)(v12 + 24);
    if (v15 >= v14 >> 1) {
      unint64_t v12 = sub_1002A7114(v14 > 1, v15 + 1, 1, v12);
    }
    *(void *)(v12 + 16) = v15 + 1;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v5 + 32))(v12 + v11 + v15 * v10, v13, v18);
  }
  URLComponents.queryItems.setter();
  URLComponents.url.getter();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v21);
}

uint64_t type metadata accessor for TapToRadarUtilities()
{
  return self;
}

uint64_t sub_100395CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v7 - 8);
  os_log_type_t v27 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for URL();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v26 - v17;
  type metadata accessor for TapToRadarUtilities();
  uint64_t v28 = 0x6C616E72756F4ALL;
  unint64_t v29 = 0xE700000000000000;
  uint64_t v30 = 0x37333037383531;
  unint64_t v31 = 0xE700000000000000;
  uint64_t v32 = 5459817;
  unint64_t v33 = 0xE300000000000000;
  sub_1003958D8(a4, a5, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_100052EAC((uint64_t)v11);
  }
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v20(v18, v11, v12);
  uint64_t v21 = type metadata accessor for TaskPriority();
  uint64_t v22 = (uint64_t)v27;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v27, 1, 1, v21);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v18, v12);
  type metadata accessor for MainActor();
  uint64_t v23 = static MainActor.shared.getter();
  unint64_t v24 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v25 = swift_allocObject();
  *(void *)(v25 + 16) = v23;
  *(void *)(v25 + 24) = &protocol witness table for MainActor;
  v20((char *)(v25 + v24), v15, v12);
  sub_100328A8C(v22, (uint64_t)&unk_10080A658, v25);
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v12);
}

uint64_t sub_100396018()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100396058(uint64_t a1)
{
  return sub_100395CE4(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_100396064(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100396074()
{
  return swift_release();
}

uint64_t sub_10039607C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[15] = a1;
  v4[16] = a4;
  type metadata accessor for MainActor();
  v4[17] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[18] = v6;
  v4[19] = v5;
  return _swift_task_switch(sub_100396114, v6, v5);
}

uint64_t sub_100396114()
{
  id v1 = [self sharedApplication];
  v0[20] = v1;
  URL._bridgeToObjectiveC()(v2);
  uint64_t v4 = v3;
  v0[21] = v3;
  sub_100397800((uint64_t)_swiftEmptyArrayStorage);
  type metadata accessor for OpenExternalURLOptionsKey(0);
  sub_100320218();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  v0[22] = isa;
  swift_bridgeObjectRelease();
  v0[2] = v0;
  v0[7] = v0 + 23;
  v0[3] = sub_1003962AC;
  uint64_t v6 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1002DA94C;
  v0[13] = &unk_1007A80B0;
  v0[14] = v6;
  [v1 openURL:v4 options:isa completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1003962AC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  uint64_t v2 = *(void *)(*(void *)v0 + 144);
  return _swift_task_switch(sub_1003963B4, v2, v1);
}

uint64_t sub_1003963B4()
{
  uint64_t v1 = *(void **)(v0 + 168);
  uint64_t v2 = *(void **)(v0 + 176);
  uint64_t v3 = *(void **)(v0 + 160);
  uint64_t v4 = *(unsigned char **)(v0 + 120);
  swift_release();
  *uint64_t v4 = *(unsigned char *)(v0 + 184);

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_10039643C()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100396508(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  uint64_t v7 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_10002C194;
  return sub_10039607C(a1, v5, v6, v7);
}

unint64_t sub_1003965F4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100010218(&qword_10080A7B8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_10001B5D0(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *unint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100396710(uint64_t a1)
{
  return sub_1003968A4(a1, &qword_10080A720, &qword_10080A728, (uint64_t (*)(uint64_t))sub_10001B6A4);
}

unint64_t sub_100396738(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100010218((uint64_t *)&unk_10080A150);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10001B220(v6, (uint64_t)v15, &qword_10080A6A0);
    unint64_t result = sub_10001B738((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_10002102C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10039687C(uint64_t a1)
{
  return sub_1003968A4(a1, &qword_10080A6D8, &qword_10080A6E0, (uint64_t (*)(uint64_t))sub_10001B6A4);
}

unint64_t sub_1003968A4(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    char v8 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100010218(a2);
  uint64_t v7 = static _DictionaryStorage.allocate(capacity:)();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10001B220(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_10002102C(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003969D4(uint64_t a1)
{
  return sub_1003968A4(a1, &qword_10080A750, &qword_10080A758, sub_10001B6A4);
}

unint64_t sub_1003969FC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100010218(&qword_10080A778);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    unint64_t result = sub_10001B77C(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100396B00(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100010218(&qword_10080A788);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_10001B6A4(v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100396C0C(uint64_t a1)
{
  return sub_1003968A4(a1, &qword_10080A700, &qword_10080A708, sub_10001B6A4);
}

unint64_t sub_100396C34(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100010218(&qword_10080A6E8);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10001B220(v6, (uint64_t)&v15, (uint64_t *)&unk_10080A6F0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_10001B5D0(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_10002102C(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100396D6C(uint64_t a1)
{
  return sub_1003968A4(a1, &qword_10080A6B0, &qword_10080A6B8, sub_10001B6A4);
}

unint64_t sub_100396D94(uint64_t a1)
{
  return sub_1003968A4(a1, &qword_10080A688, (uint64_t *)&unk_10080A690, sub_10001B6A4);
}

unint64_t sub_100396DBC(uint64_t a1)
{
  return sub_1003968A4(a1, &qword_10080A220, (uint64_t *)&unk_10080A7D0, sub_10001B6A4);
}

unint64_t sub_100396DE4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100010218(&qword_10080A6D0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (id *)(a1 + 40);
  while (1)
  {
    char v5 = *(unsigned char *)v4;
    id v6 = *(v4 - 1);
    unint64_t result = sub_10001B934((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v6;
    *(unsigned char *)(v2[7] + result) = v5;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100396EE4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100010218(&qword_10080A6C0);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10001B220(v6, (uint64_t)&v13, &qword_10080A6C8);
    uint64_t v7 = v13;
    unint64_t result = sub_10001B934(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_10002102C(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100397014(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100010218(&qword_10080A6A8);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_10001B5D0(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100397138(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100010218((uint64_t *)&unk_10080A730);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_10001B6A4(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v12;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100397238(uint64_t a1)
{
  return sub_1003968A4(a1, &qword_1008112C0, &qword_10080A740, sub_10001B6A4);
}

unint64_t sub_100397260(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100010218(&qword_10080A7A0);
  uint64_t v2 = static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10001B220(v6, (uint64_t)&v13, (uint64_t *)&unk_10080A7A8);
    uint64_t v7 = v13;
    unint64_t result = sub_10001B6A4(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = sub_1000685B8((uint64_t)&v14, v3[7] + 32 * result);
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100397390(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100010218((uint64_t *)&unk_1008112A0);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_10001B5D0(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    BOOL v11 = (uint64_t *)(v2[6] + 16 * result);
    *BOOL v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003974AC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100010218(&qword_10080A790);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_10001B5D0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003975C8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100010218(&qword_10080A748);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    unint64_t result = sub_10001B6A4(v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1003976D4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100010218(&qword_10080A770);
  uint64_t v2 = (void *)static _DictionaryStorage.allocate(capacity:)();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (_OWORD *)(a1 + 40);
  while (1)
  {
    long long v11 = *v4;
    id v5 = *((id *)v4 - 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_10001BE38((uint64_t)v5);
    if (v7) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v5;
    *(_OWORD *)(v2[7] + 16 * result) = v11;
    uint64_t v8 = v2[2];
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (v9) {
      goto LABEL_11;
    }
    v2[2] = v10;
    uint64_t v4 = (_OWORD *)((char *)v4 + 24);
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100397800(uint64_t a1)
{
  return sub_1003968A4(a1, &qword_10080A760, &qword_10080A768, sub_10001B6A4);
}

unint64_t sub_100397828(uint64_t a1)
{
  return sub_1003968A4(a1, &qword_10080A710, &qword_10080A718, sub_10001B6A4);
}

id sub_100397850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    if (a4)
    {
LABEL_3:
      NSString v11 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    NSString v10 = 0;
    if (a4) {
      goto LABEL_3;
    }
  }
  NSString v11 = 0;
LABEL_6:
  type metadata accessor for JurassicAlertController();
  id v12 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v10 message:v11 preferredStyle:1];

  if (qword_1007F7478 != -1) {
    swift_once();
  }
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = a5;
  *(void *)(v13 + 24) = a6;
  swift_bridgeObjectRetain();
  swift_retain();
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  v18[4] = sub_100010848;
  v18[5] = v13;
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 1107296256;
  v18[2] = sub_10007453C;
  void v18[3] = &unk_1007A80F0;
  uint64_t v15 = _Block_copy(v18);
  swift_release();
  id v16 = [self actionWithTitle:v14 style:0 handler:v15];
  _Block_release(v15);

  [v12 addAction:v16];
  [v6 presentViewController:v12 animated:1 completion:0];
  return v12;
}

Swift::Void __swiftcall UIAlertController.setMessageAlignment(_:)(NSTextAlignment a1)
{
  id v3 = [self defaultParagraphStyle];
  [v3 mutableCopy];

  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  uint64_t v4 = sub_10001B284(0, (unint64_t *)&unk_10080A660);
  swift_dynamicCast();
  [v23 setAlignment:a1];
  id v5 = [v1 message];
  if (v5)
  {
    id v6 = v5;
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  sub_100010218(&qword_100802498);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D7C30;
  *(void *)(inited + 32) = NSParagraphStyleAttributeName;
  *(void *)(inited + 40) = v23;
  *(void *)(inited + 64) = v4;
  *(void *)(inited + 72) = NSFontAttributeName;
  uint64_t v8 = self;
  BOOL v9 = NSParagraphStyleAttributeName;
  id v10 = v23;
  NSString v11 = NSFontAttributeName;
  id v12 = [v8 systemFontOfSize:12.0];
  uint64_t v13 = sub_10001B284(0, (unint64_t *)&unk_10080A670);
  *(void *)(inited + 80) = v12;
  *(void *)(inited + 104) = v13;
  *(void *)(inited + 112) = NSForegroundColorAttributeName;
  NSString v14 = self;
  uint64_t v15 = NSForegroundColorAttributeName;
  id v16 = [v14 blackColor];
  *(void *)(inited + 144) = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
  *(void *)(inited + 120) = v16;
  sub_1003968A4(inited, &qword_10080A220, (uint64_t *)&unk_10080A7D0, sub_10001B6A4);
  id v17 = objc_allocWithZone((Class)NSMutableAttributedString);
  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10002103C();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v20 = [v17 initWithString:v18 attributes:isa];

  id v21 = v20;
  NSString v22 = String._bridgeToObjectiveC()();
  [v1 setValue:v21 forKey:v22];
}

uint64_t sub_100397DC4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100397DFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100397E0C()
{
  return swift_release();
}

unint64_t sub_100397E14(double *a1)
{
  uint64_t v1 = *((void *)a1 + 2);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_100010218((uint64_t *)&unk_10080A7C0);
  id v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  double v4 = a1[4];
  double v5 = a1[5];
  double v6 = a1[6];
  unint64_t result = sub_10001BAD0(v4, v5);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_unknownObjectRetain();
    return (unint64_t)v3;
  }
  BOOL v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    id v10 = (double *)(v3[6] + 16 * result);
    *id v10 = v4;
    v10[1] = v5;
    *(double *)(v3[7] + 8 * result) = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    NSString v14 = v9 + 3;
    double v4 = *(v9 - 2);
    double v5 = *(v9 - 1);
    double v15 = *v9;
    swift_unknownObjectRetain();
    unint64_t result = sub_10001BAD0(v4, v5);
    BOOL v9 = v14;
    double v6 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100397F2C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100010218(&qword_10080A780);
    id v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
    for (uint64_t i = (double *)(a1 + 144); ; i += 15)
    {
      uint64_t v24 = v1;
      double v5 = *(i - 14);
      double v6 = *(i - 13);
      long long v25 = *((_OWORD *)i - 6);
      long long v26 = *((_OWORD *)i - 5);
      char v7 = *((unsigned char *)i - 64);
      uint64_t v9 = *((void *)i - 7);
      uint64_t v8 = *((void *)i - 6);
      char v10 = *((unsigned char *)i - 40);
      uint64_t v12 = *((void *)i - 4);
      uint64_t v11 = *((void *)i - 3);
      uint64_t v13 = *((void *)i - 2);
      uint64_t v14 = *((void *)i - 1);
      double v15 = *i;
      unint64_t result = sub_10001BAD0(v5, v6);
      if (v17) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      NSString v18 = (double *)(v3[6] + 16 * result);
      *NSString v18 = v5;
      v18[1] = v6;
      uint64_t v19 = v3[7] + 104 * result;
      *(_OWORD *)uint64_t v19 = v25;
      *(_OWORD *)(v19 + 16) = v26;
      *(unsigned char *)(v19 + 32) = v7;
      *(void *)(v19 + 40) = v9;
      *(void *)(v19 + 48) = v8;
      *(unsigned char *)(v19 + 56) = v10;
      *(void *)(v19 + 64) = v12;
      *(void *)(v19 + 72) = v11;
      *(void *)(v19 + 80) = v13;
      *(void *)(v19 + 88) = v14;
      *(double *)(v19 + 96) = v15;
      uint64_t v20 = v3[2];
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21) {
        goto LABEL_10;
      }
      v3[2] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v23 = (id)v26;
      swift_bridgeObjectRetain();
      uint64_t v1 = v24 - 1;
      if (v24 == 1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_1003980A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (unint64_t)&_swiftEmptyDictionarySingleton;
  }
  sub_100010218(&qword_10080A798);
  id v3 = (void *)static _DictionaryStorage.allocate(capacity:)();
  char v4 = *(unsigned char *)(a1 + 32);
  double v5 = *(void **)(a1 + 40);
  unint64_t result = sub_10001BDC8(v4);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    id v16 = v5;
    return (unint64_t)v3;
  }
  uint64_t v8 = (void *)(a1 + 56);
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v3[6] + result) = v4;
    *(void *)(v3[7] + 8 * result) = v5;
    uint64_t v9 = v3[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      break;
    }
    v3[2] = v11;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v12 = v8 + 2;
    char v4 = *((unsigned char *)v8 - 8);
    uint64_t v13 = (void *)*v8;
    id v14 = v5;
    unint64_t result = sub_10001BDC8(v4);
    uint64_t v8 = v12;
    double v5 = v13;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1003981A0()
{
  uint64_t v0 = self;
  id v1 = [v0 sharedInstance];
  id v2 = [v1 onboardingFlowCompletionStatus];

  if (v2 != (id)2)
  {
    id v3 = [v0 sharedInstance];
    id v4 = [v3 onboardingFlowCompletionStatus];

    if (v4 != (id)3) {
      return 0;
    }
  }
  double v5 = self;
  id v6 = [v5 sharedInstance];
  unsigned int v7 = [v6 getStateForSetting:0];

  if (!v7) {
    return 1;
  }
  id v8 = [v5 sharedInstance];
  unsigned __int8 v9 = [v8 getStateForSetting:1];

  if (v9) {
    return 0;
  }
  id v10 = [v5 sharedInstance];
  unsigned __int8 v11 = [v10 getStateForSetting:3];

  if (v11) {
    return 0;
  }
  id v12 = [v5 sharedInstance];
  unsigned __int8 v13 = [v12 getStateForSetting:2];

  if (v13) {
    return 0;
  }
  id v14 = [v5 sharedInstance];
  unsigned __int8 v15 = [v14 getStateForSetting:4];

  if (v15) {
    return 0;
  }
  id v16 = [v5 sharedInstance];
  unsigned __int8 v17 = [v16 getStateForSetting:5];

  if (v17) {
    return 0;
  }
  id v18 = [v5 sharedInstance];
  unsigned __int8 v19 = [v18 getStateForSetting:9];

  if (v19) {
    return 0;
  }
  id v21 = [v5 sharedInstance];
  unsigned int v22 = [v21 getStateForSetting:10];

  return v22 ^ 1;
}

void sub_1003983E0()
{
  id v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC7Journal15CanvasStackView_journalEntry];
  if (v5)
  {
    uint64_t v6 = OBJC_IVAR____TtC7Journal15CanvasStackView_mindfulMinuteCanvasTipTask;
    if (*(void *)&v0[OBJC_IVAR____TtC7Journal15CanvasStackView_mindfulMinuteCanvasTipTask])
    {
      swift_retain();
      swift_retain();
      sub_100010218((uint64_t *)&unk_1007FC0D0);
      Task.cancel()();
      swift_release();
    }
    else
    {
      swift_retain();
    }
    uint64_t v7 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    type metadata accessor for MainActor();
    id v8 = v0;
    uint64_t v9 = static MainActor.shared.getter();
    id v10 = (void *)swift_allocObject();
    v10[2] = v9;
    v10[3] = &protocol witness table for MainActor;
    v10[4] = v8;
    *(void *)&v1[v6] = sub_1005D74B4((uint64_t)v4, (uint64_t)&unk_10080A830, (uint64_t)v10);
    swift_release();
    if (*(unsigned char *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showPhotoMemoryBanner) == 1) {
      sub_100399AA4(1);
    }
    unsigned __int8 v11 = (void *)sub_100339674();
    if (v11)
    {
      sub_10033AA5C(v11);
      if (v12)
      {

        sub_100399628();
      }
    }
    swift_release();
  }
}

id sub_1003985C8(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC7Journal15CanvasStackView_reflectionPromptView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC7Journal15CanvasStackView_journalEntry] = 0;
  *(void *)&v4[OBJC_IVAR____TtC7Journal15CanvasStackView_mindfulMinutesCanvasTipView] = 0;
  *(void *)&v4[OBJC_IVAR____TtC7Journal15CanvasStackView_mindfulMinuteCanvasTipTask] = 0;
  v13.receiver = v4;
  v13.super_class = (Class)type metadata accessor for CanvasStackView();
  id v9 = [super initWithFrame:a1, a2, a3, a4];
  [v9 setAxis:1];
  [v9 setDistribution:0];
  [v9 setAlignment:0];
  uint64_t v10 = qword_1007F7380;
  id v11 = v9;
  if (v10 != -1) {
    swift_once();
  }
  [v11 setSpacing:*(double *)&qword_10083D990];

  return v11;
}

uint64_t sub_1003987C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[11] = a4;
  uint64_t v5 = type metadata accessor for Tips.InvalidationReason();
  v4[12] = v5;
  v4[13] = *(void *)(v5 - 8);
  v4[14] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_10080CFA0);
  v4[15] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Tips.Status();
  v4[16] = v6;
  v4[17] = *(void *)(v6 - 8);
  v4[18] = swift_task_alloc();
  v4[19] = sub_100010218(&qword_1007FCDE0);
  v4[20] = swift_task_alloc();
  v4[21] = sub_100010218((uint64_t *)&unk_10080CFB0);
  v4[22] = swift_task_alloc();
  uint64_t v7 = sub_100010218(&qword_1008086D8);
  v4[23] = v7;
  v4[24] = *(void *)(v7 - 8);
  v4[25] = swift_task_alloc();
  uint64_t v8 = sub_100010218((uint64_t *)&unk_10080CFC0);
  v4[26] = v8;
  v4[27] = *(void *)(v8 - 8);
  v4[28] = swift_task_alloc();
  v4[29] = swift_task_alloc();
  v4[30] = type metadata accessor for MainActor();
  v4[31] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[32] = v10;
  v4[33] = v9;
  return _swift_task_switch(sub_100398A7C, v10, v9);
}

uint64_t sub_100398A7C()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = OBJC_IVAR____TtC7Journal15CanvasStackView_mindfulMinutesCanvasTipView;
  *(void *)(v0 + 272) = OBJC_IVAR____TtC7Journal15CanvasStackView_mindfulMinutesCanvasTipView;
  if (*(void *)(v1 + v2))
  {
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    uint64_t v6 = *(void *)(v0 + 192);
    uint64_t v5 = *(void *)(v0 + 200);
    uint64_t v7 = *(void *)(v0 + 184);
    *(void *)(v0 + 280) = sub_1001A3414();
    Tip.shouldDisplayUpdates.getter();
    AsyncMapSequence.base.getter();
    sub_100014488((unint64_t *)&unk_10080CFD0, &qword_1007FCDE0);
    dispatch thunk of AsyncSequence.makeAsyncIterator()();
    AsyncMapSequence.transform.getter();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    AsyncMapSequence.Iterator.init(_:transform:)();
    *(_DWORD *)(v0 + 344) = enum case for Tips.InvalidationReason.actionPerformed(_:);
    uint64_t v8 = static MainActor.shared.getter();
    *(void *)(v0 + 288) = v8;
    if (v8)
    {
      swift_getObjectType();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v11 = v10;
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v11 = 0;
    }
    *(void *)(v0 + 296) = v9;
    *(void *)(v0 + 304) = v11;
    return _swift_task_switch(sub_100398CC8, v9, v11);
  }
}

uint64_t sub_100398CC8()
{
  uint64_t v1 = v0[36];
  v0[39] = AsyncMapSequence.Iterator.baseIterator.modify();
  sub_100014488(&qword_1008086E0, (uint64_t *)&unk_10080CFB0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[40] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100398DC4;
  uint64_t v3 = v0[15];
  return __sScI4next9isolation7ElementQzSgScA_pSgYi_tYa7FailureQzYKFTj(v3, v1, &protocol witness table for MainActor);
}

uint64_t sub_100398DC4()
{
  uint64_t v2 = *v1;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 296);
    uint64_t v4 = *(void *)(v2 + 304);
    uint64_t v5 = sub_1003990E0;
  }
  else
  {
    (*(void (**)(void))(v2 + 312))();
    uint64_t v3 = *(void *)(v2 + 296);
    uint64_t v4 = *(void *)(v2 + 304);
    uint64_t v5 = sub_100398EEC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100398EEC()
{
  uint64_t v1 = *((void *)v0 + 16);
  uint64_t v2 = *((void *)v0 + 17);
  uint64_t v3 = *((void *)v0 + 15);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_100399FD0(v3);
    swift_release();
    uint64_t v4 = *((void *)v0 + 32);
    uint64_t v5 = *((void *)v0 + 33);
    return _swift_task_switch(sub_10039953C, v4, v5);
  }
  else
  {
    uint64_t v7 = *((void *)v0 + 28);
    uint64_t v6 = *((void *)v0 + 29);
    uint64_t v8 = *((void *)v0 + 26);
    uint64_t v9 = *((void *)v0 + 27);
    (*(void (**)(void, uint64_t, uint64_t))(v2 + 32))(*((void *)v0 + 18), v3, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v7, v6, v8);
    uint64_t v10 = (int *)AsyncMapSequence.Iterator.transform.getter();
    *((void *)v0 + 41) = v11;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    unsigned __int8 v15 = (uint64_t (*)(char *, uint64_t))((char *)v10 + *v10);
    uint64_t v12 = (void *)swift_task_alloc();
    *((void *)v0 + 42) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1003990F8;
    uint64_t v13 = *((void *)v0 + 18);
    return v15(v0 + 348, v13);
  }
}

uint64_t sub_1003990E0()
{
  return (*(uint64_t (**)(void))(v0 + 312))();
}

uint64_t sub_1003990F8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 144);
  uint64_t v3 = *(void *)(*v0 + 136);
  uint64_t v4 = *(void *)(*v0 + 128);
  swift_task_dealloc();
  swift_release();
  *(unsigned char *)(v1 + 349) = *(unsigned char *)(v1 + 348);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 304);
  uint64_t v6 = *(void *)(v1 + 296);
  return _swift_task_switch(sub_1003992A4, v6, v5);
}

uint64_t sub_1003992A4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v2 = *(void *)(v0 + 264);
  return _swift_task_switch(sub_100399308, v1, v2);
}

uint64_t sub_100399308()
{
  uint64_t v1 = *(void *)(v0 + 272);
  uint64_t v2 = *(char **)(v0 + 88);
  uint64_t v3 = *(void **)&v2[v1];
  if (*(unsigned char *)(v0 + 349))
  {
    if (v3) {
      goto LABEL_7;
    }
    uint64_t v4 = *(void *)(v0 + 280);
    *(void *)(v0 + 40) = &type metadata for MindfulMinutesCanvasTip;
    *(void *)(v0 + 48) = v4;
    id v5 = objc_allocWithZone((Class)type metadata accessor for TipUIView());
    uint64_t v6 = (void *)TipUIView.init(_:arrowEdge:actionHandler:)();
    uint64_t v7 = *(void **)&v2[v1];
    *(void *)&v2[v1] = v6;
    id v8 = v6;

    [v2 insertArrangedSubview:v8 atIndex:0];
    uint64_t v9 = self;
    id v10 = v8;
    id v11 = [v9 systemMintColor];
    [v10 setTintColor:v11];
  }
  else
  {
    if (!v3) {
      goto LABEL_7;
    }
    uint64_t v12 = *(unsigned int *)(v0 + 344);
    uint64_t v14 = *(void *)(v0 + 104);
    uint64_t v13 = *(void *)(v0 + 112);
    uint64_t v15 = *(void *)(v0 + 96);
    id v16 = v3;
    [v2 removeArrangedSubview:v16];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 104))(v13, v12, v15);
    Tip.invalidate(reason:)();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
    [v16 setHidden:1];
    id v11 = *(id *)&v2[v1];
    *(void *)&v2[v1] = 0;
  }
LABEL_7:
  uint64_t v17 = static MainActor.shared.getter();
  *(void *)(v0 + 288) = v17;
  if (v17)
  {
    swift_getObjectType();
    uint64_t v18 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v18 = 0;
    uint64_t v20 = 0;
  }
  *(void *)(v0 + 296) = v18;
  *(void *)(v0 + 304) = v20;
  return _swift_task_switch(sub_100398CC8, v18, v20);
}

uint64_t sub_10039953C()
{
  (*(void (**)(void, void))(v0[27] + 8))(v0[29], v0[26]);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_100399628()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10039989C();
  id v5 = *(void **)&v0[OBJC_IVAR____TtC7Journal15CanvasStackView_reflectionPromptView];
  if (!v5) {
    return;
  }
  uint64_t v6 = OBJC_IVAR____TtC7Journal15CanvasStackView_journalEntry;
  uint64_t v7 = *(void *)&v0[OBJC_IVAR____TtC7Journal15CanvasStackView_journalEntry];
  id v19 = v5;
  if (!v7)
  {
    id v12 = v5;
    goto LABEL_8;
  }
  uint64_t v18 = v5;
  swift_retain();
  id v8 = (void *)sub_100339674();
  if (!v8)
  {
    swift_release();
    goto LABEL_8;
  }
  sub_10033AA5C(v8);
  id v10 = v9;
  swift_release();
  if (!v10)
  {
LABEL_8:
    [v1 removeArrangedSubview:v19];
    [v19 setHidden:1];
    uint64_t v13 = *(void *)&v1[v6];
    if (v13)
    {
      swift_retain();
      uint64_t v14 = sub_100339674();
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v16 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v4, 1, 1, v16);
        uint64_t v17 = (void *)swift_allocObject();
        void v17[2] = 0;
        v17[3] = 0;
        v17[4] = v13;
        v17[5] = v15;
        swift_retain();
        sub_100328A60((uint64_t)v4, (uint64_t)&unk_10080A838, (uint64_t)v17);
        swift_release();

        swift_release();
        return;
      }
      swift_release();
    }
    id v11 = (char *)v19;
    goto LABEL_14;
  }

  *(void *)&v18[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_journalEntry] = *(void *)&v1[v6];
  swift_retain_n();
  swift_release();
  sub_100263548();
  swift_release();
  [v1 addArrangedSubview:v18];
  [v18 setHidden:0];
  id v11 = v18;
LABEL_14:
}

void sub_10039989C()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Journal15CanvasStackView_journalEntry;
  if (*(void *)&v0[OBJC_IVAR____TtC7Journal15CanvasStackView_journalEntry])
  {
    swift_retain();
    uint64_t v3 = (void *)sub_100339674();
    if (v3)
    {
      sub_10033AA5C(v3);
      id v5 = v4;
      swift_release();
      if (v5)
      {

        uint64_t v6 = OBJC_IVAR____TtC7Journal15CanvasStackView_reflectionPromptView;
        uint64_t v7 = *(char **)&v1[OBJC_IVAR____TtC7Journal15CanvasStackView_reflectionPromptView];
        if (v7
          || (type metadata accessor for CanvasReflectionPromptView(),
              id v8 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init],
              uint64_t v9 = *(void **)&v1[v6],
              *(void *)&v1[v6] = v8,
              v9,
              (uint64_t v7 = *(char **)&v1[v6]) != 0))
        {
          *(void *)&v7[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_journalEntry] = *(void *)&v1[v2];
          swift_retain_n();
          uint64_t v18 = v7;
          swift_release();
          sub_100263548();
          swift_release();
          char v10 = v18[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_isEditing];
          v18[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_isEditing] = 1;
          sub_100262928(v10);
          sub_100541798(v18);
          uint64_t v11 = swift_allocObject();
          swift_unknownObjectWeakInit();
          id v12 = (void (**)())&v18[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_deletePrompt];
          *id v12 = sub_10039A46C;
          v12[1] = (void (*)())v11;
          swift_release();
          [v1 addArrangedSubview:v18];
          [v18 setHidden:0];
          __asm { FMOV            V0.2D, #10.0 }
          *(_OWORD *)&v18[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_outerCornerRadius] = _Q0;
        }
      }
    }
    else
    {
      swift_release();
    }
  }
}

void sub_100399AA4(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)&v2[OBJC_IVAR____TtC7Journal15CanvasStackView_journalEntry];
  if (v4 && *(unsigned char *)(v4 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showPhotoMemoryBanner) != 1) {
    return;
  }
  id v5 = [v2 subviews];
  sub_1000108BC();
  unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v6 >> 62))
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v7) {
      goto LABEL_5;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    if (a1)
    {
      type metadata accessor for CanvasPhotosMemoriesBanner();
      uint64_t v13 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
      int v14 = v13[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_isEditing];
      v13[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_isEditing] = 1;
      if (v14 != 1) {
        sub_1005D4674();
      }
      [v2 addArrangedSubview:v13];
      uint64_t v15 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v15;
      *(void *)(v16 + 24) = v13;
      uint64_t v17 = (void (**)())&v13[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_deleteBanner];
      void *v17 = sub_10039A370;
      v17[1] = (void (*)())v16;
      swift_release();
    }
    return;
  }
LABEL_24:
  swift_bridgeObjectRetain();
  uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v7) {
    goto LABEL_13;
  }
LABEL_5:
  uint64_t v8 = 4;
  while (1)
  {
    uint64_t v9 = v8 - 4;
    if ((v6 & 0xC000000000000001) != 0)
    {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      BOOL v11 = __OFADD__(v9, 1);
      uint64_t v12 = v8 - 3;
      if (v11) {
        goto LABEL_23;
      }
    }
    else
    {
      id v10 = *(id *)(v6 + 8 * v8);
      BOOL v11 = __OFADD__(v9, 1);
      uint64_t v12 = v8 - 3;
      if (v11)
      {
LABEL_23:
        __break(1u);
        goto LABEL_24;
      }
    }
    id v18 = v10;
    type metadata accessor for CanvasPhotosMemoriesBanner();
    if (swift_dynamicCastClass()) {
      break;
    }

    ++v8;
    if (v12 == v7) {
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease();
}

void sub_100399D28(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    [Strong removeArrangedSubview:a2];
  }
  [a2 setHidden:1];
  swift_beginAccess();
  uint64_t v5 = swift_unknownObjectWeakLoadStrong();
  if (v5)
  {
    unint64_t v6 = (void *)v5;
    uint64_t v7 = *(void *)(v5 + OBJC_IVAR____TtC7Journal15CanvasStackView_journalEntry);
    swift_retain();

    if (v7)
    {
      *(unsigned char *)(v7 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showPhotoMemoryBanner) = 0;
      uint64_t v8 = *(void **)(v7 + 24);
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = sub_10039A378;
      *(void *)(v9 + 24) = v7;
      v11[4] = sub_10001AC84;
      v11[5] = v9;
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 1107296256;
      v11[2] = sub_1003F44E4;
      v11[3] = &unk_1007A81B8;
      id v10 = _Block_copy(v11);
      swift_retain();
      swift_retain();
      swift_release();
      [v8 performBlockAndWait:v10];
      _Block_release(v10);
      LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
      swift_release_n();
      swift_release();
      if (v8) {
        __break(1u);
      }
    }
  }
}

id sub_100399F0C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasStackView();
  return [super dealloc];
}

uint64_t type metadata accessor for CanvasStackView()
{
  return self;
}

uint64_t sub_100399FD0(uint64_t a1)
{
  uint64_t v2 = sub_100010218((uint64_t *)&unk_10080CFA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_10039A030()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    uint64_t v5 = *(void **)&Strong[OBJC_IVAR____TtC7Journal15CanvasStackView_reflectionPromptView];
    if (v5)
    {
      id v6 = v5;
      [v4 removeArrangedSubview:v6];
      [v6 setHidden:1];
      uint64_t v7 = *(void *)&v4[OBJC_IVAR____TtC7Journal15CanvasStackView_journalEntry];
      if (v7)
      {
        swift_retain();
        uint64_t v8 = sub_100339674();
        if (v8)
        {
          uint64_t v9 = v8;
          uint64_t v10 = type metadata accessor for TaskPriority();
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v2, 1, 1, v10);
          BOOL v11 = (void *)swift_allocObject();
          v11[2] = 0;
          v11[3] = 0;
          v11[4] = v7;
          v11[5] = v9;
          swift_retain();
          sub_100328A60((uint64_t)v2, (uint64_t)&unk_10080A840, (uint64_t)v11);

          swift_release();
          swift_release();
          return;
        }

        swift_release();
      }
      else
      {
      }
    }
    else
    {
    }
  }
}

uint64_t sub_10039A204()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10039A244(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_1003987C0(a1, v4, v5, v6);
}

uint64_t sub_10039A2F8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10039A330()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10039A370()
{
  sub_100399D28(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

id sub_10039A378()
{
  return sub_100584BA0(v0);
}

uint64_t sub_10039A380()
{
  return swift_deallocObject();
}

uint64_t sub_10039A390(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10039A3A0()
{
  return swift_release();
}

uint64_t sub_10039A3AC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100052588;
  return sub_100339FE4(a1, v4, v5, v7, v6);
}

void sub_10039A46C()
{
}

uint64_t sub_10039A478(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_10002C194;
  return sub_100339FE4(a1, v4, v5, v7, v6);
}

id sub_10039A538(char a1)
{
  char v2 = a1 & 1;
  uint64_t v3 = sub_100010218(&qword_1007F9770);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v1[OBJC_IVAR____TtC7Journal22TimelineOverflowButton_delegate + 8] = 0;
  swift_unknownObjectWeakInit();
  swift_weakInit();
  v1[OBJC_IVAR____TtC7Journal22TimelineOverflowButton_placement] = v2;
  uint64_t v6 = (objc_class *)type metadata accessor for TimelineOverflowButton();
  v15.receiver = v1;
  v15.super_class = v6;
  [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  static UIButton.Configuration.bordered()();
  id v8 = [self labelColor];
  UIButton.Configuration.baseForegroundColor.setter();
  uint64_t v9 = type metadata accessor for UIButton.Configuration();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 0, 1, v9);
  UIButton.configuration.setter();
  [v7 setShowsLargeContentViewer:1];
  id v10 = [v7 heightAnchor];
  id v11 = [v7 widthAnchor];
  id v12 = [v10 constraintEqualToAnchor:v11];

  [v12 setActive:1];
  [v7 setShowsMenuAsPrimaryAction:1];
  Class v13 = sub_10039AAA0();
  [v7 setMenu:v13];

  [v7 addTarget:v7 action:"updateMenu" forControlEvents:0x4000];
  return v7;
}

uint64_t sub_10039A814()
{
  uint64_t v1 = sub_100010218(&qword_1007F9770);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIButton.Configuration();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static UIButton.Configuration.bordered()();
  id v8 = [self labelColor];
  UIButton.Configuration.baseForegroundColor.setter();
  sub_100625CAC(*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal22TimelineOverflowButton_placement));
  if (qword_1007F7BD0 != -1) {
    swift_once();
  }
  id v9 = (id)qword_10083E8B8;
  UIButton.Configuration.image.setter();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v3, v7, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
  UIButton.configuration.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Class sub_10039AAA0()
{
  uint64_t v1 = v0;
  if (qword_1007F7530 != -1) {
    swift_once();
  }
  uint64_t v2 = qword_1007F6CD8;
  swift_bridgeObjectRetain();
  if (v2 != -1) {
    swift_once();
  }
  swift_retain();
  AppStorage.wrappedValue.getter();
  swift_release();
  if (preferredElementSize[0]) {
    _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  if (qword_1007F7538 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  swift_retain();
  AppStorage.wrappedValue.getter();
  swift_release();
  if (LOBYTE(preferredElementSize[0]) != 1) {
    _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v4 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  uint64_t v5 = (objc_class *)sub_10001B284(0, (unint64_t *)&unk_100809EE0);
  if (qword_1007F7528 != -1) {
    swift_once();
  }
  Swift::String v6 = (Swift::String)xmmword_10083DBF8;
  swift_bridgeObjectRetain();
  NSString v7 = String._bridgeToObjectiveC()();
  id v42 = self;
  id v8 = [v42 systemImageNamed:v7];

  sub_100010218((uint64_t *)&unk_1007FA1C0);
  UIMenuElementSize v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1006D6D10;
  *(void *)(v9 + 32) = v3;
  *(void *)(v9 + 40) = v4;
  preferredElementSize[0] = v9;
  specialized Array._endMutation()();
  id v44 = v3;
  id v43 = v4;
  v47.value.super.Class isa = v8;
  v47.is_nil = 0;
  id v10 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v6, (Swift::String_optional)0, v47, (UIMenuIdentifier_optional)32, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize[0], 0).super.super.isa;
  id v11 = [(objc_class *)v10 selectedElements];
  sub_10001B284(0, (unint64_t *)&unk_100807680);
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    Class v13 = (Class)_CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v13) {
      goto LABEL_19;
    }
  }
  else
  {
    Class v13 = *(Class *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v13) {
      goto LABEL_19;
    }
  }
  if ((v12 & 0xC000000000000001) != 0)
  {
    id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_37;
    }
    id v14 = *(id *)(v12 + 32);
  }
  objc_super v15 = v14;
  swift_bridgeObjectRelease();
  id v16 = [v15 title];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  Class v13 = (Class)String._bridgeToObjectiveC()();
LABEL_19:
  swift_bridgeObjectRelease();
  [(objc_class *)v10 setSubtitle:v13];

  if (qword_1007F7540 != -1) {
    swift_once();
  }
  uint64_t v17 = qword_1007F7B60;
  swift_bridgeObjectRetain();
  if (v17 != -1) {
    swift_once();
  }
  id v18 = (void *)qword_10083E848;
  uint64_t v19 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v20 = v18;
  v40._rawValue = 0;
  uint64_t v41 = v19;
  id v21 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  Class isa = sub_10039B5D4().super.super.isa;
  UIMenuElementSize v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1006D6D20;
  *(void *)(v23 + 32) = v10;
  *(void *)(v23 + 40) = isa;
  *(void *)(v23 + 48) = v21;
  preferredElementSize[0] = v23;
  specialized Array._endMutation()();
  UIMenuElementSize v24 = preferredElementSize[0];
  UIMenuElementSize v46 = preferredElementSize[0];
  uint64_t Strong = swift_weakLoadStrong();
  uint64_t v1 = v10;
  Class v13 = isa;
  id v10 = v21;
  if (Strong)
  {
    uint64_t v26 = sub_100035E94();
    swift_release();
    if (v26 <= 0) {
      -[objc_class setAttributes:](v10, "setAttributes:", 4, 0, 0, 0, sub_10039D87C, v41);
    }
  }
  preferredElementSize[3] = (UIMenuElementSize)&type metadata for JournalFeatureFlags;
  preferredElementSize[4] = sub_10005F364();
  LOBYTE(preferredElementSize[0]) = 0;
  char v27 = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)preferredElementSize);
  if (v27)
  {
    NSString v28 = String._bridgeToObjectiveC()();
    uint64_t v5 = (objc_class *)[v42 systemImageNamed:v28];

    UIMenuElementSize v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1006D6D10;
    id v30 = (id)qword_10083E848;
    *(void *)(v29 + 32) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v31 = v30;
    v39._rawValue = 0;
    *(void *)(v29 + 40) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    preferredElementSize[0] = v29;
    specialized Array._endMutation()();
    UIMenuElementSize v32 = preferredElementSize[0];
    if (!((unint64_t)preferredElementSize[0] >> 62))
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      UIMenuElementSize v33 = v32;
LABEL_29:
      swift_bridgeObjectRelease();
      v34._countAndFlagsBits = 0x6C616E7265746E49;
      v34._object = (void *)0xE800000000000000;
      v48.value.super.Class isa = v5;
      v48.is_nil = 0;
      uint64_t v35 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v34, (Swift::String_optional)0, v48, 0, 0xFFFFFFFFFFFFFFFFLL, v33, v39).super.super.isa;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v46 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();

      UIMenuElementSize v24 = v46;
      goto LABEL_32;
    }
LABEL_37:
    swift_bridgeObjectRetain();
    UIMenuElementSize v33 = _bridgeCocoaArray<A>(_:)();
    swift_bridgeObjectRelease();
    goto LABEL_29;
  }
LABEL_32:
  v36._countAndFlagsBits = 0;
  v36._object = (void *)0xE000000000000000;
  v49.value.super.Class isa = 0;
  v49.is_nil = 0;
  Class v37 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v36, (Swift::String_optional)0, v49, 0, 0xFFFFFFFFFFFFFFFFLL, v24, v40).super.super.isa;

  return v37;
}

void sub_10039B444()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      sub_10025F0A0();
      swift_unknownObjectRelease();
    }
  }
}

void sub_10039B4C8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = (void *)swift_unknownObjectWeakLoadStrong();

    if (v2)
    {
      type metadata accessor for PrintEntriesViewController();
      id v3 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
      [v3 setModalInPresentation:1];
      [v3 setModalPresentationStyle:0];
      id v4 = [objc_allocWithZone((Class)type metadata accessor for JurassicNavigationController()) initWithRootViewController:v3];
      [v4 setModalInPresentation:1];
      [v2 presentViewController:v4 animated:1 completion:0];
      swift_unknownObjectRelease();
    }
  }
}

UIMenu sub_10039B5D4()
{
  uint64_t v0 = type metadata accessor for ImageResource();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v21[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F7598 != -1) {
    swift_once();
  }
  sub_10001B284(0, (unint64_t *)&qword_10080A1F0);
  uint64_t v4 = qword_1007F8018;
  swift_bridgeObjectRetain();
  if (v4 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100026A54(v0, (uint64_t)qword_10083F168);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  UIImage.init(resource:)();
  v21[3] = (UIMenuElementSize)&type metadata for JournalFeatureFlags;
  v21[4] = sub_10005F364();
  LOBYTE(v21[0]) = 1;
  isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v21);
  sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v6 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  if (qword_1007F75A0 != -1) {
    swift_once();
  }
  uint64_t v7 = qword_1007F7C78;
  swift_bridgeObjectRetain();
  if (v7 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10083E960;
  uint64_t v9 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  if (qword_1007F75D0 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_1007F7C80;
  swift_bridgeObjectRetain();
  if (v10 != -1) {
    swift_once();
  }
  id v11 = (id)qword_10083E968;
  uint64_t v12 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  if (qword_1007F75A8 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1007F7C28;
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  id v14 = (id)qword_10083E910;
  uint64_t v15 = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  sub_10001B284(0, (unint64_t *)&unk_100809EE0);
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  UIMenuElementSize v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1006D6D30;
  *(void *)(v16 + 32) = v6;
  *(void *)(v16 + 40) = v9;
  *(void *)(v16 + 48) = v12;
  *(void *)(v16 + 56) = v15;
  v21[0] = v16;
  specialized Array._endMutation()();
  v17._countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v22.value.super.Class isa = 0;
  v22.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v17, (Swift::String_optional)0, v22, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v21[0], v19);
}

void sub_10039BB00()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v11 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    uint64_t v5 = swift_unknownObjectWeakLoadStrong();

    if (v5)
    {
      uint64_t v6 = swift_weakLoadStrong();
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = type metadata accessor for TaskPriority();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
        type metadata accessor for MainActor();
        swift_retain();
        uint64_t v9 = static MainActor.shared.getter();
        uint64_t v10 = (void *)swift_allocObject();
        v10[2] = v9;
        v10[3] = &protocol witness table for MainActor;
        v10[4] = v7;
        sub_100328A8C((uint64_t)v2, (uint64_t)&unk_10080A8B0, (uint64_t)v10);
        swift_unknownObjectRelease();
        swift_release();
        swift_release();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
}

uint64_t sub_10039BCA0(uint64_t a1)
{
  return sub_10039C96C(a1, (uint64_t)&unk_1007A8290, (uint64_t)&unk_10080A8A8, (void (*)(char *, uint64_t, uint64_t))sub_1005D74B4);
}

uint64_t sub_10039BCD4()
{
  type metadata accessor for MainActor();
  v0[29] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[30] = v2;
  v0[31] = v1;
  return _swift_task_switch(sub_10039BD68, v2, v1);
}

uint64_t sub_10039BD68()
{
  if (qword_1007F6BF8 != -1) {
    swift_once();
  }
  *(void *)(v0 + 256) = qword_10083D1E8;
  return _swift_task_switch(sub_10039BE04, 0, 0);
}

uint64_t sub_10039BE04()
{
  uint64_t v1 = *(void **)(v0[32] + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_notificationCenter);
  v0[2] = v0;
  v0[7] = v0 + 28;
  v0[3] = sub_10039BF0C;
  uint64_t v2 = swift_continuation_init();
  v0[18] = _NSConcreteStackBlock;
  v0[19] = 0x40000000;
  v0[20] = sub_100232BB4;
  v0[21] = &unk_1007A82A8;
  v0[22] = v2;
  [v1 getNotificationSettingsWithCompletionHandler:v0 + 18];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_10039BF0C()
{
  return _swift_task_switch(sub_10039BFEC, 0, 0);
}

uint64_t sub_10039BFEC()
{
  uint64_t v1 = (void *)v0[28];
  v0[33] = [v1 authorizationStatus];

  uint64_t v2 = v0[30];
  uint64_t v3 = v0[31];
  return _swift_task_switch(sub_10039C064, v2, v3);
}

uint64_t sub_10039C064()
{
  if (v0[33])
  {
    uint64_t v3 = (uint64_t (*)(char, uint64_t))((char *)&dword_100809860 + dword_100809860);
    uint64_t v1 = (void *)swift_task_alloc();
    v0[39] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_10039C818;
    return v3(2, 0);
  }
  else
  {
    v0[34] = qword_10083D1E8;
    return _swift_task_switch(sub_10039C158, 0, 0);
  }
}

uint64_t sub_10039C158()
{
  uint64_t v1 = *(void **)(v0[34] + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_notificationCenter);
  v0[10] = v0;
  v0[15] = v0 + 40;
  v0[11] = sub_10039C264;
  uint64_t v2 = swift_continuation_init();
  v0[23] = _NSConcreteStackBlock;
  v0[24] = 0x40000000;
  v0[25] = sub_100232C08;
  v0[26] = &unk_1007A82C0;
  v0[27] = v2;
  [v1 requestAuthorizationWithOptions:6 completionHandler:v0 + 23];
  return _swift_continuation_await(v0 + 10);
}

uint64_t sub_10039C264()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 280) = v1;
  if (v1) {
    uint64_t v2 = sub_10039C54C;
  }
  else {
    uint64_t v2 = sub_10039C374;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10039C374()
{
  int v1 = *(unsigned __int8 *)(v0 + 320);
  uint64_t v2 = *(void **)(*(void *)(v0 + 272) + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_defaults);
  [v2 setIsJournalingScheduleEnabled:0];
  [v2 setIsStreakReminderEnabled:0];
  if (v1 == 1)
  {
    if (qword_1007F6BF0 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100026A54(v3, (uint64_t)qword_1008043B0);
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "😊 notifications authorization granted 😊", v6, 2u);
      swift_slowDealloc();
    }

    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 288) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10039C5C4;
    return sub_100232CBC(0, 0, 0, 1);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 240);
    uint64_t v10 = *(void *)(v0 + 248);
    return _swift_task_switch(sub_10039C750, v9, v10);
  }
}

uint64_t sub_10039C54C()
{
  swift_willThrow();
  v0[38] = v0[35];
  swift_willThrow();
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[31];
  return _swift_task_switch(sub_10039C7B4, v1, v2);
}

uint64_t sub_10039C5C4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 296) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_10039C6E0;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 240);
    uint64_t v5 = *(void *)(v2 + 248);
    uint64_t v3 = sub_10039C750;
  }
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_10039C6E0()
{
  v0[38] = v0[37];
  swift_willThrow();
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[31];
  return _swift_task_switch(sub_10039C7B4, v1, v2);
}

uint64_t sub_10039C750()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10039C7B4()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10039C818()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 248);
  uint64_t v3 = *(void *)(v1 + 240);
  return _swift_task_switch(sub_10039D888, v3, v2);
}

uint64_t sub_10039C938(uint64_t a1)
{
  return sub_10039C96C(a1, (uint64_t)&unk_1007A8268, (uint64_t)&unk_10080A890, (void (*)(char *, uint64_t, uint64_t))sub_100328A60);
}

uint64_t sub_10039C96C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(char *, uint64_t, uint64_t))
{
  uint64_t v6 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for MainActor();
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = v10;
  *(void *)(v11 + 24) = &protocol witness table for MainActor;
  a4(v8, a3, v11);
  return swift_release();
}

uint64_t sub_10039CA78()
{
  uint64_t v1 = type metadata accessor for Tips.InvalidationReason();
  v0[2] = v1;
  v0[3] = *(void *)(v1 - 8);
  v0[4] = swift_task_alloc();
  type metadata accessor for MainActor();
  v0[5] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[6] = v3;
  v0[7] = v2;
  return _swift_task_switch(sub_10039CB68, v3, v2);
}

uint64_t sub_10039CB68()
{
  if (qword_1007F6930 != -1) {
    swift_once();
  }
  id v1 = sub_10004D528(1);
  if ((v2 & 1) != 0 || v1) && ((id v3 = sub_10004D528(0), (v4) || v3))
  {
    uint64_t v8 = (uint64_t (__cdecl *)())((char *)&dword_10080A898 + dword_10080A898);
    uint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10039CEBC;
    return v8();
  }
  else
  {
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v5;
    void *v5 = v0;
    v5[1] = sub_10039CCD0;
    return sub_10004D7C0((uint64_t)&off_100794B70);
  }
}

uint64_t sub_10039CCD0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10039CDF0, v3, v2);
}

uint64_t sub_10039CDF0()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v1, enum case for Tips.InvalidationReason.actionPerformed(_:), v2);
  sub_1001D591C();
  Tip.invalidate(reason:)();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  char v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10039CEBC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10039CFDC, v3, v2);
}

uint64_t sub_10039CFDC()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10039D044()
{
  uint64_t v0 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v3 = [self defaultWorkspace];
  if (v3)
  {
    char v4 = v3;
    URL.init(string:)();
    uint64_t v5 = type metadata accessor for URL();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v8 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v2, 1, v5) != 1)
    {
      URL._bridgeToObjectiveC()(v7);
      uint64_t v8 = v9;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v2, v5);
    }
    [v4 openSensitiveURL:v8 withOptions:0];
  }
  else
  {
    __break(1u);
  }
}

id sub_10039D1DC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TimelineOverflowButton();
  return [super dealloc];
}

uint64_t type metadata accessor for TimelineOverflowButton()
{
  return self;
}

uint64_t sub_10039D280()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10039D2B8()
{
}

uint64_t sub_10039D2C0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100052588;
  return sub_10039CA78();
}

uint64_t sub_10039D36C()
{
  sub_100010218((uint64_t *)&unk_100800A60);
  v0[2] = swift_task_alloc();
  v0[3] = swift_task_alloc();
  v0[4] = swift_task_alloc();
  return _swift_task_switch(sub_10039D418, 0, 0);
}

id sub_10039D418()
{
  id v1 = [objc_allocWithZone((Class)HealthAppAuthorizationManagementLinkBuilder) init];
  id v2 = [v1 URLForAuthorizationManagementFromLocation:2 bundleIdentifier:@"com.apple.journal"];
  uint64_t v3 = v0[3];
  if (v2)
  {
    char v4 = v2;
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v5 = type metadata accessor for URL();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 0, 1, v5);
  }
  else
  {
    uint64_t v6 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v3, 1, 1, v6);
  }
  sub_1003677F4(v0[3], v0[4]);
  id result = [self defaultWorkspace];
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = v0[2];
    sub_100052E44(v0[4], v9);
    uint64_t v10 = type metadata accessor for URL();
    uint64_t v11 = *(void *)(v10 - 8);
    int v12 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
    id v14 = 0;
    if (v12 != 1)
    {
      uint64_t v15 = v0[2];
      URL._bridgeToObjectiveC()(v13);
      id v14 = v16;
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v15, v10);
    }
    uint64_t v17 = v0[4];
    [v8 openSensitiveURL:v14 withOptions:0];

    sub_100052EAC(v17);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v18 = (uint64_t (*)(void))v0[1];
    return (id)v18();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10039D664()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10039D69C()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *id v1 = v0;
  v1[1] = sub_10002C194;
  return sub_10039BCD4();
}

uint64_t sub_10039D748()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10039D788(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10002C194;
  return sub_10025F208(a1);
}

void sub_10039D83C()
{
}

void sub_10039D85C()
{
}

void sub_10039D87C()
{
}

void sub_10039D88C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) == 1)
  {
    id v5 = objc_allocWithZone((Class)NSFetchRequest);
    NSString v6 = String._bridgeToObjectiveC()();
    id v7 = [v5 initWithEntityName:v6];

    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1006D6D20;
    if (qword_1007F7088 != -1) {
      swift_once();
    }
    uint64_t v9 = (void *)static NSPredicate.attachmentNeedsProcessing;
    *(void *)(v8 + 32) = static NSPredicate.attachmentNeedsProcessing;
    uint64_t v10 = qword_1007F70A0;
    id v11 = v9;
    if (v10 != -1) {
      swift_once();
    }
    int v12 = (void *)static NSPredicate.attachmentAssetIsNotBeingEdited;
    *(void *)(v8 + 40) = static NSPredicate.attachmentAssetIsNotBeingEdited;
    uint64_t v13 = qword_1007F7020;
    id v14 = v12;
    if (v13 != -1) {
      swift_once();
    }
    uint64_t v15 = (void *)static NSPredicate.notRemovedFromCloud;
    *(void *)(v8 + 48) = static NSPredicate.notRemovedFromCloud;
    v27[1] = (os_log_t)v8;
    specialized Array._endMutation()();
    sub_1000FBDC8();
    id v16 = v15;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v18 = [self andPredicateWithSubpredicates:isa];

    [v7 setPredicate:v18];
    uint64_t v19 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
    uint64_t v20 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v4, 1, 1, v20);
    id v21 = (void *)swift_allocObject();
    v21[2] = 0;
    v21[3] = 0;
    v21[4] = v19;
    UIMenuElementSize v21[5] = v7;
    v21[6] = v1;
    id v22 = v19;
    sub_100328A60((uint64_t)v4, (uint64_t)&unk_10080A8D8, (uint64_t)v21);
    swift_release();
  }
  else
  {
    if (qword_1007F6ED8 != -1) {
      swift_once();
    }
    uint64_t v23 = type metadata accessor for Logger();
    sub_100026A54(v23, (uint64_t)qword_10080A8B8);
    v27[0] = (os_log_t)Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v27[0], v24))
    {
      long long v25 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v25 = 0;
      _os_log_impl((void *)&_mh_execute_header, v27[0], v24, "Skip running AssetPostprocessingOperation.scheduleAssetPostProcessing() because isProtectedDataAvailable == false. Most likely because the device is locked.", v25, 2u);
      swift_slowDealloc();
    }
    os_log_t v26 = v27[0];
  }
}

uint64_t sub_10039DCA0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_10080A8B8);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_10080A8B8);
  if (qword_1007F7D48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EBD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_10039DD68()
{
  id v0 = [objc_allocWithZone((Class)NSOperationQueue) init];
  if (qword_1007F6A50 != -1) {
    swift_once();
  }
  [v0 setUnderlyingQueue:qword_10083CF58];
  NSString v1 = String._bridgeToObjectiveC()();
  [v0 setName:v1];

  [v0 setMaxConcurrentOperationCount:1];
  id result = [v0 setQualityOfService:9];
  qword_10083D450 = (uint64_t)v0;
  return result;
}

uint64_t sub_10039DE50()
{
  sub_100010218(&qword_10080A8F8);
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  *(void *)(v0 + 112) = &_swiftEmptySetSingleton;
  qword_10083D458 = v0;
  return result;
}

uint64_t sub_10039DEA0()
{
  return _swift_task_switch(sub_10039DEBC, 0, 0);
}

uint64_t sub_10039DEBC()
{
  if (qword_1007F6EE0 != -1) {
    swift_once();
  }
  [(id)qword_10083D450 cancelAllOperations];
  if (qword_1007F6EE8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10083D458;
  *(void *)(v0 + 40) = qword_10083D458;
  swift_retain();
  return _swift_task_switch(sub_10039DFA8, v1, 0);
}

uint64_t sub_10039DFA8()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_beginAccess();
  *(void *)(v1 + 112) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10039E034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[12] = a5;
  v6[13] = a6;
  v6[11] = a4;
  uint64_t v7 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v6[14] = v7;
  v6[15] = *(void *)(v7 - 8);
  v6[16] = swift_task_alloc();
  return _swift_task_switch(sub_10039E0F8, 0, 0);
}

uint64_t sub_10039E0F8()
{
  uint64_t v2 = v0[15];
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[14];
  uint64_t v4 = (void *)v0[12];
  uint64_t v5 = swift_allocObject();
  v0[17] = v5;
  *(void *)(v5 + 16) = v4;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v3);
  id v6 = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[18] = v7;
  uint64_t v8 = sub_100010218(&qword_1007FAE58);
  *uint64_t v7 = v0;
  v7[1] = sub_10039E22C;
  uint64_t v9 = v0[16];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 10, v9, sub_10039F7B0, v5, v8);
}

uint64_t sub_10039E22C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 128);
  uint64_t v3 = *(void *)(*(void *)v1 + 120);
  uint64_t v4 = *(void *)(*(void *)v1 + 112);
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_10039E3AC, 0, 0);
}

uint64_t sub_10039E3AC()
{
  unint64_t v1 = v0[10];
  v0[20] = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    v0[21] = v7;
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    v0[21] = v2;
    if (v2)
    {
LABEL_3:
      uint64_t v3 = v0[20];
      v0[22] = v0[19];
      if ((v3 & 0xC000000000000001) != 0) {
        id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v4 = *(id *)(v3 + 32);
      }
      v0[23] = v4;
      v0[24] = 1;
      if (qword_1007F6D38 != -1) {
        swift_once();
      }
      id v5 = [*(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container) newBackgroundContext];
      v0[25] = v5;
      [v5 setAutomaticallyMergesChangesFromParent:1];
      if (qword_1007F6EE8 != -1) {
        swift_once();
      }
      uint64_t v6 = qword_10083D458;
      v0[26] = qword_10083D458;
      swift_retain();
      return _swift_task_switch(sub_10039E580, v6, 0);
    }
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_10039E580()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v2 = *(void **)(v0 + 184);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v1 + 112);
  swift_bridgeObjectRetain();
  *(unsigned char *)(v0 + 224) = sub_100542A3C(v2, v3) & 1;
  swift_bridgeObjectRelease();
  swift_release();
  return _swift_task_switch(sub_10039E634, 0, 0);
}

uint64_t sub_10039E634()
{
  if (*(unsigned char *)(v0 + 224))
  {
    if (qword_1007F6ED8 != -1) {
      swift_once();
    }
    uint64_t v1 = *(void **)(v0 + 184);
    uint64_t v2 = type metadata accessor for Logger();
    sub_100026A54(v2, (uint64_t)qword_10080A8B8);
    id v3 = v1;
    id v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = *(void *)(v0 + 184);
      uint64_t v7 = swift_slowAlloc();
      uint64_t v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412290;
      *(void *)(v7 + 4) = v6;
      void *v8 = v6;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Skipping AssetPostprocessingOperation for id %@, already processing.", (uint8_t *)v7, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      uint64_t v9 = *(void **)(v0 + 200);
      uint64_t v10 = *(void **)(v0 + 184);
    }
    else
    {

      id v4 = *(NSObject **)(v0 + 200);
      uint64_t v10 = *(void **)(v0 + 184);
      uint64_t v9 = v10;
    }
    uint64_t v13 = *(void *)(v0 + 192);
    uint64_t v15 = *(void *)(v0 + 168);
    uint64_t v14 = *(void *)(v0 + 176);

    if (v13 == v15)
    {
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      id v16 = *(uint64_t (**)(void))(v0 + 8);
      return v16();
    }
    uint64_t v18 = *(void *)(v0 + 192);
    *(void *)(v0 + 176) = v14;
    uint64_t v19 = *(void *)(v0 + 160);
    if ((v19 & 0xC000000000000001) != 0) {
      id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v20 = *(id *)(v19 + 8 * v18 + 32);
    }
    *(void *)(v0 + 184) = v20;
    *(void *)(v0 + 192) = v18 + 1;
    if (__OFADD__(v18, 1))
    {
      __break(1u);
    }
    else if (qword_1007F6D38 == -1)
    {
LABEL_17:
      id v21 = [*(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container) newBackgroundContext];
      *(void *)(v0 + 200) = v21;
      [v21 setAutomaticallyMergesChangesFromParent:1];
      if (qword_1007F6EE8 != -1) {
        swift_once();
      }
      uint64_t v11 = qword_10083D458;
      *(void *)(v0 + 208) = qword_10083D458;
      int v12 = sub_10039E580;
      goto LABEL_20;
    }
    swift_once();
    goto LABEL_17;
  }
  uint64_t v11 = qword_10083D458;
  *(void *)(v0 + 216) = qword_10083D458;
  int v12 = sub_10039E944;
LABEL_20:
  id v22 = v12;
  swift_retain();
  return _swift_task_switch(v22, v11, 0);
}

uint64_t sub_10039E944()
{
  uint64_t v5 = v0;
  uint64_t v1 = *(void **)(v0 + 184);
  swift_beginAccess();
  sub_10054C390(&v4, v1);
  uint64_t v2 = v4;
  swift_endAccess();

  swift_release();
  return _swift_task_switch(sub_10039EA00, 0, 0);
}

void sub_10039EA00()
{
  Class super_class = v0[12].super_class;
  id receiver = v0[11].receiver;
  Class v3 = v0[11].super_class;
  Class v4 = v0[6].super_class;
  uint64_t v5 = (objc_class *)type metadata accessor for AssetPostprocessingOperation();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[qword_100812728] = v3;
  *(void *)&v6[qword_100812710] = super_class;
  v0[4].id receiver = v6;
  v0[4].Class super_class = v5;
  uint64_t v7 = v3;
  uint64_t v8 = super_class;
  uint64_t v9 = (char *)[v0 + 4 init];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v4;
  *(void *)(v10 + 24) = v7;
  uint64_t v11 = *(os_unfair_lock_s **)&v9[qword_1008086E8];
  uint64_t v12 = swift_task_alloc();
  *(void *)(v12 + 16) = sub_10039F804;
  *(void *)(v12 + 24) = v10;
  uint64_t v13 = (uint64_t)&v11[4];
  v11 += 10;
  uint64_t v14 = v7;
  os_unfair_lock_lock(v11);
  sub_10039F80C(v13);
  os_unfair_lock_unlock(v11);
  if (receiver) {
    return;
  }
  swift_release();
  swift_task_dealloc();
  if (qword_1007F6EE0 != -1) {
    swift_once();
  }
  id v15 = (id)qword_10083D450;
  [v15 addOperation:v9];

  Class v17 = (Class)v0[12].receiver;
  Class v16 = v0[12].super_class;
  Class v18 = v0[10].super_class;

  if (v17 == v18)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v19 = (void (*)(void))v0->super_class;
    v19();
    return;
  }
  id v20 = (char *)v0[12].receiver;
  v0[11].id receiver = 0;
  id v21 = v0[10].receiver;
  if (((unint64_t)v21 & 0xC000000000000001) != 0) {
    id v22 = (objc_class *)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    id v22 = (objc_class *)*((id *)v21 + (void)v20 + 4);
  }
  v0[11].Class super_class = v22;
  v0[12].id receiver = v20 + 1;
  if (__OFADD__(v20, 1))
  {
    __break(1u);
    goto LABEL_19;
  }
  if (qword_1007F6D38 != -1) {
LABEL_19:
  }
    swift_once();
  uint64_t v23 = (objc_class *)[*(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container) newBackgroundContext];
  v0[12].Class super_class = v23;
  [(objc_class *)v23 setAutomaticallyMergesChangesFromParent:1];
  if (qword_1007F6EE8 != -1) {
    swift_once();
  }
  uint64_t v24 = qword_10083D458;
  v0[13].id receiver = (id)qword_10083D458;
  swift_retain();
  _swift_task_switch(sub_10039E580, v24, 0);
}

void sub_10039ED30(void *a1@<X8>)
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  Class v3 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
  type metadata accessor for JournalEntryAssetFileAttachmentMO();
  id v4 = v3;
  uint64_t v5 = NSManagedObjectContext.fetch<A>(_:)();
  if (v1)
  {

    if (qword_1007F6ED8 != -1) {
      swift_once();
    }
    uint64_t v6 = type metadata accessor for Logger();
    sub_100026A54(v6, (uint64_t)qword_10080A8B8);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v7 = Logger.logObject.getter();
    os_log_type_t v8 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = a1;
      uint64_t v11 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 138412290;
      swift_errorRetain();
      uint64_t v26 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v11 = v26;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "AssetPostprocessingOperation error %@", v9, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      a1 = v10;
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
    goto LABEL_33;
  }
  unint64_t v12 = v5;

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v13)
    {
LABEL_10:
      uint64_t v25 = a1;
      if (qword_1007F6ED8 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_100026A54(v14, (uint64_t)qword_10080A8B8);
      swift_bridgeObjectRetain_n();
      id v15 = Logger.logObject.getter();
      a1 = (void *)static os_log_type_t.default.getter();
      if (os_log_type_enabled(v15, (os_log_type_t)a1))
      {
        Class v16 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)Class v16 = 134217984;
        if (v12 >> 62)
        {
          swift_bridgeObjectRetain();
          _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v15, (os_log_type_t)a1, "AssetPostprocessingOperation - about to process %ld attachments.", v16, 0xCu);
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      if (v13 >= 1)
      {
        uint64_t v17 = 0;
        do
        {
          if ((v12 & 0xC000000000000001) != 0) {
            id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v18 = *(id *)(v12 + 8 * v17 + 32);
          }
          uint64_t v19 = v18;
          id v20 = [v18 objectID];
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          ++v17;
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
        }
        while (v13 != v17);
        swift_bridgeObjectRelease();
        a1 = v25;
        goto LABEL_33;
      }
      __break(1u);
      goto LABEL_35;
    }
  }
  swift_bridgeObjectRelease();
  if (qword_1007F6ED8 != -1) {
LABEL_35:
  }
    swift_once();
  uint64_t v21 = type metadata accessor for Logger();
  sub_100026A54(v21, (uint64_t)qword_10080A8B8);
  id v22 = Logger.logObject.getter();
  os_log_type_t v23 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v24 = 0;
    _os_log_impl((void *)&_mh_execute_header, v22, v23, "AssetPostprocessingOperation - nothing to process.", v24, 2u);
    swift_slowDealloc();
  }

LABEL_33:
  *a1 = _swiftEmptyArrayStorage;
}

uint64_t sub_10039F2BC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  uint64_t v9 = *(void *)(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7, 1, 1, v8);
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = 0;
  v10[3] = 0;
  v10[4] = a2;
  v10[5] = a3;
  LODWORD(a2) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
  id v11 = a3;
  if (a2 == 1)
  {
    sub_1000D9A48((uint64_t)v7);
    uint64_t v12 = 0;
    uint64_t v13 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v7, v8);
    if (v10[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v13 = v14;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v12 = 0;
      uint64_t v13 = 0;
    }
  }
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = &unk_10080A8E8;
  *(void *)(v15 + 24) = v10;
  if (v13 | v12)
  {
    v17[0] = 0;
    v17[1] = 0;
    void v17[2] = v12;
    v17[3] = v13;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_10039F4FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 40) = a5;
  return _swift_task_switch(sub_10039F51C, 0, 0);
}

uint64_t sub_10039F51C()
{
  if (qword_1007F6EE8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10083D458;
  *(void *)(v0 + 48) = qword_10083D458;
  swift_retain();
  return _swift_task_switch(sub_10039F5C4, v1, 0);
}

uint64_t sub_10039F5C4()
{
  uint64_t v1 = *(void **)(v0 + 40);
  swift_beginAccess();
  uint64_t v2 = (void *)sub_10026F5EC(v1);
  swift_endAccess();
  swift_release();

  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10039F668()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10039F6B0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_10002C194;
  return sub_10039E034(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10039F778()
{
  return swift_deallocObject();
}

void sub_10039F7B0(void *a1@<X8>)
{
}

uint64_t sub_10039F7CC()
{
  return swift_deallocObject();
}

uint64_t sub_10039F804(uint64_t a1)
{
  return sub_10039F2BC(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_10039F80C(uint64_t a1)
{
  return sub_100183F50(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_10039F828()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10039F868()
{
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100052588;
  v3[5] = v2;
  return _swift_task_switch(sub_10039F51C, 0, 0);
}

uint64_t sub_10039F914()
{
  swift_release();

  return swift_deallocObject();
}

char *sub_10039F94C(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for ColorResource();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (objc_class *)type metadata accessor for AudioAssetGalleryView();
  v20.id receiver = v4;
  v20.Class super_class = v13;
  id v14 = [super initWithFrame:a1, a2, a3, a4];
  sub_100088B50();
  uint64_t v15 = qword_1007F7F28;
  Class v16 = (char *)v14;
  if (v15 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100026A54(v9, (uint64_t)qword_10083EE98);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v17, v9);
  id v18 = (void *)UIColor.init(resource:)();
  [v16 setBackgroundColor:v18];

  [v16 addSubview:*(void *)&v16[OBJC_IVAR____TtC7Journal14AudioAssetView_waveformView]];
  if (qword_1007F72F8 != -1) {
    swift_once();
  }
  sub_1001DCF60(*(double *)&qword_10083D908);

  swift_bridgeObjectRelease();
  return v16;
}

id sub_10039FB74(void *a1)
{
  uint64_t v3 = type metadata accessor for ColorResource();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = (objc_class *)type metadata accessor for AudioAssetGalleryView();
  v14.id receiver = v1;
  v14.Class super_class = v7;
  id v8 = [super initWithCoder:a1];
  if (v8)
  {
    sub_100088B50();
    uint64_t v9 = qword_1007F7F28;
    uint64_t v10 = (char *)v8;
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_100026A54(v3, (uint64_t)qword_10083EE98);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v11, v3);
    uint64_t v12 = (void *)UIColor.init(resource:)();
    [v10 setBackgroundColor:v12];

    [v10 addSubview:*(void *)&v10[OBJC_IVAR____TtC7Journal14AudioAssetView_waveformView]];
    if (qword_1007F72F8 != -1) {
      swift_once();
    }
    sub_1001DCF60(*(double *)&qword_10083D908);

    swift_bridgeObjectRelease();
  }
  else
  {
  }
  return v8;
}

id sub_10039FD90()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for AudioAssetGalleryView();
  return [super dealloc];
}

uint64_t type metadata accessor for AudioAssetGalleryView()
{
  return self;
}

uint64_t sub_10039FDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for FloatingPointRoundingRule();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Duration.TimeFormatStyle.Pattern();
  uint64_t v8 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Duration.TimeFormatStyle();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  objc_super v14 = (char *)&v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  LOBYTE(a2) = static Duration.< infix(_:_:)();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for FloatingPointRoundingRule.toNearestOrEven(_:), v4);
  if (a2) {
    static Duration.TimeFormatStyle.Pattern.minuteSecond(padMinuteToLength:fractionalSecondsLength:roundFractionalSeconds:)();
  }
  else {
    static Duration.TimeFormatStyle.Pattern.hourMinuteSecond(padHourToLength:fractionalSecondsLength:roundFractionalSeconds:)();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  static FormatStyle<>.time(pattern:)();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v17);
  sub_1002DF878();
  Duration.formatted<A>(_:)();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v20;
}

void sub_1003A007C(uint64_t a1, uint64_t a2)
{
  uint64_t v49 = a1;
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v50 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(qword_10080A9D0);
  uint64_t v47 = *(void *)(v10 - 8);
  uint64_t v48 = v10;
  __chkstk_darwin(v10);
  uint64_t v45 = v11;
  UIMenuElementSize v46 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = _swiftEmptyArrayStorage;
  id v13 = [self fetchAssetsWithMediaType:1 options:0];
  dispatch_group_t v14 = dispatch_group_create();
  id v54 = [objc_allocWithZone((Class)PHImageRequestOptions) init];
  [v54 setSynchronous:1];
  [v54 setDeliveryMode:1];
  [v54 setNetworkAccessAllowed:1];
  uint64_t v15 = (uint64_t)[v13 countOfAssetsWithMediaType:1];
  if (v15 < 1)
  {
    swift_release();

    id v38 = v54;
  }
  else
  {
    if ((a2 & 0x8000000000000000) == 0)
    {
      id v52 = v13;
      uint64_t v53 = v12;
      uint64_t v40 = v8;
      uint64_t v41 = v6;
      uint64_t v42 = v7;
      uint64_t v43 = v4;
      uint64_t v44 = v3;
      if (!a2)
      {
LABEL_12:
        sub_10001FB8C();
        char v27 = (void *)static OS_dispatch_queue.main.getter();
        UIMenuElementSize v29 = v46;
        uint64_t v28 = v47;
        uint64_t v30 = v48;
        (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v46, v49, v48);
        unint64_t v31 = (*(unsigned __int8 *)(v28 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
        unint64_t v32 = (v45 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v33 = swift_allocObject();
        (*(void (**)(unint64_t, char *, uint64_t))(v28 + 32))(v33 + v31, v29, v30);
        *(void *)(v33 + v32) = v53;
        uint64_t v60 = sub_1003A0BFC;
        uint64_t v61 = (void *)v33;
        aBlock = _NSConcreteStackBlock;
        uint64_t v57 = 1107296256;
        int v58 = sub_10017D530;
        int v59 = &unk_1007A8468;
        Swift::String v34 = _Block_copy(&aBlock);
        swift_retain();
        uint64_t v35 = v50;
        static DispatchQoS.unspecified.getter();
        uint64_t v55 = _swiftEmptyArrayStorage;
        sub_10004F6A0();
        sub_100010218(&qword_100804DB0);
        sub_10001B1BC();
        Swift::String v36 = v41;
        uint64_t v37 = v44;
        dispatch thunk of SetAlgebra.init<A>(_:)();
        OS_dispatch_group.notify(qos:flags:queue:execute:)();
        _Block_release(v34);

        (*(void (**)(char *, uint64_t))(v43 + 8))(v36, v37);
        (*(void (**)(char *, uint64_t))(v40 + 8))(v35, v42);
        swift_release();
        swift_release();
        return;
      }
      unint64_t v16 = v15;
      uint64_t v17 = 0;
      uint64_t v51 = &v58;
      unint64_t v18 = -v15 % (unint64_t)v15;
      while (v17 != a2)
      {
        aBlock = 0;
        swift_stdlib_random();
        if (v16 <= (unint64_t)aBlock * v16)
        {
          id v19 = v52;
        }
        else
        {
          id v19 = v52;
          while (v18 > (unint64_t)aBlock * v16)
          {
            aBlock = 0;
            swift_stdlib_random();
          }
        }
        ++v17;
        id v20 = [v19 objectAtIndex:];
        dispatch_group_enter(v14);
        id v21 = [self defaultManager];
        id v22 = (void *)swift_allocObject();
        v22[2] = v53;
        v22[3] = v20;
        v22[4] = v14;
        uint64_t v60 = sub_1003A0B30;
        uint64_t v61 = v22;
        aBlock = _NSConcreteStackBlock;
        uint64_t v57 = 1107296256;
        int v58 = sub_1003A097C;
        int v59 = &unk_1007A8418;
        os_log_type_t v23 = _Block_copy(&aBlock);
        swift_retain();
        id v24 = v54;
        id v25 = v20;
        uint64_t v26 = v14;
        swift_release();
        [v21 requestImageForAsset:v25 targetSize:0 contentMode:v24 options:v23 resultHandler:1000.0, 1000.0];
        _Block_release(v23);

        if (v17 == a2) {
          goto LABEL_12;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
}

void sub_1003A0738(void *a1, uint64_t a2, uint64_t a3, void *a4, NSObject *a5)
{
  if (a1)
  {
    uint64_t v7 = (double **)(a3 + 16);
    id v8 = a1;
    id v9 = [a4 localIdentifier];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    id v13 = [a4 localIdentifier];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    swift_beginAccess();
    uint64_t v17 = *v7;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v7 = v17;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v17 = sub_1002A73A4(0, *((void *)v17 + 2) + 1, 1, v17);
      *uint64_t v7 = v17;
    }
    unint64_t v20 = *((void *)v17 + 2);
    unint64_t v19 = *((void *)v17 + 3);
    if (v20 >= v19 >> 1)
    {
      uint64_t v17 = sub_1002A73A4((double *)(v19 > 1), v20 + 1, 1, v17);
      *uint64_t v7 = v17;
    }
    *((void *)v17 + 2) = v20 + 1;
    id v21 = &v17[5 * v20];
    *((void *)v21 + 4) = v8;
    *((void *)v21 + 5) = v10;
    *((void *)v21 + 6) = v12;
    *((void *)v21 + 7) = v14;
    *((void *)v21 + 8) = v16;
    swift_endAccess();
  }
  else
  {
    sub_100010218((uint64_t *)&unk_1007FC0F0);
    uint64_t v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1006D6280;
    unint64_t v24 = 0xE000000000000000;
    _StringGuts.grow(_:)(41);
    swift_bridgeObjectRelease();
    if (a2)
    {
      uint64_t v25 = Dictionary.description.getter();
      unint64_t v24 = v26;
    }
    else
    {
      uint64_t v25 = 0;
    }
    unint64_t v27 = v24;
    String.append(_:)(*(Swift::String *)&v25);
    swift_bridgeObjectRelease();
    *(void *)(v23 + 56) = &type metadata for String;
    *(void *)(v23 + 32) = 0xD000000000000027;
    *(void *)(v23 + 40) = 0x800000010069AD50;
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
  }
  dispatch_group_leave(a5);
}

uint64_t sub_1003A097C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v4 = *(void (**)(void *, uint64_t))(a1 + 32);
  if (a3) {
    uint64_t v5 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  }
  else {
    uint64_t v5 = 0;
  }
  swift_retain();
  id v6 = a2;
  v4(a2, v5);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003A0A28()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t type metadata accessor for PhotoUtilities()
{
  return self;
}

uint64_t sub_1003A0AB0()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003A0AE8()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1003A0B30(void *a1, uint64_t a2)
{
  sub_1003A0738(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(NSObject **)(v2 + 32));
}

uint64_t sub_1003A0B3C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003A0B4C()
{
  return swift_release();
}

uint64_t sub_1003A0B54()
{
  uint64_t v1 = sub_100010218(qword_10080A9D0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003A0BFC()
{
  sub_100010218(qword_10080A9D0);

  return sub_1003A0A28();
}

uint64_t destroy for PhotoUtilities.PhotoAsset(id *a1)
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PhotoUtilities.PhotoAsset(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  a1[2] = *(void *)(a2 + 16);
  a1[3] = v5;
  a1[4] = *(void *)(a2 + 32);
  id v6 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PhotoUtilities.PhotoAsset(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PhotoUtilities.PhotoAsset(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v5 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[4];
  *(void *)(a1 + 24) = a2[3];
  *(void *)(a1 + 32) = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotoUtilities.PhotoAsset(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhotoUtilities.PhotoAsset(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotoUtilities.PhotoAsset()
{
  return &type metadata for PhotoUtilities.PhotoAsset;
}

uint64_t sub_1003A0EAC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for BlendMode();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1003A0F78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = type metadata accessor for BlendMode();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v7 + v10) & ~v10;
  uint64_t v13 = *(void *)(v9 + 64);
  uint64_t v14 = v13 + v10;
  unint64_t v15 = ((v13 + v10 + v12) & ~v10) + v13;
  uint64_t v16 = (*(unsigned char *)(v6 + 80) | *(unsigned char *)(v9 + 80));
  if (v16 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v15 > 0x18)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v16 + 16) & ~v16));
    swift_retain();
  }
  else
  {
    uint64_t v20 = v8;
    uint64_t v21 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v22 = ((unint64_t)a2 + v11) & v21;
    uint64_t v23 = *(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16);
    v23(((unint64_t)a1 + v11) & v21, v22, v20);
    v23((v14 + (((unint64_t)a1 + v11) & v21)) & v21, (v14 + v22) & v21, v20);
  }
  return a1;
}

uint64_t sub_1003A1120(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = type metadata accessor for BlendMode();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v11 = v6 + 8;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v4 + a1 + v7) & ~v7;
  v12(v8, v5);
  uint64_t v9 = (*(void *)(v11 + 56) + v7 + v8) & ~v7;

  return ((uint64_t (*)(uint64_t, uint64_t))v12)(v9, v5);
}

uint64_t sub_1003A1204(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = type metadata accessor for BlendMode();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v8 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  v9((*(void *)(v10 + 48) + v11 + v13) & ~v11, (*(void *)(v10 + 48) + v11 + v14) & ~v11, v7);
  return a1;
}

uint64_t sub_1003A12F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = type metadata accessor for BlendMode();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24);
  uint64_t v10 = v8 + 24;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  v9((*(void *)(v10 + 40) + v11 + v13) & ~v11, (*(void *)(v10 + 40) + v11 + v14) & ~v11, v7);
  return a1;
}

uint64_t sub_1003A13E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = type metadata accessor for BlendMode();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
  uint64_t v10 = v8 + 32;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  v9((*(void *)(v10 + 32) + v11 + v13) & ~v11, (*(void *)(v10 + 32) + v11 + v14) & ~v11, v7);
  return a1;
}

uint64_t sub_1003A14D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = type metadata accessor for BlendMode();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40);
  uint64_t v10 = v8 + 40;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = v6 + v11;
  uint64_t v13 = (v6 + v11 + a1) & ~v11;
  uint64_t v14 = (v12 + a2) & ~v11;
  v9(v13, v14, v7);
  v9((*(void *)(v10 + 24) + v11 + v13) & ~v11, (*(void *)(v10 + 24) + v11 + v14) & ~v11, v7);
  return a1;
}

uint64_t sub_1003A15C4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v8 = type metadata accessor for BlendMode();
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  if (v10 <= v7) {
    unsigned int v11 = v7;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v12 = *(unsigned __int8 *)(v9 + 80);
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v6 + 64) + v12;
  if (a2 <= v11) {
    goto LABEL_24;
  }
  uint64_t v14 = ((*(void *)(*(void *)(v8 - 8) + 64) + v12 + (v13 & ~v12)) & ~v12)
      + *(void *)(*(void *)(v8 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((a2 - v11 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v11)
      {
        if (v7 >= v10)
        {
          uint64_t v23 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
          return v23(a1, v7, v5);
        }
        else
        {
          uint64_t v21 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v21(((unint64_t)a1 + v13) & ~v12);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v11 + (v20 | v18) + 1;
}

void sub_1003A1850(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v24 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(type metadata accessor for BlendMode() - 8);
  uint64_t v11 = v10;
  unsigned int v12 = *(_DWORD *)(v10 + 84);
  if (v12 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  uint64_t v14 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v15 = *(void *)(v8 + 64) + v14;
  size_t v16 = ((*(void *)(v10 + 64) + v14 + (v15 & ~v14)) & ~v14) + *(void *)(v10 + 64);
  if (a3 <= v13)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v13 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v18 = ~v13 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1003A1B5CLL);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v9 >= v12)
        {
          uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
          v23(a1, a2, v9, v7);
        }
        else
        {
          unint64_t v22 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
          v22((unint64_t)&a1[v15] & ~v14, a2);
        }
      }
      return;
  }
}

uint64_t type metadata accessor for VibrantShapeStyleModifier()
{
  return sub_100073C20();
}

uint64_t sub_1003A1B9C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003A1BE0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v3 = type metadata accessor for ColorScheme();
  uint64_t v47 = *(void *)(v3 - 8);
  uint64_t v48 = v3;
  __chkstk_darwin(v3);
  uint64_t v45 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v43 = (char *)&v43 - v6;
  uint64_t v50 = type metadata accessor for BlendMode();
  uint64_t v7 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  uint64_t v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v44 = (char *)&v43 - v11;
  uint64_t v52 = a1;
  uint64_t v54 = *(void *)(a1 + 16);
  uint64_t v46 = *(void *)(v54 - 8);
  __chkstk_darwin(v12);
  uint64_t v49 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for WidgetRenderingMode();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  int v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  unsigned int v20 = (char *)&v43 - v19;
  uint64_t v21 = sub_100010218(&qword_10080AA58);
  __chkstk_darwin(v21 - 8);
  uint64_t v23 = (char *)&v43 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  EnvironmentValues.backgroundMaterial.getter();
  uint64_t v24 = type metadata accessor for Material();
  LODWORD(a1) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v23, 1, v24);
  sub_1003A2134((uint64_t)v23);
  if (a1 == 1
    && (EnvironmentValues.widgetRenderingMode.getter(),
        static WidgetRenderingMode.vibrant.getter(),
        sub_1003A2194(),
        char v25 = dispatch thunk of static Equatable.== infix(_:_:)(),
        unint64_t v26 = *(void (**)(char *, uint64_t))(v15 + 8),
        v26(v17, v14),
        v26(v20, v14),
        (v25 & 1) == 0))
  {
    uint64_t v29 = v46;
    uint64_t v30 = v51;
    (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v49, v51, v54);
    unint64_t v31 = v43;
    EnvironmentValues.colorScheme.getter();
    uint64_t v33 = v47;
    uint64_t v32 = v48;
    Swift::String v34 = v45;
    (*(void (**)(char *, void, uint64_t))(v47 + 104))(v45, enum case for ColorScheme.dark(_:), v48);
    char v35 = static ColorScheme.== infix(_:_:)();
    Swift::String v36 = *(void (**)(char *, uint64_t))(v33 + 8);
    v36(v34, v32);
    v36(v31, v32);
    uint64_t v37 = 36;
    if (v35) {
      uint64_t v37 = 40;
    }
    uint64_t v38 = v30 + *(int *)(v52 + v37);
    uint64_t v39 = v44;
    uint64_t v40 = v50;
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v44, v38, v50);
    uint64_t v41 = v54;
    uint64_t v42 = v49;
    ShapeStyle.blendMode(_:)();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v39, v40);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v42, v41);
  }
  else
  {
    uint64_t v27 = v50;
    (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, enum case for BlendMode.normal(_:), v50);
    ShapeStyle.blendMode(_:)();
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v27);
  }
}

uint64_t sub_1003A2110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return static ShapeStyle._makeView<A>(view:inputs:)(a1, a2, a5, a3, a6, a4);
}

uint64_t sub_1003A2134(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_10080AA58);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1003A2194()
{
  unint64_t result = qword_10080AA60;
  if (!qword_10080AA60)
  {
    type metadata accessor for WidgetRenderingMode();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080AA60);
  }
  return result;
}

uint64_t sub_1003A21EC()
{
  type metadata accessor for _BlendModeShapeStyle();

  return swift_getWitnessTable();
}

double *sub_1003A2234(double a1)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(type metadata accessor for StaticWaveformView() + 24));
  uint64_t v4 = sub_100617854(v3, 1, a1, 3.0);
  int64_t v5 = *((void *)v4 + 2);
  if (v5)
  {
    sub_100095C00(0, v5, 0);
    uint64_t v6 = 0;
    double v7 = _swiftEmptyArrayStorage[2];
    do
    {
      double v8 = v4[v6 + 4];
      double v9 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v7 >= *(void *)&v9 >> 1) {
        sub_100095C00(*(void *)&v9 > 1uLL, *(void *)&v7 + 1, 1);
      }
      ++v6;
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v7 + 1;
      _swiftEmptyArrayStorage[(*(void *)&v7)++ + 4] = v8;
    }
    while (v5 != v6);
  }
  unint64_t result = (double *)swift_bridgeObjectRelease();
  uint64_t v11 = (*(void *)&a1 >> 52) & 0x7FFLL;
  double v12 = 2.5;
  if (v11 && v11 != 2047)
  {
    uint64_t v13 = *(void *)(v3 + 16);
    double v12 = a1 + (double)v13 * -3.0;
    if ((unint64_t)v13 >= 2) {
      double v12 = v12 / (double)(v13 - 1);
    }
    if (v12 <= 1.5) {
      double v12 = 1.5;
    }
  }
  double v14 = floor((a1 - (v12 + 3.0) * (double)*(uint64_t *)&_swiftEmptyArrayStorage[2]) / (v12 + 3.0)) * 0.5;
  if ((~*(void *)&v14 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v14 <= -9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v14 < 9.22337204e18) {
    return _swiftEmptyArrayStorage;
  }
LABEL_18:
  __break(1u);
  return result;
}

uint64_t sub_1003A240C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  GeometryProxy.size.getter();
  double v7 = sub_1003A2234(v6);
  double v9 = v8;
  uint64_t v10 = (uint64_t)v7;
  uint64_t v12 = v11;
  *a3 = static Alignment.center.getter();
  a3[1] = v13;
  uint64_t v14 = sub_100010218(&qword_10080ABE8);
  sub_1003A24B0(v12, v10, a2, a1, (uint64_t)a3 + *(int *)(v14 + 44), v9);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003A24B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v26 = a3;
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v9 = type metadata accessor for ColorRenderingMode();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218(&qword_10080ABF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_100010218(&qword_1008018E0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)uint64_t v15 = static VerticalAlignment.center.getter();
  *((void *)v15 + 1) = 0;
  v15[16] = 0;
  uint64_t v20 = sub_100010218(&qword_10080ABF8);
  sub_1003A2788(a1, a2, v26, v27, (uint64_t)&v15[*(int *)(v20 + 44)], a6);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for ColorRenderingMode.nonLinear(_:), v9);
  sub_100014488(&qword_10080AC00, &qword_10080ABF0);
  View.drawingGroup(opaque:colorMode:)();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_10001457C((uint64_t)v15, &qword_10080ABF0);
  uint64_t v21 = static Alignment.center.getter();
  double v23 = sub_1001A4688(0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, v28, 0.0, 1, INFINITY, 0, v21, v22);
  return (*(uint64_t (**)(char *, uint64_t, double))(v17 + 8))(v19, v16, v23);
}

uint64_t sub_1003A2788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v89 = a3;
  uint64_t v84 = a2;
  uint64_t v92 = a5;
  uint64_t v87 = type metadata accessor for StaticWaveformView();
  uint64_t v71 = *(void *)(v87 - 8);
  uint64_t v9 = *(void *)(v71 + 64);
  __chkstk_darwin(v87);
  uint64_t v72 = (uint64_t)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = type metadata accessor for NamedCoordinateSpace();
  __chkstk_darwin(v68);
  uint64_t v67 = (char *)&v65 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = type metadata accessor for DragGesture();
  uint64_t v78 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v69 = (char *)&v65 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218(&qword_10080AC08);
  uint64_t v82 = *(void *)(v12 - 8);
  uint64_t v83 = v12;
  __chkstk_darwin(v12);
  uint64_t v81 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_100010218(&qword_10080AC10);
  __chkstk_darwin(v76);
  uint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_100010218(&qword_10080AC18);
  uint64_t v77 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v75 = (char *)&v65 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_100010218(&qword_10080AC20);
  __chkstk_darwin(v73);
  uint64_t v74 = (char *)&v65 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_100010218(&qword_10080AC28);
  __chkstk_darwin(v70);
  uint64_t v91 = (uint64_t)&v65 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v19);
  uint64_t v90 = (uint64_t)&v65 - v20;
  uint64_t v21 = sub_100010218(&qword_10080AC30);
  __chkstk_darwin(v21 - 8);
  uint64_t v85 = (char *)&v65 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v65 - v24;
  uint64_t v26 = sub_100010218(&qword_10080AC38);
  __chkstk_darwin(v26 - 8);
  uint64_t v86 = (uint64_t)&v65 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  uint64_t v88 = (uint64_t)&v65 - v29;
  __chkstk_darwin(v30);
  uint64_t v32 = (char *)&v65 - v31;
  __chkstk_darwin(v33);
  char v35 = (char *)&v65 - v34;
  *(void *)char v35 = static VerticalAlignment.center.getter();
  *((void *)v35 + 1) = 0;
  unint64_t v93 = v35;
  v35[16] = 0;
  uint64_t v65 = a1;
  if (a1 < 1)
  {
    uint64_t v37 = sub_100010218(&qword_10080AC40);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v25, 1, 1, v37);
  }
  else
  {
    uint64_t v94 = 0;
    unint64_t v95 = a1;
    swift_getKeyPath();
    *(double *)(swift_allocObject() + 16) = a6;
    sub_100010218(&qword_100801A78);
    sub_100010218(&qword_10080AC80);
    sub_1001B5294();
    sub_1003A50D4();
    ForEach<>.init(_:id:content:)();
    uint64_t v36 = sub_100010218(&qword_10080AC40);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v25, 0, 1, v36);
  }
  uint64_t v66 = sub_100010218(&qword_10080AC48);
  sub_10002C4EC((uint64_t)v25, (uint64_t)&v93[*(int *)(v66 + 44)], &qword_10080AC30);
  *(void *)uint64_t v15 = static VerticalAlignment.center.getter();
  *((void *)v15 + 1) = 0;
  v15[16] = 0;
  uint64_t v38 = sub_100010218(&qword_10080AC50);
  uint64_t v39 = v84;
  uint64_t v40 = v89;
  sub_1003A33BC(v84, v89, a4, (uint64_t)&v15[*(int *)(v38 + 44)], a6);
  uint64_t v94 = 0x6D726F6665766177;
  unint64_t v95 = 0xE800000000000000;
  static CoordinateSpaceProtocol<>.named<A>(_:)();
  uint64_t v41 = v69;
  DragGesture.init<A>(minimumDistance:coordinateSpace:)();
  uint64_t v42 = v72;
  sub_1003A5200(v40, v72, (uint64_t (*)(void))type metadata accessor for StaticWaveformView);
  unint64_t v43 = (*(unsigned __int8 *)(v71 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80);
  unint64_t v44 = (v9 + v43 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = swift_allocObject();
  sub_1003A4D94(v42, v45 + v43);
  *(void *)(v45 + v44) = v39;
  *(double *)(v45 + ((v44 + 15) & 0xFFFFFFFFFFFFFFF8)) = a6;
  sub_1003A5060(&qword_10080AC58, (void (*)(uint64_t))&type metadata accessor for DragGesture);
  sub_1003A5060(&qword_10080AC60, (void (*)(uint64_t))&type metadata accessor for DragGesture.Value);
  swift_bridgeObjectRetain();
  uint64_t v46 = v80;
  uint64_t v47 = v81;
  Gesture<>.onChanged(_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v78 + 8))(v41, v46);
  static GestureMask.all.getter();
  sub_100014488(&qword_10080AC68, &qword_10080AC10);
  sub_100014488(&qword_10080AC70, &qword_10080AC08);
  uint64_t v48 = v75;
  uint64_t v49 = v83;
  View.gesture<A>(_:including:)();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v47, v49);
  sub_10001457C((uint64_t)v15, &qword_10080AC10);
  LOBYTE(v43) = *(unsigned char *)(v40 + *(int *)(v87 + 20));
  uint64_t v50 = v77;
  uint64_t v51 = (uint64_t)v74;
  uint64_t v52 = v79;
  (*(void (**)(char *, char *, uint64_t))(v77 + 16))(v74, v48, v79);
  *(unsigned char *)(v51 + *(int *)(v73 + 36)) = v43;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v48, v52);
  uint64_t v53 = v91;
  sub_10001B220(v51, v91, &qword_10080AC20);
  uint64_t v54 = (void *)(v53 + *(int *)(v70 + 36));
  void *v54 = 0x6D726F6665766177;
  v54[1] = 0xE800000000000000;
  sub_10001457C(v51, &qword_10080AC20);
  uint64_t v55 = v90;
  sub_10002C4EC(v53, v90, &qword_10080AC28);
  *(void *)uint64_t v32 = static VerticalAlignment.center.getter();
  *((void *)v32 + 1) = 0;
  v32[16] = 0;
  if (v65 < 1)
  {
    uint64_t v58 = sub_100010218(&qword_10080AC40);
    uint64_t v56 = (uint64_t)v85;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v85, 1, 1, v58);
  }
  else
  {
    uint64_t v94 = 0;
    unint64_t v95 = v65;
    swift_getKeyPath();
    *(double *)(swift_allocObject() + 16) = a6;
    sub_100010218(&qword_100801A78);
    sub_100010218(&qword_10080AC80);
    sub_1001B5294();
    sub_1003A50D4();
    uint64_t v56 = (uint64_t)v85;
    ForEach<>.init(_:id:content:)();
    uint64_t v57 = sub_100010218(&qword_10080AC40);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v56, 0, 1, v57);
  }
  sub_10002C4EC(v56, (uint64_t)&v32[*(int *)(v66 + 44)], &qword_10080AC30);
  uint64_t v59 = (uint64_t)v93;
  uint64_t v60 = v88;
  sub_10001B220((uint64_t)v93, v88, &qword_10080AC38);
  sub_10001B220(v55, v53, &qword_10080AC28);
  uint64_t v61 = v86;
  sub_10001B220((uint64_t)v32, v86, &qword_10080AC38);
  uint64_t v62 = v92;
  sub_10001B220(v60, v92, &qword_10080AC38);
  uint64_t v63 = sub_100010218(&qword_10080AC78);
  sub_10001B220(v53, v62 + *(int *)(v63 + 48), &qword_10080AC28);
  sub_10001B220(v61, v62 + *(int *)(v63 + 64), &qword_10080AC38);
  sub_10001457C((uint64_t)v32, &qword_10080AC38);
  sub_10001457C(v55, &qword_10080AC28);
  sub_10001457C(v59, &qword_10080AC38);
  sub_10001457C(v61, &qword_10080AC38);
  sub_10001457C(v53, &qword_10080AC28);
  return sub_10001457C(v60, &qword_10080AC38);
}

uint64_t sub_1003A33BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  uint64_t v41 = a4;
  uint64_t v9 = type metadata accessor for GeometryProxy();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218(&qword_10080AC40);
  uint64_t v39 = *(void *)(v13 - 8);
  uint64_t v40 = v13;
  __chkstk_darwin(v13);
  uint64_t v38 = (char *)v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = (void *)(a2 + *(int *)(type metadata accessor for StaticWaveformView() + 28));
  uint64_t v18 = v16[3];
  uint64_t v17 = v16[4];
  sub_10002E0BC(v16, v18);
  double v19 = (*(double (**)(uint64_t, uint64_t))(v17 + 24))(v18, v17) * (double)(v15 + 1);
  double v20 = COERCE_DOUBLE(sub_1001985D0(a1));
  if (v21) {
    double v22 = 1.0;
  }
  else {
    double v22 = v20;
  }
  uint64_t v42 = 0;
  uint64_t v43 = v15;
  v37[1] = swift_getKeyPath();
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v9);
  unint64_t v23 = (*(unsigned __int8 *)(v10 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v24 = (v11 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v25 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v27 + v23, v12, v9);
  *(double *)(v27 + v24) = v22;
  *(void *)(v27 + v25) = a1;
  *(double *)(v27 + v26) = v19;
  *(double *)(v27 + ((v26 + 15) & 0xFFFFFFFFFFFFFFF8)) = a5;
  swift_bridgeObjectRetain();
  sub_100010218(&qword_100801A78);
  sub_100010218(&qword_10080AC80);
  sub_1001B5294();
  sub_1003A50D4();
  uint64_t v28 = v38;
  ForEach<>.init(_:id:content:)();
  uint64_t v29 = static Animation.default.getter();
  uint64_t v30 = v39;
  uint64_t v31 = v41;
  uint64_t v32 = v28;
  uint64_t v33 = v28;
  uint64_t v34 = v40;
  (*(void (**)(uint64_t, char *, uint64_t))(v39 + 16))(v41, v32, v40);
  uint64_t v35 = v31 + *(int *)(sub_100010218(&qword_10080ACB0) + 36);
  *(void *)uint64_t v35 = v29;
  *(double *)(v35 + 8) = v19;
  return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v33, v34);
}

uint64_t sub_1003A370C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D1>)
{
  uint64_t v45 = a4;
  uint64_t v46 = a2;
  uint64_t v43 = type metadata accessor for ColorResource();
  uint64_t v8 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Capsule();
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100010218(&qword_10080ACA8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = sub_100010218(&qword_10080AC98);
  __chkstk_darwin(v42);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_100010218(&qword_10080AC80);
  __chkstk_darwin(v44);
  double v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = *a1;
  GeometryProxy.size.getter();
  if (v21 < 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if ((unint64_t)v21 >= *(void *)(a3 + 16))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v22 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v23 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 104))(v13, v22, v23);
  if ((~*(void *)&a5 & 0x7FF0000000000000) == 0)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (a5 <= -9.22337204e18)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (a5 >= 9.22337204e18)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (v21 < (uint64_t)a5)
  {
    if (qword_1007F7F18 == -1)
    {
LABEL_8:
      unint64_t v24 = qword_10083EE68;
      goto LABEL_12;
    }
LABEL_18:
    swift_once();
    goto LABEL_8;
  }
  if (qword_1007F7F30 != -1) {
    swift_once();
  }
  unint64_t v24 = qword_10083EEB0;
LABEL_12:
  uint64_t v25 = v43;
  uint64_t v26 = sub_100026A54(v43, (uint64_t)v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v26, v25);
  uint64_t v27 = Color.init(_:)();
  sub_1003A5200((uint64_t)v13, (uint64_t)v16, (uint64_t (*)(void))&type metadata accessor for Capsule);
  *(void *)&v16[*(int *)(v14 + 52)] = v27;
  *(_WORD *)&v16[*(int *)(v14 + 56)] = 256;
  sub_1003A5268((uint64_t)v13);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10001B220((uint64_t)v16, (uint64_t)v18, &qword_10080ACA8);
  uint64_t v28 = &v18[*(int *)(v42 + 36)];
  long long v29 = v48;
  *(_OWORD *)uint64_t v28 = v47;
  *((_OWORD *)v28 + 1) = v29;
  *((_OWORD *)v28 + 2) = v49;
  sub_10001457C((uint64_t)v16, &qword_10080ACA8);
  char v30 = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  uint64_t v36 = v35;
  uint64_t v38 = v37;
  sub_10001B220((uint64_t)v18, (uint64_t)v20, &qword_10080AC98);
  uint64_t v39 = &v20[*(int *)(v44 + 36)];
  *uint64_t v39 = v30;
  *((void *)v39 + 1) = v32;
  *((void *)v39 + 2) = v34;
  *((void *)v39 + 3) = v36;
  *((void *)v39 + 4) = v38;
  v39[40] = 0;
  sub_10001457C((uint64_t)v18, &qword_10080AC98);
  return sub_10002C4EC((uint64_t)v20, v45, &qword_10080AC80);
}

uint64_t sub_1003A3BC0(double a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v7 = type metadata accessor for LayoutDirection();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v25 - v12;
  double v14 = (a1 + 3.0) * (double)*(uint64_t *)(a3 + 16);
  DragGesture.Value.location.getter();
  double v16 = v15 / v14;
  if (v16 < 0.0) {
    double v16 = 0.0;
  }
  if (v16 <= 1.0) {
    double v17 = v16;
  }
  else {
    double v17 = 1.0;
  }
  sub_100667558((uint64_t)v13);
  (*(void (**)(char *, void, uint64_t))(v8 + 104))(v10, enum case for LayoutDirection.rightToLeft(_:), v7);
  char v18 = static LayoutDirection.== infix(_:_:)();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v8 + 8);
  v19(v10, v7);
  v19(v13, v7);
  if (v18) {
    double v20 = 1.0 - v17;
  }
  else {
    double v20 = v17;
  }
  uint64_t v21 = (void *)(v4 + *(int *)(type metadata accessor for StaticWaveformView() + 28));
  uint64_t v22 = v21[3];
  uint64_t v23 = v21[4];
  sub_10002E0BC(v21, v22);
  return (*(uint64_t (**)(uint64_t, uint64_t, double))(v23 + 16))(v22, v23, v20);
}

uint64_t sub_1003A3D9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for ColorResource();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int64_t v5 = (char *)v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Capsule();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218(&qword_10080ACA8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218(&qword_10080AC98);
  __chkstk_darwin(v12);
  double v14 = (char *)v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = enum case for RoundedCornerStyle.continuous(_:);
  uint64_t v16 = type metadata accessor for RoundedCornerStyle();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v16 - 8) + 104))(v8, v15, v16);
  if (qword_1007F7F30 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_100026A54(v2, (uint64_t)qword_10083EEB0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v17, v2);
  uint64_t v18 = Color.init(_:)();
  sub_1003A5200((uint64_t)v8, (uint64_t)v11, (uint64_t (*)(void))&type metadata accessor for Capsule);
  *(void *)&v11[*(int *)(v9 + 52)] = v18;
  *(_WORD *)&v11[*(int *)(v9 + 56)] = 256;
  sub_1003A5268((uint64_t)v8);
  static Alignment.center.getter();
  _FrameLayout.init(width:height:alignment:)();
  sub_10001B220((uint64_t)v11, (uint64_t)v14, &qword_10080ACA8);
  uint64_t v19 = &v14[*(int *)(v12 + 36)];
  long long v20 = v32[1];
  *(_OWORD *)uint64_t v19 = v32[0];
  *((_OWORD *)v19 + 1) = v20;
  *((_OWORD *)v19 + 2) = v32[2];
  sub_10001457C((uint64_t)v11, &qword_10080ACA8);
  char v21 = static Edge.Set.trailing.getter();
  EdgeInsets.init(_all:)();
  uint64_t v23 = v22;
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  sub_10001B220((uint64_t)v14, a1, &qword_10080AC98);
  uint64_t v30 = a1 + *(int *)(sub_100010218(&qword_10080AC80) + 36);
  *(unsigned char *)uint64_t v30 = v21;
  *(void *)(v30 + 8) = v23;
  *(void *)(v30 + 16) = v25;
  *(void *)(v30 + 24) = v27;
  *(void *)(v30 + 32) = v29;
  *(unsigned char *)(v30 + 40) = 0;
  return sub_10001457C((uint64_t)v14, &qword_10080AC98);
}

uint64_t sub_1003A4108@<X0>(uint64_t a1@<X0>, uint64_t (**a2)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1 - 8);
  sub_1003A5200(v2, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t (*)(void))type metadata accessor for StaticWaveformView);
  unint64_t v6 = (*(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v7 = swift_allocObject();
  uint64_t result = sub_1003A4D94((uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v7 + v6);
  *a2 = sub_1003A4DF8;
  a2[1] = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>))v7;
  return result;
}

uint64_t sub_1003A4208()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for $s7Journal0029StaticWaveformViewswift_tAFJhfMX121_0_33_A61E944E790334B8290030312B43B025Ll7PreviewfMf_15PreviewRegistryfMu_.MockWaveformProviding()
{
  return self;
}

void sub_1003A4264(double a1)
{
  *(double *)(*(void *)v1 + 32) = a1;
}

double sub_1003A4270()
{
  return *(double *)(*(void *)v0 + 32);
}

uint64_t sub_1003A427C(uint64_t a1)
{
  uint64_t result = sub_1003A5060(&qword_10080AB38, (void (*)(uint64_t))type metadata accessor for $s7Journal0029StaticWaveformViewswift_tAFJhfMX121_0_33_A61E944E790334B8290030312B43B0257PreviewfMf_15PreviewRegistryfMu_.MockWaveformProviding);
  *(void *)(a1 + 8) = result;
  return result;
}

void *sub_1003A42D4(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (void *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_100010218((uint64_t *)&unk_1008156B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v9 = a3[6];
    *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *(void *)((char *)a1 + v9) = *(void *)((char *)a2 + v9);
    uint64_t v10 = a3[7];
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    long long v13 = *(_OWORD *)(v12 + 24);
    *(_OWORD *)((char *)a1 + v10 + 24) = v13;
    uint64_t v14 = v13;
    uint64_t v15 = **(void (***)(char *, char *, uint64_t))(v13 - 8);
    swift_bridgeObjectRetain();
    v15(v11, v12, v14);
  }
  return a1;
}

uint64_t sub_1003A4450(uint64_t a1, uint64_t a2)
{
  sub_100010218((uint64_t *)&unk_1008156B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v4 = type metadata accessor for LayoutDirection();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 28);

  return _s7Journal19DynamicWaveformViewVwxx_0(v5);
}

void *sub_1003A44FC(void *a1, void *a2, int *a3)
{
  sub_100010218((uint64_t *)&unk_1008156B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = type metadata accessor for LayoutDirection();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  else
  {
    *a1 = *a2;
    swift_retain();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v7 = a3[6];
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *(void *)((char *)a1 + v7) = *(void *)((char *)a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  long long v11 = *(_OWORD *)(v10 + 24);
  *(_OWORD *)((char *)a1 + v8 + 24) = v11;
  uint64_t v12 = v11;
  long long v13 = **(void (***)(char *, char *, uint64_t))(v11 - 8);
  swift_bridgeObjectRetain();
  v13(v9, v10, v12);
  return a1;
}

void *sub_1003A4628(void *a1, void *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10001457C((uint64_t)a1, (uint64_t *)&unk_1008156B0);
    sub_100010218((uint64_t *)&unk_1008156B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = type metadata accessor for LayoutDirection();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    }
    else
    {
      *a1 = *a2;
      swift_retain();
    }
    swift_storeEnumTagMultiPayload();
  }
  *((unsigned char *)a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
  *(void *)((char *)a1 + a3[6]) = *(void *)((char *)a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_1001C2600((void *)((char *)a1 + a3[7]), (void *)((char *)a2 + a3[7]));
  return a1;
}

char *sub_1003A4738(char *a1, char *a2, int *a3)
{
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1008156B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v7 = type metadata accessor for LayoutDirection();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
  }
  uint64_t v8 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  long long v11 = &a2[v9];
  long long v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *((void *)v10 + 4) = *((void *)v11 + 4);
  return a1;
}

char *sub_1003A4830(char *a1, char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_10001457C((uint64_t)a1, (uint64_t *)&unk_1008156B0);
    uint64_t v6 = sub_100010218((uint64_t *)&unk_1008156B0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = type metadata accessor for LayoutDirection();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
    }
  }
  uint64_t v8 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  *(void *)&a1[v8] = *(void *)&a2[v8];
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[7];
  uint64_t v10 = &a1[v9];
  long long v11 = &a2[v9];
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&a1[v9]);
  long long v12 = *((_OWORD *)v11 + 1);
  *(_OWORD *)uint64_t v10 = *(_OWORD *)v11;
  *((_OWORD *)v10 + 1) = v12;
  *((void *)v10 + 4) = *((void *)v11 + 4);
  return a1;
}

uint64_t sub_1003A4950(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1003A4964);
}

uint64_t sub_1003A4964(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218(&qword_10080AB40);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1003A4A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1003A4A3C);
}

uint64_t sub_1003A4A3C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100010218(&qword_10080AB40);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for StaticWaveformView()
{
  uint64_t result = qword_10080ABA0;
  if (!qword_10080ABA0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003A4B48()
{
  sub_1003A4BF4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1003A4BF4()
{
  if (!qword_10080ABB0)
  {
    type metadata accessor for LayoutDirection();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10080ABB0);
    }
  }
}

uint64_t sub_1003A4C4C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1003A4C68()
{
  uint64_t v1 = type metadata accessor for StaticWaveformView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  sub_100010218((uint64_t *)&unk_1008156B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = type metadata accessor for LayoutDirection();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  _s7Journal19DynamicWaveformViewVwxx_0(v0 + v2 + *(int *)(v1 + 28));

  return swift_deallocObject();
}

uint64_t sub_1003A4D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StaticWaveformView();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003A4DF8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for StaticWaveformView() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1003A240C(a1, v6, a2);
}

uint64_t sub_1003A4E78()
{
  uint64_t v1 = type metadata accessor for StaticWaveformView();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  sub_100010218((uint64_t *)&unk_1008156B0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v3 = type metadata accessor for LayoutDirection();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v0 + v2, v3);
  }
  else
  {
    swift_release();
  }
  swift_bridgeObjectRelease();
  _s7Journal19DynamicWaveformViewVwxx_0(v0 + v2 + *(int *)(v1 + 28));
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003A4FC0(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for StaticWaveformView() - 8);
  unint64_t v4 = (*(void *)(v3 + 64)
      + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1003A3BC0(*(double *)(v1 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8)), a1, *(void *)(v1 + v4));
}

uint64_t sub_1003A5060(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003A50A8()
{
  return swift_deallocObject();
}

uint64_t sub_1003A50B8@<X0>(uint64_t a1@<X8>)
{
  return sub_1003A3D9C(a1);
}

unint64_t sub_1003A50D4()
{
  unint64_t result = qword_10080AC88;
  if (!qword_10080AC88)
  {
    sub_100014440(&qword_10080AC80);
    sub_1003A5150();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080AC88);
  }
  return result;
}

unint64_t sub_1003A5150()
{
  unint64_t result = qword_10080AC90;
  if (!qword_10080AC90)
  {
    sub_100014440(&qword_10080AC98);
    sub_100014488(&qword_10080ACA0, &qword_10080ACA8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080AC90);
  }
  return result;
}

uint64_t sub_1003A51F0()
{
  return swift_deallocObject();
}

uint64_t sub_1003A5200(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003A5268(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Capsule();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1003A52C4()
{
  uint64_t v1 = type metadata accessor for GeometryProxy();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003A5380@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(type metadata accessor for GeometryProxy() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + v7);
  double v9 = *(double *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1003A370C(a1, v2 + v6, v8, a2, v9);
}

uint64_t sub_1003A5450()
{
  return sub_100014488(&qword_10080ACB8, &qword_10080ACC0);
}

uint64_t sub_1003A5490()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_10080ACC8);
  sub_100026A54(v0, (uint64_t)qword_10080ACC8);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

uint64_t AttachmentDownloadOperation.main@Sendable ()(uint64_t a1)
{
  v2[4] = a1;
  v2[5] = v1;
  sub_100010218((uint64_t *)&unk_100800A60);
  v2[6] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  v2[10] = swift_task_alloc();
  return _swift_task_switch(sub_1003A568C, 0, 0);
}

uint64_t sub_1003A568C()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = *(void *)(v1 + qword_10080ACF0);
  uint64_t v3 = swift_task_alloc();
  v0[11] = v3;
  *(void *)(v3 + 16) = v1;
  unint64_t v4 = (void *)swift_task_alloc();
  v0[12] = v4;
  unint64_t v5 = sub_10011E62C();
  *unint64_t v4 = v0;
  v4[1] = sub_1003A5794;
  return CKDatabase.configuredWith<A>(configuration:group:body:)(v0 + 2, v2, 0, &unk_10080AD00, v3, v5);
}

uint64_t sub_1003A5794()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1003A5D64;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1003A58B0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003A58B0()
{
  uint64_t v34 = v0;
  uint64_t v1 = v0[2];
  if (!CKRecord.subscript.getter()) {
    goto LABEL_7;
  }
  self;
  uint64_t v2 = (void *)swift_dynamicCastObjCClass();
  if (!v2)
  {
    swift_unknownObjectRelease();
LABEL_7:
    if (qword_1007F6EF0 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_100026A54(v17, (uint64_t)qword_10080ACC8);
    uint64_t v18 = v1;
    uint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v19, v20))
    {
      char v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)char v21 = 136315138;
      id v22 = [v18 debugDescription];
      uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v25 = v24;

      v0[3] = sub_10011EA98(v23, v25, &v33);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();

      _os_log_impl((void *)&_mh_execute_header, v19, v20, "error getting DataConfig.JournalEntryAssetFileAttachment.file: %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    goto LABEL_19;
  }
  id v3 = [v2 fileURL];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v6 = v0[8];
    uint64_t v5 = v0[9];
    uint64_t v8 = v0[6];
    uint64_t v7 = v0[7];
    static URL._unconditionallyBridgeFromObjectiveC(_:)();

    double v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32);
    v9(v8, v5, v7);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v8, 0, 1, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v7) != 1)
    {
      uint64_t v10 = v0[10];
      uint64_t v11 = v0[6];
      uint64_t v12 = v0[7];
      uint64_t v13 = v0[4];
      swift_unknownObjectRelease();
      v9(v10, v11, v12);
      uint64_t v14 = sub_100010218((uint64_t *)&unk_100800980);
      uint64_t v15 = *(int *)(v14 + 48);
      v9(v13, v10, v12);
      uint64_t v16 = 0;
      *(void *)(v13 + v15) = v1;
      goto LABEL_20;
    }
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t, void))(v0[8] + 56))(v0[6], 1, 1, v0[7]);
  }
  sub_100052EAC(v0[6]);
  if (qword_1007F6EF0 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  sub_100026A54(v26, (uint64_t)qword_10080ACC8);
  uint64_t v27 = Logger.logObject.getter();
  os_log_type_t v28 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v29 = 0;
    _os_log_impl((void *)&_mh_execute_header, v27, v28, "ckAsset.fileURL is nil", v29, 2u);
    swift_slowDealloc();
    uint64_t v30 = v1;
  }
  else
  {
    uint64_t v30 = v27;
    uint64_t v27 = v1;
  }
  swift_unknownObjectRelease();

LABEL_19:
  uint64_t v14 = sub_100010218((uint64_t *)&unk_100800980);
  uint64_t v16 = 1;
LABEL_20:
  (*(void (**)(void, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v0[4], v16, 1, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = (uint64_t (*)(void))v0[1];
  return v31();
}

uint64_t sub_1003A5D64()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003A5DF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[17] = a2;
  v3[18] = a3;
  v3[16] = a1;
  return _swift_task_switch(sub_1003A5E14, 0, 0);
}

uint64_t sub_1003A5E14()
{
  uint64_t v1 = (void *)v0[17];
  uint64_t v2 = *(void *)(v0[18] + qword_10080AD08);
  v0[2] = v0;
  v0[7] = v0 + 15;
  v0[3] = sub_10011E3D0;
  uint64_t v3 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1001998C8;
  v0[13] = &unk_1007A8658;
  v0[14] = v3;
  [v1 fetchRecordWithID:v2 completionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1003A5F20(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_10002C194;
  v7[17] = a2;
  v7[18] = v6;
  v7[16] = a1;
  return _swift_task_switch(sub_1003A5E14, 0, 0);
}

void AttachmentDownloadOperation.init()()
{
}

void sub_1003A6010()
{
}

void sub_1003A6040()
{
  uint64_t v1 = *(void **)(v0 + qword_10080ACF0);
}

id AttachmentDownloadOperation.__deallocating_deinit()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for AttachmentDownloadOperation();
  return [super dealloc];
}

void sub_1003A60D8(uint64_t a1)
{
  objc_super v2 = *(void **)(a1 + qword_10080ACF0);
}

uint64_t type metadata accessor for AttachmentDownloadOperation()
{
  uint64_t result = qword_10080AD40;
  if (!qword_10080AD40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003A6190()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1003A61DC()
{
  return type metadata accessor for AttachmentDownloadOperation();
}

ValueMetadata *type metadata accessor for AudioData()
{
  return &type metadata for AudioData;
}

uint64_t initializeWithCopy for RecordingRuntimeCalculator(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  id v4 = v3;
  return a1;
}

uint64_t assignWithCopy for RecordingRuntimeCalculator(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for RecordingRuntimeCalculator(uint64_t a1, uint64_t a2)
{
  id v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for RecordingRuntimeCalculator()
{
  return &type metadata for RecordingRuntimeCalculator;
}

void sub_1003A62F8(char a1, void *a2, void *a3)
{
  if (!a2 || !a1) {
    goto LABEL_7;
  }
  id v7 = *(id *)v3;
  if (!*(void *)v3) {
    id v7 = a3;
  }
  *(void *)uint64_t v3 = v7;
  sub_100312EC4(a2, a3);
  id v8 = v7;
  unsigned int v9 = [a2 frameLength];
  int v10 = *(_DWORD *)(v3 + 8);
  BOOL v11 = __CFADD__(v10, v9);
  int v12 = v10 + v9;
  if (!v11)
  {
    *(_DWORD *)(v3 + 8) = v12;
    id v13 = [a3 hostTime];

    *(void *)(v3 + 16) = v13;
LABEL_7:
    *(unsigned char *)(v3 + 24) = a1 == 1;
    return;
  }
  __break(1u);
}

const char *DataConfig.spotlightDomain.unsafeMutableAddressor()
{
  return "Journal";
}

void *DataConfig.spotlightBundleIdentifier.unsafeMutableAddressor()
{
  return &static DataConfig.spotlightBundleIdentifier;
}

void *DataConfig.APP_BUNDLE_ID.unsafeMutableAddressor()
{
  return &static DataConfig.APP_BUNDLE_ID;
}

const char *DataConfig.RECORD_TYPE_JOURNAL_ENTRY.unsafeMutableAddressor()
{
  return "JournalEntry";
}

void *DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET.unsafeMutableAddressor()
{
  return &static DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET;
}

void *DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET_FILE_ATTACHMENT.unsafeMutableAddressor()
{
  return &static DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET_FILE_ATTACHMENT;
}

void *DataConfig.APP_GROUP.unsafeMutableAddressor()
{
  return &static DataConfig.APP_GROUP;
}

const char *DataConfig.ZONE_NAME.unsafeMutableAddressor()
{
  return "JurassicZone";
}

void *DataConfig.ZONE_SUBSCRIPTION_ID.unsafeMutableAddressor()
{
  return &static DataConfig.ZONE_SUBSCRIPTION_ID;
}

void *DataConfig.prioritizeDownloadNotification.unsafeMutableAddressor()
{
  return &static DataConfig.prioritizeDownloadNotification;
}

const char *DataConfig.downloadIDKey.unsafeMutableAddressor()
{
  return "downloadIDKey";
}

void *DataConfig.downloadPriorityKey.unsafeMutableAddressor()
{
  return &static DataConfig.downloadPriorityKey;
}

void *DataConfig.downloadTypeKey.unsafeMutableAddressor()
{
  return &static DataConfig.downloadTypeKey;
}

NSURLFileProtectionType sub_1003A6458()
{
  qword_10083D460 = 0xD000000000000017;
  qword_10083D468 = 0x80000001006947B0;
  qword_10083D470 = (uint64_t)NSURLFileProtectionCompleteUnlessOpen;
  return NSURLFileProtectionCompleteUnlessOpen;
}

NSFileProtectionType sub_1003A6490()
{
  type metadata accessor for DataStackConfiguration();
  swift_allocObject();
  qword_10083D478 = (uint64_t)sub_1005014F8(0x73746E656D6F6DLL, 0xE700000000000000, 0x73746E656D6F6DLL, 0xE700000000000000, NSFileProtectionCompleteUnlessOpen, 0, 0xD000000000000011, 0x80000001006876D0, 0xD000000000000017, 0x80000001006947B0);

  return NSFileProtectionCompleteUnlessOpen;
}

const char *DataConfig.COREDATA_MODEL_NAME.unsafeMutableAddressor()
{
  return "moments";
}

const char *DataConfig.COREDATA_FILENAME.unsafeMutableAddressor()
{
  return "moments";
}

void *DataConfig.CONTAINER_ID.unsafeMutableAddressor()
{
  return &static DataConfig.CONTAINER_ID;
}

unint64_t static DataConfig.spotlightBundleIdentifier.getter()
{
  return 0xD000000000000011;
}

unint64_t static DataConfig.APP_GROUP.getter()
{
  return 0xD000000000000017;
}

uint64_t static DataConfig.COREDATA_MODEL_NAME.getter()
{
  return 0x73746E656D6F6DLL;
}

uint64_t static DataConfig.ZONE_NAME.getter()
{
  return 0x636973736172754ALL;
}

unint64_t static DataConfig.ZONE_SUBSCRIPTION_ID.getter()
{
  return 0xD000000000000025;
}

void *DataConfig.METADATA_KEY.unsafeMutableAddressor()
{
  return &static DataConfig.METADATA_KEY;
}

unint64_t static DataConfig.METADATA_KEY.getter()
{
  return 0xD000000000000015;
}

void *DataConfig.METADATA_USER_ID_KEY.unsafeMutableAddressor()
{
  return &static DataConfig.METADATA_USER_ID_KEY;
}

unint64_t static DataConfig.METADATA_USER_ID_KEY.getter()
{
  return 0xD00000000000001BLL;
}

uint64_t static DataConfig.RECORD_TYPE_JOURNAL_ENTRY.getter()
{
  return 0x456C616E72756F4ALL;
}

unint64_t static DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET.getter()
{
  return 0xD000000000000011;
}

unint64_t static DataConfig.RECORD_TYPE_JOURNAL_ENTRY_ASSET_FILE_ATTACHMENT.getter()
{
  return 0xD00000000000001FLL;
}

unint64_t static DataConfig.prioritizeDownloadNotification.getter()
{
  return 0xD00000000000001ELL;
}

unint64_t static DataConfig.downloadPriorityKey.getter()
{
  return 0xD000000000000013;
}

uint64_t static DataConfig.downloadIDKey.getter()
{
  return 0x64616F6C6E776F64;
}

uint64_t static DataConfig.downloadTypeKey.getter()
{
  return 0x64616F6C6E776F64;
}

uint64_t static DataConfig.spotlightDomain.getter()
{
  return 0x6C616E72756F4ALL;
}

void sub_1003A6754()
{
  qword_10083D480 = 0x4156E36000000000;
}

void *DataConfig.MAX_ASSUMED_ASSETS_PER_ENTRY.unsafeMutableAddressor()
{
  return &static DataConfig.MAX_ASSUMED_ASSETS_PER_ENTRY;
}

uint64_t static DataConfig.MAX_ASSUMED_ASSETS_PER_ENTRY.getter()
{
  return 100;
}

uint64_t type metadata accessor for DataConfig()
{
  return self;
}

uint64_t sub_1003A67A0()
{
  uint64_t v1 = v0;
  v22[0] = swift_getObjectType();
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for URL();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  BOOL v11 = (char *)v22 - v10;
  sub_1003A7098();
  swift_getKeyPath();
  uint64_t v23 = v0;
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__recordingFilename);
  uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__recordingFilename + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v23 = v13;
  uint64_t v24 = v12;
  v14._countAndFlagsBits = 1717658414;
  v14._object = (void *)0xE400000000000000;
  String.append(_:)(v14);
  URL.appendingPathComponent(_:)();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_getKeyPath();
  uint64_t v23 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  type metadata accessor for RecorderActor();
  swift_allocObject();
  uint64_t v16 = sub_1003B0498((uint64_t)v11, Strong);
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  v22[-2] = v1;
  v22[-1] = v16;
  uint64_t v23 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  type metadata accessor for MainActor();
  uint64_t v19 = static MainActor.shared.getter();
  os_log_type_t v20 = (void *)swift_allocObject();
  v20[2] = v19;
  v20[3] = &protocol witness table for MainActor;
  v20[4] = v22[0];
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_10080B460, (uint64_t)v20);
  return swift_release();
}

uint64_t sub_1003A6CDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for MainActor();
  uint64_t v6 = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  v7[4] = v1;
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_10080B310, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1003A6DEC()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v16 = v0;
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC7Journal12AudioManager__audioRecorder];
  if (v5)
  {
    uint64_t v6 = self;
    swift_retain();
    id v7 = [v6 sharedApplication];
    [v7 setIdleTimerDisabled:0];

    [*(id *)(v5 + 112) currentTime];
    uint64_t v9 = v8;
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v15 - 4) = (uint64_t)v0;
    *(&v15 - 3) = v9;
    *((unsigned char *)&v15 - 16) = 0;
    uint64_t v16 = v0;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v11 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v3, 1, 1, v11);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v12 = v0;
    uint64_t v13 = static MainActor.shared.getter();
    Swift::String v14 = (void *)swift_allocObject();
    v14[2] = v13;
    v14[3] = &protocol witness table for MainActor;
    v14[4] = v5;
    v14[5] = v12;
    sub_100328A60((uint64_t)v3, (uint64_t)&unk_10080B320, (uint64_t)v14);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1003A7098()
{
  uint64_t v0 = type metadata accessor for URL.DirectoryHint();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for URL();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F6EF8 != -1) {
    swift_once();
  }
  if (qword_10083D468)
  {
    sub_1004FD498(qword_10083D460, (void *)qword_10083D468, (uint64_t)v7);
    (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for URL.DirectoryHint.inferFromPath(_:), v0);
    sub_100014344();
    URL.appending<A>(components:directoryHint:)();
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  else
  {
    return static URL.temporaryDirectory.getter();
  }
}

uint64_t sub_1003A72C8()
{
  swift_getObjectType();
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  static Published.subscript.setter();
  return sub_1003A6CDC();
}

uint64_t sub_1003A73F0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_10080AED0);
  sub_100026A54(v0, (uint64_t)qword_10080AED0);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

id sub_1003A74F0()
{
  type metadata accessor for SessionActor();
  uint64_t v0 = swift_allocObject();
  swift_defaultActor_initialize();
  id result = [self sharedInstance];
  *(void *)(v0 + 112) = result;
  qword_10080AEE8 = v0;
  return result;
}

uint64_t sub_1003A7550()
{
  return swift_unknownObjectWeakLoadStrong();
}

uint64_t sub_1003A75FC@<X0>(uint64_t *a1@<X8>)
{
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  *a1 = result;
  return result;
}

uint64_t sub_1003A76B0()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_1003A7790()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1003A77B4()
{
  return sub_1003A9230();
}

uint64_t sub_1003A77C8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1003A92D4(a1, &OBJC_IVAR____TtC7Journal12AudioManager__audioRecorder, a2);
}

uint64_t sub_1003A77DC()
{
  return swift_release();
}

uint64_t sub_1003A78BC()
{
  return sub_1003A9230();
}

uint64_t sub_1003A78D0()
{
  return swift_release();
}

uint64_t sub_1003A79B0()
{
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__recordingFilename);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1003A7A6C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void *)(v3 + OBJC_IVAR____TtC7Journal12AudioManager__recordingFilename + 8);
  *a2 = *(void *)(v3 + OBJC_IVAR____TtC7Journal12AudioManager__recordingFilename);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1003A7B24()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003A7C08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC7Journal12AudioManager__recordingFilename);
  *uint64_t v3 = a2;
  v3[1] = a3;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003A7C50()
{
  return sub_1003A7D6C((uint64_t)&unk_1006E5FD0, &OBJC_IVAR____TtC7Journal12AudioManager__isRecording);
}

uint64_t sub_1003A7C64(uint64_t result, char a2)
{
  *(unsigned char *)(result + OBJC_IVAR____TtC7Journal12AudioManager__isRecording) = a2;
  return result;
}

uint64_t sub_1003A7C74()
{
  return sub_1003A7D6C((uint64_t)&unk_1006E60E8, &OBJC_IVAR____TtC7Journal12AudioManager__isPausing);
}

uint64_t sub_1003A7C88()
{
  return swift_release();
}

uint64_t sub_1003A7D58()
{
  return sub_1003A7D6C((uint64_t)&unk_1006E60C0, &OBJC_IVAR____TtC7Journal12AudioManager__isPlaying);
}

uint64_t sub_1003A7D6C(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v2 + *a2);
}

uint64_t sub_1003A7E0C@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, unsigned char *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a3 = *(unsigned char *)(v5 + *a2);
  return result;
}

uint64_t sub_1003A7EC0()
{
  return swift_release();
}

uint64_t sub_1003A7F90()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1003A8054@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = (void *)(v3 + OBJC_IVAR____TtC7Journal12AudioManager__audioIntensities);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1003A8120()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003A8200(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)(a1 + OBJC_IVAR____TtC7Journal12AudioManager__audioIntensities);
  swift_beginAccess();
  *uint64_t v3 = a2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003A8270()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

double sub_1003A82E4()
{
  return sub_1003A8710((uint64_t)&unk_1006E6098, &OBJC_IVAR____TtC7Journal12AudioManager__currentlyPlayedPercentage);
}

uint64_t sub_1003A82F8()
{
  return swift_release();
}

double sub_1003A83D0()
{
  return sub_1003A8710((uint64_t)&unk_1006E6070, &OBJC_IVAR____TtC7Journal12AudioManager__currentlyPlayedTime);
}

uint64_t sub_1003A83E4()
{
  return swift_release();
}

uint64_t sub_1003A84BC()
{
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(void *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__recordedDuration);
}

uint64_t sub_1003A856C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  char v5 = *(unsigned char *)(v3 + OBJC_IVAR____TtC7Journal12AudioManager__recordedDuration + 8);
  *(void *)a2 = *(void *)(v3 + OBJC_IVAR____TtC7Journal12AudioManager__recordedDuration);
  *(unsigned char *)(a2 + 8) = v5;
  return result;
}

uint64_t sub_1003A8628()
{
  return swift_release();
}

double sub_1003A86FC()
{
  return sub_1003A8710((uint64_t)&unk_1006E6188, &OBJC_IVAR____TtC7Journal12AudioManager__currentRecordingTime);
}

double sub_1003A8710(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v2 + *a2);
}

double sub_1003A87B0@<D0>(uint64_t *a1@<X0>, void *a2@<X4>, double *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double result = *(double *)(v5 + *a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003A8864()
{
  return swift_release();
}

uint64_t sub_1003A893C@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = v1 + OBJC_IVAR____TtC7Journal12AudioManager__startRecordingTime;
  swift_beginAccess();
  uint64_t v4 = type metadata accessor for Date();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1003A8A38@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = v3 + OBJC_IVAR____TtC7Journal12AudioManager__startRecordingTime;
  swift_beginAccess();
  uint64_t v5 = type metadata accessor for Date();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_1003A8B34(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  (*(void (**)(unsigned char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a1, v4, v6);
  uint64_t v9 = *a2;
  swift_getKeyPath();
  uint64_t v12 = v9;
  uint64_t v13 = v8;
  uint64_t v14 = v9;
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v8, v4);
}

uint64_t sub_1003A8CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v8, a2, v4, v6);
  uint64_t v9 = a1 + OBJC_IVAR____TtC7Journal12AudioManager__startRecordingTime;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v9, v8, v4);
  return swift_endAccess();
}

void *sub_1003A8DDC()
{
  return sub_1003A8EE0((uint64_t)&unk_1006E6020, &OBJC_IVAR____TtC7Journal12AudioManager__timer);
}

void sub_1003A8DF0(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

void *sub_1003A8ECC()
{
  return sub_1003A8EE0((uint64_t)&unk_1006E6138, &OBJC_IVAR____TtC7Journal12AudioManager__audioAsset);
}

void *sub_1003A8EE0(uint64_t a1, void *a2)
{
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v4 = *(void **)(v2 + *a2);
  id v5 = v4;
  return v4;
}

id sub_1003A8F88@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  __n128 v6 = *(void **)(v5 + *a2);
  *a3 = v6;

  return v6;
}

void sub_1003A904C(void **a1)
{
  uint64_t v1 = *a1;
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  id v2 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
}

uint64_t sub_1003A9128()
{
  return sub_1003A9230();
}

uint64_t sub_1003A913C()
{
  return swift_release();
}

uint64_t sub_1003A921C()
{
  return sub_1003A9230();
}

uint64_t sub_1003A9230()
{
  return swift_retain();
}

uint64_t sub_1003A92D4@<X0>(uint64_t *a1@<X0>, void *a2@<X4>, void *a3@<X8>)
{
  uint64_t v5 = *a1;
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a3 = *(void *)(v5 + *a2);
  return swift_retain();
}

uint64_t sub_1003A938C()
{
  return swift_release();
}

id sub_1003A946C()
{
  uint64_t v1 = self;
  id v2 = [v1 defaultCenter];
  [v2 removeObserver:v0 name:UIApplicationDidEnterBackgroundNotification object:0];

  id v3 = [v1 defaultCenter];
  if (qword_1007F6E90 != -1) {
    swift_once();
  }
  [v3 removeObserver:v0 name:qword_10083D418 object:0];

  id v4 = [v1 defaultCenter];
  [v4 removeObserver:v0];

  v6.id receiver = v0;
  v6.Class super_class = (Class)type metadata accessor for AudioManager(0);
  return [super dealloc];
}

uint64_t sub_1003A9754()
{
  return type metadata accessor for AudioManager(0);
}

uint64_t type metadata accessor for AudioManager(uint64_t a1)
{
  return sub_10003352C(a1, (uint64_t *)&unk_10080AFC0);
}

uint64_t sub_1003A977C()
{
  type metadata accessor for MainActor();
  v0[2] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[3] = v2;
  v0[4] = v1;
  return _swift_task_switch(sub_1003A9810, v2, v1);
}

uint64_t sub_1003A9810()
{
  if (qword_1007F6F18 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10080AEE8;
  *(void *)(v0 + 40) = qword_10080AEE8;
  return _swift_task_switch(sub_1003A98A8, v1, 0);
}

uint64_t sub_1003A98A8()
{
  sub_1003B01A0();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  return _swift_task_switch(sub_10007D354, v1, v2);
}

id sub_1003A990C()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218((uint64_t *)&unk_100800FB0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC7Journal12AudioManager__audioRecorder] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal12AudioManager__audioPlayer] = 0;
  uint64_t v9 = &v0[OBJC_IVAR____TtC7Journal12AudioManager__recordingFilename];
  *uint64_t v9 = 0;
  v9[1] = 0xE000000000000000;
  v0[OBJC_IVAR____TtC7Journal12AudioManager__isRecording] = 0;
  v0[OBJC_IVAR____TtC7Journal12AudioManager__isPausing] = 0;
  v0[OBJC_IVAR____TtC7Journal12AudioManager__isPlaying] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal12AudioManager__audioIntensities] = _swiftEmptyArrayStorage;
  uint64_t v10 = &v0[OBJC_IVAR____TtC7Journal12AudioManager__currentDecibels];
  uint64_t v17 = _swiftEmptyArrayStorage;
  uint64_t v11 = v0;
  sub_100010218(&qword_1007FE888);
  Published.init(initialValue:)();
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v10, v8, v5);
  *(void *)&v11[OBJC_IVAR____TtC7Journal12AudioManager__currentlyPlayedPercentage] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal12AudioManager__currentlyPlayedTime] = 0;
  uint64_t v12 = &v11[OBJC_IVAR____TtC7Journal12AudioManager__recordedDuration];
  *(void *)uint64_t v12 = 0;
  v12[8] = 1;
  *(void *)&v11[OBJC_IVAR____TtC7Journal12AudioManager__currentRecordingTime] = 0;
  Date.init()();
  (*(void (**)(char *, char *, uint64_t))(v2 + 32))(&v11[OBJC_IVAR____TtC7Journal12AudioManager__startRecordingTime], v4, v1);
  *(void *)&v11[OBJC_IVAR____TtC7Journal12AudioManager__timer] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal12AudioManager__audioAsset] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal12AudioManager_recordingRes] = 0x3FB999999999999ALL;
  *(void *)&v11[OBJC_IVAR____TtC7Journal12AudioManager_playingRes] = 0x3FB999999999999ALL;
  *(void *)&v11[OBJC_IVAR____TtC7Journal12AudioManager__playerTimeCancellable] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal12AudioManager__recorderTimeCancellable] = 0;
  ObservationRegistrar.init()();

  uint64_t v13 = (objc_class *)type metadata accessor for AudioManager(0);
  v16.id receiver = v11;
  v16.Class super_class = v13;
  return [super init];
}

void sub_1003A9C1C()
{
  sub_1003A9D8C();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Date();
    if (v1 <= 0x3F)
    {
      type metadata accessor for ObservationRegistrar();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_1003A9D8C()
{
  if (!qword_10080AFD0)
  {
    sub_100014440(&qword_1007FE888);
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10080AFD0);
    }
  }
}

uint64_t sub_1003A9DE8()
{
  type metadata accessor for MainActor();
  v0[2] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[3] = v2;
  v0[4] = v1;
  return _swift_task_switch(sub_1003A9E7C, v2, v1);
}

uint64_t sub_1003A9E7C()
{
  if (qword_1007F6F18 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10080AEE8;
  *(void *)(v0 + 40) = qword_10080AEE8;
  return _swift_task_switch(sub_1003A9F14, v1, 0);
}

uint64_t sub_1003A9F14()
{
  sub_1003AFE70((uint64_t)AVAudioSessionCategoryPlayAndRecord);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  return _swift_task_switch(sub_100082D50, v1, v2);
}

uint64_t sub_1003A9F84()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  objc_super v16 = v0;
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  uint64_t v5 = *(void *)&v0[OBJC_IVAR____TtC7Journal12AudioManager__audioRecorder];
  if (v5)
  {
    uint64_t v6 = self;
    swift_retain();
    id v7 = [v6 sharedApplication];
    [v7 setIdleTimerDisabled:1];

    swift_getKeyPath();
    objc_super v16 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    objc_super v16 = v0;
    swift_getKeyPath();
    ObservationRegistrar.willSet<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v8 = &v0[OBJC_IVAR____TtC7Journal12AudioManager__audioIntensities];
    swift_beginAccess();
    *(void *)uint64_t v8 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    objc_super v16 = v0;
    swift_getKeyPath();
    ObservationRegistrar.didSet<A, B>(_:keyPath:)();
    swift_release();
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v9 = (void (*)(char **, void))static Published.subscript.modify();
    *uint64_t v10 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    v9(&v16, 0);
    swift_release();
    swift_release();
    uint64_t v11 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v3, 1, 1, v11);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v12 = v0;
    uint64_t v13 = static MainActor.shared.getter();
    uint64_t v14 = (void *)swift_allocObject();
    v14[2] = v13;
    v14[3] = &protocol witness table for MainActor;
    v14[4] = v5;
    v14[5] = v12;
    sub_100328A60((uint64_t)v3, (uint64_t)&unk_10080B478, (uint64_t)v14);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1003AA2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  v5[4] = type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  return _swift_task_switch(sub_1003AA328, a4, 0);
}

uint64_t sub_1003AA328()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + 112);
  if ([v1 isRecording])
  {
    uint64_t v2 = sub_1003AA4AC;
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  else
  {
    [v1 prepareToRecord];
    *(unsigned char *)(v0 + 56) = [v1 record];
    uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v7 = v6;
    uint64_t v2 = sub_1003AA408;
    uint64_t v3 = v5;
    uint64_t v4 = v7;
  }
  return _swift_task_switch(v2, v3, v4);
}

uint64_t sub_1003AA408()
{
  if (*(unsigned char *)(v0 + 56) == 1)
  {
    return _swift_task_switch(sub_1003AA4AC, 0, 0);
  }
  else
  {
    swift_release();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
}

uint64_t sub_1003AA4AC()
{
  *(void *)(v0 + 48) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003AA538, v2, v1);
}

uint64_t sub_1003AA538()
{
  swift_release();
  sub_1003AA5CC();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002F9240, v1, v0);
}

uint64_t sub_1003AA5CC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_10080B3B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v17 = (char *)&v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Date.init()();
  swift_getKeyPath();
  uint64_t v22 = v0;
  uint64_t v23 = v7;
  uint64_t v24 = v0;
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  objc_super v16 = (char *)&type metadata for () + 8;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id v8 = [self scheduledTimerWithTimeInterval:v0 target:"updateDecibels" selector:0 userInfo:1 repeats:0.1];
  swift_getKeyPath();
  uint64_t v20 = v0;
  id v21 = v8;
  uint64_t v24 = v0;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();

  sub_1003B417C();
  id v9 = [self mainRunLoop];
  uint64_t v10 = type metadata accessor for NSRunLoop.SchedulerOptions();
  uint64_t v11 = (uint64_t)v17;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v17, 1, 1, v10);
  uint64_t v12 = static NSTimer.publish(every:tolerance:on:in:options:)();

  sub_10001457C(v11, &qword_10080B3B0);
  uint64_t v24 = v12;
  type metadata accessor for NSTimer.TimerPublisher();
  sub_1003B2A1C(&qword_10080B3C0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v13 = ConnectablePublisher.autoconnect()();
  swift_release();
  uint64_t v24 = v13;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100010218(&qword_10080B3C8);
  sub_1003B41FC();
  uint64_t v14 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_getKeyPath();
  uint64_t v18 = v1;
  uint64_t v19 = v14;
  uint64_t v24 = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return swift_release();
}

uint64_t sub_1003AAA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  v5[5] = type metadata accessor for MainActor();
  v5[6] = static MainActor.shared.getter();
  return _swift_task_switch(sub_1003AAAA4, a4, 0);
}

uint64_t sub_1003AAAA4()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 24) + 112);
  if ([v1 isRecording]) {
    [v1 stop];
  }
  return _swift_task_switch(sub_1003AAB30, 0, 0);
}

uint64_t sub_1003AAB30()
{
  *(void *)(v0 + 56) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003AABBC, v2, v1);
}

uint64_t sub_1003AABBC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_release();
  swift_getKeyPath();
  uint64_t v2 = swift_task_alloc();
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 24) = 0;
  *(void *)(v0 + 16) = v1;
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 0;
  *(void *)(v0 + 16) = v1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  sub_1003AADEC();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003AAD8C, v5, v4);
}

uint64_t sub_1003AAD8C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003AADEC()
{
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__recorderTimeCancellable))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__timer) invalidate];
  uint64_t v2 = swift_getKeyPath();
  __chkstk_darwin(v2);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  return swift_release();
}

uint64_t sub_1003AAFF4()
{
  uint64_t v0 = type metadata accessor for Date();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v14 - v5;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v8 = (char *)result;
    Date.init()();
    swift_getKeyPath();
    v14[2] = v8;
    sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v9 = &v8[OBJC_IVAR____TtC7Journal12AudioManager__startRecordingTime];
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v3, v9, v0);
    Date.timeIntervalSince(_:)();
    uint64_t v11 = v10;
    uint64_t v12 = *(void (**)(char *, uint64_t))(v1 + 8);
    v12(v3, v0);
    v12(v6, v0);
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v14[-2] = v8;
    v14[-1] = v11;
    v14[1] = v8;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();

    return swift_release();
  }
  return result;
}

uint64_t sub_1003AB284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[6] = a4;
  v4[7] = type metadata accessor for MainActor();
  v4[8] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[9] = v6;
  v4[10] = v5;
  return _swift_task_switch(sub_1003AB320, v6, v5);
}

uint64_t sub_1003AB320()
{
  uint64_t v1 = v0[6];
  swift_getKeyPath();
  uint64_t v2 = OBJC_IVAR____TtC7Journal12AudioManager___observationRegistrar;
  v0[2] = v1;
  v0[11] = v2;
  v0[12] = sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC7Journal12AudioManager__audioRecorder);
  v0[13] = v3;
  if (v3)
  {
    swift_retain();
    uint64_t v4 = sub_1003AB440;
    uint64_t v5 = v3;
  }
  else
  {
    v0[14] = 0;
    uint64_t v4 = sub_1003AB500;
    uint64_t v5 = 0;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_1003AB440()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 104) + 112);
  [v1 updateMeters];
  [v1 averagePowerForChannel:0];
  float v3 = v2;
  swift_release();
  double v4 = v3 + 50.0;
  if (v4 < 0.0) {
    double v4 = 0.0;
  }
  *(double *)(v0 + 112) = v4;
  return _swift_task_switch(sub_1003AB500, 0, 0);
}

uint64_t sub_1003AB500()
{
  *(void *)(v0 + 120) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003AB58C, v2, v1);
}

uint64_t sub_1003AB58C()
{
  uint64_t v1 = *((void *)v0 + 6);
  swift_release();
  swift_getKeyPath();
  *((void *)v0 + 2) = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *((void *)v0 + 2) = v1;
  swift_getKeyPath();
  ObservationRegistrar.willSet<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = (double **)(v1 + OBJC_IVAR____TtC7Journal12AudioManager__audioIntensities);
  swift_beginAccess();
  float v3 = *v2;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v2 = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    float v3 = sub_1002A5898(0, *((void *)v3 + 2) + 1, 1, v3);
    *uint64_t v2 = v3;
  }
  unint64_t v6 = *((void *)v3 + 2);
  unint64_t v5 = *((void *)v3 + 3);
  if (v6 >= v5 >> 1)
  {
    float v3 = sub_1002A5898((double *)(v5 > 1), v6 + 1, 1, v3);
    *uint64_t v2 = v3;
  }
  double v7 = v0[14];
  uint64_t v8 = *((void *)v0 + 6);
  *((void *)v3 + 2) = v6 + 1;
  v3[v6 + 4] = v7;
  swift_endAccess();
  *((void *)v0 + 2) = v8;
  swift_getKeyPath();
  ObservationRegistrar.didSet<A, B>(_:keyPath:)();
  swift_release();
  swift_getKeyPath();
  swift_getKeyPath();
  id v9 = (void (*)(double *, void))static Published.subscript.modify();
  uint64_t v11 = v10;
  uint64_t v12 = *v10;
  char v13 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v11 = v12;
  if ((v13 & 1) == 0)
  {
    uint64_t v12 = sub_1002A5898(0, *((void *)v12 + 2) + 1, 1, v12);
    *uint64_t v11 = v12;
  }
  unint64_t v15 = *((void *)v12 + 2);
  unint64_t v14 = *((void *)v12 + 3);
  if (v15 >= v14 >> 1)
  {
    uint64_t v12 = sub_1002A5898((double *)(v14 > 1), v15 + 1, 1, v12);
    *uint64_t v11 = v12;
  }
  double v16 = v0[14];
  *((void *)v12 + 2) = v15 + 1;
  v12[v15 + 4] = v16;
  v9(v0 + 2, 0);
  swift_release();
  swift_release();
  uint64_t v17 = *((void *)v0 + 9);
  uint64_t v18 = *((void *)v0 + 10);
  return _swift_task_switch(sub_1003AB828, v17, v18);
}

uint64_t sub_1003AB828()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003AB9B4(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v57 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v66 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v60 = (char *)&v57 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  os_log_type_t v64 = (char *)&v57 - v10;
  __chkstk_darwin(v11);
  uint64_t v61 = (char *)&v57 - v12;
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v57 - v14;
  swift_getKeyPath();
  uint64_t v67 = v2;
  uint64_t v68 = a1;
  double v16 = &v2[OBJC_IVAR____TtC7Journal12AudioManager___observationRegistrar];
  v70[0] = (uint64_t)v2;
  uint64_t v17 = sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  id v18 = a1;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  uint64_t v63 = 0;
  uint64_t v19 = v66;
  swift_release();

  sub_1003B2D58(v6);
  int v20 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v6, 1, v7);
  uint64_t v65 = v17;
  uint64_t v62 = v16;
  if (v20 == 1)
  {
    id v21 = v61;
    sub_1003A7098();
    swift_getKeyPath();
    v70[0] = (uint64_t)v2;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v23 = *(void *)&v2[OBJC_IVAR____TtC7Journal12AudioManager__recordingFilename];
    uint64_t v22 = *(void *)&v2[OBJC_IVAR____TtC7Journal12AudioManager__recordingFilename + 8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v70[0] = v23;
    v70[1] = v22;
    v24._countAndFlagsBits = 1717658414;
    v24._object = (void *)0xE400000000000000;
    String.append(_:)(v24);
    URL.appendingPathComponent(_:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v7);
    sub_10001457C((uint64_t)v6, (uint64_t *)&unk_100800A60);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v15, v6, v7);
  }
  uint64_t v25 = v7;
  uint64_t v26 = v19;
  id v27 = [self defaultManager];
  URL.path(percentEncoded:)(1);
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v29 = [v27 fileExistsAtPath:v28];

  if (v29)
  {
    uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v26 + 16);
    uint64_t v31 = (uint64_t)v64;
    uint64_t v61 = v15;
    uint64_t v58 = v30;
    uint64_t v59 = v25;
    ((void (*)(char *))v30)(v64);
    swift_getKeyPath();
    v70[0] = (uint64_t)v2;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v32 = *(void *)&v2[OBJC_IVAR____TtC7Journal12AudioManager__recordedDuration];
    int v33 = v2[OBJC_IVAR____TtC7Journal12AudioManager__recordedDuration + 8];
    type metadata accessor for PlayerActor(0);
    swift_allocObject();
    uint64_t v34 = v2;
    uint64_t v35 = v63;
    uint64_t v36 = sub_1003B0744(v31, v32, v33, (uint64_t)v2);
    if (v35)
    {
      uint64_t v37 = v61;
      uint64_t v38 = v59;
      if (qword_1007F6F10 != -1) {
        swift_once();
      }
      uint64_t v39 = type metadata accessor for Logger();
      sub_100026A54(v39, (uint64_t)qword_10080AED0);
      uint64_t v40 = v60;
      v58(v60, v37, v38);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v41 = Logger.logObject.getter();
      os_log_type_t v42 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = swift_slowAlloc();
        uint64_t v44 = (void *)swift_slowAlloc();
        uint64_t v65 = swift_slowAlloc();
        v70[0] = v65;
        *(_DWORD *)uint64_t v43 = 138412546;
        swift_errorRetain();
        uint64_t v45 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v69 = v45;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *uint64_t v44 = v45;
        swift_errorRelease();
        swift_errorRelease();
        *(_WORD *)(v43 + 12) = 2080;
        sub_1003B2A1C((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v69 = sub_10011EA98(v46, v47, v70);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        long long v48 = *(void (**)(char *, uint64_t))(v66 + 8);
        v48(v40, v38);
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "Error configuring player: %@\nrecordingURL: %s", (uint8_t *)v43, 0x16u);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
        return ((uint64_t (*)(char *, uint64_t))v48)(v61, v38);
      }
      else
      {

        uint64_t v56 = *(void (**)(char *, uint64_t))(v66 + 8);
        v56(v40, v38);
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
        return ((uint64_t (*)(char *, uint64_t))v56)(v37, v38);
      }
    }
    else
    {
      uint64_t v54 = v36;
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      *(&v57 - 2) = (uint64_t)v34;
      *(&v57 - 1) = v54;
      v70[0] = (uint64_t)v34;
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      swift_release();
      return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v61, v59);
    }
  }
  else
  {
    if (qword_1007F6F10 != -1) {
      swift_once();
    }
    uint64_t v50 = type metadata accessor for Logger();
    sub_100026A54(v50, (uint64_t)qword_10080AED0);
    uint64_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v53 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v53 = 0;
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "No audio file found when configuring player, it may have been deleted by user cancellation. Aborting setup player.", v53, 2u);
      swift_slowDealloc();
    }

    return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v15, v25);
  }
}

uint64_t sub_1003AC238()
{
  type metadata accessor for MainActor();
  v0[2] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[3] = v2;
  v0[4] = v1;
  return _swift_task_switch(sub_1003AC2CC, v2, v1);
}

uint64_t sub_1003AC2CC()
{
  if (qword_1007F6F18 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10080AEE8;
  *(void *)(v0 + 40) = qword_10080AEE8;
  return _swift_task_switch(sub_1003AC364, v1, 0);
}

uint64_t sub_1003AC364()
{
  sub_1003AFE70((uint64_t)AVAudioSessionCategoryPlayback);
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  return _swift_task_switch(sub_100082D50, v1, v2);
}

uint64_t sub_1003AC3D4@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC7Journal12AudioManager__audioPlayer);
  if (v3)
  {
    uint64_t v4 = v3 + OBJC_IVAR____TtC7JournalP33_50CFAC729B687C75C3E196706D50698611PlayerActor_url;
    uint64_t v5 = type metadata accessor for URL();
    uint64_t v6 = *(void *)(v5 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, v4, v5);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  else
  {
    uint64_t v8 = type metadata accessor for URL();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

uint64_t sub_1003AC560()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v11 = &v0[OBJC_IVAR____TtC7Journal12AudioManager___observationRegistrar];
  int v33 = v0;
  uint64_t v12 = sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  uint64_t v14 = *(void *)&v0[OBJC_IVAR____TtC7Journal12AudioManager__audioPlayer];
  if (v14)
  {
    uint64_t v32 = v12;
    if (qword_10083D488)
    {
      unsigned int v29 = v10;
      uint64_t v31 = v11;
      uint64_t v15 = qword_10083D490;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v30 = v8;
      uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v15 + 80);
      swift_retain();
      swift_unknownObjectRetain();
      v17(ObjectType, v15);
      uint64_t v18 = v30;
      swift_unknownObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v6, 1, v7) != 1)
      {
        uint64_t v19 = v29;
        (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v29, v6, v7);
        sub_1003B2A1C(&qword_100802670, (void (*)(uint64_t))&type metadata accessor for URL);
        if (dispatch thunk of static Equatable.== infix(_:_:)())
        {
          (*(void (**)(char *, uint64_t))(v18 + 8))(v19, v7);
        }
        else
        {
          if (qword_10083D488)
          {
            uint64_t v20 = qword_10083D490;
            uint64_t v21 = swift_getObjectType();
            uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v20 + 136);
            swift_unknownObjectRetain();
            v22(v21, v20);
            swift_unknownObjectRelease();
          }
          sub_1003B3B70(0, 0);
          (*(void (**)(char *, uint64_t))(v18 + 8))(v29, v7);
        }
        goto LABEL_11;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v6, 1, 1, v7);
      swift_retain();
    }
    sub_10001457C((uint64_t)v6, (uint64_t *)&unk_100800A60);
LABEL_11:
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v29 - 2) = v0;
    *((unsigned char *)&v29 - 8) = 1;
    int v33 = v0;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v24 = swift_getKeyPath();
    __chkstk_darwin(v24);
    *(&v29 - 2) = v0;
    *((unsigned char *)&v29 - 8) = 0;
    int v33 = v0;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v25 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v3, 1, 1, v25);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v26 = v0;
    uint64_t v27 = static MainActor.shared.getter();
    NSString v28 = (void *)swift_allocObject();
    uint64_t v28[2] = v27;
    v28[3] = &protocol witness table for MainActor;
    v28[4] = v14;
    v28[5] = v26;
    sub_100328A60((uint64_t)v3, (uint64_t)&unk_10080B398, (uint64_t)v28);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1003ACAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[3] = a4;
  v5[4] = a5;
  v5[5] = type metadata accessor for MainActor();
  v5[6] = static MainActor.shared.getter();
  return _swift_task_switch(sub_1003ACB48, a4, 0);
}

uint64_t sub_1003ACB48()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + 24) + 112);
  [v1 setEnableRate:1];
  if ([v1 prepareToPlay])
  {
    *(unsigned char *)(v0 + 80) = [v1 play];
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v3;
    *(void *)(v0 + 56) = v2;
    *(void *)(v0 + 64) = v3;
    uint64_t v5 = sub_1003ACC44;
    uint64_t v6 = v2;
  }
  else
  {
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v9 = v8;
    uint64_t v5 = sub_1003ACE68;
    uint64_t v6 = v7;
    uint64_t v4 = v9;
  }
  return _swift_task_switch(v5, v6, v4);
}

uint64_t sub_1003ACC44()
{
  if (*(unsigned char *)(v0 + 80))
  {
    return _swift_task_switch(sub_1003AD044, 0, 0);
  }
  else
  {
    swift_release();
    if (qword_1007F6F10 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100026A54(v1, (uint64_t)qword_10080AED0);
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v4 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to play audio", v4, 2u);
      swift_slowDealloc();
    }
    uint64_t v5 = *(void *)(v0 + 32);

    swift_getKeyPath();
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = v5;
    *(unsigned char *)(v6 + 24) = 0;
    *(void *)(v0 + 16) = v5;
    sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
    uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_1003ACE68()
{
  swift_release();
  if (qword_1007F6F10 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_10080AED0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to play audio", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = v0[4];

  swift_getKeyPath();
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v5;
  *(unsigned char *)(v6 + 24) = 0;
  v0[2] = v5;
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_1003AD044()
{
  *(void *)(v0 + 72) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003AD0D0, v2, v1);
}

uint64_t sub_1003AD0D0()
{
  uint64_t v1 = (void *)v0[4];
  swift_release();
  sub_1003AD260();
  uint64_t v2 = sub_1003B2A1C(&qword_10080B3A8, (void (*)(uint64_t))type metadata accessor for AudioManager);
  id v3 = v1;
  sub_1003B3B70((uint64_t)v1, v2);
  uint64_t v4 = self;
  id v5 = [v4 defaultCenter];
  [v5 addObserver:v3 selector:"appMovedToBackground" name:UIApplicationDidEnterBackgroundNotification object:0];

  id v6 = [v4 defaultCenter];
  if (qword_1007F6E90 != -1) {
    swift_once();
  }
  [v6 addObserver:v0[4] selector:"willEnterFullScreenView:" name:qword_10083D418 object:0];

  uint64_t v7 = v0[7];
  uint64_t v8 = v0[8];
  return _swift_task_switch(sub_1003AAD8C, v7, v8);
}

uint64_t sub_1003AD260()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_10080B3B0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v11[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1003B417C();
  id v5 = [self mainRunLoop];
  uint64_t v6 = type metadata accessor for NSRunLoop.SchedulerOptions();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
  uint64_t v7 = static NSTimer.publish(every:tolerance:on:in:options:)();

  sub_10001457C((uint64_t)v4, &qword_10080B3B0);
  uint64_t v14 = v7;
  type metadata accessor for NSTimer.TimerPublisher();
  sub_1003B2A1C(&qword_10080B3C0, (void (*)(uint64_t))&type metadata accessor for NSTimer.TimerPublisher);
  uint64_t v8 = ConnectablePublisher.autoconnect()();
  swift_release();
  uint64_t v14 = v8;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100010218(&qword_10080B3C8);
  sub_1003B41FC();
  uint64_t v9 = Publisher<>.sink(receiveValue:)();
  swift_release();
  swift_release();
  swift_getKeyPath();
  uint64_t v12 = v1;
  uint64_t v13 = v9;
  uint64_t v14 = v1;
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  return swift_release();
}

uint64_t sub_1003AD50C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v18 = v0;
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  uint64_t v7 = *(void *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__audioPlayer);
  if (v7)
  {
    v17[1] = ObjectType;
    swift_getKeyPath();
    uint64_t v18 = v0;
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(void *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__playerTimeCancellable))
    {
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    v17[-2] = v0;
    v17[-1] = 0;
    uint64_t v18 = v0;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v10 = static MainActor.shared.getter();
    uint64_t v11 = (void *)swift_allocObject();
    v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = v7;
    sub_100328A60((uint64_t)v5, (uint64_t)&unk_10080B378, (uint64_t)v11);
    swift_release();
    uint64_t v12 = swift_getKeyPath();
    __chkstk_darwin(v12);
    v17[-2] = v1;
    LOBYTE(v17[-1]) = 0;
    uint64_t v18 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v13 = swift_getKeyPath();
    __chkstk_darwin(v13);
    v17[-2] = v1;
    LOBYTE(v17[-1]) = 0;
    uint64_t v18 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    if (qword_10083D488 && qword_10083D488 == v1) {
      sub_1003B3B70(0, 0);
    }
    uint64_t v14 = self;
    id v15 = [v14 defaultCenter];
    [v15 removeObserver:v1 name:UIApplicationDidEnterBackgroundNotification object:0];

    id v16 = [v14 defaultCenter];
    if (qword_1007F6E90 != -1) {
      swift_once();
    }
    [v16 removeObserver:v1 name:qword_10083D418 object:0];

    sub_1003A6CDC();
    return swift_release();
  }
  return result;
}

uint64_t sub_1003AD984(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  return _swift_task_switch(sub_1003ADA04, a4, 0);
}

uint64_t sub_1003ADA04()
{
  [*(id *)(*(void *)(v0 + 16) + 112) stop];
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100193204, v2, v1);
}

void sub_1003ADA94()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v18 = v0;
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__audioPlayer);
  if (v5)
  {
    swift_getKeyPath();
    uint64_t v18 = v0;
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(void *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__playerTimeCancellable))
    {
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v17 - 2) = v0;
    *(&v17 - 1) = 0;
    uint64_t v18 = v0;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v7 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v8 = static MainActor.shared.getter();
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = v8;
    v9[3] = &protocol witness table for MainActor;
    v9[4] = v5;
    sub_100328A60((uint64_t)v4, (uint64_t)&unk_10080B368, (uint64_t)v9);
    swift_release();
    uint64_t v10 = swift_getKeyPath();
    __chkstk_darwin(v10);
    *(&v17 - 2) = v1;
    *((unsigned char *)&v17 - 8) = 0;
    uint64_t v18 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v11 = swift_getKeyPath();
    __chkstk_darwin(v11);
    *(&v17 - 2) = v1;
    *((unsigned char *)&v17 - 8) = 1;
    uint64_t v18 = v1;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    if (qword_10083D488 && qword_10083D488 == v1)
    {
      uint64_t v12 = qword_10083D490;
      qword_10083D488 = 0;
      qword_10083D490 = 0;
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v12 + 136))(ObjectType, v12);
      swift_unknownObjectRelease();
    }
    uint64_t v14 = self;
    id v15 = [v14 defaultCenter];
    [v15 removeObserver:v1 name:UIApplicationDidEnterBackgroundNotification object:0];

    id v16 = [v14 defaultCenter];
    if (qword_1007F6E90 != -1) {
      swift_once();
    }
    [v16 removeObserver:v1 name:qword_10083D418 object:0];
    swift_release();
  }
}

uint64_t sub_1003ADF28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  return _swift_task_switch(sub_1003ADFA8, a4, 0);
}

uint64_t sub_1003ADFA8()
{
  [*(id *)(*(void *)(v0 + 16) + 112) pause];
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002FAA78, v2, v1);
}

uint64_t sub_1003AE038()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  if (*(void *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__audioPlayer))
  {
    swift_getKeyPath();
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(void *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__playerTimeCancellable))
    {
      swift_retain();
      AnyCancellable.cancel()();
      swift_release();
    }
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v4 = swift_getKeyPath();
    __chkstk_darwin(v4);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v5 = swift_getKeyPath();
    __chkstk_darwin(v5);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v6 = swift_getKeyPath();
    __chkstk_darwin(v6);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v7 = swift_getKeyPath();
    __chkstk_darwin(v7);
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    if (qword_10083D488 && qword_10083D488 == v0) {
      sub_1003B3B70(0, 0);
    }
    uint64_t v8 = self;
    id v9 = [v8 defaultCenter];
    [v9 removeObserver:v1 name:UIApplicationDidEnterBackgroundNotification object:0];

    id v10 = [v8 defaultCenter];
    if (qword_1007F6E90 != -1) {
      swift_once();
    }
    [v10 removeObserver:v1 name:qword_10083D418 object:0];

    sub_1003A6CDC();
    return swift_release();
  }
  return result;
}

uint64_t sub_1003AE4B8(double a1)
{
  uint64_t v3 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v14 = v1;
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC7Journal12AudioManager__audioPlayer];
  if (v7)
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    *(&v13 - 2) = (uint64_t)v1;
    *((double *)&v13 - 1) = a1;
    uint64_t v14 = v1;
    swift_retain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 1, 1, v9);
    type metadata accessor for MainActor();
    swift_retain();
    id v10 = v1;
    uint64_t v11 = static MainActor.shared.getter();
    uint64_t v12 = swift_allocObject();
    *(void *)(v12 + 16) = v11;
    *(void *)(v12 + 24) = &protocol witness table for MainActor;
    *(void *)(v12 + 32) = v7;
    *(double *)(v12 + 40) = a1;
    *(void *)(v12 + 48) = v10;
    sub_100328A60((uint64_t)v5, (uint64_t)&unk_10080B418, v12);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1003AE714(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 32) = a6;
  *(double *)(v6 + 24) = a1;
  *(void *)(v6 + 16) = a5;
  *(void *)(v6 + 40) = type metadata accessor for MainActor();
  *(void *)(v6 + 48) = static MainActor.shared.getter();
  return _swift_task_switch(sub_1003AE79C, a5, 0);
}

uint64_t sub_1003AE79C()
{
  [*(id *)(*(void *)(v0 + 16) + 112) setCurrentTime:*(double *)(v0 + 24)* *(double *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7JournalP33_50CFAC729B687C75C3E196706D50698611PlayerActor_duration)];
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003AE854;
  return sub_1003AE990();
}

uint64_t sub_1003AE854()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003AAD8C, v1, v0);
}

uint64_t sub_1003AE990()
{
  v1[3] = v0;
  type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[5] = v3;
  v1[6] = v2;
  return _swift_task_switch(sub_1003AEA28, v3, v2);
}

uint64_t sub_1003AEA28()
{
  uint64_t v1 = v0[3];
  swift_getKeyPath();
  uint64_t v2 = OBJC_IVAR____TtC7Journal12AudioManager___observationRegistrar;
  v0[2] = v1;
  v0[7] = v2;
  v0[8] = sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC7Journal12AudioManager__audioPlayer);
  v0[9] = v3;
  if (v3)
  {
    swift_retain();
    return _swift_task_switch(sub_1003AEB68, v3, 0);
  }
  else
  {
    swift_release();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1003AEB68()
{
  [*(id *)(v0[9] + 112) currentTime];
  v0[10] = v1;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[6];
  return _swift_task_switch(sub_1003AEBDC, v2, v3);
}

uint64_t sub_1003AEBDC()
{
  uint64_t v1 = v0[10];
  uint64_t v10 = v0[9];
  uint64_t v2 = v0[3];
  swift_release();
  swift_getKeyPath();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  v0[2] = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  v0[2] = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double v4 = *(double *)(v2 + OBJC_IVAR____TtC7Journal12AudioManager__currentlyPlayedTime)
     / *(double *)(v10 + OBJC_IVAR____TtC7JournalP33_50CFAC729B687C75C3E196706D50698611PlayerActor_duration);
  swift_getKeyPath();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v5 + 16) = v2;
  *(double *)(v5 + 24) = v4;
  v0[2] = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  unsigned __int8 v6 = [*(id *)(v10 + 112) isPlaying];
  swift_getKeyPath();
  uint64_t v7 = swift_task_alloc();
  *(void *)(v7 + 16) = v2;
  *(unsigned char *)(v7 + 24) = v6;
  v0[2] = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003AEE28()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  swift_unknownObjectWeakInit();

  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v6 = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  v7[4] = v4;
  swift_release();
  sub_100328C78((uint64_t)v2, (uint64_t)&unk_10080B3E0, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_1003AEFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a1;
  v4[6] = a4;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v6;
  v4[9] = v5;
  return _swift_task_switch(sub_1003AF038, v6, v5);
}

uint64_t sub_1003AF038()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 80) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 88) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1003AF140;
    return sub_1003AE990();
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 40) = *(void *)(v0 + 80) == 0;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_1003AF140()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 80);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 72);
  uint64_t v4 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_1001EEFD0, v4, v3);
}

void sub_1003AF2C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218((uint64_t *)&unk_10080B430);
  __chkstk_darwin(v2);
  uint64_t v76 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v4 - 8);
  uint64_t v75 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v64 - v7;
  __chkstk_darwin(v9);
  uint64_t v78 = (uint64_t)&v64 - v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v64 - v12;
  uint64_t v14 = type metadata accessor for URL();
  uint64_t v79 = *(void *)(v14 - 8);
  uint64_t v80 = v14;
  __chkstk_darwin(v14);
  uint64_t v74 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v64 - v17;
  __chkstk_darwin(v19);
  uint64_t v77 = (char *)&v64 - v20;
  swift_getKeyPath();
  v83[0] = v0;
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__isPlaying) == 1)
  {
    uint64_t v21 = Notification.userInfo.getter();
    if (v21)
    {
      uint64_t v22 = v21;
      unint64_t v81 = 0xD00000000000001CLL;
      unint64_t v82 = 0x800000010069A780;
      AnyHashable.init<A>(_:)();
      if (*(void *)(v22 + 16) && (unint64_t v23 = sub_10001B738((uint64_t)v83), (v24 & 1) != 0))
      {
        sub_10001B648(*(void *)(v22 + 56) + 32 * v23, (uint64_t)&v84);
      }
      else
      {
        long long v84 = 0u;
        long long v85 = 0u;
      }
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)v83);
      if (!*((void *)&v85 + 1))
      {
        sub_10001457C((uint64_t)&v84, &qword_1007FAD50);
        return;
      }
      _s5AssetCMa();
      if (swift_dynamicCast())
      {
        id v25 = (id)v81;
        _s10AudioAssetCMa(0);
        uint64_t v26 = swift_dynamicCastClass();
        if (!v26)
        {
LABEL_36:
          if (qword_1007F6F10 != -1) {
            swift_once();
          }
          uint64_t v60 = type metadata accessor for Logger();
          sub_100026A54(v60, (uint64_t)qword_10080AED0);
          uint64_t v61 = Logger.logObject.getter();
          os_log_type_t v62 = static os_log_type_t.info.getter();
          if (os_log_type_enabled(v61, v62))
          {
            uint64_t v63 = (uint8_t *)swift_slowAlloc();
            *(_WORD *)uint64_t v63 = 0;
            _os_log_impl((void *)&_mh_execute_header, v61, v62, "stop playing the current audio recording)", v63, 2u);
            swift_slowDealloc();
          }

          sub_1003AD50C();
          return;
        }
        unint64_t v27 = *(void *)(v26 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments);
        if (v27 >> 62)
        {
          id v59 = v25;
          swift_bridgeObjectRetain();
          if (_CocoaArrayWrapper.endIndex.getter())
          {
LABEL_12:
            if ((v27 & 0xC000000000000001) != 0) {
              specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              swift_retain();
            }
            swift_bridgeObjectRelease();
            sub_1005DA2EC(v13);
            swift_release();
            uint64_t v31 = (void *)v79;
            uint64_t v30 = v80;
            uint64_t v72 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v79 + 48);
            uint64_t v73 = v79 + 48;
            if (v72((uint64_t)v13, 1, v80) != 1)
            {
              id v71 = v25;
              uint64_t v32 = (void (*)(char *, uint64_t, uint64_t))v31[4];
              uint64_t v66 = v31 + 4;
              uint64_t v65 = v32;
              v32(v77, (uint64_t)v13, v30);
              uint64_t v33 = v78;
              uint64_t v70 = (void (*)(void))v31[2];
              v70();
              uint64_t v69 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v31[7];
              uint64_t v68 = v31 + 7;
              v69(v33, 0, 1, v30);
              swift_getKeyPath();
              v83[0] = v1;
              ObservationRegistrar.access<A, B>(_:keyPath:)();
              swift_release();
              uint64_t v34 = *(void *)(v1 + OBJC_IVAR____TtC7Journal12AudioManager__audioPlayer);
              uint64_t v67 = v31 + 2;
              if (v34)
              {
                ((void (*)(char *, uint64_t, uint64_t))v70)(v8, v34 + OBJC_IVAR____TtC7JournalP33_50CFAC729B687C75C3E196706D50698611PlayerActor_url, v30);
                uint64_t v35 = 0;
                uint64_t v36 = (uint64_t)v76;
              }
              else
              {
                uint64_t v36 = (uint64_t)v76;
                uint64_t v35 = 1;
              }
              uint64_t v37 = v80;
              v69((uint64_t)v8, v35, 1, v80);
              uint64_t v38 = v36 + *(int *)(v2 + 48);
              uint64_t v39 = v78;
              sub_100052E44(v78, v36);
              sub_100052E44((uint64_t)v8, v38);
              uint64_t v40 = v72;
              if (v72(v36, 1, v37) == 1)
              {
                sub_10001457C((uint64_t)v8, (uint64_t *)&unk_100800A60);
                sub_10001457C(v39, (uint64_t *)&unk_100800A60);
                int v41 = v40(v38, 1, v80);
                os_log_type_t v42 = v77;
                if (v41 == 1)
                {
                  sub_10001457C(v36, (uint64_t *)&unk_100800A60);
LABEL_26:
                  if (qword_1007F6F10 != -1) {
                    swift_once();
                  }
                  uint64_t v46 = type metadata accessor for Logger();
                  sub_100026A54(v46, (uint64_t)qword_10080AED0);
                  unint64_t v47 = v74;
                  ((void (*)(char *, char *, uint64_t))v70)(v74, v42, v80);
                  long long v48 = Logger.logObject.getter();
                  os_log_type_t v49 = static os_log_type_t.info.getter();
                  if (os_log_type_enabled(v48, v49))
                  {
                    uint64_t v50 = (uint8_t *)swift_slowAlloc();
                    v83[0] = swift_slowAlloc();
                    *(_DWORD *)uint64_t v50 = 136315138;
                    uint64_t v51 = URL.debugDescription.getter();
                    *(void *)&long long v84 = sub_10011EA98(v51, v52, v83);
                    UnsafeMutableRawBufferPointer.copyMemory(from:)();
                    swift_bridgeObjectRelease();
                    uint64_t v53 = v80;
                    uint64_t v54 = *(void (**)(char *, uint64_t))(v79 + 8);
                    v54(v47, v80);
                    _os_log_impl((void *)&_mh_execute_header, v48, v49, "continue playing the current audio recording with url %s", v50, 0xCu);
                    swift_arrayDestroy();
                    swift_slowDealloc();
                    swift_slowDealloc();

                    id v55 = v71;
                    v54(v42, v53);
                  }
                  else
                  {

                    id v56 = v71;
                    uint64_t v57 = v80;
                    uint64_t v58 = *(void (**)(char *, uint64_t))(v79 + 8);
                    v58(v47, v80);

                    v58(v42, v57);
                  }
                  return;
                }
              }
              else
              {
                uint64_t v43 = v80;
                uint64_t v44 = v75;
                sub_100052E44(v36, v75);
                if (v40(v38, 1, v43) != 1)
                {
                  v65(v18, v38, v43);
                  sub_1003B2A1C(&qword_100802670, (void (*)(uint64_t))&type metadata accessor for URL);
                  LODWORD(v76) = dispatch thunk of static Equatable.== infix(_:_:)();
                  uint64_t v45 = *(void (**)(char *, uint64_t))(v79 + 8);
                  v45(v18, v43);
                  sub_10001457C((uint64_t)v8, (uint64_t *)&unk_100800A60);
                  sub_10001457C(v78, (uint64_t *)&unk_100800A60);
                  v45((char *)v44, v43);
                  sub_10001457C(v36, (uint64_t *)&unk_100800A60);
                  os_log_type_t v42 = v77;
                  if (v76) {
                    goto LABEL_26;
                  }
                  v45(v77, v80);
                  goto LABEL_31;
                }
                sub_10001457C((uint64_t)v8, (uint64_t *)&unk_100800A60);
                sub_10001457C(v78, (uint64_t *)&unk_100800A60);
                (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v44, v43);
                os_log_type_t v42 = v77;
              }
              sub_10001457C(v36, (uint64_t *)&unk_10080B430);
              (*(void (**)(char *, uint64_t))(v79 + 8))(v42, v80);
LABEL_31:
              id v25 = v71;

              goto LABEL_36;
            }
LABEL_35:

            sub_10001457C((uint64_t)v13, (uint64_t *)&unk_100800A60);
            goto LABEL_36;
          }
        }
        else
        {
          uint64_t v28 = *(void *)((v27 & 0xFFFFFFFFFFFFFF8) + 0x10);
          id v29 = v25;
          swift_bridgeObjectRetain();
          if (v28) {
            goto LABEL_12;
          }
        }
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v79 + 56))(v13, 1, 1, v80);
        goto LABEL_35;
      }
    }
  }
}

void sub_1003AFE70(uint64_t a1)
{
  uint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v5 = v4;
  if (v3 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v5 == v6)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v9 = (id *)&AVAudioSessionModeSpokenAudio;
    uint64_t v10 = 4;
  }
  else
  {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = (id *)&AVAudioSessionModeDefault;
    if (v8)
    {
      uint64_t v9 = (id *)&AVAudioSessionModeSpokenAudio;
      uint64_t v10 = 4;
    }
    else
    {
      uint64_t v10 = 0;
    }
  }
  id v11 = *v9;
  uint64_t v12 = *(void **)(v1 + 112);
  id v25 = 0;
  unsigned int v13 = [v12 setCategory:a1 mode:v11 options:v10 error:&v25];
  id v14 = v25;
  if (v13
    && (id v25 = 0,
        id v15 = v14,
        unsigned int v16 = [v12 setActive:1 error:&v25],
        id v14 = v25,
        v16))
  {
    id v17 = v25;
  }
  else
  {
    id v18 = v14;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F6F10 != -1) {
      swift_once();
    }
    uint64_t v19 = type metadata accessor for Logger();
    sub_100026A54(v19, (uint64_t)qword_10080AED0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      id v25 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v22 = 136315138;
      swift_getErrorValue();
      uint64_t v23 = Error.localizedDescription.getter();
      sub_10011EA98(v23, v24, (uint64_t *)&v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "Failed to activate audio session: %s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

void sub_1003B01A0()
{
  uint64_t v1 = *(void **)(v0 + 112);
  id v14 = 0;
  unsigned int v2 = [v1 setCategory:AVAudioSessionCategoryPlayback mode:AVAudioSessionModeDefault options:1 error:&v14];
  id v3 = v14;
  if (v2
    && (v14 = 0, id v4 = v3,
                   unsigned int v5 = [v1 setActive:0 error:&v14],
                   id v3 = v14,
                   v5))
  {
    id v6 = v3;
  }
  else
  {
    id v7 = v3;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F6F10 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100026A54(v8, (uint64_t)qword_10080AED0);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      id v11 = (uint8_t *)swift_slowAlloc();
      id v14 = (id)swift_slowAlloc();
      *(_DWORD *)id v11 = 136315138;
      swift_getErrorValue();
      uint64_t v12 = Error.localizedDescription.getter();
      sub_10011EA98(v12, v13, (uint64_t *)&v14);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed to deactivate audio session: %s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t type metadata accessor for SessionActor()
{
  return self;
}

uint64_t sub_1003B0498(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  os_log_type_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_100010218((uint64_t *)&unk_1008010F0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D70D0;
  *(void *)(inited + 32) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 40) = v12;
  *(void *)(inited + 72) = &type metadata for Int;
  *(void *)(inited + 48) = 1633772320;
  *(void *)(inited + 80) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 88) = v13;
  *(void *)(inited + 120) = &type metadata for Float;
  *(_DWORD *)(inited + 96) = 1194083328;
  *(void *)(inited + 128) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 136) = v14;
  *(void *)(inited + 168) = &type metadata for Int;
  *(void *)(inited + 144) = 1;
  *(void *)(inited + 176) = static String._unconditionallyBridgeFromObjectiveC(_:)();
  *(void *)(inited + 184) = v15;
  *(void *)(inited + 216) = &type metadata for Int;
  *(void *)(inited + 192) = 127;
  sub_100396C34(inited);
  id v16 = objc_allocWithZone((Class)AVAudioRecorder);
  id v17 = sub_1003B37D0((uint64_t)v10);
  if (v3)
  {
    type metadata accessor for RecorderActor();
    swift_defaultActor_destroy();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
    swift_deallocPartialClassInstance();
  }
  else
  {
    id v18 = v17;
    *(void *)(v4 + 112) = v17;
    [v17 setDelegate:a2];
    [v18 setMeteringEnabled:1];
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(a1, v7);
  }
  return v4;
}

uint64_t type metadata accessor for RecorderActor()
{
  return self;
}

uint64_t sub_1003B0744(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v6 = v4;
  uint64_t v22 = a4;
  HIDWORD(v21) = a3;
  uint64_t v9 = type metadata accessor for URL();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_defaultActor_initialize();
  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v13(v12, a1, v9);
  id v14 = objc_allocWithZone((Class)AVAudioPlayer);
  id v15 = sub_1003B3958((uint64_t)v12);
  if (v5)
  {
    type metadata accessor for PlayerActor(0);
    swift_defaultActor_destroy();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
    swift_deallocPartialClassInstance();
  }
  else
  {
    id v17 = v15;
    *(void *)(v6 + 112) = v15;
    LODWORD(v16) = 1.0;
    [v15 setVolume:v16];
    [v17 setDelegate:v22];
    v13((char *)(v6 + OBJC_IVAR____TtC7JournalP33_50CFAC729B687C75C3E196706D50698611PlayerActor_url), a1, v9);
    if ((v21 & 0x100000000) != 0)
    {
      [v17 duration];
      uint64_t v19 = v18;
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
      *(void *)(v6 + OBJC_IVAR____TtC7JournalP33_50CFAC729B687C75C3E196706D50698611PlayerActor_duration) = v19;
    }
    else
    {
      swift_unknownObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a1, v9);
      *(void *)(v6 + OBJC_IVAR____TtC7JournalP33_50CFAC729B687C75C3E196706D50698611PlayerActor_duration) = a2;
    }
  }
  return v6;
}

uint64_t sub_1003B09AC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7JournalP33_50CFAC729B687C75C3E196706D50698611PlayerActor_url;
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_1003B0A30()
{
  return type metadata accessor for PlayerActor(0);
}

uint64_t type metadata accessor for PlayerActor(uint64_t a1)
{
  return sub_10003352C(a1, qword_10080B1A8);
}

uint64_t sub_1003B0A58()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

id sub_1003B0B0C@<X0>(uint64_t a1@<X8>)
{
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtC7Journal12AudioManager__audioAsset);
  if (v3)
  {
    uint64_t v5 = *(void **)(v1 + OBJC_IVAR____TtC7Journal12AudioManager__audioAsset);
    *(void *)(a1 + 24) = _s10AudioAssetCMa(0);
    *(void *)(a1 + 32) = &off_1007B7DC8;
    uint64_t v3 = v5;
    *(void *)a1 = v5;
  }
  else
  {
    *(void *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }

  return v3;
}

uint64_t sub_1003B0BFC(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(double *)(v5 + 32) = a1;
  *(void *)(v5 + 24) = a5;
  type metadata accessor for MainActor();
  *(void *)(v5 + 40) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 48) = v7;
  *(void *)(v5 + 56) = v6;
  return _swift_task_switch(sub_1003B0C98, v7, v6);
}

uint64_t sub_1003B0C98()
{
  uint64_t v1 = v0[3];
  swift_getKeyPath();
  v0[2] = v1;
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC7Journal12AudioManager__audioPlayer);
  v0[8] = v2;
  if (v2)
  {
    swift_retain();
    return _swift_task_switch(sub_1003B0E00, v2, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v0[9] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1003B0EB0;
    return sub_1003AE990();
  }
}

uint64_t sub_1003B0E00()
{
  [*(id *)(*(void *)(v0 + 64) + 112) setCurrentTime:*(double *)(v0 + 32)];
  swift_release();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003B0EB0;
  return sub_1003AE990();
}

uint64_t sub_1003B0EB0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_1002F9240, v3, v2);
}

uint64_t sub_1003B0FD0(double a1)
{
  uint64_t v3 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v21 = v1;
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (v1[OBJC_IVAR____TtC7Journal12AudioManager__isPausing]) {
    goto LABEL_7;
  }
  swift_getKeyPath();
  uint64_t v21 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (v1[OBJC_IVAR____TtC7Journal12AudioManager__isPlaying]) {
    goto LABEL_7;
  }
  swift_getKeyPath();
  uint64_t v21 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  double v6 = *(double *)&v1[OBJC_IVAR____TtC7Journal12AudioManager__currentlyPlayedTime];
  swift_getKeyPath();
  uint64_t v21 = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v7 = OBJC_IVAR____TtC7Journal12AudioManager__audioPlayer;
  uint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC7Journal12AudioManager__audioPlayer];
  if (!v8 || v6 != *(double *)(v8 + OBJC_IVAR____TtC7JournalP33_50CFAC729B687C75C3E196706D50698611PlayerActor_duration))
  {
LABEL_7:
    uint64_t v16 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v5, 1, 1, v16);
    type metadata accessor for MainActor();
    id v17 = v1;
    uint64_t v18 = static MainActor.shared.getter();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v18;
    *(void *)(v19 + 24) = &protocol witness table for MainActor;
    *(void *)(v19 + 32) = v17;
    *(double *)(v19 + 40) = a1;
    sub_100328A60((uint64_t)v5, (uint64_t)&unk_10080B350, v19);
  }
  else
  {
    swift_getKeyPath();
    uint64_t v21 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    uint64_t result = swift_release();
    uint64_t v10 = *(void *)&v1[v7];
    if (!v10) {
      return result;
    }
    double v11 = *(double *)(v10 + OBJC_IVAR____TtC7JournalP33_50CFAC729B687C75C3E196706D50698611PlayerActor_duration) - a1;
    uint64_t v12 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 1, 1, v12);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v13 = v1;
    uint64_t v14 = static MainActor.shared.getter();
    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v14;
    *(void *)(v15 + 24) = &protocol witness table for MainActor;
    *(void *)(v15 + 32) = v13;
    *(double *)(v15 + 40) = v11;
    sub_100328A60((uint64_t)v5, (uint64_t)&unk_10080B358, v15);
    swift_release();
  }
  return swift_release();
}

uint64_t sub_1003B1354(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(double *)(v5 + 32) = a1;
  *(void *)(v5 + 24) = a5;
  *(void *)(v5 + 40) = type metadata accessor for MainActor();
  *(void *)(v5 + 48) = static MainActor.shared.getter();
  *(void *)(v5 + 56) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 64) = v7;
  *(void *)(v5 + 72) = v6;
  return _swift_task_switch(sub_1003B1400, v7, v6);
}

uint64_t sub_1003B1400()
{
  uint64_t v1 = v0[3];
  swift_getKeyPath();
  v0[2] = v1;
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC7Journal12AudioManager__audioPlayer);
  v0[10] = v2;
  if (v2)
  {
    swift_retain();
    return _swift_task_switch(sub_1003B1568, v2, 0);
  }
  else
  {
    uint64_t v3 = (void *)swift_task_alloc();
    v0[11] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1003B1638;
    return sub_1003AE990();
  }
}

uint64_t sub_1003B1568()
{
  double v1 = *(double *)(v0 + 32);
  uint64_t v2 = *(void **)(*(void *)(v0 + 80) + 112);
  [v2 currentTime];
  [v2 setCurrentTime:v3 - v1];
  swift_release();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1003B1638;
  return sub_1003AE990();
}

uint64_t sub_1003B1638()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_1003B1758, v3, v2);
}

uint64_t sub_1003B1758()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003B4A7C, v1, v0);
}

double sub_1003B17DC()
{
  uint64_t v1 = sub_100010218(&qword_1007F9E38);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (double *)((char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_getKeyPath();
  uint64_t v11 = v0;
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__isRecording) == 1)
  {
    swift_getKeyPath();
    uint64_t v11 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    return *(double *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__currentRecordingTime);
  }
  else
  {
    swift_getKeyPath();
    uint64_t v11 = v0;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__audioAsset);
    double v4 = 0.0;
    if (v5)
    {
      id v6 = v5;
      sub_1003F2894((uint64_t)v3);
      uint64_t v7 = _s10AudioAssetC9AudioDataVMa(0);
      if ((*(unsigned int (**)(double *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 48))(v3, 1, v7) == 1)
      {
        sub_10001457C((uint64_t)v3, &qword_1007F9E38);
      }
      else
      {
        double v4 = *v3;
        int v8 = *((unsigned __int8 *)v3 + 8);
        sub_1003B447C((uint64_t)v3, _s10AudioAssetC9AudioDataVMa);

        if (v8) {
          return 0.0;
        }
      }
    }
  }
  return v4;
}

float sub_1003B1A08()
{
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__audioPlayer);
  if (!v1) {
    return 1.0;
  }
  [*(id *)(v1 + 112) rate];
  return result;
}

uint64_t sub_1003B1ACC(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(float *)(v5 + 64) = a1;
  *(void *)(v5 + 24) = a5;
  type metadata accessor for MainActor();
  *(void *)(v5 + 32) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 40) = v7;
  *(void *)(v5 + 48) = v6;
  return _swift_task_switch(sub_1003B1B68, v7, v6);
}

uint64_t sub_1003B1B68()
{
  uint64_t v1 = v0[3];
  swift_getKeyPath();
  v0[2] = v1;
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC7Journal12AudioManager__audioPlayer);
  v0[7] = v2;
  if (v2)
  {
    swift_retain();
    return _swift_task_switch(sub_1003B1CA0, v2, 0);
  }
  else
  {
    swift_release();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
}

uint64_t sub_1003B1CA0(double a1)
{
  LODWORD(a1) = *(_DWORD *)(v1 + 64);
  [*(id *)(*(void *)(v1 + 56) + 112) setRate:a1];
  uint64_t v2 = *(void *)(v1 + 40);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_1003B1D14, v2, v3);
}

uint64_t sub_1003B1D14()
{
  swift_release();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003B1D80()
{
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__isPlaying);
}

uint64_t sub_1003B1E28()
{
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__isPausing);
}

double sub_1003B1ED0()
{
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__currentlyPlayedTime);
}

BOOL sub_1003B1F78()
{
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v0 + OBJC_IVAR____TtC7Journal12AudioManager__currentlyPlayedPercentage) == 1.0;
}

uint64_t sub_1003B2030(float a1)
{
  uint64_t v3 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  type metadata accessor for MainActor();
  id v7 = v1;
  uint64_t v8 = static MainActor.shared.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = &protocol witness table for MainActor;
  *(void *)(v9 + 32) = v7;
  *(float *)(v9 + 40) = a1;
  sub_100328A60((uint64_t)v5, (uint64_t)&unk_10080B400, v9);
  return swift_release();
}

uint64_t sub_1003B2160(void *a1)
{
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = sub_10002E0BC(a1, v2);

  return sub_1003B3AA4((uint64_t)v4, v1, v2, v3);
}

uint64_t sub_1003B21AC()
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  type metadata accessor for MainActor();
  uint64_t v5 = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_allocObject();
  uint64_t v6[2] = v5;
  v6[3] = &protocol witness table for MainActor;
  v6[4] = ObjectType;
  sub_100328A60((uint64_t)v3, (uint64_t)&unk_10080B380, (uint64_t)v6);
  swift_release();
  return sub_1003AC560();
}

uint64_t sub_1003B22DC(double a1)
{
  uint64_t v3 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  type metadata accessor for MainActor();
  id v7 = v1;
  uint64_t v8 = static MainActor.shared.getter();
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v8;
  *(void *)(v9 + 24) = &protocol witness table for MainActor;
  *(void *)(v9 + 32) = v7;
  *(double *)(v9 + 40) = a1;
  sub_100328A60((uint64_t)v5, (uint64_t)&unk_10080B338, v9);
  return swift_release();
}

uint64_t sub_1003B2404()
{
  uint64_t v1 = *v0;
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7Journal12AudioManager__isRecording);
}

uint64_t sub_1003B24AC()
{
  return sub_1003A6DEC();
}

uint64_t sub_1003B24D0()
{
  return swift_bridgeObjectRetain();
}

double sub_1003B2594()
{
  return sub_1003B17DC();
}

double sub_1003B25B8()
{
  return 10.0;
}

uint64_t sub_1003B25C0(double a1)
{
  return sub_1003AE4B8(a1);
}

double sub_1003B25E4()
{
  uint64_t v1 = *v0;
  swift_getKeyPath();
  sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(double *)(v1 + OBJC_IVAR____TtC7Journal12AudioManager__currentlyPlayedPercentage);
}

uint64_t sub_1003B268C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1003B2724, v6, v5);
}

uint64_t sub_1003B2724()
{
  swift_release();
  sub_1003AE038();
  id v1 = [self defaultCenter];
  if (qword_1007F6BB8 != -1) {
    swift_once();
  }
  [v1 postNotificationName:qword_10083D1A0 object:*(void *)(v0 + 16)];

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003B2940(uint64_t a1)
{
  uint64_t result = sub_1003B2A1C(&qword_100800F78, (void (*)(uint64_t))type metadata accessor for AudioManager);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003B2998(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1003B2A1C(&qword_10080B300, (void (*)(uint64_t))type metadata accessor for AudioManager);
  uint64_t result = sub_1003B2A1C(&qword_100800FA8, (void (*)(uint64_t))type metadata accessor for AudioManager);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1003B2A1C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1003B2A64()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003B2A9C()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *id v1 = v0;
  v1[1] = sub_10002C194;
  return sub_1003A977C();
}

uint64_t sub_1003B2B50@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1003A92D4(a1, &OBJC_IVAR____TtC7Journal12AudioManager__audioRecorder, a2);
}

void sub_1003B2B84()
{
}

uint64_t sub_1003B2BA0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100052588;
  return sub_1003AAA24(a1, v4, v5, v7, v6);
}

void sub_1003B2C68()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal12AudioManager__isRecording) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1003B2C80()
{
  return sub_1003B4A34(&OBJC_IVAR____TtC7Journal12AudioManager__audioRecorder);
}

uint64_t sub_1003B2CA0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1003A92D4(a1, &OBJC_IVAR____TtC7Journal12AudioManager__recorderTimeCancellable, a2);
}

uint64_t sub_1003B2CCC()
{
  return sub_1003B4A34(&OBJC_IVAR____TtC7Journal12AudioManager__recorderTimeCancellable);
}

id sub_1003B2CEC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1003A8F88(a1, &OBJC_IVAR____TtC7Journal12AudioManager__timer, a2);
}

void sub_1003B2D18()
{
}

void sub_1003B2D38()
{
  char v1 = *(unsigned char *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal12AudioManager__recordedDuration;
  *(void *)uint64_t v2 = *(void *)(v0 + 24);
  *(unsigned char *)(v2 + 8) = v1;
}

uint64_t sub_1003B2D58@<X0>(char *a1@<X8>)
{
  uint64_t v51 = a1;
  uint64_t v2 = sub_100010218(&qword_1007F99B8);
  __chkstk_darwin(v2 - 8);
  uint64_t v60 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = type metadata accessor for UTType();
  uint64_t v4 = *(void *)(v59 - 8);
  __chkstk_darwin(v59 - 8);
  uint64_t v58 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v57 = (char *)&v47 - v7;
  uint64_t v70 = type metadata accessor for URL();
  uint64_t v52 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  os_log_type_t v49 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
  __chkstk_darwin(v65);
  uint64_t v69 = (uint64_t)&v47 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v47 - v11;
  uint64_t v13 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v13 - 8);
  uint64_t v55 = (uint64_t)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  id v17 = (char *)&v47 - v16;
  uint64_t v18 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v18);
  uint64_t v67 = (id *)((char *)&v47 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v20);
  uint64_t v22 = (void **)((char *)&v47 - v21);
  unint64_t v23 = *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments);
  if (v23 >> 62)
  {
LABEL_33:
    swift_bridgeObjectRetain_n();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
    if (v24) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v24 = *(void *)((v23 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v24)
    {
LABEL_3:
      unint64_t v73 = v23 & 0xC000000000000001;
      uint64_t v66 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56);
      uint64_t v68 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v52 + 48);
      id v56 = (void (**)(char *, uint64_t, uint64_t))(v52 + 32);
      uint64_t v54 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
      long long v48 = (void (**)(void))(v4 + 32);
      unint64_t v47 = (void (**)(char *, uint64_t))(v4 + 8);
      uint64_t v53 = (void (**)(char *, uint64_t))(v52 + 8);
      uint64_t v25 = 4;
      uint64_t v61 = v12;
      uint64_t v63 = v18;
      uint64_t v64 = v17;
      uint64_t v71 = v24;
      unint64_t v72 = v23;
      while (1)
      {
        uint64_t v27 = v25 - 4;
        if (v73)
        {
          uint64_t v4 = specialized _ArrayBuffer._getElementSlowPath(_:)();
          uint64_t v28 = v25 - 3;
          if (__OFADD__(v27, 1)) {
            goto LABEL_32;
          }
        }
        else
        {
          uint64_t v4 = *(void *)(v23 + 8 * v25);
          swift_retain();
          uint64_t v28 = v25 - 3;
          if (__OFADD__(v27, 1))
          {
LABEL_32:
            __break(1u);
            goto LABEL_33;
          }
        }
        uint64_t v29 = v4 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType;
        sub_100168580(v4 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, (uint64_t)v22, type metadata accessor for AssetAttachment.AssetType);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 1u:
            uint64_t v26 = *v22;
            swift_release();

            goto LABEL_5;
          case 3u:
            sub_1003B447C((uint64_t)v22, type metadata accessor for AssetAttachment.AssetType.FilePathType);
            goto LABEL_31;
          case 4u:
            swift_bridgeObjectRelease();
            uint64_t v31 = v67;
            sub_100168580(v29, (uint64_t)v67, type metadata accessor for AssetAttachment.AssetType);
            uint64_t EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            uint64_t v33 = (uint64_t)v31;
            switch(EnumCaseMultiPayload)
            {
              case 1:

                (*v66)(v17, 1, 1, v70);
                break;
              case 4:
                swift_bridgeObjectRelease();
                uint64_t v33 = (uint64_t)v31 + *(int *)(sub_100010218(&qword_10080B3F0) + 48);
                goto LABEL_16;
              default:
LABEL_16:
                sub_10016851C(v33, (uint64_t)v12);
                sub_100168580((uint64_t)v12, v69, type metadata accessor for AssetAttachment.AssetType.FilePathType);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  (*v56)(v17, v69, v70);
                  uint64_t v34 = 0;
                }
                else
                {
                  type metadata accessor for Journaling();
                  uint64_t v35 = v55;
                  sub_1005E6B0C(v55);
                  swift_bridgeObjectRelease();
                  if ((*v68)(v35, 1, v70) == 1)
                  {
                    sub_10001457C(v35, (uint64_t *)&unk_100800A60);
                    uint64_t v34 = 1;
                    id v17 = v64;
                  }
                  else
                  {
                    uint64_t v36 = *v56;
                    uint64_t v37 = v49;
                    uint64_t v38 = v35;
                    uint64_t v39 = v70;
                    (*v56)(v49, v38, v70);
                    id v17 = v64;
                    uint64_t v40 = v37;
                    uint64_t v12 = v61;
                    v36(v64, (uint64_t)v40, v39);
                    uint64_t v34 = 0;
                  }
                  uint64_t v18 = v63;
                }
                (*v66)(v17, v34, 1, v70);
                sub_1003B447C((uint64_t)v12, type metadata accessor for AssetAttachment.AssetType.FilePathType);
                break;
            }
            uint64_t v41 = (uint64_t)v22 + *(int *)(sub_100010218(&qword_10080B3F0) + 48);
            if ((*v68)((uint64_t)v17, 1, v70) == 1)
            {
              sub_10001457C((uint64_t)v17, (uint64_t *)&unk_100800A60);
              uint64_t v30 = v41;
LABEL_25:
              sub_1003B447C(v30, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              swift_release();
            }
            else
            {
              uint64_t v62 = v41;
              URL.pathExtension.getter();
              swift_bridgeObjectRetain();
              os_log_type_t v42 = v58;
              static UTType.data.getter();
              uint64_t v43 = (uint64_t)v60;
              UTType.init(filenameExtension:conformingTo:)();
              uint64_t v44 = v59;
              if ((*v54)(v43, 1, v59) == 1)
              {
                sub_10001457C(v43, &qword_1007F99B8);
                swift_bridgeObjectRelease();
                id v17 = v64;
                (*v53)(v64, v70);
                sub_1003B447C(v62, type metadata accessor for AssetAttachment.AssetType.FilePathType);
              }
              else
              {
                (*v48)();
                static UTType.audio.getter();
                int v50 = UTType.conforms(to:)();
                uint64_t v45 = *v47;
                (*v47)(v42, v44);
                v45(v57, v44);
                swift_bridgeObjectRelease();
                id v17 = v64;
                (*v53)(v64, v70);
                sub_1003B447C(v62, type metadata accessor for AssetAttachment.AssetType.FilePathType);
                if (v50)
                {
LABEL_31:
                  swift_bridgeObjectRelease_n();
                  sub_1005DA2EC(v51);
                  return swift_release();
                }
              }
              swift_release();
              uint64_t v12 = v61;
              uint64_t v18 = v63;
            }
LABEL_5:
            unint64_t v23 = v72;
            ++v25;
            if (v28 == v71) {
              goto LABEL_34;
            }
            break;
          default:
            uint64_t v30 = (uint64_t)v22;
            goto LABEL_25;
        }
      }
    }
  }
LABEL_34:
  swift_bridgeObjectRelease_n();
  return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v51, 1, 1, v70);
}

uint64_t sub_1003B36D8@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1003B3758(uint64_t a1, void **a2)
{
  uint64_t v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_bridgeObjectRetain();
  id v3 = v2;
  return static Published.subscript.setter();
}

id sub_1003B37D0(uint64_t a1)
{
  uint64_t v2 = v1;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  uint64_t v5 = v4;
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v15 = 0;
  id v7 = [v2 initWithURL:v5 settings:isa error:&v15];

  id v8 = v15;
  if (v7)
  {
    uint64_t v9 = type metadata accessor for URL();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
    id v11 = v8;
    v10(a1, v9);
  }
  else
  {
    id v12 = v15;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v13 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(a1, v13);
  }
  return v7;
}

id sub_1003B3958(uint64_t a1)
{
  uint64_t v2 = v1;
  URL._bridgeToObjectiveC()(__stack_chk_guard);
  uint64_t v5 = v4;
  id v14 = 0;
  id v6 = [v2 initWithContentsOfURL:v4 error:&v14];

  id v7 = v14;
  if (v6)
  {
    uint64_t v8 = type metadata accessor for URL();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    id v10 = v7;
    v9(a1, v8);
  }
  else
  {
    id v11 = v14;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v12 = type metadata accessor for URL();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v12 - 8) + 8))(a1, v12);
  }
  return v6;
}

uint64_t sub_1003B3AA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v10[3] = a3;
  v10[4] = a4;
  id v6 = sub_100062E54(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(v6, a1, a3);
  sub_100141410((uint64_t)v10, (uint64_t)v9);
  sub_100010218(&qword_100801A60);
  _s10AudioAssetCMa(0);
  if (swift_dynamicCast())
  {
    sub_1003AB9B4(v8);
  }
  return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v10);
}

uint64_t sub_1003B3B70(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = qword_10083D488;
  uint64_t v3 = qword_10083D490;
  qword_10083D488 = a1;
  qword_10083D490 = a2;
  swift_unknownObjectRetain();
  if (v2)
  {
    if (qword_10083D488) {
      BOOL v4 = v2 == qword_10083D488;
    }
    else {
      BOOL v4 = 0;
    }
    if (!v4)
    {
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v3 + 136))(ObjectType, v3);
    }
    swift_unknownObjectRelease();
  }

  return swift_unknownObjectRelease();
}

uint64_t sub_1003B3C00()
{
  return sub_1003B471C();
}

uint64_t sub_1003B3C08(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  double v7 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100052588;
  return sub_1003B0BFC(v7, a1, v4, v5, v6);
}

uint64_t sub_1003B3CCC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1003A92D4(a1, &OBJC_IVAR____TtC7Journal12AudioManager__audioPlayer, a2);
}

double sub_1003B3CF8@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_1003A87B0(a1, &OBJC_IVAR____TtC7Journal12AudioManager__currentlyPlayedTime, a2);
}

double sub_1003B3D24()
{
  double result = *(double *)(v0 + 24);
  *(double *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal12AudioManager__currentlyPlayedTime) = result;
  return result;
}

double sub_1003B3D3C@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_1003A87B0(a1, &OBJC_IVAR____TtC7Journal12AudioManager__currentlyPlayedPercentage, a2);
}

double sub_1003B3D68()
{
  double result = *(double *)(v0 + 24);
  *(double *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal12AudioManager__currentlyPlayedPercentage) = result;
  return result;
}

uint64_t sub_1003B3D80@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1003A7E0C(a1, &OBJC_IVAR____TtC7Journal12AudioManager__isPlaying, a2);
}

void sub_1003B3DAC()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal12AudioManager__isPlaying) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1003B3DC4()
{
  return sub_1003B4A34(&OBJC_IVAR____TtC7Journal12AudioManager__audioPlayer);
}

uint64_t sub_1003B3DE4@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  return sub_1003A7E0C(a1, &OBJC_IVAR____TtC7Journal12AudioManager__isPausing, a2);
}

uint64_t sub_1003B3E10()
{
  return sub_1003B471C();
}

uint64_t sub_1003B3E18(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  double v7 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100052588;
  return sub_1003B1354(v7, a1, v4, v5, v6);
}

uint64_t sub_1003B3EDC()
{
  return sub_1003B471C();
}

void sub_1003B3EE4()
{
  *(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal12AudioManager__isPausing) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1003B3EFC@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1003A92D4(a1, &OBJC_IVAR____TtC7Journal12AudioManager__playerTimeCancellable, a2);
}

uint64_t sub_1003B3F28()
{
  return sub_1003B4A34(&OBJC_IVAR____TtC7Journal12AudioManager__playerTimeCancellable);
}

uint64_t sub_1003B3F4C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  double v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *double v7 = v2;
  v7[1] = sub_100052588;
  return sub_1003ADF28(a1, v4, v5, v6);
}

uint64_t sub_1003B4004(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  double v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *double v7 = v2;
  v7[1] = sub_100052588;
  return sub_1003AD984(a1, v4, v5, v6);
}

uint64_t sub_1003B40BC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100052588;
  return sub_1003ACAC8(a1, v4, v5, v7, v6);
}

unint64_t sub_1003B417C()
{
  unint64_t result = qword_10080B3B8;
  if (!qword_10080B3B8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_10080B3B8);
  }
  return result;
}

uint64_t sub_1003B41BC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003B41F4()
{
  return sub_1003AEE28();
}

unint64_t sub_1003B41FC()
{
  unint64_t result = qword_10080B3D0;
  if (!qword_10080B3D0)
  {
    sub_100014440(&qword_10080B3C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_10080B3D0);
  }
  return result;
}

uint64_t sub_1003B425C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_1003AEFA0(a1, v4, v5, v6);
}

id sub_1003B4310@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1003A8F88(a1, &OBJC_IVAR____TtC7Journal12AudioManager__audioAsset, a2);
}

void sub_1003B433C()
{
}

uint64_t sub_1003B4364()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = (void *)(v0[2] + OBJC_IVAR____TtC7Journal12AudioManager__recordingFilename);
  *uint64_t v2 = v0[3];
  v2[1] = v1;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003B43B0()
{
  return sub_1003B471C();
}

uint64_t sub_1003B43B8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  float v7 = *(float *)(v1 + 40);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100052588;
  return sub_1003B1ACC(v7, a1, v4, v5, v6);
}

uint64_t sub_1003B447C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

double sub_1003B44DC@<D0>(uint64_t *a1@<X0>, double *a2@<X8>)
{
  return sub_1003A87B0(a1, &OBJC_IVAR____TtC7Journal12AudioManager__currentRecordingTime, a2);
}

double sub_1003B4508()
{
  double result = *(double *)(v0 + 24);
  *(double *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal12AudioManager__currentRecordingTime) = result;
  return result;
}

uint64_t sub_1003B4528()
{
  return sub_1003A8200(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003B4544()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003B458C(uint64_t a1)
{
  uint64_t v4 = *((void *)v1 + 2);
  uint64_t v5 = *((void *)v1 + 3);
  uint64_t v6 = *((void *)v1 + 4);
  double v7 = v1[5];
  uint64_t v8 = *((void *)v1 + 6);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100052588;
  return sub_1003AE714(v7, a1, v4, v5, v6, v8);
}

uint64_t sub_1003B4658()
{
  return sub_1003B471C();
}

uint64_t sub_1003B4660(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  double v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *double v7 = v2;
  v7[1] = sub_100052588;
  return sub_1003B268C(a1, v4, v5, v6);
}

uint64_t sub_1003B4714()
{
  return sub_1003B471C();
}

uint64_t sub_1003B471C()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003B4768(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  double v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *double v7 = v2;
  v7[1] = sub_100052588;
  return sub_1003AB284(a1, v4, v5, v6);
}

uint64_t sub_1003B482C()
{
  return sub_1003A8CBC(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003B4850()
{
  return swift_unknownObjectWeakAssign();
}

uint64_t sub_1003B4878()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100052588;
  return sub_1003A9DE8();
}

uint64_t sub_1003B4930(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100052588;
  return sub_1003AA2A8(a1, v4, v5, v7, v6);
}

void sub_1003B49F0(void *a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void **)(v1 + 24);
  uint64_t v4 = *(void **)(v2 + *a1);
  *(void *)(v2 + *a1) = v3;
  id v5 = v3;
}

uint64_t sub_1003B4A2C()
{
  return sub_1003AAFF4();
}

uint64_t sub_1003B4A34(void *a1)
{
  *(void *)(*(void *)(v1 + 16) + *a1) = *(void *)(v1 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_1003B4A88()
{
  return sub_1003B4528();
}

uint64_t sub_1003B4AA0()
{
  return sub_1003B482C();
}

double sub_1003B4AB8()
{
  return sub_1003B3D68();
}

double sub_1003B4AD0()
{
  return sub_1003B3D24();
}

double sub_1003B4AE8()
{
  return sub_1003B4508();
}

void sub_1003B4B04()
{
}

void sub_1003B4B1C()
{
}

uint64_t sub_1003B4B34()
{
  uint64_t v0 = sub_100010218(&qword_1007FFBB0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100010218(&qword_1007FFBB8);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DateComponents();
  sub_100035380(v6, qword_10083D498);
  sub_100026A54(v6, (uint64_t)qword_10083D498);
  uint64_t v7 = type metadata accessor for Calendar();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 1, 1, v7);
  uint64_t v8 = type metadata accessor for TimeZone();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t sub_1003B4D24(uint64_t a1, int a2)
{
  int v27 = a2;
  uint64_t v4 = type metadata accessor for Calendar.Identifier();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v2 + OBJC_IVAR____TtC7Journal18MindfulnessManager_startDate;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
  v10(v8, 1, 1, v9);
  v10(v2 + OBJC_IVAR____TtC7Journal18MindfulnessManager_endDate, 1, 1, v9);
  *(void *)(v2 + OBJC_IVAR____TtC7Journal18MindfulnessManager_pauseTask) = 0;
  uint64_t v11 = v2 + OBJC_IVAR____TtC7Journal18MindfulnessManager_backgroundTaskID;
  *(void *)uint64_t v11 = 0;
  *(unsigned char *)(v11 + 8) = 1;
  uint64_t v12 = OBJC_IVAR____TtC7Journal18MindfulnessManager_backgroundingSemaphore;
  *(void *)(v2 + v12) = dispatch_semaphore_create(0);
  id v13 = [self mainBundle];
  id v14 = [v13 bundleIdentifier];

  if (v14)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  Logger.init(subsystem:category:)();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for Calendar.Identifier.gregorian(_:), v4);
  Calendar.init(identifier:)();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = a1;
  sub_10001B220(a1, v2 + 16, &qword_10080B650);
  uint64_t v16 = (id *)&NSExtensionHostDidEnterBackgroundNotification;
  if ((v27 & 1) == 0) {
    uint64_t v16 = (id *)&UISceneDidEnterBackgroundNotification;
  }
  id v17 = *v16;
  uint64_t v18 = self;
  id v19 = [v18 defaultCenter];
  [v19 addObserver:v2 selector:"appDidEnterBackground:" name:v17 object:0];

  id v20 = [v18 defaultCenter];
  [v20 addObserver:v2 selector:"appWillBeTerminated" name:UIApplicationWillTerminateNotification object:0];

  id v21 = [v18 defaultCenter];
  uint64_t v22 = qword_1007F6C08;
  swift_retain();
  if (v22 != -1) {
    swift_once();
  }
  [v21 addObserver:v2 selector:"userBecameActive" name:qword_10083D1F8 object:0];

  swift_release();
  id v23 = [v18 defaultCenter];
  uint64_t v24 = qword_1007F6C10;
  swift_retain();
  if (v24 != -1) {
    swift_once();
  }
  [v23 addObserver:v2 selector:"userBecameInactive" name:qword_10083D200 object:0];

  swift_release();
  sub_10001457C(v15, &qword_10080B650);
  return v2;
}

uint64_t sub_1003B516C()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  Notification.object.getter();
  if (!v18) {
    return sub_10001457C((uint64_t)&v17, &qword_1007FAD50);
  }
  sub_10002102C(&v17, v19);
  sub_10001B648((uint64_t)v19, (uint64_t)&v17);
  type metadata accessor for ActivityScene();
  if (swift_dynamicCast())
  {
  }
  else
  {
    uint64_t v9 = v0 + OBJC_IVAR____TtC7Journal18MindfulnessManager_startDate;
    swift_beginAccess();
    sub_10001B220(v9, (uint64_t)v7, (uint64_t *)&unk_1007FC470);
    LODWORD(v9) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1);
    sub_10001457C((uint64_t)v7, (uint64_t *)&unk_1007FC470);
    if (v9 != 1)
    {
      if (qword_1007F6DC8 != -1) {
        swift_once();
      }
      uint64_t v10 = qword_10083D360;
      uint64_t Strong = swift_unknownObjectWeakLoadStrong();
      if (!Strong
        || (uint64_t v12 = (void *)Strong,
            uint64_t v13 = *(void *)(v10 + 24),
            uint64_t ObjectType = swift_getObjectType(),
            id v16 = v12,
            LOBYTE(v13) = (*(uint64_t (**)(uint64_t))(*(void *)(v13 + 8) + 8))(ObjectType),
            swift_unknownObjectRelease(),
            (v13 & 1) == 0))
      {
        static Date.now.getter();
        sub_1003B67B0((uint64_t)v4, 60.0);
        (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      }
    }
  }
  return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v19);
}

uint64_t sub_1003B54FC()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC7Journal18MindfulnessManager_startDate;
  swift_beginAccess();
  sub_10001B220(v8, (uint64_t)v7, (uint64_t *)&unk_1007FC470);
  uint64_t v9 = type metadata accessor for Date();
  LODWORD(v8) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48))(v7, 1, v9);
  uint64_t result = sub_10001457C((uint64_t)v7, (uint64_t *)&unk_1007FC470);
  if (v8 != 1)
  {
    uint64_t v11 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 1, 1, v11);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v12 = static MainActor.shared.getter();
    uint64_t v13 = (void *)swift_allocObject();
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v1;
    sub_100328A60((uint64_t)v4, (uint64_t)&unk_10080B690, (uint64_t)v13);
    return swift_release();
  }
  return result;
}

uint64_t sub_1003B56F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for Date();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v7;
  v4[8] = v6;
  return _swift_task_switch(sub_1003B57E4, v7, v6);
}

uint64_t sub_1003B57E4()
{
  static Date.now.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003B5888;
  uint64_t v2 = *(void *)(v0 + 40);
  return sub_1003B7F8C(v2, 0);
}

uint64_t sub_1003B5888()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 40);
  uint64_t v3 = *(void *)(*v0 + 32);
  uint64_t v4 = *(void *)(*v0 + 24);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v6 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_10028434C, v6, v5);
}

void sub_1003B5A24()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v0 + OBJC_IVAR____TtC7Journal18MindfulnessManager_startDate;
  swift_beginAccess();
  sub_10001B220(v8, (uint64_t)v7, (uint64_t *)&unk_1007FC470);
  LODWORD(v8) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1);
  sub_10001457C((uint64_t)v7, (uint64_t *)&unk_1007FC470);
  if (v8 == 1)
  {
    static Date.now.getter();
    sub_1003B6430((uint64_t)v4);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      uint64_t v18 = v16;
      *(_DWORD *)uint64_t v11 = 136315138;
      v15[1] = v11 + 4;
      static Date.now.getter();
      uint64_t v12 = Date.debugDescription.getter();
      unint64_t v14 = v13;
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      uint64_t v17 = sub_10011EA98(v12, v14, &v18);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "User became active at %s", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    sub_1003B7CB4();
  }
}

uint64_t sub_1003B5D1C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v0 + OBJC_IVAR____TtC7Journal18MindfulnessManager_startDate;
  swift_beginAccess();
  sub_10001B220(v12, (uint64_t)v11, (uint64_t *)&unk_1007FC470);
  LODWORD(v12) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5);
  uint64_t result = sub_10001457C((uint64_t)v11, (uint64_t *)&unk_1007FC470);
  if (v12 != 1)
  {
    unint64_t v14 = Logger.logObject.getter();
    os_log_type_t v15 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v24 = swift_slowAlloc();
      uint64_t v27 = v24;
      *(_DWORD *)uint64_t v16 = 136315138;
      id v23 = v16 + 4;
      static Date.now.getter();
      uint64_t v17 = Date.debugDescription.getter();
      uint64_t v25 = v4;
      unint64_t v19 = v18;
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      uint64_t v26 = sub_10011EA98(v17, v19, &v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v4 = v25;
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "User became inactive at %s", v16, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v20 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v4, 1, 1, v20);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v21 = static MainActor.shared.getter();
    uint64_t v22 = (void *)swift_allocObject();
    void v22[2] = v21;
    v22[3] = &protocol witness table for MainActor;
    v22[4] = v1;
    sub_100328A60((uint64_t)v4, (uint64_t)&unk_10080B680, (uint64_t)v22);
    return swift_release();
  }
  return result;
}

uint64_t sub_1003B60B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for Date();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v7;
  v4[8] = v6;
  return _swift_task_switch(sub_1003B61AC, v7, v6);
}

uint64_t sub_1003B61AC()
{
  static Date.now.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003B6250;
  uint64_t v2 = *(void *)(v0 + 40);
  return sub_1003B7F8C(v2, 1);
}

uint64_t sub_1003B6250()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 40);
  uint64_t v3 = *(void *)(*v0 + 32);
  uint64_t v4 = *(void *)(*v0 + 24);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v6 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_10027A40C, v6, v5);
}

uint64_t sub_1003B63EC(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v4 = swift_retain();
  a3(v4);

  return swift_release();
}

void sub_1003B6430(uint64_t a1)
{
  v24[0] = a1;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)v24 - v10;
  __chkstk_darwin(v12);
  unint64_t v14 = (char *)v24 - v13;
  uint64_t v15 = v1 + OBJC_IVAR____TtC7Journal18MindfulnessManager_startDate;
  swift_beginAccess();
  sub_10001B220(v15, (uint64_t)v14, (uint64_t *)&unk_1007FC470);
  int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48))(v14, 1, v2);
  sub_10001457C((uint64_t)v14, (uint64_t *)&unk_1007FC470);
  if (v16 == 1)
  {
    uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v18 = v24[0];
    v17(v11, v24[0], v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v3 + 56))(v11, 0, 1, v2);
    sub_100062DA4((uint64_t)v11, (uint64_t)v8);
    swift_beginAccess();
    sub_100064EB8((uint64_t)v8, v15);
    swift_endAccess();
    v17(v5, v18, v2);
    unint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      v25[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v21 = 136315138;
      uint64_t v22 = Date.debugDescription.getter();
      v24[1] = sub_10011EA98(v22, v23, v25);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Started mindfulness session %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
  }
}

void sub_1003B67B0(uint64_t a1, double a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v41 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  unint64_t v14 = (char *)&v35 - v13;
  uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = v3 + OBJC_IVAR____TtC7Journal18MindfulnessManager_startDate;
  swift_beginAccess();
  sub_10001B220(v18, (uint64_t)v17, (uint64_t *)&unk_1007FC470);
  LODWORD(v18) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v17, 1, v8);
  sub_10001457C((uint64_t)v17, (uint64_t *)&unk_1007FC470);
  if (v18 != 1)
  {
    uint64_t v37 = v10;
    uint64_t v39 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    uint64_t v40 = v9 + 16;
    v39(v14, a1, v8);
    unint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.info.getter();
    BOOL v21 = os_log_type_enabled(v19, v20);
    uint64_t v38 = a1;
    if (v21)
    {
      uint64_t v22 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      uint64_t v36 = v3;
      *(_DWORD *)uint64_t v22 = 136315138;
      uint64_t v35 = (void (*)(uint64_t, char *, uint64_t))(v22 + 4);
      uint64_t v23 = Date.debugDescription.getter();
      uint64_t v42 = sub_10011EA98(v23, v24, aBlock);
      uint64_t v3 = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "Paused mindfulness session at %s", v22, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      a1 = v38;
      swift_slowDealloc();
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);
    }
    uint64_t v25 = type metadata accessor for TaskPriority();
    uint64_t v26 = (uint64_t)v41;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v41, 1, 1, v25);
    v39(v11, a1, v8);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v27 = static MainActor.shared.getter();
    uint64_t v28 = *(unsigned __int8 *)(v9 + 80);
    uint64_t v36 = v28 | 7;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v27;
    *(void *)(v29 + 24) = &protocol witness table for MainActor;
    *(double *)(v29 + 32) = a2;
    *(void *)(v29 + 40) = v3;
    uint64_t v35 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
    v35(v29 + ((v28 + 48) & ~v28), v11, v8);
    *(void *)(v3 + OBJC_IVAR____TtC7Journal18MindfulnessManager_pauseTask) = sub_1005D74B4(v26, (uint64_t)&unk_10080B660, v29);
    swift_release();
    id v30 = [self processInfo];
    NSString v31 = String._bridgeToObjectiveC()();
    uint64_t v32 = swift_allocObject();
    swift_weakInit();
    v39(v11, v38, v8);
    uint64_t v33 = swift_allocObject();
    *(void *)(v33 + 16) = v32;
    v35(v33 + ((v28 + 24) & ~v28), v11, v8);
    aBlock[4] = (uint64_t)sub_1003B96D0;
    aBlock[5] = v33;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1001C7318;
    aBlock[3] = (uint64_t)&unk_1007A8C58;
    uint64_t v34 = _Block_copy(aBlock);
    swift_release();
    [v30 performExpiringActivityWithReason:v31 usingBlock:v34];
    _Block_release(v34);
  }
}

uint64_t sub_1003B6D88(double a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 24) = a5;
  *(void *)(v6 + 32) = a6;
  *(double *)(v6 + 16) = a1;
  uint64_t v7 = type metadata accessor for ContinuousClock();
  *(void *)(v6 + 40) = v7;
  *(void *)(v6 + 48) = *(void *)(v7 - 8);
  *(void *)(v6 + 56) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v6 + 64) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 72) = v9;
  *(void *)(v6 + 80) = v8;
  return _swift_task_switch(sub_1003B6E80, v9, v8);
}

uint64_t sub_1003B6E80()
{
  uint64_t v1 = static Duration.seconds(_:)();
  uint64_t v3 = v2;
  ContinuousClock.init()();
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_100812A68 + dword_100812A68);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1003B6F5C;
  return v6(v1, v3, 0, 0, 1);
}

uint64_t sub_1003B6F5C()
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  v2[12] = v0;
  swift_task_dealloc();
  uint64_t v4 = v2[7];
  uint64_t v5 = v2[6];
  uint64_t v6 = v2[5];
  if (v0)
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v2[9];
    uint64_t v8 = v2[10];
    return _swift_task_switch(sub_1003B72C0, v7, v8);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v9 = (void *)swift_task_alloc();
    v2[13] = v9;
    *uint64_t v9 = v3;
    v9[1] = sub_1003B7134;
    uint64_t v10 = v2[4];
    return sub_1003B7F8C(v10, 0);
  }
}

uint64_t sub_1003B7134()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_1003B7254, v3, v2);
}

uint64_t sub_1003B7254()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003B72C0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1003B732C(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = Strong;
    uint64_t v14 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v5);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v15 = static MainActor.shared.getter();
    unint64_t v16 = (*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v15;
    *(void *)(v17 + 24) = &protocol witness table for MainActor;
    *(unsigned char *)(v17 + 32) = a1 & 1;
    *(void *)(v17 + 40) = v13;
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v17 + v16, v8, v5);
    sub_100328A60((uint64_t)v11, (uint64_t)&unk_10080B670, v17);
    swift_release();
    id v18 = *(id *)(v13 + OBJC_IVAR____TtC7Journal18MindfulnessManager_backgroundingSemaphore);
    OS_dispatch_semaphore.wait()();
    swift_release();
  }
}

uint64_t sub_1003B7580(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a5;
  *(void *)(v6 + 24) = a6;
  *(unsigned char *)(v6 + 88) = a4;
  type metadata accessor for MainActor();
  *(void *)(v6 + 32) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 40) = v8;
  *(void *)(v6 + 48) = v7;
  return _swift_task_switch(sub_1003B761C, v8, v7);
}

uint64_t sub_1003B761C()
{
  if (*(unsigned char *)(v0 + 88) == 1)
  {
    uint64_t v1 = Logger.logObject.getter();
    os_log_type_t v2 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v1, v2))
    {
      uint64_t v3 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v3 = 0;
      _os_log_impl((void *)&_mh_execute_header, v1, v2, "Process is being suspended so ending the background timer early", v3, 2u);
      swift_slowDealloc();
    }

    uint64_t v4 = (void *)swift_task_alloc();
    *(void *)(v0 + 56) = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1003B784C;
    uint64_t v5 = *(void *)(v0 + 24);
    return sub_1003B7F8C(v5, 0);
  }
  else
  {
    uint64_t v7 = *(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal18MindfulnessManager_pauseTask);
    *(void *)(v0 + 64) = v7;
    if (v7)
    {
      swift_retain();
      uint64_t v8 = (void *)swift_task_alloc();
      *(void *)(v0 + 72) = v8;
      uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC0D0);
      void *v8 = v0;
      v8[1] = sub_1003B79E0;
      return Task.value.getter(v9, v7, (char *)&type metadata for () + 8, v9, &protocol self-conformance witness table for Error);
    }
    else
    {
      swift_release();
      OS_dispatch_semaphore.signal()();
      uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
      return v10();
    }
  }
}

uint64_t sub_1003B784C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_1003B796C, v3, v2);
}

uint64_t sub_1003B796C()
{
  swift_release();
  OS_dispatch_semaphore.signal()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003B79E0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  if (v0) {
    uint64_t v5 = sub_1003B7B9C;
  }
  else {
    uint64_t v5 = sub_1003B7B1C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1003B7B1C()
{
  swift_release();
  swift_release();
  OS_dispatch_semaphore.signal()();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003B7B9C()
{
  swift_release();
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "Sleep task was canceled", v3, 2u);
    swift_slowDealloc();
  }
  swift_release();
  swift_errorRelease();

  OS_dispatch_semaphore.signal()();
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_1003B7CB4()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = OBJC_IVAR____TtC7Journal18MindfulnessManager_pauseTask;
  if (!*(void *)(v0 + OBJC_IVAR____TtC7Journal18MindfulnessManager_pauseTask)) {
    goto LABEL_4;
  }
  swift_retain();
  if (swift_task_isCancelled())
  {
    swift_release();
LABEL_4:
    static Date.now.getter();
    sub_1003B6430((uint64_t)v4);
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return;
  }
  if (*(void *)(v0 + v5))
  {
    swift_retain();
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    Task.cancel()();
    swift_release();
    *(void *)(v0 + v5) = 0;
    swift_release();
  }
  uint64_t v13 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v13, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    uint64_t v12 = v7 + 4;
    static Date.now.getter();
    uint64_t v8 = Date.debugDescription.getter();
    unint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    uint64_t v14 = sub_10011EA98(v8, v10, &v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v13, v6, "Resumed mindfulness session at %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v11 = v13;
  }
}

uint64_t sub_1003B7F8C(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 544) = a2;
  *(void *)(v3 + 320) = a1;
  *(void *)(v3 + 328) = v2;
  uint64_t v4 = type metadata accessor for Calendar.Component();
  *(void *)(v3 + 336) = v4;
  *(void *)(v3 + 344) = *(void *)(v4 - 8);
  *(void *)(v3 + 352) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Date();
  *(void *)(v3 + 360) = v5;
  *(void *)(v3 + 368) = *(void *)(v5 - 8);
  *(void *)(v3 + 376) = swift_task_alloc();
  *(void *)(v3 + 384) = swift_task_alloc();
  *(void *)(v3 + 392) = swift_task_alloc();
  *(void *)(v3 + 400) = swift_task_alloc();
  *(void *)(v3 + 408) = swift_task_alloc();
  *(void *)(v3 + 416) = swift_task_alloc();
  *(void *)(v3 + 424) = swift_task_alloc();
  *(void *)(v3 + 432) = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_1007FC470);
  *(void *)(v3 + 440) = swift_task_alloc();
  *(void *)(v3 + 448) = swift_task_alloc();
  *(void *)(v3 + 456) = swift_task_alloc();
  *(void *)(v3 + 464) = swift_task_alloc();
  *(void *)(v3 + 472) = swift_task_alloc();
  *(void *)(v3 + 480) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v3 + 488) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 496) = v7;
  *(void *)(v3 + 504) = v6;
  return _swift_task_switch(sub_1003B81A8, v7, v6);
}

uint64_t sub_1003B81A8()
{
  uint64_t v89 = v0;
  uint64_t v1 = *(void *)(v0 + 480);
  uint64_t v2 = *(void *)(v0 + 360);
  uint64_t v3 = *(void *)(v0 + 368);
  uint64_t v4 = *(void *)(v0 + 328);
  uint64_t v5 = OBJC_IVAR____TtC7Journal18MindfulnessManager_startDate;
  *(void *)(v0 + 512) = OBJC_IVAR____TtC7Journal18MindfulnessManager_startDate;
  uint64_t v6 = v4 + v5;
  swift_beginAccess();
  sub_10001B220(v6, v1, (uint64_t *)&unk_1007FC470);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  LODWORD(v2) = v7(v1, 1, v2);
  sub_10001457C(v1, (uint64_t *)&unk_1007FC470);
  if (v2 == 1)
  {
    swift_release();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v10 = 0;
      uint64_t v11 = "Not currently in a mindfulness session, so nothing will be logged to Health";
LABEL_21:
      _os_log_impl((void *)&_mh_execute_header, v8, v9, v11, v10, 2u);
      swift_slowDealloc();
      goto LABEL_22;
    }
    goto LABEL_22;
  }
  uint64_t v87 = v6;
  uint64_t v12 = *(void *)(v0 + 328);
  uint64_t v13 = OBJC_IVAR____TtC7Journal18MindfulnessManager_pauseTask;
  if (*(void *)(v12 + OBJC_IVAR____TtC7Journal18MindfulnessManager_pauseTask))
  {
    swift_retain();
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    Task.cancel()();
    swift_release();
    *(void *)(v12 + v13) = 0;
    swift_release();
  }
  uint64_t v14 = *(void *)(v0 + 464);
  uint64_t v15 = *(void *)(v0 + 472);
  uint64_t v17 = *(void *)(v0 + 360);
  uint64_t v16 = *(void *)(v0 + 368);
  uint64_t v18 = *(void *)(v0 + 328);
  if (*(unsigned char *)(v0 + 544) == 1) {
    Date.addingTimeInterval(_:)();
  }
  else {
    (*(void (**)(void, void, void))(v16 + 16))(*(void *)(v0 + 472), *(void *)(v0 + 320), *(void *)(v0 + 360));
  }
  uint64_t v19 = v17;
  os_log_type_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56);
  v20(v15, 0, 1, v19);
  sub_100062DA4(v15, v14);
  uint64_t v21 = v18 + OBJC_IVAR____TtC7Journal18MindfulnessManager_endDate;
  swift_beginAccess();
  sub_100064EB8(v14, v21);
  swift_endAccess();
  *(void *)(v0 + 520) = v20;
  uint64_t v22 = *(void *)(v0 + 456);
  uint64_t v23 = *(void *)(v0 + 360);
  sub_10001B220(v87, v22, (uint64_t *)&unk_1007FC470);
  if (v7(v22, 1, v23) == 1)
  {
    uint64_t v24 = *(void *)(v0 + 456);
    swift_release();
    uint64_t v25 = (uint64_t *)&unk_1007FC470;
LABEL_11:
    sub_10001457C(v24, v25);
    goto LABEL_19;
  }
  uint64_t v26 = *(void *)(v0 + 448);
  uint64_t v27 = *(void *)(v0 + 360);
  uint64_t v28 = *(void *)(v0 + 328);
  uint64_t v29 = *(void (**)(void, void, uint64_t))(*(void *)(v0 + 368) + 32);
  v29(*(void *)(v0 + 432), *(void *)(v0 + 456), v27);
  uint64_t v30 = OBJC_IVAR____TtC7Journal18MindfulnessManager_endDate;
  *(void *)(v0 + 528) = OBJC_IVAR____TtC7Journal18MindfulnessManager_endDate;
  uint64_t v31 = v28 + v30;
  swift_beginAccess();
  sub_10001B220(v31, v26, (uint64_t *)&unk_1007FC470);
  if (v7(v26, 1, v27) == 1)
  {
    uint64_t v32 = *(void *)(v0 + 448);
    (*(void (**)(void, void))(*(void *)(v0 + 368) + 8))(*(void *)(v0 + 432), *(void *)(v0 + 360));
    swift_release();
    sub_10001457C(v32, (uint64_t *)&unk_1007FC470);
    goto LABEL_19;
  }
  uint64_t v85 = v31;
  uint64_t v24 = v0 + 16;
  uint64_t v33 = *(void *)(v0 + 328);
  v29(*(void *)(v0 + 424), *(void *)(v0 + 448), *(void *)(v0 + 360));
  sub_10001B220(v33 + 16, v0 + 16, &qword_10080B650);
  if (!*(void *)(v0 + 40))
  {
    uint64_t v46 = *(void *)(v0 + 424);
    uint64_t v45 = *(void *)(v0 + 432);
    uint64_t v47 = *(void *)(v0 + 360);
    uint64_t v48 = *(void *)(v0 + 368);
    swift_release();
    os_log_type_t v49 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
    v49(v46, v47);
    v49(v45, v47);
    uint64_t v25 = &qword_10080B650;
    goto LABEL_11;
  }
  long long v84 = v20;
  uint64_t v86 = (void *)(v0 + 56);
  sub_10001B3BC((long long *)(v0 + 16), v0 + 56);
  if (qword_1007F6F20 != -1) {
    swift_once();
  }
  uint64_t v34 = *(void *)(v0 + 440);
  uint64_t v35 = *(void *)(v0 + 360);
  uint64_t v36 = type metadata accessor for DateComponents();
  sub_100026A54(v36, (uint64_t)qword_10083D498);
  Calendar.date(byAdding:to:wrappingComponents:)();
  if (v7(v34, 1, v35) == 1)
  {
    uint64_t v37 = *(void *)(v0 + 432);
    uint64_t v38 = *(void *)(v0 + 440);
    uint64_t v39 = *(void *)(v0 + 424);
    uint64_t v41 = *(void *)(v0 + 360);
    uint64_t v40 = *(void *)(v0 + 368);
    swift_release();
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
    v42(v39, v41);
    v42(v37, v41);
    sub_10001457C(v38, (uint64_t *)&unk_1007FC470);
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v86);
LABEL_19:
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      unint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v10 = 0;
      uint64_t v11 = "endDate, healthManager, or minimumStartDate was nil";
      goto LABEL_21;
    }
LABEL_22:

LABEL_23:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v43 = *(uint64_t (**)(void))(v0 + 8);
    return v43();
  }
  uint64_t v50 = *(void *)(v0 + 352);
  uint64_t v52 = *(void *)(v0 + 336);
  uint64_t v51 = *(void *)(v0 + 344);
  v29(*(void *)(v0 + 416), *(void *)(v0 + 440), *(void *)(v0 + 360));
  (*(void (**)(uint64_t, void, uint64_t))(v51 + 104))(v50, enum case for Calendar.Component.second(_:), v52);
  uint64_t v53 = Calendar.compare(_:to:toGranularity:)();
  (*(void (**)(uint64_t, uint64_t))(v51 + 8))(v50, v52);
  if ((unint64_t)(v53 + 1) > 1)
  {
    uint64_t v58 = *(void *)(v0 + 424);
    uint64_t v57 = *(void *)(v0 + 432);
    uint64_t v60 = *(void *)(v0 + 376);
    uint64_t v59 = *(void *)(v0 + 384);
    uint64_t v62 = *(void *)(v0 + 360);
    uint64_t v61 = *(void *)(v0 + 368);
    swift_release();
    uint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 16);
    v63(v59, v57, v62);
    v63(v60, v58, v62);
    uint64_t v64 = Logger.logObject.getter();
    os_log_type_t v65 = static os_log_type_t.error.getter();
    BOOL v66 = os_log_type_enabled(v64, v65);
    uint64_t v67 = *(void *)(v0 + 424);
    uint64_t v83 = *(void *)(v0 + 432);
    uint64_t v68 = *(void *)(v0 + 416);
    uint64_t v70 = *(void *)(v0 + 376);
    uint64_t v69 = *(void *)(v0 + 384);
    uint64_t v71 = *(void *)(v0 + 360);
    uint64_t v72 = *(void *)(v0 + 368);
    if (v66)
    {
      uint64_t v82 = *(void *)(v0 + 416);
      uint64_t v73 = swift_slowAlloc();
      uint64_t v88 = swift_slowAlloc();
      *(_DWORD *)uint64_t v73 = 136315394;
      uint64_t v74 = Date.debugDescription.getter();
      *(void *)(v0 + 312) = sub_10011EA98(v74, v75, &v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      uint64_t v76 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
      v76(v69, v71);
      *(_WORD *)(v73 + 12) = 2080;
      uint64_t v77 = Date.debugDescription.getter();
      *(void *)(v0 + 288) = sub_10011EA98(v77, v78, &v88);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      v76(v70, v71);
      _os_log_impl((void *)&_mh_execute_header, v64, v65, "The Mindfulness session duration was less than a minute, so it won't be logged into Health (start: %s, end: %s", (uint8_t *)v73, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      v76(v82, v71);
      v76(v67, v71);
      v76(v83, v71);
    }
    else
    {

      uint64_t v79 = *(void (**)(uint64_t, uint64_t))(v72 + 8);
      v79(v70, v71);
      v79(v69, v71);
      v79(v68, v71);
      v79(v67, v71);
      v79(v83, v71);
    }
    uint64_t v80 = *(void *)(v0 + 472);
    uint64_t v81 = *(void *)(v0 + 360);
    v84(v80, 1, 1, v81);
    swift_beginAccess();
    sub_100064EB8(v80, v87);
    swift_endAccess();
    v84(v80, 1, 1, v81);
    swift_beginAccess();
    sub_100064EB8(v80, v85);
    swift_endAccess();
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v86);
    goto LABEL_23;
  }
  sub_10002E0BC(v86, *(void *)(v0 + 80));
  uint64_t v54 = (void *)swift_task_alloc();
  *(void *)(v0 + 536) = v54;
  void *v54 = v0;
  v54[1] = sub_1003B8C28;
  uint64_t v55 = *(void *)(v0 + 424);
  uint64_t v56 = *(void *)(v0 + 432);
  return sub_10004DF3C(v56, v55);
}

uint64_t sub_1003B8C28()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 504);
  uint64_t v3 = *(void *)(v1 + 496);
  return _swift_task_switch(sub_1003B8D48, v3, v2);
}

uint64_t sub_1003B8D48()
{
  uint64_t v44 = v0;
  uint64_t v1 = v0[53];
  uint64_t v41 = v0[54];
  uint64_t v3 = v0[50];
  uint64_t v2 = v0[51];
  uint64_t v4 = v0[49];
  uint64_t v5 = v0[45];
  uint64_t v6 = v0[46];
  uint64_t v7 = v0[40];
  swift_release();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v8(v2, v7, v5);
  v8(v3, v1, v5);
  v8(v4, v41, v5);
  os_log_type_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v40 = v0[53];
    uint64_t v42 = v0[54];
    uint64_t v39 = v0[52];
    os_log_type_t type = v10;
    uint64_t v11 = v0[51];
    uint64_t v37 = v0[50];
    uint64_t v12 = v0[49];
    uint64_t v13 = v0[45];
    uint64_t v14 = v0[46];
    uint64_t v15 = swift_slowAlloc();
    uint64_t v43 = swift_slowAlloc();
    *(_DWORD *)uint64_t v15 = 136315394;
    uint64_t v16 = Date.debugDescription.getter();
    v0[37] = sub_10011EA98(v16, v17, &v43);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v14 + 8);
    v18(v11, v13);
    *(_WORD *)(v15 + 12) = 2048;
    Date.timeIntervalSince(_:)();
    v0[38] = v19;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    v18(v37, v13);
    v18(v12, v13);
    _os_log_impl((void *)&_mh_execute_header, v9, type, "Ended mindfulness session at %s and logged a mindfulness session for %f seconds", (uint8_t *)v15, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v18(v39, v13);
    v18(v40, v13);
    v18(v42, v13);
  }
  else
  {
    uint64_t v21 = v0[53];
    uint64_t v20 = v0[54];
    uint64_t v23 = v0[51];
    uint64_t v22 = v0[52];
    uint64_t v25 = v0[49];
    uint64_t v24 = v0[50];
    uint64_t v26 = v0[45];
    uint64_t v27 = v0[46];

    uint64_t v28 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
    v28(v24, v26);
    v28(v25, v26);
    v28(v23, v26);
    v28(v22, v26);
    v28(v21, v26);
    v28(v20, v26);
  }
  uint64_t v29 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v0[65];
  uint64_t v30 = v0[59];
  uint64_t v31 = v0[45];
  uint64_t v32 = v0[41];
  uint64_t v33 = v32 + v0[66];
  uint64_t v34 = v32 + v0[64];
  v29(v30, 1, 1, v31);
  swift_beginAccess();
  sub_100064EB8(v30, v34);
  swift_endAccess();
  v29(v30, 1, 1, v31);
  swift_beginAccess();
  sub_100064EB8(v30, v33);
  swift_endAccess();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)(v0 + 7));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v35 = (uint64_t (*)(void))v0[1];
  return v35();
}

uint64_t sub_1003B91F8()
{
  sub_10001457C(v0 + 16, &qword_10080B650);
  sub_10001457C(v0 + OBJC_IVAR____TtC7Journal18MindfulnessManager_startDate, (uint64_t *)&unk_1007FC470);
  sub_10001457C(v0 + OBJC_IVAR____TtC7Journal18MindfulnessManager_endDate, (uint64_t *)&unk_1007FC470);
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal18MindfulnessManager_logger;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC7Journal18MindfulnessManager_calendar;
  uint64_t v4 = type metadata accessor for Calendar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  return swift_deallocClassInstance();
}

uint64_t sub_1003B933C()
{
  return type metadata accessor for MindfulnessManager();
}

uint64_t type metadata accessor for MindfulnessManager()
{
  uint64_t result = qword_10080B4D8;
  if (!qword_10080B4D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003B9390()
{
  sub_100033618();
  if (v0 <= 0x3F)
  {
    type metadata accessor for Logger();
    if (v1 <= 0x3F)
    {
      type metadata accessor for Calendar();
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

uint64_t sub_1003B94C8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v5 = *((void *)v1 + 2);
  uint64_t v6 = *((void *)v1 + 3);
  double v7 = v1[4];
  uint64_t v8 = *((void *)v1 + 5);
  uint64_t v9 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  os_log_type_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *os_log_type_t v10 = v2;
  v10[1] = sub_10002C194;
  return sub_1003B6D88(v7, a1, v5, v6, v8, v9);
}

uint64_t sub_1003B95CC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003B9604()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1003B96D0(char a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  sub_1003B732C(a1, v4, v5);
}

uint64_t sub_1003B9744(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003B9754()
{
  return swift_release();
}

uint64_t sub_1003B9760()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1003B9834(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v5 = *(void *)(v1 + 16);
  uint64_t v6 = *(void *)(v1 + 24);
  char v7 = *(unsigned char *)(v1 + 32);
  uint64_t v8 = *(void *)(v1 + 40);
  uint64_t v9 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  os_log_type_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *os_log_type_t v10 = v2;
  v10[1] = sub_10002C194;
  return sub_1003B7580(a1, v5, v6, v7, v8, v9);
}

uint64_t sub_1003B993C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *char v7 = v2;
  v7[1] = sub_100052588;
  return sub_1003B60B8(a1, v4, v5, v6);
}

uint64_t sub_1003B99F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  char v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *char v7 = v2;
  v7[1] = sub_100052588;
  return sub_1003B56F0(a1, v4, v5, v6);
}

id CanvasGridCollectionView.__allocating_init(frame:collectionViewLayout:)(void *a1, double a2, double a3, double a4, double a5)
{
  id v7 = [objc_allocWithZone(v5) initWithFrame:a1 collectionViewLayout:a2];

  return v7;
}

uint64_t property wrapper backing initializer of CanvasGridCollectionView.isExpanded()
{
  uint64_t v0 = type metadata accessor for UIView.Invalidations.IntrinsicContentSize();
  __chkstk_darwin(v0);
  UIView.Invalidations.IntrinsicContentSize.init()();
  return UIView.Invalidating.init(wrappedValue:_:)();
}

uint64_t sub_1003B9BD4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

id CanvasGridCollectionView.init(frame:collectionViewLayout:)(void *a1, double a2, double a3, double a4, double a5)
{
  uint64_t v11 = type metadata accessor for UIView.Invalidations.IntrinsicContentSize();
  __chkstk_darwin(v11);
  uint64_t v12 = sub_100010218(&qword_10080B698);
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = &v5[OBJC_IVAR____TtC7Journal24CanvasGridCollectionView__isExpanded];
  char v27 = 0;
  unint64_t v17 = v5;
  UIView.Invalidations.IntrinsicContentSize.init()();
  UIView.Invalidating.init(wrappedValue:_:)();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v15, v12);

  uint64_t v18 = (objc_class *)type metadata accessor for CanvasGridCollectionView();
  v26.id receiver = v17;
  v26.Class super_class = v18;
  id v19 = [super initWithFrame:a1 collectionViewLayout:a2];
  type metadata accessor for MosaicCell();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v21 = v19;
  NSString v22 = String._bridgeToObjectiveC()();
  [v21 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v22];

  id v23 = [self clearColor];
  [v21 setBackgroundColor:v23];

  [v21 setScrollEnabled:0];
  [v21 setClipsToBounds:0];

  return v21;
}

uint64_t type metadata accessor for CanvasGridCollectionView()
{
  uint64_t result = qword_10080B6D0;
  if (!qword_10080B6D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id CanvasGridCollectionView.__allocating_init(coder:)(void *a1)
{
  id v3 = [objc_allocWithZone(v1) initWithCoder:a1];

  return v3;
}

id CanvasGridCollectionView.init(coder:)(void *a1)
{
  uint64_t v3 = type metadata accessor for UIView.Invalidations.IntrinsicContentSize();
  __chkstk_darwin(v3);
  uint64_t v4 = sub_100010218(&qword_10080B698);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = &v1[OBJC_IVAR____TtC7Journal24CanvasGridCollectionView__isExpanded];
  char v19 = 0;
  uint64_t v9 = v1;
  UIView.Invalidations.IntrinsicContentSize.init()();
  UIView.Invalidating.init(wrappedValue:_:)();
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v8, v7, v4);

  os_log_type_t v10 = (objc_class *)type metadata accessor for CanvasGridCollectionView();
  v18.id receiver = v9;
  v18.Class super_class = v10;
  [super initWithCoder:a1];
  if (v11)
  {
    type metadata accessor for MosaicCell();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v13 = v11;
    NSString v14 = String._bridgeToObjectiveC()();
    [v13 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v14];

    id v15 = [self clearColor];
    [v13 setBackgroundColor:v15];

    [v13 setScrollEnabled:0];
    [v13 setClipsToBounds:0];
  }
  return v11;
}

double CanvasGridCollectionView.intrinsicContentSize.getter()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  swift_release();
  if ((v2 & 1) == 0) {
    return sub_1003BA38C();
  }
  [v0 contentSize];
  return result;
}

double sub_1003BA38C()
{
  unsigned __int8 v1 = v0;
  uint64_t v2 = type metadata accessor for IndexPath();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((uint64_t)objc_msgSend(v1, "numberOfSections", v4) >= 1
    && (uint64_t)[v1 numberOfItemsInSection:0] >= 6
    && (IndexPath.init(arrayLiteral:)(),
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa,
        (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2),
        id v8 = [v1 layoutAttributesForItemAtIndexPath:isa],
        isa,
        v8))
  {
    [v1 contentSize];
    double v10 = v9;
    [v8 frame];
    CGRectGetMaxY(v14);
  }
  else
  {
    [v1 contentSize];
    return v11;
  }
  return v10;
}

id CanvasGridCollectionView.contentSize.getter()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CanvasGridCollectionView();
  return [super contentSize];
}

id CanvasGridCollectionView.contentSize.setter(double a1, double a2)
{
  uint64_t v5 = (objc_class *)type metadata accessor for CanvasGridCollectionView();
  v15.id receiver = v2;
  v15.Class super_class = v5;
  [super contentSize];
  double v7 = v6;
  double v9 = v8;
  v14.id receiver = v2;
  v14.Class super_class = v5;
  [super setContentSize:a1, a2];
  id result = [v2 contentSize];
  if (v12 != v7 || v11 != v9) {
    return [v2 invalidateIntrinsicContentSize];
  }
  return result;
}

id CanvasGridCollectionView.__deallocating_deinit()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for CanvasGridCollectionView();
  return [super dealloc];
}

uint64_t sub_1003BA7B8@<X0>(unsigned char *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1003BA83C(uint64_t a1, void **a2)
{
  objc_super v2 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v3 = v2;
  return static UIView.Invalidating.subscript.setter();
}

uint64_t sub_1003BA8B0()
{
  return type metadata accessor for CanvasGridCollectionView();
}

void sub_1003BA8B8()
{
  sub_1003BA948();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1003BA948()
{
  if (!qword_10080B6E0)
  {
    type metadata accessor for UIView.Invalidations.IntrinsicContentSize();
    unint64_t v0 = type metadata accessor for UIView.Invalidating();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10080B6E0);
    }
  }
}

uint64_t sub_1003BA9C8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_10080B6E8);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_10080B6E8);
  if (qword_1007F7DA0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083ECE0);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003BAA90()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1003BAB04()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  uint64_t v2 = v0 + OBJC_IVAR____TtCC7Journal10Journaling9Analytics__entryCount;
  uint64_t v3 = sub_100010218(&qword_10080B818);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);

  return swift_deallocClassInstance();
}

uint64_t sub_1003BABE0()
{
  return _s9AnalyticsCMa();
}

uint64_t _s9AnalyticsCMa()
{
  uint64_t result = qword_10080B730;
  if (!qword_10080B730) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003BAC34()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  double v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  double v7 = (void *)swift_allocObject();
  uint64_t v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_1000D9A48((uint64_t)v4);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_10080B810;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v14[0] = 0;
    v14[1] = 0;
    v14[2] = v9;
    v14[3] = v10;
  }
  swift_task_create();
  return swift_release();
}

uint64_t sub_1003BAE70()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100052588;
  return sub_1003BAFCC();
}

void sub_1003BAF3C()
{
  sub_1003BB4B0();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_1003BAFCC()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_1003BB08C, 0, 0);
}

uint64_t sub_1003BB08C()
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  id v5 = [*(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container) newBackgroundContext];
  v0[6] = v5;
  id v6 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v6 initWithEntityName:v7];
  v0[7] = v8;

  sub_1000FBDC8();
  uint64_t v9 = NSPredicate.init(format:_:)();
  [v8 setPredicate:v9];

  uint64_t v10 = (void *)swift_allocObject();
  v0[8] = v10;
  v10[2] = v3;
  v10[3] = v5;
  v10[4] = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v4);
  swift_retain();
  v5;
  id v11 = v8;
  uint64_t v12 = (void *)swift_task_alloc();
  v0[9] = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1003BB2CC;
  uint64_t v13 = v0[5];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v12, v13, sub_1003BB794, v10, (char *)&type metadata for () + 8);
}

uint64_t sub_1003BB2CC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 32);
  uint64_t v3 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1003BB440, 0, 0);
}

uint64_t sub_1003BB440()
{
  uint64_t v1 = *(void **)(v0 + 56);

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1003BB4B0()
{
  if (!qword_10080B748)
  {
    unint64_t v0 = type metadata accessor for Published();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_10080B748);
    }
  }
}

void sub_1003BB508()
{
  type metadata accessor for JournalEntryMO();
  NSManagedObjectContext.count<A>(for:)();
  if (v0)
  {
    if (qword_1007F6F28 != -1) {
      swift_once();
    }
    uint64_t v1 = type metadata accessor for Logger();
    sub_100026A54(v1, (uint64_t)qword_10080B6E8);
    swift_errorRetain();
    swift_errorRetain();
    uint64_t v2 = Logger.logObject.getter();
    os_log_type_t v3 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v2, v3))
    {
      uint64_t v4 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v4 = 138412290;
      swift_errorRetain();
      uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v5 = v6;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error in Journaling.Analytics.updateEntryCount %@", v4, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    static Published.subscript.setter();
  }
}

uint64_t sub_1003BB74C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1003BB794()
{
}

uint64_t sub_1003BB7B4@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static Published.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1003BB834()
{
  return static Published.subscript.setter();
}

uint64_t sub_1003BB8B0()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003BB8F0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10002C194;
  uint64_t v2 = (void *)swift_task_alloc();
  v1[2] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_100052588;
  return sub_1003BAFCC();
}

uint64_t sub_1003BB9C4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t BatchRecordDownloadOperation.main@Sendable ()()
{
  *(void *)(v1 + 24) = v0;
  return _swift_task_switch(sub_1003BBA1C, 0, 0);
}

uint64_t sub_1003BBA1C()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v1 + qword_10080B830);
  uint64_t v3 = swift_task_alloc();
  v0[4] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  uint64_t v5 = sub_100010218(&qword_10080B848);
  *uint64_t v4 = v0;
  v4[1] = sub_1003BBB28;
  return CKDatabase.configuredWith<A>(configuration:group:body:)(v0 + 2, v2, 0, &unk_10080B840, v3, v5);
}

uint64_t sub_1003BBB28()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1003BBC60;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1003BBC44;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003BBC44()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_1003BBC60()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003BBCC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_1003BBCE8, 0, 0);
}

uint64_t sub_1003BBCE8()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 32) + qword_10080B850);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1003BBD94;
  return CKDatabase.records(for:desiredKeys:)(v1, 0);
}

uint64_t sub_1003BBD94(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 48) = a1;
    return _swift_task_switch(sub_1003BBEE0, 0, 0);
  }
}

uint64_t sub_1003BBEE0()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 48);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003BBF04(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_100052588;
  uint64_t v7[2] = a1;
  return _swift_task_switch(sub_1003BBCE8, 0, 0);
}

void BatchRecordDownloadOperation.init()()
{
}

void sub_1003BBFF0()
{
}

void sub_1003BC020()
{
  swift_bridgeObjectRelease();

  uint64_t v1 = *(void **)(v0 + qword_10080B830);
}

id BatchRecordDownloadOperation.__deallocating_deinit()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for BatchRecordDownloadOperation();
  return [super dealloc];
}

uint64_t type metadata accessor for BatchRecordDownloadOperation()
{
  uint64_t result = qword_10080B880;
  if (!qword_10080B880) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1003BC0F4(uint64_t a1)
{
  swift_bridgeObjectRelease();

  objc_super v2 = *(void **)(a1 + qword_10080B830);
}

uint64_t sub_1003BC150()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1003BC1A8(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(sub_1003BC1C8, 0, 0);
}

uint64_t sub_1003BC1C8()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = *(void *)(v1 + qword_10080B830);
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  uint64_t v5 = sub_100010218(&qword_10080B848);
  *uint64_t v4 = v0;
  v4[1] = sub_1003BC2D4;
  return CKDatabase.configuredWith<A>(configuration:group:body:)(v0 + 2, v2, 0, &unk_10080B980, v3, v5);
}

uint64_t sub_1003BC2D4()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1003BC410;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1003BC3F0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003BC3F0()
{
  **(void **)(v0 + 24) = *(void *)(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1003BC410()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003BC474()
{
  return type metadata accessor for BatchRecordDownloadOperation();
}

uint64_t sub_1003BC47C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_10002C194;
  uint64_t v7[2] = a1;
  return _swift_task_switch(sub_1003BBCE8, 0, 0);
}

uint64_t sub_1003BC538(uint64_t a1)
{
  v2[16] = a1;
  v2[17] = v1;
  uint64_t v3 = type metadata accessor for UUID();
  v2[18] = v3;
  v2[19] = *(void *)(v3 - 8);
  v2[20] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[21] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[22] = v4;
  v2[23] = v5;
  return _swift_task_switch(sub_1003BC660, v4, v5);
}

uint64_t sub_1003BC660()
{
  uint64_t v1 = v0[16];
  if (*(unsigned char *)(v1 + 32))
  {
    if (*(unsigned char *)(v1 + 33))
    {
      unint64_t v2 = (unint64_t)sub_1002A7108(0, 1, 1, _swiftEmptyArrayStorage);
      unint64_t v4 = *(void *)(v2 + 16);
      uint64_t v3 = *(void *)(v2 + 24);
      int64_t v5 = v4 + 1;
      if (v4 < (unint64_t)v3 >> 1) {
        goto LABEL_7;
      }
      goto LABEL_93;
    }
    unint64_t v2 = (unint64_t)_swiftEmptyArrayStorage;
    if (*(unsigned char *)(v1 + 34)) {
      goto LABEL_8;
    }
    goto LABEL_13;
  }
  unint64_t v2 = (unint64_t)_swiftEmptyArrayStorage;
  while (1)
  {
    v0[24] = v2;
    uint64_t v30 = v0[19];
    unint64_t v2 = v0[20];
    int64_t v5 = v0[18];
    UUID.init()();
    UUID.uuidString.getter();
    (*(void (**)(unint64_t, int64_t))(v30 + 8))(v2, v5);
    uint64_t v31 = sub_10055A870(4);
    uint64_t v33 = v32;
    uint64_t v35 = v34;
    unint64_t v4 = v36;
    swift_bridgeObjectRelease();
    v0[25] = v31;
    v0[26] = v33;
    v0[27] = v35;
    v0[28] = v4;
    uint64_t v3 = *(void *)(v1 + 16);
    v0[29] = v3;
    if (v3 >= 1) {
      break;
    }
    __break(1u);
LABEL_92:
    __break(1u);
LABEL_93:
    unint64_t v2 = (unint64_t)sub_1002A7108((void *)((unint64_t)v3 > 1), v5, 1, (void *)v2);
LABEL_7:
    *(void *)(v2 + 16) = v5;
    *(unsigned char *)(v2 + v4 + 32) = 0;
    uint64_t v1 = v0[16];
    if (*(unsigned char *)(v1 + 34))
    {
LABEL_8:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v2 = (unint64_t)sub_1002A7108(0, *(void *)(v2 + 16) + 1, 1, (void *)v2);
      }
      unint64_t v7 = *(void *)(v2 + 16);
      unint64_t v6 = *(void *)(v2 + 24);
      if (v7 >= v6 >> 1) {
        unint64_t v2 = (unint64_t)sub_1002A7108((void *)(v6 > 1), v7 + 1, 1, (void *)v2);
      }
      *(void *)(v2 + 16) = v7 + 1;
      *(unsigned char *)(v2 + v7 + 32) = 3;
      uint64_t v1 = v0[16];
    }
LABEL_13:
    if (*(unsigned char *)(v1 + 35))
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v2 = (unint64_t)sub_1002A7108(0, *(void *)(v2 + 16) + 1, 1, (void *)v2);
      }
      unint64_t v9 = *(void *)(v2 + 16);
      unint64_t v8 = *(void *)(v2 + 24);
      if (v9 >= v8 >> 1) {
        unint64_t v2 = (unint64_t)sub_1002A7108((void *)(v8 > 1), v9 + 1, 1, (void *)v2);
      }
      *(void *)(v2 + 16) = v9 + 1;
      *(unsigned char *)(v2 + v9 + 32) = 4;
      uint64_t v1 = v0[16];
      if (*(unsigned char *)(v1 + 36)) {
        goto LABEL_30;
      }
LABEL_15:
      if ((*(unsigned char *)(v1 + 37) & 1) == 0) {
        goto LABEL_16;
      }
LABEL_35:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v2 = (unint64_t)sub_1002A7108(0, *(void *)(v2 + 16) + 1, 1, (void *)v2);
      }
      unint64_t v13 = *(void *)(v2 + 16);
      unint64_t v12 = *(void *)(v2 + 24);
      if (v13 >= v12 >> 1) {
        unint64_t v2 = (unint64_t)sub_1002A7108((void *)(v12 > 1), v13 + 1, 1, (void *)v2);
      }
      *(void *)(v2 + 16) = v13 + 1;
      *(unsigned char *)(v2 + v13 + 32) = 7;
      uint64_t v1 = v0[16];
      if (*(unsigned char *)(v1 + 38)) {
        goto LABEL_40;
      }
LABEL_17:
      if ((*(unsigned char *)(v1 + 39) & 1) == 0) {
        goto LABEL_18;
      }
LABEL_45:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v2 = (unint64_t)sub_1002A7108(0, *(void *)(v2 + 16) + 1, 1, (void *)v2);
      }
      unint64_t v17 = *(void *)(v2 + 16);
      unint64_t v16 = *(void *)(v2 + 24);
      if (v17 >= v16 >> 1) {
        unint64_t v2 = (unint64_t)sub_1002A7108((void *)(v16 > 1), v17 + 1, 1, (void *)v2);
      }
      *(void *)(v2 + 16) = v17 + 1;
      *(unsigned char *)(v2 + v17 + 32) = 6;
      uint64_t v1 = v0[16];
      if (*(unsigned char *)(v1 + 40)) {
        goto LABEL_50;
      }
LABEL_19:
      if ((*(unsigned char *)(v1 + 43) & 1) == 0) {
        goto LABEL_20;
      }
LABEL_55:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v2 = (unint64_t)sub_1002A7108(0, *(void *)(v2 + 16) + 1, 1, (void *)v2);
      }
      unint64_t v21 = *(void *)(v2 + 16);
      unint64_t v20 = *(void *)(v2 + 24);
      if (v21 >= v20 >> 1) {
        unint64_t v2 = (unint64_t)sub_1002A7108((void *)(v20 > 1), v21 + 1, 1, (void *)v2);
      }
      *(void *)(v2 + 16) = v21 + 1;
      *(unsigned char *)(v2 + v21 + 32) = 10;
      uint64_t v1 = v0[16];
      if (*(unsigned char *)(v1 + 44)) {
        goto LABEL_60;
      }
LABEL_21:
      if ((*(unsigned char *)(v1 + 45) & 1) == 0) {
        goto LABEL_22;
      }
LABEL_65:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v2 = (unint64_t)sub_1002A7108(0, *(void *)(v2 + 16) + 1, 1, (void *)v2);
      }
      unint64_t v25 = *(void *)(v2 + 16);
      unint64_t v24 = *(void *)(v2 + 24);
      if (v25 >= v24 >> 1) {
        unint64_t v2 = (unint64_t)sub_1002A7108((void *)(v24 > 1), v25 + 1, 1, (void *)v2);
      }
      *(void *)(v2 + 16) = v25 + 1;
      *(unsigned char *)(v2 + v25 + 32) = 13;
      uint64_t v1 = v0[16];
      if ((*(unsigned char *)(v1 + 46) & 1) == 0) {
        goto LABEL_23;
      }
LABEL_70:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v2 = (unint64_t)sub_1002A7108(0, *(void *)(v2 + 16) + 1, 1, (void *)v2);
      }
      unint64_t v27 = *(void *)(v2 + 16);
      unint64_t v26 = *(void *)(v2 + 24);
      if (v27 >= v26 >> 1) {
        unint64_t v2 = (unint64_t)sub_1002A7108((void *)(v26 > 1), v27 + 1, 1, (void *)v2);
      }
      *(void *)(v2 + 16) = v27 + 1;
      *(unsigned char *)(v2 + v27 + 32) = 12;
      uint64_t v1 = v0[16];
      if (*(unsigned char *)(v1 + 47))
      {
LABEL_75:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v2 = (unint64_t)sub_1002A7108(0, *(void *)(v2 + 16) + 1, 1, (void *)v2);
        }
        unint64_t v29 = *(void *)(v2 + 16);
        unint64_t v28 = *(void *)(v2 + 24);
        if (v29 >= v28 >> 1) {
          unint64_t v2 = (unint64_t)sub_1002A7108((void *)(v28 > 1), v29 + 1, 1, (void *)v2);
        }
        *(void *)(v2 + 16) = v29 + 1;
        *(unsigned char *)(v2 + v29 + 32) = 16;
        uint64_t v1 = v0[16];
      }
    }
    else
    {
      if ((*(unsigned char *)(v1 + 36) & 1) == 0) {
        goto LABEL_15;
      }
LABEL_30:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v2 = (unint64_t)sub_1002A7108(0, *(void *)(v2 + 16) + 1, 1, (void *)v2);
      }
      unint64_t v11 = *(void *)(v2 + 16);
      unint64_t v10 = *(void *)(v2 + 24);
      if (v11 >= v10 >> 1) {
        unint64_t v2 = (unint64_t)sub_1002A7108((void *)(v10 > 1), v11 + 1, 1, (void *)v2);
      }
      *(void *)(v2 + 16) = v11 + 1;
      *(unsigned char *)(v2 + v11 + 32) = 5;
      uint64_t v1 = v0[16];
      if (*(unsigned char *)(v1 + 37)) {
        goto LABEL_35;
      }
LABEL_16:
      if ((*(unsigned char *)(v1 + 38) & 1) == 0) {
        goto LABEL_17;
      }
LABEL_40:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v2 = (unint64_t)sub_1002A7108(0, *(void *)(v2 + 16) + 1, 1, (void *)v2);
      }
      unint64_t v15 = *(void *)(v2 + 16);
      unint64_t v14 = *(void *)(v2 + 24);
      if (v15 >= v14 >> 1) {
        unint64_t v2 = (unint64_t)sub_1002A7108((void *)(v14 > 1), v15 + 1, 1, (void *)v2);
      }
      *(void *)(v2 + 16) = v15 + 1;
      *(unsigned char *)(v2 + v15 + 32) = 8;
      uint64_t v1 = v0[16];
      if (*(unsigned char *)(v1 + 39)) {
        goto LABEL_45;
      }
LABEL_18:
      if ((*(unsigned char *)(v1 + 40) & 1) == 0) {
        goto LABEL_19;
      }
LABEL_50:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v2 = (unint64_t)sub_1002A7108(0, *(void *)(v2 + 16) + 1, 1, (void *)v2);
      }
      unint64_t v19 = *(void *)(v2 + 16);
      unint64_t v18 = *(void *)(v2 + 24);
      if (v19 >= v18 >> 1) {
        unint64_t v2 = (unint64_t)sub_1002A7108((void *)(v18 > 1), v19 + 1, 1, (void *)v2);
      }
      *(void *)(v2 + 16) = v19 + 1;
      *(unsigned char *)(v2 + v19 + 32) = 2;
      uint64_t v1 = v0[16];
      if (*(unsigned char *)(v1 + 43)) {
        goto LABEL_55;
      }
LABEL_20:
      if ((*(unsigned char *)(v1 + 44) & 1) == 0) {
        goto LABEL_21;
      }
LABEL_60:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v2 = (unint64_t)sub_1002A7108(0, *(void *)(v2 + 16) + 1, 1, (void *)v2);
      }
      unint64_t v23 = *(void *)(v2 + 16);
      unint64_t v22 = *(void *)(v2 + 24);
      if (v23 >= v22 >> 1) {
        unint64_t v2 = (unint64_t)sub_1002A7108((void *)(v22 > 1), v23 + 1, 1, (void *)v2);
      }
      *(void *)(v2 + 16) = v23 + 1;
      *(unsigned char *)(v2 + v23 + 32) = 11;
      uint64_t v1 = v0[16];
      if (*(unsigned char *)(v1 + 45)) {
        goto LABEL_65;
      }
LABEL_22:
      if (*(unsigned char *)(v1 + 46)) {
        goto LABEL_70;
      }
LABEL_23:
      if (*(unsigned char *)(v1 + 47)) {
        goto LABEL_75;
      }
    }
  }
  uint64_t v37 = (int64_t *)v0[16];
  int64_t v5 = *v37;
  v0[30] = *v37;
  uint64_t v3 = v37[1];
  v0[31] = v3;
  v0[32] = 1;
  unint64_t v2 = v3 - v5;
  if (v3 == v5) {
    goto LABEL_88;
  }
  if (v3 < v5) {
    goto LABEL_92;
  }
  v0[11] = 0;
  swift_stdlib_random();
  unint64_t v38 = v0[11];
  uint64_t v39 = (v38 * (unsigned __int128)v2) >> 64;
  unint64_t v40 = v38 * v2;
  uint64_t v41 = v0[30];
  if (v2 > v40)
  {
    unint64_t v42 = (v41 - v0[31]) % (unint64_t)(v0[31] - v41);
    if (v42 > v40)
    {
      do
      {
        unint64_t v43 = v0[31] - v0[30];
        v0[15] = 0;
        swift_stdlib_random();
        unint64_t v44 = v0[15];
      }
      while (v42 > v44 * v43);
      uint64_t v39 = (v44 * (unsigned __int128)v43) >> 64;
      uint64_t v41 = v0[30];
    }
  }
  int64_t v5 = v41 + v39;
  uint64_t v37 = (int64_t *)v0[16];
LABEL_88:
  v0[7] = 0x207972746E45;
  v0[8] = 0xE600000000000000;
  v0[14] = 1;
  v45._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v45);
  swift_bridgeObjectRelease();
  v46._countAndFlagsBits = 23328;
  v46._object = (void *)0xE200000000000000;
  String.append(_:)(v46);
  v47._countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v47);
  swift_bridgeObjectRelease();
  v48._countAndFlagsBits = 93;
  v48._object = (void *)0xE100000000000000;
  String.append(_:)(v48);
  uint64_t v49 = v0[7];
  uint64_t v50 = v0[8];
  v0[33] = v50;
  uint64_t v51 = v37[3];
  swift_bridgeObjectRetain();
  uint64_t v52 = (void *)swift_task_alloc();
  v0[34] = v52;
  *uint64_t v52 = v0;
  v52[1] = sub_1003BCFB4;
  uint64_t v53 = v0[24];
  return sub_1003BD5E0(v49, v50, v53, v5, v51);
}

uint64_t sub_1003BCFB4(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 280) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 184);
  uint64_t v4 = *(void *)(v2 + 176);
  return _swift_task_switch(sub_1003BD150, v4, v3);
}

uint64_t sub_1003BD150()
{
  uint64_t v1 = *(void **)(v0[35] + 24);
  v0[12] = 0;
  unsigned __int8 v2 = [v1 save:v0 + 12];
  uint64_t v3 = (void *)v0[12];
  if (v2)
  {
    id v4 = v3;
    swift_release();
  }
  else
  {
    id v5 = v3;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    sub_100010218((uint64_t *)&unk_1007FC0F0);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1006D6280;
    v0[9] = 0;
    v0[10] = 0xE000000000000000;
    _StringGuts.grow(_:)(27);
    swift_bridgeObjectRelease();
    v0[5] = 0xD000000000000019;
    v0[6] = 0x800000010069B410;
    swift_getErrorValue();
    v7._countAndFlagsBits = Error.localizedDescription.getter();
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
    uint64_t v8 = v0[5];
    uint64_t v9 = v0[6];
    *(void *)(v6 + 56) = &type metadata for String;
    *(void *)(v6 + 32) = v8;
    *(void *)(v6 + 40) = v9;
    print(_:separator:terminator:)();
    swift_release();
    swift_bridgeObjectRelease();
    swift_errorRelease();
  }
  uint64_t v10 = v0[32];
  if (v10 == v0[29])
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    sub_100010218((uint64_t *)&unk_1007FC0F0);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1006D6280;
    *(void *)(v11 + 56) = &type metadata for String;
    *(void *)(v11 + 32) = 0xD000000000000014;
    *(void *)(v11 + 40) = 0x800000010069B430;
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    unint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  uint64_t v14 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_20;
  }
  v0[32] = v14;
  uint64_t v15 = v0[30];
  uint64_t v16 = v0[31];
  unint64_t v17 = v16 - v15;
  if (v16 != v15)
  {
    if (v16 >= v15)
    {
      v0[11] = 0;
      swift_stdlib_random();
      unint64_t v18 = v0[11];
      uint64_t v19 = (v18 * (unsigned __int128)v17) >> 64;
      unint64_t v20 = v18 * v17;
      uint64_t v21 = v0[30];
      if (v17 > v20)
      {
        unint64_t v22 = (v21 - v0[31]) % (unint64_t)(v0[31] - v21);
        if (v22 > v20)
        {
          do
          {
            unint64_t v23 = v0[31] - v0[30];
            v0[15] = 0;
            swift_stdlib_random();
            unint64_t v24 = v0[15];
          }
          while (v22 > v24 * v23);
          uint64_t v19 = (v24 * (unsigned __int128)v23) >> 64;
          uint64_t v21 = v0[30];
        }
      }
      uint64_t v16 = v21 + v19;
      goto LABEL_16;
    }
LABEL_20:
    __break(1u);
  }
LABEL_16:
  v0[7] = 0x207972746E45;
  uint64_t v25 = v0[16];
  v0[8] = 0xE600000000000000;
  v0[14] = v14;
  v26._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 23328;
  v27._object = (void *)0xE200000000000000;
  String.append(_:)(v27);
  v28._countAndFlagsBits = static String._fromSubstring(_:)();
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  v29._countAndFlagsBits = 93;
  v29._object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  uint64_t v30 = v0[7];
  uint64_t v31 = v0[8];
  v0[33] = v31;
  uint64_t v32 = *(void *)(v25 + 24);
  swift_bridgeObjectRetain();
  uint64_t v33 = (void *)swift_task_alloc();
  v0[34] = v33;
  *uint64_t v33 = v0;
  v33[1] = sub_1003BCFB4;
  uint64_t v34 = v0[24];
  return sub_1003BD5E0(v30, v31, v34, v16, v32);
}

void sub_1003BD5CC()
{
  qword_10083D4B8 = (uint64_t)&off_1007920C0;
}

uint64_t sub_1003BD5E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v6[77] = v5;
  v6[76] = a5;
  v6[75] = a4;
  v6[74] = a3;
  v6[73] = a2;
  v6[72] = a1;
  v6[78] = *v5;
  sub_100010218(&qword_100800950);
  v6[79] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Date();
  v6[80] = v7;
  v6[81] = *(void *)(v7 - 8);
  v6[82] = swift_task_alloc();
  v6[83] = swift_task_alloc();
  v6[84] = swift_task_alloc();
  sub_100010218(&qword_10080B998);
  v6[85] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for RandomVideoAssetGenerator.VideoAsset();
  v6[86] = v8;
  v6[87] = *(void *)(v8 - 8);
  v6[88] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for URL.DirectoryHint();
  v6[89] = v9;
  v6[90] = *(void *)(v9 - 8);
  v6[91] = swift_task_alloc();
  v6[92] = sub_100010218(&qword_1007F9DA8);
  v6[93] = swift_task_alloc();
  _s15GenericMapAssetC14GenericMapDataVMa(0);
  v6[94] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for UUID();
  v6[95] = v10;
  v6[96] = *(void *)(v10 - 8);
  v6[97] = swift_task_alloc();
  v6[98] = swift_task_alloc();
  uint64_t v11 = _s10VisitAssetC9VisitDataVMa(0);
  v6[99] = v11;
  v6[100] = *(void *)(v11 - 8);
  v6[101] = swift_task_alloc();
  v6[102] = swift_task_alloc();
  v6[103] = swift_task_alloc();
  v6[104] = swift_task_alloc();
  uint64_t v12 = type metadata accessor for URL();
  v6[105] = v12;
  v6[106] = *(void *)(v12 - 8);
  v6[107] = swift_task_alloc();
  v6[108] = swift_task_alloc();
  v6[109] = swift_task_alloc();
  v6[110] = swift_task_alloc();
  v6[111] = swift_task_alloc();
  v6[112] = swift_task_alloc();
  v6[113] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_1007FC470);
  v6[114] = swift_task_alloc();
  v6[115] = swift_task_alloc();
  v6[116] = swift_task_alloc();
  v6[117] = swift_task_alloc();
  v6[118] = swift_task_alloc();
  v6[119] = swift_task_alloc();
  v6[120] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100800A60);
  v6[121] = swift_task_alloc();
  v6[122] = swift_task_alloc();
  v6[123] = swift_task_alloc();
  v6[124] = swift_task_alloc();
  v6[125] = swift_task_alloc();
  v6[126] = swift_task_alloc();
  v6[127] = swift_task_alloc();
  v6[128] = swift_task_alloc();
  v6[129] = swift_task_alloc();
  uint64_t v13 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v6[130] = v13;
  v6[131] = *(void *)(v13 - 8);
  v6[132] = swift_task_alloc();
  uint64_t v14 = *(void *)(type metadata accessor for Journaling.EntrySource() - 8);
  v6[133] = v14;
  v6[134] = *(void *)(v14 + 64);
  v6[135] = swift_task_alloc();
  v6[136] = swift_task_alloc();
  return _swift_task_switch(sub_1003BDC10, 0, 0);
}

uint64_t sub_1003BDC10()
{
  uint64_t v1 = *(void *)(v0 + 1088);
  uint64_t v2 = *(void *)(v0 + 1080);
  uint64_t v3 = *(void *)(v0 + 1064);
  uint64_t v4 = *(void *)(v0 + 1056);
  uint64_t v5 = *(void *)(v0 + 1048);
  uint64_t v6 = *(void *)(v0 + 616);
  uint64_t v7 = sub_100010218(&qword_100805B00);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v1, 1, 2, v7);
  *(void *)(v0 + 1096) = *(void *)(v6 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_context);
  sub_1003CC8F4(v1, v2, (uint64_t (*)(void))type metadata accessor for Journaling.EntrySource);
  unint64_t v8 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 1104) = v9;
  sub_1003CC95C(v2, v9 + v8, (uint64_t (*)(void))type metadata accessor for Journaling.EntrySource);
  *(_DWORD *)(v0 + 92) = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
  uint64_t v10 = *(void (**)(uint64_t))(v5 + 104);
  *(void *)(v0 + 1112) = v10;
  *(void *)(v0 + 1120) = (v5 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v10(v4);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 1128) = v11;
  uint64_t v12 = type metadata accessor for Journaling.EntryViewModel();
  *(void *)(v0 + 1136) = v12;
  *uint64_t v11 = v0;
  v11[1] = sub_1003BDE38;
  uint64_t v13 = *(void *)(v0 + 1056);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 544, v13, sub_10005F690, v9, v12);
}

uint64_t sub_1003BDE38()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 1056);
  uint64_t v3 = *(void *)(*v0 + 1048);
  uint64_t v4 = *(void *)(*v0 + 1040);
  swift_task_dealloc();
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 1144) = v5;
  *(void *)(v1 + 1152) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v4);
  return _swift_task_switch(sub_1003BDFF0, 0, 0);
}

uint64_t sub_1003BDFF0()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1112);
  uint64_t v2 = *(unsigned int *)(v0 + 92);
  uint64_t v3 = *(void *)(v0 + 1088);
  uint64_t v4 = *(void *)(v0 + 1056);
  uint64_t v5 = *(void *)(v0 + 1040);
  uint64_t v6 = *(void *)(v0 + 624);
  uint64_t v7 = *(void *)(v0 + 608);
  uint64_t v8 = *(void *)(v0 + 544);
  *(void *)(v0 + 1160) = v8;
  sub_1003CCA2C(v3, (uint64_t (*)(void))type metadata accessor for Journaling.EntrySource);
  uint64_t v9 = (void *)swift_allocObject();
  *(void *)(v0 + 1168) = v9;
  v9[2] = v7;
  v9[3] = v8;
  v9[4] = v6;
  v1(v4, v2, v5);
  swift_retain();
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 1176) = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_1003BE178;
  uint64_t v11 = *(void *)(v0 + 1136);
  uint64_t v12 = *(void *)(v0 + 1056);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 520, v12, sub_1003CC888, v9, v11);
}

uint64_t sub_1003BE178()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 1144);
  uint64_t v3 = *(void *)(*(void *)v1 + 1056);
  uint64_t v4 = *(void *)(*(void *)v1 + 1040);
  *(void *)(*(void *)v1 + 1184) = v0;
  swift_task_dealloc();
  swift_release();
  v2(v3, v4);
  return _swift_task_switch(sub_1003BE334, 0, 0);
}

uint64_t sub_1003BE334()
{
  v0[149] = v0[65];
  uint64_t v1 = (void *)swift_task_alloc();
  v0[150] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003BE3F4;
  return sub_1005820C0();
}

uint64_t sub_1003BE3F4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1003BE51C, 0, 0);
}

uint64_t sub_1003BE51C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 592) + 16);
  *(void *)(v0 + 1208) = v1;
  if (!v1)
  {
LABEL_90:
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    v156 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v157 = *(void *)(v0 + 1192);
    return v156(v157);
  }
  uint64_t v2 = *(void *)(v0 + 600);
  *(void *)(v0 + 1216) = sub_100010218((uint64_t *)&unk_1007FC0F0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1006D6280;
  *(void *)(v3 + 56) = &type metadata for String;
  *(void *)(v3 + 32) = 0xD000000000000011;
  *(void *)(v3 + 40) = 0x800000010069B450;
  print(_:separator:terminator:)();
  swift_bridgeObjectRelease();
  type metadata accessor for RandomAssetGenerator();
  *(void *)(v0 + 1224) = swift_initStackObject();
  unint64_t v4 = (unint64_t)sub_100513720();
  *(void *)(v0 + 1232) = v4;
  *(void *)(v0 + 1240) = [objc_allocWithZone((Class)type metadata accessor for RandomVideoAssetGenerator()) init];
  id v5 = [objc_allocWithZone((Class)type metadata accessor for RandomAudioRecordingsGenerator()) init];
  *(void *)(v0 + 1248) = v5;
  if (v2 < 0)
  {
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
    goto LABEL_139;
  }
  if (!*(void *)(v0 + 600))
  {
    unint64_t v154 = v5;
LABEL_89:
    id v155 = *(void **)(v0 + 1240);
    swift_release();

    goto LABEL_90;
  }
  uint64_t v6 = (char *)(v0 + 232);
  unint64_t v307 = (unint64_t *)(v0 + 416);
  uint64_t v303 = (void *)(v0 + 424);
  v326 = (void *)(v0 + 432);
  uint64_t v7 = (void *)(v0 + 480);
  v306 = (void *)(v0 + 504);
  long long v309 = (void *)(v0 + 512);
  uint64_t v310 = (void *)(v0 + 488);
  long long v308 = (void *)(v0 + 536);
  v304 = (void *)(v0 + 552);
  v305 = (void *)(v0 + 528);
  uint64_t v8 = v4 + 32;
  swift_beginAccess();
  swift_beginAccess();
  swift_beginAccess();
  uint64_t v9 = 0;
  *(_DWORD *)(v0 + 132) = enum case for URL.DirectoryHint.inferFromPath(_:);
  uint64_t v10 = *(char **)(v0 + 1184);
  uint64_t v11 = *(void *)(v0 + 600);
  while (1)
  {
    *(void *)(v0 + 1264) = v9;
    *(void *)(v0 + 1256) = v10;
    if (v9 == v11) {
      goto LABEL_129;
    }
    unint64_t v4 = *(void *)(v0 + 1208);
    *(void *)(v0 + 496) = 0;
    uint64_t v12 = swift_stdlib_random();
    unint64_t v13 = *(void *)(v0 + 496);
    uint64_t v14 = (v13 * (unsigned __int128)v4) >> 64;
    unint64_t v15 = v13 * v4;
    unint64_t v16 = *(void *)(v0 + 1208);
    if (v4 > v15)
    {
      unint64_t v4 = -(uint64_t)v16 % v16;
      if (v4 > v15)
      {
        do
        {
          unint64_t v17 = *(void *)(v0 + 1208);
          *(void *)(v0 + 568) = 0;
          uint64_t v12 = swift_stdlib_random();
          unint64_t v18 = *(void *)(v0 + 568);
        }
        while (v4 > v18 * v17);
        uint64_t v14 = (v18 * (unsigned __int128)v17) >> 64;
        unint64_t v16 = *(void *)(v0 + 1208);
      }
    }
    if (v14 >= (uint64_t)v16)
    {
LABEL_130:
      __break(1u);
LABEL_131:
      uint64_t v285 = *(void *)(v0 + 1016);
      uint64_t v286 = *(void *)(v0 + 952);
      uint64_t v328 = *(void *)(v0 + 904);
      uint64_t v287 = *(void *)(v0 + 848);
      uint64_t v288 = *(void *)(v0 + 840);
      uint64_t v320 = v288;
      uint64_t v289 = *(void *)(v0 + 648);
      uint64_t v317 = *(void *)(v0 + 640);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v287 + 56))(v285, 1, 1, v288);
      id v290 = v6;
      Date.init()();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v289 + 56))(v286, 0, 1, v317);
      unint64_t v203 = sub_1000B1130(9, v331, v322, v285, v6, 0x7472412074736554, 0xEB00000000747369, 0x6E6F532074736554, 0xE900000000000067, 0x626C412074736554, 0xEA00000000006D75, 1, 0, v286, 0);

      sub_100040DD0(v8, v4);
      (*(void (**)(uint64_t, uint64_t))(v287 + 8))(v328, v320);
      goto LABEL_119;
    }
    switch(*(unsigned char *)(*(void *)(v0 + 592) + v14 + 32))
    {
      case 1:
      case 7:
      case 0xE:
      case 0x11:
      case 0x12:
      case 0x13:
      case 0x14:
        goto LABEL_6;
      case 2:
        uint64_t v167 = swift_allocObject();
        *(_OWORD *)(v167 + 16) = xmmword_1006D6280;
        *(void *)(v167 + 56) = &type metadata for String;
        *(void *)(v167 + 32) = 0xD000000000000013;
        *(void *)(v167 + 40) = 0x800000010069B4F0;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        unint64_t v168 = (void *)swift_task_alloc();
        *(void *)(v0 + 1336) = v168;
        *unint64_t v168 = v0;
        v168[1] = sub_1003C4C20;
        uint64_t v169 = *(void *)(v0 + 680);
        return sub_100497ECC(v169);
      case 3:
        v314 = v6;
        uint64_t v19 = *(void *)(v0 + 1232);
        uint64_t v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = xmmword_1006D6280;
        *(void *)(v20 + 56) = &type metadata for String;
        *(void *)(v20 + 32) = 0xD000000000000012;
        *(void *)(v20 + 40) = 0x800000010069B770;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        unint64_t v21 = *(void *)(*(void *)(v19 + 16) + 16);
        if (v21)
        {
          *long long v308 = 0;
          swift_stdlib_random();
          unint64_t v22 = *v308 * v21;
          int64_t v23 = ((unint64_t)*v308 * (unsigned __int128)v21) >> 64;
          if (v21 > v22)
          {
            unint64_t v24 = -(uint64_t)v21 % v21;
            if (v24 > v22)
            {
              do
              {
                void *v304 = 0;
                swift_stdlib_random();
              }
              while (v24 > *v304 * v21);
              int64_t v23 = ((unint64_t)*v304 * (unsigned __int128)v21) >> 64;
            }
          }
          uint64_t v25 = *(void *)(*(void *)(v0 + 1232) + 16);
          if (v23 >= *(void *)(v25 + 16)) {
            goto LABEL_136;
          }
          Swift::String v26 = (void *)(v25 + 32 * v23);
          unint64_t v27 = v26[5];
          uint64_t v331 = v26[4];
          uint64_t v8 = v26[6];
          swift_beginAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10035FD28(v23);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v8 = 0xD000000000000089;
          uint64_t v331 = 0x3334363139343137;
          unint64_t v27 = 0xE900000000000034;
        }
        uint64_t v91 = *(void *)(v0 + 1024);
        uint64_t v92 = *(void *)(v0 + 848);
        uint64_t v93 = *(void *)(v0 + 840);
        URL.init(string:)();
        int v94 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v92 + 48))(v91, 1, v93);
        unint64_t v4 = *(void *)(v0 + 1024);
        if (v94 == 1) {
          goto LABEL_5;
        }
        unint64_t v322 = v27;
        (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 848) + 32))(*(void *)(v0 + 904), v4, *(void *)(v0 + 840));
        uint64_t v6 = v10;
        uint64_t v95 = Data.init(contentsOf:options:)();
        if (v10)
        {
          unint64_t v4 = *(void *)(v0 + 904);
          goto LABEL_59;
        }
        uint64_t v8 = v95;
        unint64_t v4 = v96;
        id v145 = objc_allocWithZone((Class)UIImage);
        sub_100040D64(v8, v4);
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        uint64_t v6 = (char *)[v145 initWithData:isa];
        sub_100040DD0(v8, v4);

        if (v6) {
          goto LABEL_131;
        }
        uint64_t v147 = *(void *)(v0 + 904);
        goto LABEL_86;
      case 4:
        v314 = v6;
        uint64_t v28 = *(void *)(v0 + 1232);
        uint64_t v29 = swift_allocObject();
        *(_OWORD *)(v29 + 16) = xmmword_1006D6280;
        *(void *)(v29 + 56) = &type metadata for String;
        *(void *)(v29 + 32) = 0xD000000000000015;
        *(void *)(v29 + 40) = 0x800000010069B6B0;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        unint64_t v30 = *(void *)(*(void *)(v28 + 24) + 16);
        if (v30)
        {
          *long long v309 = 0;
          swift_stdlib_random();
          unint64_t v31 = *v309 * v30;
          int64_t v32 = ((unint64_t)*v309 * (unsigned __int128)v30) >> 64;
          if (v30 > v31)
          {
            unint64_t v33 = -(uint64_t)v30 % v30;
            if (v33 > v31)
            {
              do
              {
                void *v305 = 0;
                swift_stdlib_random();
              }
              while (v33 > *v305 * v30);
              int64_t v32 = ((unint64_t)*v305 * (unsigned __int128)v30) >> 64;
            }
          }
          uint64_t v34 = *(void *)(*(void *)(v0 + 1232) + 24);
          if (v32 >= *(void *)(v34 + 16)) {
            goto LABEL_137;
          }
          uint64_t v35 = (void *)(v34 + 32 * v32);
          unint64_t v36 = v35[5];
          uint64_t v331 = v35[4];
          uint64_t v8 = v35[6];
          swift_beginAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10035FD28(v32);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v8 = 0xD000000000000091;
          unint64_t v36 = 0xEA00000000003130;
          uint64_t v331 = 0x3237353736393331;
        }
        uint64_t v97 = *(void *)(v0 + 1008);
        uint64_t v98 = *(void *)(v0 + 848);
        uint64_t v99 = *(void *)(v0 + 840);
        URL.init(string:)();
        int v100 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v97, 1, v99);
        unint64_t v4 = *(void *)(v0 + 1008);
        if (v100 == 1) {
          goto LABEL_5;
        }
        unint64_t v322 = v36;
        (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 848) + 32))(*(void *)(v0 + 896), v4, *(void *)(v0 + 840));
        uint64_t v6 = v10;
        uint64_t v101 = Data.init(contentsOf:options:)();
        if (!v10)
        {
          uint64_t v8 = v101;
          unint64_t v4 = v102;
          id v148 = objc_allocWithZone((Class)UIImage);
          sub_100040D64(v8, v4);
          Class v149 = Data._bridgeToObjectiveC()().super.isa;
          id v150 = [v148 initWithData:v149];
          sub_100040DD0(v8, v4);

          if (!v150)
          {
            uint64_t v147 = *(void *)(v0 + 896);
LABEL_86:
            (*(void (**)(uint64_t, void))(*(void *)(v0 + 848) + 8))(v147, *(void *)(v0 + 840));
            sub_100040DD0(v8, v4);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v10 = 0;
            uint64_t v6 = 0;
            goto LABEL_6;
          }
          uint64_t v318 = *(void *)(v0 + 1016);
          uint64_t v291 = *(void *)(v0 + 952);
          uint64_t v292 = *(void *)(v0 + 896);
          uint64_t v329 = v292;
          uint64_t v293 = *(void *)(v0 + 848);
          uint64_t v294 = *(void *)(v0 + 840);
          uint64_t v295 = *(void *)(v0 + 648);
          uint64_t v321 = *(void *)(v0 + 640);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v293 + 16))(v318, v292, v294);
          uint64_t v296 = v294;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v293 + 56))(v318, 0, 1, v294);
          Date.init()();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v295 + 56))(v291, 0, 1, v321);
          unint64_t v203 = sub_1003935AC(9, v331, v322, v150, 0x7469742074736554, 0xEA0000000000656CLL, v318, 0x7475412074736554, 0xEB00000000726F68, v291, 0, 0, 2u);
          sub_100040DD0(v8, v4);
          (*(void (**)(uint64_t, uint64_t))(v293 + 8))(v329, v296);
          goto LABEL_119;
        }
        unint64_t v4 = *(void *)(v0 + 896);
        goto LABEL_59;
      case 5:
        v314 = v6;
        uint64_t v37 = *(void *)(v0 + 1232);
        uint64_t v38 = swift_allocObject();
        *(_OWORD *)(v38 + 16) = xmmword_1006D6280;
        *(void *)(v38 + 56) = &type metadata for String;
        *(void *)(v38 + 32) = 0xD000000000000012;
        *(void *)(v38 + 40) = 0x800000010069B600;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        unint64_t v39 = *(void *)(*(void *)(v37 + 32) + 16);
        if (v39)
        {
          *uint64_t v310 = 0;
          swift_stdlib_random();
          unint64_t v40 = *v310 * v39;
          int64_t v41 = ((unint64_t)*v310 * (unsigned __int128)v39) >> 64;
          if (v39 > v40)
          {
            unint64_t v42 = -(uint64_t)v39 % v39;
            if (v42 > v40)
            {
              do
              {
                void *v306 = 0;
                swift_stdlib_random();
              }
              while (v42 > *v306 * v39);
              int64_t v41 = ((unint64_t)*v306 * (unsigned __int128)v39) >> 64;
            }
          }
          uint64_t v43 = *(void *)(*(void *)(v0 + 1232) + 32);
          if (v41 >= *(void *)(v43 + 16)) {
            goto LABEL_138;
          }
          unint64_t v44 = (void *)(v43 + 32 * v41);
          unint64_t v45 = v44[5];
          uint64_t v331 = v44[4];
          uint64_t v8 = v44[6];
          swift_beginAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10035FD28(v41);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v8 = 0xD000000000000082;
          uint64_t v331 = 0x3134393933363531;
          unint64_t v45 = 0xEA00000000003030;
        }
        uint64_t v103 = *(void *)(v0 + 1000);
        uint64_t v104 = *(void *)(v0 + 848);
        uint64_t v105 = *(void *)(v0 + 840);
        URL.init(string:)();
        int v106 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v104 + 48))(v103, 1, v105);
        unint64_t v4 = *(void *)(v0 + 1000);
        if (v106 == 1)
        {
LABEL_5:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10001457C(v4, (uint64_t *)&unk_100800A60);
          uint64_t v6 = v314;
        }
        else
        {
          unint64_t v322 = v45;
          (*(void (**)(void, unint64_t, void))(*(void *)(v0 + 848) + 32))(*(void *)(v0 + 888), v4, *(void *)(v0 + 840));
          uint64_t v6 = v10;
          uint64_t v107 = Data.init(contentsOf:options:)();
          if (!v10)
          {
            uint64_t v8 = v107;
            unint64_t v4 = v108;
            id v151 = objc_allocWithZone((Class)UIImage);
            sub_100040D64(v8, v4);
            Class v152 = Data._bridgeToObjectiveC()().super.isa;
            id v153 = [v151 initWithData:v152];
            sub_100040DD0(v8, v4);

            if (!v153)
            {
              uint64_t v147 = *(void *)(v0 + 888);
              goto LABEL_86;
            }
            uint64_t v297 = *(void *)(v0 + 952);
            uint64_t v330 = *(void *)(v0 + 888);
            uint64_t v298 = *(void *)(v0 + 848);
            uint64_t v299 = *(void *)(v0 + 840);
            uint64_t v300 = *(void *)(v0 + 648);
            uint64_t v301 = *(void *)(v0 + 640);
            swift_bridgeObjectRelease();
            id v302 = v153;
            Date.init()();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v300 + 56))(v297, 0, 1, v301);
            unint64_t v203 = sub_100048FB8(9, v331, v322, 0x7469742074736554, 0xEA0000000000656CLL, v153, 0x7475412074736554, 0xEB00000000726F68, v297);

            sub_100040DD0(v8, v4);
            (*(void (**)(uint64_t, uint64_t))(v298 + 8))(v330, v299);
LABEL_119:
            *(void *)(v0 + 1400) = v203;
            *(void *)(v0 + 1392) = v203;
            uint64_t v263 = *(void *)(v0 + 1264);
            uint64_t v264 = *(void *)(v0 + 584);
            uint64_t v265 = *(void *)(v0 + 576);
            uint64_t v266 = v203;
            *(void *)(v0 + 296) = v265;
            *(void *)(v0 + 304) = v264;
            swift_bridgeObjectRetain();
            v267._countAndFlagsBits = 0x20746573734120;
            v267._object = (void *)0xE700000000000000;
            String.append(_:)(v267);
            *(void *)(v0 + 456) = v263;
            v268._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
            String.append(_:)(v268);
            swift_bridgeObjectRelease();
            id v269 = objc_allocWithZone((Class)NSAttributedString);
            NSString v270 = String._bridgeToObjectiveC()();
            id v271 = [v269 initWithString:v270];

            swift_bridgeObjectRelease();
            v272 = *(void **)&v266[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title];
            *(void *)&v266[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title] = v271;

            if (qword_1007F7CE0 == -1)
            {
LABEL_120:
              uint64_t v273 = qword_10083EA18;
              *(void *)(v0 + 1408) = qword_10083EA18;
              return _swift_task_switch(sub_1003C8B64, v273, 0);
            }
LABEL_139:
            swift_once();
            goto LABEL_120;
          }
          unint64_t v4 = *(void *)(v0 + 888);
LABEL_59:
          uint64_t v109 = *(void *)(v0 + 848);
          uint64_t v8 = *(void *)(v0 + 840);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          (*(void (**)(unint64_t, uint64_t))(v109 + 8))(v4, v8);
          uint64_t v10 = 0;
        }
LABEL_6:
        uint64_t v11 = *(void *)(v0 + 600);
        uint64_t v9 = *(void *)(v0 + 1264) + 1;
        if (v9 == v11)
        {
          unint64_t v154 = *(void **)(v0 + 1248);
          goto LABEL_89;
        }
        break;
      case 6:
        uint64_t v46 = *(void *)(v0 + 784);
        uint64_t v47 = *(void *)(v0 + 768);
        uint64_t v48 = *(void *)(v0 + 760);
        uint64_t v49 = swift_allocObject();
        *(_OWORD *)(v49 + 16) = xmmword_1006D6280;
        *(void *)(v49 + 56) = &type metadata for String;
        *(void *)(v49 + 32) = 0xD000000000000012;
        *(void *)(v49 + 40) = 0x800000010069B510;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        UUID.init()();
        uint64_t v50 = UUID.uuidString.getter();
        uint64_t v52 = v51;
        (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
        if (qword_1007F6EF8 != -1) {
          swift_once();
        }
        if (qword_10083D468)
        {
          uint64_t v53 = *(unsigned int *)(v0 + 132);
          uint64_t v332 = v52;
          uint64_t v54 = *(void *)(v0 + 864);
          uint64_t v55 = *(void *)(v0 + 848);
          uint64_t v323 = *(void *)(v0 + 840);
          uint64_t v56 = *(void *)(v0 + 728);
          uint64_t v57 = v50;
          uint64_t v58 = *(void *)(v0 + 720);
          uint64_t v59 = *(void *)(v0 + 712);
          sub_1004FD498(qword_10083D460, (void *)qword_10083D468, v54);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 104))(v56, v53, v59);
          sub_100014344();
          URL.appending<A>(components:directoryHint:)();
          (*(void (**)(uint64_t, uint64_t))(v58 + 8))(v56, v59);
          uint64_t v50 = v57;
          uint64_t v60 = v54;
          uint64_t v52 = v332;
          (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v60, v323);
        }
        else
        {
          static URL.temporaryDirectory.getter();
        }
        uint64_t v110 = *(void *)(v0 + 872);
        uint64_t v111 = *(void *)(v0 + 848);
        uint64_t v112 = *(void *)(v0 + 840);
        *(void *)(v0 + 328) = v50;
        *(void *)(v0 + 336) = v52;
        v113._countAndFlagsBits = 1717658414;
        v113._object = (void *)0xE400000000000000;
        String.append(_:)(v113);
        uint64_t v8 = *(void *)(v0 + 336);
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        unint64_t v114 = *(void (**)(uint64_t, uint64_t))(v111 + 8);
        *(void *)(v0 + 1288) = v114;
        *(void *)(v0 + 1296) = (v111 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        uint64_t v312 = v114;
        v114(v110, v112);
        if (qword_1007F6F30 != -1) {
          swift_once();
        }
        unint64_t v4 = qword_10083D4B8;
        unint64_t v115 = *(void *)(qword_10083D4B8 + 16);
        unint64_t v322 = -(uint64_t)v115;
        uint64_t v331 = qword_10083D4B8 + 32;
        uint64_t v116 = 1;
        uint64_t v6 = (char *)_swiftEmptyArrayStorage;
        do
        {
          if (v115)
          {
            void *v326 = 0;
            swift_bridgeObjectRetain();
            swift_stdlib_random();
            uint64_t v117 = ((unint64_t)*v326 * (unsigned __int128)v115) >> 64;
            unint64_t v118 = *v326 * v115;
            if (v115 > v118 && v322 % v115 > v118)
            {
              do
              {
                *uint64_t v7 = 0;
                swift_stdlib_random();
              }
              while (v322 % v115 > *v7 * v115);
              uint64_t v117 = ((unint64_t)*v7 * (unsigned __int128)v115) >> 64;
            }
            if (v117 >= (uint64_t)v115)
            {
              __break(1u);
LABEL_129:
              __break(1u);
              goto LABEL_130;
            }
            unint64_t v119 = (uint64_t *)(v331 + 16 * v117);
            uint64_t v121 = *v119;
            unint64_t v120 = v119[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v121 = 0;
            unint64_t v120 = 0xE000000000000000;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v6 = sub_1002A54A0(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v123 = *((void *)v6 + 2);
          unint64_t v122 = *((void *)v6 + 3);
          uint64_t v8 = v123 + 1;
          if (v123 >= v122 >> 1) {
            uint64_t v6 = sub_1002A54A0((char *)(v122 > 1), v123 + 1, 1, v6);
          }
          ++v116;
          *((void *)v6 + 2) = v8;
          uint64_t v124 = &v6[16 * v123];
          *((void *)v124 + 4) = v121;
          *((void *)v124 + 5) = v120;
        }
        while (v116 != 5);
        *(void *)(v0 + 440) = v6;
        sub_100010218(&qword_100800A70);
        sub_1000245BC();
        BidirectionalCollection<>.joined(separator:)();
        uint64_t v126 = v125;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 1304) = v126;
        unint64_t v127 = self;
        id v128 = [v127 defaultManager];
        URL.absoluteString.getter();
        NSString v129 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        unsigned __int8 v130 = [v128 fileExistsAtPath:v129];

        if ((v130 & 1) == 0) {
          goto LABEL_124;
        }
        id v131 = [v127 defaultManager];
        URL._bridgeToObjectiveC()(v132);
        char v134 = v133;
        *(void *)(v0 + 448) = 0;
        unsigned int v135 = [v131 removeItemAtURL:v133 error:v0 + 448];

        v136 = *(void **)(v0 + 448);
        if (!v135)
        {
          uint64_t v8 = *(void *)(v0 + 880);
          uint64_t v137 = *(void *)(v0 + 840);
          id v138 = v136;
          swift_bridgeObjectRelease();
          uint64_t v139 = _convertNSErrorToError(_:)();

          uint64_t v6 = (char *)v139;
          swift_willThrow();
          uint64_t v140 = swift_allocObject();
          *(_OWORD *)(v140 + 16) = xmmword_1006D6280;
          *(void *)(v0 + 280) = 0;
          *(void *)(v0 + 288) = 0xE000000000000000;
          _StringGuts.grow(_:)(28);
          uint64_t v141 = *(void *)(v0 + 288);
          *(void *)(v0 + 312) = *(void *)(v0 + 280);
          *(void *)(v0 + 320) = v141;
          v142._countAndFlagsBits = 0x100000000000001ALL;
          v142._object = (void *)0x800000010069B580;
          unint64_t v4 = v0 + 312;
          String.append(_:)(v142);
          *(void *)(v0 + 472) = v139;
          sub_100010218((uint64_t *)&unk_1007FC0D0);
          _print_unlocked<A, B>(_:_:)();
          uint64_t v143 = *(void *)(v0 + 312);
          uint64_t v144 = *(void *)(v0 + 320);
          *(void *)(v140 + 56) = &type metadata for String;
          *(void *)(v140 + 32) = v143;
          *(void *)(v140 + 40) = v144;
          print(_:separator:terminator:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          v312(v8, v137);
          uint64_t v10 = 0;
          goto LABEL_6;
        }
        id v274 = v136;
LABEL_124:
        uint64_t v275 = *(void *)(v0 + 1248);
        uint64_t v276 = *(void *)(v0 + 880);
        id v277 = objc_allocWithZone((Class)AVSpeechUtterance);
        swift_bridgeObjectRetain();
        NSString v278 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v279 = [v277 initWithString:v278];
        *(void *)(v0 + 1312) = v279;

        LODWORD(v280) = 0.5;
        [v279 setRate:v280];
        LODWORD(v281) = 1.0;
        [v279 setVolume:v281];
        NSString v282 = String._bridgeToObjectiveC()();
        id v283 = [self voiceWithIdentifier:v282];

        [v279 setVoice:v283];
        v284 = (void *)swift_task_alloc();
        *(void *)(v0 + 1320) = v284;
        v284[2] = v275;
        v284[3] = v279;
        v284[4] = v276;
        uint64_t v164 = (void *)swift_task_alloc();
        *(void *)(v0 + 1328) = v164;
        *uint64_t v164 = v0;
        v164[1] = sub_1003C47D8;
        unint64_t v242 = 0xD00000000000001ALL;
        uint64_t v163 = (char *)&type metadata for () + 8;
        unint64_t v165 = 0x800000010069B560;
        v241 = sub_1003CC8E8;
        int v243 = v284;
LABEL_125:
        return withCheckedContinuation<A>(isolation:function:_:)(v164, 0, 0, v242, v165, v241, v243, v163);
      case 8:
        v170 = *(char **)(v0 + 832);
        uint64_t v171 = *(void *)(v0 + 824);
        os_log_type_t v172 = *(char **)(v0 + 816);
        uint64_t v173 = *(char **)(v0 + 808);
        uint64_t v324 = *(void *)(v0 + 800);
        uint64_t v174 = *(int **)(v0 + 792);
        uint64_t v175 = *(void *)(v0 + 648);
        uint64_t v176 = *(void *)(v0 + 640);
        uint64_t v177 = swift_allocObject();
        *(_OWORD *)(v177 + 16) = xmmword_1006D6280;
        *(void *)(v177 + 56) = &type metadata for String;
        *(void *)(v177 + 32) = 0xD000000000000018;
        *(void *)(v177 + 40) = 0x800000010069B5C0;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        v178 = &v170[v174[7]];
        Date.init()();
        os_log_type_t v179 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v175 + 56);
        v179(v178, 0, 1, v176);
        v179(&v170[v174[8]], 1, 1, v176);
        v179(&v170[v174[9]], 1, 1, v176);
        *(_OWORD *)v170 = xmmword_1006E63D0;
        *((_OWORD *)v170 + 1) = xmmword_1006E63E0;
        *((_OWORD *)v170 + 2) = xmmword_1006E63F0;
        BOOL v180 = &v170[v174[10]];
        *(void *)BOOL v180 = 0x40445BAA79BBADC1;
        v180[8] = 0;
        uint64_t v181 = &v170[v174[11]];
        *(void *)uint64_t v181 = 0x405280548A9BCFD5;
        v181[8] = 0;
        *(_OWORD *)&v170[v174[12]] = xmmword_1006D8770;
        *(_OWORD *)&v170[v174[13]] = xmmword_1006D8770;
        v170[v174[14]] = 0;
        uint64_t v182 = &v170[v174[15]];
        *(void *)uint64_t v182 = 0;
        v182[8] = 0;
        unint64_t v183 = &v170[v174[16]];
        *(void *)unint64_t v183 = 0x7FEFFFFFFFFFFFFFLL;
        v183[8] = 0;
        uint64_t v184 = v171 + v174[7];
        Date.init()();
        v179((char *)v184, 0, 1, v176);
        v179((char *)(v171 + v174[8]), 1, 1, v176);
        v179((char *)(v171 + v174[9]), 1, 1, v176);
        *(_OWORD *)uint64_t v171 = xmmword_1006E6400;
        *(void *)(v171 + 16) = 0xD000000000000011;
        *(void *)(v171 + 24) = 0x800000010069B5E0;
        *(_OWORD *)(v171 + 32) = xmmword_1006E63F0;
        uint64_t v185 = v171 + v174[10];
        *(void *)uint64_t v185 = 0x404373EFF1950332;
        *(unsigned char *)(v185 + 8) = 0;
        uint64_t v186 = v171 + v174[11];
        *(void *)uint64_t v186 = 0x4053422B1704FF43;
        *(unsigned char *)(v186 + 8) = 0;
        *(_OWORD *)(v171 + v174[12]) = xmmword_1006D8770;
        *(_OWORD *)(v171 + v174[13]) = xmmword_1006D8770;
        *(unsigned char *)(v171 + v174[14]) = 0;
        uint64_t v187 = v171 + v174[15];
        *(void *)uint64_t v187 = 0;
        *(unsigned char *)(v187 + 8) = 0;
        uint64_t v188 = v171 + v174[16];
        *(void *)uint64_t v188 = 0x7FEFFFFFFFFFFFFFLL;
        *(unsigned char *)(v188 + 8) = 0;
        char v189 = &v172[v174[7]];
        Date.init()();
        v179(v189, 0, 1, v176);
        v179(&v172[v174[8]], 1, 1, v176);
        v179(&v172[v174[9]], 1, 1, v176);
        *(_OWORD *)os_log_type_t v172 = xmmword_1006E6410;
        *((_OWORD *)v172 + 1) = xmmword_1006E6420;
        *((_OWORD *)v172 + 2) = xmmword_1006E63F0;
        int v190 = &v172[v174[10]];
        *(void *)int v190 = 0x4040E0AEA747D806;
        v190[8] = 0;
        v191 = &v172[v174[11]];
        *(void *)v191 = 0x405518C63F141206;
        v191[8] = 0;
        *(_OWORD *)&v172[v174[12]] = xmmword_1006D8770;
        *(_OWORD *)&v172[v174[13]] = xmmword_1006D8770;
        v172[v174[14]] = 0;
        unint64_t v192 = &v172[v174[15]];
        *(void *)unint64_t v192 = 0;
        v192[8] = 0;
        char v193 = &v172[v174[16]];
        *(void *)char v193 = 0x7FEFFFFFFFFFFFFFLL;
        v193[8] = 0;
        uint64_t v194 = &v173[v174[7]];
        Date.init()();
        v179(v194, 0, 1, v176);
        v179(&v173[v174[8]], 1, 1, v176);
        v179(&v173[v174[9]], 1, 1, v176);
        *(_OWORD *)uint64_t v173 = xmmword_1006E6430;
        *((_OWORD *)v173 + 1) = xmmword_1006E6440;
        *((_OWORD *)v173 + 2) = xmmword_1006E63F0;
        uint64_t v195 = &v173[v174[10]];
        *(void *)uint64_t v195 = 0x4044F051EB851EB8;
        v195[8] = 0;
        unint64_t v196 = &v173[v174[11]];
        *(void *)unint64_t v196 = 0x4055E92CCF6BE37ELL;
        v196[8] = 0;
        *(_OWORD *)&v173[v174[12]] = xmmword_1006D8770;
        *(_OWORD *)&v173[v174[13]] = xmmword_1006D8770;
        v173[v174[14]] = 0;
        v197 = &v173[v174[15]];
        *(void *)v197 = 0;
        v197[8] = 0;
        v198 = &v173[v174[16]];
        *(void *)v198 = 0x7FEFFFFFFFFFFFFFLL;
        v198[8] = 0;
        sub_100010218(&qword_10080F280);
        uint64_t v199 = *(void *)(v324 + 72);
        unint64_t v200 = (*(unsigned __int8 *)(v324 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v324 + 80);
        uint64_t v201 = swift_allocObject();
        *(_OWORD *)(v201 + 16) = xmmword_1006D70D0;
        uint64_t v202 = v201 + v200;
        sub_1003CC8F4((uint64_t)v170, v202, _s10VisitAssetC9VisitDataVMa);
        sub_1003CC8F4(v171, v202 + v199, _s10VisitAssetC9VisitDataVMa);
        sub_1003CC8F4((uint64_t)v172, v202 + 2 * v199, _s10VisitAssetC9VisitDataVMa);
        sub_1003CC8F4((uint64_t)v173, v202 + 3 * v199, _s10VisitAssetC9VisitDataVMa);
        sub_1000C8C00(v201);
        unint64_t v203 = sub_1000407C0(9, (uint64_t)_swiftEmptyArrayStorage);
        sub_1003CCA2C((uint64_t)v173, _s10VisitAssetC9VisitDataVMa);
        sub_1003CCA2C((uint64_t)v172, _s10VisitAssetC9VisitDataVMa);
        sub_1003CCA2C(v171, _s10VisitAssetC9VisitDataVMa);
        uint64_t v204 = (uint64_t)v170;
        goto LABEL_99;
      case 9:
        unint64_t v205 = *(char **)(v0 + 832);
        v206 = *(int **)(v0 + 792);
        uint64_t v207 = *(void *)(v0 + 784);
        uint64_t v313 = *(void *)(v0 + 824);
        uint64_t v316 = *(void *)(v0 + 776);
        uint64_t v208 = *(void *)(v0 + 768);
        uint64_t v209 = *(void *)(v0 + 760);
        uint64_t v319 = *(void *)(v0 + 752);
        uint64_t v325 = *(void *)(v0 + 800);
        uint64_t v327 = *(void *)(v0 + 744);
        uint64_t v210 = *(void *)(v0 + 648);
        uint64_t v211 = *(void *)(v0 + 640);
        uint64_t v212 = swift_allocObject();
        *(_OWORD *)(v212 + 16) = xmmword_1006D6280;
        *(void *)(v212 + 56) = &type metadata for String;
        *(void *)(v212 + 32) = 0xD000000000000017;
        *(void *)(v212 + 40) = 0x800000010069B5A0;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        id v213 = &v205[v206[7]];
        Date.init()();
        v214 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v210 + 56);
        v214(v213, 0, 1, v211);
        v214(&v205[v206[8]], 1, 1, v211);
        v214(&v205[v206[9]], 1, 1, v211);
        *(_OWORD *)unint64_t v205 = xmmword_1006E63D0;
        *((_OWORD *)v205 + 1) = xmmword_1006E63E0;
        *((_OWORD *)v205 + 2) = xmmword_1006E63F0;
        os_log_type_t v215 = &v205[v206[10]];
        *(void *)os_log_type_t v215 = 0x40445BAA79BBADC1;
        v215[8] = 0;
        uint64_t v216 = &v205[v206[11]];
        *(void *)uint64_t v216 = 0x405280548A9BCFD5;
        v216[8] = 0;
        *(_OWORD *)&v205[v206[12]] = xmmword_1006D8770;
        *(_OWORD *)&v205[v206[13]] = xmmword_1006D8770;
        v205[v206[14]] = 0;
        uint64_t v217 = &v205[v206[15]];
        *(void *)uint64_t v217 = 0;
        v217[8] = 0;
        unint64_t v218 = &v205[v206[16]];
        *(void *)unint64_t v218 = 0x7FEFFFFFFFFFFFFFLL;
        v218[8] = 0;
        sub_1003CC8F4((uint64_t)v205, v313, _s10VisitAssetC9VisitDataVMa);
        UUID.init()();
        id v219 = (char *)objc_allocWithZone((Class)_s15GenericMapAssetCMa(0));
        *(void *)&v219[OBJC_IVAR____TtCC7Journal10Journaling15GenericMapAsset_metadata] = 0;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v208 + 16))(v316, v207, v209);
        unint64_t v203 = (char *)sub_1001817C4(v316, 9, 9);
        (*(void (**)(uint64_t, uint64_t))(v208 + 8))(v207, v209);
        sub_1003CC95C(v313, v319, _s10VisitAssetC9VisitDataVMa);
        (*(void (**)(uint64_t, void, uint64_t, int *))(v325 + 56))(v319, 0, 1, v206);
        sub_1003CC95C(v319, v327, _s15GenericMapAssetC14GenericMapDataVMa);
        swift_storeEnumTagMultiPayload();
        sub_100010218(&qword_100803330);
        uint64_t v220 = swift_allocObject();
        uint64_t v221 = v220 + *(void *)(*(void *)v220 + 104);
        uint64_t v222 = sub_100010218(&qword_1007F9DB8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v222 - 8) + 56))(v221, 1, 1, v222);
        *(_OWORD *)(v220 + *(void *)(*(void *)v220 + 112)) = xmmword_1006D6A80;
        sub_1003CC9C4(v327, v220 + *(void *)(*(void *)v220 + 120));
        *(void *)&v203[OBJC_IVAR____TtCC7Journal10Journaling15GenericMapAsset_metadata] = v220;
        swift_release();
        uint64_t v204 = (uint64_t)v205;
LABEL_99:
        sub_1003CCA2C(v204, _s10VisitAssetC9VisitDataVMa);
        goto LABEL_119;
      case 0xA:
        v315 = v10;
        uint64_t v61 = *(void *)(v0 + 992);
        uint64_t v62 = *(void *)(v0 + 984);
        uint64_t v63 = *(void *)(v0 + 848);
        uint64_t v64 = *(void *)(v0 + 840);
        id v65 = [objc_allocWithZone((Class)LPLinkMetadata) init];
        URL.init(string:)();
        sub_100052E44(v61, v62);
        BOOL v66 = *(unsigned int (**)(void, void, void))(v63 + 48);
        if (v66(v62, 1, v64) == 1)
        {
          uint64_t v68 = 0;
        }
        else
        {
          uint64_t v69 = *(void *)(v0 + 984);
          uint64_t v70 = v66;
          id v71 = v65;
          uint64_t v72 = *(void *)(v0 + 848);
          uint64_t v73 = *(void *)(v0 + 840);
          URL._bridgeToObjectiveC()(v67);
          uint64_t v68 = v74;
          (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v69, v73);
          id v65 = v71;
          BOOL v66 = v70;
        }
        uint64_t v75 = *(void *)(v0 + 976);
        uint64_t v76 = *(void *)(v0 + 840);
        [v65 setURL:v68];

        URL.init(string:)();
        if (v66(v75, 1, v76) == 1)
        {
          __break(1u);
          JUMPOUT(0x1003C143CLL);
        }
        uint64_t v78 = *(void *)(v0 + 976);
        uint64_t v79 = *(void *)(v0 + 848);
        uint64_t v80 = *(void *)(v0 + 840);
        URL._bridgeToObjectiveC()(v77);
        uint64_t v82 = v81;
        unint64_t v311 = *(void (**)(uint64_t, uint64_t))(v79 + 8);
        v311(v78, v80);
        uint64_t v331 = (uint64_t)v65;
        [v65 setOriginalURL:v82];

        *(void *)(v0 + 344) = 0x20656C707041;
        *(void *)(v0 + 352) = 0xE600000000000000;
        *(void *)(v0 + 400) = 0;
        swift_stdlib_random();
        unint64_t v83 = *(void *)(v0 + 400);
        unint64_t v322 = (unint64_t)v66;
        if (((100 * v83) & 0xFFFFFFFFFFFFFFF0) == 0)
        {
          do
          {
            *unint64_t v307 = 0;
            swift_stdlib_random();
            unint64_t v83 = *v307;
          }
          while (((100 * *v307) & 0xFFFFFFFFFFFFFFF0) == 0);
        }
        uint64_t v84 = *(void *)(v0 + 992);
        uint64_t v85 = *(void *)(v0 + 968);
        uint64_t v8 = *(void *)(v0 + 840);
        *(void *)(v0 + 408) = (v83 * (unsigned __int128)0x64uLL) >> 64;
        v86._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v86);
        swift_bridgeObjectRelease();
        NSString v87 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v65 setTitle:v87];

        sub_100052E44(v84, v85);
        int v88 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v322)(v85, 1, v8);
        uint64_t v89 = *(void *)(v0 + 992);
        uint64_t v90 = *(void *)(v0 + 968);
        if (v88 != 1)
        {
          uint64_t v256 = *(void *)(v0 + 952);
          uint64_t v257 = *(void *)(v0 + 864);
          uint64_t v258 = *(void *)(v0 + 856);
          uint64_t v259 = *(void *)(v0 + 848);
          uint64_t v260 = *(void *)(v0 + 840);
          uint64_t v261 = *(void *)(v0 + 648);
          uint64_t v262 = *(void *)(v0 + 640);
          (*(void (**)(uint64_t, void, uint64_t))(v259 + 32))(v258, *(void *)(v0 + 968), v260);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v259 + 16))(v257, v258, v260);
          Date.init()();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v261 + 56))(v256, 0, 1, v262);
          unint64_t v203 = (char *)sub_1000D575C(9, v257, v256);

          v311(v258, v260);
          sub_10001457C(v89, (uint64_t *)&unk_100800A60);
          goto LABEL_119;
        }
        unint64_t v4 = (unint64_t)&unk_100800A60;
        sub_10001457C(*(void *)(v0 + 992), (uint64_t *)&unk_100800A60);

        sub_10001457C(v90, (uint64_t *)&unk_100800A60);
        uint64_t v10 = v315;
        goto LABEL_6;
      case 0xB:
        uint64_t v160 = swift_task_alloc();
        *(void *)(v0 + 1344) = v160;
        *(void *)(v160 + 16) = 1;
        char v223 = (void *)swift_task_alloc();
        *(void *)(v0 + 1352) = v223;
        uint64_t v224 = sub_100010218(&qword_10080B9A0);
        *char v223 = v0;
        v223[1] = sub_1003C7D54;
        uint64_t v163 = (char *)v224;
        uint64_t v164 = (void *)(v0 + 376);
        unint64_t v165 = 0x800000010069B470;
        uint64_t v166 = sub_1003CCDB4;
        goto LABEL_112;
      case 0xC:
        uint64_t v160 = swift_task_alloc();
        *(void *)(v0 + 1360) = v160;
        *(void *)(v160 + 16) = 1;
        id v225 = (void *)swift_task_alloc();
        *(void *)(v0 + 1368) = v225;
        uint64_t v226 = sub_100010218(&qword_10080B9A0);
        *id v225 = v0;
        v225[1] = sub_1003C81F8;
        uint64_t v163 = (char *)v226;
        uint64_t v164 = (void *)(v0 + 392);
        unint64_t v165 = 0x800000010069B470;
        uint64_t v166 = sub_1003CCDB4;
        goto LABEL_112;
      case 0xD:
        uint64_t v227 = sub_1003CC624(v12, -90.0, 90.0);
        double v229 = v228;
        sub_1003CC624(v227, -180.0, 180.0);
        double v231 = v230;
        *uint64_t v303 = _swiftEmptyArrayStorage;
        uint64_t v232 = sub_100498D40(0x1EBuLL);
        if (v232 + 10 < 1) {
          __break(1u);
        }
        uint64_t v233 = v232;
        uint64_t v234 = -9;
        while (1)
        {
          uint64_t v235 = sub_1003CC624(v232, -0.01, 0.01);
          double v229 = v229 + v236;
          sub_1003CC624(v235, -0.01, 0.01);
          double v231 = v231 + v237;
          [objc_allocWithZone((Class)CLLocation) initWithLatitude:v229 longitude:v231];
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v303 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v303 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          uint64_t v232 = specialized Array._endMutation()();
          if (v233 == v234) {
            break;
          }
          uint64_t v238 = v234 + 10;
          ++v234;
          if (__OFADD__(v238, 1)) {
            goto LABEL_135;
          }
        }
        uint64_t v244 = *(void *)(v0 + 936);
        uint64_t v245 = *(void *)(v0 + 928);
        uint64_t v246 = *(void *)(v0 + 672);
        uint64_t v247 = *(void *)(v0 + 664);
        uint64_t v248 = *(void *)(v0 + 648);
        uint64_t v249 = *(void *)(v0 + 640);
        unint64_t v333 = *(void *)(v0 + 424);
        Date.init()();
        Date.addingTimeInterval(_:)();
        Class v250 = *(void (**)(uint64_t, uint64_t))(v248 + 8);
        v250(v246, v249);
        id v251 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v248 + 56);
        v251(v244, 0, 1, v249);
        Date.init()();
        Date.addingTimeInterval(_:)();
        v250(v246, v249);
        sub_100498D40(0x20000000000001uLL);
        Date.addingTimeInterval(_:)();
        v250(v247, v249);
        v251(v245, 0, 1, v249);
        unint64_t v252 = sub_100498D40(0x20000000000001uLL);
        unint64_t v253 = sub_100498D40(0x20000000000001uLL);
        double v254 = (double)v253 * 1.11022302e-16 * 700.0 + 100.0;
        double v255 = 160.0;
        if (v252 != 0x20000000000000) {
          double v255 = (double)v252 * 1.11022302e-16 * 80.0 + 80.0;
        }
        if (v253 == 0x20000000000000) {
          double v254 = 800.0;
        }
        unint64_t v203 = sub_1004AC7E0(9, v333, 7238994, 0xE300000000000000, 0, 1, v244, v245, *(uint64_t *)&v255, 0, *(uint64_t *)&v254, 0, 0, 0, 0, 0);
        goto LABEL_119;
      case 0xF:
        unint64_t v203 = sub_10008F704(9, 0, 0);
        goto LABEL_119;
      case 0x10:
        uint64_t v160 = swift_task_alloc();
        *(void *)(v0 + 1376) = v160;
        *(void *)(v160 + 16) = 1;
        v239 = (void *)swift_task_alloc();
        *(void *)(v0 + 1384) = v239;
        uint64_t v240 = sub_100010218(&qword_10080B9A0);
        void *v239 = v0;
        v239[1] = sub_1003C8690;
        uint64_t v163 = (char *)v240;
        uint64_t v164 = (void *)(v0 + 464);
        unint64_t v165 = 0x800000010069B470;
        uint64_t v166 = sub_1003CC8A8;
        goto LABEL_112;
      default:
        uint64_t v159 = swift_allocObject();
        *(_OWORD *)(v159 + 16) = xmmword_1006D6280;
        *(void *)(v159 + 56) = &type metadata for String;
        *(void *)(v159 + 32) = 0xD000000000000013;
        *(void *)(v159 + 40) = 0x800000010069B820;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        uint64_t v160 = swift_task_alloc();
        *(void *)(v0 + 1272) = v160;
        *(void *)(v160 + 16) = 1;
        os_log_type_t v161 = (void *)swift_task_alloc();
        *(void *)(v0 + 1280) = v161;
        uint64_t v162 = sub_100010218(&qword_10080B9A0);
        *os_log_type_t v161 = v0;
        v161[1] = sub_1003C1490;
        uint64_t v163 = (char *)v162;
        uint64_t v164 = (void *)(v0 + 560);
        unint64_t v165 = 0x800000010069B470;
        uint64_t v166 = sub_1003CCDB4;
LABEL_112:
        v241 = (uint64_t (*)(uint64_t))v166;
        unint64_t v242 = 0xD000000000000024;
        int v243 = (void *)v160;
        goto LABEL_125;
    }
  }
}

uint64_t sub_1003C1490()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1003C15D4, 0, 0);
}

uint64_t sub_1003C15D4()
{
  uint64_t v1 = v0;
  unint64_t v2 = *(void *)(v0 + 560);
  uint64_t v3 = *(void *)(v2 + 16);
  v384 = (void *)v1;
  if (v3)
  {
    uint64_t v4 = v1 + 96;
    uint64_t v5 = *(void *)(v1 + 848);
    *(_OWORD *)(v1 + 96) = 0u;
    *(_OWORD *)(v1 + 112) = 0u;
    *(unsigned char *)(v1 + 128) = 1;
    uint64_t v6 = *(void *)(v1 + 1032);
    uint64_t v7 = *(void *)(v1 + 960);
    uint64_t v8 = *(void *)(v1 + 648);
    uint64_t v9 = *(void *)(v1 + 640);
    uint64_t v10 = *(void **)(v2 + 32);
    uint64_t v365 = *(void *)(v2 + 40);
    uint64_t v368 = *(void *)(v1 + 1256);
    uint64_t v11 = *(void *)(v2 + 48);
    v374 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56);
    v374(v6, 1, 1, *(void *)(v1 + 840));
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v7, 1, 1, v9);
    id v12 = v10;
    swift_bridgeObjectRetain_n();
    id v13 = v12;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1002B5008(9, v10, v6, v365, v11, v7, 0, 0, 0, 1u, 0, 1u, 0, 0, 1u, v4, v4, v4);
    if (v368)
    {
      swift_errorRelease();

      unint64_t v15 = 0;
    }
    else
    {
      unint64_t v15 = v14;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = v3 - 1;
    if (v3 != 1)
    {
      unint64_t v29 = v2 + 104;
      do
      {
        v379 = v15;
        uint64_t v31 = *(void *)(v1 + 1032);
        uint64_t v32 = *(void *)(v1 + 960);
        uint64_t v33 = *(void *)(v1 + 840);
        uint64_t v34 = *(void *)(v1 + 648);
        uint64_t v35 = *(void *)(v1 + 640);
        unint64_t v36 = *(void **)(v29 - 32);
        uint64_t v37 = *(void *)(v29 - 24);
        uint64_t v38 = *(void *)(v29 - 16);
        v374(v31, 1, 1, v33);
        unint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 56);
        unint64_t v2 = v34 + 56;
        v39(v32, 1, 1, v35);
        id v40 = v36;
        swift_bridgeObjectRetain_n();
        id v41 = v40;
        swift_bridgeObjectRetain();
        unint64_t v42 = sub_1002B5008(9, v36, v31, v37, v38, v32, 0, 0, 0, 1u, 0, 1u, 0, 0, 1u, v4, v4, v4);
        unint64_t v30 = v42;

        unint64_t v15 = v30;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v29 += 40;
        --v17;
        uint64_t v1 = (uint64_t)v384;
      }
      while (v17);
    }
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_8;
    }
    uint64_t v16 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v1 + 1256);
  }
  uint64_t v43 = *(void *)(v1 + 1264) + 1;
  if (v43 == *(void *)(v1 + 600))
  {
LABEL_18:
    unint64_t v44 = *(void **)(v1 + 1248);
    unint64_t v45 = *(void **)(v1 + 1240);
    swift_release();

    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v46 = (uint64_t (*)(uint64_t))v384[1];
    uint64_t v47 = v384[149];
    return v46(v47);
  }
  uint64_t v48 = (unint64_t *)(v1 + 416);
  v353 = (void *)(v1 + 424);
  v380 = (void *)(v1 + 432);
  uint64_t v359 = v1 + 448;
  uint64_t v49 = (void *)(v1 + 480);
  uint64_t v50 = v1 + 496;
  uint64_t v51 = (void *)(v1 + 504);
  v357 = (void *)(v1 + 512);
  v358 = (void *)(v1 + 488);
  uint64_t v52 = (void *)(v1 + 528);
  v356 = (void *)(v1 + 536);
  v355 = (void *)(v1 + 552);
  v352 = (void *)(v1 + 560);
  uint64_t v53 = v1 + 568;
  v364 = (unint64_t *)(v1 + 416);
  uint64_t v366 = v1 + 568;
  uint64_t v361 = v1 + 496;
  v369 = (void *)(v1 + 528);
  v371 = (void *)(v1 + 504);
  while (2)
  {
    *(void *)(v1 + 1264) = v43;
    *(void *)(v1 + 1256) = v16;
    unint64_t v60 = *(void *)(v1 + 1208);
    *(void *)(v1 + 496) = 0;
    uint64_t v61 = swift_stdlib_random();
    unint64_t v62 = *(void *)(v1 + 496);
    uint64_t v63 = (v62 * (unsigned __int128)v60) >> 64;
    unint64_t v64 = v62 * v60;
    unint64_t v65 = *(void *)(v1 + 1208);
    if (v60 > v64)
    {
      unint64_t v60 = -(uint64_t)v65 % v65;
      if (v60 > v64)
      {
        do
        {
          unint64_t v2 = *(void *)(v1 + 1208);
          *(void *)(v1 + 568) = 0;
          uint64_t v61 = swift_stdlib_random();
          unint64_t v66 = *(void *)(v1 + 568);
        }
        while (v60 > v66 * v2);
        uint64_t v63 = (v66 * (unsigned __int128)v2) >> 64;
        unint64_t v65 = *(void *)(v1 + 1208);
      }
    }
    if (v63 >= (uint64_t)v65)
    {
LABEL_141:
      __break(1u);
LABEL_142:
      uint64_t v323 = *(void *)(v1 + 1016);
      uint64_t v324 = *(void *)(v1 + 952);
      uint64_t v382 = *(void *)(v1 + 904);
      unint64_t v325 = v2;
      uint64_t v326 = *(void *)(v1 + 848);
      uint64_t v327 = *(void *)(v1 + 840);
      uint64_t v328 = *(void *)(v1 + 648);
      uint64_t v329 = v384[80];
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v326 + 56))(v323, 1, 1, v327);
      id v330 = (id)v60;
      Date.init()();
      uint64_t v331 = v329;
      uint64_t v1 = (uint64_t)v384;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v328 + 56))(v324, 0, 1, v331);
      uint64_t v332 = sub_1000B1130(9, v362, v360, v323, (void *)v60, 0x7472412074736554, 0xEB00000000747369, 0x6E6F532074736554, 0xE900000000000067, 0x626C412074736554, 0xEA00000000006D75, 1, 0, v324, 0);

      uint64_t v333 = v53;
      unint64_t v15 = v332;
      sub_100040DD0(v333, v325);
      (*(void (**)(uint64_t, uint64_t))(v326 + 8))(v382, v327);
      goto LABEL_8;
    }
    switch(*(unsigned char *)(*(void *)(v1 + 592) + v63 + 32))
    {
      case 1:
      case 7:
      case 0xE:
      case 0x11:
      case 0x12:
      case 0x13:
      case 0x14:
        goto LABEL_27;
      case 2:
        uint64_t v212 = swift_allocObject();
        *(_OWORD *)(v212 + 16) = xmmword_1006D6280;
        *(void *)(v212 + 56) = &type metadata for String;
        *(void *)(v212 + 32) = 0xD000000000000013;
        *(void *)(v212 + 40) = 0x800000010069B4F0;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        id v213 = (void *)swift_task_alloc();
        *(void *)(v1 + 1336) = v213;
        *id v213 = v1;
        v213[1] = sub_1003C4C20;
        uint64_t v214 = *(void *)(v1 + 680);
        return sub_100497ECC(v214);
      case 3:
        uint64_t v375 = v16;
        uint64_t v67 = *(void *)(v1 + 1232);
        uint64_t v68 = swift_allocObject();
        *(_OWORD *)(v68 + 16) = xmmword_1006D6280;
        *(void *)(v68 + 56) = &type metadata for String;
        *(void *)(v68 + 32) = 0xD000000000000012;
        *(void *)(v68 + 40) = 0x800000010069B770;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        unint64_t v69 = *(void *)(*(void *)(v67 + 16) + 16);
        if (v69)
        {
          void *v356 = 0;
          swift_stdlib_random();
          unint64_t v70 = *v356 * v69;
          int64_t v71 = ((unint64_t)*v356 * (unsigned __int128)v69) >> 64;
          if (v69 > v70)
          {
            unint64_t v72 = -(uint64_t)v69 % v69;
            if (v72 > v70)
            {
              do
              {
                void *v355 = 0;
                swift_stdlib_random();
              }
              while (v72 > *v355 * v69);
              int64_t v71 = ((unint64_t)*v355 * (unsigned __int128)v69) >> 64;
            }
          }
          uint64_t v73 = *(void *)(*(void *)(v1 + 1232) + 16);
          if (v71 >= *(void *)(v73 + 16))
          {
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
          }
          uint64_t v74 = v73 + 32 * v71;
          unint64_t v75 = *(void *)(v74 + 40);
          uint64_t v362 = *(void *)(v74 + 32);
          swift_beginAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10035FD28(v71);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v362 = 0x3334363139343137;
          unint64_t v75 = 0xE900000000000034;
        }
        uint64_t v140 = *(void *)(v1 + 1024);
        uint64_t v141 = *(void *)(v1 + 848);
        uint64_t v142 = *(void *)(v1 + 840);
        URL.init(string:)();
        uint64_t v143 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v141 + 48);
        unint64_t v2 = v141 + 48;
        int v144 = v143(v140, 1, v142);
        uint64_t v145 = *(void *)(v1 + 1024);
        if (v144 == 1) {
          goto LABEL_76;
        }
        uint64_t v360 = v75;
        (*(void (**)(void, uint64_t, void))(*(void *)(v1 + 848) + 32))(*(void *)(v1 + 904), v145, *(void *)(v1 + 840));
        uint64_t v54 = Data.init(contentsOf:options:)();
        if (v375)
        {
          uint64_t v56 = *(void *)(v1 + 904);
          goto LABEL_24;
        }
        uint64_t v53 = v54;
        unint64_t v2 = v55;
        id v194 = objc_allocWithZone((Class)UIImage);
        sub_100040D64(v53, v2);
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        unint64_t v60 = (unint64_t)[v194 initWithData:isa];
        sub_100040DD0(v53, v2);

        uint64_t v48 = v364;
        if (v60) {
          goto LABEL_142;
        }
        uint64_t v196 = *(void *)(v1 + 904);
        goto LABEL_104;
      case 4:
        uint64_t v375 = v16;
        uint64_t v76 = *(void *)(v1 + 1232);
        uint64_t v77 = swift_allocObject();
        *(_OWORD *)(v77 + 16) = xmmword_1006D6280;
        *(void *)(v77 + 56) = &type metadata for String;
        *(void *)(v77 + 32) = 0xD000000000000015;
        *(void *)(v77 + 40) = 0x800000010069B6B0;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        unint64_t v78 = *(void *)(*(void *)(v76 + 24) + 16);
        if (v78)
        {
          void *v357 = 0;
          swift_stdlib_random();
          unint64_t v79 = *v357 * v78;
          int64_t v80 = ((unint64_t)*v357 * (unsigned __int128)v78) >> 64;
          if (v78 > v79)
          {
            unint64_t v81 = -(uint64_t)v78 % v78;
            if (v81 > v79)
            {
              do
              {
                *uint64_t v52 = 0;
                swift_stdlib_random();
              }
              while (v81 > *v52 * v78);
              int64_t v80 = ((unint64_t)*v52 * (unsigned __int128)v78) >> 64;
            }
          }
          uint64_t v82 = *(void *)(*(void *)(v1 + 1232) + 24);
          if (v80 >= *(void *)(v82 + 16)) {
            goto LABEL_147;
          }
          uint64_t v83 = v82 + 32 * v80;
          unint64_t v84 = *(void *)(v83 + 40);
          uint64_t v362 = *(void *)(v83 + 32);
          swift_beginAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10035FD28(v80);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v84 = 0xEA00000000003130;
          uint64_t v362 = 0x3237353736393331;
        }
        uint64_t v146 = *(void *)(v1 + 1008);
        uint64_t v147 = *(void *)(v1 + 848);
        uint64_t v148 = *(void *)(v1 + 840);
        URL.init(string:)();
        Class v149 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v147 + 48);
        unint64_t v2 = v147 + 48;
        int v150 = v149(v146, 1, v148);
        uint64_t v145 = *(void *)(v1 + 1008);
        if (v150 == 1) {
          goto LABEL_76;
        }
        uint64_t v360 = v84;
        (*(void (**)(void, uint64_t, void))(*(void *)(v1 + 848) + 32))(*(void *)(v1 + 896), v145, *(void *)(v1 + 840));
        uint64_t v151 = Data.init(contentsOf:options:)();
        if (!v375)
        {
          uint64_t v53 = v151;
          unint64_t v2 = v152;
          id v197 = objc_allocWithZone((Class)UIImage);
          sub_100040D64(v53, v2);
          Class v198 = Data._bridgeToObjectiveC()().super.isa;
          id v199 = [v197 initWithData:v198];
          sub_100040DD0(v53, v2);

          uint64_t v48 = v364;
          if (!v199)
          {
            uint64_t v196 = *(void *)(v1 + 896);
LABEL_104:
            (*(void (**)(uint64_t, void))(*(void *)(v1 + 848) + 8))(v196, *(void *)(v1 + 840));
            sub_100040DD0(v53, v2);
            goto LABEL_107;
          }
          uint64_t v334 = *(void *)(v1 + 1016);
          uint64_t v335 = *(void *)(v1 + 952);
          uint64_t v336 = *(void *)(v1 + 896);
          unint64_t v383 = v2;
          uint64_t v337 = *(void *)(v1 + 848);
          uint64_t v338 = *(void *)(v1 + 840);
          uint64_t v339 = *(void *)(v1 + 648);
          uint64_t v340 = v384[80];
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v337 + 16))(v334, v336, v338);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v337 + 56))(v334, 0, 1, v338);
          Date.init()();
          uint64_t v341 = v340;
          uint64_t v1 = (uint64_t)v384;
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v339 + 56))(v335, 0, 1, v341);
          v342 = sub_1003935AC(9, v362, v360, v199, 0x7469742074736554, 0xEA0000000000656CLL, v334, 0x7475412074736554, 0xEB00000000726F68, v335, 0, 0, 2u);
          uint64_t v343 = v53;
          unint64_t v15 = v342;
          unint64_t v344 = v383;
          goto LABEL_145;
        }
        uint64_t v56 = *(void *)(v1 + 896);
LABEL_24:
        uint64_t v57 = *(void *)(v1 + 848);
        uint64_t v58 = *(void *)(v1 + 840);
        goto LABEL_25;
      case 5:
        uint64_t v375 = v16;
        uint64_t v85 = *(void *)(v1 + 1232);
        uint64_t v86 = swift_allocObject();
        *(_OWORD *)(v86 + 16) = xmmword_1006D6280;
        *(void *)(v86 + 56) = &type metadata for String;
        *(void *)(v86 + 32) = 0xD000000000000012;
        *(void *)(v86 + 40) = 0x800000010069B600;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        unint64_t v87 = *(void *)(*(void *)(v85 + 32) + 16);
        if (v87)
        {
          void *v358 = 0;
          swift_stdlib_random();
          unint64_t v88 = *v358 * v87;
          int64_t v89 = ((unint64_t)*v358 * (unsigned __int128)v87) >> 64;
          if (v87 > v88)
          {
            unint64_t v90 = -(uint64_t)v87 % v87;
            if (v90 > v88)
            {
              do
              {
                void *v51 = 0;
                swift_stdlib_random();
              }
              while (v90 > *v51 * v87);
              int64_t v89 = ((unint64_t)*v51 * (unsigned __int128)v87) >> 64;
            }
          }
          uint64_t v91 = *(void *)(*(void *)(v1 + 1232) + 32);
          if (v89 >= *(void *)(v91 + 16)) {
            goto LABEL_148;
          }
          uint64_t v92 = v50;
          uint64_t v93 = v91 + 32 * v89;
          uint64_t v94 = *(void *)(v93 + 40);
          uint64_t v360 = *(void *)(v93 + 32);
          swift_beginAccess();
          uint64_t v362 = v94;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10035FD28(v89);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v50 = v92;
        }
        else
        {
          uint64_t v360 = 0x3134393933363531;
          uint64_t v362 = 0xEA00000000003030;
        }
        uint64_t v153 = *(void *)(v1 + 1000);
        uint64_t v154 = *(void *)(v1 + 848);
        uint64_t v155 = *(void *)(v1 + 840);
        URL.init(string:)();
        v156 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v154 + 48);
        unint64_t v2 = v154 + 48;
        int v157 = v156(v153, 1, v155);
        uint64_t v145 = *(void *)(v1 + 1000);
        if (v157 == 1)
        {
LABEL_76:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10001457C(v145, (uint64_t *)&unk_100800A60);
          goto LABEL_77;
        }
        (*(void (**)(void, void, void))(*(void *)(v1 + 848) + 32))(*(void *)(v1 + 888), *(void *)(v1 + 1000), *(void *)(v1 + 840));
        uint64_t v158 = Data.init(contentsOf:options:)();
        if (!v16)
        {
          uint64_t v200 = v158;
          unint64_t v2 = v159;
          id v201 = objc_allocWithZone((Class)UIImage);
          sub_100040D64(v200, v2);
          Class v202 = Data._bridgeToObjectiveC()().super.isa;
          id v203 = [v201 initWithData:v202];
          sub_100040DD0(v200, v2);

          uint64_t v48 = v364;
          if (!v203)
          {
            (*(void (**)(void, void))(*(void *)(v1 + 848) + 8))(*(void *)(v1 + 888), *(void *)(v1 + 840));
            sub_100040DD0(v200, v2);
LABEL_107:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v16 = 0;
            goto LABEL_26;
          }
          uint64_t v345 = *(void *)(v1 + 952);
          uint64_t v336 = *(void *)(v1 + 888);
          unint64_t v346 = v2;
          uint64_t v337 = *(void *)(v1 + 848);
          uint64_t v338 = *(void *)(v1 + 840);
          uint64_t v347 = v384[81];
          uint64_t v348 = v384[80];
          swift_bridgeObjectRelease();
          id v349 = v203;
          Date.init()();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v347 + 56))(v345, 0, 1, v348);
          uint64_t v1 = (uint64_t)v384;
          v350 = sub_100048FB8(9, v360, v362, 0x7469742074736554, 0xEA0000000000656CLL, v203, 0x7475412074736554, 0xEB00000000726F68, v345);

          uint64_t v343 = v200;
          unint64_t v15 = v350;
          unint64_t v344 = v346;
LABEL_145:
          sub_100040DD0(v343, v344);
          (*(void (**)(uint64_t, uint64_t))(v337 + 8))(v336, v338);
LABEL_8:
          *(void *)(v1 + 1400) = v15;
          *(void *)(v1 + 1392) = v15;
          uint64_t v18 = *(void *)(v1 + 1264);
          uint64_t v19 = *(void *)(v1 + 584);
          uint64_t v20 = *(void *)(v1 + 576);
          unint64_t v21 = v15;
          *(void *)(v1 + 296) = v20;
          *(void *)(v1 + 304) = v19;
          swift_bridgeObjectRetain();
          v22._countAndFlagsBits = 0x20746573734120;
          v22._object = (void *)0xE700000000000000;
          String.append(_:)(v22);
          *(void *)(v1 + 456) = v18;
          v23._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v23);
          swift_bridgeObjectRelease();
          id v24 = objc_allocWithZone((Class)NSAttributedString);
          NSString v25 = String._bridgeToObjectiveC()();
          id v26 = [v24 initWithString:v25];

          swift_bridgeObjectRelease();
          unint64_t v27 = *(void **)&v21[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title];
          *(void *)&v21[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title] = v26;

          if (qword_1007F7CE0 != -1) {
            swift_once();
          }
          uint64_t v28 = qword_10083EA18;
          *(void *)(v1 + 1408) = qword_10083EA18;
          return _swift_task_switch(sub_1003C8B64, v28, 0);
        }
        uint64_t v56 = *(void *)(v1 + 888);
        uint64_t v57 = *(void *)(v1 + 848);
        uint64_t v58 = *(void *)(v1 + 840);
LABEL_25:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        uint64_t v59 = *(void (**)(uint64_t, uint64_t))(v57 + 8);
        unint64_t v2 = v57 + 8;
        v59(v56, v58);
        uint64_t v16 = 0;
        uint64_t v48 = v364;
        goto LABEL_26;
      case 6:
        uint64_t v95 = *(void *)(v1 + 784);
        uint64_t v96 = *(void *)(v1 + 768);
        uint64_t v97 = *(void *)(v1 + 760);
        uint64_t v98 = swift_allocObject();
        *(_OWORD *)(v98 + 16) = xmmword_1006D6280;
        *(void *)(v98 + 56) = &type metadata for String;
        *(void *)(v98 + 32) = 0xD000000000000012;
        *(void *)(v98 + 40) = 0x800000010069B510;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        UUID.init()();
        uint64_t v99 = UUID.uuidString.getter();
        uint64_t v101 = v100;
        (*(void (**)(uint64_t, uint64_t))(v96 + 8))(v95, v97);
        if (qword_1007F6EF8 != -1) {
          swift_once();
        }
        if (qword_10083D468)
        {
          uint64_t v102 = *(unsigned int *)(v1 + 132);
          uint64_t v103 = *(void *)(v1 + 864);
          uint64_t v104 = *(void *)(v1 + 848);
          uint64_t v363 = *(void *)(v1 + 840);
          uint64_t v105 = *(void *)(v1 + 728);
          uint64_t v376 = v99;
          uint64_t v106 = v101;
          uint64_t v107 = *(void *)(v1 + 720);
          uint64_t v108 = *(void *)(v1 + 712);
          sub_1004FD498(qword_10083D460, (void *)qword_10083D468, v103);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v107 + 104))(v105, v102, v108);
          sub_100014344();
          URL.appending<A>(components:directoryHint:)();
          (*(void (**)(uint64_t, uint64_t))(v107 + 8))(v105, v108);
          uint64_t v101 = v106;
          uint64_t v99 = v376;
          (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v103, v363);
        }
        else
        {
          static URL.temporaryDirectory.getter();
        }
        uint64_t v160 = *(void *)(v1 + 872);
        uint64_t v161 = *(void *)(v1 + 848);
        uint64_t v53 = *(void *)(v1 + 840);
        *(void *)(v1 + 328) = v99;
        *(void *)(v1 + 336) = v101;
        v162._countAndFlagsBits = 1717658414;
        v162._object = (void *)0xE400000000000000;
        String.append(_:)(v162);
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        uint64_t v163 = *(void (**)(uint64_t, uint64_t))(v161 + 8);
        v161 += 8;
        *(void *)(v1 + 1288) = v163;
        *(void *)(v1 + 1296) = v161 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        uint64_t v362 = v161;
        uint64_t v360 = (uint64_t)v163;
        v163(v160, v53);
        if (qword_1007F6F30 != -1) {
          swift_once();
        }
        unint64_t v60 = qword_10083D4B8;
        unint64_t v164 = *(void *)(qword_10083D4B8 + 16);
        unint64_t v377 = -(uint64_t)v164;
        uint64_t v1 = 1;
        unint64_t v165 = (char *)_swiftEmptyArrayStorage;
        do
        {
          if (v164)
          {
            unint64_t v2 = (unint64_t)v380;
            void *v380 = 0;
            swift_bridgeObjectRetain();
            swift_stdlib_random();
            uint64_t v166 = ((unint64_t)*v380 * (unsigned __int128)v164) >> 64;
            unint64_t v167 = *v380 * v164;
            if (v164 > v167)
            {
              unint64_t v2 = v377 % v164;
              if (v377 % v164 > v167)
              {
                do
                {
                  void *v49 = 0;
                  swift_stdlib_random();
                }
                while (v2 > *v49 * v164);
                uint64_t v166 = ((unint64_t)*v49 * (unsigned __int128)v164) >> 64;
              }
            }
            if (v166 >= (uint64_t)v164)
            {
              __break(1u);
              goto LABEL_141;
            }
            unint64_t v168 = (uint64_t *)(v60 + 32 + 16 * v166);
            uint64_t v169 = *v168;
            unint64_t v170 = v168[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v169 = 0;
            unint64_t v170 = 0xE000000000000000;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v165 = sub_1002A54A0(0, *((void *)v165 + 2) + 1, 1, v165);
          }
          unint64_t v172 = *((void *)v165 + 2);
          unint64_t v171 = *((void *)v165 + 3);
          uint64_t v53 = v172 + 1;
          if (v172 >= v171 >> 1) {
            unint64_t v165 = sub_1002A54A0((char *)(v171 > 1), v172 + 1, 1, v165);
          }
          ++v1;
          *((void *)v165 + 2) = v53;
          uint64_t v173 = &v165[16 * v172];
          *((void *)v173 + 4) = v169;
          *((void *)v173 + 5) = v170;
        }
        while (v1 != 5);
        uint64_t v1 = (uint64_t)v384;
        v384[55] = v165;
        sub_100010218(&qword_100800A70);
        sub_1000245BC();
        BidirectionalCollection<>.joined(separator:)();
        uint64_t v175 = v174;
        swift_bridgeObjectRelease();
        v384[163] = v175;
        uint64_t v176 = self;
        id v177 = [v176 defaultManager];
        URL.absoluteString.getter();
        NSString v178 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        unsigned __int8 v179 = [v177 fileExistsAtPath:v178];

        if ((v179 & 1) == 0) {
          goto LABEL_136;
        }
        id v180 = [v176 defaultManager];
        URL._bridgeToObjectiveC()(v181);
        unint64_t v183 = v182;
        v384[56] = 0;
        unsigned int v184 = [v180 removeItemAtURL:v182 error:v359];

        uint64_t v185 = (void *)v384[56];
        if (!v184)
        {
          unint64_t v2 = v384[110];
          uint64_t v186 = v384[105];
          id v187 = v185;
          swift_bridgeObjectRelease();
          uint64_t v188 = _convertNSErrorToError(_:)();

          swift_willThrow();
          uint64_t v189 = swift_allocObject();
          *(_OWORD *)(v189 + 16) = xmmword_1006D6280;
          v384[35] = 0;
          v384[36] = 0xE000000000000000;
          _StringGuts.grow(_:)(28);
          uint64_t v190 = v384[36];
          v384[39] = v384[35];
          v384[40] = v190;
          v191._countAndFlagsBits = 0x100000000000001ALL;
          v191._object = (void *)0x800000010069B580;
          String.append(_:)(v191);
          v384[59] = v188;
          sub_100010218((uint64_t *)&unk_1007FC0D0);
          _print_unlocked<A, B>(_:_:)();
          uint64_t v192 = v384[39];
          uint64_t v193 = v384[40];
          *(void *)(v189 + 56) = &type metadata for String;
          *(void *)(v189 + 32) = v192;
          *(void *)(v189 + 40) = v193;
          print(_:separator:terminator:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          ((void (*)(unint64_t, uint64_t))v360)(v2, v186);
          uint64_t v16 = 0;
          uint64_t v48 = v364;
          uint64_t v50 = v361;
LABEL_26:
          uint64_t v52 = v369;
          uint64_t v51 = v371;
          uint64_t v53 = v366;
LABEL_27:
          uint64_t v43 = *(void *)(v1 + 1264) + 1;
          if (v43 == *(void *)(v1 + 600)) {
            goto LABEL_18;
          }
          continue;
        }
        id v312 = v185;
LABEL_136:
        uint64_t v313 = v384[156];
        uint64_t v314 = v384[110];
        id v315 = objc_allocWithZone((Class)AVSpeechUtterance);
        swift_bridgeObjectRetain();
        NSString v316 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v317 = [v315 initWithString:v316];
        v384[164] = v317;

        LODWORD(v318) = 0.5;
        [v317 setRate:v318];
        LODWORD(v319) = 1.0;
        [v317 setVolume:v319];
        NSString v320 = String._bridgeToObjectiveC()();
        id v321 = [self voiceWithIdentifier:v320];

        [v317 setVoice:v321];
        unint64_t v322 = (void *)swift_task_alloc();
        v384[165] = v322;
        v322[2] = v313;
        v322[3] = v317;
        v322[4] = v314;
        uint64_t v211 = (void *)swift_task_alloc();
        v384[166] = v211;
        *uint64_t v211 = v384;
        v211[1] = sub_1003C47D8;
        unint64_t v290 = 0xD00000000000001ALL;
        uint64_t v208 = (char *)&type metadata for () + 8;
        unint64_t v209 = 0x800000010069B560;
        uint64_t v210 = sub_1003CC8E8;
        uint64_t v291 = v322;
LABEL_137:
        return withCheckedContinuation<A>(isolation:function:_:)(v211, 0, 0, v290, v209, v210, v291, v208);
      case 8:
        os_log_type_t v215 = *(char **)(v1 + 832);
        uint64_t v216 = *(void *)(v1 + 824);
        uint64_t v217 = *(char **)(v1 + 816);
        unint64_t v218 = *(char **)(v1 + 808);
        uint64_t v372 = *(void *)(v1 + 800);
        id v219 = *(int **)(v1 + 792);
        uint64_t v220 = *(void *)(v1 + 648);
        uint64_t v221 = *(void *)(v1 + 640);
        uint64_t v222 = swift_allocObject();
        *(_OWORD *)(v222 + 16) = xmmword_1006D6280;
        *(void *)(v222 + 56) = &type metadata for String;
        *(void *)(v222 + 32) = 0xD000000000000018;
        *(void *)(v222 + 40) = 0x800000010069B5C0;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        char v223 = &v215[v219[7]];
        Date.init()();
        uint64_t v224 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v220 + 56);
        v224(v223, 0, 1, v221);
        v224(&v215[v219[8]], 1, 1, v221);
        v224(&v215[v219[9]], 1, 1, v221);
        *(_OWORD *)os_log_type_t v215 = xmmword_1006E63D0;
        *((_OWORD *)v215 + 1) = xmmword_1006E63E0;
        *((_OWORD *)v215 + 2) = xmmword_1006E63F0;
        id v225 = &v215[v219[10]];
        *(void *)id v225 = 0x40445BAA79BBADC1;
        v225[8] = 0;
        uint64_t v226 = &v215[v219[11]];
        *(void *)uint64_t v226 = 0x405280548A9BCFD5;
        v226[8] = 0;
        *(_OWORD *)&v215[v219[12]] = xmmword_1006D8770;
        *(_OWORD *)&v215[v219[13]] = xmmword_1006D8770;
        v215[v219[14]] = 0;
        uint64_t v227 = &v215[v219[15]];
        *(void *)uint64_t v227 = 0;
        v227[8] = 0;
        double v228 = &v215[v219[16]];
        *(void *)double v228 = 0x7FEFFFFFFFFFFFFFLL;
        v228[8] = 0;
        uint64_t v229 = v216 + v219[7];
        Date.init()();
        v224((char *)v229, 0, 1, v221);
        v224((char *)(v216 + v219[8]), 1, 1, v221);
        v224((char *)(v216 + v219[9]), 1, 1, v221);
        *(_OWORD *)uint64_t v216 = xmmword_1006E6400;
        *(void *)(v216 + 16) = 0xD000000000000011;
        *(void *)(v216 + 24) = 0x800000010069B5E0;
        *(_OWORD *)(v216 + 32) = xmmword_1006E63F0;
        uint64_t v230 = v216 + v219[10];
        *(void *)uint64_t v230 = 0x404373EFF1950332;
        *(unsigned char *)(v230 + 8) = 0;
        uint64_t v231 = v216 + v219[11];
        *(void *)uint64_t v231 = 0x4053422B1704FF43;
        *(unsigned char *)(v231 + 8) = 0;
        *(_OWORD *)(v216 + v219[12]) = xmmword_1006D8770;
        *(_OWORD *)(v216 + v219[13]) = xmmword_1006D8770;
        *(unsigned char *)(v216 + v219[14]) = 0;
        uint64_t v232 = v216 + v219[15];
        *(void *)uint64_t v232 = 0;
        *(unsigned char *)(v232 + 8) = 0;
        uint64_t v233 = v216 + v219[16];
        *(void *)uint64_t v233 = 0x7FEFFFFFFFFFFFFFLL;
        *(unsigned char *)(v233 + 8) = 0;
        uint64_t v234 = &v217[v219[7]];
        Date.init()();
        v224(v234, 0, 1, v221);
        v224(&v217[v219[8]], 1, 1, v221);
        v224(&v217[v219[9]], 1, 1, v221);
        *(_OWORD *)uint64_t v217 = xmmword_1006E6410;
        *((_OWORD *)v217 + 1) = xmmword_1006E6420;
        *((_OWORD *)v217 + 2) = xmmword_1006E63F0;
        uint64_t v235 = &v217[v219[10]];
        *(void *)uint64_t v235 = 0x4040E0AEA747D806;
        v235[8] = 0;
        double v236 = &v217[v219[11]];
        *(void *)double v236 = 0x405518C63F141206;
        v236[8] = 0;
        *(_OWORD *)&v217[v219[12]] = xmmword_1006D8770;
        *(_OWORD *)&v217[v219[13]] = xmmword_1006D8770;
        v217[v219[14]] = 0;
        double v237 = &v217[v219[15]];
        *(void *)double v237 = 0;
        v237[8] = 0;
        uint64_t v238 = &v217[v219[16]];
        *(void *)uint64_t v238 = 0x7FEFFFFFFFFFFFFFLL;
        v238[8] = 0;
        v239 = &v218[v219[7]];
        Date.init()();
        v224(v239, 0, 1, v221);
        v224(&v218[v219[8]], 1, 1, v221);
        v224(&v218[v219[9]], 1, 1, v221);
        *(_OWORD *)unint64_t v218 = xmmword_1006E6430;
        *((_OWORD *)v218 + 1) = xmmword_1006E6440;
        *((_OWORD *)v218 + 2) = xmmword_1006E63F0;
        uint64_t v240 = &v218[v219[10]];
        *(void *)uint64_t v240 = 0x4044F051EB851EB8;
        v240[8] = 0;
        v241 = &v218[v219[11]];
        *(void *)v241 = 0x4055E92CCF6BE37ELL;
        v241[8] = 0;
        *(_OWORD *)&v218[v219[12]] = xmmword_1006D8770;
        *(_OWORD *)&v218[v219[13]] = xmmword_1006D8770;
        v218[v219[14]] = 0;
        unint64_t v242 = &v218[v219[15]];
        *(void *)unint64_t v242 = 0;
        v242[8] = 0;
        int v243 = &v218[v219[16]];
        *(void *)int v243 = 0x7FEFFFFFFFFFFFFFLL;
        v243[8] = 0;
        sub_100010218(&qword_10080F280);
        uint64_t v244 = *(void *)(v372 + 72);
        unint64_t v245 = (*(unsigned __int8 *)(v372 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v372 + 80);
        uint64_t v246 = swift_allocObject();
        *(_OWORD *)(v246 + 16) = xmmword_1006D70D0;
        uint64_t v247 = v246 + v245;
        sub_1003CC8F4((uint64_t)v215, v247, _s10VisitAssetC9VisitDataVMa);
        sub_1003CC8F4(v216, v247 + v244, _s10VisitAssetC9VisitDataVMa);
        sub_1003CC8F4((uint64_t)v217, v247 + 2 * v244, _s10VisitAssetC9VisitDataVMa);
        uint64_t v1 = (uint64_t)v384;
        sub_1003CC8F4((uint64_t)v218, v247 + 3 * v244, _s10VisitAssetC9VisitDataVMa);
        sub_1000C8C00(v246);
        unint64_t v15 = sub_1000407C0(9, (uint64_t)_swiftEmptyArrayStorage);
        sub_1003CCA2C((uint64_t)v218, _s10VisitAssetC9VisitDataVMa);
        sub_1003CCA2C((uint64_t)v217, _s10VisitAssetC9VisitDataVMa);
        sub_1003CCA2C(v216, _s10VisitAssetC9VisitDataVMa);
        uint64_t v248 = (uint64_t)v215;
        goto LABEL_114;
      case 9:
        uint64_t v249 = *(char **)(v1 + 832);
        uint64_t v250 = *(void *)(v1 + 824);
        uint64_t v251 = v384[100];
        unint64_t v252 = (int *)v384[99];
        uint64_t v253 = v384[98];
        uint64_t v367 = v250;
        uint64_t v370 = v384[97];
        uint64_t v254 = v384[96];
        uint64_t v373 = v384[95];
        uint64_t v255 = v384[94];
        uint64_t v378 = v384[93];
        uint64_t v256 = v384[81];
        uint64_t v257 = v384[80];
        uint64_t v258 = swift_allocObject();
        *(_OWORD *)(v258 + 16) = xmmword_1006D6280;
        *(void *)(v258 + 56) = &type metadata for String;
        *(void *)(v258 + 32) = 0xD000000000000017;
        *(void *)(v258 + 40) = 0x800000010069B5A0;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        uint64_t v259 = &v249[v252[7]];
        Date.init()();
        uint64_t v260 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v256 + 56);
        v260(v259, 0, 1, v257);
        v260(&v249[v252[8]], 1, 1, v257);
        v260(&v249[v252[9]], 1, 1, v257);
        *(_OWORD *)uint64_t v249 = xmmword_1006E63D0;
        *((_OWORD *)v249 + 1) = xmmword_1006E63E0;
        *((_OWORD *)v249 + 2) = xmmword_1006E63F0;
        uint64_t v261 = &v249[v252[10]];
        *(void *)uint64_t v261 = 0x40445BAA79BBADC1;
        v261[8] = 0;
        uint64_t v262 = &v249[v252[11]];
        *(void *)uint64_t v262 = 0x405280548A9BCFD5;
        v262[8] = 0;
        *(_OWORD *)&v249[v252[12]] = xmmword_1006D8770;
        *(_OWORD *)&v249[v252[13]] = xmmword_1006D8770;
        v249[v252[14]] = 0;
        uint64_t v263 = &v249[v252[15]];
        *(void *)uint64_t v263 = 0;
        v263[8] = 0;
        uint64_t v264 = &v249[v252[16]];
        *(void *)uint64_t v264 = 0x7FEFFFFFFFFFFFFFLL;
        v264[8] = 0;
        sub_1003CC8F4((uint64_t)v249, v367, _s10VisitAssetC9VisitDataVMa);
        UUID.init()();
        uint64_t v265 = (char *)objc_allocWithZone((Class)_s15GenericMapAssetCMa(0));
        *(void *)&v265[OBJC_IVAR____TtCC7Journal10Journaling15GenericMapAsset_metadata] = 0;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v254 + 16))(v370, v253, v373);
        uint64_t v266 = (char *)sub_1001817C4(v370, 9, 9);
        uint64_t v267 = v253;
        unint64_t v15 = v266;
        (*(void (**)(uint64_t, uint64_t))(v254 + 8))(v267, v373);
        sub_1003CC95C(v367, v255, _s10VisitAssetC9VisitDataVMa);
        (*(void (**)(uint64_t, void, uint64_t, int *))(v251 + 56))(v255, 0, 1, v252);
        uint64_t v1 = (uint64_t)v384;
        sub_1003CC95C(v255, v378, _s15GenericMapAssetC14GenericMapDataVMa);
        swift_storeEnumTagMultiPayload();
        sub_100010218(&qword_100803330);
        uint64_t v268 = swift_allocObject();
        uint64_t v269 = v268 + *(void *)(*(void *)v268 + 104);
        uint64_t v270 = sub_100010218(&qword_1007F9DB8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v270 - 8) + 56))(v269, 1, 1, v270);
        *(_OWORD *)(v268 + *(void *)(*(void *)v268 + 112)) = xmmword_1006D6A80;
        sub_1003CC9C4(v378, v268 + *(void *)(*(void *)v268 + 120));
        *(void *)&v15[OBJC_IVAR____TtCC7Journal10Journaling15GenericMapAsset_metadata] = v268;
        swift_release();
        uint64_t v248 = (uint64_t)v249;
LABEL_114:
        sub_1003CCA2C(v248, _s10VisitAssetC9VisitDataVMa);
        goto LABEL_8;
      case 0xA:
        uint64_t v109 = *(void *)(v1 + 992);
        uint64_t v110 = *(void *)(v1 + 984);
        uint64_t v111 = *(void *)(v1 + 848);
        uint64_t v112 = *(void *)(v1 + 840);
        id v113 = [objc_allocWithZone((Class)LPLinkMetadata) init];
        URL.init(string:)();
        sub_100052E44(v109, v110);
        uint64_t v362 = *(void *)(v111 + 48);
        uint64_t v375 = v16;
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v362)(v110, 1, v112) == 1)
        {
          unint64_t v115 = 0;
        }
        else
        {
          uint64_t v116 = *(void *)(v1 + 984);
          id v117 = v113;
          uint64_t v118 = *(void *)(v1 + 848);
          uint64_t v119 = *(void *)(v1 + 840);
          URL._bridgeToObjectiveC()(v114);
          unint64_t v115 = v120;
          (*(void (**)(uint64_t, uint64_t))(v118 + 8))(v116, v119);
          id v113 = v117;
        }
        uint64_t v121 = *(void *)(v1 + 976);
        uint64_t v122 = *(void *)(v1 + 840);
        [v113 setURL:v115];

        URL.init(string:)();
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v362)(v121, 1, v122) == 1)
        {
          __break(1u);
          JUMPOUT(0x1003C4784);
        }
        uint64_t v124 = *(void *)(v1 + 976);
        uint64_t v125 = *(void *)(v1 + 848);
        uint64_t v126 = *(void *)(v1 + 840);
        URL._bridgeToObjectiveC()(v123);
        id v128 = v127;
        NSString v129 = *(void (**)(uint64_t, uint64_t))(v125 + 8);
        v129(v124, v126);
        [v113 setOriginalURL:v128];

        *(void *)(v1 + 344) = 0x20656C707041;
        *(void *)(v1 + 352) = 0xE600000000000000;
        *(void *)(v1 + 400) = 0;
        swift_stdlib_random();
        unint64_t v130 = *(void *)(v1 + 400);
        uint64_t v360 = v125 + 8;
        v354 = v129;
        if (((100 * v130) & 0xFFFFFFFFFFFFFFF0) == 0)
        {
          do
          {
            *uint64_t v48 = 0;
            swift_stdlib_random();
            unint64_t v130 = *v48;
          }
          while (((100 * *v48) & 0xFFFFFFFFFFFFFFF0) == 0);
        }
        uint64_t v131 = *(void *)(v1 + 992);
        uint64_t v132 = *(void *)(v1 + 968);
        uint64_t v133 = *(void *)(v1 + 840);
        *(void *)(v1 + 408) = (v130 * (unsigned __int128)0x64uLL) >> 64;
        v134._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v134);
        swift_bridgeObjectRelease();
        NSString v135 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v113 setTitle:v135];

        sub_100052E44(v131, v132);
        int v136 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v362)(v132, 1, v133);
        uint64_t v137 = *(void *)(v1 + 992);
        uint64_t v138 = *(void *)(v1 + 968);
        uint64_t v139 = v113;
        if (v136 == 1)
        {
          unint64_t v2 = (unint64_t)&unk_100800A60;
          sub_10001457C(*(void *)(v1 + 992), (uint64_t *)&unk_100800A60);

          sub_10001457C(v138, (uint64_t *)&unk_100800A60);
          uint64_t v50 = v361;
LABEL_77:
          uint64_t v52 = v369;
          uint64_t v51 = v371;
          uint64_t v53 = v366;
          uint64_t v16 = v375;
          goto LABEL_27;
        }
        uint64_t v304 = *(void *)(v1 + 952);
        uint64_t v305 = *(void *)(v1 + 864);
        uint64_t v306 = *(void *)(v1 + 856);
        uint64_t v307 = *(void *)(v1 + 848);
        uint64_t v308 = *(void *)(v1 + 840);
        uint64_t v309 = *(void *)(v1 + 648);
        uint64_t v310 = v384[80];
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v307 + 32))(v306, v138, v308);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v307 + 16))(v305, v306, v308);
        Date.init()();
        uint64_t v311 = v310;
        uint64_t v1 = (uint64_t)v384;
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v309 + 56))(v304, 0, 1, v311);
        unint64_t v15 = (char *)sub_1000D575C(9, v305, v304);

        v354(v306, v308);
        sub_10001457C(v137, (uint64_t *)&unk_100800A60);
        goto LABEL_8;
      case 0xB:
        uint64_t v205 = swift_task_alloc();
        *(void *)(v1 + 1344) = v205;
        *(void *)(v205 + 16) = 1;
        id v271 = (void *)swift_task_alloc();
        *(void *)(v1 + 1352) = v271;
        uint64_t v272 = sub_100010218(&qword_10080B9A0);
        *id v271 = v1;
        v271[1] = sub_1003C7D54;
        uint64_t v208 = (char *)v272;
        uint64_t v211 = (void *)(v1 + 376);
        unint64_t v209 = 0x800000010069B470;
        uint64_t v273 = sub_1003CCDB4;
        goto LABEL_127;
      case 0xC:
        uint64_t v205 = swift_task_alloc();
        *(void *)(v1 + 1360) = v205;
        *(void *)(v205 + 16) = 1;
        id v274 = (void *)swift_task_alloc();
        *(void *)(v1 + 1368) = v274;
        uint64_t v275 = sub_100010218(&qword_10080B9A0);
        *id v274 = v1;
        v274[1] = sub_1003C81F8;
        uint64_t v208 = (char *)v275;
        uint64_t v211 = (void *)(v1 + 392);
        unint64_t v209 = 0x800000010069B470;
        uint64_t v273 = sub_1003CCDB4;
        goto LABEL_127;
      case 0xD:
        uint64_t v276 = sub_1003CC624(v61, -90.0, 90.0);
        double v278 = v277;
        sub_1003CC624(v276, -180.0, 180.0);
        double v280 = v279;
        void *v353 = _swiftEmptyArrayStorage;
        uint64_t v281 = sub_100498D40(0x1EBuLL);
        if (v281 + 10 < 1) {
          goto LABEL_149;
        }
        uint64_t v282 = v281;
        uint64_t v283 = -9;
        while (1)
        {
          uint64_t v284 = sub_1003CC624(v281, -0.01, 0.01);
          double v278 = v278 + v285;
          sub_1003CC624(v284, -0.01, 0.01);
          double v280 = v280 + v286;
          [objc_allocWithZone((Class)CLLocation) initWithLatitude:v278 longitude:v280];
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v353 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v353 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          uint64_t v281 = specialized Array._endMutation()();
          if (v282 == v283) {
            break;
          }
          uint64_t v287 = v283 + 10;
          ++v283;
          if (__OFADD__(v287, 1))
          {
            __break(1u);
            goto LABEL_146;
          }
        }
        uint64_t v292 = *(void *)(v1 + 936);
        uint64_t v293 = *(void *)(v1 + 928);
        uint64_t v294 = *(void *)(v1 + 672);
        uint64_t v295 = *(void *)(v1 + 664);
        uint64_t v296 = *(void *)(v1 + 648);
        uint64_t v297 = *(void *)(v1 + 640);
        unint64_t v381 = *(void *)(v1 + 424);
        Date.init()();
        Date.addingTimeInterval(_:)();
        uint64_t v298 = *(void (**)(uint64_t, uint64_t))(v296 + 8);
        v298(v294, v297);
        uint64_t v299 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v296 + 56);
        v299(v292, 0, 1, v297);
        Date.init()();
        Date.addingTimeInterval(_:)();
        v298(v294, v297);
        sub_100498D40(0x20000000000001uLL);
        Date.addingTimeInterval(_:)();
        v298(v295, v297);
        uint64_t v1 = (uint64_t)v384;
        v299(v293, 0, 1, v297);
        unint64_t v300 = sub_100498D40(0x20000000000001uLL);
        unint64_t v301 = sub_100498D40(0x20000000000001uLL);
        double v302 = (double)v301 * 1.11022302e-16 * 700.0 + 100.0;
        double v303 = 160.0;
        if (v300 != 0x20000000000000) {
          double v303 = (double)v300 * 1.11022302e-16 * 80.0 + 80.0;
        }
        if (v301 == 0x20000000000000) {
          double v302 = 800.0;
        }
        unint64_t v15 = sub_1004AC7E0(9, v381, 7238994, 0xE300000000000000, 0, 1, v292, v293, *(uint64_t *)&v303, 0, *(uint64_t *)&v302, 0, 0, 0, 0, 0);
        goto LABEL_8;
      case 0xF:
        unint64_t v15 = sub_10008F704(9, 0, 0);
        goto LABEL_8;
      case 0x10:
        uint64_t v205 = swift_task_alloc();
        *(void *)(v1 + 1376) = v205;
        *(void *)(v205 + 16) = 1;
        uint64_t v288 = (void *)swift_task_alloc();
        *(void *)(v1 + 1384) = v288;
        uint64_t v289 = sub_100010218(&qword_10080B9A0);
        void *v288 = v1;
        v288[1] = sub_1003C8690;
        uint64_t v208 = (char *)v289;
        uint64_t v211 = (void *)(v1 + 464);
        unint64_t v209 = 0x800000010069B470;
        uint64_t v273 = sub_1003CC8A8;
LABEL_127:
        uint64_t v210 = v273;
        goto LABEL_128;
      default:
        uint64_t v204 = swift_allocObject();
        *(_OWORD *)(v204 + 16) = xmmword_1006D6280;
        *(void *)(v204 + 56) = &type metadata for String;
        *(void *)(v204 + 32) = 0xD000000000000013;
        *(void *)(v204 + 40) = 0x800000010069B820;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        uint64_t v205 = swift_task_alloc();
        *(void *)(v1 + 1272) = v205;
        *(void *)(v205 + 16) = 1;
        v206 = (void *)swift_task_alloc();
        *(void *)(v1 + 1280) = v206;
        uint64_t v207 = sub_100010218(&qword_10080B9A0);
        void *v206 = v1;
        v206[1] = sub_1003C1490;
        uint64_t v208 = (char *)v207;
        unint64_t v209 = 0x800000010069B470;
        uint64_t v210 = sub_1003CCDB4;
        uint64_t v211 = v352;
LABEL_128:
        unint64_t v290 = 0xD000000000000024;
        uint64_t v291 = (void *)v205;
        goto LABEL_137;
    }
  }
}

uint64_t sub_1003C47D8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1003C491C, 0, 0);
}

uint64_t sub_1003C491C()
{
  swift_bridgeObjectRelease();
  uint64_t isUniquelyReferenced_nonNull_native = sub_100498D40(0x28uLL);
  uint64_t v2 = isUniquelyReferenced_nonNull_native + 10;
  if (isUniquelyReferenced_nonNull_native + 10 < 0)
  {
    __break(1u);
LABEL_13:
    swift_once();
    goto LABEL_9;
  }
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (isUniquelyReferenced_nonNull_native != -10)
  {
    do
    {
      sub_1003CC624(isUniquelyReferenced_nonNull_native, -1.0, 1.0);
      double v5 = v4;
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1002A5898(0, *((void *)v3 + 2) + 1, 1, v3);
        uint64_t v3 = (double *)isUniquelyReferenced_nonNull_native;
      }
      unint64_t v7 = *((void *)v3 + 2);
      unint64_t v6 = *((void *)v3 + 3);
      if (v7 >= v6 >> 1)
      {
        uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_1002A5898((double *)(v6 > 1), v7 + 1, 1, v3);
        uint64_t v3 = (double *)isUniquelyReferenced_nonNull_native;
      }
      *((void *)v3 + 2) = v7 + 1;
      v3[v7 + 4] = v5;
      --v2;
    }
    while (v2);
  }
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v0 + 1288);
  uint64_t v9 = *(void *)(v0 + 1016);
  uint64_t v10 = *(void *)(v0 + 880);
  uint64_t v11 = *(void *)(v0 + 848);
  uint64_t v12 = *(void *)(v0 + 840);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v9, v10, v12);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v12);
  id v13 = sub_10010F95C(9, v9, 0, 1, (uint64_t)v3, 0);
  v8(v10, v12);
  *(void *)(v0 + 1400) = v13;
  *(void *)(v0 + 1392) = v13;
  uint64_t v14 = *(void *)(v0 + 1264);
  uint64_t v15 = *(void *)(v0 + 584);
  uint64_t v16 = *(void *)(v0 + 576);
  uint64_t v17 = v13;
  *(void *)(v0 + 296) = v16;
  *(void *)(v0 + 304) = v15;
  swift_bridgeObjectRetain();
  v18._countAndFlagsBits = 0x20746573734120;
  v18._object = (void *)0xE700000000000000;
  String.append(_:)(v18);
  *(void *)(v0 + 456) = v14;
  v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  id v20 = objc_allocWithZone((Class)NSAttributedString);
  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [v20 initWithString:v21];

  swift_bridgeObjectRelease();
  Swift::String v23 = *(void **)&v17[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title];
  *(void *)&v17[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title] = v22;

  if (qword_1007F7CE0 != -1) {
    goto LABEL_13;
  }
LABEL_9:
  uint64_t v24 = qword_10083EA18;
  *(void *)(v0 + 1408) = qword_10083EA18;
  return _swift_task_switch(sub_1003C8B64, v24, 0);
}

uint64_t sub_1003C4C20()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1003C4D48, 0, 0);
}

uint64_t sub_1003C4D48()
{
  uint64_t v1 = *(void *)(v0 + 688);
  uint64_t v2 = *(void *)(v0 + 680);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 696) + 48))(v2, 1, v1) != 1)
  {
    uint64_t v9 = *(void *)(v0 + 1016);
    uint64_t v10 = *(void *)(v0 + 952);
    uint64_t v11 = *(void *)(v0 + 848);
    uint64_t v12 = *(void *)(v0 + 840);
    id v13 = *(char **)(v0 + 704);
    uint64_t v14 = *(void *)(v0 + 648);
    uint64_t v344 = *(void *)(v0 + 640);
    sub_1003CC95C(v2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for RandomVideoAssetGenerator.VideoAsset);
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 16))(v9, &v13[*(int *)(v1 + 24)], v12);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v9, 0, 1, v12);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56))(v10, 1, 1, v344);
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    *(unsigned char *)(v0 + 88) = 1;
    uint64_t v15 = (char *)sub_10011C880(9, v9, 0, 0, 0, v10, 0, 0, 0, 1, 0, 1u, 0, 0, 1u, v0 + 56, v0 + 56, v0 + 56);
    uint64_t v16 = (uint64_t (*)(uint64_t))type metadata accessor for RandomVideoAssetGenerator.VideoAsset;
LABEL_7:
    uint64_t v17 = v16;
    uint64_t v18 = (uint64_t)v13;
LABEL_8:
    sub_1003CCA2C(v18, v17);
    goto LABEL_9;
  }
  sub_10001457C(v2, &qword_10080B998);
  uint64_t v3 = *(void *)(v0 + 1264) + 1;
  if (v3 == *(void *)(v0 + 600))
  {
LABEL_3:
    double v4 = *(void **)(v0 + 1248);
    double v5 = *(void **)(v0 + 1240);
    swift_release();

    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v6 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v7 = *(void *)(v0 + 1192);
    return v6(v7);
  }
  unint64_t v325 = (unint64_t *)(v0 + 416);
  NSString v320 = (void *)(v0 + 424);
  uint64_t v340 = (void *)(v0 + 432);
  unint64_t v30 = (void *)(v0 + 480);
  uint64_t v31 = v0 + 496;
  uint64_t v32 = (void *)(v0 + 504);
  uint64_t v323 = (void *)(v0 + 512);
  uint64_t v324 = (void *)(v0 + 488);
  unint64_t v33 = v0 + 528;
  unint64_t v322 = (void *)(v0 + 536);
  id v321 = (void *)(v0 + 552);
  unint64_t v34 = *(void *)(v0 + 1256);
  while (1)
  {
    *(void *)(v0 + 1264) = v3;
    *(void *)(v0 + 1256) = v34;
    unint64_t v35 = *(void *)(v0 + 1208);
    *(void *)(v0 + 496) = 0;
    uint64_t v36 = swift_stdlib_random();
    unint64_t v37 = *(void *)(v0 + 496);
    uint64_t v38 = (v37 * (unsigned __int128)v35) >> 64;
    unint64_t v39 = v37 * v35;
    unint64_t v40 = *(void *)(v0 + 1208);
    if (v35 > v39)
    {
      unint64_t v35 = -(uint64_t)v40 % v40;
      if (v35 > v39)
      {
        do
        {
          unint64_t v41 = *(void *)(v0 + 1208);
          *(void *)(v0 + 568) = 0;
          uint64_t v36 = swift_stdlib_random();
          unint64_t v42 = *(void *)(v0 + 568);
        }
        while (v35 > v42 * v41);
        uint64_t v38 = (v42 * (unsigned __int128)v41) >> 64;
        unint64_t v40 = *(void *)(v0 + 1208);
      }
    }
    if (v38 >= (uint64_t)v40)
    {
LABEL_132:
      __break(1u);
LABEL_133:
      uint64_t v299 = *(void *)(v0 + 1016);
      uint64_t v300 = v33;
      uint64_t v301 = *(void *)(v0 + 952);
      uint64_t v342 = *(void *)(v0 + 904);
      unint64_t v334 = v34;
      uint64_t v302 = *(void *)(v0 + 848);
      uint64_t v303 = *(void *)(v0 + 840);
      uint64_t v304 = *(void *)(v0 + 648);
      uint64_t v305 = *(void *)(v0 + 640);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v302 + 56))(v299, 1, 1, v303);
      id v306 = (id)v35;
      Date.init()();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v304 + 56))(v301, 0, 1, v305);
      uint64_t v15 = sub_1000B1130(9, v336, v300, v299, (void *)v35, 0x7472412074736554, 0xEB00000000747369, 0x6E6F532074736554, 0xE900000000000067, 0x626C412074736554, 0xEA00000000006D75, 1, 0, v301, 0);

      sub_100040DD0(v343, v334);
      (*(void (**)(uint64_t, uint64_t))(v302 + 8))(v342, v303);
      goto LABEL_9;
    }
    switch(*(unsigned char *)(*(void *)(v0 + 592) + v38 + 32))
    {
      case 1:
      case 7:
      case 0xE:
      case 0x11:
      case 0x12:
      case 0x13:
      case 0x14:
        goto LABEL_17;
      case 2:
        uint64_t v195 = swift_allocObject();
        *(_OWORD *)(v195 + 16) = xmmword_1006D6280;
        *(void *)(v195 + 56) = &type metadata for String;
        *(void *)(v195 + 32) = 0xD000000000000013;
        *(void *)(v195 + 40) = 0x800000010069B4F0;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        uint64_t v196 = (void *)swift_task_alloc();
        *(void *)(v0 + 1336) = v196;
        *uint64_t v196 = v0;
        v196[1] = sub_1003C4C20;
        uint64_t v197 = *(void *)(v0 + 680);
        return sub_100497ECC(v197);
      case 3:
        uint64_t v343 = v34;
        uint64_t v43 = *(void *)(v0 + 1232);
        uint64_t v44 = swift_allocObject();
        *(_OWORD *)(v44 + 16) = xmmword_1006D6280;
        *(void *)(v44 + 56) = &type metadata for String;
        *(void *)(v44 + 32) = 0xD000000000000012;
        *(void *)(v44 + 40) = 0x800000010069B770;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        unint64_t v45 = *(void *)(*(void *)(v43 + 16) + 16);
        if (v45)
        {
          *unint64_t v322 = 0;
          swift_stdlib_random();
          unint64_t v46 = *v322 * v45;
          int64_t v47 = ((unint64_t)*v322 * (unsigned __int128)v45) >> 64;
          if (v45 > v46)
          {
            unint64_t v48 = -(uint64_t)v45 % v45;
            if (v48 > v46)
            {
              do
              {
                *id v321 = 0;
                swift_stdlib_random();
              }
              while (v48 > *v321 * v45);
              int64_t v47 = ((unint64_t)*v321 * (unsigned __int128)v45) >> 64;
            }
          }
          uint64_t v49 = *(void *)(*(void *)(v0 + 1232) + 16);
          if (v47 >= *(void *)(v49 + 16))
          {
LABEL_136:
            __break(1u);
LABEL_137:
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
          }
          uint64_t v50 = v49 + 32 * v47;
          unint64_t v33 = *(void *)(v50 + 40);
          unint64_t v336 = *(void *)(v50 + 32);
          swift_beginAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10035FD28(v47);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v336 = 0x3334363139343137;
          unint64_t v33 = 0xE900000000000034;
        }
        uint64_t v115 = *(void *)(v0 + 1024);
        uint64_t v116 = *(void *)(v0 + 848);
        uint64_t v117 = *(void *)(v0 + 840);
        URL.init(string:)();
        int v118 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v116 + 48))(v115, 1, v117);
        uint64_t v119 = *(void *)(v0 + 1024);
        if (v118 == 1) {
          goto LABEL_15;
        }
        (*(void (**)(void, void, void))(*(void *)(v0 + 848) + 32))(*(void *)(v0 + 904), *(void *)(v0 + 1024), *(void *)(v0 + 840));
        uint64_t v120 = Data.init(contentsOf:options:)();
        if (v343)
        {
          uint64_t v122 = *(void *)(v0 + 904);
          uint64_t v123 = *(void *)(v0 + 848);
          uint64_t v124 = *(void *)(v0 + 840);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          (*(void (**)(uint64_t, uint64_t))(v123 + 8))(v122, v124);
          goto LABEL_99;
        }
        uint64_t v175 = v120;
        unint64_t v34 = v121;
        id v346 = objc_allocWithZone((Class)UIImage);
        sub_100040D64(v175, v34);
        Class isa = Data._bridgeToObjectiveC()().super.isa;
        id v329 = [v346 initWithData:isa];
        uint64_t v343 = v175;
        sub_100040DD0(v175, v34);

        unint64_t v35 = (unint64_t)v329;
        if (v329) {
          goto LABEL_133;
        }
        (*(void (**)(void, void))(*(void *)(v0 + 848) + 8))(*(void *)(v0 + 904), *(void *)(v0 + 840));
        uint64_t v177 = v175;
        goto LABEL_95;
      case 4:
        uint64_t v343 = v34;
        uint64_t v51 = *(void *)(v0 + 1232);
        uint64_t v52 = swift_allocObject();
        *(_OWORD *)(v52 + 16) = xmmword_1006D6280;
        *(void *)(v52 + 56) = &type metadata for String;
        *(void *)(v52 + 32) = 0xD000000000000015;
        *(void *)(v52 + 40) = 0x800000010069B6B0;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        unint64_t v53 = *(void *)(*(void *)(v51 + 24) + 16);
        if (v53)
        {
          *uint64_t v323 = 0;
          swift_stdlib_random();
          unint64_t v54 = *v323 * v53;
          int64_t v55 = ((unint64_t)*v323 * (unsigned __int128)v53) >> 64;
          if (v53 > v54)
          {
            unint64_t v56 = -(uint64_t)v53 % v53;
            if (v56 > v54)
            {
              do
              {
                *(void *)unint64_t v33 = 0;
                swift_stdlib_random();
              }
              while (v56 > *(void *)v33 * v53);
              int64_t v55 = (*(unint64_t *)v33 * (unsigned __int128)v53) >> 64;
            }
          }
          uint64_t v57 = *(void *)(*(void *)(v0 + 1232) + 24);
          if (v55 >= *(void *)(v57 + 16)) {
            goto LABEL_137;
          }
          uint64_t v58 = v57 + 32 * v55;
          unint64_t v59 = *(void *)(v58 + 40);
          unint64_t v336 = *(void *)(v58 + 32);
          swift_beginAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10035FD28(v55);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v59 = 0xEA00000000003130;
          unint64_t v336 = 0x3237353736393331;
        }
        uint64_t v125 = *(void *)(v0 + 1008);
        uint64_t v126 = *(void *)(v0 + 848);
        uint64_t v127 = *(void *)(v0 + 840);
        URL.init(string:)();
        int v128 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v126 + 48))(v125, 1, v127);
        uint64_t v119 = *(void *)(v0 + 1008);
        if (v128 != 1)
        {
          (*(void (**)(void, void, void))(*(void *)(v0 + 848) + 32))(*(void *)(v0 + 896), *(void *)(v0 + 1008), *(void *)(v0 + 840));
          uint64_t v129 = Data.init(contentsOf:options:)();
          if (v343)
          {
            uint64_t v131 = *(void *)(v0 + 896);
            uint64_t v132 = *(void *)(v0 + 848);
            uint64_t v133 = *(void *)(v0 + 840);
            goto LABEL_70;
          }
          uint64_t v178 = v129;
          unint64_t v34 = v130;
          id v179 = objc_allocWithZone((Class)UIImage);
          sub_100040D64(v178, v34);
          Class v180 = Data._bridgeToObjectiveC()().super.isa;
          id v181 = [v179 initWithData:v180];
          sub_100040DD0(v178, v34);

          if (!v181)
          {
            (*(void (**)(void, void))(*(void *)(v0 + 848) + 8))(*(void *)(v0 + 896), *(void *)(v0 + 840));
            uint64_t v177 = v178;
LABEL_95:
            sub_100040DD0(v177, v34);
LABEL_98:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_99:
            unint64_t v34 = 0;
LABEL_100:
            unint64_t v33 = v0 + 528;
            goto LABEL_17;
          }
          uint64_t v333 = *(void *)(v0 + 1016);
          uint64_t v335 = v59;
          uint64_t v307 = *(void *)(v0 + 952);
          uint64_t v308 = *(void *)(v0 + 896);
          uint64_t v309 = *(void *)(v0 + 848);
          uint64_t v310 = *(void *)(v0 + 840);
          uint64_t v311 = *(void *)(v0 + 648);
          unint64_t v349 = v34;
          uint64_t v312 = *(void *)(v0 + 640);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v309 + 16))(v333, v308, v310);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v309 + 56))(v333, 0, 1, v310);
          Date.init()();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v311 + 56))(v307, 0, 1, v312);
          uint64_t v15 = sub_1003935AC(9, v336, v335, v181, 0x7469742074736554, 0xEA0000000000656CLL, v333, 0x7475412074736554, 0xEB00000000726F68, v307, 0, 0, 2u);
          sub_100040DD0(v178, v349);
          (*(void (**)(uint64_t, uint64_t))(v309 + 8))(v308, v310);
LABEL_9:
          *(void *)(v0 + 1400) = v15;
          *(void *)(v0 + 1392) = v15;
          uint64_t v19 = *(void *)(v0 + 1264);
          uint64_t v20 = *(void *)(v0 + 584);
          uint64_t v21 = *(void *)(v0 + 576);
          id v22 = v15;
          *(void *)(v0 + 296) = v21;
          *(void *)(v0 + 304) = v20;
          swift_bridgeObjectRetain();
          v23._countAndFlagsBits = 0x20746573734120;
          v23._object = (void *)0xE700000000000000;
          String.append(_:)(v23);
          *(void *)(v0 + 456) = v19;
          v24._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v24);
          swift_bridgeObjectRelease();
          id v25 = objc_allocWithZone((Class)NSAttributedString);
          NSString v26 = String._bridgeToObjectiveC()();
          id v27 = [v25 initWithString:v26];

          swift_bridgeObjectRelease();
          uint64_t v28 = *(void **)&v22[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title];
          *(void *)&v22[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title] = v27;

          if (qword_1007F7CE0 != -1) {
            swift_once();
          }
          uint64_t v29 = qword_10083EA18;
          *(void *)(v0 + 1408) = qword_10083EA18;
          return _swift_task_switch(sub_1003C8B64, v29, 0);
        }
LABEL_15:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10001457C(v119, (uint64_t *)&unk_100800A60);
        break;
      case 5:
        uint64_t v343 = v34;
        uint64_t v60 = *(void *)(v0 + 1232);
        uint64_t v61 = swift_allocObject();
        *(_OWORD *)(v61 + 16) = xmmword_1006D6280;
        *(void *)(v61 + 56) = &type metadata for String;
        *(void *)(v61 + 32) = 0xD000000000000012;
        *(void *)(v61 + 40) = 0x800000010069B600;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        unint64_t v62 = *(void *)(*(void *)(v60 + 32) + 16);
        if (v62)
        {
          *uint64_t v324 = 0;
          swift_stdlib_random();
          unint64_t v63 = *v324 * v62;
          int64_t v64 = ((unint64_t)*v324 * (unsigned __int128)v62) >> 64;
          if (v62 <= v63 || (unint64_t v65 = -(uint64_t)v62 % v62, v65 <= v63))
          {
            unint64_t v66 = v32;
          }
          else
          {
            do
            {
              *uint64_t v32 = 0;
              swift_stdlib_random();
            }
            while (v65 > *v32 * v62);
            unint64_t v66 = v32;
            int64_t v64 = ((unint64_t)*v32 * (unsigned __int128)v62) >> 64;
          }
          uint64_t v111 = *(void *)(*(void *)(v0 + 1232) + 32);
          if (v64 >= *(void *)(v111 + 16)) {
            goto LABEL_138;
          }
          uint64_t v112 = v31;
          uint64_t v113 = v111 + 32 * v64;
          unint64_t v114 = *(void *)(v113 + 40);
          uint64_t v328 = *(void *)(v113 + 32);
          swift_beginAccess();
          unint64_t v336 = v114;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10035FD28(v64);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v31 = v112;
          uint64_t v32 = v66;
        }
        else
        {
          uint64_t v328 = 0x3134393933363531;
          unint64_t v336 = 0xEA00000000003030;
        }
        uint64_t v134 = *(void *)(v0 + 1000);
        uint64_t v135 = *(void *)(v0 + 848);
        uint64_t v136 = *(void *)(v0 + 840);
        URL.init(string:)();
        int v137 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v135 + 48))(v134, 1, v136);
        uint64_t v119 = *(void *)(v0 + 1000);
        if (v137 == 1) {
          goto LABEL_15;
        }
        (*(void (**)(void, void, void))(*(void *)(v0 + 848) + 32))(*(void *)(v0 + 888), *(void *)(v0 + 1000), *(void *)(v0 + 840));
        uint64_t v138 = Data.init(contentsOf:options:)();
        if (v343)
        {
          uint64_t v131 = *(void *)(v0 + 888);
          uint64_t v132 = *(void *)(v0 + 848);
          uint64_t v133 = *(void *)(v0 + 840);
LABEL_70:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          (*(void (**)(uint64_t, uint64_t))(v132 + 8))(v131, v133);
          goto LABEL_99;
        }
        uint64_t v182 = v138;
        unint64_t v183 = v139;
        id v184 = objc_allocWithZone((Class)UIImage);
        sub_100040D64(v182, v183);
        Class v185 = Data._bridgeToObjectiveC()().super.isa;
        id v186 = [v184 initWithData:v185];
        sub_100040DD0(v182, v183);

        if (!v186)
        {
          (*(void (**)(void, void))(*(void *)(v0 + 848) + 8))(*(void *)(v0 + 888), *(void *)(v0 + 840));
          sub_100040DD0(v182, v183);
          goto LABEL_98;
        }
        unint64_t v313 = v183;
        uint64_t v314 = *(void *)(v0 + 952);
        uint64_t v350 = *(void *)(v0 + 888);
        uint64_t v315 = *(void *)(v0 + 848);
        uint64_t v316 = *(void *)(v0 + 840);
        uint64_t v317 = *(void *)(v0 + 648);
        uint64_t v318 = *(void *)(v0 + 640);
        swift_bridgeObjectRelease();
        id v319 = v186;
        Date.init()();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v317 + 56))(v314, 0, 1, v318);
        uint64_t v15 = sub_100048FB8(9, v328, v336, 0x7469742074736554, 0xEA0000000000656CLL, v186, 0x7475412074736554, 0xEB00000000726F68, v314);

        sub_100040DD0(v182, v313);
        (*(void (**)(uint64_t, uint64_t))(v315 + 8))(v350, v316);
        goto LABEL_9;
      case 6:
        uint64_t v67 = *(void *)(v0 + 784);
        uint64_t v68 = *(void *)(v0 + 768);
        uint64_t v69 = *(void *)(v0 + 760);
        uint64_t v70 = swift_allocObject();
        *(_OWORD *)(v70 + 16) = xmmword_1006D6280;
        *(void *)(v70 + 56) = &type metadata for String;
        *(void *)(v70 + 32) = 0xD000000000000012;
        *(void *)(v70 + 40) = 0x800000010069B510;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        UUID.init()();
        uint64_t v71 = UUID.uuidString.getter();
        uint64_t v73 = v72;
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v67, v69);
        if (qword_1007F6EF8 != -1) {
          swift_once();
        }
        if (qword_10083D468)
        {
          uint64_t v74 = *(unsigned int *)(v0 + 132);
          uint64_t v345 = v73;
          uint64_t v75 = *(void *)(v0 + 864);
          uint64_t v76 = *(void *)(v0 + 848);
          uint64_t v337 = *(void *)(v0 + 840);
          uint64_t v77 = *(void *)(v0 + 728);
          uint64_t v78 = v71;
          uint64_t v79 = *(void *)(v0 + 720);
          uint64_t v80 = *(void *)(v0 + 712);
          sub_1004FD498(qword_10083D460, (void *)qword_10083D468, v75);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v79 + 104))(v77, v74, v80);
          sub_100014344();
          URL.appending<A>(components:directoryHint:)();
          (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v77, v80);
          uint64_t v71 = v78;
          uint64_t v81 = v75;
          uint64_t v73 = v345;
          (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v81, v337);
        }
        else
        {
          static URL.temporaryDirectory.getter();
        }
        uint64_t v140 = *(void *)(v0 + 872);
        uint64_t v141 = *(void *)(v0 + 848);
        uint64_t v142 = *(void *)(v0 + 840);
        *(void *)(v0 + 328) = v71;
        *(void *)(v0 + 336) = v73;
        v143._countAndFlagsBits = 1717658414;
        v143._object = (void *)0xE400000000000000;
        String.append(_:)(v143);
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        int v144 = *(void (**)(uint64_t, uint64_t))(v141 + 8);
        *(void *)(v0 + 1288) = v144;
        *(void *)(v0 + 1296) = (v141 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        uint64_t v327 = v144;
        v144(v140, v142);
        if (qword_1007F6F30 != -1) {
          swift_once();
        }
        unint64_t v35 = qword_10083D4B8;
        unint64_t v34 = *(void *)(qword_10083D4B8 + 16);
        unint64_t v336 = -(uint64_t)v34;
        uint64_t v343 = qword_10083D4B8 + 32;
        unint64_t v33 = 1;
        uint64_t v145 = (char *)_swiftEmptyArrayStorage;
        do
        {
          if (v34)
          {
            *uint64_t v340 = 0;
            swift_bridgeObjectRetain();
            swift_stdlib_random();
            int64_t v146 = ((unint64_t)*v340 * (unsigned __int128)v34) >> 64;
            unint64_t v147 = *v340 * v34;
            if (v34 > v147 && v336 % v34 > v147)
            {
              do
              {
                *unint64_t v30 = 0;
                swift_stdlib_random();
              }
              while (v336 % v34 > *v30 * v34);
              int64_t v146 = ((unint64_t)*v30 * (unsigned __int128)v34) >> 64;
            }
            if (v146 >= (uint64_t)v34)
            {
              __break(1u);
              goto LABEL_132;
            }
            uint64_t v148 = (uint64_t *)(v343 + 16 * v146);
            uint64_t v150 = *v148;
            unint64_t v149 = v148[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v150 = 0;
            unint64_t v149 = 0xE000000000000000;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v145 = sub_1002A54A0(0, *((void *)v145 + 2) + 1, 1, v145);
          }
          unint64_t v152 = *((void *)v145 + 2);
          unint64_t v151 = *((void *)v145 + 3);
          if (v152 >= v151 >> 1) {
            uint64_t v145 = sub_1002A54A0((char *)(v151 > 1), v152 + 1, 1, v145);
          }
          ++v33;
          *((void *)v145 + 2) = v152 + 1;
          uint64_t v153 = &v145[16 * v152];
          *((void *)v153 + 4) = v150;
          *((void *)v153 + 5) = v149;
        }
        while (v33 != 5);
        *(void *)(v0 + 440) = v145;
        sub_100010218(&qword_100800A70);
        sub_1000245BC();
        BidirectionalCollection<>.joined(separator:)();
        uint64_t v155 = v154;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 1304) = v155;
        v156 = self;
        id v157 = [v156 defaultManager];
        URL.absoluteString.getter();
        NSString v158 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        unsigned __int8 v159 = [v157 fileExistsAtPath:v158];

        if ((v159 & 1) == 0) {
          goto LABEL_127;
        }
        id v160 = [v156 defaultManager];
        URL._bridgeToObjectiveC()(v161);
        uint64_t v163 = v162;
        *(void *)(v0 + 448) = 0;
        unsigned int v164 = [v160 removeItemAtURL:v162 error:v0 + 448];

        unint64_t v165 = *(void **)(v0 + 448);
        if (!v164)
        {
          uint64_t v166 = *(void *)(v0 + 880);
          uint64_t v167 = *(void *)(v0 + 840);
          id v168 = v165;
          swift_bridgeObjectRelease();
          uint64_t v169 = _convertNSErrorToError(_:)();

          swift_willThrow();
          uint64_t v170 = swift_allocObject();
          *(_OWORD *)(v170 + 16) = xmmword_1006D6280;
          *(void *)(v0 + 280) = 0;
          *(void *)(v0 + 288) = 0xE000000000000000;
          _StringGuts.grow(_:)(28);
          uint64_t v171 = *(void *)(v0 + 288);
          *(void *)(v0 + 312) = *(void *)(v0 + 280);
          *(void *)(v0 + 320) = v171;
          v172._countAndFlagsBits = 0x100000000000001ALL;
          v172._object = (void *)0x800000010069B580;
          String.append(_:)(v172);
          *(void *)(v0 + 472) = v169;
          sub_100010218((uint64_t *)&unk_1007FC0D0);
          _print_unlocked<A, B>(_:_:)();
          uint64_t v173 = *(void *)(v0 + 312);
          uint64_t v174 = *(void *)(v0 + 320);
          *(void *)(v170 + 56) = &type metadata for String;
          *(void *)(v170 + 32) = v173;
          *(void *)(v170 + 40) = v174;
          print(_:separator:terminator:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          v327(v166, v167);
          unint64_t v34 = 0;
          uint64_t v32 = (void *)(v0 + 504);
          uint64_t v31 = v0 + 496;
          goto LABEL_100;
        }
        id v288 = v165;
LABEL_127:
        uint64_t v289 = *(void *)(v0 + 1248);
        uint64_t v290 = *(void *)(v0 + 880);
        id v291 = objc_allocWithZone((Class)AVSpeechUtterance);
        swift_bridgeObjectRetain();
        NSString v292 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v293 = [v291 initWithString:v292];
        *(void *)(v0 + 1312) = v293;

        LODWORD(v294) = 0.5;
        [v293 setRate:v294];
        LODWORD(v295) = 1.0;
        [v293 setVolume:v295];
        NSString v296 = String._bridgeToObjectiveC()();
        id v297 = [self voiceWithIdentifier:v296];

        [v293 setVoice:v297];
        uint64_t v298 = (void *)swift_task_alloc();
        *(void *)(v0 + 1320) = v298;
        v298[2] = v289;
        v298[3] = v293;
        v298[4] = v290;
        uint64_t v192 = (void *)swift_task_alloc();
        *(void *)(v0 + 1328) = v192;
        *uint64_t v192 = v0;
        v192[1] = sub_1003C47D8;
        unint64_t v267 = 0xD00000000000001ALL;
        Swift::String v191 = (char *)&type metadata for () + 8;
        unint64_t v193 = 0x800000010069B560;
        uint64_t v266 = sub_1003CC8E8;
        uint64_t v268 = v298;
LABEL_128:
        return withCheckedContinuation<A>(isolation:function:_:)(v192, 0, 0, v267, v193, v266, v268, v191);
      case 8:
        Class v198 = *(char **)(v0 + 832);
        uint64_t v199 = *(void *)(v0 + 824);
        uint64_t v200 = *(char **)(v0 + 816);
        id v201 = *(char **)(v0 + 808);
        uint64_t v338 = *(void *)(v0 + 800);
        Class v202 = *(int **)(v0 + 792);
        uint64_t v203 = *(void *)(v0 + 648);
        uint64_t v204 = *(void *)(v0 + 640);
        uint64_t v205 = swift_allocObject();
        *(_OWORD *)(v205 + 16) = xmmword_1006D6280;
        *(void *)(v205 + 56) = &type metadata for String;
        *(void *)(v205 + 32) = 0xD000000000000018;
        *(void *)(v205 + 40) = 0x800000010069B5C0;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        v206 = &v198[v202[7]];
        Date.init()();
        uint64_t v207 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v203 + 56);
        v207(v206, 0, 1, v204);
        v207(&v198[v202[8]], 1, 1, v204);
        v207(&v198[v202[9]], 1, 1, v204);
        *(_OWORD *)Class v198 = xmmword_1006E63D0;
        *((_OWORD *)v198 + 1) = xmmword_1006E63E0;
        *((_OWORD *)v198 + 2) = xmmword_1006E63F0;
        uint64_t v208 = &v198[v202[10]];
        *(void *)uint64_t v208 = 0x40445BAA79BBADC1;
        v208[8] = 0;
        unint64_t v209 = &v198[v202[11]];
        *(void *)unint64_t v209 = 0x405280548A9BCFD5;
        v209[8] = 0;
        *(_OWORD *)&v198[v202[12]] = xmmword_1006D8770;
        *(_OWORD *)&v198[v202[13]] = xmmword_1006D8770;
        v198[v202[14]] = 0;
        uint64_t v210 = &v198[v202[15]];
        *(void *)uint64_t v210 = 0;
        v210[8] = 0;
        uint64_t v211 = &v198[v202[16]];
        *(void *)uint64_t v211 = 0x7FEFFFFFFFFFFFFFLL;
        v211[8] = 0;
        uint64_t v212 = v199 + v202[7];
        Date.init()();
        v207((char *)v212, 0, 1, v204);
        v207((char *)(v199 + v202[8]), 1, 1, v204);
        v207((char *)(v199 + v202[9]), 1, 1, v204);
        *(_OWORD *)uint64_t v199 = xmmword_1006E6400;
        *(void *)(v199 + 16) = 0xD000000000000011;
        *(void *)(v199 + 24) = 0x800000010069B5E0;
        *(_OWORD *)(v199 + 32) = xmmword_1006E63F0;
        uint64_t v213 = v199 + v202[10];
        *(void *)uint64_t v213 = 0x404373EFF1950332;
        *(unsigned char *)(v213 + 8) = 0;
        uint64_t v214 = v199 + v202[11];
        *(void *)uint64_t v214 = 0x4053422B1704FF43;
        *(unsigned char *)(v214 + 8) = 0;
        *(_OWORD *)(v199 + v202[12]) = xmmword_1006D8770;
        *(_OWORD *)(v199 + v202[13]) = xmmword_1006D8770;
        *(unsigned char *)(v199 + v202[14]) = 0;
        uint64_t v215 = v199 + v202[15];
        *(void *)uint64_t v215 = 0;
        *(unsigned char *)(v215 + 8) = 0;
        uint64_t v216 = v199 + v202[16];
        *(void *)uint64_t v216 = 0x7FEFFFFFFFFFFFFFLL;
        *(unsigned char *)(v216 + 8) = 0;
        uint64_t v217 = &v200[v202[7]];
        Date.init()();
        v207(v217, 0, 1, v204);
        v207(&v200[v202[8]], 1, 1, v204);
        v207(&v200[v202[9]], 1, 1, v204);
        *(_OWORD *)uint64_t v200 = xmmword_1006E6410;
        *((_OWORD *)v200 + 1) = xmmword_1006E6420;
        *((_OWORD *)v200 + 2) = xmmword_1006E63F0;
        unint64_t v218 = &v200[v202[10]];
        *(void *)unint64_t v218 = 0x4040E0AEA747D806;
        v218[8] = 0;
        id v219 = &v200[v202[11]];
        *(void *)id v219 = 0x405518C63F141206;
        v219[8] = 0;
        *(_OWORD *)&v200[v202[12]] = xmmword_1006D8770;
        *(_OWORD *)&v200[v202[13]] = xmmword_1006D8770;
        v200[v202[14]] = 0;
        uint64_t v220 = &v200[v202[15]];
        *(void *)uint64_t v220 = 0;
        v220[8] = 0;
        uint64_t v221 = &v200[v202[16]];
        *(void *)uint64_t v221 = 0x7FEFFFFFFFFFFFFFLL;
        v221[8] = 0;
        uint64_t v222 = &v201[v202[7]];
        Date.init()();
        v207(v222, 0, 1, v204);
        v207(&v201[v202[8]], 1, 1, v204);
        v207(&v201[v202[9]], 1, 1, v204);
        *(_OWORD *)id v201 = xmmword_1006E6430;
        *((_OWORD *)v201 + 1) = xmmword_1006E6440;
        *((_OWORD *)v201 + 2) = xmmword_1006E63F0;
        char v223 = &v201[v202[10]];
        *(void *)char v223 = 0x4044F051EB851EB8;
        v223[8] = 0;
        uint64_t v224 = &v201[v202[11]];
        *(void *)uint64_t v224 = 0x4055E92CCF6BE37ELL;
        v224[8] = 0;
        *(_OWORD *)&v201[v202[12]] = xmmword_1006D8770;
        *(_OWORD *)&v201[v202[13]] = xmmword_1006D8770;
        v201[v202[14]] = 0;
        id v225 = &v201[v202[15]];
        *(void *)id v225 = 0;
        v225[8] = 0;
        uint64_t v226 = &v201[v202[16]];
        *(void *)uint64_t v226 = 0x7FEFFFFFFFFFFFFFLL;
        v226[8] = 0;
        sub_100010218(&qword_10080F280);
        uint64_t v227 = *(void *)(v338 + 72);
        unint64_t v228 = (*(unsigned __int8 *)(v338 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v338 + 80);
        uint64_t v229 = swift_allocObject();
        *(_OWORD *)(v229 + 16) = xmmword_1006D70D0;
        uint64_t v230 = v229 + v228;
        sub_1003CC8F4((uint64_t)v198, v230, _s10VisitAssetC9VisitDataVMa);
        sub_1003CC8F4(v199, v230 + v227, _s10VisitAssetC9VisitDataVMa);
        sub_1003CC8F4((uint64_t)v200, v230 + 2 * v227, _s10VisitAssetC9VisitDataVMa);
        sub_1003CC8F4((uint64_t)v201, v230 + 3 * v227, _s10VisitAssetC9VisitDataVMa);
        sub_1000C8C00(v229);
        uint64_t v15 = sub_1000407C0(9, (uint64_t)_swiftEmptyArrayStorage);
        sub_1003CCA2C((uint64_t)v201, _s10VisitAssetC9VisitDataVMa);
        sub_1003CCA2C((uint64_t)v200, _s10VisitAssetC9VisitDataVMa);
        sub_1003CCA2C(v199, _s10VisitAssetC9VisitDataVMa);
        uint64_t v18 = (uint64_t)v198;
        uint64_t v17 = _s10VisitAssetC9VisitDataVMa;
        goto LABEL_8;
      case 9:
        id v13 = *(char **)(v0 + 832);
        uint64_t v231 = *(int **)(v0 + 792);
        uint64_t v232 = *(void *)(v0 + 784);
        uint64_t v330 = *(void *)(v0 + 824);
        uint64_t v331 = *(void *)(v0 + 776);
        uint64_t v233 = *(void *)(v0 + 768);
        uint64_t v332 = *(void *)(v0 + 760);
        uint64_t v234 = *(void *)(v0 + 752);
        uint64_t v339 = *(void *)(v0 + 800);
        uint64_t v341 = *(void *)(v0 + 744);
        uint64_t v235 = *(void *)(v0 + 648);
        uint64_t v236 = *(void *)(v0 + 640);
        uint64_t v237 = swift_allocObject();
        *(_OWORD *)(v237 + 16) = xmmword_1006D6280;
        *(void *)(v237 + 56) = &type metadata for String;
        *(void *)(v237 + 32) = 0xD000000000000017;
        *(void *)(v237 + 40) = 0x800000010069B5A0;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        uint64_t v238 = &v13[v231[7]];
        Date.init()();
        v239 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v235 + 56);
        v239(v238, 0, 1, v236);
        v239(&v13[v231[8]], 1, 1, v236);
        v239(&v13[v231[9]], 1, 1, v236);
        *(_OWORD *)id v13 = xmmword_1006E63D0;
        *((_OWORD *)v13 + 1) = xmmword_1006E63E0;
        *((_OWORD *)v13 + 2) = xmmword_1006E63F0;
        uint64_t v240 = &v13[v231[10]];
        *(void *)uint64_t v240 = 0x40445BAA79BBADC1;
        v240[8] = 0;
        v241 = &v13[v231[11]];
        *(void *)v241 = 0x405280548A9BCFD5;
        v241[8] = 0;
        *(_OWORD *)&v13[v231[12]] = xmmword_1006D8770;
        *(_OWORD *)&v13[v231[13]] = xmmword_1006D8770;
        v13[v231[14]] = 0;
        unint64_t v242 = &v13[v231[15]];
        *(void *)unint64_t v242 = 0;
        v242[8] = 0;
        int v243 = &v13[v231[16]];
        *(void *)int v243 = 0x7FEFFFFFFFFFFFFFLL;
        v243[8] = 0;
        sub_1003CC8F4((uint64_t)v13, v330, _s10VisitAssetC9VisitDataVMa);
        UUID.init()();
        uint64_t v244 = (char *)objc_allocWithZone((Class)_s15GenericMapAssetCMa(0));
        *(void *)&v244[OBJC_IVAR____TtCC7Journal10Journaling15GenericMapAsset_metadata] = 0;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v233 + 16))(v331, v232, v332);
        uint64_t v15 = (char *)sub_1001817C4(v331, 9, 9);
        (*(void (**)(uint64_t, uint64_t))(v233 + 8))(v232, v332);
        sub_1003CC95C(v330, v234, _s10VisitAssetC9VisitDataVMa);
        (*(void (**)(uint64_t, void, uint64_t, int *))(v339 + 56))(v234, 0, 1, v231);
        sub_1003CC95C(v234, v341, _s15GenericMapAssetC14GenericMapDataVMa);
        swift_storeEnumTagMultiPayload();
        sub_100010218(&qword_100803330);
        uint64_t v245 = swift_allocObject();
        uint64_t v246 = v245 + *(void *)(*(void *)v245 + 104);
        uint64_t v247 = sub_100010218(&qword_1007F9DB8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v247 - 8) + 56))(v246, 1, 1, v247);
        *(_OWORD *)(v245 + *(void *)(*(void *)v245 + 112)) = xmmword_1006D6A80;
        sub_1003CC9C4(v341, v245 + *(void *)(*(void *)v245 + 120));
        *(void *)&v15[OBJC_IVAR____TtCC7Journal10Journaling15GenericMapAsset_metadata] = v245;
        swift_release();
        uint64_t v16 = _s10VisitAssetC9VisitDataVMa;
        goto LABEL_7;
      case 0xA:
        uint64_t v82 = *(void *)(v0 + 992);
        uint64_t v83 = *(void *)(v0 + 984);
        uint64_t v84 = *(void *)(v0 + 848);
        uint64_t v85 = *(void *)(v0 + 840);
        id v86 = [objc_allocWithZone((Class)LPLinkMetadata) init];
        URL.init(string:)();
        sub_100052E44(v82, v83);
        unint64_t v336 = *(void *)(v84 + 48);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v336)(v83, 1, v85) == 1)
        {
          unint64_t v88 = 0;
        }
        else
        {
          uint64_t v89 = *(void *)(v0 + 984);
          id v90 = v86;
          uint64_t v91 = *(void *)(v0 + 848);
          uint64_t v92 = *(void *)(v0 + 840);
          URL._bridgeToObjectiveC()(v87);
          unint64_t v88 = v93;
          (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v89, v92);
          id v86 = v90;
        }
        uint64_t v94 = *(void *)(v0 + 976);
        uint64_t v95 = *(void *)(v0 + 840);
        [v86 setURL:v88];

        URL.init(string:)();
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v336)(v94, 1, v95) == 1)
        {
          __break(1u);
          JUMPOUT(0x1003C7D00);
        }
        uint64_t v97 = *(void *)(v0 + 976);
        uint64_t v98 = *(void *)(v0 + 848);
        uint64_t v99 = *(void *)(v0 + 840);
        URL._bridgeToObjectiveC()(v96);
        uint64_t v101 = v100;
        uint64_t v326 = *(void (**)(uint64_t, uint64_t))(v98 + 8);
        v326(v97, v99);
        [v86 setOriginalURL:v101];

        *(void *)(v0 + 344) = 0x20656C707041;
        *(void *)(v0 + 352) = 0xE600000000000000;
        *(void *)(v0 + 400) = 0;
        swift_stdlib_random();
        unint64_t v102 = *(void *)(v0 + 400);
        uint64_t v343 = v34;
        if (((100 * v102) & 0xFFFFFFFFFFFFFFF0) == 0)
        {
          do
          {
            *unint64_t v325 = 0;
            swift_stdlib_random();
            unint64_t v102 = *v325;
          }
          while (((100 * *v325) & 0xFFFFFFFFFFFFFFF0) == 0);
        }
        uint64_t v103 = *(void *)(v0 + 992);
        uint64_t v104 = *(void *)(v0 + 968);
        uint64_t v105 = *(void *)(v0 + 840);
        *(void *)(v0 + 408) = (v102 * (unsigned __int128)0x64uLL) >> 64;
        v106._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v106);
        swift_bridgeObjectRelease();
        NSString v107 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [v86 setTitle:v107];

        sub_100052E44(v103, v104);
        int v108 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v336)(v104, 1, v105);
        uint64_t v109 = *(void *)(v0 + 992);
        uint64_t v110 = *(void *)(v0 + 968);
        if (v108 != 1)
        {
          uint64_t v281 = *(void *)(v0 + 952);
          uint64_t v282 = *(void *)(v0 + 864);
          uint64_t v348 = v86;
          uint64_t v283 = *(void *)(v0 + 856);
          uint64_t v284 = *(void *)(v0 + 848);
          uint64_t v285 = *(void *)(v0 + 840);
          uint64_t v286 = *(void *)(v0 + 648);
          uint64_t v287 = *(void *)(v0 + 640);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v284 + 32))(v283, v110, v285);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v284 + 16))(v282, v283, v285);
          Date.init()();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v286 + 56))(v281, 0, 1, v287);
          uint64_t v15 = (char *)sub_1000D575C(9, v282, v281);

          v326(v283, v285);
          sub_10001457C(v109, (uint64_t *)&unk_100800A60);
          goto LABEL_9;
        }
        sub_10001457C(*(void *)(v0 + 992), (uint64_t *)&unk_100800A60);

        sub_10001457C(v110, (uint64_t *)&unk_100800A60);
        uint64_t v32 = (void *)(v0 + 504);
        uint64_t v31 = v0 + 496;
        break;
      case 0xB:
        uint64_t v188 = swift_task_alloc();
        *(void *)(v0 + 1344) = v188;
        *(void *)(v188 + 16) = 1;
        uint64_t v248 = (void *)swift_task_alloc();
        *(void *)(v0 + 1352) = v248;
        uint64_t v249 = sub_100010218(&qword_10080B9A0);
        *uint64_t v248 = v0;
        v248[1] = sub_1003C7D54;
        Swift::String v191 = (char *)v249;
        uint64_t v192 = (void *)(v0 + 376);
        unint64_t v193 = 0x800000010069B470;
        id v194 = sub_1003CCDB4;
        goto LABEL_119;
      case 0xC:
        uint64_t v188 = swift_task_alloc();
        *(void *)(v0 + 1360) = v188;
        *(void *)(v188 + 16) = 1;
        uint64_t v250 = (void *)swift_task_alloc();
        *(void *)(v0 + 1368) = v250;
        uint64_t v251 = sub_100010218(&qword_10080B9A0);
        *uint64_t v250 = v0;
        v250[1] = sub_1003C81F8;
        Swift::String v191 = (char *)v251;
        uint64_t v192 = (void *)(v0 + 392);
        unint64_t v193 = 0x800000010069B470;
        id v194 = sub_1003CCDB4;
        goto LABEL_119;
      case 0xD:
        uint64_t v252 = sub_1003CC624(v36, -90.0, 90.0);
        double v254 = v253;
        sub_1003CC624(v252, -180.0, 180.0);
        double v256 = v255;
        *NSString v320 = _swiftEmptyArrayStorage;
        uint64_t v257 = sub_100498D40(0x1EBuLL);
        if (v257 + 10 < 1) {
          goto LABEL_139;
        }
        uint64_t v258 = v257;
        uint64_t v259 = -9;
        while (1)
        {
          uint64_t v260 = sub_1003CC624(v257, -0.01, 0.01);
          double v254 = v254 + v261;
          sub_1003CC624(v260, -0.01, 0.01);
          double v256 = v256 + v262;
          [objc_allocWithZone((Class)CLLocation) initWithLatitude:v254 longitude:v256];
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v320 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v320 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          uint64_t v257 = specialized Array._endMutation()();
          if (v258 == v259) {
            break;
          }
          uint64_t v263 = v259 + 10;
          ++v259;
          if (__OFADD__(v263, 1))
          {
            __break(1u);
            goto LABEL_136;
          }
        }
        uint64_t v269 = *(void *)(v0 + 936);
        uint64_t v270 = *(void *)(v0 + 928);
        uint64_t v271 = *(void *)(v0 + 672);
        uint64_t v272 = *(void *)(v0 + 664);
        uint64_t v273 = *(void *)(v0 + 648);
        uint64_t v274 = *(void *)(v0 + 640);
        unint64_t v347 = *(void *)(v0 + 424);
        Date.init()();
        Date.addingTimeInterval(_:)();
        uint64_t v275 = *(void (**)(uint64_t, uint64_t))(v273 + 8);
        v275(v271, v274);
        uint64_t v276 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v273 + 56);
        v276(v269, 0, 1, v274);
        Date.init()();
        Date.addingTimeInterval(_:)();
        v275(v271, v274);
        sub_100498D40(0x20000000000001uLL);
        Date.addingTimeInterval(_:)();
        v275(v272, v274);
        v276(v270, 0, 1, v274);
        unint64_t v277 = sub_100498D40(0x20000000000001uLL);
        unint64_t v278 = sub_100498D40(0x20000000000001uLL);
        double v279 = (double)v278 * 1.11022302e-16 * 700.0 + 100.0;
        double v280 = 160.0;
        if (v277 != 0x20000000000000) {
          double v280 = (double)v277 * 1.11022302e-16 * 80.0 + 80.0;
        }
        if (v278 == 0x20000000000000) {
          double v279 = 800.0;
        }
        uint64_t v15 = sub_1004AC7E0(9, v347, 7238994, 0xE300000000000000, 0, 1, v269, v270, *(uint64_t *)&v280, 0, *(uint64_t *)&v279, 0, 0, 0, 0, 0);
        goto LABEL_9;
      case 0xF:
        uint64_t v15 = sub_10008F704(9, 0, 0);
        goto LABEL_9;
      case 0x10:
        uint64_t v188 = swift_task_alloc();
        *(void *)(v0 + 1376) = v188;
        *(void *)(v188 + 16) = 1;
        uint64_t v264 = (void *)swift_task_alloc();
        *(void *)(v0 + 1384) = v264;
        uint64_t v265 = sub_100010218(&qword_10080B9A0);
        *uint64_t v264 = v0;
        v264[1] = sub_1003C8690;
        Swift::String v191 = (char *)v265;
        uint64_t v192 = (void *)(v0 + 464);
        unint64_t v193 = 0x800000010069B470;
        id v194 = sub_1003CC8A8;
        goto LABEL_119;
      default:
        uint64_t v187 = swift_allocObject();
        *(_OWORD *)(v187 + 16) = xmmword_1006D6280;
        *(void *)(v187 + 56) = &type metadata for String;
        *(void *)(v187 + 32) = 0xD000000000000013;
        *(void *)(v187 + 40) = 0x800000010069B820;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        uint64_t v188 = swift_task_alloc();
        *(void *)(v0 + 1272) = v188;
        *(void *)(v188 + 16) = 1;
        uint64_t v189 = (void *)swift_task_alloc();
        *(void *)(v0 + 1280) = v189;
        uint64_t v190 = sub_100010218(&qword_10080B9A0);
        *uint64_t v189 = v0;
        v189[1] = sub_1003C1490;
        Swift::String v191 = (char *)v190;
        uint64_t v192 = (void *)(v0 + 560);
        unint64_t v193 = 0x800000010069B470;
        id v194 = sub_1003CCDB4;
LABEL_119:
        uint64_t v266 = (uint64_t (*)(uint64_t))v194;
        unint64_t v267 = 0xD000000000000024;
        uint64_t v268 = (void *)v188;
        goto LABEL_128;
    }
    unint64_t v33 = v0 + 528;
    unint64_t v34 = v343;
LABEL_17:
    uint64_t v3 = *(void *)(v0 + 1264) + 1;
    if (v3 == *(void *)(v0 + 600)) {
      goto LABEL_3;
    }
  }
}

uint64_t sub_1003C7D54()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1003C7E98, 0, 0);
}

uint64_t sub_1003C7E98()
{
  uint64_t v1 = *(void *)(v0 + 376);
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(void **)(v1 + 32);
    id v3 = v2;
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v4 = *(void *)(v0 + 1264);
  swift_bridgeObjectRelease();
  strcpy((char *)(v0 + 360), "Test contact ");
  *(_WORD *)(v0 + 374) = -4864;
  *(void *)(v0 + 384) = v4;
  v5._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v5);
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(v0 + 360);
  uint64_t v7 = *(void *)(v0 + 368);
  Date.init()();
  if ((unsigned __int128)(v4 * (__int128)-3600) >> 64 == (-3600 * v4) >> 63)
  {
    uint64_t v8 = *(void *)(v0 + 1264);
    uint64_t v9 = *(void *)(v0 + 952);
    uint64_t v10 = *(void *)(v0 + 944);
    uint64_t v30 = v6;
    uint64_t v11 = *(void *)(v0 + 672);
    uint64_t v12 = *(void *)(v0 + 648);
    uint64_t v13 = *(void *)(v0 + 640);
    Date.addingTimeInterval(_:)();
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v14(v11, v13);
    uint64_t v29 = v7;
    uint64_t v15 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56);
    v15(v9, 0, 1, v13);
    Date.init()();
    Date.addingTimeInterval(_:)();
    v14(v11, v13);
    v15(v10, 0, 1, v13);
    uint64_t v16 = sub_1000E04BC(9, v30, v29, v2, v9, v10, COERCE__INT64((double)(600 * v8)), 0, 2 * v8, 0);
    *(void *)(v0 + 1400) = v16;
    *(void *)(v0 + 1392) = v16;
    uint64_t v17 = *(void *)(v0 + 1264);
    uint64_t v18 = *(void *)(v0 + 584);
    uint64_t v19 = *(void *)(v0 + 576);
    uint64_t v20 = v16;
    *(void *)(v0 + 296) = v19;
    *(void *)(v0 + 304) = v18;
    swift_bridgeObjectRetain();
    v21._countAndFlagsBits = 0x20746573734120;
    v21._object = (void *)0xE700000000000000;
    String.append(_:)(v21);
    *(void *)(v0 + 456) = v17;
    v22._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v22);
    swift_bridgeObjectRelease();
    id v23 = objc_allocWithZone((Class)NSAttributedString);
    NSString v24 = String._bridgeToObjectiveC()();
    id v25 = [v23 initWithString:v24];

    swift_bridgeObjectRelease();
    NSString v26 = *(void **)&v20[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title];
    *(void *)&v20[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title] = v25;

    if (qword_1007F7CE0 == -1) {
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_6:
  uint64_t v27 = qword_10083EA18;
  *(void *)(v0 + 1408) = qword_10083EA18;
  return _swift_task_switch(sub_1003C8B64, v27, 0);
}

uint64_t sub_1003C81F8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1003C833C, 0, 0);
}

uint64_t sub_1003C833C()
{
  uint64_t v1 = v0[49];
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(void **)(v1 + 32);
    id v3 = v2;
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v4 = v0[158];
  swift_bridgeObjectRelease();
  Date.init()();
  if ((unsigned __int128)(v4 * (__int128)-3600) >> 64 == (-3600 * v4) >> 63)
  {
    uint64_t v5 = v0[158];
    uint64_t v6 = v0[119];
    uint64_t v7 = v0[118];
    uint64_t v8 = v0[84];
    uint64_t v9 = v0[81];
    uint64_t v10 = v0[80];
    Date.addingTimeInterval(_:)();
    NSString v26 = v2;
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
    v11(v8, v10);
    uint64_t v12 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v9 + 56);
    v12(v6, 0, 1, v10);
    Date.init()();
    Date.addingTimeInterval(_:)();
    v11(v8, v10);
    v12(v7, 0, 1, v10);
    uint64_t v13 = sub_10048CBA8(9, v26, 0xD000000000000010, 0x800000010069B4A0, 0, 1, v6, v7, COERCE__INT64((double)(15 * v5)), 0, COERCE__INT64((double)(60 * v5)), 0, 0, 0, 0, 0, 0, 1u, 0,
            1u,
            0,
            0,
            0,
            1u,
            0,
            1u,
            0,
            0);
    v0[175] = v13;
    v0[174] = v13;
    uint64_t v14 = v0[158];
    uint64_t v15 = v0[73];
    uint64_t v16 = v0[72];
    uint64_t v17 = v13;
    v0[37] = v16;
    v0[38] = v15;
    swift_bridgeObjectRetain();
    v18._countAndFlagsBits = 0x20746573734120;
    v18._object = (void *)0xE700000000000000;
    String.append(_:)(v18);
    v0[57] = v14;
    v19._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v19);
    swift_bridgeObjectRelease();
    id v20 = objc_allocWithZone((Class)NSAttributedString);
    NSString v21 = String._bridgeToObjectiveC()();
    id v22 = [v20 initWithString:v21];

    swift_bridgeObjectRelease();
    id v23 = *(void **)&v17[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title];
    *(void *)&v17[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title] = v22;

    if (qword_1007F7CE0 == -1) {
      goto LABEL_6;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_6:
  uint64_t v24 = qword_10083EA18;
  v0[176] = qword_10083EA18;
  return _swift_task_switch(sub_1003C8B64, v24, 0);
}

uint64_t sub_1003C8690()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1003C87D4, 0, 0);
}

uint64_t sub_1003C87D4()
{
  uint64_t v1 = v0[58];
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(void **)(v1 + 32);
    id v3 = v2;
  }
  else
  {
    uint64_t v2 = 0;
  }
  uint64_t v4 = v0[115];
  uint64_t v25 = v0[114];
  uint64_t v5 = v0[84];
  uint64_t v6 = v0[82];
  uint64_t v7 = v0[81];
  uint64_t v8 = v0[80];
  swift_bridgeObjectRelease();
  id v9 = v2;
  Date.init()();
  Date.addingTimeInterval(_:)();
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v10(v5, v8);
  uint64_t v11 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  v11(v4, 0, 1, v8);
  Date.init()();
  Date.addingTimeInterval(_:)();
  v10(v5, v8);
  sub_100498D40(0x20000000000001uLL);
  Date.addingTimeInterval(_:)();
  v10(v6, v8);
  v11(v25, 0, 1, v8);
  id v12 = sub_100100118(9, v2, v2, 1802264919, 0xE400000000000000, 0x676E696B6C6177, 0xE700000000000000, 0x676E696B6C6157, 0xE700000000000000, (void (*)(char *, uint64_t))0x30303036, 0xE400000000000000, v4, v25);
  v0[175] = v12;
  v0[174] = v12;
  uint64_t v13 = v0[158];
  uint64_t v14 = v0[73];
  uint64_t v15 = v0[72];
  uint64_t v16 = (char *)v12;
  v0[37] = v15;
  v0[38] = v14;
  swift_bridgeObjectRetain();
  v17._countAndFlagsBits = 0x20746573734120;
  v17._object = (void *)0xE700000000000000;
  String.append(_:)(v17);
  v0[57] = v13;
  v18._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  id v19 = objc_allocWithZone((Class)NSAttributedString);
  NSString v20 = String._bridgeToObjectiveC()();
  id v21 = [v19 initWithString:v20];

  swift_bridgeObjectRelease();
  id v22 = *(void **)&v16[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title];
  *(void *)&v16[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title] = v21;

  if (qword_1007F7CE0 != -1) {
    swift_once();
  }
  uint64_t v23 = qword_10083EA18;
  v0[176] = qword_10083EA18;
  return _swift_task_switch(sub_1003C8B64, v23, 0);
}

uint64_t sub_1003C8B64()
{
  *(CFAbsoluteTime *)(v0 + 1416) = CFAbsoluteTimeGetCurrent();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 1424) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003C8C38;
  uint64_t v2 = *(void *)(v0 + 1392);
  return sub_1000E5D84(v2, 0, 1);
}

uint64_t sub_1003C8C38()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1003C8D60, 0, 0);
}

uint64_t sub_1003C8D60()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 1112);
  uint64_t v2 = *(unsigned int *)(v0 + 92);
  uint64_t v3 = *(void *)(v0 + 1056);
  uint64_t v4 = *(void *)(v0 + 1040);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 1432) = v5;
  swift_weakInit();
  v1(v3, v2, v4);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 1440) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1003C8EB8;
  uint64_t v7 = *(void *)(v0 + 1056);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v6, v7, sub_1000EFE40, v5, (char *)&type metadata for () + 8);
}

uint64_t sub_1003C8EB8()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 1144);
  uint64_t v3 = *(void *)(*(void *)v1 + 1056);
  uint64_t v4 = *(void *)(*(void *)v1 + 1040);
  *(void *)(*(void *)v1 + 1448) = v0;
  swift_task_dealloc();
  swift_release();
  v2(v3, v4);
  return _swift_task_switch(sub_1003C9074, 0, 0);
}

uint64_t sub_1003C9074()
{
  uint64_t v1 = *(void *)(v0 + 1408);
  return _swift_task_switch(sub_1003C9100, v1, 0);
}

uint64_t sub_1003C9100()
{
  uint64_t v1 = (void *)v0[174];
  uint64_t v2 = v0[96];
  uint64_t v3 = v0[95];
  uint64_t v4 = v0[79];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v4, (uint64_t)v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v2 + 56))(v4, 0, 1, v3);
  sub_1000E5B40(v4);
  sub_10001457C(v4, &qword_100800950);
  sub_1000E7FC0(v1);
  return _swift_task_switch(sub_1003C922C, 0, 0);
}

uint64_t sub_1003C922C()
{
  uint64_t v2 = *(void **)(v1 + 1400);

  uint64_t v3 = *(void *)(v1 + 1264) + 1;
  if (v3 == *(void *)(v1 + 600))
  {
LABEL_2:
    uint64_t v4 = *(void **)(v1 + 1248);
    uint64_t v5 = *(void **)(v1 + 1240);
    swift_release();

    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = *(uint64_t (**)(uint64_t))(v1 + 8);
    uint64_t v7 = *(void *)(v1 + 1192);
    return v6(v7);
  }
  uint64_t v9 = (unint64_t *)(v1 + 416);
  uint64_t v305 = (void *)(v1 + 424);
  uint64_t v328 = (void *)(v1 + 432);
  uint64_t v10 = (void *)(v1 + 480);
  uint64_t v308 = (void *)(v1 + 504);
  uint64_t v310 = (void *)(v1 + 512);
  uint64_t v311 = (void *)(v1 + 488);
  uint64_t v309 = (void *)(v1 + 536);
  id v306 = (void *)(v1 + 552);
  uint64_t v307 = (void *)(v1 + 528);
  id v11 = (id)(v1 + 568);
  id v12 = *(id *)(v1 + 1448);
  while (2)
  {
    *(void *)(v1 + 1264) = v3;
    *(void *)(v1 + 1256) = v12;
    unint64_t v13 = *(void *)(v1 + 1208);
    *(void *)(v1 + 496) = 0;
    uint64_t v14 = swift_stdlib_random();
    unint64_t v15 = *(void *)(v1 + 496);
    uint64_t v16 = (v15 * (unsigned __int128)v13) >> 64;
    unint64_t v17 = v15 * v13;
    unint64_t v18 = *(void *)(v1 + 1208);
    if (v13 > v17)
    {
      unint64_t v13 = -(uint64_t)v18 % v18;
      if (v13 > v17)
      {
        do
        {
          unint64_t v0 = *(void *)(v1 + 1208);
          *(void *)(v1 + 568) = 0;
          uint64_t v14 = swift_stdlib_random();
          unint64_t v19 = *(void *)(v1 + 568);
        }
        while (v13 > v19 * v0);
        uint64_t v16 = (v19 * (unsigned __int128)v0) >> 64;
        unint64_t v18 = *(void *)(v1 + 1208);
      }
    }
    if (v16 >= (uint64_t)v18)
    {
LABEL_128:
      __break(1u);
LABEL_129:
      uint64_t v290 = *(void *)(v1 + 1016);
      uint64_t v291 = *(void *)(v1 + 952);
      uint64_t v331 = *(void *)(v1 + 904);
      unint64_t v320 = v0;
      uint64_t v292 = *(void *)(v1 + 848);
      uint64_t v293 = *(void *)(v1 + 840);
      uint64_t v294 = *(void *)(v1 + 648);
      uint64_t v295 = *(void *)(v1 + 640);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v292 + 56))(v290, 1, 1, v293);
      id v317 = v11;
      Date.init()();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v294 + 56))(v291, 0, 1, v295);
      unint64_t v209 = sub_1000B1130(9, v323, v333, v290, v11, 0x7472412074736554, 0xEB00000000747369, 0x6E6F532074736554, 0xE900000000000067, 0x626C412074736554, 0xEA00000000006D75, 1, 0, v291, 0);

      sub_100040DD0(v13, v320);
      (*(void (**)(uint64_t, uint64_t))(v292 + 8))(v331, v293);
LABEL_118:
      *(void *)(v1 + 1400) = v209;
      *(void *)(v1 + 1392) = v209;
      uint64_t v268 = *(void *)(v1 + 1264);
      uint64_t v269 = *(void *)(v1 + 584);
      uint64_t v270 = *(void *)(v1 + 576);
      uint64_t v271 = v209;
      *(void *)(v1 + 296) = v270;
      *(void *)(v1 + 304) = v269;
      swift_bridgeObjectRetain();
      v272._countAndFlagsBits = 0x20746573734120;
      v272._object = (void *)0xE700000000000000;
      String.append(_:)(v272);
      *(void *)(v1 + 456) = v268;
      v273._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v273);
      swift_bridgeObjectRelease();
      id v274 = objc_allocWithZone((Class)NSAttributedString);
      NSString v275 = String._bridgeToObjectiveC()();
      id v276 = [v274 initWithString:v275];

      swift_bridgeObjectRelease();
      unint64_t v277 = *(void **)&v271[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title];
      *(void *)&v271[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title] = v276;

      if (qword_1007F7CE0 != -1) {
        goto LABEL_135;
      }
      goto LABEL_119;
    }
    switch(*(unsigned char *)(*(void *)(v1 + 592) + v16 + 32))
    {
      case 1:
      case 7:
      case 0xE:
      case 0x11:
      case 0x12:
      case 0x13:
      case 0x14:
        goto LABEL_8;
      case 2:
        uint64_t v173 = swift_allocObject();
        *(_OWORD *)(v173 + 16) = xmmword_1006D6280;
        *(void *)(v173 + 56) = &type metadata for String;
        *(void *)(v173 + 32) = 0xD000000000000013;
        *(void *)(v173 + 40) = 0x800000010069B4F0;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        uint64_t v174 = (void *)swift_task_alloc();
        *(void *)(v1 + 1336) = v174;
        *uint64_t v174 = v1;
        v174[1] = sub_1003C4C20;
        uint64_t v175 = *(void *)(v1 + 680);
        return sub_100497ECC(v175);
      case 3:
        uint64_t v20 = *(void *)(v1 + 1232);
        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1006D6280;
        *(void *)(v21 + 56) = &type metadata for String;
        *(void *)(v21 + 32) = 0xD000000000000012;
        *(void *)(v21 + 40) = 0x800000010069B770;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        unint64_t v22 = *(void *)(*(void *)(v20 + 16) + 16);
        if (v22)
        {
          *uint64_t v309 = 0;
          swift_stdlib_random();
          unint64_t v23 = *v309 * v22;
          int64_t v24 = ((unint64_t)*v309 * (unsigned __int128)v22) >> 64;
          if (v22 > v23)
          {
            unint64_t v25 = -(uint64_t)v22 % v22;
            if (v25 > v23)
            {
              do
              {
                void *v306 = 0;
                swift_stdlib_random();
              }
              while (v25 > *v306 * v22);
              int64_t v24 = ((unint64_t)*v306 * (unsigned __int128)v22) >> 64;
            }
          }
          uint64_t v26 = *(void *)(*(void *)(v1 + 1232) + 16);
          if (v24 >= *(void *)(v26 + 16))
          {
LABEL_132:
            __break(1u);
LABEL_133:
            __break(1u);
LABEL_134:
            __break(1u);
LABEL_135:
            swift_once();
LABEL_119:
            uint64_t v278 = qword_10083EA18;
            *(void *)(v1 + 1408) = qword_10083EA18;
            return _swift_task_switch(sub_1003C8B64, v278, 0);
          }
          uint64_t v27 = v26 + 32 * v24;
          uint64_t v28 = *(void *)(v27 + 40);
          unint64_t v323 = *(void *)(v27 + 32);
          swift_beginAccess();
          uint64_t v333 = v28;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10035FD28(v24);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v323 = 0x3334363139343137;
          uint64_t v333 = 0xE900000000000034;
        }
        uint64_t v88 = *(void *)(v1 + 1024);
        uint64_t v89 = *(void *)(v1 + 848);
        uint64_t v90 = *(void *)(v1 + 840);
        URL.init(string:)();
        uint64_t v91 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v89 + 48);
        unint64_t v0 = v89 + 48;
        int v92 = v91(v88, 1, v90);
        uint64_t v93 = *(void *)(v1 + 1024);
        if (v92 != 1)
        {
          (*(void (**)(void, void, void))(*(void *)(v1 + 848) + 32))(*(void *)(v1 + 904), *(void *)(v1 + 1024), *(void *)(v1 + 840));
          uint64_t v94 = Data.init(contentsOf:options:)();
          if (v12)
          {
            uint64_t v96 = *(void *)(v1 + 904);
            goto LABEL_62;
          }
          unint64_t v13 = v94;
          unint64_t v0 = v95;
          id v155 = objc_allocWithZone((Class)UIImage);
          sub_100040D64(v13, v0);
          Class isa = Data._bridgeToObjectiveC()().super.isa;
          id v11 = [v155 initWithData:isa];
          sub_100040DD0(v13, v0);

          if (v11) {
            goto LABEL_129;
          }
          (*(void (**)(void, void))(*(void *)(v1 + 848) + 8))(*(void *)(v1 + 904), *(void *)(v1 + 840));
          sub_100040DD0(v13, v0);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_83:
          id v12 = 0;
LABEL_84:
          uint64_t v9 = (unint64_t *)(v1 + 416);
          goto LABEL_7;
        }
LABEL_6:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_10001457C(v93, (uint64_t *)&unk_100800A60);
        uint64_t v9 = (unint64_t *)(v1 + 416);
LABEL_7:
        id v11 = (id)(v1 + 568);
LABEL_8:
        uint64_t v3 = *(void *)(v1 + 1264) + 1;
        if (v3 == *(void *)(v1 + 600)) {
          goto LABEL_2;
        }
        continue;
      case 4:
        uint64_t v29 = *(void *)(v1 + 1232);
        uint64_t v30 = swift_allocObject();
        *(_OWORD *)(v30 + 16) = xmmword_1006D6280;
        *(void *)(v30 + 56) = &type metadata for String;
        *(void *)(v30 + 32) = 0xD000000000000015;
        *(void *)(v30 + 40) = 0x800000010069B6B0;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        unint64_t v31 = *(void *)(*(void *)(v29 + 24) + 16);
        if (v31)
        {
          *uint64_t v310 = 0;
          swift_stdlib_random();
          unint64_t v32 = *v310 * v31;
          int64_t v33 = ((unint64_t)*v310 * (unsigned __int128)v31) >> 64;
          if (v31 > v32)
          {
            unint64_t v34 = -(uint64_t)v31 % v31;
            if (v34 > v32)
            {
              do
              {
                *uint64_t v307 = 0;
                swift_stdlib_random();
              }
              while (v34 > *v307 * v31);
              int64_t v33 = ((unint64_t)*v307 * (unsigned __int128)v31) >> 64;
            }
          }
          uint64_t v35 = *(void *)(*(void *)(v1 + 1232) + 24);
          if (v33 >= *(void *)(v35 + 16)) {
            goto LABEL_133;
          }
          id v36 = v12;
          uint64_t v37 = v35 + 32 * v33;
          unint64_t v38 = *(void *)(v37 + 40);
          uint64_t v333 = *(void *)(v37 + 32);
          swift_beginAccess();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10035FD28(v33);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          id v36 = v12;
          unint64_t v38 = 0xEA00000000003130;
          uint64_t v333 = 0x3237353736393331;
        }
        uint64_t v97 = *(void *)(v1 + 1008);
        uint64_t v98 = *(void *)(v1 + 848);
        uint64_t v99 = *(void *)(v1 + 840);
        URL.init(string:)();
        uint64_t v100 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v98 + 48);
        unint64_t v0 = v98 + 48;
        int v101 = v100(v97, 1, v99);
        uint64_t v102 = *(void *)(v1 + 1008);
        if (v101 == 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_10001457C(v102, (uint64_t *)&unk_100800A60);
          uint64_t v9 = (unint64_t *)(v1 + 416);
          id v11 = (id)(v1 + 568);
          id v12 = v36;
          goto LABEL_8;
        }
        uint64_t v103 = v38;
        (*(void (**)(void, void, void))(*(void *)(v1 + 848) + 32))(*(void *)(v1 + 896), *(void *)(v1 + 1008), *(void *)(v1 + 840));
        uint64_t v104 = Data.init(contentsOf:options:)();
        if (v36)
        {
          uint64_t v106 = *(void *)(v1 + 896);
          uint64_t v107 = *(void *)(v1 + 848);
          uint64_t v108 = *(void *)(v1 + 840);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          uint64_t v109 = *(void (**)(uint64_t, uint64_t))(v107 + 8);
          unint64_t v0 = v107 + 8;
          v109(v106, v108);
          id v12 = 0;
          uint64_t v9 = (unint64_t *)(v1 + 416);
          id v11 = (id)(v1 + 568);
          goto LABEL_8;
        }
        uint64_t v157 = v104;
        unint64_t v158 = v105;
        id v159 = objc_allocWithZone((Class)UIImage);
        sub_100040D64(v157, v158);
        Class v160 = Data._bridgeToObjectiveC()().super.isa;
        id v12 = [v159 initWithData:v160];
        sub_100040DD0(v157, v158);

        if (v12)
        {
          uint64_t v296 = *(void *)(v1 + 1016);
          uint64_t v297 = *(void *)(v1 + 896);
          uint64_t v298 = *(void *)(v1 + 848);
          uint64_t v318 = *(void *)(v1 + 840);
          uint64_t v299 = *(void *)(v1 + 648);
          uint64_t v321 = *(void *)(v1 + 952);
          uint64_t v327 = *(void *)(v1 + 640);
          swift_bridgeObjectRelease();
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v298 + 16))(v296, v297, v318);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v298 + 56))(v296, 0, 1, v318);
          Date.init()();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v299 + 56))(v321, 0, 1, v327);
          unint64_t v209 = sub_1003935AC(9, v333, v103, v12, 0x7469742074736554, 0xEA0000000000656CLL, v296, 0x7475412074736554, 0xEB00000000726F68, v321, 0, 0, 2u);
          sub_100040DD0(v157, v158);
          (*(void (**)(uint64_t, uint64_t))(v298 + 8))(v297, v318);
          goto LABEL_118;
        }
        (*(void (**)(void, void))(*(void *)(v1 + 848) + 8))(*(void *)(v1 + 896), *(void *)(v1 + 840));
        sub_100040DD0(v157, v158);
        goto LABEL_91;
      case 5:
        uint64_t v39 = *(void *)(v1 + 1232);
        uint64_t v40 = swift_allocObject();
        *(_OWORD *)(v40 + 16) = xmmword_1006D6280;
        *(void *)(v40 + 56) = &type metadata for String;
        *(void *)(v40 + 32) = 0xD000000000000012;
        *(void *)(v40 + 40) = 0x800000010069B600;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        unint64_t v41 = *(void *)(*(void *)(v39 + 32) + 16);
        if (v41)
        {
          *uint64_t v311 = 0;
          swift_stdlib_random();
          unint64_t v42 = *v311 * v41;
          int64_t v43 = ((unint64_t)*v311 * (unsigned __int128)v41) >> 64;
          if (v41 > v42)
          {
            unint64_t v44 = -(uint64_t)v41 % v41;
            if (v44 > v42)
            {
              do
              {
                *uint64_t v308 = 0;
                swift_stdlib_random();
              }
              while (v44 > *v308 * v41);
              int64_t v43 = ((unint64_t)*v308 * (unsigned __int128)v41) >> 64;
            }
          }
          uint64_t v45 = *(void *)(*(void *)(v1 + 1232) + 32);
          if (v43 >= *(void *)(v45 + 16)) {
            goto LABEL_134;
          }
          uint64_t v46 = v45 + 32 * v43;
          uint64_t v47 = *(void *)(v46 + 40);
          unint64_t v323 = *(void *)(v46 + 32);
          swift_beginAccess();
          uint64_t v333 = v47;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_10035FD28(v43);
          swift_endAccess();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {
          unint64_t v323 = 0x3134393933363531;
          uint64_t v333 = 0xEA00000000003030;
        }
        uint64_t v110 = *(void *)(v1 + 1000);
        uint64_t v111 = *(void *)(v1 + 848);
        uint64_t v112 = *(void *)(v1 + 840);
        URL.init(string:)();
        uint64_t v113 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
        unint64_t v0 = v111 + 48;
        int v114 = v113(v110, 1, v112);
        uint64_t v93 = *(void *)(v1 + 1000);
        if (v114 == 1) {
          goto LABEL_6;
        }
        (*(void (**)(void, void, void))(*(void *)(v1 + 848) + 32))(*(void *)(v1 + 888), *(void *)(v1 + 1000), *(void *)(v1 + 840));
        uint64_t v115 = Data.init(contentsOf:options:)();
        if (v12)
        {
          uint64_t v96 = *(void *)(v1 + 888);
LABEL_62:
          uint64_t v117 = *(void *)(v1 + 848);
          uint64_t v118 = *(void *)(v1 + 840);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          uint64_t v119 = *(void (**)(uint64_t, uint64_t))(v117 + 8);
          unint64_t v0 = v117 + 8;
          v119(v96, v118);
          goto LABEL_83;
        }
        uint64_t v161 = v115;
        unint64_t v162 = v116;
        id v163 = objc_allocWithZone((Class)UIImage);
        sub_100040D64(v161, v162);
        Class v164 = Data._bridgeToObjectiveC()().super.isa;
        id v12 = [v163 initWithData:v164];
        sub_100040DD0(v161, v162);

        if (!v12)
        {
          (*(void (**)(void, void))(*(void *)(v1 + 848) + 8))(*(void *)(v1 + 888), *(void *)(v1 + 840));
          sub_100040DD0(v161, v162);
LABEL_91:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_84;
        }
        uint64_t v300 = *(void *)(v1 + 952);
        uint64_t v332 = *(void *)(v1 + 888);
        uint64_t v301 = *(void *)(v1 + 848);
        uint64_t v322 = *(void *)(v1 + 840);
        uint64_t v302 = *(void *)(v1 + 648);
        uint64_t v303 = *(void *)(v1 + 640);
        swift_bridgeObjectRelease();
        id v304 = v12;
        Date.init()();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v302 + 56))(v300, 0, 1, v303);
        unint64_t v209 = sub_100048FB8(9, v323, v333, 0x7469742074736554, 0xEA0000000000656CLL, v12, 0x7475412074736554, 0xEB00000000726F68, v300);

        sub_100040DD0(v161, v162);
        (*(void (**)(uint64_t, uint64_t))(v301 + 8))(v332, v322);
        goto LABEL_118;
      case 6:
        uint64_t v48 = *(void *)(v1 + 784);
        uint64_t v49 = *(void *)(v1 + 768);
        uint64_t v50 = *(void *)(v1 + 760);
        uint64_t v51 = swift_allocObject();
        *(_OWORD *)(v51 + 16) = xmmword_1006D6280;
        *(void *)(v51 + 56) = &type metadata for String;
        *(void *)(v51 + 32) = 0xD000000000000012;
        *(void *)(v51 + 40) = 0x800000010069B510;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        UUID.init()();
        uint64_t v52 = UUID.uuidString.getter();
        uint64_t v54 = v53;
        (*(void (**)(uint64_t, uint64_t))(v49 + 8))(v48, v50);
        if (qword_1007F6EF8 != -1) {
          swift_once();
        }
        if (qword_10083D468)
        {
          uint64_t v55 = *(unsigned int *)(v1 + 132);
          uint64_t v56 = *(void *)(v1 + 864);
          uint64_t v334 = v52;
          uint64_t v57 = *(void *)(v1 + 848);
          uint64_t v324 = *(void *)(v1 + 840);
          uint64_t v58 = *(void *)(v1 + 728);
          uint64_t v59 = v54;
          uint64_t v60 = *(void *)(v1 + 720);
          uint64_t v61 = *(void *)(v1 + 712);
          sub_1004FD498(qword_10083D460, (void *)qword_10083D468, v56);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 104))(v58, v55, v61);
          sub_100014344();
          URL.appending<A>(components:directoryHint:)();
          (*(void (**)(uint64_t, uint64_t))(v60 + 8))(v58, v61);
          uint64_t v54 = v59;
          (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v56, v324);
          uint64_t v52 = v334;
        }
        else
        {
          static URL.temporaryDirectory.getter();
        }
        uint64_t v120 = *(void *)(v1 + 872);
        uint64_t v121 = *(void *)(v1 + 848);
        uint64_t v122 = *(void *)(v1 + 840);
        *(void *)(v1 + 328) = v52;
        *(void *)(v1 + 336) = v54;
        v123._countAndFlagsBits = 1717658414;
        v123._object = (void *)0xE400000000000000;
        String.append(_:)(v123);
        id v11 = *(id *)(v1 + 336);
        URL.appendingPathComponent(_:)();
        swift_bridgeObjectRelease();
        uint64_t v124 = *(void (**)(uint64_t, uint64_t))(v121 + 8);
        *(void *)(v1 + 1288) = v124;
        *(void *)(v1 + 1296) = (v121 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
        unint64_t v313 = v124;
        v124(v120, v122);
        if (qword_1007F6F30 != -1) {
          swift_once();
        }
        unint64_t v13 = qword_10083D4B8;
        unint64_t v0 = *(void *)(qword_10083D4B8 + 16);
        unint64_t v323 = -(uint64_t)v0;
        uint64_t v333 = qword_10083D4B8 + 32;
        uint64_t v125 = 1;
        uint64_t v126 = (char *)_swiftEmptyArrayStorage;
        do
        {
          if (v0)
          {
            *uint64_t v328 = 0;
            swift_bridgeObjectRetain();
            swift_stdlib_random();
            int64_t v127 = ((unint64_t)*v328 * (unsigned __int128)v0) >> 64;
            unint64_t v128 = *v328 * v0;
            if (v0 > v128 && v323 % v0 > v128)
            {
              do
              {
                *uint64_t v10 = 0;
                swift_stdlib_random();
              }
              while (v323 % v0 > *v10 * v0);
              int64_t v127 = ((unint64_t)*v10 * (unsigned __int128)v0) >> 64;
            }
            if (v127 >= (uint64_t)v0)
            {
              __break(1u);
              goto LABEL_128;
            }
            uint64_t v129 = (uint64_t *)(v333 + 16 * v127);
            uint64_t v131 = *v129;
            unint64_t v130 = v129[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
          }
          else
          {
            uint64_t v131 = 0;
            unint64_t v130 = 0xE000000000000000;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v126 = sub_1002A54A0(0, *((void *)v126 + 2) + 1, 1, v126);
          }
          unint64_t v133 = *((void *)v126 + 2);
          unint64_t v132 = *((void *)v126 + 3);
          id v11 = (id)(v133 + 1);
          if (v133 >= v132 >> 1) {
            uint64_t v126 = sub_1002A54A0((char *)(v132 > 1), v133 + 1, 1, v126);
          }
          ++v125;
          *((void *)v126 + 2) = v11;
          uint64_t v134 = &v126[16 * v133];
          *((void *)v134 + 4) = v131;
          *((void *)v134 + 5) = v130;
        }
        while (v125 != 5);
        *(void *)(v1 + 440) = v126;
        sub_100010218(&qword_100800A70);
        sub_1000245BC();
        BidirectionalCollection<>.joined(separator:)();
        uint64_t v136 = v135;
        swift_bridgeObjectRelease();
        *(void *)(v1 + 1304) = v136;
        int v137 = self;
        id v138 = [v137 defaultManager];
        URL.absoluteString.getter();
        NSString v139 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        unsigned __int8 v140 = [v138 fileExistsAtPath:v139];

        if ((v140 & 1) == 0) {
          goto LABEL_123;
        }
        id v141 = [v137 defaultManager];
        URL._bridgeToObjectiveC()(v142);
        int v144 = v143;
        *(void *)(v1 + 448) = 0;
        unsigned int v145 = [v141 removeItemAtURL:v143 error:v1 + 448];

        int64_t v146 = *(void **)(v1 + 448);
        if (!v145)
        {
          uint64_t v147 = *(void *)(v1 + 880);
          uint64_t v148 = *(void *)(v1 + 840);
          id v149 = v146;
          swift_bridgeObjectRelease();
          uint64_t v150 = _convertNSErrorToError(_:)();

          swift_willThrow();
          unint64_t v0 = swift_allocObject();
          *(_OWORD *)(v0 + 16) = xmmword_1006D6280;
          *(void *)(v1 + 280) = 0;
          *(void *)(v1 + 288) = 0xE000000000000000;
          _StringGuts.grow(_:)(28);
          uint64_t v151 = *(void *)(v1 + 288);
          *(void *)(v1 + 312) = *(void *)(v1 + 280);
          *(void *)(v1 + 320) = v151;
          v152._countAndFlagsBits = 0x100000000000001ALL;
          v152._object = (void *)0x800000010069B580;
          String.append(_:)(v152);
          *(void *)(v1 + 472) = v150;
          sub_100010218((uint64_t *)&unk_1007FC0D0);
          _print_unlocked<A, B>(_:_:)();
          uint64_t v153 = *(void *)(v1 + 312);
          uint64_t v154 = *(void *)(v1 + 320);
          *(void *)(v0 + 56) = &type metadata for String;
          *(void *)(v0 + 32) = v153;
          *(void *)(v0 + 40) = v154;
          print(_:separator:terminator:)();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          v313(v147, v148);
          goto LABEL_83;
        }
        id v279 = v146;
LABEL_123:
        uint64_t v280 = *(void *)(v1 + 1248);
        uint64_t v281 = *(void *)(v1 + 880);
        id v282 = objc_allocWithZone((Class)AVSpeechUtterance);
        swift_bridgeObjectRetain();
        NSString v283 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        id v284 = [v282 initWithString:v283];
        *(void *)(v1 + 1312) = v284;

        LODWORD(v285) = 0.5;
        [v284 setRate:v285];
        LODWORD(v286) = 1.0;
        [v284 setVolume:v286];
        NSString v287 = String._bridgeToObjectiveC()();
        id v288 = [self voiceWithIdentifier:v287];

        [v284 setVoice:v288];
        uint64_t v289 = (void *)swift_task_alloc();
        *(void *)(v1 + 1320) = v289;
        v289[2] = v280;
        v289[3] = v284;
        v289[4] = v281;
        uint64_t v170 = (void *)swift_task_alloc();
        *(void *)(v1 + 1328) = v170;
        void *v170 = v1;
        v170[1] = sub_1003C47D8;
        unint64_t v248 = 0xD00000000000001ALL;
        uint64_t v169 = (char *)&type metadata for () + 8;
        unint64_t v171 = 0x800000010069B560;
        uint64_t v247 = sub_1003CC8E8;
        uint64_t v249 = v289;
LABEL_124:
        return withCheckedContinuation<A>(isolation:function:_:)(v170, 0, 0, v248, v171, v247, v249, v169);
      case 8:
        uint64_t v176 = *(char **)(v1 + 832);
        uint64_t v177 = *(void *)(v1 + 824);
        uint64_t v178 = *(char **)(v1 + 816);
        id v179 = *(char **)(v1 + 808);
        uint64_t v325 = *(void *)(v1 + 800);
        Class v180 = *(int **)(v1 + 792);
        uint64_t v181 = *(void *)(v1 + 648);
        uint64_t v182 = *(void *)(v1 + 640);
        uint64_t v183 = swift_allocObject();
        *(_OWORD *)(v183 + 16) = xmmword_1006D6280;
        *(void *)(v183 + 56) = &type metadata for String;
        *(void *)(v183 + 32) = 0xD000000000000018;
        *(void *)(v183 + 40) = 0x800000010069B5C0;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        id v184 = &v176[v180[7]];
        Date.init()();
        Class v185 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v181 + 56);
        v185(v184, 0, 1, v182);
        v185(&v176[v180[8]], 1, 1, v182);
        v185(&v176[v180[9]], 1, 1, v182);
        *(_OWORD *)uint64_t v176 = xmmword_1006E63D0;
        *((_OWORD *)v176 + 1) = xmmword_1006E63E0;
        *((_OWORD *)v176 + 2) = xmmword_1006E63F0;
        id v186 = &v176[v180[10]];
        *(void *)id v186 = 0x40445BAA79BBADC1;
        v186[8] = 0;
        uint64_t v187 = &v176[v180[11]];
        *(void *)uint64_t v187 = 0x405280548A9BCFD5;
        v187[8] = 0;
        *(_OWORD *)&v176[v180[12]] = xmmword_1006D8770;
        *(_OWORD *)&v176[v180[13]] = xmmword_1006D8770;
        v176[v180[14]] = 0;
        uint64_t v188 = &v176[v180[15]];
        *(void *)uint64_t v188 = 0;
        v188[8] = 0;
        uint64_t v189 = &v176[v180[16]];
        *(void *)uint64_t v189 = 0x7FEFFFFFFFFFFFFFLL;
        v189[8] = 0;
        uint64_t v190 = v177 + v180[7];
        Date.init()();
        v185((char *)v190, 0, 1, v182);
        v185((char *)(v177 + v180[8]), 1, 1, v182);
        v185((char *)(v177 + v180[9]), 1, 1, v182);
        *(_OWORD *)uint64_t v177 = xmmword_1006E6400;
        *(void *)(v177 + 16) = 0xD000000000000011;
        *(void *)(v177 + 24) = 0x800000010069B5E0;
        *(_OWORD *)(v177 + 32) = xmmword_1006E63F0;
        uint64_t v191 = v177 + v180[10];
        *(void *)uint64_t v191 = 0x404373EFF1950332;
        *(unsigned char *)(v191 + 8) = 0;
        uint64_t v192 = v177 + v180[11];
        *(void *)uint64_t v192 = 0x4053422B1704FF43;
        *(unsigned char *)(v192 + 8) = 0;
        *(_OWORD *)(v177 + v180[12]) = xmmword_1006D8770;
        *(_OWORD *)(v177 + v180[13]) = xmmword_1006D8770;
        *(unsigned char *)(v177 + v180[14]) = 0;
        uint64_t v193 = v177 + v180[15];
        *(void *)uint64_t v193 = 0;
        *(unsigned char *)(v193 + 8) = 0;
        uint64_t v194 = v177 + v180[16];
        *(void *)uint64_t v194 = 0x7FEFFFFFFFFFFFFFLL;
        *(unsigned char *)(v194 + 8) = 0;
        uint64_t v195 = &v178[v180[7]];
        Date.init()();
        v185(v195, 0, 1, v182);
        v185(&v178[v180[8]], 1, 1, v182);
        v185(&v178[v180[9]], 1, 1, v182);
        *(_OWORD *)uint64_t v178 = xmmword_1006E6410;
        *((_OWORD *)v178 + 1) = xmmword_1006E6420;
        *((_OWORD *)v178 + 2) = xmmword_1006E63F0;
        uint64_t v196 = &v178[v180[10]];
        *(void *)uint64_t v196 = 0x4040E0AEA747D806;
        v196[8] = 0;
        uint64_t v197 = &v178[v180[11]];
        *(void *)uint64_t v197 = 0x405518C63F141206;
        v197[8] = 0;
        *(_OWORD *)&v178[v180[12]] = xmmword_1006D8770;
        *(_OWORD *)&v178[v180[13]] = xmmword_1006D8770;
        v178[v180[14]] = 0;
        Class v198 = &v178[v180[15]];
        *(void *)Class v198 = 0;
        v198[8] = 0;
        uint64_t v199 = &v178[v180[16]];
        *(void *)uint64_t v199 = 0x7FEFFFFFFFFFFFFFLL;
        v199[8] = 0;
        uint64_t v200 = &v179[v180[7]];
        Date.init()();
        v185(v200, 0, 1, v182);
        v185(&v179[v180[8]], 1, 1, v182);
        v185(&v179[v180[9]], 1, 1, v182);
        *(_OWORD *)id v179 = xmmword_1006E6430;
        *((_OWORD *)v179 + 1) = xmmword_1006E6440;
        *((_OWORD *)v179 + 2) = xmmword_1006E63F0;
        id v201 = &v179[v180[10]];
        *(void *)id v201 = 0x4044F051EB851EB8;
        v201[8] = 0;
        Class v202 = &v179[v180[11]];
        *(void *)Class v202 = 0x4055E92CCF6BE37ELL;
        v202[8] = 0;
        *(_OWORD *)&v179[v180[12]] = xmmword_1006D8770;
        *(_OWORD *)&v179[v180[13]] = xmmword_1006D8770;
        v179[v180[14]] = 0;
        uint64_t v203 = &v179[v180[15]];
        *(void *)uint64_t v203 = 0;
        v203[8] = 0;
        uint64_t v204 = &v179[v180[16]];
        *(void *)uint64_t v204 = 0x7FEFFFFFFFFFFFFFLL;
        v204[8] = 0;
        sub_100010218(&qword_10080F280);
        uint64_t v205 = *(void *)(v325 + 72);
        unint64_t v206 = (*(unsigned __int8 *)(v325 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v325 + 80);
        uint64_t v207 = swift_allocObject();
        *(_OWORD *)(v207 + 16) = xmmword_1006D70D0;
        uint64_t v208 = v207 + v206;
        sub_1003CC8F4((uint64_t)v176, v208, _s10VisitAssetC9VisitDataVMa);
        sub_1003CC8F4(v177, v208 + v205, _s10VisitAssetC9VisitDataVMa);
        sub_1003CC8F4((uint64_t)v178, v208 + 2 * v205, _s10VisitAssetC9VisitDataVMa);
        sub_1003CC8F4((uint64_t)v179, v208 + 3 * v205, _s10VisitAssetC9VisitDataVMa);
        sub_1000C8C00(v207);
        unint64_t v209 = sub_1000407C0(9, (uint64_t)_swiftEmptyArrayStorage);
        sub_1003CCA2C((uint64_t)v179, _s10VisitAssetC9VisitDataVMa);
        sub_1003CCA2C((uint64_t)v178, _s10VisitAssetC9VisitDataVMa);
        sub_1003CCA2C(v177, _s10VisitAssetC9VisitDataVMa);
        uint64_t v210 = (uint64_t)v176;
        goto LABEL_98;
      case 9:
        uint64_t v211 = *(char **)(v1 + 832);
        uint64_t v212 = *(int **)(v1 + 792);
        uint64_t v213 = *(void *)(v1 + 784);
        uint64_t v315 = *(void *)(v1 + 824);
        uint64_t v316 = *(void *)(v1 + 776);
        uint64_t v214 = *(void *)(v1 + 768);
        uint64_t v215 = *(void *)(v1 + 760);
        uint64_t v319 = *(void *)(v1 + 752);
        uint64_t v326 = *(void *)(v1 + 800);
        uint64_t v329 = *(void *)(v1 + 744);
        uint64_t v216 = *(void *)(v1 + 648);
        uint64_t v217 = *(void *)(v1 + 640);
        uint64_t v218 = swift_allocObject();
        *(_OWORD *)(v218 + 16) = xmmword_1006D6280;
        *(void *)(v218 + 56) = &type metadata for String;
        *(void *)(v218 + 32) = 0xD000000000000017;
        *(void *)(v218 + 40) = 0x800000010069B5A0;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        id v219 = &v211[v212[7]];
        Date.init()();
        uint64_t v220 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v216 + 56);
        v220(v219, 0, 1, v217);
        v220(&v211[v212[8]], 1, 1, v217);
        v220(&v211[v212[9]], 1, 1, v217);
        *(_OWORD *)uint64_t v211 = xmmword_1006E63D0;
        *((_OWORD *)v211 + 1) = xmmword_1006E63E0;
        *((_OWORD *)v211 + 2) = xmmword_1006E63F0;
        uint64_t v221 = &v211[v212[10]];
        *(void *)uint64_t v221 = 0x40445BAA79BBADC1;
        v221[8] = 0;
        uint64_t v222 = &v211[v212[11]];
        *(void *)uint64_t v222 = 0x405280548A9BCFD5;
        v222[8] = 0;
        *(_OWORD *)&v211[v212[12]] = xmmword_1006D8770;
        *(_OWORD *)&v211[v212[13]] = xmmword_1006D8770;
        v211[v212[14]] = 0;
        char v223 = &v211[v212[15]];
        *(void *)char v223 = 0;
        v223[8] = 0;
        uint64_t v224 = &v211[v212[16]];
        *(void *)uint64_t v224 = 0x7FEFFFFFFFFFFFFFLL;
        v224[8] = 0;
        sub_1003CC8F4((uint64_t)v211, v315, _s10VisitAssetC9VisitDataVMa);
        UUID.init()();
        id v225 = (char *)objc_allocWithZone((Class)_s15GenericMapAssetCMa(0));
        *(void *)&v225[OBJC_IVAR____TtCC7Journal10Journaling15GenericMapAsset_metadata] = 0;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v214 + 16))(v316, v213, v215);
        unint64_t v209 = (char *)sub_1001817C4(v316, 9, 9);
        (*(void (**)(uint64_t, uint64_t))(v214 + 8))(v213, v215);
        sub_1003CC95C(v315, v319, _s10VisitAssetC9VisitDataVMa);
        (*(void (**)(uint64_t, void, uint64_t, int *))(v326 + 56))(v319, 0, 1, v212);
        sub_1003CC95C(v319, v329, _s15GenericMapAssetC14GenericMapDataVMa);
        swift_storeEnumTagMultiPayload();
        sub_100010218(&qword_100803330);
        uint64_t v226 = swift_allocObject();
        uint64_t v227 = v226 + *(void *)(*(void *)v226 + 104);
        uint64_t v228 = sub_100010218(&qword_1007F9DB8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v228 - 8) + 56))(v227, 1, 1, v228);
        *(_OWORD *)(v226 + *(void *)(*(void *)v226 + 112)) = xmmword_1006D6A80;
        sub_1003CC9C4(v329, v226 + *(void *)(*(void *)v226 + 120));
        *(void *)&v209[OBJC_IVAR____TtCC7Journal10Journaling15GenericMapAsset_metadata] = v226;
        swift_release();
        uint64_t v210 = (uint64_t)v211;
LABEL_98:
        sub_1003CCA2C(v210, _s10VisitAssetC9VisitDataVMa);
        goto LABEL_118;
      case 0xA:
        id v314 = v12;
        uint64_t v62 = *(void *)(v1 + 992);
        uint64_t v63 = *(void *)(v1 + 984);
        uint64_t v64 = *(void *)(v1 + 848);
        uint64_t v65 = *(void *)(v1 + 840);
        uint64_t v333 = (uint64_t)[objc_allocWithZone((Class)LPLinkMetadata) init];
        URL.init(string:)();
        sub_100052E44(v62, v63);
        unint64_t v323 = *(void *)(v64 + 48);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v323)(v63, 1, v65) == 1)
        {
          uint64_t v67 = 0;
        }
        else
        {
          uint64_t v68 = *(void *)(v1 + 984);
          uint64_t v69 = *(void *)(v1 + 848);
          uint64_t v70 = *(void *)(v1 + 840);
          URL._bridgeToObjectiveC()(v66);
          uint64_t v67 = v71;
          (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v68, v70);
          uint64_t v9 = (unint64_t *)(v1 + 416);
        }
        uint64_t v72 = *(void *)(v1 + 976);
        uint64_t v73 = *(void *)(v1 + 840);
        [(id)v333 setURL:v67];

        URL.init(string:)();
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v323)(v72, 1, v73) == 1)
        {
          __break(1u);
          JUMPOUT(0x1003CC0CCLL);
        }
        uint64_t v75 = *(void *)(v1 + 976);
        uint64_t v76 = *(void *)(v1 + 848);
        uint64_t v77 = *(void *)(v1 + 840);
        URL._bridgeToObjectiveC()(v74);
        uint64_t v79 = v78;
        uint64_t v312 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
        v312(v75, v77);
        [(id)v333 setOriginalURL:v79];

        *(void *)(v1 + 344) = 0x20656C707041;
        *(void *)(v1 + 352) = 0xE600000000000000;
        *(void *)(v1 + 400) = 0;
        swift_stdlib_random();
        for (unint64_t i = *(void *)(v1 + 400); ((100 * i) & 0xFFFFFFFFFFFFFFF0) == 0; unint64_t i = *v9)
        {
          *uint64_t v9 = 0;
          swift_stdlib_random();
        }
        unint64_t v0 = *(void *)(v1 + 992);
        uint64_t v81 = *(void *)(v1 + 968);
        uint64_t v82 = *(void *)(v1 + 840);
        *(void *)(v1 + 408) = (i * (unsigned __int128)0x64uLL) >> 64;
        v83._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v83);
        swift_bridgeObjectRelease();
        NSString v84 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        [(id)v333 setTitle:v84];

        sub_100052E44(v0, v81);
        int v85 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v323)(v81, 1, v82);
        uint64_t v86 = *(void *)(v1 + 992);
        uint64_t v87 = *(void *)(v1 + 968);
        if (v85 != 1)
        {
          uint64_t v262 = *(void *)(v1 + 952);
          uint64_t v263 = *(void *)(v1 + 864);
          uint64_t v264 = *(void *)(v1 + 856);
          uint64_t v265 = *(void *)(v1 + 848);
          uint64_t v266 = *(void *)(v1 + 840);
          uint64_t v267 = *(void *)(v1 + 648);
          uint64_t v330 = *(void *)(v1 + 640);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v265 + 32))(v264, v87, v266);
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v265 + 16))(v263, v264, v266);
          Date.init()();
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v267 + 56))(v262, 0, 1, v330);
          unint64_t v209 = (char *)sub_1000D575C(9, v263, v262);

          v312(v264, v266);
          sub_10001457C(v86, (uint64_t *)&unk_100800A60);
          goto LABEL_118;
        }
        sub_10001457C(*(void *)(v1 + 992), (uint64_t *)&unk_100800A60);

        sub_10001457C(v87, (uint64_t *)&unk_100800A60);
        uint64_t v9 = (unint64_t *)(v1 + 416);
        id v11 = (id)(v1 + 568);
        id v12 = v314;
        goto LABEL_8;
      case 0xB:
        uint64_t v166 = swift_task_alloc();
        *(void *)(v1 + 1344) = v166;
        *(void *)(v166 + 16) = 1;
        uint64_t v229 = (void *)swift_task_alloc();
        *(void *)(v1 + 1352) = v229;
        uint64_t v230 = sub_100010218(&qword_10080B9A0);
        void *v229 = v1;
        v229[1] = sub_1003C7D54;
        uint64_t v169 = (char *)v230;
        uint64_t v170 = (void *)(v1 + 376);
        unint64_t v171 = 0x800000010069B470;
        Swift::String v172 = sub_1003CCDB4;
        goto LABEL_111;
      case 0xC:
        uint64_t v166 = swift_task_alloc();
        *(void *)(v1 + 1360) = v166;
        *(void *)(v166 + 16) = 1;
        uint64_t v231 = (void *)swift_task_alloc();
        *(void *)(v1 + 1368) = v231;
        uint64_t v232 = sub_100010218(&qword_10080B9A0);
        *uint64_t v231 = v1;
        v231[1] = sub_1003C81F8;
        uint64_t v169 = (char *)v232;
        uint64_t v170 = (void *)(v1 + 392);
        unint64_t v171 = 0x800000010069B470;
        Swift::String v172 = sub_1003CCDB4;
        goto LABEL_111;
      case 0xD:
        uint64_t v233 = sub_1003CC624(v14, -90.0, 90.0);
        double v235 = v234;
        sub_1003CC624(v233, -180.0, 180.0);
        double v237 = v236;
        void *v305 = _swiftEmptyArrayStorage;
        uint64_t v238 = sub_100498D40(0x1EBuLL);
        if (v238 + 10 < 1) {
          __break(1u);
        }
        uint64_t v239 = v238;
        uint64_t v240 = -9;
        while (1)
        {
          uint64_t v241 = sub_1003CC624(v238, -0.01, 0.01);
          double v235 = v235 + v242;
          sub_1003CC624(v241, -0.01, 0.01);
          double v237 = v237 + v243;
          [objc_allocWithZone((Class)CLLocation) initWithLatitude:v235 longitude:v237];
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((*v305 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v305 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          uint64_t v238 = specialized Array._endMutation()();
          if (v239 == v240) {
            break;
          }
          uint64_t v244 = v240 + 10;
          ++v240;
          if (__OFADD__(v244, 1))
          {
            __break(1u);
            goto LABEL_132;
          }
        }
        uint64_t v250 = *(void *)(v1 + 936);
        uint64_t v251 = *(void *)(v1 + 928);
        uint64_t v252 = *(void *)(v1 + 672);
        uint64_t v253 = *(void *)(v1 + 664);
        uint64_t v254 = *(void *)(v1 + 648);
        uint64_t v255 = *(void *)(v1 + 640);
        unint64_t v335 = *(void *)(v1 + 424);
        Date.init()();
        Date.addingTimeInterval(_:)();
        double v256 = *(void (**)(uint64_t, uint64_t))(v254 + 8);
        v256(v252, v255);
        uint64_t v257 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v254 + 56);
        v257(v250, 0, 1, v255);
        Date.init()();
        Date.addingTimeInterval(_:)();
        v256(v252, v255);
        sub_100498D40(0x20000000000001uLL);
        Date.addingTimeInterval(_:)();
        v256(v253, v255);
        v257(v251, 0, 1, v255);
        unint64_t v258 = sub_100498D40(0x20000000000001uLL);
        unint64_t v259 = sub_100498D40(0x20000000000001uLL);
        double v260 = (double)v259 * 1.11022302e-16 * 700.0 + 100.0;
        double v261 = 160.0;
        if (v258 != 0x20000000000000) {
          double v261 = (double)v258 * 1.11022302e-16 * 80.0 + 80.0;
        }
        if (v259 == 0x20000000000000) {
          double v260 = 800.0;
        }
        unint64_t v209 = sub_1004AC7E0(9, v335, 7238994, 0xE300000000000000, 0, 1, v250, v251, *(uint64_t *)&v261, 0, *(uint64_t *)&v260, 0, 0, 0, 0, 0);
        goto LABEL_118;
      case 0xF:
        unint64_t v209 = sub_10008F704(9, 0, 0);
        goto LABEL_118;
      case 0x10:
        uint64_t v166 = swift_task_alloc();
        *(void *)(v1 + 1376) = v166;
        *(void *)(v166 + 16) = 1;
        uint64_t v245 = (void *)swift_task_alloc();
        *(void *)(v1 + 1384) = v245;
        uint64_t v246 = sub_100010218(&qword_10080B9A0);
        *uint64_t v245 = v1;
        v245[1] = sub_1003C8690;
        uint64_t v169 = (char *)v246;
        uint64_t v170 = (void *)(v1 + 464);
        unint64_t v171 = 0x800000010069B470;
        Swift::String v172 = sub_1003CC8A8;
        goto LABEL_111;
      default:
        uint64_t v165 = swift_allocObject();
        *(_OWORD *)(v165 + 16) = xmmword_1006D6280;
        *(void *)(v165 + 56) = &type metadata for String;
        *(void *)(v165 + 32) = 0xD000000000000013;
        *(void *)(v165 + 40) = 0x800000010069B820;
        print(_:separator:terminator:)();
        swift_bridgeObjectRelease();
        uint64_t v166 = swift_task_alloc();
        *(void *)(v1 + 1272) = v166;
        *(void *)(v166 + 16) = 1;
        uint64_t v167 = (void *)swift_task_alloc();
        *(void *)(v1 + 1280) = v167;
        uint64_t v168 = sub_100010218(&qword_10080B9A0);
        *uint64_t v167 = v1;
        v167[1] = sub_1003C1490;
        uint64_t v169 = (char *)v168;
        uint64_t v170 = (void *)(v1 + 560);
        unint64_t v171 = 0x800000010069B470;
        Swift::String v172 = sub_1003CCDB4;
LABEL_111:
        uint64_t v247 = (uint64_t (*)(uint64_t))v172;
        unint64_t v248 = 0xD000000000000024;
        uint64_t v249 = (void *)v166;
        goto LABEL_124;
    }
  }
}

void sub_1003CC120(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v40 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  __chkstk_darwin(v40);
  id v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  unint64_t v15 = (char *)&v37 - v14;
  unint64_t v41 = a3;
  uint64_t v42 = v3;
  if (!a1)
  {
    Date.init()();
    uint64_t v25 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v9, 1, 1, v25);
    uint64_t v26 = v40;
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v15, v40);
    unint64_t v27 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v28 = v27 + v11;
    uint64_t v29 = (char *)swift_allocObject();
    *((void *)v29 + 2) = 0;
    *((void *)v29 + 3) = 0;
    *((void *)v29 + 4) = a2;
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v29[v27], v12, v26);
    v29[v28] = 3;
    swift_retain();
    sub_100328A60((uint64_t)v9, (uint64_t)&unk_10080B9B0, (uint64_t)v29);
    swift_release();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v26);
    goto LABEL_7;
  }
  uint64_t v16 = 86400 * a1;
  if ((unsigned __int128)(a1 * (__int128)86400) >> 64 != (86400 * a1) >> 63)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v16 < 0)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if ((~COERCE__INT64((double)v16) & 0x7FF0000000000000) == 0)
  {
LABEL_15:
    __break(1u);
    return;
  }
  sub_100498D40(0x20000000000001uLL);
  Date.init()();
  Date.addingTimeInterval(_:)();
  uint64_t v39 = *(void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v17 = v40;
  v39(v12, v40);
  uint64_t v18 = type metadata accessor for TaskPriority();
  unint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
  uint64_t v20 = v15;
  unint64_t v38 = v15;
  uint64_t v21 = (uint64_t)v9;
  v19(v9, 1, 1, v18);
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v12, v20, v17);
  unint64_t v22 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v23 = v22 + v11;
  int64_t v24 = (char *)swift_allocObject();
  *((void *)v24 + 2) = 0;
  *((void *)v24 + 3) = 0;
  *((void *)v24 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v24[v22], v12, v17);
  v24[v23] = 3;
  swift_retain();
  sub_100328A60(v21, (uint64_t)&unk_10080B9A8, (uint64_t)v24);
  swift_release();
  v39(v38, v17);
LABEL_7:
  if (qword_1007F6F30 != -1) {
    swift_once();
  }
  uint64_t v30 = qword_10083D4B8;
  unint64_t v31 = sub_100498D40(0x93uLL);
  sub_1000B3F10(v31 + 3, v30);
  id v32 = objc_allocWithZone((Class)NSAttributedString);
  NSString v33 = String._bridgeToObjectiveC()();
  id v34 = [v32 initWithString:v33];
  swift_bridgeObjectRelease();

  uint64_t v35 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text;
  if (*(void *)(a2 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text))
  {
    if ((objc_msgSend(v34, "isEqualToAttributedString:") & 1) == 0) {
      *(unsigned char *)(a2 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_textChanged) = 1;
    }
  }
  id v36 = *(void **)(a2 + v35);
  *(void *)(a2 + v35) = v34;

  [*(id *)(a2 + 32) setIsDraft:0];
  *unint64_t v41 = a2;
  swift_retain();
}

uint64_t sub_1003CC624(uint64_t a1, double a2, double a3)
{
  return sub_1003CC63C(a1, (uint64_t (*)(uint64_t, double, double))sub_1003CC624, a2, a3);
}

uint64_t sub_1003CC63C(uint64_t result, uint64_t (*a2)(uint64_t, double, double), double a3, double a4)
{
  if (a3 == a4)
  {
    __break(1u);
    goto LABEL_7;
  }
  double v6 = a4 - a3;
  if ((~COERCE__INT64(a4 - a3) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v8 = result;
  uint64_t result = swift_stdlib_random();
  if (v6 * ((double)0 * 1.11022302e-16) + a3 == a4) {
    return a2(v8, a3, a4);
  }
  return result;
}

uint64_t sub_1003CC6F0()
{
  uint64_t v1 = *(void *)(type metadata accessor for Journaling.EntrySource() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = sub_100010218(&qword_100805B00);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 48))(v0 + v2, 2, v3))
  {
    uint64_t v4 = type metadata accessor for UUID();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v0 + v2, v4);
    unint64_t v5 = v0 + v2 + *(int *)(v3 + 48);
    uint64_t v6 = type metadata accessor for Date();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  }

  return swift_deallocObject();
}

uint64_t sub_1003CC850()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1003CC888(void *a1@<X8>)
{
  sub_1003CC120(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

void sub_1003CC8A8(uint64_t a1)
{
  sub_1003A007C(a1, *(void *)(v1 + 16));
}

uint64_t sub_1003CC8B0()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003CC8E8(uint64_t a1)
{
  return sub_100073C50(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_1003CC8F4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003CC95C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1003CC9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F9DA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1003CCA2C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1003CCA90(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  char v10 = *((unsigned char *)v1 + v5 + *(void *)(v4 + 64));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_100052588;
  return sub_100582C88(a1, v6, v7, v8, v9, v10);
}

uint64_t sub_1003CCBB8()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1003CCC90(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for Date() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = v1[2];
  uint64_t v7 = v1[3];
  uint64_t v8 = v1[4];
  uint64_t v9 = (uint64_t)v1 + v5;
  char v10 = *((unsigned char *)v1 + v5 + *(void *)(v4 + 64));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_10002C194;
  return sub_100582C88(a1, v6, v7, v8, v9, v10);
}

id sub_1003CCDF8()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for JournalAssetViewFactory();
  [super dealloc];
}

uint64_t type metadata accessor for JournalAssetViewFactory()
{
  return self;
}

void *sub_1003CCE50(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v165 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s10PhotoAssetCMa(0);
  uint64_t v7 = swift_dynamicCastClass();
  if (v7)
  {
    uint64_t v8 = v7;
    type metadata accessor for PhotoAssetView();
    id v9 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v10 = a1;
    uint64_t v11 = [v9 init];
    id v12 = v11;
    if (a2 == 6)
    {
LABEL_8:
      uint64_t v21 = *(void **)((char *)v12 + OBJC_IVAR____TtC7Journal14PhotoAssetView_photoAsset);
      *(void *)((char *)v12 + OBJC_IVAR____TtC7Journal14PhotoAssetView_photoAsset) = v8;
      unint64_t v22 = (char *)v10;

      sub_10015F4FC();
LABEL_50:

      return v12;
    }
    uint64_t v13 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
    char v14 = *((unsigned char *)v11 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
    *((unsigned char *)v11 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType) = a2;
    uint64_t v15 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
    int v16 = *((unsigned __int8 *)v11 + OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated);
    uint64_t v17 = v11;
    if (v16 == 1)
    {
      if (sub_10017CB6C(a2, v14))
      {
LABEL_7:

        goto LABEL_8;
      }
      a2 = *((unsigned __int8 *)v12 + v13);
    }
    uint64_t v18 = *(void **)&v17[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView];
    unint64_t v19 = *(void (**)(void, uint64_t))((swift_isaMask & *v18) + 0x58);
    uint64_t v20 = v18;
    v19(0, a2);

    sub_10015FF78();
    *((unsigned char *)v12 + v15) = 1;
    goto LABEL_7;
  }
  _s10VideoAssetCMa(0);
  uint64_t v23 = swift_dynamicCastClass();
  if (v23)
  {
    uint64_t v24 = v23;
    type metadata accessor for VideoAssetView();
    id v25 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v26 = a1;
    unint64_t v27 = [v25 init];
    id v12 = v27;
    if (a2 != 6)
    {
      char v28 = *((unsigned char *)v27 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
      *((unsigned char *)v27 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType) = a2;
      uint64_t v29 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
      int v30 = *((unsigned __int8 *)v27 + OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated);
      unint64_t v31 = v27;
      if (v30 != 1 || (sub_10017CB6C(a2, v28) & 1) == 0)
      {
        (*(void (**)(void))((swift_isaMask & *v31) + 0x110))();
        *((unsigned char *)v12 + v29) = 1;
      }
    }
    id v32 = *(void **)((char *)v12 + OBJC_IVAR____TtC7Journal14VideoAssetView_videoAsset);
    *(void *)((char *)v12 + OBJC_IVAR____TtC7Journal14VideoAssetView_videoAsset) = v24;
    unint64_t v22 = (char *)v26;
    sub_1005E0A28(v32);

    goto LABEL_50;
  }
  _s10AudioAssetCMa(0);
  uint64_t v33 = swift_dynamicCastClass();
  if (v33)
  {
    uint64_t v34 = v33;
    type metadata accessor for AudioAssetView();
    id v35 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v36 = a1;
    uint64_t v37 = [v35 init];
    id v12 = v37;
    if (a2 != 6)
    {
      char v38 = *((unsigned char *)v37 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
      *((unsigned char *)v37 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType) = a2;
      uint64_t v39 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
      int v40 = *((unsigned __int8 *)v37 + OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated);
      unint64_t v41 = v37;
      if (v40 != 1 || (sub_10017CB6C(a2, v38) & 1) == 0)
      {
        (*(void (**)(void))((swift_isaMask & *v41) + 0x110))();
        *((unsigned char *)v12 + v39) = 1;
      }
    }
    uint64_t v42 = *(void **)((char *)v12 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioAsset);
    *(void *)((char *)v12 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioAsset) = v34;
    unint64_t v22 = (char *)v36;

    sub_10026009C();
    goto LABEL_50;
  }
  _s14LivePhotoAssetCMa(0);
  uint64_t v43 = swift_dynamicCastClass();
  if (v43)
  {
    uint64_t v44 = v43;
    type metadata accessor for LivePhotoAssetView();
    id v45 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v46 = a1;
    uint64_t v47 = [v45 init];
    id v12 = v47;
    if (a2 == 6)
    {
LABEL_30:
      uint64_t v56 = OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoAsset;
      uint64_t v57 = *(void **)((char *)v12 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoAsset);
      *(void *)((char *)v12 + OBJC_IVAR____TtC7Journal18LivePhotoAssetView_livePhotoAsset) = v44;
      unint64_t v22 = (char *)v46;

      sub_10050C350();
      uint64_t v58 = *(void *)((char *)v12 + v56);
      if (v58)
      {
        uint64_t v59 = swift_allocObject();
        swift_unknownObjectWeakInit();
        uint64_t v60 = (void (**)())(v58 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
        uint64_t v61 = *(void *)(v58 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
        *uint64_t v60 = sub_1003CE3D8;
        v60[1] = (void (*)())v59;
        sub_10001ABB8(v61);
      }

      goto LABEL_50;
    }
    uint64_t v48 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
    char v49 = *((unsigned char *)v47 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
    *((unsigned char *)v47 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType) = a2;
    uint64_t v50 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
    int v51 = *((unsigned __int8 *)v47 + OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated);
    uint64_t v52 = v47;
    if (v51 == 1)
    {
      if (sub_10017CB6C(a2, v49))
      {
LABEL_29:

        goto LABEL_30;
      }
      a2 = *((unsigned __int8 *)v12 + v48);
    }
    uint64_t v53 = *(void **)&v52[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView];
    uint64_t v54 = *(void (**)(void, uint64_t))((swift_isaMask & *v53) + 0x58);
    uint64_t v55 = v53;
    v54(0, a2);

    sub_10050C350();
    sub_10050DE24();
    *((unsigned char *)v12 + v50) = 1;
    goto LABEL_29;
  }
  _s16MultiPinMapAssetCMa();
  uint64_t v62 = swift_dynamicCastClass();
  if (v62)
  {
    uint64_t v63 = (void *)v62;
    type metadata accessor for MapAssetView();
    id v64 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    unint64_t v22 = a1;
    uint64_t v65 = [v64 init];
    id v12 = v65;
    if (a2 == 6)
    {
LABEL_40:
      sub_10011428C(v63, 0);
      goto LABEL_50;
    }
    uint64_t v66 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
    char v67 = *((unsigned char *)v65 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
    *((unsigned char *)v65 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType) = a2;
    uint64_t v68 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
    int v69 = *((unsigned __int8 *)v65 + OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated);
    uint64_t v70 = v65;
    if (v69 == 1)
    {
      if (sub_10017CB6C(a2, v67))
      {
LABEL_39:

        goto LABEL_40;
      }
      LOBYTE(a2) = *((unsigned char *)v12 + v66);
    }
    sub_1005CAC04(10, a2);
    *((unsigned char *)v70 + OBJC_IVAR____TtC7Journal12MapAssetView_needsMapLoad) = 1;
    [v70 setNeedsLayout];
    *((unsigned char *)v12 + v68) = 1;
    goto LABEL_39;
  }
  _s10MusicAssetCMa(0);
  uint64_t v71 = swift_dynamicCastClass();
  if (v71
    || (_s12PodcastAssetCMa(0), (uint64_t v71 = swift_dynamicCastClass()) != 0)
    || (_s9BookAssetCMa(0), (uint64_t v71 = swift_dynamicCastClass()) != 0))
  {
    uint64_t v72 = v71;
    type metadata accessor for MediaAssetView();
    id v73 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    unint64_t v22 = a1;
    uint64_t v74 = [v73 init];
    id v12 = v74;
    if (a2 != 6)
    {
      char v75 = *((unsigned char *)v74 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
      *((unsigned char *)v74 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType) = a2;
      uint64_t v76 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
      int v77 = *((unsigned __int8 *)v74 + OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated);
      uint64_t v78 = v74;
      if (v77 != 1 || (sub_10017CB6C(a2, v75) & 1) == 0)
      {
        (*(void (**)(void))((swift_isaMask & *v78) + 0x110))();
        *((unsigned char *)v12 + v76) = 1;
      }
    }
    (*(void (**)(uint64_t))((swift_isaMask & *v12) + 0x1D0))(v72);
    goto LABEL_50;
  }
  _s16WorkoutIconAssetCMa(0);
  uint64_t v80 = swift_dynamicCastClass();
  if (v80)
  {
    uint64_t v81 = v80;
    type metadata accessor for WorkoutActivityGridView();
    id v82 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v83 = a1;
    NSString v84 = [v82 init];
    id v12 = v84;
    if (a2 != 6)
    {
      uint64_t v85 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
      char v86 = *((unsigned char *)v84 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
      *((unsigned char *)v84 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType) = a2;
      uint64_t v87 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
      int v88 = *((unsigned __int8 *)v84 + OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated);
      uint64_t v89 = v84;
      uint64_t v166 = v87;
      if (v88 == 1)
      {
        uint64_t v90 = v89;
        if (sub_10017CB6C(a2, v86))
        {

          goto LABEL_74;
        }
        a2 = *((unsigned __int8 *)v12 + v85);
        uint64_t v89 = v90;
      }
      unint64_t v116 = *(void **)&v89[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView];
      uint64_t v117 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v116) + 0x58);
      uint64_t v118 = v89;
      uint64_t v119 = v116;
      v117(7, a2);

      uint64_t v120 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v120 - 8) + 56))(v6, 1, 1, v120);
      uint64_t v121 = swift_allocObject();
      swift_unknownObjectWeakInit();
      type metadata accessor for MainActor();
      swift_retain();
      uint64_t v122 = static MainActor.shared.getter();
      Swift::String v123 = (void *)swift_allocObject();
      v123[2] = v122;
      v123[3] = &protocol witness table for MainActor;
      v123[4] = v121;
      swift_release();
      sub_100328A60((uint64_t)v6, (uint64_t)&unk_100807C78, (uint64_t)v123);
      swift_release();
      *((unsigned char *)v12 + v166) = 1;
    }
LABEL_74:
    uint64_t v124 = *(void **)((char *)v12 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutAsset);
    *(void *)((char *)v12 + OBJC_IVAR____TtC7Journal23WorkoutActivityGridView_workoutAsset) = v81;
    unint64_t v22 = (char *)v83;

    sub_10059BF80();
    goto LABEL_50;
  }
  _s17WorkoutRouteAssetCMa(0);
  uint64_t v91 = swift_dynamicCastClass();
  if (v91)
  {
    uint64_t v92 = v91;
    type metadata accessor for RouteAssetView();
    id v93 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v94 = a1;
    unint64_t v95 = [v93 init];
    id v12 = v95;
    if (a2 != 6)
    {
      char v96 = *((unsigned char *)v95 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
      *((unsigned char *)v95 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType) = a2;
      uint64_t v97 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
      int v98 = *((unsigned __int8 *)v95 + OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated);
      uint64_t v99 = v95;
      if (v98 != 1 || (sub_10017CB6C(a2, v96) & 1) == 0)
      {
        sub_1001041A0();
        *((unsigned char *)v12 + v97) = 1;
      }
    }
    uint64_t v100 = *(void **)((char *)v12 + OBJC_IVAR____TtC7Journal14RouteAssetView_routeAsset);
    *(void *)((char *)v12 + OBJC_IVAR____TtC7Journal14RouteAssetView_routeAsset) = v92;
    unint64_t v22 = (char *)v94;

    sub_100100EF4();
    goto LABEL_50;
  }
  _s19MotionActivityAssetCMa(0);
  uint64_t v101 = swift_dynamicCastClass();
  if (v101)
  {
    uint64_t v102 = v101;
    type metadata accessor for MotionActivityGridView();
    id v103 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v104 = a1;
    unint64_t v105 = [v103 init];
    uint64_t v106 = v105;
    if (a2 != 6)
    {
      char v107 = v105[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
      v105[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType] = a2;
      uint64_t v108 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
      if (v105[OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated] != 1
        || (sub_10017CB6C(a2, v107) & 1) == 0)
      {
        sub_10024497C();
        v106[v108] = 1;
      }
    }
    uint64_t v109 = OBJC_IVAR____TtC7Journal23MotionActivityAssetView_motionActivityAsset;
    uint64_t v110 = *(void **)&v106[OBJC_IVAR____TtC7Journal23MotionActivityAssetView_motionActivityAsset];
    *(void *)&v106[OBJC_IVAR____TtC7Journal23MotionActivityAssetView_motionActivityAsset] = v102;
    id v111 = v104;
    id v12 = v106;

    sub_1000E2818();
    sub_1000E412C();
    uint64_t v112 = *(void *)&v106[v109];
    if (v112)
    {
      uint64_t v113 = swift_allocObject();
      swift_unknownObjectWeakInit();
      int v114 = (void (**)())(v112 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
      uint64_t v115 = *(void *)(v112 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
      *int v114 = sub_1003CE390;
      v114[1] = (void (*)())v113;
      sub_10001ABB8(v115);
    }

    return v12;
  }
  _s15GenericMapAssetCMa(0);
  uint64_t v125 = swift_dynamicCastClass();
  if (v125)
  {
    uint64_t v126 = v125;
    type metadata accessor for GenericMapAssetView();
    id v127 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v128 = a1;
    uint64_t v129 = [v127 init];
    id v12 = v129;
    if (a2 == 6)
    {
LABEL_82:
      id v138 = *(void **)((char *)v12 + OBJC_IVAR____TtC7Journal19GenericMapAssetView_mapAsset);
      *(void *)((char *)v12 + OBJC_IVAR____TtC7Journal19GenericMapAssetView_mapAsset) = v126;
      unint64_t v22 = (char *)v128;

      sub_1004E3194();
      goto LABEL_50;
    }
    uint64_t v130 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
    char v131 = *((unsigned char *)v129 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
    *((unsigned char *)v129 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType) = a2;
    uint64_t v132 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
    int v133 = *((unsigned __int8 *)v129 + OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated);
    uint64_t v134 = v129;
    if (v133 == 1)
    {
      if (sub_10017CB6C(a2, v131))
      {
LABEL_81:

        goto LABEL_82;
      }
      a2 = *((unsigned __int8 *)v12 + v130);
    }
    uint64_t v135 = *(void **)&v134[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView];
    uint64_t v136 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v135) + 0x58);
    int v137 = v135;
    v136(10, a2);

    sub_1004E3194();
    *((unsigned char *)v12 + v132) = 1;
    goto LABEL_81;
  }
  _s16StateOfMindAssetCMa(0);
  uint64_t v139 = swift_dynamicCastClass();
  if (v139)
  {
    unsigned __int8 v140 = (void *)v139;
    type metadata accessor for StateOfMindAssetGridView();
    id v141 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v142 = a1;
    Swift::String v143 = [v141 init];
    int v144 = v143;
    if (a2 != 6)
    {
      char v145 = v143[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
      v143[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType] = a2;
      uint64_t v146 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
      if (v143[OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated] != 1
        || (sub_10017CB6C(a2, v145) & 1) == 0)
      {
        sub_10028B478();
        v144[v146] = 1;
      }
    }
    id v147 = v142;
    id v12 = v144;
    sub_10001A7FC(v140);
  }
  else
  {
    _s20ThirdPartyMediaAssetCMa(0);
    uint64_t v148 = swift_dynamicCastClass();
    if (v148)
    {
      uint64_t v149 = v148;
      type metadata accessor for MediaAssetView();
      id v150 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      id v151 = a1;
      Swift::String v152 = [v150 init];
      id v12 = v152;
      if (a2 != 6)
      {
        char v153 = *((unsigned char *)v152 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
        *((unsigned char *)v152 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType) = a2;
        uint64_t v154 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
        int v155 = *((unsigned __int8 *)v152 + OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated);
        v156 = v152;
        if (v155 != 1 || (sub_10017CB6C(a2, v153) & 1) == 0)
        {
          (*(void (**)(void))((swift_isaMask & *v156) + 0x110))();
          *((unsigned char *)v12 + v154) = 1;
        }
      }
      (*(void (**)(uint64_t))((swift_isaMask & *v12) + 0x1D0))(v149);
    }
    else
    {
      _s12UnknownAssetCMa();
      if (!swift_dynamicCastClass()) {
        return 0;
      }
      type metadata accessor for UnknownAssetView();
      uint64_t v157 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
      id v12 = v157;
      if (a2 != 6)
      {
        uint64_t v158 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
        char v159 = *((unsigned char *)v157 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
        *((unsigned char *)v157 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType) = a2;
        uint64_t v160 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
        int v161 = *((unsigned __int8 *)v157 + OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated);
        unint64_t v22 = v157;
        if (v161 != 1 || (sub_10017CB6C(a2, v159) & 1) == 0)
        {
          unint64_t v162 = *(void **)&v22[OBJC_IVAR____TtC7Journal16UnknownAssetView_symbolAndTextFallbackView];
          if (v162)
          {
            id v163 = (void *)*((unsigned __int8 *)v12 + v158);
            id v164 = v162;
            sub_1001111C8(v163);
          }
          *((unsigned char *)v12 + v160) = 1;
        }
        goto LABEL_50;
      }
    }
  }
  return v12;
}

char *sub_1003CDE44(void *a1, uint64_t a2)
{
  _s10VideoAssetCMa(0);
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    uint64_t v5 = v4;
    type metadata accessor for VideoAssetGridView();
    id v6 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v7 = a1;
    uint64_t v8 = [v6 init];
    id v9 = v8;
    if (a2 != 6)
    {
      char v10 = v8[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
      v8[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType] = a2;
      uint64_t v11 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
      if (v8[OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated] != 1
        || (sub_10017CB6C(a2, v10) & 1) == 0)
      {
        sub_1005A5ECC();
        v9[v11] = 1;
      }
    }
    id v12 = *(void **)&v9[OBJC_IVAR____TtC7Journal14VideoAssetView_videoAsset];
    *(void *)&v9[OBJC_IVAR____TtC7Journal14VideoAssetView_videoAsset] = v5;
    id v13 = v7;
    char v14 = v9;
    sub_1005E0A28(v12);

    return v14;
  }
  _s9LinkAssetCMa(0);
  uint64_t v15 = swift_dynamicCastClass();
  if (v15)
  {
    int v16 = (void *)v15;
    type metadata accessor for LinkAssetGridView();
    id v17 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v18 = a1;
    unint64_t v19 = (char *)[v17 init];
    char v14 = v19;
    if (a2 != 6)
    {
      char v20 = v19[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
      v19[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType] = a2;
      uint64_t v21 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
      int v22 = v19[OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated];
      uint64_t v23 = v19;
      if (v22 != 1 || (sub_10017CB6C(a2, v20) & 1) == 0)
      {
        sub_1004A30D8();
        v14[v21] = 1;
      }
    }
    id v24 = v18;
    sub_1004A7054(v16);
LABEL_14:

    return v14;
  }
  _s12ContactAssetCMa(0);
  uint64_t v26 = swift_dynamicCastClass();
  if (v26)
  {
    uint64_t v27 = v26;
    type metadata accessor for ContactAssetGridView();
    id v28 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
    id v29 = a1;
    int v30 = (char *)[v28 init];
    char v14 = v30;
    if (a2 != 6)
    {
      char v31 = v30[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
      v30[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType] = a2;
      uint64_t v32 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
      int v33 = v30[OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated];
      uint64_t v34 = v30;
      if (v33 != 1 || (sub_10017CB6C(a2, v31) & 1) == 0)
      {
        sub_1001E8268();
        v14[v32] = 1;
      }
    }
    uint64_t v35 = OBJC_IVAR____TtC7Journal16ContactAssetView_contactAsset;
    id v36 = *(void **)&v14[OBJC_IVAR____TtC7Journal16ContactAssetView_contactAsset];
    *(void *)&v14[OBJC_IVAR____TtC7Journal16ContactAssetView_contactAsset] = v27;
    id v24 = v29;

    sub_100521E54();
    sub_100521BC0();
    uint64_t v37 = *(void *)&v14[v35];
    if (v37)
    {
      uint64_t v38 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v39 = (void (**)())(v37 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
      uint64_t v40 = *(void *)(v37 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
      *uint64_t v39 = sub_1002487D4;
      v39[1] = (void (*)())v38;
      sub_10001ABB8(v40);
    }
    goto LABEL_14;
  }
  _s10AudioAssetCMa(0);
  uint64_t v41 = swift_dynamicCastClass();
  if (v41)
  {
    uint64_t v42 = v41;
    uint64_t v56 = &type metadata for JournalFeatureFlags;
    unint64_t v57 = sub_10005F364();
    v55[0] = 10;
    id v43 = a1;
    char v44 = isFeatureEnabled(_:)();
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v55);
    if (v44) {
      type metadata accessor for AudioAssetTranscriptionGridView();
    }
    else {
      type metadata accessor for AudioAssetGridView();
    }
    char v49 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    char v14 = v49;
    if (a2 != 6)
    {
      char v50 = v49[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
      v49[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType] = a2;
      uint64_t v51 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
      int v52 = v49[OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated];
      uint64_t v53 = v49;
      if (v52 != 1 || (sub_10017CB6C(a2, v50) & 1) == 0)
      {
        (*(void (**)(void))((swift_isaMask & *(void *)v53) + 0x110))();
        v14[v51] = 1;
      }
    }
    uint64_t v54 = *(void **)&v14[OBJC_IVAR____TtC7Journal14AudioAssetView_audioAsset];
    *(void *)&v14[OBJC_IVAR____TtC7Journal14AudioAssetView_audioAsset] = v42;
    id v24 = v43;

    sub_10026009C();
    goto LABEL_14;
  }
  _s20ThirdPartyMediaAssetCMa(0);
  uint64_t v45 = swift_dynamicCastClass();
  if (v45)
  {
    id v46 = (void *)v45;
    id v47 = a1;
    return sub_100352CEC(v46, a2);
  }
  _s10MusicAssetCMa(0);
  if (swift_dynamicCastClass()
    || (_s12PodcastAssetCMa(0), swift_dynamicCastClass())
    || (_s9BookAssetCMa(0), swift_dynamicCastClass()))
  {
    type metadata accessor for MediaAssetGridView();
    return sub_10021E2C4(a1, a2);
  }

  return (char *)sub_1003CCE50(a1, a2);
}

uint64_t sub_1003CE358()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1003CE390()
{
}

uint64_t sub_1003CE398()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_1003CE3D8()
{
}

uint64_t sub_1003CE3EC()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  v1[6] = swift_task_alloc();
  return _swift_task_switch(sub_1003CE4BC, 0, 0);
}

uint64_t sub_1003CE4BC()
{
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 32);
  unint64_t v3 = *(void **)(*(void *)(v0 + 16) + 24);
  *(void *)(v0 + 56) = v3;
  *(_DWORD *)(v0 + 144) = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
  uint64_t v4 = *(void (**)(uint64_t))(v2 + 104);
  *(void *)(v0 + 64) = v4;
  *(void *)(v0 + 72) = (v2 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v4(v1);
  v3;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  void *v5 = v0;
  v5[1] = sub_1003CE5D4;
  return NSManagedObjectContext.perform<A>(schedule:_:)();
}

uint64_t sub_1003CE5D4()
{
  uint64_t v2 = *(void **)v1;
  unint64_t v3 = *(void **)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  uint64_t v5 = *(void *)(*(void *)v1 + 32);
  uint64_t v6 = *(void *)(*(void *)v1 + 24);
  v2[11] = v0;
  swift_task_dealloc();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v2[12] = v7;
  v2[13] = (v5 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v7(v4, v6);
  swift_release();

  if (v0) {
    uint64_t v8 = sub_1003CEAC8;
  }
  else {
    uint64_t v8 = sub_1003CE794;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_1003CE794()
{
  id v1 = [*(id *)(v0 + 56) parentContext];
  *(void *)(v0 + 112) = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    unint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 64);
    uint64_t v4 = *(unsigned int *)(v0 + 144);
    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 16);
    uint64_t v6 = *(void *)(v0 + 24);
    uint64_t v8 = swift_allocObject();
    *(void *)(v0 + 120) = v8;
    *(void *)(v8 + 16) = v7;
    *(void *)(v8 + 24) = v2;
    v3(v5, v4, v6);
    swift_retain();
    v2;
    id v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v9;
    *id v9 = v0;
    v9[1] = sub_1003CE92C;
    return NSManagedObjectContext.perform<A>(schedule:_:)();
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_1003CE92C()
{
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v1 + 96);
  uint64_t v3 = *(void *)(*(void *)v1 + 40);
  uint64_t v4 = *(void *)(*(void *)v1 + 24);
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  v2(v3, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_1003CEBA8;
  }
  else {
    uint64_t v5 = sub_1003CEB34;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1003CEAC8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003CEB34()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003CEBA8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

id sub_1003CEC1C(uint64_t a1)
{
  id v1 = *(id *)(a1 + 24);
  sub_100438DFC(v1, 0x6F72685465766173, 0xEF2928656C626177, 0x6E6F6320706D6574, 0xEC00000074786574);

  id v4 = 0;
  if ([v1 save:&v4]) {
    return v4;
  }
  id v3 = v4;
  _convertNSErrorToError(_:)();

  return (id)swift_willThrow();
}

id sub_1003CED14(uint64_t a1, void *a2)
{
  sub_100438DFC(a2, 0x6F72685465766173, 0xEF2928656C626177, 0xD000000000000013, 0x800000010069B8D0);
  id v5 = 0;
  if ([a2 save:&v5]) {
    return v5;
  }
  id v4 = v5;
  _convertNSErrorToError(_:)();

  return (id)swift_willThrow();
}

uint64_t sub_1003CEE00()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_10080B9E0);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_10080B9E0);
  if (qword_1007F7DD8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083ED88);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1003CEEC8(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal25AudioIntentViewController_autosaveManager] = 0;
  *(void *)&v1[OBJC_IVAR____TtC7Journal25AudioIntentViewController_entry] = 0;
  id v3 = &v1[OBJC_IVAR____TtC7Journal25AudioIntentViewController_uuid];
  uint64_t v4 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
  id v6 = objc_allocWithZone((Class)type metadata accessor for CanvasTranscribingAudioPickerController());
  uint64_t v7 = v1;
  *(void *)&v7[OBJC_IVAR____TtC7Journal25AudioIntentViewController_canvasTranscribingPickerVC] = sub_100316A48(0, 1);

  v11.id receiver = v7;
  v11.Class super_class = (Class)type metadata accessor for AudioIntentViewController();
  [super initWithNibName:0 bundle:0];
  uint64_t v9 = *(void *)(sub_100313330() + 48);
  swift_retain();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  if (v9)
  {
    *(void *)(v9 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_pickerDelegate + 8) = &off_1007A8F28;
    swift_unknownObjectWeakAssign();
    swift_release();
  }
  return v8;
}

void sub_1003CF0D8()
{
  uint64_t v1 = v0;
  id v2 = [self sharedInstance];
  id v3 = [v2 recordPermission];

  if (v3 != (id)1735552628)
  {
    id v16 = [v1 presentedViewController];
    if (v16)
    {
      id v17 = v16;
      type metadata accessor for PermissionViewController();
      uint64_t v18 = swift_dynamicCastClass();

      if (v18) {
        return;
      }
    }
    type metadata accessor for PermissionViewController();
    unint64_t v19 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    *(void *)&v19[OBJC_IVAR____TtC7Journal24PermissionViewController_delegate + 8] = &off_1007A8F00;
    swift_unknownObjectWeakAssign();
    v19[OBJC_IVAR____TtC7Journal24PermissionViewController_permissionViewType] = v3 != (id)1970168948;
    sub_10047C534();
    sub_10047C7A0();
    [v1 addChildViewController:v19];
    id v20 = [v1 view];
    if (v20)
    {
      uint64_t v21 = v20;
      id v22 = [v19 view];
      if (v22)
      {
        uint64_t v23 = v22;
        [v21 addSubview:v22];

        [v19 didMoveToParentViewController:v1];
        id v24 = [v19 view];
        if (v24)
        {
          id v25 = v24;
          sub_1001DCF60(0.0);

          swift_bridgeObjectRelease();
          return;
        }
LABEL_29:
        __break(1u);
        goto LABEL_30;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v34 = &type metadata for JournalFeatureFlags;
  unint64_t v35 = sub_10005F364();
  v33[0] = 10;
  char v4 = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v33);
  id v5 = [v1 presentedViewController];
  id v6 = v5;
  if (v4)
  {
    if (!v5
      || (type metadata accessor for CanvasTranscribingAudioPickerController(),
          uint64_t v7 = swift_dynamicCastClass(),
          v6,
          !v7))
    {
      id v8 = *(void **)&v1[OBJC_IVAR____TtC7Journal25AudioIntentViewController_canvasTranscribingPickerVC];
      uint64_t v9 = *(void *)(sub_100313330() + 48);
      swift_retain();
      swift_release();
      if (v9)
      {
        *(void *)(v9 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_pickerDelegate + 8) = &off_1007A8F28;
        swift_unknownObjectWeakAssign();
        swift_release();
      }
      [v1 addChildViewController:v8];
      id v10 = [v1 view];
      if (v10)
      {
        objc_super v11 = v10;
        id v12 = [v8 view];
        if (v12)
        {
          id v13 = v12;
          [v11 addSubview:v12];

          [v8 didMoveToParentViewController:v1];
          id v14 = [v8 view];
          if (v14)
          {
            uint64_t v15 = v14;
            sub_1001DCF60(0.0);
LABEL_25:

            swift_bridgeObjectRelease();
            return;
          }
          goto LABEL_32;
        }
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
  }
  else if (!v5 {
         || (type metadata accessor for CanvasAudioPickerController(),
  }
             uint64_t v26 = swift_dynamicCastClass(),
             v6,
             !v26))
  {
    type metadata accessor for CanvasAudioPickerController();
    uint64_t v27 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    *(void *)&v27[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pickerDelegate + 8] = &off_1007A8F28;
    swift_unknownObjectWeakAssign();
    [v1 addChildViewController:v27];
    id v28 = [v1 view];
    if (v28)
    {
      id v29 = v28;
      id v30 = [v27 view];
      if (v30)
      {
        char v31 = v30;
        [v29 addSubview:v30];

        [v27 didMoveToParentViewController:v1];
        id v32 = [v27 view];
        if (v32)
        {
          uint64_t v15 = v32;
          sub_1001DCF60(0.0);

          goto LABEL_25;
        }
LABEL_35:
        __break(1u);
        return;
      }
LABEL_34:
      __break(1u);
      goto LABEL_35;
    }
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
}

id sub_1003CF63C()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for AudioIntentViewController();
  return [super dealloc];
}

uint64_t sub_1003CF714()
{
  return type metadata accessor for AudioIntentViewController();
}

uint64_t type metadata accessor for AudioIntentViewController()
{
  uint64_t result = qword_10080BA40;
  if (!qword_10080BA40) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003CF768()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1003CF810(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_100010218(&qword_100800950);
  v2[7] = swift_task_alloc();
  type metadata accessor for Journaling.EntrySource();
  v2[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[9] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[10] = v5;
  v2[11] = v4;
  return _swift_task_switch(sub_1003CF960, v5, v4);
}

uint64_t sub_1003CF960()
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[3];
  uint64_t v4 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
  v0[12] = v4;
  uint64_t v5 = sub_100010218(&qword_100805B00);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v1, 1, 2, v5);
  uint64_t v6 = v3 + OBJC_IVAR____TtC7Journal25AudioIntentViewController_uuid;
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v2, v6, v7);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(v2, 0, 1, v7);
  id v9 = v4;
  id v10 = sub_100190624(v1, (uint64_t)v9, v2);
  type metadata accessor for Journaling.EntryViewModel();
  swift_allocObject();
  v0[13] = sub_10057F170(v10, 1, 1, v9);
  sub_1000ADA74(v2);
  sub_1000388DC(v1);
  return _swift_task_switch(sub_1003CFB54, 0, 0);
}

uint64_t sub_1003CFB54()
{
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v4 = v0[4];
  uint64_t v5 = swift_allocObject();
  v0[14] = v5;
  *(void *)(v5 + 16) = v1;
  *(unsigned char *)(v5 + 24) = 1;
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v4);
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[15] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1003CFC84;
  uint64_t v7 = v0[6];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v6, v7, sub_1003D2B98, v5, (char *)&type metadata for () + 8);
}

uint64_t sub_1003CFC84()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1003CFDF8, 0, 0);
}

uint64_t sub_1003CFDF8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003CFE88;
  return sub_1005820C0();
}

uint64_t sub_1003CFE88()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 136) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1003CFFE0;
  uint64_t v4 = *(void *)(v1 + 16);
  return sub_1000E7908(v4);
}

uint64_t sub_1003CFFE0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_1003D0100, v3, v2);
}

uint64_t sub_1003D0100()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 104);
  return v1(v2);
}

uint64_t sub_1003D0194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  uint64_t v6 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v5[7] = v6;
  v5[8] = *(void *)(v6 - 8);
  v5[9] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[10] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[11] = v8;
  v5[12] = v7;
  return _swift_task_switch(sub_1003D0288, v8, v7);
}

uint64_t sub_1003D0288()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[13] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = (void *)v0[6];
    if (v3)
    {
      id v4 = v3;
      uint64_t v5 = (void *)swift_task_alloc();
      v0[14] = v5;
      void *v5 = v0;
      v5[1] = sub_1003D0470;
      return sub_1003CF810((uint64_t)v4);
    }
    swift_release();
    if (qword_1007F6F38 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100026A54(v7, (uint64_t)qword_10080B9E0);
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Received a nil asset when starting recording", v10, 2u);
      swift_slowDealloc();
    }
  }
  else
  {
    swift_release();
  }
  swift_task_dealloc();
  objc_super v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1003D0470(uint64_t a1)
{
  *(void *)(*(void *)v1 + 120) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1003D0570, 0, 0);
}

uint64_t sub_1003D0570()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_context);
  v0[16] = v2;
  if (v2 && (uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO), (v0[17] = v3) != 0))
  {
    uint64_t v5 = v0[8];
    uint64_t v4 = v0[9];
    uint64_t v6 = v0[7];
    uint64_t v7 = swift_allocObject();
    v0[18] = v7;
    *(void *)(v7 + 16) = v3;
    *(unsigned char *)(v7 + 24) = 1;
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v6);
    id v8 = v3;
    v2;
    os_log_type_t v9 = (void *)swift_task_alloc();
    v0[19] = v9;
    *os_log_type_t v9 = v0;
    v9[1] = sub_1003D0714;
    uint64_t v10 = v0[9];
    return NSManagedObjectContext.perform<A>(schedule:_:)(v9, v10, sub_1003D2B80, v7, (char *)&type metadata for () + 8);
  }
  else
  {
    uint64_t v11 = v0[11];
    uint64_t v12 = v0[12];
    return _swift_task_switch(sub_1003D08F0, v11, v12);
  }
}

uint64_t sub_1003D0714()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 72);
  uint64_t v2 = *(void *)(*(void *)v0 + 64);
  uint64_t v3 = *(void *)(*(void *)v0 + 56);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1003D0888, 0, 0);
}

uint64_t sub_1003D0888()
{
  uint64_t v1 = *(void **)(v0 + 128);

  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 96);
  return _swift_task_switch(sub_1003D08F0, v2, v3);
}

uint64_t sub_1003D08F0()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  swift_release();
  *(void *)(v2 + OBJC_IVAR____TtC7Journal25AudioIntentViewController_entry) = v1;
  swift_retain();
  swift_release();
  uint64_t v3 = *(void *)(sub_100313330() + 48);
  swift_retain();
  swift_release();
  uint64_t v4 = (char *)v0[13];
  if (v3)
  {
    _s15AutosaveManagerCMa();
    swift_allocObject();
    swift_retain();
    uint64_t v5 = sub_10010A5F8();
    uint64_t v6 = OBJC_IVAR____TtC7Journal25AudioIntentViewController_autosaveManager;
    *(void *)&v4[OBJC_IVAR____TtC7Journal25AudioIntentViewController_autosaveManager] = v5;
    swift_release();
    uint64_t v7 = (void *)v0[13];
    id v8 = (void *)v0[6];
    if (*(void *)&v4[v6])
    {
      swift_retain();
      swift_retain();
      id v9 = sub_10010A584();
      [v9 addObject:v3];

      swift_release();
      swift_release_n();

      swift_release();
    }
    else
    {
      swift_release();
      swift_release();
    }
  }
  else
  {
    uint64_t v10 = (void *)v0[6];
    swift_release();
  }
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_1003D0A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  v4[6] = type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  if (qword_1007F7CE0 != -1) {
    swift_once();
  }
  uint64_t v6 = qword_10083EA18;
  v4[8] = qword_10083EA18;
  return _swift_task_switch(sub_1003D0BAC, v6, 0);
}

uint64_t sub_1003D0BAC()
{
  (*(void (**)(void, void, void))(v0[4] + 104))(v0[5], enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v0[3]);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[9] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003D0CA0;
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[2];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v1, v2, sub_10005EF68, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_1003D0CA0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 64);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  uint64_t v4 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_1003D0E30, v1, 0);
}

uint64_t sub_1003D0E30()
{
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000251A8, v1, v0);
}

uint64_t sub_1003D0EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  uint64_t v6 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[11] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[12] = v8;
  v5[13] = v7;
  return _swift_task_switch(sub_1003D0F9C, v8, v7);
}

uint64_t sub_1003D0F9C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[14] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = *(void *)(Strong + OBJC_IVAR____TtC7Journal25AudioIntentViewController_entry);
    v0[15] = v3;
    if (v3)
    {
      swift_retain();
      return _swift_task_switch(sub_1003D1098, 0, 0);
    }
    swift_release();
  }
  else
  {
    swift_release();
  }
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1003D1098()
{
  uint64_t v1 = (void *)v0[7];
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = v1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    id v6 = v1;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[16] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1003D120C;
    return sub_10058DF1C(ObjectType, v3);
  }
  else
  {
    uint64_t v10 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
    id v9 = (void *)swift_task_alloc();
    v0[17] = v9;
    *id v9 = v0;
    v9[1] = sub_1003D13B4;
    return v10();
  }
}

uint64_t sub_1003D120C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1003D1308, 0, 0);
}

uint64_t sub_1003D1308()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003D13B4;
  return v3();
}

uint64_t sub_1003D13B4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1003D14B0, 0, 0);
}

uint64_t sub_1003D14B0()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_context);
  v0[18] = v2;
  if (v2 && (uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO), (v0[19] = v3) != 0))
  {
    uint64_t v5 = v0[9];
    uint64_t v4 = v0[10];
    uint64_t v6 = v0[8];
    uint64_t v7 = swift_allocObject();
    v0[20] = v7;
    *(void *)(v7 + 16) = v3;
    *(unsigned char *)(v7 + 24) = 0;
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v6);
    id v8 = v3;
    v2;
    id v9 = (void *)swift_task_alloc();
    v0[21] = v9;
    *id v9 = v0;
    v9[1] = sub_1003D16EC;
    uint64_t v10 = v0[10];
    uint64_t v11 = (char *)&type metadata for () + 8;
    uint64_t v12 = sub_1003088D4;
    uint64_t v13 = v7;
  }
  else
  {
    uint64_t v14 = v0[15];
    uint64_t v16 = v0[9];
    uint64_t v15 = v0[10];
    uint64_t v17 = v0[8];
    uint64_t v18 = swift_allocObject();
    v0[22] = v18;
    *(void *)(v18 + 16) = v14;
    *(unsigned char *)(v18 + 24) = 0;
    (*(void (**)(uint64_t, void, uint64_t))(v16 + 104))(v15, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v17);
    swift_retain();
    id v9 = (void *)swift_task_alloc();
    v0[23] = v9;
    *id v9 = v0;
    v9[1] = sub_1003D1998;
    uint64_t v10 = v0[10];
    uint64_t v11 = (char *)&type metadata for () + 8;
    uint64_t v12 = sub_10028A59C;
    uint64_t v13 = v18;
  }
  return NSManagedObjectContext.perform<A>(schedule:_:)(v9, v10, v12, v13, v11);
}

uint64_t sub_1003D16EC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = *(void *)(*(void *)v0 + 72);
  uint64_t v3 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1003D1860, 0, 0);
}

uint64_t sub_1003D1860()
{
  uint64_t v1 = *(void **)(v0 + 144);

  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 176) = v6;
  *(void *)(v6 + 16) = v2;
  *(unsigned char *)(v6 + 24) = 0;
  (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v3, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v5);
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 184) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1003D1998;
  uint64_t v8 = *(void *)(v0 + 80);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v7, v8, sub_10028A59C, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_1003D1998()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 80);
  uint64_t v2 = *(void *)(*(void *)v0 + 72);
  uint64_t v3 = *(void *)(*(void *)v0 + 64);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1003D1B0C, 0, 0);
}

uint64_t sub_1003D1B0C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 192) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003D1B9C;
  return sub_1005820C0();
}

uint64_t sub_1003D1B9C()
{
  uint64_t v1 = *v0;
  uint64_t v5 = *v0;
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))((char *)&dword_10080BA68 + dword_10080BA68);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 200) = v2;
  *uint64_t v2 = v5;
  v2[1] = sub_1003D1CF0;
  return v4();
}

uint64_t sub_1003D1CF0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  uint64_t v4 = *(void *)(v2 + 96);
  if (v0) {
    uint64_t v5 = sub_1003D1EBC;
  }
  else {
    uint64_t v5 = sub_1003D1E2C;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1003D1E2C()
{
  swift_release();
  uint64_t v1 = *(void **)(v0 + 112);
  [v1 dismissViewControllerAnimated:1 completion:0];
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1003D1EBC()
{
  swift_release();
  if (qword_1007F6F38 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_10080B9E0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "(audioPickerDidFinish) Error: %@", v4, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = (void *)v0[14];
  [v7 dismissViewControllerAnimated:1 completion:0];
  swift_release();

  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1003D20F8(uint64_t a1, uint64_t a2, void *a3)
{
  sub_100010218(&qword_1007FA1D0);
  uint64_t v5 = swift_task_alloc();
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  id v8 = a3;
  swift_retain();
  uint64_t v9 = static MainActor.shared.getter();
  uint64_t v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v7;
  uint64_t v10[5] = a3;
  swift_release();
  sub_100328A60(v5, (uint64_t)&unk_10080BA98, (uint64_t)v10);
  swift_release();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v3 + 8);
  return sub_100317254(v11);
}

uint64_t sub_1003D2298(void *a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for MainActor();
  id v6 = a1;
  uint64_t v7 = static MainActor.shared.getter();
  id v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  v8[4] = v6;
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_10080BA78, (uint64_t)v8);
  return swift_release();
}

uint64_t sub_1003D23B8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  id v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = OBJC_IVAR____TtC7Journal25AudioIntentViewController_autosaveManager;
  if (*(void *)(v1 + OBJC_IVAR____TtC7Journal25AudioIntentViewController_autosaveManager))
  {
    swift_retain();
    uint64_t v8 = *(void *)(sub_100313330() + 48);
    swift_retain();
    swift_release();
    if (v8)
    {
      swift_retain();
      id v9 = sub_10010A584();
      [v9 removeObject:v8];
      swift_release();

      *(void *)(v2 + v7) = 0;
      swift_release();
      swift_release();
    }
    swift_release();
  }
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  id v12 = a1;
  uint64_t v13 = static MainActor.shared.getter();
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v13;
  v14[3] = &protocol witness table for MainActor;
  void v14[4] = v11;
  void v14[5] = v12;
  swift_release();
  sub_100328A60((uint64_t)v6, (uint64_t)&unk_10080BA60, (uint64_t)v14);
  return swift_release();
}

uint64_t sub_1003D25B8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003D25F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_10002C194;
  return sub_1003D0EA8(a1, v4, v5, v7, v6);
}

uint64_t sub_1003D26B4()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003D26EC()
{
  return swift_deallocObject();
}

id sub_1003D2724()
{
  return sub_1003CEC1C(v0);
}

uint64_t sub_1003D2740()
{
  swift_release();

  return swift_deallocObject();
}

id sub_1003D2780()
{
  return sub_1003CED14(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1003D279C()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1003D27DC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_10022835C(a1, v4, v5, v6);
}

void sub_1003D2890()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC7Journal25AudioIntentViewController_entry);
  if (v4)
  {
    uint64_t v5 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v3, 1, 1, v5);
    type metadata accessor for MainActor();
    swift_retain_n();
    uint64_t v6 = static MainActor.shared.getter();
    uint64_t v7 = (void *)swift_allocObject();
    uint64_t v7[2] = v6;
    v7[3] = &protocol witness table for MainActor;
    v7[4] = v4;
    sub_100328A60((uint64_t)v3, (uint64_t)&unk_10080BA88, (uint64_t)v7);
    swift_release();
    swift_release();
  }
}

uint64_t sub_1003D29C0()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003D2A00(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_1003D0A9C(a1, v4, v5, v6);
}

uint64_t sub_1003D2AB8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100052588;
  return sub_1003D0194(a1, v4, v5, v7, v6);
}

id sub_1003D2B80()
{
  return sub_1003088D4();
}

id sub_1003D2B98()
{
  return sub_10028A59C();
}

uint64_t sub_1003D2BB0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1003DBAC8(&qword_1007FF9D0, (void (*)(uint64_t))type metadata accessor for TranscriptionCoordinator);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + 80);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1003D2C5C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003D2D3C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1003DBAC8(&qword_1007FF9D0, (void (*)(uint64_t))type metadata accessor for TranscriptionCoordinator);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + 88);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1003D2DE8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003D2EC8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  uint64_t v13 = v0;
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  if (*(void *)(v0 + 16))
  {
    uint64_t v6 = *(void *)(v0 + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v6 + 40);
    swift_unknownObjectRetain();
    LODWORD(v6) = v8(ObjectType, v6);
    uint64_t result = swift_unknownObjectRelease();
    if (v6)
    {
      uint64_t v9 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
      type metadata accessor for MainActor();
      swift_retain();
      uint64_t v10 = static MainActor.shared.getter();
      uint64_t v11 = (void *)swift_allocObject();
      v11[2] = v10;
      v11[3] = &protocol witness table for MainActor;
      v11[4] = v1;
      sub_100328A60((uint64_t)v4, (uint64_t)&unk_100807FC0, (uint64_t)v11);
      return swift_release();
    }
  }
  return result;
}

Swift::Void __swiftcall RecordingViewModel.back(interval:)(Swift::Int interval)
{
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, double))(v3 + 144);
  swift_unknownObjectRetain();
  v5(ObjectType, v3, (double)interval);
  swift_unknownObjectRelease();
}

Swift::Void __swiftcall RecordingViewModel.forward(interval:)(Swift::Int interval)
{
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, double))(v3 + 152);
  swift_unknownObjectRetain();
  v5(ObjectType, v3, (double)interval);
  swift_unknownObjectRelease();
}

Swift::Void __swiftcall RecordingViewModel.pausePlayback()()
{
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 136);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);
  swift_unknownObjectRelease();
}

Swift::Void __swiftcall RecordingViewModel.play()()
{
  void (*v4)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  void (*v24)(void *, uint64_t, uint64_t);
  long long v25;
  uint64_t v26;
  uint64_t v27;
  void v28[3];
  uint64_t v29;
  uint64_t v30;

  uint64_t v1 = v0;
  swift_getKeyPath();
  *(void *)&id v25 = v0;
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v2 + 88);
  swift_unknownObjectRetain();
  v4(&v25, ObjectType, v2);
  swift_unknownObjectRelease();
  if (v26)
  {
    sub_10001B3BC(&v25, (uint64_t)v28);
    uint64_t v5 = v29;
    uint64_t v6 = v30;
    sub_10002E0BC(v28, v29);
    uint64_t v7 = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v5, v6);
    uint64_t v9 = v8;
    sub_1003D53B0((uint64_t)&v25);
    uint64_t v10 = v26;
    if (v26)
    {
      uint64_t v11 = v27;
      sub_10002E0BC(&v25, v26);
      uint64_t v12 = (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
      uint64_t v14 = v13;
      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v25);
      if (v7 == v12 && v9 == v14)
      {
        swift_bridgeObjectRelease_n();
LABEL_9:
        swift_getKeyPath();
        *(void *)&id v25 = v1;
        ObservationRegistrar.access<A, B>(_:keyPath:)();
        swift_release();
        uint64_t v16 = *(void *)(v1 + 64);
        uint64_t v17 = swift_getObjectType();
        uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v16 + 120);
        swift_unknownObjectRetain();
        v18(v17, v16);
LABEL_13:
        swift_unknownObjectRelease();
        _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v28);
        return;
      }
      uint64_t v15 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_10001457C((uint64_t)&v25, &qword_1007F9470);
      swift_bridgeObjectRelease();
    }
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v28);
  }
  else
  {
    sub_10001457C((uint64_t)&v25, &qword_1007F9470);
  }
  sub_1003D53B0((uint64_t)&v25);
  if (v26)
  {
    sub_10001B3BC(&v25, (uint64_t)v28);
    swift_getKeyPath();
    *(void *)&id v25 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    unint64_t v19 = *(void *)(v1 + 64);
    uint64_t v20 = swift_getObjectType();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v19 + 128);
    swift_unknownObjectRetain();
    v21(v20, v19);
    swift_unknownObjectRelease();
    swift_getKeyPath();
    *(void *)&id v25 = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    id v22 = *(void *)(v1 + 64);
    uint64_t v23 = swift_getObjectType();
    id v24 = *(void (**)(void *, uint64_t, uint64_t))(v22 + 112);
    swift_unknownObjectRetain();
    v24(v28, v23, v22);
    goto LABEL_13;
  }
  sub_10001457C((uint64_t)&v25, &qword_1007F9470);
}

uint64_t sub_1003D3718(float a1)
{
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v2 - 8);
  id v22 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for NumberFormatStyleConfiguration.Precision();
  uint64_t v4 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Locale();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_100010218(&qword_10080BE08);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v20 - v13;
  uint64_t v15 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v15 - 8);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v16._countAndFlagsBits = 0;
  v16._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v16);
  float v24 = a1;
  static Locale.autoupdatingCurrent.getter();
  sub_1003DB66C();
  FloatingPointFormatStyle.init(locale:)();
  long long v23 = xmmword_1006E64E0;
  sub_100010218(&qword_10080BE18);
  sub_100014488(&qword_10080BE20, &qword_10080BE18);
  static NumberFormatStyleConfiguration.Precision.fractionLength<A>(_:)();
  FloatingPointFormatStyle.precision(_:)();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v21);
  uint64_t v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  v17(v11, v8);
  sub_100014488(&qword_10080BE28, &qword_10080BE08);
  sub_100014344();
  String.LocalizationValue.StringInterpolation.appendInterpolation<A, B>(_:format:)();
  v17(v14, v8);
  v18._countAndFlagsBits = 38851;
  v18._object = (void *)0xA200000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v18);
  String.LocalizationValue.init(stringInterpolation:)();
  static Locale.current.getter();
  return String.init(localized:table:bundle:locale:comment:)();
}

uint64_t sub_1003D3AE4()
{
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (v0[2])
  {
    uint64_t v1 = v0[3];
    uint64_t ObjectType = swift_getObjectType();
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v1 + 8) + 8))(ObjectType))
    {
      swift_getKeyPath();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      if (v0[2])
      {
        uint64_t v3 = v0[3];
        uint64_t v4 = swift_getObjectType();
        uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 64);
        swift_unknownObjectRetain();
        v5(v4, v3);
        swift_unknownObjectRelease();
      }
    }
  }
  uint64_t result = sub_1003D6068();
  if (result)
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v7 = v0[8];
    uint64_t v8 = swift_getObjectType();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v7 + 136);
    swift_unknownObjectRetain();
    v9(v8, v7);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1003D3CBC()
{
  uint64_t v1 = v0;
  sub_1003D53B0((uint64_t)v27);
  uint64_t v2 = v28;
  if (v28)
  {
    uint64_t v3 = v29;
    sub_10002E0BC(v27, v28);
    uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 32))(v2, v3);
    if (v4)
    {
      uint64_t v5 = *(void *)(v4 + 16);
      swift_bridgeObjectRelease();
      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v27);
      if (v5) {
        return 1;
      }
    }
    else
    {
      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v27);
    }
  }
  else
  {
    sub_10001457C((uint64_t)v27, &qword_1007F9470);
  }
  if (*(unsigned char *)(v1 + 80)) {
    goto LABEL_8;
  }
  swift_getKeyPath();
  v27[0] = v1;
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (!*(void *)(v1 + 16)
    || (uint64_t v11 = *(void *)(v1 + 24),
        uint64_t ObjectType = swift_getObjectType(),
        uint64_t v13 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v11 + 40),
        swift_unknownObjectRetain(),
        LODWORD(v11) = v13(ObjectType, v11),
        swift_unknownObjectRelease(),
        !v11))
  {
    swift_getKeyPath();
    v27[0] = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v17 = *(void *)(v1 + 40);
    swift_getKeyPath();
    v27[0] = v17;
    sub_1003DBAC8(qword_10080BE50, (void (*)(uint64_t))type metadata accessor for SiriSpeechRecognitionAssetManager);
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    unint64_t v19 = *(void **)(v17 + 16);
    uint64_t v18 = *(void *)(v17 + 24);
    int v20 = *(unsigned __int8 *)(v17 + 32);
    sub_1003DBB10(v19, v18, *(unsigned char *)(v17 + 32));
    swift_release();
    if ((v20 & 0xC0) == 0x80 && v19 == (void *)1 && !v18 && v20 == 128) {
      return 0;
    }
    sub_1003DBB6C(v19, v18, v20);
    return 6;
  }
  swift_getKeyPath();
  v27[0] = v1;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v1 + 16))
  {
    uint64_t v14 = *(void *)(v1 + 24);
    uint64_t v15 = swift_getObjectType();
    Swift::String v16 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v14 + 40);
    swift_unknownObjectRetain();
    LODWORD(v14) = v16(v15, v14);
    swift_unknownObjectRelease();
    if (v14 == 2 && sub_1003D6068())
    {
LABEL_8:
      sub_1003D53B0((uint64_t)v27);
      uint64_t v7 = v28;
      if (v28)
      {
        uint64_t v8 = v29;
        sub_10002E0BC(v27, v28);
        uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 32))(v7, v8);
        if (v9)
        {
          uint64_t v10 = *(void *)(v9 + 16);
          swift_bridgeObjectRelease();
          _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v27);
          if (!v10) {
            return 5;
          }
        }
        else
        {
          _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v27);
        }
      }
      else
      {
        sub_10001457C((uint64_t)v27, &qword_1007F9470);
      }
    }
  }
  swift_getKeyPath();
  v27[0] = v1;
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v21 = *(void *)(v1 + 40);
  swift_getKeyPath();
  v27[0] = v21;
  sub_1003DBAC8(qword_10080BE50, (void (*)(uint64_t))type metadata accessor for SiriSpeechRecognitionAssetManager);
  swift_retain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  unint64_t v6 = *(void *)(v21 + 16);
  uint64_t v22 = *(void *)(v21 + 24);
  unsigned int v23 = *(unsigned __int8 *)(v21 + 32);
  sub_1003DBB10((void *)v6, v22, *(unsigned char *)(v21 + 32));
  swift_release();
  if (v23 >> 6)
  {
    if (v23 >> 6 == 1)
    {
      v27[0] = v6;
      sub_100010218((uint64_t *)&unk_1007FC0D0);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_40;
      }
      if (v26 == 3)
      {
        swift_errorRelease();
        return 3;
      }
      if (v26)
      {
LABEL_40:
        swift_errorRelease();
        return 2;
      }
      else
      {
        swift_errorRelease();
        return 4;
      }
    }
    else
    {
      if (v22 | v6) {
        BOOL v24 = 0;
      }
      else {
        BOOL v24 = v23 == 128;
      }
      return !v24;
    }
  }
  else
  {
    swift_release();
    if (v23)
    {

      return 4;
    }
  }
  return v6;
}

uint64_t sub_1003D4218()
{
  v1[5] = v0;
  type metadata accessor for MainActor();
  v1[6] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[7] = v3;
  v1[8] = v2;
  return _swift_task_switch(sub_1003D42B0, v3, v2);
}

uint64_t sub_1003D42B0()
{
  uint64_t v1 = v0[5];
  swift_getKeyPath();
  v0[2] = v1;
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (!*(void *)(v1 + 16)) {
    goto LABEL_7;
  }
  uint64_t v2 = *(void *)(v1 + 24);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v2 + 40);
  swift_unknownObjectRetain();
  LODWORD(v2) = v4(ObjectType, v2);
  swift_unknownObjectRelease();
  if (!v2) {
    goto LABEL_7;
  }
  uint64_t v5 = v0[5];
  swift_getKeyPath();
  v0[3] = v5;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = *(void *)(v1 + 16);
  v0[9] = v6;
  if (v6)
  {
    uint64_t v7 = *(void *)(v1 + 24);
    uint64_t v8 = swift_getObjectType();
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v7 + 88) + **(int **)(v7 + 88));
    swift_unknownObjectRetain();
    uint64_t v9 = (void *)swift_task_alloc();
    v0[10] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1003D4524;
    return v12(v8, v7);
  }
  else
  {
LABEL_7:
    swift_release();
    uint64_t v11 = (uint64_t (*)(void))v0[1];
    return v11();
  }
}

uint64_t sub_1003D4524()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_1003D4640;
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v3 = *(void *)(v2 + 56);
    uint64_t v4 = *(void *)(v2 + 64);
    uint64_t v5 = sub_1003AAD8C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1003D4640()
{
  swift_release();
  swift_unknownObjectRelease();
  if (qword_1007F6F40 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_10080BAA8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 32) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed trying to save recording: %@", v4, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1003D4858()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_10080BAA8);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_10080BAA8);
  if (qword_1007F7DF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EDD0);
  os_log_type_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1003D4920()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1003D49C8@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(_OWORD *)(v3 + 16);
  return swift_unknownObjectRetain();
}

uint64_t sub_1003D4A78()
{
  return swift_release();
}

uint64_t sub_1003D4B5C()
{
  return swift_retain();
}

uint64_t sub_1003D4C00@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(void *)(v3 + 40);
  return swift_retain();
}

uint64_t sub_1003D4CAC()
{
  return swift_release();
}

uint64_t sub_1003D4D8C()
{
  return swift_unknownObjectRetain();
}

uint64_t sub_1003D4E34@<X0>(uint64_t *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  *a2 = *(_OWORD *)(v3 + 56);
  return swift_unknownObjectRetain();
}

uint64_t sub_1003D4EE8()
{
  return swift_release();
}

uint64_t type metadata accessor for RecordingViewModel()
{
  uint64_t result = qword_10080BB18;
  if (!qword_10080BB18) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1003D5034()
{
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 81);
}

uint64_t sub_1003D50D4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 81) = a2;
  return result;
}

uint64_t sub_1003D50DC()
{
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v0 + 82);
}

uint64_t sub_1003D517C@<X0>(uint64_t *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = *a1;
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  *a2 = *(unsigned char *)(v3 + 82);
  return result;
}

uint64_t sub_1003D5224()
{
  return swift_release();
}

uint64_t sub_1003D52F4(uint64_t result, char a2)
{
  *(unsigned char *)(result + 82) = a2;
  return result;
}

uint64_t sub_1003D52FC()
{
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(void *)(v0 + 88);
}

uint64_t sub_1003D53A0(uint64_t result, uint64_t a2, char a3)
{
  *(void *)(result + 88) = a2;
  *(unsigned char *)(result + 96) = a3 & 1;
  return result;
}

void sub_1003D53B0(uint64_t a1@<X8>)
{
  if (*(unsigned char *)(v1 + 80) == 1)
  {
    swift_getKeyPath();
    sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v3 = *(void *)(v1 + 64);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 88);
    swift_unknownObjectRetain();
    v5(ObjectType, v3);
    swift_unknownObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)(v1 + 48);
    if (v6)
    {
      uint64_t v7 = *(void **)(v6 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset);
      if (v7)
      {
        uint64_t v9 = *(void **)(v6 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset);
        *(void *)(a1 + 24) = _s10AudioAssetCMa(0);
        *(void *)(a1 + 32) = &off_1007B7DC8;
        uint64_t v7 = v9;
        *(void *)a1 = v9;
      }
      else
      {
        *(void *)(a1 + 32) = 0;
        *(_OWORD *)a1 = 0u;
        *(_OWORD *)(a1 + 16) = 0u;
      }
      id v8 = v7;
    }
    else
    {
      *(void *)(a1 + 32) = 0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
    }
  }
}

double sub_1003D5524()
{
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (v0[2]
    && (uint64_t v1 = v0[3],
        uint64_t ObjectType = swift_getObjectType(),
        ((*(uint64_t (**)(uint64_t))(*(void *)(v1 + 8) + 8))(ObjectType) & 1) != 0))
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (!v0[2]) {
      return 0.0;
    }
    uint64_t v3 = v0[3];
  }
  else
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v3 = v0[8];
  }
  uint64_t v4 = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v3 + 16) + 24))(v4);
  return result;
}

double sub_1003D56AC(uint64_t a1)
{
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (v1[2]
    && (uint64_t v3 = v1[3],
        uint64_t v4 = swift_getObjectType(),
        ((*(uint64_t (**)(uint64_t))(*(void *)(v3 + 8) + 8))(v4) & 1) != 0))
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (v1[2])
    {
      uint64_t v5 = v1[3];
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 56);
      swift_unknownObjectRetain();
      double v8 = COERCE_DOUBLE(v7(a1, ObjectType, v5));
      char v10 = v9;
      swift_unknownObjectRelease();
      if (v10) {
        return 0.0;
      }
      else {
        return v8;
      }
    }
    else
    {
      return 0.0;
    }
  }
  else
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v12 = v1[8];
    uint64_t v13 = swift_getObjectType();
    uint64_t v14 = *(double (**)(uint64_t, uint64_t))(v12 + 40);
    swift_unknownObjectRetain();
    double v11 = v14(v13, v12);
    swift_unknownObjectRelease();
  }
  return v11;
}

double sub_1003D58AC()
{
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (v0[2]
    && (uint64_t v1 = v0[3],
        uint64_t v2 = swift_getObjectType(),
        ((*(uint64_t (**)(uint64_t))(*(void *)(v1 + 8) + 8))(v2) & 1) != 0))
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (v0[2])
    {
      uint64_t v3 = v0[3];
      uint64_t ObjectType = swift_getObjectType();
      return (*(double (**)(uint64_t))(*(void *)(v3 + 16) + 24))(ObjectType);
    }
    else
    {
      return 0.0;
    }
  }
  else
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v6 = v0[8];
    uint64_t v7 = swift_getObjectType();
    double v8 = *(double (**)(uint64_t, uint64_t))(v6 + 40);
    swift_unknownObjectRetain();
    double v5 = v8(v7, v6);
    swift_unknownObjectRelease();
  }
  return v5;
}

uint64_t sub_1003D5A80@<X0>(uint64_t a1@<X8>)
{
  void (*v8)(long long *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  _UNKNOWN **v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  void v19[2];
  long long v20;
  long long v21;
  _UNKNOWN **v22;

  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v3 - 8);
  double v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(v1 + 80) != 1)
  {
    char v10 = *(void *)(v1 + 48);
    if (v10)
    {
      double v11 = *(void **)(v10 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_asset);
      if (v11)
      {
        char v9 = _s10AudioAssetCMa(0);
        *((void *)&v21 + 1) = v9;
        uint64_t v22 = &off_1007B7DC8;
        *(void *)&int v20 = v11;
        uint64_t v12 = v11;
        if (!v9) {
          goto LABEL_12;
        }
        goto LABEL_10;
      }
      uint64_t v22 = 0;
      int v20 = 0u;
      uint64_t v21 = 0u;
      uint64_t v13 = 0;
    }
    else
    {
      uint64_t v22 = 0;
      int v20 = 0u;
      uint64_t v21 = 0u;
    }
LABEL_12:
    sub_10001457C((uint64_t)&v20, &qword_1007F9470);
    uint64_t v18 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v5, 1, 1, v18);
    goto LABEL_13;
  }
  swift_getKeyPath();
  v19[1] = v1;
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  double v8 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v6 + 88);
  swift_unknownObjectRetain();
  v8(&v20, ObjectType, v6);
  swift_unknownObjectRelease();
  char v9 = *((void *)&v21 + 1);
  if (!*((void *)&v21 + 1)) {
    goto LABEL_12;
  }
LABEL_10:
  uint64_t v14 = v22;
  sub_10002E0BC(&v20, v9);
  ((void (*)(uint64_t, _UNKNOWN **))v14[6])(v9, v14);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v20);
  uint64_t v15 = type metadata accessor for Date();
  Swift::String v16 = *(void *)(v15 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v5, 1, v15) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v16 + 32))(a1, v5, v15);
  }
LABEL_13:
  Date.init()();
  return sub_10001457C((uint64_t)v5, (uint64_t *)&unk_1007FC470);
}

double *sub_1003D5D5C()
{
  void (*v3)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void v10[3];
  uint64_t v11;
  uint64_t v12;

  if (*(unsigned char *)(v0 + 80) == 1)
  {
    swift_getKeyPath();
    sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v1 = *(void *)(v0 + 64);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v3 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v1 + 88);
    swift_unknownObjectRetain();
    v3(v10, ObjectType, v1);
    swift_unknownObjectRelease();
    uint64_t v4 = v11;
    if (!v11)
    {
      sub_10001457C((uint64_t)v10, &qword_1007F9470);
LABEL_7:
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    double v5 = v12;
    sub_10002E0BC(v10, v11);
    uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 32))(v4, v5);
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v10);
    if (!v6) {
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v7 = *(void *)(v0 + 72);
    swift_getKeyPath();
    v10[0] = v7;
    sub_1003DBAC8(&qword_1007FF9D0, (void (*)(uint64_t))type metadata accessor for TranscriptionCoordinator);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v6 = *(void *)(v7 + 80);
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    v10[0] = v6;
    double v8 = swift_bridgeObjectRetain();
    sub_1000C8A14(v8);
  }
  return (double *)v6;
}

uint64_t sub_1003D5F84()
{
  uint64_t v0 = sub_1003D5D5C();
  uint64_t v1 = sub_10010D29C((uint64_t)v0);
  swift_bridgeObjectRelease();
  uint64_t v2 = v1[2];
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (void **)(v1 + 5);
    do
    {
      uint64_t v4 = (uint64_t)*(v3 - 1);
      double v5 = *v3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v6._countAndFlagsBits = v4;
      v6._object = v5;
      String.append(_:)(v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 += 2;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return 0;
}

BOOL sub_1003D6068()
{
  void (*v7)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(void *__return_ptr, uint64_t, uint64_t);
  void v23[3];
  uint64_t v24;
  uint64_t v25;

  uint64_t v1 = v0;
  swift_getKeyPath();
  v23[0] = v0;
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 24);
  swift_unknownObjectRetain();
  LOBYTE(v2) = v4(ObjectType, v2);
  swift_unknownObjectRelease();
  if ((v2 & 1) == 0) {
    return 0;
  }
  swift_getKeyPath();
  v23[0] = v0;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = swift_getObjectType();
  uint64_t v7 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v5 + 88);
  swift_unknownObjectRetain();
  v7(v23, v6, v5);
  swift_unknownObjectRelease();
  double v8 = v24;
  if (v24)
  {
    char v9 = v25;
    sub_10002E0BC(v23, v24);
    char v10 = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
    double v8 = v11;
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v23);
  }
  else
  {
    sub_10001457C((uint64_t)v23, &qword_1007F9470);
    char v10 = 0;
  }
  sub_1003D53B0((uint64_t)v23);
  uint64_t v13 = v24;
  if (!v24)
  {
    sub_10001457C((uint64_t)v23, &qword_1007F9470);
    if (!v8) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  uint64_t v14 = v25;
  sub_10002E0BC(v23, v24);
  uint64_t v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  uint64_t v17 = v16;
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v23);
  if (!v8)
  {
    if (!v17) {
      goto LABEL_17;
    }
    goto LABEL_15;
  }
  if (!v17)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (v10 == v15 && v8 == v17)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_17:
    swift_getKeyPath();
    v23[0] = v1;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    unint64_t v19 = *(void *)(v1 + 64);
    int v20 = swift_getObjectType();
    uint64_t v21 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v19 + 88);
    swift_unknownObjectRetain();
    v21(v23, v20, v19);
    swift_unknownObjectRelease();
    uint64_t v12 = v24 != 0;
    sub_10001457C((uint64_t)v23, &qword_1007F9470);
    return v12;
  }
  uint64_t v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v12 = 0;
  if (v18) {
    goto LABEL_17;
  }
  return v12;
}

uint64_t sub_1003D63AC()
{
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 24);
    uint64_t ObjectType = swift_getObjectType();
    char v3 = (*(uint64_t (**)(uint64_t))(*(void *)(v1 + 8) + 8))(ObjectType);
  }
  else
  {
    char v3 = 0;
  }
  return v3 & 1;
}

uint64_t sub_1003D6488()
{
  if (*(unsigned char *)(v0 + 80))
  {
    char v1 = 1;
  }
  else
  {
    swift_getKeyPath();
    sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(void *)(v0 + 16)
      && (uint64_t v2 = *(void *)(v0 + 24),
          uint64_t ObjectType = swift_getObjectType(),
          uint64_t v4 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v2 + 40),
          swift_unknownObjectRetain(),
          LODWORD(v2) = v4(ObjectType, v2),
          swift_unknownObjectRelease(),
          v2 == 2))
    {
      sub_1003D5524();
      static Duration.seconds(_:)();
      static Duration.zero.getter();
      char v1 = static Duration.== infix(_:_:)() ^ 1;
    }
    else
    {
      char v1 = 0;
    }
  }
  return v1 & 1;
}

float sub_1003D65C8()
{
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(float *)(v0 + 100);
}

uint64_t sub_1003D6668(uint64_t a1, float a2)
{
  *(float *)(a1 + 100) = a2;
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void *)(a1 + 64);
  uint64_t ObjectType = swift_getObjectType();
  swift_getKeyPath();
  swift_unknownObjectRetain();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  (*(void (**)(uint64_t, uint64_t, float))(v3 + 64))(ObjectType, v3, *(float *)(a1 + 100));
  return swift_unknownObjectRelease();
}

Swift::Void __swiftcall RecordingViewModel.didTapRecordingButton(allowsPausing:)(Swift::Bool allowsPausing)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = qword_10083D488;
  if (qword_10083D488)
  {
    uint64_t v8 = qword_10083D490;
    uint64_t ObjectType = swift_getObjectType();
    swift_getKeyPath();
    uint64_t v28 = v1;
    sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
    swift_unknownObjectRetain_n();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v10 = v1[7];
    swift_unknownObjectRelease();
    if (v10 != v7) {
      (*(void (**)(uint64_t, uint64_t))(v8 + 128))(ObjectType, v8);
    }
    swift_unknownObjectRelease();
  }
  swift_getKeyPath();
  uint64_t v28 = v2;
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v11 = v2[8];
  uint64_t v12 = swift_getObjectType();
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v11 + 136);
  swift_unknownObjectRetain();
  v13(v12, v11);
  swift_unknownObjectRelease();
  swift_getKeyPath();
  uint64_t v28 = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (!v2[2]
    || (uint64_t v14 = v2[3],
        uint64_t v15 = swift_getObjectType(),
        Swift::String v16 = *(uint64_t (**)(uint64_t, uint64_t))(v14 + 40),
        swift_unknownObjectRetain(),
        char v17 = v16(v15, v14),
        swift_unknownObjectRelease(),
        !v17))
  {
    swift_getKeyPath();
    uint64_t v28 = v2;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (!v2[2]) {
      sub_1003D78A4();
    }
    uint64_t v18 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v6, 1, 1, v18);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v19 = static MainActor.shared.getter();
    int v20 = (void *)swift_allocObject();
    v20[2] = v19;
    v20[3] = &protocol witness table for MainActor;
    v20[4] = v2;
    uint64_t v21 = &unk_10080BAD0;
    goto LABEL_14;
  }
  if (v17 != 1)
  {
    uint64_t v22 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v6, 1, 1, v22);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v23 = static MainActor.shared.getter();
    int v20 = (void *)swift_allocObject();
    v20[2] = v23;
    v20[3] = &protocol witness table for MainActor;
    v20[4] = v2;
    uint64_t v21 = &unk_10080BAE0;
LABEL_14:
    sub_100328A60((uint64_t)v6, (uint64_t)v21, (uint64_t)v20);
    swift_release();
    return;
  }
  if (allowsPausing)
  {
    sub_1003D6C40();
  }
  else
  {
    swift_getKeyPath();
    uint64_t v28 = v2;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v24 = v2[8];
    uint64_t v25 = swift_getObjectType();
    char v26 = *(void (**)(uint64_t, uint64_t))(v24 + 128);
    swift_unknownObjectRetain();
    v26(v25, v24);
    swift_unknownObjectRelease();
    sub_1003D2EC8();
  }
}

uint64_t sub_1003D6C40()
{
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  uint64_t v2 = v0[2];
  if (v2)
  {
    uint64_t v3 = v0[3];
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 64);
    swift_unknownObjectRetain();
    v5(ObjectType, v3);
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v6 = v0[8];
    uint64_t v7 = swift_getObjectType();
    uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 104);
    swift_unknownObjectRetain();
    v8(v2, v3, v7, v6);
    swift_unknownObjectRelease();
    return swift_unknownObjectRelease();
  }
  return result;
}

Swift::Void __swiftcall RecordingViewModel.didTapDoneButton()()
{
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v1 + 128);
  swift_unknownObjectRetain();
  v3(ObjectType, v1);
  swift_unknownObjectRelease();
  if ((*(unsigned char *)(v0 + 80) & 1) == 0)
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (*(void *)(v0 + 16))
    {
      uint64_t v4 = *(void *)(v0 + 24);
      uint64_t v5 = swift_getObjectType();
      uint64_t v6 = *(unsigned __int8 (**)(uint64_t, uint64_t))(v4 + 40);
      swift_unknownObjectRetain();
      LODWORD(v4) = v6(v5, v4);
      swift_unknownObjectRelease();
      if (v4) {
        sub_1003D2EC8();
      }
    }
  }
}

uint64_t RecordingViewModel.deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal18RecordingViewModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t RecordingViewModel.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal18RecordingViewModel___observationRegistrar;
  uint64_t v2 = type metadata accessor for ObservationRegistrar();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t RecordingViewModel.seek(toPercent:)(double a1)
{
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if ((*(unsigned char *)(v1 + 82) & 1) == 0)
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v3 = *(void *)(v1 + 64);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, double))(*(void *)(v3 + 8) + 16))(ObjectType, a1);
  }
  uint64_t KeyPath = swift_getKeyPath();
  __chkstk_darwin(KeyPath);
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  return swift_release();
}

double *sub_1003D7224()
{
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (v0[2]
    && (uint64_t v1 = v0[3],
        uint64_t ObjectType = swift_getObjectType(),
        ((*(uint64_t (**)(uint64_t))(*(void *)(v1 + 8) + 8))(ObjectType) & 1) != 0))
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (!v0[2]) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v3 = v0[3];
  }
  else
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v3 = v0[8];
  }
  uint64_t v4 = swift_getObjectType();
  return (double *)(*(uint64_t (**)(uint64_t))(*(void *)(v3 + 16) + 16))(v4);
}

BOOL sub_1003D73B0()
{
  if (*(unsigned char *)(v0 + 80)) {
    return 0;
  }
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(void *)(v0 + 16))
  {
    uint64_t v2 = *(void *)(v0 + 24);
    uint64_t ObjectType = swift_getObjectType();
    if ((*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 8))(ObjectType)) {
      return 1;
    }
  }
  swift_getKeyPath();
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (!*(void *)(v0 + 16)) {
    return 1;
  }
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = swift_getObjectType();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 40);
  swift_unknownObjectRetain();
  LOBYTE(v4) = v6(v5, v4);
  swift_unknownObjectRelease();
  return v4 == 0;
}

double sub_1003D752C()
{
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (v0[2]
    && (uint64_t v1 = v0[3],
        uint64_t ObjectType = swift_getObjectType(),
        ((*(uint64_t (**)(uint64_t))(*(void *)(v1 + 8) + 8))(ObjectType) & 1) != 0))
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    if (!v0[2]) {
      return 25.0;
    }
    uint64_t v3 = v0[3];
  }
  else
  {
    swift_getKeyPath();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v3 = v0[8];
  }
  uint64_t v4 = swift_getObjectType();
  (*(void (**)(uint64_t))(*(void *)(v3 + 16) + 32))(v4);
  return result;
}

BOOL sub_1003D76B4()
{
  return sub_1003D73B0();
}

double sub_1003D76DC()
{
  return sub_1003D58AC();
}

double sub_1003D7700(uint64_t a1)
{
  return sub_1003D56AC(a1);
}

BOOL sub_1003D7724()
{
  return sub_1003D6068();
}

uint64_t sub_1003D774C()
{
  return sub_1003D63AC() & 1;
}

uint64_t sub_1003D7774()
{
  uint64_t v1 = *v0;
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  return *(unsigned __int8 *)(v1 + 82);
}

uint64_t sub_1003D7814(double a1)
{
  return RecordingViewModel.seek(toPercent:)(a1);
}

double *sub_1003D7838()
{
  return sub_1003D7224();
}

double sub_1003D785C()
{
  return sub_1003D5524();
}

double sub_1003D7880()
{
  return sub_1003D752C();
}

uint64_t sub_1003D78A4()
{
  uint64_t v1 = v0;
  swift_getKeyPath();
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  uint64_t result = swift_release();
  if (!v0[2])
  {
    uint64_t v3 = v0[6];
    if (v3)
    {
      uint64_t v4 = v0[9];
      type metadata accessor for AudioRecordingManager();
      swift_allocObject();
      swift_retain_n();
      swift_retain();
      sub_10056867C(v3, v4);
      swift_release();
      sub_1003DBAC8(&qword_10080BE48, (void (*)(uint64_t))type metadata accessor for AudioRecordingManager);
      uint64_t KeyPath = swift_getKeyPath();
      __chkstk_darwin(KeyPath);
      ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
      swift_release();
      swift_release();
      if (qword_1007F6DC8 != -1) {
        swift_once();
      }
      uint64_t v6 = qword_10083D360;
      swift_getKeyPath();
      ObservationRegistrar.access<A, B>(_:keyPath:)();
      swift_release();
      uint64_t v7 = v1[3];
      uint64_t v8 = swift_unknownObjectRetain();
      sub_10030FE24(v8, v7);
      *(void *)(v6 + 24) = v7;
      swift_unknownObjectWeakAssign();
      swift_unknownObjectRelease();
      return swift_release();
    }
  }
  return result;
}

uint64_t sub_1003D7B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a4;
  sub_100010218((uint64_t *)&unk_100800A60);
  v4[9] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[10] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[11] = v6;
  v4[12] = v5;
  return _swift_task_switch(sub_1003D7BE8, v6, v5);
}

uint64_t sub_1003D7BE8()
{
  uint64_t v1 = v0[8];
  swift_getKeyPath();
  uint64_t v2 = OBJC_IVAR____TtC7Journal18RecordingViewModel___observationRegistrar;
  v0[2] = v1;
  v0[13] = v2;
  v0[14] = sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v3 = *(void *)(v1 + 16);
  v0[15] = v3;
  if (v3)
  {
    uint64_t v4 = *(void *)(v0[8] + 24);
    v0[16] = v4;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v4 + 80) + **(int **)(v4 + 80));
    swift_unknownObjectRetain();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[17] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1003D7E84;
    return v13(ObjectType, v4);
  }
  else
  {
    swift_release();
    if (qword_1007F6F40 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100026A54(v8, (uint64_t)qword_10080BAA8);
    char v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Failed starting recording because no recordingManager", v11, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
}

uint64_t sub_1003D7E84()
{
  uint64_t v2 = (void *)*v1;
  v2[18] = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = v2[11];
    uint64_t v4 = v2[12];
    return _swift_task_switch(sub_1003D8670, v3, v4);
  }
  else
  {
    uint64_t v6 = v2[15];
    uint64_t v5 = v2[16];
    char v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100809A38 + dword_100809A38);
    uint64_t v7 = (void *)swift_task_alloc();
    v2[19] = v7;
    *uint64_t v7 = v2;
    v7[1] = sub_1003D8014;
    return v9(v6, v5);
  }
}

uint64_t sub_1003D8014()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 160) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_1003D8218;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = *(void *)(v2 + 88);
    uint64_t v4 = *(void *)(v2 + 96);
    uint64_t v5 = sub_1003D813C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1003D813C()
{
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1003D84A0;
  uint64_t v4 = *(void *)(v0 + 72);
  return sub_10013D808(v4);
}

uint64_t sub_1003D8218()
{
  if (qword_1007F6F40 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_10080BAA8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[5] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed starting live activity: %@", v4, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v0[9];
  uint64_t v8 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  char v9 = (void *)swift_task_alloc();
  v0[21] = v9;
  *char v9 = v0;
  v9[1] = sub_1003D84A0;
  uint64_t v10 = v0[9];
  return sub_10013D808(v10);
}

uint64_t sub_1003D84A0()
{
  uint64_t v2 = *v1;
  (*v1)[22] = v0;
  swift_task_dealloc();
  sub_10001457C(v2[9], (uint64_t *)&unk_100800A60);
  uint64_t v3 = v2[12];
  uint64_t v4 = v2[11];
  if (v0) {
    uint64_t v5 = sub_1003D8890;
  }
  else {
    uint64_t v5 = sub_1003D85FC;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1003D85FC()
{
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003D8670()
{
  swift_release();
  if (qword_1007F6F40 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_10080BAA8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed starting recording: %@", v4, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }

  sub_1003D2EC8();
  swift_errorRelease();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1003D8890()
{
  uint64_t v1 = v0[22];
  swift_release();
  v0[4] = v1;
  swift_errorRetain();
  sub_100010218((uint64_t *)&unk_1007FC0D0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = v0[8];
    swift_getKeyPath();
    uint64_t v3 = swift_task_alloc();
    *(void *)(v3 + 16) = v2;
    *(unsigned char *)(v3 + 24) = 0;
    v0[7] = v2;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
  }
  if (qword_1007F6F40 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100026A54(v4, (uint64_t)qword_10080BAA8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[6] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed transcribing: %@", v7, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_unknownObjectRelease();

    swift_errorRelease();
  }
  else
  {
    swift_unknownObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1003D8B7C()
{
  return sub_10025F9CC();
}

uint64_t sub_1003D8B84(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_1003D7B20(a1, v4, v5, v6);
}

uint64_t sub_1003D8C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a4;
  type metadata accessor for MainActor();
  v4[5] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[6] = v6;
  v4[7] = v5;
  return _swift_task_switch(sub_1003D8CD0, v6, v5);
}

uint64_t sub_1003D8CD0()
{
  uint64_t v1 = v0[4];
  swift_getKeyPath();
  v0[2] = v1;
  sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 16);
  v0[8] = v2;
  if (v2)
  {
    uint64_t v3 = *(void *)(v0[4] + 24);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 72) + **(int **)(v3 + 72));
    swift_unknownObjectRetain();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[9] = v5;
    void *v5 = v0;
    v5[1] = sub_1003D8EA4;
    return v8(ObjectType, v3);
  }
  else
  {
    swift_release();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_1003D8EA4()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_1003D8FC0;
  }
  else
  {
    swift_unknownObjectRelease();
    uint64_t v3 = *(void *)(v2 + 48);
    uint64_t v4 = *(void *)(v2 + 56);
    uint64_t v5 = sub_1002F9240;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1003D8FC0()
{
  swift_release();
  swift_unknownObjectRelease();
  if (qword_1007F6F40 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_10080BAA8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 24) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed resuming recording: %@", v4, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7();
}

uint64_t sub_1003D91D8()
{
  return sub_10025F9CC();
}

uint64_t sub_1003D91E0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_1003D8C38(a1, v4, v5, v6);
}

void sub_1003D929C()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 82) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1003D92AC(uint64_t a1)
{
  uint64_t result = sub_1003DBAC8(&qword_10080BAE8, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003D9304(uint64_t a1)
{
  uint64_t result = sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1003D935C()
{
  return type metadata accessor for RecordingViewModel();
}

uint64_t sub_1003D9364()
{
  uint64_t result = type metadata accessor for ObservationRegistrar();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

ValueMetadata *type metadata accessor for RecordingViewModel.PlaybackSpeed()
{
  return &type metadata for RecordingViewModel.PlaybackSpeed;
}

uint64_t sub_1003D9464()
{
  v0[2] = type metadata accessor for MainActor();
  v0[3] = static MainActor.shared.getter();
  unint64_t v1 = (void *)swift_task_alloc();
  v0[4] = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_10010AD78;
  return sub_1003D4218();
}

uint64_t sub_1003D9510()
{
  v1[13] = v0;
  uint64_t v2 = type metadata accessor for TranscriptViewModelSegment(0);
  v1[14] = v2;
  v1[15] = *(void *)(v2 - 8);
  v1[16] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100800A60);
  v1[17] = swift_task_alloc();
  v1[18] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v1[19] = v3;
  v1[20] = *(void *)(v3 - 8);
  v1[21] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[22] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[23] = v5;
  v1[24] = v4;
  return _swift_task_switch(sub_1003D96A0, v5, v4);
}

uint64_t sub_1003D96A0()
{
  if (qword_1007F6F40 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  v0[25] = sub_100026A54(v1, (uint64_t)qword_10080BAA8);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Transcribing current attachment", v4, 2u);
    swift_slowDealloc();
  }

  sub_1003D53B0((uint64_t)(v0 + 2));
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[19];
  uint64_t v7 = v0[20];
  uint64_t v8 = v0[18];
  if (v5)
  {
    uint64_t v9 = v0[6];
    sub_10002E0BC(v0 + 2, v0[5]);
    (*(void (**)(uint64_t, uint64_t))(v9 + 16))(v5, v9);
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)(v0 + 2));
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) != 1)
    {
      uint64_t v11 = v0[20];
      uint64_t v10 = v0[21];
      uint64_t v12 = v0[19];
      uint64_t v13 = v0[17];
      uint64_t v14 = v0[13];
      (*(void (**)(uint64_t, void, uint64_t))(v11 + 32))(v10, v0[18], v12);
      sub_1003D78A4();
      v0[26] = *(void *)(v14 + 72);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v13, v10, v12);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v13, 0, 1, v12);
      uint64_t v15 = (void *)swift_task_alloc();
      v0[27] = v15;
      void *v15 = v0;
      v15[1] = sub_1003D9A24;
      uint64_t v16 = v0[17];
      return sub_10013D808(v16);
    }
  }
  else
  {
    sub_10001457C((uint64_t)(v0 + 2), &qword_1007F9470);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v8, 1, 1, v6);
  }
  uint64_t v18 = v0[18];
  swift_release();
  sub_10001457C(v18, (uint64_t *)&unk_100800A60);
  uint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v21 = 0;
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "Current attachment doesn't have a media url; canceling transcription",
      v21,
      2u);
    swift_slowDealloc();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v22 = (uint64_t (*)(void))v0[1];
  return v22();
}

uint64_t sub_1003D9A24()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 136);
  *(void *)(*v1 + 224) = v0;
  swift_task_dealloc();
  sub_10001457C(v3, (uint64_t *)&unk_100800A60);
  uint64_t v4 = *(void *)(v2 + 192);
  uint64_t v5 = *(void *)(v2 + 184);
  if (v0) {
    uint64_t v6 = sub_1003D9FD0;
  }
  else {
    uint64_t v6 = sub_1003D9B84;
  }
  return _swift_task_switch(v6, v5, v4);
}

uint64_t sub_1003D9B84()
{
  uint64_t v40 = v0;
  uint64_t v1 = v0;
  uint64_t v2 = v0[26];
  uint64_t v3 = v1[13];
  swift_release();
  swift_getKeyPath();
  v1[10] = v2;
  sub_1003DBAC8(&qword_1007FF9D0, (void (*)(uint64_t))type metadata accessor for TranscriptionCoordinator);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 + 72);
  if (*(void *)(v3 + 48))
  {
    uint64_t v5 = v1[21];
    swift_bridgeObjectRetain();
    sub_1003733B0(v5, v4);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = Logger.logObject.getter();
  os_log_type_t v7 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v6, v7))
  {
    os_log_type_t v36 = v7;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v38 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136380675;
    int64_t v9 = *(void *)(v4 + 16);
    uint64_t v10 = v4;
    uint64_t v11 = _swiftEmptyArrayStorage;
    if (v9)
    {
      uint64_t v34 = v8;
      unint64_t v35 = v6;
      uint64_t v12 = v1[15];
      uint64_t v13 = v1;
      uint64_t v37 = v1[14];
      uint64_t v39 = _swiftEmptyArrayStorage;
      sub_100095B64(0, v9, 0);
      uint64_t v14 = v10 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
      uint64_t v15 = *(void *)(v12 + 72);
      uint64_t v11 = _swiftEmptyArrayStorage;
      do
      {
        uint64_t v16 = v13[16];
        sub_100140F00(v14, v16);
        char v17 = (uint64_t *)(v16 + *(int *)(v37 + 20));
        uint64_t v18 = *v17;
        uint64_t v19 = v17[1];
        swift_bridgeObjectRetain();
        sub_100140F64(v16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_100095B64(0, *((void *)v11 + 2) + 1, 1);
          uint64_t v11 = v39;
        }
        unint64_t v21 = *((void *)v11 + 2);
        unint64_t v20 = *((void *)v11 + 3);
        if (v21 >= v20 >> 1)
        {
          sub_100095B64(v20 > 1, v21 + 1, 1);
          uint64_t v11 = v39;
        }
        *((void *)v11 + 2) = v21 + 1;
        uint64_t v22 = &v11[2 * v21];
        *((void *)v22 + 4) = v18;
        *((void *)v22 + 5) = v19;
        v14 += v15;
        --v9;
      }
      while (v9);
      uint64_t v1 = v13;
      uint64_t v8 = v34;
      uint64_t v6 = v35;
    }
    uint64_t v27 = v1[20];
    uint64_t v26 = v1[21];
    uint64_t v28 = v1[19];
    v1[11] = v11;
    sub_100010218(&qword_100800A70);
    sub_100014488((unint64_t *)&qword_1007F9100, &qword_100800A70);
    uint64_t v29 = BidirectionalCollection<>.joined(separator:)();
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    v1[12] = sub_10011EA98(v29, v31, &v38);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v6, v36, "Transcribed current attachment: %{private}s", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
  }
  else
  {
    uint64_t v24 = v1[20];
    uint64_t v23 = v1[21];
    uint64_t v25 = v1[19];

    swift_bridgeObjectRelease_n();
    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v23, v25);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v32 = (uint64_t (*)(void))v1[1];
  return v32();
}

uint64_t sub_1003D9FD0()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[20];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1003DA088(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v5 + 313) = a5;
  *(void *)(v5 + 184) = a4;
  sub_100010218(&qword_1007FEAE0);
  *(void *)(v5 + 192) = swift_task_alloc();
  *(void *)(v5 + 200) = type metadata accessor for MainActor();
  *(void *)(v5 + 208) = static MainActor.shared.getter();
  return _swift_task_switch(sub_1003DA138, 0, 0);
}

uint64_t sub_1003DA138()
{
  if (qword_1007F6EE0 != -1) {
    swift_once();
  }
  [(id)qword_10083D450 cancelAllOperations];
  if (qword_1007F6EE8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_10083D458;
  *(void *)(v0 + 216) = qword_10083D458;
  swift_retain();
  return _swift_task_switch(sub_1003DA224, v1, 0);
}

uint64_t sub_1003DA224()
{
  uint64_t v1 = v0[27];
  swift_beginAccess();
  *(void *)(v1 + 112) = &_swiftEmptySetSingleton;
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[28] = v3;
  v0[29] = v2;
  return _swift_task_switch(sub_1003DA2DC, v3, v2);
}

uint64_t sub_1003DA2DC()
{
  uint64_t v2 = v0[23];
  uint64_t v1 = v0[24];
  swift_getKeyPath();
  v0[30] = OBJC_IVAR____TtC7Journal18RecordingViewModel___observationRegistrar;
  v0[17] = v2;
  v0[31] = sub_1003DBAC8((unint64_t *)&qword_10080A400, (void (*)(uint64_t))type metadata accessor for RecordingViewModel);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  v0[32] = *(void *)(v2 + 40);
  uint64_t v3 = type metadata accessor for Locale();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  v0[33] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1003DA450;
  uint64_t v5 = v0[24];
  return sub_100590A80(v5);
}

uint64_t sub_1003DA450(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 192);
  *(unsigned char *)(*v1 + 314) = a1;
  swift_task_dealloc();
  swift_release();
  sub_10001457C(v3, &qword_1007FEAE0);
  uint64_t v4 = *(void *)(v2 + 232);
  uint64_t v5 = *(void *)(v2 + 224);
  return _swift_task_switch(sub_1003DA5C0, v5, v4);
}

uint64_t sub_1003DA5C0()
{
  char v1 = *(unsigned char *)(v0 + 314);
  uint64_t v2 = *(void *)(v0 + 184);
  swift_getKeyPath();
  uint64_t v3 = swift_task_alloc();
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 24) = v1;
  *(void *)(v0 + 144) = v2;
  ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
  swift_release();
  swift_task_dealloc();
  swift_getKeyPath();
  *(void *)(v0 + 120) = v2;
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  if (*(unsigned char *)(v2 + 81) == 1)
  {
    uint64_t v4 = *(void *)(v0 + 184);
    swift_getKeyPath();
    *(void *)(v0 + 128) = v4;
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    *(void *)(v0 + 272) = *(void *)(v4 + 40);
    swift_retain();
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 280) = v5;
    void *v5 = v0;
    v5[1] = sub_1003DA880;
    char v6 = *(unsigned char *)(v0 + 313);
    return sub_100591000(v6);
  }
  else
  {
    swift_release();
    if (qword_1007F6F40 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100026A54(v8, (uint64_t)qword_10080BAA8);
    int64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Transcription isn't supported; canceling initialization.",
        v11,
        2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
    return v12();
  }
}

uint64_t sub_1003DA880()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 288) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 224);
    uint64_t v4 = *(void *)(v2 + 232);
    uint64_t v5 = sub_1003DAC9C;
  }
  else
  {
    swift_release();
    uint64_t v3 = *(void *)(v2 + 224);
    uint64_t v4 = *(void *)(v2 + 232);
    uint64_t v5 = sub_1003DA99C;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1003DA99C()
{
  sub_1003D53B0(v0 + 16);
  if (*(void *)(v0 + 40))
  {
    sub_10001B3BC((long long *)(v0 + 16), v0 + 56);
    uint64_t v1 = *(void *)(v0 + 80);
    uint64_t v2 = *(void *)(v0 + 88);
    sub_10002E0BC((void *)(v0 + 56), v1);
    if (sub_10018528C(v1, v2))
    {
      uint64_t v3 = (void *)swift_task_alloc();
      *(void *)(v0 + 296) = v3;
      *uint64_t v3 = v0;
      v3[1] = sub_1003DAAEC;
      return sub_1003D9510();
    }
    swift_release();
    _s7Journal19DynamicWaveformViewVwxx_0(v0 + 56);
  }
  else
  {
    swift_release();
    sub_10001457C(v0 + 16, &qword_1007F9470);
  }
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1003DAAEC()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 304) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 232);
  uint64_t v4 = *(void *)(v2 + 224);
  if (v0) {
    uint64_t v5 = sub_1003DAFAC;
  }
  else {
    uint64_t v5 = sub_1003DAC28;
  }
  return _swift_task_switch(v5, v4, v3);
}

uint64_t sub_1003DAC28()
{
  swift_release();
  _s7Journal19DynamicWaveformViewVwxx_0(v0 + 56);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003DAC9C()
{
  uint64_t v1 = (long long *)(v0 + 2);
  swift_release();
  if (qword_1007F6F40 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100026A54(v2, (uint64_t)qword_10080BAA8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 138412290;
    swift_errorRetain();
    uint64_t v7 = _swift_stdlib_bridgeErrorToNSError();
    v0[20] = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v6 = v7;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to download transcription model: %@", v5, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v1 = (long long *)(v0 + 2);
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  sub_1003D53B0((uint64_t)v1);
  if (v0[5])
  {
    sub_10001B3BC(v1, (uint64_t)(v0 + 7));
    uint64_t v9 = v0[10];
    uint64_t v8 = v0[11];
    sub_10002E0BC(v0 + 7, v9);
    if (sub_10018528C(v9, v8))
    {
      os_log_type_t v10 = (void *)swift_task_alloc();
      v0[37] = v10;
      *os_log_type_t v10 = v0;
      v10[1] = sub_1003DAAEC;
      return sub_1003D9510();
    }
    swift_release();
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)(v0 + 7));
  }
  else
  {
    swift_release();
    sub_10001457C((uint64_t)v1, &qword_1007F9470);
  }
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_1003DAFAC()
{
  uint64_t v1 = v0[38];
  swift_release();
  v0[19] = v1;
  swift_errorRetain();
  sub_100010218((uint64_t *)&unk_1007FC0D0);
  if (swift_dynamicCast())
  {
    uint64_t v2 = v0[23];
    swift_getKeyPath();
    uint64_t v3 = swift_task_alloc();
    *(void *)(v3 + 16) = v2;
    *(unsigned char *)(v3 + 24) = 0;
    v0[22] = v2;
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_task_dealloc();
  }
  if (qword_1007F6F40 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100026A54(v4, (uint64_t)qword_10080BAA8);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[21] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Failed transcription for existing attachment: %@", v7, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)(v0 + 7));
  swift_task_dealloc();
  os_log_type_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_1003DB288()
{
  uint64_t result = sub_100095BE0(0, 7, 0);
  double v2 = _swiftEmptyArrayStorage[2];
  double v1 = _swiftEmptyArrayStorage[3];
  int64_t v3 = *(void *)&v1 >> 1;
  *(void *)&double v4 = *(void *)&v2 + 1;
  if (*(void *)&v1 >> 1 <= *(void *)&v2)
  {
    uint64_t result = sub_100095BE0(*(void *)&v1 > 1uLL, *(void *)&v2 + 1, 1);
    double v1 = _swiftEmptyArrayStorage[3];
    int64_t v3 = *(void *)&v1 >> 1;
  }
  _swiftEmptyArrayStorage[2] = v4;
  *((_DWORD *)&_swiftEmptyArrayStorage[4] + *(void *)&v2) = 1056964608;
  int64_t v5 = *(void *)&v2 + 2;
  if (v3 < v5) {
    uint64_t result = sub_100095BE0(*(void *)&v1 > 1uLL, v5, 1);
  }
  *(void *)&_swiftEmptyArrayStorage[2] = v5;
  *((_DWORD *)&_swiftEmptyArrayStorage[4] + *(void *)&v4) = 1061158912;
  double v7 = _swiftEmptyArrayStorage[2];
  double v6 = _swiftEmptyArrayStorage[3];
  *(void *)&double v8 = *(void *)&v7 + 1;
  if (*(void *)&v7 >= *(void *)&v6 >> 1) {
    uint64_t result = sub_100095BE0(*(void *)&v6 > 1uLL, *(void *)&v7 + 1, 1);
  }
  _swiftEmptyArrayStorage[2] = v8;
  *((_DWORD *)&_swiftEmptyArrayStorage[4] + *(void *)&v7) = 1065353216;
  double v9 = _swiftEmptyArrayStorage[3];
  int64_t v10 = *(void *)&v7 + 2;
  if (v10 > *(void *)&v9 >> 1) {
    uint64_t result = sub_100095BE0(*(void *)&v9 > 1uLL, v10, 1);
  }
  *(void *)&_swiftEmptyArrayStorage[2] = v10;
  *((_DWORD *)&_swiftEmptyArrayStorage[4] + *(void *)&v8) = 1067450368;
  double v12 = _swiftEmptyArrayStorage[2];
  double v11 = _swiftEmptyArrayStorage[3];
  int64_t v13 = *(void *)&v11 >> 1;
  *(void *)&double v14 = *(void *)&v12 + 1;
  if (*(void *)&v11 >> 1 <= *(void *)&v12)
  {
    uint64_t result = sub_100095BE0(*(void *)&v11 > 1uLL, *(void *)&v12 + 1, 1);
    double v11 = _swiftEmptyArrayStorage[3];
    int64_t v13 = *(void *)&v11 >> 1;
  }
  _swiftEmptyArrayStorage[2] = v14;
  *((_DWORD *)&_swiftEmptyArrayStorage[4] + *(void *)&v12) = 1069547520;
  int64_t v15 = *(void *)&v12 + 2;
  if (v13 < v15) {
    uint64_t result = sub_100095BE0(*(void *)&v11 > 1uLL, v15, 1);
  }
  *(void *)&_swiftEmptyArrayStorage[2] = v15;
  *((_DWORD *)&_swiftEmptyArrayStorage[4] + *(void *)&v14) = 1071644672;
  double v17 = _swiftEmptyArrayStorage[2];
  double v16 = _swiftEmptyArrayStorage[3];
  if (*(void *)&v17 >= *(void *)&v16 >> 1) {
    uint64_t result = sub_100095BE0(*(void *)&v16 > 1uLL, *(void *)&v17 + 1, 1);
  }
  *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v17 + 1;
  *((_DWORD *)&_swiftEmptyArrayStorage[4] + *(void *)&v17) = 0x40000000;
  qword_10083D4C0 = (uint64_t)_swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_1003DB4D4@<X0>(void *a1@<X8>)
{
  if (qword_1007F6F48 != -1) {
    swift_once();
  }
  *a1 = qword_10083D4C0;

  return swift_bridgeObjectRetain();
}

Swift::Int sub_1003DB540()
{
  Swift::UInt32 v1 = *v0;
  Hasher.init(_seed:)();
  if ((v1 & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v2 = v1;
  }
  else {
    Swift::UInt32 v2 = 0;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

Swift::Int sub_1003DB58C()
{
  Swift::UInt32 v1 = *v0;
  Hasher.init(_seed:)();
  if ((v1 & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v2 = v1;
  }
  else {
    Swift::UInt32 v2 = 0;
  }
  Hasher._combine(_:)(v2);
  return Hasher._finalize()();
}

unint64_t sub_1003DB5DC()
{
  unint64_t result = qword_10080BDF0;
  if (!qword_10080BDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080BDF0);
  }
  return result;
}

uint64_t sub_1003DB630()
{
  return sub_100014488(&qword_10080BDF8, &qword_100801728);
}

unint64_t sub_1003DB66C()
{
  unint64_t result = qword_10080BE10;
  if (!qword_10080BE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080BE10);
  }
  return result;
}

uint64_t sub_1003DB6D8()
{
  return sub_10013BCD8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003DB6F4()
{
  return sub_10013BBF8(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1003DB728()
{
  *(void *)(*(void *)(v0 + 16) + 40) = *(void *)(v0 + 24);
  swift_retain();
  return swift_release();
}

uint64_t sub_1003DB764(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = v6;
  uint64_t v14 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v14 - 8);
  double v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(v7 + 16) = 0;
  *(void *)(v7 + 24) = 0;
  *(void *)(v7 + 32) = 0x3F847AE147AE147BLL;
  if (qword_1007F7E00 != -1) {
    swift_once();
  }
  *(void *)(v7 + 40) = qword_10083EDE8;
  *(_WORD *)(v7 + 81) = 0;
  *(void *)(v7 + 88) = 0;
  *(unsigned char *)(v7 + 96) = 1;
  swift_retain();
  ObservationRegistrar.init()();
  *(void *)(v7 + 48) = a2;
  *(void *)(v7 + 56) = a1;
  *(void *)(v7 + 64) = a6;
  *(void *)(v7 + 72) = a3;
  *(unsigned char *)(v7 + 80) = a4 & 1;
  *(unsigned char *)(v7 + 82) = a4 & 1;
  double v17 = *(float (**)(uint64_t, uint64_t))(a6 + 56);
  swift_retain();
  swift_retain();
  swift_unknownObjectRetain();
  *(float *)(v7 + 100) = v17(a5, a6);
  uint64_t v18 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v19 = static MainActor.shared.getter();
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v19;
  *(void *)(v20 + 24) = &protocol witness table for MainActor;
  *(void *)(v20 + 32) = v7;
  *(unsigned char *)(v20 + 40) = 0;
  sub_100328A60((uint64_t)v16, (uint64_t)&unk_100801DA0, v20);
  swift_release();
  return v7;
}

uint64_t sub_1003DB97C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6)
{
  return sub_1003DB764(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1003DB9F8()
{
  return sub_10025F9CC();
}

void sub_1003DBA00()
{
  *(unsigned char *)(*(void *)(v0 + 16) + 81) = *(unsigned char *)(v0 + 24);
}

uint64_t sub_1003DBA18()
{
  return sub_10025F9CC();
}

uint64_t sub_1003DBA20()
{
  return sub_1003DBA38();
}

uint64_t sub_1003DBA38()
{
  *(_OWORD *)(*(void *)(v0 + 16) + 16) = *(_OWORD *)(v0 + 24);
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t sub_1003DBA7C()
{
  *(_OWORD *)(*(void *)(v0 + 16) + 56) = *(_OWORD *)(v0 + 24);
  swift_unknownObjectRetain();
  return swift_unknownObjectRelease();
}

uint64_t sub_1003DBAC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1003DBB10(void *result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 >> 6 == 1)
  {
    return (void *)swift_errorRetain();
  }
  else if (!(a3 >> 6))
  {
    id v4 = result;
    return (void *)swift_retain();
  }
  return result;
}

void *sub_1003DBB6C(void *result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 >> 6 == 1)
  {
    return (void *)swift_errorRelease();
  }
  else if (!(a3 >> 6))
  {

    return (void *)swift_release();
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for PlaceCategory(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

void destroy for PlaceCategory(void **a1)
{
  Swift::UInt32 v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

void **assignWithCopy for PlaceCategory(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      id v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    id v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  id v5 = v4;

  return a1;
}

void **assignWithTake for RecordingViewModel.TranscriptViewType(void **a1, unint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t getEnumTagSinglePayload for RecordingViewModel.TranscriptViewType(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFF9 && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483642);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 5;
  if (v4 >= 7) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RecordingViewModel.TranscriptViewType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFA) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 5;
    }
  }
  return result;
}

uint64_t sub_1003DBDAC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1003DBDC4(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *uint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for RecordingViewModel.TranscriptViewType()
{
  return &type metadata for RecordingViewModel.TranscriptViewType;
}

void sub_1003DBDF4()
{
}

void sub_1003DBE0C()
{
}

ValueMetadata *_s11PassthroughVMa()
{
  return &_s11PassthroughVN;
}

uint64_t sub_1003DBE38()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
    if (v2 <= 0x3F)
    {
      uint64_t result = type metadata accessor for Locale();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1003DBF40(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v25 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(v25 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  uint64_t v24 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
  uint64_t v6 = *(void *)(v24 - 8);
  int v7 = *(_DWORD *)(v6 + 80);
  uint64_t v8 = v5 + v7;
  uint64_t v9 = *(void *)(v6 + 64);
  uint64_t v10 = type metadata accessor for Locale();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(_DWORD *)(v11 + 80);
  uint64_t v13 = v9 + v12;
  uint64_t v14 = (v7 | *(unsigned char *)(v11 + 80) | *(unsigned char *)(v4 + 80));
  if (v14 <= 7
    && ((v13 + ((v5 + v7) & ~(unint64_t)v7)) & ~v12)
     + *(void *)(*(void *)(v10 - 8) + 64) <= 0x18
    && ((v7 | *(_DWORD *)(v11 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    unint64_t v18 = ~(unint64_t)v7;
    uint64_t v19 = ~v12;
    uint64_t v23 = v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16))(a1, a2, v25);
    unint64_t v20 = ((unint64_t)a1 + v8) & v18;
    unint64_t v21 = ((unint64_t)a2 + v8) & v18;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(v20, v21, v24);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 16))((v20 + v13) & v19, (v21 + v13) & v19, v23);
  }
  else
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v14 + 16) & ~v14));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1003DC154(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56);
  uint64_t v5 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6 + 8;
  unint64_t v8 = (v4 + a1 + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v9 = *(void *)(v7 + 56);
  uint64_t v10 = type metadata accessor for Locale();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(uint64_t (**)(unint64_t, uint64_t))(v11 + 8);
  uint64_t v13 = v10;
  unint64_t v14 = (v8 + v9 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);

  return v12(v14, v13);
}

uint64_t sub_1003DC24C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v12, v13, v7);
  uint64_t v14 = *(void *)(v9 + 48);
  uint64_t v15 = type metadata accessor for Locale();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 16))((v14 + *(unsigned __int8 *)(v16 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), (v14 + *(unsigned __int8 *)(v16 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), v15);
  return a1;
}

uint64_t sub_1003DC350(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v12, v13, v7);
  uint64_t v14 = *(void *)(v9 + 40);
  uint64_t v15 = type metadata accessor for Locale();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 24))((v14 + *(unsigned __int8 *)(v16 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), (v14 + *(unsigned __int8 *)(v16 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), v15);
  return a1;
}

uint64_t sub_1003DC454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v12, v13, v7);
  uint64_t v14 = *(void *)(v9 + 32);
  uint64_t v15 = type metadata accessor for Locale();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 32))((v14 + *(unsigned __int8 *)(v16 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), (v14 + *(unsigned __int8 *)(v16 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), v15);
  return a1;
}

uint64_t sub_1003DC558(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v6 + v10;
  uint64_t v12 = (v6 + v10 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v12, v13, v7);
  uint64_t v14 = *(void *)(v9 + 24);
  uint64_t v15 = type metadata accessor for Locale();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v16 + 40))((v14 + *(unsigned __int8 *)(v16 + 80) + v12) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), (v14 + *(unsigned __int8 *)(v16 + 80) + v13) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80), v15);
  return a1;
}

uint64_t sub_1003DC65C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t v32 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
  uint64_t v8 = *(void *)(v32 - 8);
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  if (v9 <= v7) {
    unsigned int v10 = v7;
  }
  else {
    unsigned int v10 = *(_DWORD *)(v8 + 84);
  }
  uint64_t v11 = type metadata accessor for Locale();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v14 = *(void *)(v8 + 64);
  uint64_t v15 = *(unsigned __int8 *)(v12 + 80);
  if (*(_DWORD *)(v12 + 84) <= v10) {
    unsigned int v16 = v10;
  }
  else {
    unsigned int v16 = *(_DWORD *)(v12 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v17 = *(void *)(v6 + 64) + v13;
  if (a2 <= v16) {
    goto LABEL_27;
  }
  uint64_t v18 = ((v14 + v15 + (v17 & ~v13)) & ~v15) + *(void *)(*(void *)(v11 - 8) + 64);
  char v19 = 8 * v18;
  if (v18 > 3) {
    goto LABEL_10;
  }
  unsigned int v21 = ((a2 - v16 + ~(-1 << v19)) >> v19) + 1;
  if (HIWORD(v21))
  {
    int v20 = *(_DWORD *)((char *)a1 + v18);
    if (!v20) {
      goto LABEL_27;
    }
    goto LABEL_17;
  }
  if (v21 > 0xFF)
  {
    int v20 = *(unsigned __int16 *)((char *)a1 + v18);
    if (!*(unsigned __int16 *)((char *)a1 + v18)) {
      goto LABEL_27;
    }
    goto LABEL_17;
  }
  if (v21 >= 2)
  {
LABEL_10:
    int v20 = *((unsigned __int8 *)a1 + v18);
    if (!*((unsigned char *)a1 + v18)) {
      goto LABEL_27;
    }
LABEL_17:
    int v22 = (v20 - 1) << v19;
    if (v18 > 3) {
      int v22 = 0;
    }
    if (v18)
    {
      if (v18 <= 3) {
        int v23 = v18;
      }
      else {
        int v23 = 4;
      }
      switch(v23)
      {
        case 2:
          int v24 = *a1;
          break;
        case 3:
          int v24 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          break;
        case 4:
          int v24 = *(_DWORD *)a1;
          break;
        default:
          int v24 = *(unsigned __int8 *)a1;
          break;
      }
    }
    else
    {
      int v24 = 0;
    }
    return v16 + (v24 | v22) + 1;
  }
LABEL_27:
  if (!v16) {
    return 0;
  }
  if (v7 == v16)
  {
    uint64_t v25 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
    uint64_t v26 = a1;
    uint64_t v27 = v7;
    uint64_t v28 = v5;
LABEL_33:
    return v25(v26, v27, v28);
  }
  uint64_t v26 = (unsigned __int16 *)(((unint64_t)a1 + v17) & ~v13);
  if (v9 == v16)
  {
    uint64_t v25 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v8 + 48);
    uint64_t v27 = v9;
    uint64_t v28 = v32;
    goto LABEL_33;
  }
  unint64_t v30 = ((unint64_t)v26 + v14 + v15) & ~v15;
  unint64_t v31 = *(uint64_t (**)(unint64_t))(v12 + 48);

  return v31(v30);
}

void sub_1003DC994(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v36 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(v36 - 8);
  uint64_t v35 = v7;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v34 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
  uint64_t v9 = *(void *)(v34 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8) {
    unsigned int v11 = v8;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v12 = *(void *)(type metadata accessor for Locale() - 8);
  uint64_t v13 = v12;
  if (*(_DWORD *)(v12 + 84) <= v11) {
    unsigned int v14 = v11;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v12 + 84);
  }
  uint64_t v15 = *(unsigned __int8 *)(v9 + 80);
  uint64_t v16 = *(void *)(v7 + 64) + v15;
  uint64_t v17 = *(void *)(v9 + 64);
  uint64_t v18 = *(unsigned __int8 *)(v12 + 80);
  size_t v19 = ((v17 + v18 + (v16 & ~v15)) & ~v18) + *(void *)(v12 + 64);
  if (a3 <= v14)
  {
    int v21 = 0;
    int v20 = a1;
  }
  else
  {
    int v20 = a1;
    if (v19 <= 3)
    {
      unsigned int v25 = ((a3 - v14 + ~(-1 << (8 * v19))) >> (8 * v19)) + 1;
      if (HIWORD(v25))
      {
        int v21 = 4;
      }
      else if (v25 >= 0x100)
      {
        int v21 = 2;
      }
      else
      {
        int v21 = v25 > 1;
      }
    }
    else
    {
      int v21 = 1;
    }
  }
  if (v14 < a2)
  {
    unsigned int v22 = ~v14 + a2;
    if (v19 < 4)
    {
      int v23 = (v22 >> (8 * v19)) + 1;
      if (v19)
      {
        int v26 = v22 & ~(-1 << (8 * v19));
        bzero(v20, v19);
        if (v19 == 3)
        {
          *(_WORD *)int v20 = v26;
          v20[2] = BYTE2(v26);
        }
        else if (v19 == 2)
        {
          *(_WORD *)int v20 = v26;
        }
        else
        {
          unsigned char *v20 = v26;
        }
      }
    }
    else
    {
      bzero(v20, v19);
      *(_DWORD *)int v20 = v22;
      int v23 = 1;
    }
    switch(v21)
    {
      case 1:
        v20[v19] = v23;
        return;
      case 2:
        *(_WORD *)&v20[v19] = v23;
        return;
      case 3:
        goto LABEL_47;
      case 4:
        *(_DWORD *)&v20[v19] = v23;
        return;
      default:
        return;
    }
  }
  uint64_t v24 = ~v15;
  switch(v21)
  {
    case 1:
      v20[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&v20[v19] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_47:
      __break(1u);
      JUMPOUT(0x1003DCD44);
    case 4:
      *(_DWORD *)&v20[v19] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (!a2) {
        return;
      }
LABEL_27:
      if (v8 == v14)
      {
        uint64_t v27 = v36;
        uint64_t v28 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v35 + 56);
        uint64_t v29 = v20;
        uint64_t v30 = a2;
        uint64_t v31 = v8;
LABEL_31:
        v28(v29, v30, v31, v27);
        return;
      }
      uint64_t v29 = (unsigned char *)((unint64_t)&v20[v16] & v24);
      if (v10 == v14)
      {
        uint64_t v28 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
        uint64_t v30 = a2;
        uint64_t v31 = v10;
        uint64_t v27 = v34;
        goto LABEL_31;
      }
      unint64_t v32 = (unint64_t)&v29[v17 + v18] & ~v18;
      int v33 = *(void (**)(unint64_t, uint64_t))(v13 + 56);
      v33(v32, a2);
      return;
  }
}

uint64_t _s17MeasurementFilterVMa()
{
  return sub_100073C20();
}

uint64_t sub_1003DCD84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v44 = a2;
  uint64_t v43 = sub_100010218(&qword_1007F8E98);
  __chkstk_darwin(v43);
  uint64_t v4 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v39 = (char *)&v35 - v6;
  uint64_t v46 = sub_100010218(&qword_1007F8EA0);
  __chkstk_darwin(v46);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v45 = (uint64_t)&v35 - v10;
  uint64_t v11 = type metadata accessor for AttributedString.CharacterView();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  unsigned int v14 = (char *)&v35 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100010218(&qword_100805F88);
  uint64_t v16 = v15 - 8;
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v35 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for AttributedSubstring();
  uint64_t v20 = sub_1003DF9C0(&qword_100805F90, (void (*)(uint64_t))&type metadata accessor for AttributedSubstring);
  uint64_t v41 = a1;
  uint64_t v42 = v19;
  uint64_t v40 = v20;
  dispatch thunk of AttributedStringProtocol.characters.getter();
  sub_10023DC98((uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  int v21 = &v18[*(int *)(v16 + 44)];
  uint64_t v22 = type metadata accessor for AttributedString.Index();
  sub_1003DF9C0(&qword_1007F8EB0, (void (*)(uint64_t))&type metadata accessor for AttributedString.Index);
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v37 = v8;
    uint64_t v24 = v39;
    uint64_t v25 = v43;
    int v26 = &v39[*(int *)(v43 + 48)];
    uint64_t v27 = *(void **)(v22 - 8);
    uint64_t v28 = (void (*)(char *, char *, uint64_t))v27[2];
    uint64_t v38 = v18;
    v28(v39, v18, v22);
    uint64_t v36 = v26;
    v28(v26, v21, v22);
    uint64_t v29 = &v4[*(int *)(v25 + 48)];
    v28(v4, v24, v22);
    v28(v29, v26, v22);
    uint64_t v30 = (void (*)(char *, char *, uint64_t))v27[4];
    uint64_t v31 = (uint64_t)v37;
    v30(v37, v4, v22);
    unint64_t v32 = (void (*)(char *, uint64_t))v27[1];
    v32(v29, v22);
    int v33 = &v4[*(int *)(v25 + 48)];
    v30(v4, v24, v22);
    v30(v33, v36, v22);
    v30((char *)(v31 + *(int *)(v46 + 36)), v33, v22);
    v32(v4, v22);
    uint64_t v34 = v45;
    sub_100014514(v31, v45);
    sub_1003DF710();
    dispatch thunk of AttributedStringProtocol.subscript.getter();
    sub_10001457C(v34, &qword_1007F8EA0);
    return sub_10001457C((uint64_t)v38, &qword_100805F88);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1003DD224(uint64_t a1)
{
  unint64_t v2 = sub_1003DF954();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1003DD260(uint64_t a1)
{
  unint64_t v2 = sub_1003DF954();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1003DD29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AttributedString();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t sub_1003DD308(void *a1)
{
  uint64_t v2 = sub_100010218(&qword_10080BF30);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_1003DF954();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1003DD418(uint64_t a1, void *a2)
{
  uint64_t v46 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
  uint64_t v45 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v44 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for AttributedString.CharacterView();
  __chkstk_darwin(v51);
  char v49 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for AttributedSubstring();
  uint64_t v41 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v40 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1007FDDA0);
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v56 = v7;
  __chkstk_darwin(v7);
  int v52 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for AttributedString.Runs();
  uint64_t v53 = *(void *)(v9 - 8);
  uint64_t v54 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218(&qword_1007FDD98);
  __chkstk_darwin(v12 - 8);
  unsigned int v14 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_100010218(&qword_1007F8EA0);
  __chkstk_darwin(v38);
  uint64_t v39 = (uint64_t)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = a2[2];
  uint64_t v16 = a2[3];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v50 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v20 = (char *)&v37 - v19;
  dispatch thunk of FormatStyle.format(_:)();
  uint64_t v43 = a2;
  uint64_t v21 = a2[4];
  id v47 = v20;
  uint64_t v48 = AssociatedTypeWitness;
  dispatch thunk of AttributedStringProtocol.runs.getter();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v62 = swift_getKeyPath();
  swift_getKeyPath();
  sub_1003DF8DC();
  sub_1003DF9C0(&qword_10080BEF8, (void (*)(uint64_t))&type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute);
  uint64_t v22 = v52;
  AttributedString.Runs.subscript.getter();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v53 + 8))(v11, v54);
  uint64_t v58 = v17;
  uint64_t v59 = v16;
  uint64_t v60 = v21;
  uint64_t v61 = v2;
  sub_1000E9500((uint64_t (*)(char *))sub_1003DF930, (uint64_t)v57, (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v22, v56);
  uint64_t v23 = sub_100010218(&qword_1007FDD90);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v23 - 8) + 48))(v14, 1, v23) == 1)
  {
    sub_10001457C((uint64_t)v14, &qword_1007FDD98);
    uint64_t v24 = v45;
    uint64_t v25 = v44;
    uint64_t v26 = v46;
    (*(void (**)(char *, void, uint64_t))(v45 + 104))(v44, enum case for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component.unit(_:), v46);
    sub_1003DF9C0(&qword_10080BF08, (void (*)(uint64_t))&type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component);
    dispatch thunk of RawRepresentable.rawValue.getter();
    dispatch thunk of RawRepresentable.rawValue.getter();
    uint64_t v28 = v64;
    uint64_t v27 = v65;
    (*(void (**)(char *, uint64_t))(v24 + 8))(v25, v26);
    uint64_t v29 = v48;
    uint64_t v30 = v50;
    uint64_t v31 = v47;
    if (v27 == v28)
    {
      dispatch thunk of AttributedStringProtocol.characters.getter();
      sub_1003DF9C0(&qword_1007FFA40, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
      uint64_t v32 = String.init<A>(_:)();
    }
    else
    {
      uint64_t v32 = 0;
    }
  }
  else
  {
    uint64_t v33 = (uint64_t)&v14[*(int *)(v23 + 48)];
    uint64_t v34 = v39;
    sub_100014514((uint64_t)&v14[*(int *)(v23 + 64)], v39);
    sub_10001457C(v33, &qword_10080BF10);
    sub_10001457C((uint64_t)v14, &qword_10080BF10);
    sub_1003DF710();
    uint64_t v35 = v40;
    uint64_t v31 = v47;
    uint64_t v29 = v48;
    dispatch thunk of AttributedStringProtocol.subscript.getter();
    AttributedSubstring.characters.getter();
    (*(void (**)(char *, uint64_t))(v41 + 8))(v35, v42);
    sub_1003DF9C0(&qword_1007FFA40, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
    uint64_t v32 = String.init<A>(_:)();
    sub_10001457C(v34, &qword_1007F8EA0);
    uint64_t v30 = v50;
  }
  (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v29);
  return v32;
}

uint64_t sub_1003DDC40()
{
  return dispatch thunk of static Equatable.== infix(_:_:)() & 1;
}

uint64_t sub_1003DDC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v84 = a1;
  uint64_t v3 = _s17MeasurementFilterVMa();
  uint64_t v80 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v82 = (char *)&v64 - v4;
  uint64_t v78 = sub_100010218(&qword_1007FDD90);
  __chkstk_darwin(v78);
  uint64_t v83 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  char v67 = (char *)&v64 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218(&qword_10080BF18);
  __chkstk_darwin(v9);
  uint64_t v76 = (uint64_t)&v64 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v64 - v12;
  uint64_t v14 = sub_100010218(&qword_10080BF10);
  __chkstk_darwin(v14 - 8);
  uint64_t v66 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v77 = (uint64_t)&v64 - v17;
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v64 - v19;
  __n128 v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v64 - v23;
  uint64_t v81 = v3;
  uint64_t v25 = *(int *)(v3 + 44);
  uint64_t v79 = a2;
  uint64_t v26 = *(void (**)(uint64_t, char *, uint64_t))(v7 + 16);
  uint64_t v70 = v7 + 16;
  uint64_t v68 = v26;
  ((void (*)(char *, uint64_t, uint64_t, __n128))v26)((char *)&v64 - v23, a2 + v25, v6, v22);
  uint64_t v27 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56);
  uint64_t v71 = v7 + 56;
  int v69 = v27;
  v27((uint64_t)v24, 0, 1, v6);
  uint64_t v74 = v9;
  uint64_t v28 = (uint64_t)&v13[*(int *)(v9 + 48)];
  sub_10001B220(v84, (uint64_t)v13, &qword_10080BF10);
  sub_10001B220((uint64_t)v24, v28, &qword_10080BF10);
  uint64_t v29 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  unsigned int v30 = v29(v13, 1, v6);
  uint64_t v65 = v7;
  uint64_t v75 = v6;
  uint64_t v72 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v29;
  uint64_t v73 = v7 + 48;
  if (v30 == 1)
  {
    sub_10001457C((uint64_t)v24, &qword_10080BF10);
    unsigned int v31 = v29((char *)v28, 1, v6);
    if (v31 == 1) {
      uint64_t v32 = &qword_10080BF10;
    }
    else {
      uint64_t v32 = &qword_10080BF18;
    }
    if (v31 == 1) {
      char v33 = -1;
    }
    else {
      char v33 = 0;
    }
  }
  else
  {
    sub_10001B220((uint64_t)v13, (uint64_t)v20, &qword_10080BF10);
    if (v29((char *)v28, 1, v6) == 1)
    {
      sub_10001457C((uint64_t)v24, &qword_10080BF10);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v20, v6);
      char v33 = 0;
      uint64_t v32 = &qword_10080BF18;
    }
    else
    {
      uint64_t v34 = v67;
      (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v67, v28, v6);
      sub_1003DF9C0(&qword_10080BF20, (void (*)(uint64_t))&type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component);
      char v33 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v35 = *(void (**)(char *, uint64_t))(v7 + 8);
      v35(v34, v6);
      uint64_t v32 = &qword_10080BF10;
      sub_10001457C((uint64_t)v24, &qword_10080BF10);
      v35(v20, v6);
    }
  }
  sub_10001457C((uint64_t)v13, v32);
  uint64_t v36 = *(int *)(v78 + 48);
  uint64_t v37 = v83;
  uint64_t v38 = v83 + v36;
  uint64_t v39 = *(int *)(v78 + 64);
  uint64_t v40 = v83 + v39;
  uint64_t v41 = v84 + v36;
  uint64_t v42 = v84 + v39;
  sub_10001B220(v84, v83, &qword_10080BF10);
  sub_10001B220(v41, v38, &qword_10080BF10);
  sub_10001B220(v42, v40, &qword_1007F8EA0);
  uint64_t v43 = v80;
  uint64_t v44 = v82;
  uint64_t v45 = v81;
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v82, v79, v81);
  if ((v33 & 1) == 0)
  {
    uint64_t v48 = v77;
    uint64_t v49 = v75;
    v68(v77, &v44[*(int *)(v45 + 44)], v75);
    v69(v48, 0, 1, v49);
    uint64_t v50 = v44;
    uint64_t v51 = v76;
    uint64_t v52 = v76 + *(int *)(v74 + 48);
    sub_10001B220(v38, v76, &qword_10080BF10);
    sub_10001B220(v48, v52, &qword_10080BF10);
    uint64_t v53 = v72;
    if (v72(v51, 1, v49) == 1)
    {
      sub_10001457C(v48, &qword_10080BF10);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v50, v45);
      sub_10001457C(v83, &qword_1007FDD90);
      if (v53(v52, 1, v49) == 1)
      {
        uint64_t v46 = &qword_10080BF10;
        uint64_t v47 = v51;
        goto LABEL_16;
      }
    }
    else
    {
      uint64_t v55 = (uint64_t)v66;
      sub_10001B220(v51, (uint64_t)v66, &qword_10080BF10);
      unsigned int v56 = v53(v52, 1, v49);
      uint64_t v57 = v65;
      uint64_t v58 = (void (**)(uint64_t, uint64_t))(v65 + 8);
      uint64_t v59 = v83;
      if (v56 != 1)
      {
        uint64_t v60 = v67;
        (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v67, v52, v49);
        sub_1003DF9C0(&qword_10080BF20, (void (*)(uint64_t))&type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component);
        char v54 = dispatch thunk of static Equatable.== infix(_:_:)();
        uint64_t v61 = v59;
        uint64_t v62 = *(void (**)(char *, uint64_t))(v57 + 8);
        v62(v60, v49);
        sub_10001457C(v77, &qword_10080BF10);
        (*(void (**)(char *, uint64_t))(v43 + 8))(v82, v45);
        sub_10001457C(v61, &qword_1007FDD90);
        v62(v66, v49);
        sub_10001457C(v76, &qword_10080BF10);
        return v54 & 1;
      }
      sub_10001457C(v77, &qword_10080BF10);
      (*(void (**)(char *, uint64_t))(v43 + 8))(v82, v45);
      sub_10001457C(v59, &qword_1007FDD90);
      (*v58)(v55, v49);
    }
    sub_10001457C(v51, &qword_10080BF18);
    char v54 = 0;
    return v54 & 1;
  }
  (*(void (**)(char *, uint64_t))(v43 + 8))(v44, v45);
  uint64_t v46 = &qword_1007FDD90;
  uint64_t v47 = v37;
LABEL_16:
  sub_10001457C(v47, v46);
  char v54 = 1;
  return v54 & 1;
}

uint64_t sub_1003DE4FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = *(void *)(a2 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  __n128 v9 = __chkstk_darwin(a1);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, __n128))(*(void *)(v12 - 8) + 16))(a3, v3, a2, v9);
  dispatch thunk of FormatStyle.locale(_:)();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(a3, v11, v7);
  uint64_t v13 = a3 + *(int *)(a2 + 48);
  uint64_t v14 = type metadata accessor for Locale();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 24))(v13, a1, v14);
}

uint64_t sub_1003DE658()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_1003DE750()
{
  if ((dispatch thunk of static Equatable.== infix(_:_:)() & 1) != 0
    && (_s17MeasurementFilterVMa(),
        type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component(),
        sub_1003DF9C0(&qword_10080BF08, (void (*)(uint64_t))&type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component), dispatch thunk of RawRepresentable.rawValue.getter(), dispatch thunk of RawRepresentable.rawValue.getter(), v3 == v2))
  {
    char v0 = static Locale.== infix(_:_:)();
  }
  else
  {
    char v0 = 0;
  }
  return v0 & 1;
}

uint64_t sub_1003DE864(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1702060386 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E656E6F706D6F63 && a2 == 0xE900000000000074 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656C61636F6CLL && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1003DE9B0(char a1)
{
  if (!a1) {
    return 1702060386;
  }
  if (a1 == 1) {
    return 0x6E656E6F706D6F63;
  }
  return 0x656C61636F6CLL;
}

uint64_t sub_1003DEA00(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  v10[0] = a2;
  v10[1] = v3;
  _s17MeasurementFilterV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v4 = type metadata accessor for KeyedEncodingContainer();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v10 - v6;
  sub_10002E0BC(a1, a1[3]);
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v13 = 0;
  uint64_t v8 = v10[3];
  KeyedEncodingContainer.encode<A>(_:forKey:)();
  if (!v8)
  {
    char v12 = 1;
    type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
    sub_1003DF9C0(&qword_10080BF50, (void (*)(uint64_t))&type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
    char v11 = 2;
    type metadata accessor for Locale();
    sub_1003DF9C0(&qword_10080BF58, (void (*)(uint64_t))&type metadata accessor for Locale);
    KeyedEncodingContainer.encode<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Int sub_1003DEC90()
{
  return Hasher._finalize()();
}

uint64_t sub_1003DECD8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v39 = a4;
  uint64_t v7 = type metadata accessor for Locale();
  uint64_t v53 = *(void *)(v7 - 8);
  uint64_t v54 = v7;
  __chkstk_darwin(v7);
  uint64_t v40 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component();
  uint64_t v44 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v43 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = *(void *)(a2 - 8);
  __chkstk_darwin(v10);
  uint64_t v45 = (char *)&v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s17MeasurementFilterV10CodingKeysOMa();
  swift_getWitnessTable();
  uint64_t v48 = type metadata accessor for KeyedDecodingContainer();
  uint64_t v42 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  char v13 = (char *)&v36 - v12;
  uint64_t v46 = a3;
  uint64_t v47 = a2;
  uint64_t v14 = _s17MeasurementFilterVMa();
  uint64_t v38 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v36 - v15;
  uint64_t v51 = (char *)&v36 + *(int *)(v17 + 48) - v15;
  static Locale.autoupdatingCurrent.getter();
  uint64_t v18 = a1[3];
  uint64_t v52 = a1;
  sub_10002E0BC(a1, v18);
  uint64_t v50 = v13;
  uint64_t v19 = v55;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v19)
  {
    uint64_t v27 = v53;
    uint64_t v28 = v54;
    uint64_t v29 = v51;
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v52);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v29, v28);
  }
  else
  {
    uint64_t v21 = v42;
    uint64_t v20 = v43;
    uint64_t v55 = v16;
    uint64_t v37 = v14;
    uint64_t v22 = v44;
    uint64_t v23 = v45;
    uint64_t v24 = v48;
    uint64_t v25 = v49;
    char v58 = 0;
    uint64_t v26 = v47;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v55, v23, v26);
    char v57 = 1;
    sub_1003DF9C0(&qword_10080BF40, (void (*)(uint64_t))&type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute.Component);
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(&v55[*(int *)(v37 + 44)], v20, v25);
    char v56 = 2;
    sub_1003DF9C0(&qword_10080BF48, (void (*)(uint64_t))&type metadata accessor for Locale);
    unsigned int v30 = v40;
    uint64_t v31 = v54;
    KeyedDecodingContainer.decode<A>(_:forKey:)();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v50, v24);
    (*(void (**)(char *, char *, uint64_t))(v53 + 40))(v51, v30, v31);
    uint64_t v32 = v38;
    char v33 = v55;
    uint64_t v34 = v37;
    (*(void (**)(uint64_t, char *, uint64_t))(v38 + 16))(v39, v55, v37);
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v52);
    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v33, v34);
  }
}

BOOL sub_1003DF2D4(char *a1, char *a2)
{
  return static TranscriptPostProcessorError.__derived_enum_equals(_:_:)(*a1, *a2);
}

Swift::Int sub_1003DF2EC()
{
  return TranscriptPostProcessorError.hashValue.getter(*v0);
}

void sub_1003DF2FC(uint64_t a1)
{
  TranscriptPostProcessorError.hash(into:)(a1, *v1);
}

Swift::Int sub_1003DF30C()
{
  Hasher.init(_seed:)();
  TranscriptPostProcessorError.hash(into:)((uint64_t)v2, *v0);
  return Hasher._finalize()();
}

uint64_t sub_1003DF358()
{
  return sub_1003DE9B0(*v0);
}

uint64_t sub_1003DF368@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1003DE864(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1003DF39C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1003DFC10();
  *a1 = result;
  return result;
}

uint64_t sub_1003DF3D0(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.description.getter(a1, WitnessTable);
}

uint64_t sub_1003DF424(uint64_t a1)
{
  uint64_t WitnessTable = swift_getWitnessTable();

  return CodingKey.debugDescription.getter(a1, WitnessTable);
}

uint64_t sub_1003DF478@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_1003DD418(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

uint64_t sub_1003DF4A4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1003DECD8(a1, *(void *)(a2 + 16), *(void *)(a2 + 24), a3);
}

uint64_t sub_1003DF4C8(void *a1, uint64_t a2)
{
  return sub_1003DEA00(a1, a2);
}

Swift::Int sub_1003DF4E8()
{
  return Hasher._finalize()();
}

uint64_t sub_1003DF52C()
{
  return sub_1003DE750();
}

uint64_t sub_1003DF53C()
{
  return swift_getWitnessTable();
}

unint64_t sub_1003DF55C()
{
  unint64_t result = qword_10080BED8;
  if (!qword_10080BED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080BED8);
  }
  return result;
}

unint64_t sub_1003DF5B4()
{
  unint64_t result = qword_10080BEE0;
  if (!qword_10080BEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080BEE0);
  }
  return result;
}

unint64_t sub_1003DF60C()
{
  unint64_t result = qword_10080BEE8;
  if (!qword_10080BEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080BEE8);
  }
  return result;
}

unint64_t sub_1003DF664()
{
  unint64_t result = qword_10080BEF0;
  if (!qword_10080BEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080BEF0);
  }
  return result;
}

uint64_t sub_1003DF6B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_1003DF6D4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1003DF6F0()
{
  return swift_getWitnessTable();
}

unint64_t sub_1003DF710()
{
  unint64_t result = qword_1007FFA38;
  if (!qword_1007FFA38)
  {
    sub_100014440(&qword_1007F8EA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FFA38);
  }
  return result;
}

uint64_t sub_1003DF770()
{
  return 8;
}

uint64_t sub_1003DF77C()
{
  return swift_release();
}

uint64_t sub_1003DF784(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_1003DF798(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1003DF7A4()
{
  return AttributeScopes.FoundationAttributes.measurement.getter();
}

uint64_t sub_1003DF7C8()
{
  return sub_1003DF9C0(&qword_10080BEF8, (void (*)(uint64_t))&type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute);
}

uint64_t sub_1003DF810()
{
  sub_1003DF9C0(&qword_10080BEF8, (void (*)(uint64_t))&type metadata accessor for AttributeScopes.FoundationAttributes.MeasurementAttribute);

  return AttributeDynamicLookup.subscript.getter();
}

uint64_t sub_1003DF884()
{
  return 8;
}

uint64_t sub_1003DF894()
{
  return dispatch thunk of Hashable.hashValue.getter();
}

unint64_t sub_1003DF8DC()
{
  unint64_t result = qword_10080BF00;
  if (!qword_10080BF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080BF00);
  }
  return result;
}

uint64_t sub_1003DF930(uint64_t a1)
{
  return sub_1003DDC9C(a1, *(void *)(v1 + 40)) & 1;
}

unint64_t sub_1003DF954()
{
  unint64_t result = qword_10080BF38;
  if (!qword_10080BF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080BF38);
  }
  return result;
}

uint64_t _s17MeasurementFilterV10CodingKeysOMa()
{
  return sub_100073C20();
}

uint64_t sub_1003DF9C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *sub_1003DFA08(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1003DFAD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11PassthroughV10CodingKeysOMa()
{
  return &_s11PassthroughV10CodingKeysON;
}

uint64_t sub_1003DFB0C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1003DFB28()
{
  return swift_getWitnessTable();
}

uint64_t sub_1003DFB44()
{
  return swift_getWitnessTable();
}

unint64_t sub_1003DFB64()
{
  unint64_t result = qword_10080BFF0;
  if (!qword_10080BFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080BFF0);
  }
  return result;
}

unint64_t sub_1003DFBBC()
{
  unint64_t result = qword_10080BFF8;
  if (!qword_10080BFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080BFF8);
  }
  return result;
}

uint64_t sub_1003DFC10()
{
  return 3;
}

void sub_1003DFC24(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

id sub_1003DFC9C()
{
  uint64_t v0 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v1 + 104))(v3, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v0, v6);
  UICollectionLayoutListConfiguration.init(appearance:)();
  uint64_t v9 = self;
  id v10 = [v9 systemBackgroundColor];
  UICollectionLayoutListConfiguration.backgroundColor.setter();
  sub_10001B284(0, (unint64_t *)&unk_10080F2F0);
  uint64_t v11 = (void *)static UICollectionViewCompositionalLayout.list(using:)();
  id v12 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:v11 collectionViewLayout:0.0, 0.0, 0.0, 0.0];
  sub_10001B284(0, (unint64_t *)&unk_10080C060);
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  NSString v14 = String._bridgeToObjectiveC()();
  [v12 registerClass:ObjCClassFromMetadata forCellWithReuseIdentifier:v14];

  id v15 = v12;
  id v16 = [v9 systemBackgroundColor];
  [v15 setBackgroundColor:v16];

  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return v15;
}

id sub_1003DFF38()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal35LockJournalOnboardingViewController_collectionView;
  uint64_t v2 = v0;
  *(void *)&v0[v1] = sub_1003DFC9C();
  char v3 = sub_10035EE44();
  if (v3 == 4) {
    char v4 = 1;
  }
  else {
    char v4 = v3;
  }
  v2[OBJC_IVAR____TtC7Journal35LockJournalOnboardingViewController_selectedTimeout] = v4;
  uint64_t v5 = OBJC_IVAR____TtC7Journal35LockJournalOnboardingViewController_tableViewTopMargin;
  if (qword_1007F7378 != -1) {
    swift_once();
  }
  *(void *)&v2[v5] = qword_10083D988;
  *(void *)&v2[OBJC_IVAR____TtC7Journal35LockJournalOnboardingViewController_requirePasscodeSelectionPreferredHeight] = 0x4072C00000000000;

  if (qword_1007F7670 != -1) {
    swift_once();
  }
  NSString v6 = String._bridgeToObjectiveC()();
  sub_1003E23B8();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  if (qword_1007F7C30 != -1) {
    swift_once();
  }
  id v8 = (id)qword_10083E918;
  if (qword_10083E918)
  {
    id v9 = [self systemIndigoColor];
    id v8 = [v8 imageWithTintColor:v9];
  }
  v13.id receiver = v2;
  v13.Class super_class = (Class)type metadata accessor for LockJournalOnboardingViewController();
  id v10 = [super initWithTitle:v6 detailText:v7 icon:v8 contentLayout:3];

  id v11 = v10;
  sub_1003E0128();

  return v11;
}

void sub_1003E0128()
{
  uint64_t v1 = v0;
  id v2 = [v0 view];
  if (!v2)
  {
    __break(1u);
    goto LABEL_29;
  }
  char v3 = v2;
  [v2 setAccessibilityViewIsModal:1];

  id v4 = [v1 view];
  if (!v4)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v5 = v4;
  id v52 = self;
  id v6 = [v52 systemBackgroundColor];
  [v5 setBackgroundColor:v6];

  id v7 = [v1 view];
  if (!v7)
  {
LABEL_30:
    __break(1u);
    return;
  }
  id v8 = v7;
  [v7 setAccessibilityViewIsModal:1];

  uint64_t v9 = OBJC_IVAR____TtC7Journal35LockJournalOnboardingViewController_collectionView;
  [*(id *)&v1[OBJC_IVAR____TtC7Journal35LockJournalOnboardingViewController_collectionView] setDelegate:v1];
  [*(id *)&v1[v9] setDataSource:v1];
  [*(id *)&v1[v9] setScrollEnabled:0];
  double v10 = *(double *)&v1[OBJC_IVAR____TtC7Journal35LockJournalOnboardingViewController_requirePasscodeSelectionPreferredHeight];
  id v11 = *(id *)&v1[v9];
  id v12 = &stru_1007D7000;
  [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v13 = [v11 heightAnchor];
  id v14 = [v13 constraintEqualToConstant:v10];

  [v14 setActive:1];
  id v15 = [v1 contentView];
  [v15 addSubview:*(void *)&v1[v9]];

  double v16 = *(double *)&v1[OBJC_IVAR____TtC7Journal35LockJournalOnboardingViewController_tableViewTopMargin];
  id v17 = *(id *)&v1[v9];
  uint64_t v18 = &selRef_drawMapRect_zoomScale_inContext_;
  id v19 = [v17 superview];
  if (v19)
  {
    uint64_t v20 = v19;
    [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v21 = [v17 topAnchor];
    id v22 = [v20 topAnchor];
    id v23 = [v21 constraintEqualToAnchor:v22];

    [v23 setConstant:v16];
    if (v23)
    {
      id v23 = v23;
      [v23 setActive:1];

      id v17 = v23;
    }

    id v12 = &stru_1007D7000;
    uint64_t v18 = &selRef_drawMapRect_zoomScale_inContext_;
  }
  else
  {
    id v23 = 0;
    uint64_t v20 = v17;
  }

  id v24 = *(id *)&v1[v9];
  id v25 = sub_1001DD438(0, 1, 0.0);

  id v26 = *(id *)&v1[v9];
  id v27 = [v26 v18[77]];
  if (v27)
  {
    uint64_t v28 = v27;
    uint64_t v29 = v12;
    [v26 v12[96].name];
    id v30 = [v26 leadingAnchor];
    id v31 = [v28 leadingAnchor];
    id v32 = [v30 constraintEqualToAnchor:v31];

    [v32 setConstant:0.0];
    if (v32)
    {
      id v32 = v32;
      [v32 setActive:1];

      id v26 = v32;
    }

    id v12 = v29;
    uint64_t v18 = &selRef_drawMapRect_zoomScale_inContext_;
  }
  else
  {
    id v32 = 0;
    uint64_t v28 = v26;
  }

  id v33 = *(id *)&v1[v9];
  id v34 = [v33 v18[77]];
  if (v34)
  {
    uint64_t v35 = v34;
    [v33 v12[96].name];
    id v36 = [v33 trailingAnchor];
    id v37 = [v35 trailingAnchor];
    id v38 = [v36 constraintEqualToAnchor:v37];

    [v38 setConstant:0.0];
    uint64_t v39 = &selRef_drawMapRect_zoomScale_inContext_;
    uint64_t v40 = v52;
    if (v38)
    {
      id v38 = v38;
      [v38 setActive:1];

      id v33 = v38;
    }
    uint64_t v41 = &stru_1007D7000;
  }
  else
  {
    id v38 = 0;
    uint64_t v35 = v33;
    uint64_t v39 = &selRef_drawMapRect_zoomScale_inContext_;
    uint64_t v41 = &stru_1007D7000;
    uint64_t v40 = v52;
  }

  id v42 = [self boldButton];
  id v43 = [v40 systemIndigoColor];
  [v42 setTintColor:v43];

  if (qword_1007F74A0 != -1) {
    swift_once();
  }
  NSString v44 = String._bridgeToObjectiveC()();
  [v42 setTitle:v44 forState:0];

  [v42 addTarget:v1 action:"turnOnButtonTapped" forControlEvents:64];
  id v53 = [objc_allocWithZone((Class)OBTrayButton) init];
  if (qword_1007F7698 != -1) {
    swift_once();
  }
  NSString v45 = String._bridgeToObjectiveC()();
  [v53 setTitle:v45 forState:0];

  id v46 = [v40 systemIndigoColor];
  [v53 setTitleColor:v46 forState:0];

  if (qword_1007F7240 != -1) {
    swift_once();
  }

  [v53 addTarget:v1 action:"notNowButtonTapped" forControlEvents:64];
  id v47 = [v53 titleLabel];
  [v47 setAdjustsFontForContentSizeCategory:1];

  id v48 = [v1 buttonTray];
  [v48 addButton:v42];

  id v49 = [v1 buttonTray];
  [v49 addButton:v53];

  id v50 = [v1 buttonTray];
  id v51 = [v40 v39[501]];
  [v50 v41[92].imp:v51];

  UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0);
}

void sub_1003E0930()
{
  id v1 = [self standardUserDefaults];
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setBool:1 forKey:v2];

  id v7 = [objc_allocWithZone((Class)LAContext) init];
  if ([v7 canEvaluatePolicy:2 error:0])
  {
    if (qword_1007F76A0 != -1) {
      swift_once();
    }
    NSString v3 = String._bridgeToObjectiveC()();
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v0;
    aBlock[4] = sub_1003E2334;
    aBlock[5] = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1003DFC24;
    aBlock[3] = &unk_1007A9490;
    uint64_t v5 = _Block_copy(aBlock);
    id v6 = v0;
    swift_release();
    [v7 evaluatePolicy:2 localizedReason:v3 reply:v5];
    _Block_release(v5);
  }
  else
  {
    sub_1003E10B0();
  }
}

uint64_t sub_1003E0B20(char a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  double v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(unsigned char *)(v12 + 24) = a1;
  aBlock[4] = sub_1003E23AC;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007A9508;
  id v13 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1003E0DD0(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    if (a2)
    {
      uint64_t v5 = *(char *)(Strong + OBJC_IVAR____TtC7Journal35LockJournalOnboardingViewController_selectedTimeout);
      if (qword_1007F6E48 != -1) {
        swift_once();
      }
      uint64_t v6 = (void *)qword_10083D3C0;
      NSString v7 = String._bridgeToObjectiveC()();
      [v6 removeObjectForKey:v7];

      NSString v8 = String._bridgeToObjectiveC()();
      [v6 removeObjectForKey:v8];

      uint64_t v9 = qword_1006E6E28[v5];
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v6 setInteger:v9 forKey:v10];
    }
    id v11 = [v4 presentingViewController];
    if (v11)
    {
      id v12 = v11;
      [v11 dismissViewControllerAnimated:1 completion:0];

      uint64_t v4 = v12;
    }
  }
}

void sub_1003E10B0()
{
  type metadata accessor for JurassicAlertController();
  if (qword_1007F76A8 != -1) {
    swift_once();
  }
  uint64_t v1 = qword_1007F76B0;
  swift_bridgeObjectRetain();
  if (v1 != -1) {
    swift_once();
  }
  swift_bridgeObjectRetain();
  NSString v2 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  NSString v3 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v4 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v2 message:v3 preferredStyle:1];

  if (qword_1007F7478 != -1) {
    swift_once();
  }
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v0;
  swift_bridgeObjectRetain();
  id v6 = v0;
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  void v10[4] = sub_1003E2314;
  uint64_t v10[5] = v5;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 1107296256;
  v10[2] = sub_10007453C;
  v10[3] = &unk_1007A9440;
  NSString v8 = _Block_copy(v10);
  swift_release();
  id v9 = [self actionWithTitle:v7 style:1 handler:v8];
  _Block_release(v8);

  [v4 addAction:v9];
  [v6 presentViewController:v4 animated:1 completion:0];
}

void sub_1003E133C(int a1, id a2)
{
  id v2 = [a2 presentingViewController];
  if (v2)
  {
    id v3 = v2;
    [v2 dismissViewControllerAnimated:1 completion:0];
  }
}

id sub_1003E1410()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for LockJournalOnboardingViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for LockJournalOnboardingViewController()
{
  return self;
}

id sub_1003E1488(void *a1)
{
  uint64_t v2 = sub_100010218(&qword_1008098F0);
  __chkstk_darwin(v2 - 8);
  id v47 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for UIBackgroundConfiguration();
  uint64_t v48 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  NSString v44 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_10080C050);
  __chkstk_darwin(v6 - 8);
  id v43 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UICellAccessory.PopUpMenuOptions();
  uint64_t v45 = *(void *)(v8 - 8);
  uint64_t v46 = v8;
  __chkstk_darwin(v8);
  NSString v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v11 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  id v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for UIListContentConfiguration();
  uint64_t v14 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  double v16 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v17 = String._bridgeToObjectiveC()();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  id v19 = [a1 dequeueReusableCellWithReuseIdentifier:v17 forIndexPath:isa];

  self;
  uint64_t v20 = swift_dynamicCastObjCClass();
  if (v20)
  {
    uint64_t v21 = v20;
    uint64_t v41 = v4;
    id v22 = v19;
    static UIListContentConfiguration.valueCell()();
    if (qword_1007F7690 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    UIListContentConfiguration.text.setter();
    sub_1003E1B34();
    UIListContentConfiguration.secondaryText.setter();
    uint64_t v23 = v49;
    v50[3] = v49;
    v50[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
    id v24 = sub_100062E54(v50);
    (*(void (**)(uint64_t *, char *, uint64_t))(v14 + 16))(v24, v16, v23);
    id v25 = v22;
    id v40 = v25;
    UICollectionViewCell.contentConfiguration.setter();

    uint64_t v26 = sub_1003E1B34();
    Class v39 = sub_1003E1D68(v26, v27);
    swift_bridgeObjectRelease();
    sub_100010218(&qword_100806BB0);
    type metadata accessor for UICellAccessory();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_1006D6280;
    uint64_t v28 = v42;
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v13, enum case for UICellAccessory.DisplayedState.always(_:), v42);
    uint64_t v29 = type metadata accessor for UICellAccessory.LayoutDimension();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v43, 1, 1, v29);
    UICellAccessory.PopUpMenuOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
    Class v30 = v39;
    static UICellAccessory.popUpMenu(_:displayed:options:selectedElementDidChangeHandler:)();
    (*(void (**)(char *, uint64_t))(v45 + 8))(v10, v46);
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v28);
    UICollectionViewListCell.accessories.setter();
    id v31 = v44;
    static UIBackgroundConfiguration.listCell()();
    id v32 = [self secondarySystemBackgroundColor];
    UIBackgroundConfiguration.backgroundColor.setter();
    id v33 = v47;
    uint64_t v34 = v48;
    uint64_t v35 = v41;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v47, v31, v41);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v33, 0, 1, v35);
    id v36 = v40;
    UICollectionViewCell.backgroundConfiguration.setter();

    (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v35);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v49);
    return (id)v21;
  }
  else
  {

    id v38 = objc_allocWithZone((Class)UICollectionViewListCell);
    return [v38 init];
  }
}

uint64_t sub_1003E1B34()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v1 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  return String.init(localized:table:bundle:locale:comment:)();
}

Class sub_1003E1D68(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
  for (uint64_t i = 0; i != 4; ++i)
  {
    char v5 = *((unsigned char *)&off_100794B98 + i + 32);
    sub_1003E1B34();
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v3;
    *(unsigned char *)(v6 + 24) = v5;
    id v7 = v3;
    v29._rawValue = 0;
    UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  if ((unint64_t)_swiftEmptyArrayStorage >> 62)
  {
LABEL_28:
    sub_10001B284(0, (unint64_t *)&unk_100807680);
    swift_bridgeObjectRetain();
    preferredElementSize = (double *)_bridgeCocoaArray<A>(_:)();
  }
  else
  {
    swift_bridgeObjectRetain_n();
    dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
    sub_10001B284(0, (unint64_t *)&unk_100807680);
    preferredElementSize = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  sub_10001B284(0, (unint64_t *)&unk_100809EE0);
  v9._countAndFlagsBits = 0;
  v9._object = (void *)0xE000000000000000;
  v33.value.super.Class isa = 0;
  v33.is_nil = 0;
  v10.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v9, (Swift::String_optional)0, v33, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)preferredElementSize, v29).super.super.isa;
  Class isa = v10.super.super.isa;
  if (a2)
  {
    Class v30 = v10.super.super.isa;
    id v12 = [(objc_class *)v10.super.super.isa children];
    sub_10001B284(0, (unint64_t *)&unk_100807680);
    unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v13 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v14 = _CocoaArrayWrapper.endIndex.getter();
      if (v14) {
        goto LABEL_10;
      }
    }
    else
    {
      uint64_t v14 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v14)
      {
LABEL_10:
        for (uint64_t j = 4; ; ++j)
        {
          if ((v13 & 0xC000000000000001) != 0) {
            id v16 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v16 = *(id *)(v13 + 8 * j);
          }
          NSString v17 = v16;
          uint64_t v18 = j - 3;
          if (__OFADD__(j - 4, 1))
          {
            __break(1u);
            goto LABEL_28;
          }
          self;
          uint64_t v19 = swift_dynamicCastObjCClass();
          if (!v19) {
            goto LABEL_22;
          }
          uint64_t v20 = (void *)v19;
          id v21 = v17;
          id v22 = [v20 title];
          uint64_t v23 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v25 = v24;

          if (v23 == a1 && v25 == a2)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            char v27 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if ((v27 & 1) == 0)
            {

LABEL_22:
              if (v18 == v14) {
                break;
              }
              continue;
            }
          }
          [v20 setState:1];

          if (v18 == v14) {
            break;
          }
        }
      }
    }
    swift_bridgeObjectRelease_n();
    Class isa = v30;
  }
  swift_bridgeObjectRelease();
  return isa;
}

uint64_t sub_1003E2278()
{
  return swift_deallocObject();
}

id sub_1003E22B0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal35LockJournalOnboardingViewController_selectedTimeout) = *(unsigned char *)(v0 + 24);
  return [*(id *)(v1 + OBJC_IVAR____TtC7Journal35LockJournalOnboardingViewController_collectionView) reloadData];
}

uint64_t sub_1003E22DC()
{
  return swift_deallocObject();
}

void sub_1003E2314(int a1)
{
  sub_1003E133C(a1, *(id *)(v1 + 16));
}

uint64_t sub_1003E231C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003E232C()
{
  return swift_release();
}

uint64_t sub_1003E2334(char a1)
{
  return sub_1003E0B20(a1);
}

uint64_t sub_1003E233C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003E2374()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1003E23AC()
{
  sub_1003E0DD0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1003E23B8()
{
  id v0 = [objc_allocWithZone((Class)LAContext) init];
  [v0 canEvaluatePolicy:1 error:0];
  if ([v0 biometryType] == (id)2)
  {
    if (qword_1007F7678 != -1) {
      swift_once();
    }
    uint64_t v1 = &xmmword_10083DE98;
  }
  else if ([v0 biometryType] == (id)1)
  {
    if (qword_1007F7680 != -1) {
      swift_once();
    }
    uint64_t v1 = &xmmword_10083DEA8;
  }
  else
  {
    if (qword_1007F7688 != -1) {
      swift_once();
    }
    uint64_t v1 = &xmmword_10083DEB8;
  }
  uint64_t v2 = *(void *)v1;
  swift_bridgeObjectRetain();

  return v2;
}

BOOL sub_1003E2500()
{
  id v0 = self;
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 applicationWithBundleIdentifier:v1];

  unsigned __int8 v3 = [v2 isLocked];
  char v4 = sub_10035EE44();
  char v5 = self;
  id v6 = [v5 standardUserDefaults];
  NSString v7 = String._bridgeToObjectiveC()();
  unsigned __int8 v8 = [v6 BOOLForKey:v7];

  BOOL result = 0;
  if ((v3 & 1) == 0 && v4 == 4 && (v8 & 1) == 0)
  {
    id v10 = [v5 standardUserDefaults];
    NSString v11 = String._bridgeToObjectiveC()();
    uint64_t v12 = (uint64_t)[v10 integerForKey:v11];

    return v12 > 2;
  }
  return result;
}

id sub_1003E26A0()
{
  if (qword_1007F7258 != -1) {
    swift_once();
  }
  id v0 = (void *)qword_10083D820;
  qword_10080C070 = qword_10083D820;

  return v0;
}

void sub_1003E2704()
{
  qword_10080C078 = 0x403E000000000000;
}

id sub_1003E2714(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_actionHandler + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_entry] = 0;
  uint64_t v9 = OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_dateLabel;
  id v10 = objc_allocWithZone((Class)UILabel);
  NSString v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_overflowButton;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIButton) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_bookmarkView;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UIImageView) init];
  *(void *)&v11[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_bookmarkViewLeadingSpaceConstraint] = 0;
  uint64_t v14 = OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_dividerLineView;
  type metadata accessor for JournalDividerView();
  *(void *)&v11[v14] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v15 = OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_unsupportedAlertButton;
  *(void *)&v11[v15] = [objc_allocWithZone((Class)UIButton) init];
  *(void *)&v11[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_unsupportedAlertButtonTrailingSpaceConstraint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_dateVerticalMargin] = 0x4022000000000000;
  *(void *)&v11[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_bookmarkMargin] = 0x4024000000000000;
  *(void *)&v11[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_itemMargin] = 0x4028000000000000;
  *(void *)&v11[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_optionalActions] = _swiftEmptyArrayStorage;

  v18.id receiver = v11;
  v18.Class super_class = (Class)type metadata accessor for JournalEntryCellChinView();
  [super initWithFrame:a1, a2, a3, a4];
  sub_1003E2AD4();

  return v16;
}

id sub_1003E2900(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_actionHandler + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v1[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_entry] = 0;
  uint64_t v3 = OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_dateLabel;
  id v4 = objc_allocWithZone((Class)UILabel);
  char v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_overflowButton;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UIButton) init];
  uint64_t v7 = OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_bookmarkView;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UIImageView) init];
  *(void *)&v5[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_bookmarkViewLeadingSpaceConstraint] = 0;
  uint64_t v8 = OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_dividerLineView;
  type metadata accessor for JournalDividerView();
  *(void *)&v5[v8] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v9 = OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_unsupportedAlertButton;
  *(void *)&v5[v9] = [objc_allocWithZone((Class)UIButton) init];
  *(void *)&v5[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_unsupportedAlertButtonTrailingSpaceConstraint] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_dateVerticalMargin] = 0x4022000000000000;
  *(void *)&v5[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_bookmarkMargin] = 0x4024000000000000;
  *(void *)&v5[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_itemMargin] = 0x4028000000000000;
  *(void *)&v5[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_optionalActions] = _swiftEmptyArrayStorage;

  v14.id receiver = v5;
  v14.Class super_class = (Class)type metadata accessor for JournalEntryCellChinView();
  id v10 = [super initWithCoder:a1];
  id v11 = v10;
  if (v10)
  {
    id v12 = v10;
    sub_1003E2AD4();
  }
  return v11;
}

uint64_t sub_1003E2AD4()
{
  NSString v1 = v0;
  uint64_t v2 = type metadata accessor for ColorResource();
  uint64_t v147 = *(void *)(v2 - 8);
  uint64_t v148 = v2;
  __chkstk_darwin(v2);
  uint64_t v146 = (char *)&v141 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100010218(&qword_1007F9770);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v141 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v154 = type metadata accessor for UIButton.Configuration();
  uint64_t v152 = *(void *)(v154 - 8);
  __chkstk_darwin(v154);
  char v153 = (char *)&v141 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v9 = __chkstk_darwin(v8).n128_u64[0];
  id v11 = (char *)&v141 - v10;
  id v12 = *(id *)&v0[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_dateLabel];
  [v1 addSubview:v12];
  if (qword_1007F72F8 != -1) {
    swift_once();
  }
  double v13 = *(double *)&qword_10083D908;
  id v14 = [v12 superview];
  id v155 = v12;
  if (v14)
  {
    uint64_t v15 = v14;
    [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v16 = [v12 leadingAnchor];
    id v17 = [v15 leadingAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    [v18 setConstant:v13];
    if (v18)
    {
      id v19 = v18;
      [v19 setActive:1];
    }
    id v12 = v155;
  }
  double v20 = *(double *)&v1[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_dateVerticalMargin];
  id v21 = [v12 superview];
  if (v21)
  {
    id v22 = v21;
    [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v23 = [v12 topAnchor];
    id v24 = [v22 topAnchor];
    id v25 = [v23 constraintEqualToAnchor:v24];

    [v25 setConstant:v20];
    if (v25)
    {
      id v26 = v25;
      [v26 setActive:1];
    }
    id v12 = v155;
  }

  if (qword_1007F6F50 != -1) {
    swift_once();
  }
  [v12 setFont:qword_10080C070];
  id v151 = self;
  id v27 = [v151 secondaryLabelColor];
  [v12 setTextColor:v27];

  [v12 setBaselineAdjustment:0];
  id v28 = [v12 layer];
  [v28 setMasksToBounds:0];

  [v12 setAdjustsFontForContentSizeCategory:1];
  [v12 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityExtraExtraLarge];
  [v12 setAdjustsFontSizeToFitWidth:1];
  Swift::OpaquePointer v29 = *(void **)&v1[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_overflowButton];
  [v1 addSubview:v29];
  [v29 setShowsMenuAsPrimaryAction:1];
  [v29 setContextMenuInteractionEnabled:1];
  [v29 addTarget:v1 action:"updateOverflowMenu:" forControlEvents:0x4000];
  id v30 = [v29 superview];
  if (v30)
  {
    id v31 = v30;
    [v29 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v32 = [v29 trailingAnchor];
    id v33 = [v31 trailingAnchor];
    id v34 = [v32 constraintEqualToAnchor:v33];

    [v34 setConstant:0.0];
    id v35 = v34;
    [v35 setActive:1];
  }
  id v36 = [v29 superview];
  if (v36)
  {
    id v37 = v36;
    [v29 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v38 = [v29 topAnchor];
    id v39 = [v37 topAnchor];
    id v40 = [v38 constraintEqualToAnchor:v39];

    [v40 setConstant:0.0];
    id v41 = v40;
    [v41 setActive:1];
  }
  static UIButton.Configuration.borderless()();
  if (qword_1007F7BD0 != -1) {
    swift_once();
  }
  uint64_t v42 = (void *)qword_10083E8B8;
  if (qword_10083E8B8)
  {
    id v43 = [self systemFontOfSize:15.0 weight:UIFontWeightSemibold];
    id v44 = [self configurationWithFont:v43 scale:3];

    id v45 = [v42 imageWithSymbolConfiguration:v44];
  }
  UIButton.Configuration.image.setter();
  UIButton.Configuration.contentInsets.setter();
  id v46 = v151;
  id v47 = [v151 secondaryLabelColor];
  UIButton.Configuration.baseForegroundColor.setter();
  id v48 = [v46 clearColor];
  uint64_t v49 = (void (*)(unsigned char *, void))UIButton.Configuration.background.modify();
  UIBackgroundConfiguration.backgroundColor.setter();
  v49(v156, 0);
  uint64_t v50 = v152;
  id v51 = *(void (**)(char *, char *, uint64_t))(v152 + 16);
  id v150 = v11;
  uint64_t v52 = v154;
  uint64_t v145 = v152 + 16;
  Swift::String v143 = v51;
  v51(v6, v11, v154);
  id v53 = *(void (**)(char *, void, uint64_t, uint64_t))(v50 + 56);
  uint64_t v144 = v50 + 56;
  id v142 = v53;
  v53(v6, 0, 1, v52);
  uint64_t v149 = v6;
  UIButton.configuration.setter();
  id v54 = [v29 leadingAnchor];
  id v55 = [v155 trailingAnchor];
  id v56 = [v54 constraintGreaterThanOrEqualToAnchor:v55];

  [v56 setActive:1];
  char v57 = *(void **)&v1[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_bookmarkView];
  [v1 addSubview:v57];
  [v57 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v58 = [v57 trailingAnchor];
  id v59 = [v29 leadingAnchor];
  id v60 = [v58 constraintEqualToAnchor:v59];

  [v60 setConstant:-0.0];
  [v60 setActive:1];

  id v61 = [v57 superview];
  if (v61)
  {
    uint64_t v62 = v61;
    [v57 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v63 = [v57 topAnchor];
    id v64 = [v62 topAnchor];
    id v65 = [v63 constraintEqualToAnchor:v64];

    [v65 setConstant:0.0];
    id v66 = v65;
    [v66 setActive:1];
  }
  if (qword_1007F7B48 != -1) {
    swift_once();
  }
  id v67 = (id)qword_10083E830;
  if (qword_10083E830)
  {
    id v68 = [self preferredFontForTextStyle:UIFontTextStyleCaption1];
    id v69 = [self configurationWithFont:v68 scale:2];

    id v67 = [v67 imageWithConfiguration:v69];
  }
  [v57 setImage:v67];

  if (qword_1007F71B0 != -1) {
    swift_once();
  }
  [v57 setTintColor:qword_10083D778];
  [v57 setContentMode:4];
  [v57 setAlpha:0.0];
  [v57 setIsAccessibilityElement:1];
  if (qword_1007F79B0 != -1) {
    swift_once();
  }
  NSString v70 = String._bridgeToObjectiveC()();
  [v57 setAccessibilityLabel:v70];

  id v71 = [v57 leadingAnchor];
  id v72 = [v155 trailingAnchor];
  id v73 = [v71 constraintGreaterThanOrEqualToAnchor:v72];

  uint64_t v74 = OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_bookmarkViewLeadingSpaceConstraint;
  uint64_t v75 = *(void **)&v1[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_bookmarkViewLeadingSpaceConstraint];
  *(void *)&v1[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_bookmarkViewLeadingSpaceConstraint] = v73;

  [*(id *)&v1[v74] setActive:0];
  uint64_t v76 = *(void **)&v1[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_unsupportedAlertButton];
  [v1 addSubview:v76];
  id v77 = [v76 superview];
  if (v77)
  {
    uint64_t v78 = v77;
    [v76 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v79 = [v76 topAnchor];
    id v80 = [v78 topAnchor];
    id v81 = [v79 constraintEqualToAnchor:v80];

    [v81 setConstant:0.0];
    id v82 = v81;
    [v82 setActive:1];
  }
  sub_10001B284(0, (unint64_t *)&qword_1007FC140);
  if (qword_1007F7F78 != -1) {
    swift_once();
  }
  uint64_t v83 = v148;
  uint64_t v84 = sub_100026A54(v148, (uint64_t)qword_10083EF88);
  (*(void (**)(char *, uint64_t, uint64_t))(v147 + 16))(v146, v84, v83);
  uint64_t v85 = (void *)UIColor.init(resource:)();
  [v76 setTintColor:v85];

  [v76 setHidden:1];
  [v76 setIsAccessibilityElement:1];
  static UIButton.Configuration.borderless()();
  if (qword_1007F7C88 != -1) {
    swift_once();
  }
  char v86 = (void *)qword_10083E970;
  if (qword_10083E970)
  {
    id v87 = [self systemFontOfSize:15.0 weight:UIFontWeightSemibold];
    id v88 = [self configurationWithFont:v87 scale:3];

    id v89 = [v86 imageWithSymbolConfiguration:v88];
  }
  uint64_t v90 = v153;
  UIButton.Configuration.image.setter();
  UIButton.Configuration.contentInsets.setter();
  id v91 = v151;
  id v92 = [v151 secondaryLabelColor];
  UIButton.Configuration.baseForegroundColor.setter();
  id v93 = [v91 clearColor];
  id v94 = (void (*)(unsigned char *, void))UIButton.Configuration.background.modify();
  UIBackgroundConfiguration.backgroundColor.setter();
  v94(v156, 0);
  unint64_t v95 = v149;
  uint64_t v96 = v154;
  v143(v149, v90, v154);
  v142(v95, 0, 1, v96);
  UIButton.configuration.setter();
  id v97 = [v76 trailingAnchor];
  id v98 = [v29 leadingAnchor];
  id v99 = [v97 constraintGreaterThanOrEqualToAnchor:v98];

  uint64_t v100 = OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_unsupportedAlertButtonTrailingSpaceConstraint;
  uint64_t v101 = *(void **)&v1[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_unsupportedAlertButtonTrailingSpaceConstraint];
  *(void *)&v1[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_unsupportedAlertButtonTrailingSpaceConstraint] = v99;

  [*(id *)&v1[v100] setConstant:0.0];
  [*(id *)&v1[v100] setActive:1];
  [v76 addTarget:v1 action:"handleTapUnsupportedTriangleView:" forControlEvents:64];
  uint64_t v102 = *(char **)&v1[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_dividerLineView];
  [v1 addSubview:v102];
  id v103 = [v102 superview];
  if (v103)
  {
    id v104 = v103;
    [v102 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v105 = [v102 topAnchor];
    id v106 = [v104 topAnchor];
    id v107 = [v105 constraintEqualToAnchor:v106];

    [v107 setConstant:0.0];
    id v108 = v107;
    [v108 setActive:1];
  }
  if (qword_1007F73A0 != -1) {
    swift_once();
  }
  double v109 = *(double *)&qword_10083D9B0;
  id v110 = [v102 superview];
  if (v110)
  {
    id v111 = v110;
    [v102 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v112 = [v102 leadingAnchor];
    id v113 = [v111 leadingAnchor];
    id v114 = [v112 constraintEqualToAnchor:v113];

    [v114 setConstant:v109];
    id v115 = v114;
    [v115 setActive:1];
  }
  double v116 = *(double *)&qword_10083D9B0;
  id v117 = [v102 superview];
  if (v117)
  {
    uint64_t v118 = v117;
    [v102 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v119 = [v102 trailingAnchor];
    id v120 = [v118 trailingAnchor];
    id v121 = [v119 constraintEqualToAnchor:v120];

    [v121 setConstant:-v116];
    id v122 = v121;
    [v122 setActive:1];
  }
  [v102 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v123 = [v102 heightAnchor];
  id v124 = [v123 constraintEqualToConstant:1.0];

  [v124 setActive:1];
  uint64_t v125 = v152;
  if (qword_1007F7198 != -1) {
    swift_once();
  }
  [*(id *)&v102[OBJC_IVAR____TtC7Journal18JournalDividerView_dividerView] setBackgroundColor:qword_10083D760];
  sub_100010218((uint64_t *)&unk_1007FC0F0);
  uint64_t v126 = swift_allocObject();
  *(_OWORD *)(v126 + 16) = xmmword_1006D70D0;
  *(void *)(v126 + 56) = sub_10001B284(0, &qword_100809128);
  id v127 = v155;
  *(void *)(v126 + 32) = v155;
  uint64_t v128 = sub_10001B284(0, (unint64_t *)&unk_100809130);
  *(void *)(v126 + 88) = v128;
  *(void *)(v126 + 64) = v76;
  uint64_t v129 = sub_10001B284(0, &qword_10080C180);
  *(void *)(v126 + 96) = v57;
  *(void *)(v126 + 152) = v128;
  *(void *)(v126 + 120) = v129;
  *(void *)(v126 + 128) = v29;
  id v130 = v127;
  id v131 = v76;
  id v132 = v57;
  id v133 = v29;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 setAccessibilityElements:isa];

  if (qword_1007F6F58 != -1) {
    swift_once();
  }
  double v135 = *(double *)&qword_10080C078;
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v136 = [v1 heightAnchor];
  id v137 = [v136 constraintGreaterThanOrEqualToConstant:v135];

  [v137 setActive:1];
  id v138 = *(void (**)(char *, uint64_t))(v125 + 8);
  uint64_t v139 = v154;
  v138(v153, v154);
  return ((uint64_t (*)(char *, uint64_t))v138)(v150, v139);
}

id sub_1003E4104(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v21 - v9;
  *(void *)(v2 + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_entry) = a1;
  swift_retain();
  swift_release();
  id v11 = *(void **)(v2 + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_dateLabel);
  uint64_t v12 = a1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_displayDate;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v10, v12, v4);
  static Date.now.getter();
  sub_1002AB594(0, 0, (uint64_t)v7);
  double v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v7, v4);
  v13(v10, v4);
  NSString v14 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v11 setText:v14];

  sub_1003EA544();
  uint64_t v15 = *(void **)(v2 + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_dividerLineView);
  if (!sub_10018ACD8()
    || (v16 = *(void **)(a1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title), double v17 = 0.0, v16)
    && (id v18 = [v16 string],
        static String._unconditionallyBridgeFromObjectiveC(_:)(),
        v18,
        uint64_t v19 = String.count.getter(),
        swift_bridgeObjectRelease(),
        v19 >= 1))
  {
    double v17 = 1.0;
  }
  return [v15 setAlpha:v17];
}

uint64_t sub_1003E4374(char a1, char a2)
{
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  id v11 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v12 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(unsigned char *)(v13 + 24) = a1;
  *(unsigned char *)(v13 + 25) = a2;
  aBlock[4] = sub_1003EA694;
  aBlock[5] = v13;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007A98F0;
  NSString v14 = _Block_copy(aBlock);
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v14);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v17);
}

void sub_1003E462C(uint64_t a1, char a2, char a3)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (char *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_bookmarkView) alpha];
    if (a2)
    {
      if (v7 != 1.0)
      {
        uint64_t v8 = *(void **)&v6[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_bookmarkViewLeadingSpaceConstraint];
        if (v8) {
          [v8 setActive:1];
        }
        if (a3) {
          double v9 = 0.3;
        }
        else {
          double v9 = 0.0;
        }
        uint64_t v10 = self;
        uint64_t v11 = swift_allocObject();
        swift_unknownObjectWeakInit();
        id v22 = sub_1003EA6CC;
        uint64_t v23 = v11;
        aBlock = _NSConcreteStackBlock;
        uint64_t v19 = 1107296256;
        double v20 = sub_10017D530;
        uint64_t v21 = &unk_1007A9968;
        uint64_t v12 = _Block_copy(&aBlock);
        swift_release();
        [v10 animateWithDuration:4 delay:v12 options:0 animations:v9 completion:0.0];

        goto LABEL_16;
      }
    }
    else if (v7 != 0.0)
    {
      if (a3) {
        double v13 = 0.3;
      }
      else {
        double v13 = 0.0;
      }
      NSString v14 = self;
      uint64_t v15 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v22 = sub_1003EA6BC;
      uint64_t v23 = v15;
      aBlock = _NSConcreteStackBlock;
      uint64_t v19 = 1107296256;
      double v20 = sub_10017D530;
      uint64_t v21 = &unk_1007A9918;
      uint64_t v12 = _Block_copy(&aBlock);
      swift_release();
      uint64_t v16 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v22 = sub_1003EA6C4;
      uint64_t v23 = v16;
      aBlock = _NSConcreteStackBlock;
      uint64_t v19 = 1107296256;
      double v20 = sub_1001C7318;
      uint64_t v21 = &unk_1007A9940;
      uint64_t v17 = _Block_copy(&aBlock);
      swift_release();
      [v14 animateWithDuration:4 delay:v12 options:v17 animations:v13 completion:0.0];

      _Block_release(v17);
LABEL_16:
      _Block_release(v12);
      return;
    }
  }
}

void sub_1003E4944()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_bookmarkView);

    [v2 setAlpha:1.0];
  }
  swift_beginAccess();
  uint64_t v3 = swift_unknownObjectWeakLoadStrong();
  if (v3)
  {
    uint64_t v4 = (void *)v3;
    uint64_t v5 = *(void **)(v3 + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_unsupportedAlertButtonTrailingSpaceConstraint);
    id v6 = v5;

    if (v5)
    {
      swift_beginAccess();
      uint64_t v7 = swift_unknownObjectWeakLoadStrong();
      if (v7)
      {
        uint64_t v8 = (void *)v7;
        id v9 = *(id *)(v7 + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_bookmarkView);

        [v9 frame];
        CGFloat v11 = v10;
        CGFloat v13 = v12;
        CGFloat v15 = v14;
        CGFloat v17 = v16;

        v19.origin.x = v11;
        v19.origin.y = v13;
        v19.size.width = v15;
        v19.size.height = v17;
        double v18 = CGRectGetWidth(v19) * -2.0;
      }
      else
      {
        double v18 = -0.0;
      }
      [v6 setConstant:v18];
    }
  }
}

void sub_1003E4AB4()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(id *)(Strong + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_bookmarkView);

    [v2 setAlpha:0.0];
  }
}

void sub_1003E4B30()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    id v2 = *(void **)(Strong + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_bookmarkViewLeadingSpaceConstraint);
    id v3 = v2;

    if (v2)
    {
      [v3 setActive:0];
    }
  }
  swift_beginAccess();
  uint64_t v4 = swift_unknownObjectWeakLoadStrong();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    id v6 = *(void **)(v4 + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_unsupportedAlertButtonTrailingSpaceConstraint);
    id v7 = v6;

    if (v6)
    {
      [v7 setConstant:0.0];
    }
  }
}

void sub_1003E4C10(void *a1)
{
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_entry);
  if (v3) {
    char v4 = *(unsigned char *)(v3 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked);
  }
  else {
    char v4 = 0;
  }
  Class isa = sub_1003E4DBC(v4).super.super.isa;
  [a1 setMenu:isa];
}

UIMenu sub_1003E4DBC(char a1)
{
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_entry);
  if (!v2)
  {
    sub_10001B284(0, (unint64_t *)&unk_100809EE0);
    v6._countAndFlagsBits = 0;
    v6._object = (void *)0xE000000000000000;
    v125.value.super.Class isa = 0;
    v125.is_nil = 0;
    return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v6, (Swift::String_optional)0, v125, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)_swiftEmptyArrayStorage, children);
  }
  if (a1)
  {
    uint64_t v3 = qword_1007F7510;
    swift_retain();
    if (v3 != -1) {
      swift_once();
    }
    uint64_t v4 = qword_1007F7B50;
    swift_bridgeObjectRetain();
    if (v4 != -1) {
      swift_once();
    }
    uint64_t v5 = &qword_10083E838;
  }
  else
  {
    uint64_t v8 = qword_1007F7508;
    swift_retain();
    if (v8 != -1) {
      swift_once();
    }
    uint64_t v9 = qword_1007F7B40;
    swift_bridgeObjectRetain();
    if (v9 != -1) {
      swift_once();
    }
    uint64_t v5 = &qword_10083E828;
  }
  double v10 = (void *)*v5;
  sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
  uint64_t v11 = qword_1007F7560;
  id v12 = v10;
  if (v11 != -1) {
    swift_once();
  }
  uint64_t v13 = qword_1007F7BB8;
  swift_bridgeObjectRetain();
  if (v13 != -1) {
    swift_once();
  }
  double v14 = (void *)qword_10083E8A0;
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v15 = v14;
  double v16 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  swift_allocObject();
  swift_unknownObjectWeakInit();
  id v113 = v12;
  childrena._rawValue = 0;
  CGFloat v17 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  UIMenuElementSize v124 = (UIMenuElementSize)_swiftEmptyArrayStorage;
  signed int v18 = [*(id *)(v2 + 32) minimumSupportedAppVersion];
  if (qword_1007F6AA8 != -1) {
    swift_once();
  }
  CGRect v19 = &static Journaling.EntryViewModel.currentAppVersion;
  signed int v20 = static Journaling.EntryViewModel.currentAppVersion;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  id v114 = v16;
  uint64_t v21 = swift_allocObject();
  if (v20 >= v18)
  {
    *(_OWORD *)(v21 + 16) = xmmword_1006D6D10;
    *(void *)(v21 + 32) = v16;
    *(void *)(v21 + 40) = v17;
    v121[0] = v21;
    specialized Array._endMutation()();
    UIMenuElementSize v22 = v121[0];
    id v23 = v16;
  }
  else
  {
    *(_OWORD *)(v21 + 16) = xmmword_1006D6D00;
    *(void *)(v21 + 32) = v17;
    v121[0] = v21;
    specialized Array._endMutation()();
    UIMenuElementSize v22 = v121[0];
  }
  UIMenuElementSize v124 = v22;
  id v122 = &type metadata for JournalFeatureFlags;
  unint64_t v24 = sub_10005F364();
  unint64_t v123 = v24;
  LOBYTE(v121[0]) = 9;
  id v115 = v17;
  char v25 = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v121);
  if (v25)
  {
    if (qword_1007F7548 != -1) {
      swift_once();
    }
    uint64_t v26 = qword_1007F7B60;
    swift_bridgeObjectRetain();
    if (v26 != -1) {
      swift_once();
    }
    id v27 = (void *)qword_10083E848;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v28 = v27;
    childrena._rawValue = 0;
    id v29 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v124 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v124 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    CGRect v19 = &static Journaling.EntryViewModel.currentAppVersion;
  }
  id v122 = &type metadata for JournalFeatureFlags;
  unint64_t v123 = v24;
  LOBYTE(v121[0]) = 0;
  char v30 = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v121);
  if (v30)
  {
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1006D6D00;
    NSString v32 = String._bridgeToObjectiveC()();
    id v33 = self;
    id v34 = [v33 systemImageNamed:v32];

    swift_allocObject();
    swift_unknownObjectWeakInit();
    *(void *)(v31 + 32) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    v121[0] = v31;
    specialized Array._endMutation()();
    UIMenuElementSize v117 = v121[0];
    if (qword_1007F7B58 != -1) {
      swift_once();
    }
    id v35 = (id)qword_10083E840;
    swift_retain();
    id v36 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    if (qword_1007F7B60 != -1) {
      swift_once();
    }
    id v37 = (id)qword_10083E848;
    swift_retain();
    uint64_t v42 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    if ((unint64_t)v117 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v105 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      uint64_t v44 = v105 + 2;
      if (!__OFADD__(v105, 2))
      {
LABEL_38:
        sub_1005C88B0(v44, 1, v38, v39, v40, v41);
        specialized Array._endMutation()();
        id v36 = v36;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          goto LABEL_39;
        }
        goto LABEL_83;
      }
    }
    else
    {
      uint64_t v43 = *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v44 = v43 + 2;
      if (!__OFADD__(v43, 2)) {
        goto LABEL_38;
      }
    }
    __break(1u);
LABEL_83:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_39:
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v45 = v42;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    unint64_t v46 = *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v46 >= *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    __int16 v47 = _sSo8NSBundleC7JournalE15appVersionAsInts5Int16VyFZ_0();
    int v48 = v47 + 1000;
    if (v48 == (__int16)(v47 + 1000))
    {
      LOWORD(v46) = v47;
      NSString v49 = String._bridgeToObjectiveC()();
      id v50 = [v33 systemImageNamed:v49];

      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = v2;
      *(_WORD *)(v51 + 24) = v48;
      swift_retain();
      CGRect v19 = (__int16 *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      NSString v52 = String._bridgeToObjectiveC()();
      id v53 = [v33 systemImageNamed:v52];

      uint64_t v54 = swift_allocObject();
      *(void *)(v54 + 16) = v2;
      *(_WORD *)(v54 + 24) = v48;
      swift_retain();
      id v36 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      NSString v55 = String._bridgeToObjectiveC()();
      id v56 = [v33 systemImageNamed:v55];

      uint64_t v57 = swift_allocObject();
      *(void *)(v57 + 16) = v2;
      *(_WORD *)(v57 + 24) = v48;
      swift_retain();
      id v45 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      if (!((unint64_t)v117 >> 62))
      {
        uint64_t v62 = *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10);
        uint64_t v63 = v62 + 3;
        if (!__OFADD__(v62, 3)) {
          goto LABEL_44;
        }
        goto LABEL_87;
      }
    }
    else
    {
      __break(1u);
    }
    swift_bridgeObjectRetain();
    uint64_t v106 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    uint64_t v63 = v106 + 3;
    if (!__OFADD__(v106, 3))
    {
LABEL_44:
      sub_1005C88B0(v63, 1, v58, v59, v60, v61);
      specialized Array._endMutation()();
      CGRect v19 = v19;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) < *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        goto LABEL_45;
      }
      goto LABEL_88;
    }
LABEL_87:
    __break(1u);
LABEL_88:
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
LABEL_45:
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v64 = v36;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    id v65 = v45;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    id v66 = (void *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
    swift_beginAccess();
    if (*v66 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v107 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v107) {
        goto LABEL_51;
      }
    }
    else if (*(void *)((*v66 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
LABEL_51:
      NSString v67 = String._bridgeToObjectiveC()();
      id v68 = [v33 systemImageNamed:v67];

      uint64_t v69 = swift_allocObject();
      *(void *)(v69 + 16) = v2;
      *(_WORD *)(v69 + 24) = v46;
      *(_WORD *)(v69 + 26) = v48;
      swift_retain();
      id v70 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    NSString v71 = String._bridgeToObjectiveC()();
    id v72 = [v33 systemImageNamed:v71];

    swift_retain();
    UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    if (*v66 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v73 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v73 = *(void *)((*v66 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v73)
    {
      NSString v74 = String._bridgeToObjectiveC()();
      id v75 = [v33 systemImageNamed:v74];

      swift_retain();
      id v76 = (id)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v117 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    NSString v77 = String._bridgeToObjectiveC()();
    uint64_t v78 = (objc_class *)[v33 systemImageNamed:v77];

    if ((unint64_t)v117 >> 62)
    {
      sub_10001B284(0, (unint64_t *)&unk_100807680);
      swift_bridgeObjectRetain();
      UIMenuElementSize v79 = _bridgeCocoaArray<A>(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10001B284(0, (unint64_t *)&unk_100807680);
      UIMenuElementSize v79 = v117;
    }
    swift_bridgeObjectRelease();
    sub_10001B284(0, (unint64_t *)&unk_100809EE0);
    v80._countAndFlagsBits = 0x6C616E7265746E49;
    v80._object = (void *)0xE800000000000000;
    v126.value.super.Class isa = v78;
    v126.is_nil = 0;
    id v81 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v80, (Swift::String_optional)0, v126, 0, 0xFFFFFFFFFFFFFFFFLL, v79, 0).super.super.isa;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v124 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v124 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
  }
  sub_10001B284(0, (unint64_t *)&unk_100809EE0);
  v82._countAndFlagsBits = 0;
  v82._object = (void *)0xE000000000000000;
  v127.value.super.Class isa = 0;
  v127.is_nil = 0;
  v83.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v82, (Swift::String_optional)0, v127, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, v124, childrena).super.super.isa;
  if (static Journaling.EntryViewModel.currentAppVersion >= (int)[*(id *)(v2 + 32) minimumSupportedAppVersion])
  {
    if (qword_1007F7520 != -1) {
      swift_once();
    }
    uint64_t v88 = qword_1007F7BC0;
    swift_bridgeObjectRetain();
    if (v88 != -1) {
      swift_once();
    }
    id v89 = (void *)qword_10083E8A8;
    swift_allocObject();
    swift_unknownObjectWeakInit();
    id v90 = v89;
    id v91 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    unint64_t v92 = *(void *)(v116 + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_optionalActions);
    if (v92 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v93 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v93 = *(void *)((v92 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    if (v93 < 1)
    {
      sub_100010218((uint64_t *)&unk_1007FA1C0);
      uint64_t v101 = swift_allocObject();
      *(_OWORD *)(v101 + 16) = xmmword_1006D6D10;
      *(UIMenu *)(v101 + 32) = v83;
      *(void *)(v101 + 40) = v91;
      UIMenuElementSize v120 = v101;
      specialized Array._endMutation()();
      uint64_t v102 = v83.super.super.isa;
      id v103 = v91;
      v104._countAndFlagsBits = 0;
      v104._object = (void *)0xE000000000000000;
      v131.value.super.Class isa = 0;
      v131.is_nil = 0;
      v87.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v104, (Swift::String_optional)0, v131, 0, 0xFFFFFFFFFFFFFFFFLL, v120, (Swift::OpaquePointer)2).super.super.isa;
    }
    else
    {
      UIMenuElementSize preferredElementSize = swift_bridgeObjectRetain();
      v94._countAndFlagsBits = 0;
      v94._object = (void *)0xE000000000000000;
      v129.value.super.Class isa = 0;
      v129.is_nil = 0;
      Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v94, (Swift::String_optional)0, v129, (UIMenuIdentifier_optional)1, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, (Swift::OpaquePointer)2).super.super.isa;
      sub_100010218((uint64_t *)&unk_1007FA1C0);
      uint64_t v96 = swift_allocObject();
      *(_OWORD *)(v96 + 16) = xmmword_1006D6D20;
      *(void *)(v96 + 32) = isa;
      *(UIMenu *)(v96 + 40) = v83;
      *(void *)(v96 + 48) = v91;
      UIMenuElementSize v119 = v96;
      specialized Array._endMutation()();
      id v97 = v83.super.super.isa;
      id v98 = isa;
      id v99 = v91;
      v100._countAndFlagsBits = 0;
      v100._object = (void *)0xE000000000000000;
      v130.value.super.Class isa = 0;
      v130.is_nil = 0;
      v87.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v100, (Swift::String_optional)0, v130, 0, 0xFFFFFFFFFFFFFFFFLL, v119, childrenc).super.super.isa;
    }
    swift_release();
  }
  else
  {
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v84 = swift_allocObject();
    *(_OWORD *)(v84 + 16) = xmmword_1006D6D00;
    *(UIMenu *)(v84 + 32) = v83;
    UIMenuElementSize v118 = v84;
    specialized Array._endMutation()();
    uint64_t v85 = v83.super.super.isa;
    v86._countAndFlagsBits = 0;
    v86._object = (void *)0xE000000000000000;
    v128.value.super.Class isa = 0;
    v128.is_nil = 0;
    v87.super.super.Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v86, (Swift::String_optional)0, v128, 0, 0xFFFFFFFFFFFFFFFFLL, v118, childrenb).super.super.isa;

    swift_release();
  }

  return v87;
}

void sub_1003E6390()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    if (*(void *)(Strong + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_entry)
      && (uint64_t v2 = Strong + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_actionHandler,
          swift_unknownObjectWeakLoadStrong()))
    {
      uint64_t v3 = *(void *)(v2 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 16);
      uint64_t v6 = swift_retain();
      v5(v6, 1, ObjectType, v3);
      swift_release();

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_1003E6470()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = Strong;
    uint64_t v5 = *(void *)&Strong[OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_entry];
    if (v5)
    {
      char v6 = *(unsigned char *)(v5 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked);
      uint64_t v7 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 1, 1, v7);
      type metadata accessor for MainActor();
      swift_retain_n();
      uint64_t v8 = static MainActor.shared.getter();
      uint64_t v9 = (void *)swift_allocObject();
      v9[2] = v8;
      v9[3] = &protocol witness table for MainActor;
      v9[4] = v5;
      sub_100328A60((uint64_t)v2, (uint64_t)&unk_10080C178, (uint64_t)v9);
      swift_release();
      sub_1003E4374((v6 & 1) == 0, 1);
      sub_1003EA544();

      swift_release();
    }
    else
    {
    }
  }
}

uint64_t sub_1003E6610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  return _swift_task_switch(sub_1003E668C, 0, 0);
}

uint64_t sub_1003E668C()
{
  sub_100584CA4((*(unsigned char *)(*(void *)(v0 + 16) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked) & 1) == 0);
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA48 + dword_10080CA48);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 40) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003E6754;
  return v3();
}

uint64_t sub_1003E6754()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100193204, v1, v0);
}

void sub_1003E6890()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    if (*(void *)(Strong + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_entry)
      && (uint64_t v2 = Strong + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_actionHandler,
          swift_unknownObjectWeakLoadStrong()))
    {
      uint64_t v3 = *(void *)(v2 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
      uint64_t v6 = swift_retain();
      v5(v6, ObjectType, v3);

      swift_release();
      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

void sub_1003E696C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return;
  }
  uint64_t v1 = (void *)Strong;
  uint64_t v2 = *(void *)(Strong + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_entry);
  if (!v2)
  {
    id v4 = (id)Strong;
    goto LABEL_17;
  }
  uint64_t v3 = self;
  swift_retain();
  id v4 = [v3 sharedApplication];
  sub_10031F2EC();
  if (!v5)
  {
LABEL_14:

    swift_release();
    goto LABEL_17;
  }
  id v6 = v5;
  while (1)
  {
    id v8 = [v6 presentedViewController];
    if (v8)
    {
      do
      {
        uint64_t v9 = v8;

        id v8 = [v9 presentedViewController];
        id v6 = v9;
      }
      while (v8);
    }
    else
    {
      uint64_t v9 = v6;
    }
    self;
    uint64_t v10 = (void *)swift_dynamicCastObjCClass();
    if (!v10) {
      break;
    }
    uint64_t v7 = &selRef_topViewController;
LABEL_6:
    id v6 = [v10 *v7];

    if (!v6) {
      goto LABEL_14;
    }
  }
  self;
  uint64_t v10 = (void *)swift_dynamicCastObjCClass();
  if (v10)
  {
    uint64_t v7 = &selRef_selectedViewController;
    goto LABEL_6;
  }

  uint64_t v11 = (objc_class *)type metadata accessor for EntryDebugInfoVC();
  id v12 = (char *)objc_allocWithZone(v11);
  *(void *)&v12[OBJC_IVAR____TtC7Journal16EntryDebugInfoVC_entry] = v2;
  v14.id receiver = v12;
  v14.Class super_class = v11;
  swift_retain();
  id v13 = [super initWithNibName:0 bundle:0];
  id v4 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v13];

  [v9 presentViewController:v4 animated:1 completion:0];
  swift_release();

LABEL_17:
}

uint64_t sub_1003E6B9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  *(_WORD *)(v5 + 148) = a5;
  *(void *)(v5 + 16) = a4;
  uint64_t v6 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v5 + 24) = v6;
  *(void *)(v5 + 32) = *(void *)(v6 - 8);
  *(void *)(v5 + 40) = swift_task_alloc();
  *(void *)(v5 + 48) = type metadata accessor for MainActor();
  *(void *)(v5 + 56) = static MainActor.shared.getter();
  return _swift_task_switch(sub_1003E6C78, 0, 0);
}

uint64_t sub_1003E6C78()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  __int16 v3 = *(_WORD *)(v0 + 148);
  uint64_t v4 = *(void *)(v0 + 16);
  *(void *)(v0 + 64) = *(void *)(v4 + 24);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 72) = v5;
  *(void *)(v5 + 16) = v4;
  *(_WORD *)(v5 + 24) = v3;
  *(_DWORD *)(v0 + 144) = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
  uint64_t v6 = *(void (**)(uint64_t))(v2 + 104);
  *(void *)(v0 + 80) = v6;
  *(void *)(v0 + 88) = (v2 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v6(v1);
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1003E6DC0;
  uint64_t v8 = *(void *)(v0 + 40);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v7, v8, sub_1003EA71C, v5, (char *)&type metadata for () + 8);
}

uint64_t sub_1003E6DC0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 40);
  uint64_t v3 = *(void *)(*v0 + 32);
  uint64_t v4 = *(void *)(*v0 + 24);
  swift_task_dealloc();
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 104) = v5;
  *(void *)(v1 + 112) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v4);
  return _swift_task_switch(sub_1003E6F48, 0, 0);
}

uint64_t sub_1003E6F48()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 80);
  uint64_t v2 = *(unsigned int *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 120) = v6;
  *(void *)(v6 + 16) = v5;
  *(unsigned char *)(v6 + 24) = 0;
  v1(v3, v2, v4);
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1003E706C;
  uint64_t v8 = *(void *)(v0 + 40);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v7, v8, sub_1003EA734, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_1003E706C()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 104);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();
  v1(v2, v3);
  return _swift_task_switch(sub_1003E71F0, 0, 0);
}

uint64_t sub_1003E71F0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003E7280;
  return sub_100580C88();
}

uint64_t sub_1003E7280()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1000251A8, v1, v0);
}

uint64_t sub_1003E73BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  *(_WORD *)(v5 + 148) = a5;
  *(void *)(v5 + 16) = a4;
  uint64_t v6 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v5 + 24) = v6;
  *(void *)(v5 + 32) = *(void *)(v6 - 8);
  *(void *)(v5 + 40) = swift_task_alloc();
  *(void *)(v5 + 48) = type metadata accessor for MainActor();
  *(void *)(v5 + 56) = static MainActor.shared.getter();
  return _swift_task_switch(sub_1003E7498, 0, 0);
}

uint64_t sub_1003E7498()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  __int16 v3 = *(_WORD *)(v0 + 148);
  uint64_t v4 = *(void *)(v0 + 16);
  *(void *)(v0 + 64) = *(void *)(v4 + 24);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 72) = v5;
  *(void *)(v5 + 16) = v4;
  *(_WORD *)(v5 + 24) = v3;
  *(_DWORD *)(v0 + 144) = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
  uint64_t v6 = *(void (**)(uint64_t))(v2 + 104);
  *(void *)(v0 + 80) = v6;
  *(void *)(v0 + 88) = (v2 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v6(v1);
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1003E75E0;
  uint64_t v8 = *(void *)(v0 + 40);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v7, v8, sub_1003EA71C, v5, (char *)&type metadata for () + 8);
}

uint64_t sub_1003E75E0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 40);
  uint64_t v3 = *(void *)(*v0 + 32);
  uint64_t v4 = *(void *)(*v0 + 24);
  swift_task_dealloc();
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 104) = v5;
  *(void *)(v1 + 112) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v4);
  return _swift_task_switch(sub_1003E7768, 0, 0);
}

uint64_t sub_1003E7768()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 80);
  uint64_t v2 = *(unsigned int *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 120) = v6;
  *(void *)(v6 + 16) = v5;
  *(unsigned char *)(v6 + 24) = 1;
  v1(v3, v2, v4);
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1003E7890;
  uint64_t v8 = *(void *)(v0 + 40);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v7, v8, sub_1003EA734, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_1003E7890()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 104);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();
  v1(v2, v3);
  return _swift_task_switch(sub_1003E7A14, 0, 0);
}

uint64_t sub_1003E7A14()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003E7AA4;
  return sub_100580C88();
}

uint64_t sub_1003E7AA4()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100026AFC, v1, v0);
}

uint64_t sub_1003E7BE0(uint64_t a1, uint64_t a2, __int16 a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v12 = static MainActor.shared.getter();
  uint64_t v13 = swift_allocObject();
  *(void *)(v13 + 16) = v12;
  *(void *)(v13 + 24) = &protocol witness table for MainActor;
  *(void *)(v13 + 32) = a2;
  *(_WORD *)(v13 + 40) = a3;
  sub_100328A60((uint64_t)v10, a5, v13);
  return swift_release();
}

uint64_t sub_1003E7CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5)
{
  *(_WORD *)(v5 + 148) = a5;
  *(void *)(v5 + 16) = a4;
  uint64_t v6 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v5 + 24) = v6;
  *(void *)(v5 + 32) = *(void *)(v6 - 8);
  *(void *)(v5 + 40) = swift_task_alloc();
  *(void *)(v5 + 48) = type metadata accessor for MainActor();
  *(void *)(v5 + 56) = static MainActor.shared.getter();
  return _swift_task_switch(sub_1003E7DD8, 0, 0);
}

uint64_t sub_1003E7DD8()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  __int16 v3 = *(_WORD *)(v0 + 148);
  uint64_t v4 = *(void *)(v0 + 16);
  *(void *)(v0 + 64) = *(void *)(v4 + 24);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 72) = v5;
  *(void *)(v5 + 16) = v4;
  *(_WORD *)(v5 + 24) = v3;
  *(_DWORD *)(v0 + 144) = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
  uint64_t v6 = *(void (**)(uint64_t))(v2 + 104);
  *(void *)(v0 + 80) = v6;
  *(void *)(v0 + 88) = (v2 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v6(v1);
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 96) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1003E7F20;
  uint64_t v8 = *(void *)(v0 + 40);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v7, v8, sub_1003EA71C, v5, (char *)&type metadata for () + 8);
}

uint64_t sub_1003E7F20()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 40);
  uint64_t v3 = *(void *)(*v0 + 32);
  uint64_t v4 = *(void *)(*v0 + 24);
  swift_task_dealloc();
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 104) = v5;
  *(void *)(v1 + 112) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v4);
  return _swift_task_switch(sub_1003E80A8, 0, 0);
}

uint64_t sub_1003E80A8()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 80);
  uint64_t v2 = *(unsigned int *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 120) = v6;
  *(void *)(v6 + 16) = v5;
  *(unsigned char *)(v6 + 24) = 2;
  v1(v3, v2, v4);
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1003E7890;
  uint64_t v8 = *(void *)(v0 + 40);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v7, v8, sub_1003EA260, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_1003E81D0(uint64_t a1, uint64_t a2, __int16 a3, __int16 a4)
{
  uint64_t v7 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v11 = static MainActor.shared.getter();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = &protocol witness table for MainActor;
  *(void *)(v12 + 32) = a2;
  *(_WORD *)(v12 + 40) = a3;
  *(_WORD *)(v12 + 42) = a4;
  sub_100328A60((uint64_t)v9, (uint64_t)&unk_10080C138, v12);
  return swift_release();
}

uint64_t sub_1003E8300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, __int16 a5, __int16 a6)
{
  *(_WORD *)(v6 + 146) = a6;
  *(_WORD *)(v6 + 144) = a5;
  *(void *)(v6 + 40) = a4;
  uint64_t v7 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v6 + 48) = v7;
  *(void *)(v6 + 56) = *(void *)(v7 - 8);
  *(void *)(v6 + 64) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v6 + 72) = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 80) = v9;
  *(void *)(v6 + 88) = v8;
  return _swift_task_switch(sub_1003E83FC, v9, v8);
}

uint64_t sub_1003E83FC()
{
  uint64_t v1 = (unint64_t *)(*(void *)(v0 + 40) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  unint64_t v2 = *v1;
  if (v2 >> 62)
  {
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
    {
LABEL_3:
      uint64_t v4 = 0;
      do
      {
        if ((v2 & 0xC000000000000001) != 0) {
          uint64_t v5 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          uint64_t v5 = (char *)*(id *)(v2 + 8 * v4 + 32);
        }
        uint64_t v6 = v5;
        *(void *)(v0 + 96) = v5;
        uint64_t v7 = v4 + 1;
        if (__OFADD__(v4, 1))
        {
          __break(1u);
          goto LABEL_16;
        }
        uint64_t v8 = *(void **)&v5[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
        *(void *)(v0 + 104) = v8;
        if (v8)
        {
          int v9 = *(__int16 *)(v0 + 144);
          id v10 = v8;
          if ((int)[v10 minimumSupportedAppVersion] <= v9)
          {
            swift_bridgeObjectRelease();
            return _swift_task_switch(sub_1003E85D8, 0, 0);
          }
        }
        ++v4;
      }
      while (v7 != v3);
    }
  }
  swift_bridgeObjectRelease();
  swift_release();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1003E85D8()
{
  uint64_t v1 = *(char **)(v0 + 96);
  unint64_t v2 = *(void **)&v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_context];
  *(void *)(v0 + 112) = v2;
  if (v2)
  {
    uint64_t v4 = *(void *)(v0 + 56);
    uint64_t v3 = *(void *)(v0 + 64);
    uint64_t v5 = *(void *)(v0 + 48);
    __int16 v6 = *(_WORD *)(v0 + 146);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v1;
    *(_WORD *)(v7 + 24) = v6;
    uint64_t v8 = swift_allocObject();
    *(void *)(v0 + 120) = v8;
    *(void *)(v8 + 16) = sub_1003EA6D4;
    *(void *)(v8 + 24) = v7;
    (*(void (**)(uint64_t, void, uint64_t))(v4 + 104))(v3, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v5);
    v2;
    int v9 = v1;
    id v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v10;
    uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC460);
    *id v10 = v0;
    v10[1] = sub_1003E87F8;
    uint64_t v12 = *(void *)(v0 + 64);
    return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 148, v12, sub_1003EA74C, v8, v11);
  }
  else
  {
    uint64_t v15 = (uint64_t (*)(void))((char *)&dword_10080CA48 + dword_10080CA48);
    uint64_t v13 = (void *)swift_task_alloc();
    *(void *)(v0 + 136) = v13;
    *uint64_t v13 = v0;
    v13[1] = sub_1003E8A30;
    return v15();
  }
}

uint64_t sub_1003E87F8()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 112);
  uint64_t v2 = *(void *)(*(void *)v0 + 64);
  uint64_t v3 = *(void *)(*(void *)v0 + 56);
  uint64_t v4 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_1003E898C, 0, 0);
}

uint64_t sub_1003E898C()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA48 + dword_10080CA48);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1003E8A30;
  return v3();
}

uint64_t sub_1003E8A30()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_1003E8B50, v3, v2);
}

uint64_t sub_1003E8B50()
{
  uint64_t v1 = (void *)v0[12];
  uint64_t v2 = (void *)v0[13];
  swift_release();

  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_1003E8BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  v4[6] = type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  return _swift_task_switch(sub_1003E8C9C, 0, 0);
}

uint64_t sub_1003E8C9C()
{
  uint64_t v2 = v0[4];
  uint64_t v1 = v0[5];
  uint64_t v4 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = swift_allocObject();
  v0[8] = v5;
  *(void *)(v5 + 16) = v4;
  *(_WORD *)(v5 + 24) = 0;
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v3);
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[9] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1003E8DC4;
  uint64_t v7 = v0[5];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v6, v7, sub_1003EA0A0, v5, (char *)&type metadata for () + 8);
}

uint64_t sub_1003E8DC4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 32);
  uint64_t v3 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_10005BF00, 0, 0);
}

uint64_t sub_1003E8F38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_allocObject();
  v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = a2;
  sub_100328A60((uint64_t)v8, a4, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_1003E904C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  uint64_t v5 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[9] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[10] = v7;
  v4[11] = v6;
  return _swift_task_switch(sub_1003E9140, v7, v6);
}

uint64_t sub_1003E9140()
{
  uint64_t v1 = (unint64_t *)(*(void *)(v0 + 40) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  unint64_t v2 = *v1;
  *(void *)(v0 + 96) = *v1;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v3 = v4;
    *(void *)(v0 + 104) = v4;
    if (v4) {
      goto LABEL_3;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    CGFloat v17 = (uint64_t (__cdecl *)())((char *)&dword_10080CA48 + dword_10080CA48);
    uint64_t v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v15;
    void *v15 = v0;
    v15[1] = sub_1003E93A0;
    return v17();
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v4 = swift_bridgeObjectRetain();
  *(void *)(v0 + 104) = v3;
  if (!v3) {
    goto LABEL_18;
  }
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = 0;
    *(_DWORD *)(v0 + 160) = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
    while (1)
    {
      *(void *)(v0 + 112) = v7;
      uint64_t v8 = *(void *)(v0 + 96);
      uint64_t v9 = (v8 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : (char *)*(id *)(v8 + 8 * v7 + 32);
      uint64_t v10 = v9;
      *(void *)(v0 + 120) = v9;
      uint64_t v11 = *(void **)&v9[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
      if (!v11) {
        break;
      }
      id v12 = v11;
      signed int v13 = [v12 minimumSupportedAppVersion];
      if (qword_1007F6AA8 != -1) {
        swift_once();
      }
      signed int v14 = static Journaling.EntryViewModel.currentAppVersion;

      if (v14 < v13) {
        break;
      }

      uint64_t v7 = *(void *)(v0 + 112) + 1;
      if (v7 == *(void *)(v0 + 104)) {
        goto LABEL_18;
      }
    }
    uint64_t v4 = (uint64_t)sub_1003E9528;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
  }
  return _swift_task_switch(v4, v5, v6);
}

uint64_t sub_1003E93A0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_1003E94C0, v3, v2);
}

uint64_t sub_1003E94C0()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003E9528()
{
  uint64_t v1 = *(char **)(v0 + 120);
  uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_context];
  *(void *)(v0 + 136) = v2;
  if (v2)
  {
    uint64_t v3 = *(unsigned int *)(v0 + 160);
    uint64_t v5 = *(void *)(v0 + 56);
    uint64_t v4 = *(void *)(v0 + 64);
    uint64_t v6 = *(void *)(v0 + 48);
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v1;
    *(_WORD *)(v7 + 24) = 0;
    uint64_t v8 = swift_allocObject();
    *(void *)(v0 + 144) = v8;
    *(void *)(v8 + 16) = sub_1003E9F60;
    *(void *)(v8 + 24) = v7;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 104))(v4, v3, v6);
    v2;
    uint64_t v9 = v1;
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v10;
    uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC460);
    *uint64_t v10 = v0;
    v10[1] = sub_1003E96FC;
    uint64_t v12 = *(void *)(v0 + 64);
    return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 164, v12, sub_1003E9FA4, v8, v11);
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 80);
    uint64_t v14 = *(void *)(v0 + 88);
    return _swift_task_switch(sub_1003E98A8, v13, v14);
  }
}

uint64_t sub_1003E96FC()
{
  uint64_t v1 = *(void **)(*(void *)v0 + 136);
  uint64_t v2 = *(void *)(*(void *)v0 + 64);
  uint64_t v3 = *(void *)(*(void *)v0 + 56);
  uint64_t v4 = *(void *)(*(void *)v0 + 48);
  swift_task_dealloc();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_1003E9890, 0, 0);
}

uint64_t sub_1003E9890()
{
  return _swift_task_switch(sub_1003E98A8, *(void *)(v0 + 80), *(void *)(v0 + 88));
}

uint64_t sub_1003E98A8()
{
  uint64_t v1 = *(void *)(v0 + 112) + 1;
  if (v1 == *(void *)(v0 + 104))
  {
LABEL_2:
    swift_bridgeObjectRelease();
    uint64_t v11 = (uint64_t (__cdecl *)())((char *)&dword_10080CA48 + dword_10080CA48);
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1003E93A0;
    return v11();
  }
  else
  {
    while (1)
    {
      *(void *)(v0 + 112) = v1;
      uint64_t v4 = *(void *)(v0 + 96);
      uint64_t v5 = (v4 & 0xC000000000000001) != 0
         ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : (char *)*(id *)(v4 + 8 * v1 + 32);
      uint64_t v6 = v5;
      *(void *)(v0 + 120) = v5;
      uint64_t v7 = *(void **)&v5[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
      if (!v7) {
        break;
      }
      id v8 = v7;
      signed int v9 = [v8 minimumSupportedAppVersion];
      if (qword_1007F6AA8 != -1) {
        swift_once();
      }
      signed int v10 = static Journaling.EntryViewModel.currentAppVersion;

      if (v10 < v9) {
        break;
      }

      uint64_t v1 = *(void *)(v0 + 112) + 1;
      if (v1 == *(void *)(v0 + 104)) {
        goto LABEL_2;
      }
    }
    return _swift_task_switch(sub_1003E9528, 0, 0);
  }
}

void sub_1003E9A90()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    if (*(void *)(Strong + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_entry)
      && (uint64_t v2 = Strong + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_actionHandler,
          swift_unknownObjectWeakLoadStrong()))
    {
      uint64_t v3 = *(void *)(v2 + 8);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 8);
      uint64_t v6 = swift_retain();
      v5(v6, ObjectType, v3);
      swift_release();

      swift_unknownObjectRelease();
    }
    else
    {
    }
  }
}

id sub_1003E9B6C()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for JournalEntryCellChinView();
  [super dealloc];
}

uint64_t type metadata accessor for JournalEntryCellChinView()
{
  return self;
}

uint64_t sub_1003E9C90()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1003E9CC8()
{
}

void sub_1003E9CD0()
{
}

void sub_1003E9CD8()
{
}

void sub_1003E9CE0()
{
}

void sub_1003E9CE8(uint64_t a1)
{
  sub_10051CEC4(a1, v1);
}

void sub_1003E9CF0(uint64_t a1)
{
  sub_10051D534(a1, v1);
}

uint64_t sub_1003E9CF8(uint64_t a1)
{
  return sub_1003E7BE0(a1, *(void *)(v1 + 16), *(_WORD *)(v1 + 24), (uint64_t)&unk_1007A9838, (uint64_t)&unk_10080C168);
}

uint64_t sub_1003E9D34(uint64_t a1)
{
  return sub_1003E7BE0(a1, *(void *)(v1 + 16), *(_WORD *)(v1 + 24), (uint64_t)&unk_1007A97C0, (uint64_t)&unk_10080C158);
}

uint64_t sub_1003E9D70(uint64_t a1)
{
  return sub_1003E7BE0(a1, *(void *)(v1 + 16), *(_WORD *)(v1 + 24), (uint64_t)&unk_1007A9748, (uint64_t)&unk_10080C148);
}

uint64_t sub_1003E9DAC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003E9DE4(uint64_t a1)
{
  return sub_1003E81D0(a1, *(void *)(v1 + 16), *(_WORD *)(v1 + 24), *(_WORD *)(v1 + 26));
}

uint64_t sub_1003E9DF4(uint64_t a1)
{
  return sub_1003E8F38(a1, v1, (uint64_t)&unk_1007A9680, (uint64_t)&unk_10080C128);
}

uint64_t sub_1003E9E2C(uint64_t a1)
{
  return sub_1003E8F38(a1, v1, (uint64_t)&unk_1007A9608, (uint64_t)&unk_10080C118);
}

void sub_1003E9E64()
{
}

uint64_t sub_1003E9E6C()
{
  return sub_10025F9CC();
}

uint64_t sub_1003E9E74(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_1003E904C(a1, v4, v5, v6);
}

uint64_t sub_1003E9F28()
{
  return swift_deallocObject();
}

id sub_1003E9F60()
{
  return sub_100464E04(*(void *)(v0 + 16), *(_WORD *)(v0 + 24));
}

uint64_t sub_1003E9F6C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003E9FA4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = 0;
  return result;
}

uint64_t sub_1003E9FE4()
{
  return sub_10025F9CC();
}

uint64_t sub_1003E9FEC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_1003E8BC4(a1, v4, v5, v6);
}

id sub_1003EA0A0()
{
  return sub_1001A26F4(*(void *)(v0 + 16), *(_WORD *)(v0 + 24));
}

uint64_t sub_1003EA0C0()
{
  return sub_10025F9CC();
}

uint64_t sub_1003EA0C8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  __int16 v7 = *(_WORD *)(v1 + 42);
  __int16 v8 = *(_WORD *)(v1 + 40);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  *uint64_t v9 = v2;
  v9[1] = sub_100052588;
  return sub_1003E8300(a1, v4, v5, v6, v8, v7);
}

uint64_t sub_1003EA194()
{
  return sub_10025F9CC();
}

uint64_t sub_1003EA19C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  __int16 v7 = *(_WORD *)(v1 + 40);
  __int16 v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100052588;
  return sub_1003E7CFC(a1, v4, v5, v6, v7);
}

id sub_1003EA260()
{
  return sub_1001A2748(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1003EA280()
{
  return sub_10025F9CC();
}

uint64_t sub_1003EA288(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  __int16 v7 = *(_WORD *)(v1 + 40);
  __int16 v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100052588;
  return sub_1003E73BC(a1, v4, v5, v6, v7);
}

uint64_t sub_1003EA34C()
{
  return sub_10025F9CC();
}

uint64_t sub_1003EA354(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  __int16 v7 = *(_WORD *)(v1 + 40);
  __int16 v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_100052588;
  return sub_1003E6B9C(a1, v4, v5, v6, v7);
}

uint64_t sub_1003EA418()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003EA450()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1003EA488()
{
  return sub_10025F9CC();
}

uint64_t sub_1003EA490(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  __int16 v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *__int16 v7 = v2;
  v7[1] = sub_10002C194;
  return sub_1003E6610(a1, v4, v5, v6);
}

id sub_1003EA544()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_overflowButton);
  [v1 setHidden:0];
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_unsupportedAlertButton);
  id result = [v2 setHidden:1];
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_entry);
  if (v4)
  {
    uint64_t v5 = *(void **)(v4 + 32);
    swift_retain();
    signed int v6 = [v5 minimumSupportedAppVersion];
    if (qword_1007F6AA8 != -1) {
      swift_once();
    }
    if (static Journaling.EntryViewModel.currentAppVersion < v6)
    {
      if ((unsigned __int16)((unsigned __int16)[*(id *)(v4 + 32) minimumSupportedAppVersionMode] - 1) >= 2u)
      {
        [v1 setHidden:1];
        __int16 v7 = v2;
        uint64_t v8 = 1;
      }
      else
      {
        __int16 v7 = v2;
        uint64_t v8 = 0;
      }
      [v7 setHidden:v8];
    }
    return (id)swift_release();
  }
  return result;
}

void sub_1003EA694()
{
  sub_1003E462C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(unsigned char *)(v0 + 25));
}

uint64_t sub_1003EA6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003EA6B4()
{
  return swift_release();
}

void sub_1003EA6BC()
{
}

void sub_1003EA6C4()
{
}

void sub_1003EA6CC()
{
}

id sub_1003EA71C()
{
  return sub_1003EA0A0();
}

id sub_1003EA734()
{
  return sub_1003EA260();
}

uint64_t sub_1003EA74C@<X0>(unsigned char *a1@<X8>)
{
  return sub_1003E9FA4(a1);
}

void sub_1003EA764(char a1)
{
  if (a1)
  {
    if (qword_1007F7B50 != -1) {
      swift_once();
    }
    uint64_t v3 = &qword_10083E838;
  }
  else
  {
    if (qword_1007F7B40 != -1) {
      swift_once();
    }
    uint64_t v3 = &qword_10083E828;
  }
  uint64_t v4 = (void *)*v3;
  uint64_t v5 = OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_image;
  signed int v6 = *(void **)&v1[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_image];
  *(void *)&v1[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_image] = v4;
  id v7 = v4;

  [*(id *)&v1[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_imageView] setImage:*(void *)&v1[v5]];
  if ((a1 & 1) == 0)
  {
    if (qword_1007F79A8 == -1) {
      goto LABEL_12;
    }
    goto LABEL_15;
  }
  if (qword_1007F7AE8 != -1) {
LABEL_15:
  }
    swift_once();
LABEL_12:
  swift_bridgeObjectRetain();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v1 setAccessibilityLabel:v8];
}

char *sub_1003EA91C(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_imageView;
  id v10 = objc_allocWithZone((Class)UIImageView);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_contentView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_menuButton;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UIButton) init];
  *(void *)&v11[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_image] = 0;
  uint64_t v14 = OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_imageBackgroundColor;
  *(void *)&v11[v14] = [self whiteColor];
  uint64_t v15 = &v11[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_tapClosure];
  *(void *)uint64_t v15 = AudioRecordingActivityState.hash(into:);
  *((void *)v15 + 1) = 0;

  v24.id receiver = v11;
  v24.Class super_class = (Class)type metadata accessor for EntrySwipeMenuButton();
  uint64_t v16 = (char *)[super initWithFrame:0.0, 0.0, 0.0, 0.0];
  CGFloat v17 = *(void **)&v16[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_image];
  *(void *)&v16[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_image] = a1;
  uint64_t v18 = v16;
  id v19 = a1;

  signed int v20 = *(void **)&v18[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_imageBackgroundColor];
  *(void *)&v18[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_imageBackgroundColor] = a2;
  id v21 = a2;

  UIMenuElementSize v22 = &v18[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_tapClosure];
  *(void *)UIMenuElementSize v22 = a3;
  *((void *)v22 + 1) = a4;
  swift_retain();
  swift_release();
  sub_1003EADD0();

  swift_release();
  return v18;
}

id sub_1003EAAE0(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_imageView;
  id v10 = objc_allocWithZone((Class)UIImageView);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_contentView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_menuButton;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UIButton) init];
  *(void *)&v11[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_image] = 0;
  uint64_t v14 = OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_imageBackgroundColor;
  *(void *)&v11[v14] = [self whiteColor];
  uint64_t v15 = &v11[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_tapClosure];
  *(void *)uint64_t v15 = AudioRecordingActivityState.hash(into:);
  *((void *)v15 + 1) = 0;

  v18.id receiver = v11;
  v18.Class super_class = (Class)type metadata accessor for EntrySwipeMenuButton();
  id v16 = [super initWithFrame:a1, a2, a3, a4];
  sub_1003EADD0();

  return v16;
}

id sub_1003EAC64(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_imageView;
  id v4 = objc_allocWithZone((Class)UIImageView);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_contentView;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v7 = OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_menuButton;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UIButton) init];
  *(void *)&v5[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_image] = 0;
  uint64_t v8 = OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_imageBackgroundColor;
  *(void *)&v5[v8] = [self whiteColor];
  uint64_t v9 = &v5[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_tapClosure];
  *(void *)uint64_t v9 = AudioRecordingActivityState.hash(into:);
  *((void *)v9 + 1) = 0;

  v14.id receiver = v5;
  v14.Class super_class = (Class)type metadata accessor for EntrySwipeMenuButton();
  id v10 = [super initWithCoder:a1];
  id v11 = v10;
  if (v10)
  {
    id v12 = v10;
    sub_1003EADD0();
  }
  return v11;
}

uint64_t sub_1003EADD0()
{
  uint64_t v1 = v0;
  if (qword_1007F72D0 != -1) {
    swift_once();
  }
  double v2 = *(double *)&qword_10083D898;
  [v0 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v3 = [v0 heightAnchor];
  id v4 = [v3 constraintEqualToConstant:v2];

  [v4 setActive:1];
  double v5 = *(double *)&qword_10083D898;
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v6 = [v1 widthAnchor];
  id v7 = [v6 constraintEqualToConstant:v5];

  [v7 setActive:1];
  uint64_t v8 = *(void **)&v1[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_contentView];
  [v8 setBackgroundColor:*(void *)&v1[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_imageBackgroundColor]];
  id v9 = [v8 layer];
  [v9 setMasksToBounds:1];

  id v10 = [v8 layer];
  [v10 setCornerRadius:*(double *)&qword_10083D898 * 0.5];

  id v11 = *(void **)&v1[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_imageView];
  [v11 setImage:*(void *)&v1[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_image]];
  id v12 = sub_100541660();
  id v13 = [self configurationWithFont:v12 scale:3];

  [v11 setPreferredSymbolConfiguration:v13];
  [v11 setMaximumContentSizeCategory:UIContentSizeCategoryMedium];
  objc_super v14 = self;
  id v15 = [v14 whiteColor];
  [v11 setTintColor:v15];

  [v11 setContentMode:1];
  id v16 = *(void **)&v1[OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_menuButton];
  [v16 addTarget:v1 action:"buttonTapped" forControlEvents:64];
  id v17 = [v14 clearColor];
  [v16 setBackgroundColor:v17];

  [v1 addSubview:v8];
  [v8 addSubview:v11];
  [v1 addSubview:v16];
  sub_1001DCF60(0.0);
  swift_bridgeObjectRelease();
  sub_1001DCF60(0.0);
  swift_bridgeObjectRelease();
  id v18 = [v11 superview];
  if (v18)
  {
    id v19 = v18;
    [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v20 = [v11 centerYAnchor];
    id v21 = [v19 centerYAnchor];
    id v22 = [v20 constraintEqualToAnchor:v21];

    [v22 setConstant:0.0];
    id v23 = v22;
    [v23 setActive:1];
  }
  id v24 = [v11 superview];
  if (v24)
  {
    char v25 = v24;
    [v11 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v26 = [v11 centerXAnchor];
    id v27 = [v25 centerXAnchor];
    id v28 = [v26 constraintEqualToAnchor:v27];

    [v28 setConstant:0.0];
    id v29 = v28;
    [v29 setActive:1];
  }
  uint64_t v30 = self;
  uint64_t v31 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_1003EB6C8;
  *(void *)(v32 + 24) = v31;
  v35[4] = sub_10001AC84;
  v35[5] = v32;
  v35[0] = _NSConcreteStackBlock;
  v35[1] = 1107296256;
  v35[2] = sub_1003F44E4;
  v35[3] = &unk_1007A99E0;
  id v33 = _Block_copy(v35);
  swift_retain();
  swift_release();
  [(id)v30 performWithoutAnimation:v33];
  _Block_release(v33);
  LOBYTE(v30) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v30) {
    __break(1u);
  }
  return result;
}

void sub_1003EB3EC()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    double v2 = *(void **)(Strong + OBJC_IVAR____TtC7Journal20EntrySwipeMenuButton_contentView);
    id v3 = [v2 layer];
    CATransform3DMakeScale(&v5, 0.9, 0.9, 1.0);
    [v3 setTransform:&v5];

    id v4 = [v2 layer];
    [v4 setOpacity:0.0];
  }
}

id sub_1003EB5A8()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for EntrySwipeMenuButton();
  return [super dealloc];
}

uint64_t type metadata accessor for EntrySwipeMenuButton()
{
  return self;
}

uint64_t sub_1003EB690()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1003EB6C8()
{
}

uint64_t sub_1003EB6D0()
{
  return swift_deallocObject();
}

uint64_t sub_1003EB6E0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003EB6F0()
{
  return swift_release();
}

id static NSUserDefaults.getAppGroupContainerUserDefaults(containerURL:)()
{
  uint64_t v0 = self;
  NSString v1 = String._bridgeToObjectiveC()();
  URL._bridgeToObjectiveC()(v2);
  id v4 = v3;
  id v5 = [v0 getSharedUserDefaults:v1 containerURL:v3];

  return v5;
}

uint64_t sub_1003EB788(unint64_t a1)
{
  if (a1 >> 62) {
    goto LABEL_15;
  }
  uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v2; uint64_t v2 = _CocoaArrayWrapper.endIndex.getter())
  {
    uint64_t v3 = 4;
    while (1)
    {
      id v4 = (a1 & 0xC000000000000001) != 0
         ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
         : *(id *)(a1 + 8 * v3);
      id v5 = v4;
      uint64_t v6 = v3 - 3;
      if (__OFADD__(v3 - 4, 1)) {
        break;
      }
      uint64_t v7 = (uint64_t)[v4 isHidden];

      ++v3;
      if (v7) {
        BOOL v8 = v6 == v2;
      }
      else {
        BOOL v8 = 1;
      }
      if (v8) {
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_15:
    swift_bridgeObjectRetain();
  }
  uint64_t v7 = 1;
LABEL_17:
  swift_bridgeObjectRelease();
  return v7;
}

id sub_1003EB884()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___textMaskViewHeightConstraint;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___textMaskViewHeightConstraint);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___textMaskViewHeightConstraint);
  }
  else
  {
    id v4 = [*(id *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextContainerView) heightAnchor];
    id v5 = [v4 constraintEqualToConstant:0.0];

    uint64_t v6 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v5;
    id v3 = v5;

    uint64_t v2 = 0;
  }
  id v7 = v2;
  return v3;
}

id sub_1003EB92C()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___textViewTapGesture;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___textViewTapGesture);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___textViewTapGesture);
  }
  else
  {
    id v4 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"handleTap:"];
    id v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1003EB9B0()
{
  return sub_1003EBA10(&OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___bookmarkButton, (uint64_t (*)(void))sub_10037A2BC);
}

id sub_1003EB9D0()
{
  return sub_1003EBA10(&OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___editButton, (uint64_t (*)(void))sub_10037AD94);
}

id sub_1003EB9F0()
{
  return sub_1003EBA10(&OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___deleteButton, (uint64_t (*)(void))sub_10037B234);
}

id sub_1003EBA10(uint64_t *a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    id v6 = (void *)a2();
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_1003EBA98(double a1, double a2, double a3, double a4)
{
  swift_weakInit();
  *(void *)&v4[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_cellDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v4[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_actionDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v4[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded] = 0;
  uint64_t v9 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_contentStackView;
  id v10 = objc_allocWithZone((Class)UIStackView);
  id v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_topContentMaskView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetStackView;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v14 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_textStackView;
  *(void *)&v11[v14] = [objc_allocWithZone((Class)UIStackView) init];
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_reflectionPromptView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_photoMemoriesBannerView] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_slimAssetView] = 0;
  uint64_t v15 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView;
  type metadata accessor for CanvasGridView();
  *(void *)&v11[v15] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridHeightConstraint] = 0;
  uint64_t v16 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextContainerView;
  *(void *)&v11[v16] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v17 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextView;
  type metadata accessor for TimelineTextView();
  *(void *)&v11[v17] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v18 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_bundleTitle;
  type metadata accessor for TimelineMomentsTitleView();
  *(void *)&v11[v18] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v19 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_gridMargin;
  if (qword_1007F7390 != -1) {
    swift_once();
  }
  *(void *)&v11[v19] = qword_10083D9A0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_textViewMarginNoAssets] = 0x4030000000000000;
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_unsupportedEntryCellHeight] = 0x4069000000000000;
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_unsupportedEntryView] = 0;
  uint64_t v20 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView;
  type metadata accessor for EntrySwipeMenuView();
  *(void *)&v11[v20] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v21 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_platterView;
  type metadata accessor for PlatterBackgroundEffectView();
  *(void *)&v11[v21] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_contextMenuInteraction] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___textMaskViewHeightConstraint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___textViewTapGesture] = 0;
  uint64_t v22 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_chinView;
  type metadata accessor for JournalEntryCellChinView();
  *(void *)&v11[v22] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_optionalChinActions] = _swiftEmptyArrayStorage;
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_collapseAffordanceAccessibilityElement] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_maximumNumberOfLines] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_numCollapsedLinesWithAssets] = 5;
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_numCollapsedLinesNoAssets] = 10;
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___bookmarkButton] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___editButton] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___deleteButton] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry] = 0;

  v25.id receiver = v11;
  v25.Class super_class = (Class)type metadata accessor for JournalEntryCollectionViewCell();
  id v23 = [super initWithFrame:a1, a2, a3, a4];
  sub_1003EBE60();

  return v23;
}

void sub_1003EBE60()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(char **)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView];
  *(void *)&v2[OBJC_IVAR____TtC7Journal18EntrySwipeMenuView_delegate + 8] = &off_1007A7710;
  swift_unknownObjectWeakAssign();
  [v0 addSubview:v2];
  id v3 = [v2 superview];
  if (v3)
  {
    id v4 = v3;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = [v2 leadingAnchor];
    id v6 = [v4 leadingAnchor];
    id v7 = [v5 constraintEqualToAnchor:v6];

    [v7 setConstant:0.0];
    if (v7)
    {
      id v8 = v7;
      [v8 setActive:1];
    }
  }
  id v9 = [v2 superview];
  if (v9)
  {
    id v10 = v9;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v11 = [v2 trailingAnchor];
    id v12 = [v10 trailingAnchor];
    id v13 = [v11 constraintEqualToAnchor:v12];

    [v13 setConstant:0.0];
    if (v13)
    {
      id v14 = v13;
      [v14 setActive:1];
    }
  }
  id v15 = [v2 superview];
  if (v15)
  {
    uint64_t v16 = v15;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v17 = [v2 topAnchor];
    id v18 = [v16 topAnchor];
    id v19 = [v17 constraintEqualToAnchor:v18];

    [v19 setConstant:0.0];
    if (v19)
    {
      id v20 = v19;
      [v20 setActive:1];
    }
  }
  id v21 = sub_1001DD438(0, 1, 0.0);
  if (v21)
  {
    uint64_t v22 = v21;
    type metadata accessor for UILayoutPriority(0);
    sub_1003F1904((unint64_t *)&qword_10080C380, type metadata accessor for UILayoutPriority);
    static _UIKitNumericRawRepresentable.- infix(_:_:)();
    LODWORD(v23) = v88;
    [v22 setPriority:v23];
  }
  uint64_t v24 = *(void *)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_platterView];
  sub_1000091E8(v24);
  uint64_t v25 = OBJC_IVAR____TtC7Journal27PlatterBackgroundEffectView_contentView;
  id v26 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v24
                                                              + OBJC_IVAR____TtC7Journal27PlatterBackgroundEffectView_contentView), "widthAnchor"));
  id v27 = [v1 widthAnchor];
  id v28 = [v26 constraintEqualToAnchor:v27];

  [v28 setActive:1];
  id v29 = *(void **)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_contentStackView];
  [v29 setAxis:1];
  uint64_t v86 = v25;
  UIMenu v87 = (char *)v24;
  [*(id *)(v24 + v25) addSubview:v29];
  sub_1001DCF60(0.0);
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void **)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_topContentMaskView];
  [v30 setClipsToBounds:1];
  [v30 setAxis:1];
  id v85 = v29;
  [v29 addArrangedSubview:v30];
  uint64_t v31 = *(void **)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetStackView];
  [v31 setAxis:1];
  double v32 = *(double *)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_gridMargin];
  [v31 setSpacing:v32];
  [v31 setLayoutMarginsRelativeArrangement:1];
  [v31 setDirectionalLayoutMargins:v32, v32, 0.0, v32];
  [v30 addArrangedSubview:v31];
  id v33 = *(char **)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView];
  *(void *)&v33[OBJC_IVAR____TtC7Journal14CanvasGridView_delegate + 8] = &off_1007A9A40;
  swift_unknownObjectWeakAssign();
  [v31 addArrangedSubview:v33];
  [v33 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v34 = [v33 heightAnchor];
  id v35 = [v34 constraintEqualToConstant:0.0];

  [v35 setActive:1];
  uint64_t v36 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridHeightConstraint;
  id v37 = *(void **)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridHeightConstraint];
  *(void *)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridHeightConstraint] = v35;

  [*(id *)&v1[v36] setActive:0];
  uint64_t v38 = *(void **)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_textStackView];
  [v38 setAxis:1];
  if (qword_1007F7380 != -1) {
    swift_once();
  }
  [v38 setSpacing:*(double *)&qword_10083D990];
  [v38 setLayoutMarginsRelativeArrangement:1];
  [v38 setDirectionalLayoutMargins:*(double *)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_textViewMarginNoAssets], *(double *)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_textViewMarginNoAssets], *(double *)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_textViewMarginNoAssets], *(double *)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_textViewMarginNoAssets]];
  [v30 addArrangedSubview:v38];
  [v38 addArrangedSubview:*(void *)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_bundleTitle]];
  uint64_t v39 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextContainerView;
  [v38 addArrangedSubview:*(void *)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextContainerView]];
  uint64_t v40 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextView;
  [*(id *)&v1[v39] addSubview:*(void *)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextView]];
  id v41 = *(id *)&v1[v40];
  id v42 = [v41 superview];
  if (v42)
  {
    uint64_t v43 = v42;
    [v41 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v44 = [v41 topAnchor];
    id v45 = [v43 topAnchor];
    id v46 = [v44 constraintEqualToAnchor:v45];

    [v46 setConstant:0.0];
    if (v46)
    {
      id v46 = v46;
      [v46 setActive:1];

      id v41 = v46;
    }
  }
  else
  {
    id v46 = 0;
    uint64_t v43 = v41;
  }

  id v47 = *(id *)&v1[v40];
  id v48 = [v47 superview];
  if (v48)
  {
    NSString v49 = v48;
    [v47 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v50 = [v47 leadingAnchor];
    id v51 = [v49 leadingAnchor];
    id v52 = [v50 constraintEqualToAnchor:v51];

    [v52 setConstant:0.0];
    if (v52)
    {
      id v52 = v52;
      [v52 setActive:1];

      id v47 = v52;
    }
  }
  else
  {
    id v52 = 0;
    NSString v49 = v47;
  }

  id v53 = *(id *)&v1[v40];
  id v54 = [v53 superview];
  if (v54)
  {
    NSString v55 = v54;
    [v53 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v56 = [v53 trailingAnchor];
    id v57 = [v55 trailingAnchor];
    id v58 = [v56 constraintEqualToAnchor:v57];

    [v58 setConstant:0.0];
    if (v58)
    {
      id v58 = v58;
      [v58 setActive:1];

      id v53 = v58;
    }
    uint64_t v59 = &selRef_drawMapRect_zoomScale_inContext_;
  }
  else
  {
    id v58 = 0;
    NSString v55 = v53;
    uint64_t v59 = &selRef_drawMapRect_zoomScale_inContext_;
  }

  id v60 = *(id *)&v1[v40];
  id v61 = sub_1001DD438(0, 1, 0.0);

  if (v61)
  {
    type metadata accessor for UILayoutPriority(0);
    sub_1003F1904((unint64_t *)&qword_10080C380, type metadata accessor for UILayoutPriority);
    static _UIKitNumericRawRepresentable.- infix(_:_:)();
    LODWORD(v62) = v88;
    [v61 setPriority:v62];
  }
  id v63 = sub_1003EB92C();
  [v63 setDelegate:v1];

  id v64 = *(id *)&v1[v40];
  id v65 = sub_1003EB92C();
  [v64 addGestureRecognizer:v65];

  uint64_t v66 = *(void *)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_chinView];
  *(void *)(v66 + OBJC_IVAR____TtC7Journal24JournalEntryCellChinView_actionHandler + 8) = &off_1007A9A08;
  swift_unknownObjectWeakAssign();
  [v85 v59[84] v66];
  id v67 = [objc_allocWithZone((Class)UIContextMenuInteraction) initWithDelegate:v1];
  [v87 addInteraction:v67];
  id v68 = *(void **)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_contextMenuInteraction];
  *(void *)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_contextMenuInteraction] = v67;
  id v69 = v67;

  id v70 = [objc_allocWithZone((Class)type metadata accessor for JournalEntryCollectionViewCell.CollapseAffordanceAccessibilityElement()) initWithAccessibilityContainer:*(void *)&v87[v86]];
  uint64_t v71 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_collapseAffordanceAccessibilityElement;
  id v72 = *(void **)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_collapseAffordanceAccessibilityElement];
  *(void *)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_collapseAffordanceAccessibilityElement] = v70;

  uint64_t v73 = *(void **)&v1[v71];
  if (v73)
  {
    uint64_t v74 = qword_1007F7A40;
    id v75 = v73;
    if (v74 != -1) {
      swift_once();
    }
    NSString v76 = String._bridgeToObjectiveC()();
    [v75 setAccessibilityLabel:v76];

    UIAccessibilityTraits v77 = UIAccessibilityTraitButton;
    uint64_t v78 = (char *)v75;
    unint64_t v79 = (unint64_t)[v78 accessibilityTraits];
    if ((v77 & ~v79) != 0) {
      UIAccessibilityTraits v80 = v77;
    }
    else {
      UIAccessibilityTraits v80 = 0;
    }
    [v78 setAccessibilityTraits:v80 | v79];

    uint64_t v81 = swift_allocObject();
    swift_unknownObjectWeakInit();
    Swift::String v82 = (id (**)())&v78[OBJC_IVAR____TtCC7Journal30JournalEntryCollectionViewCell38CollapseAffordanceAccessibilityElement_activationHandler];
    uint64_t v83 = *(void *)&v78[OBJC_IVAR____TtCC7Journal30JournalEntryCollectionViewCell38CollapseAffordanceAccessibilityElement_activationHandler];
    char *v82 = sub_1003F18FC;
    v82[1] = (id (*)())v81;
    sub_10001ABB8(v83);
  }
  sub_1003EDF48();
  id v84 = [self defaultCenter];
  [v84 addObserver:v1 selector:"onAppWillResignActiveNotification" name:UIApplicationWillResignActiveNotification object:0];
}

id sub_1003ECAFC()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v1 = Strong;
  id v2 = [Strong accessibilityPerformEscape];

  return v2;
}

id sub_1003ECB68()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0 name:UIApplicationWillResignActiveNotification object:0];

  v3.id receiver = v0;
  v3.Class super_class = (Class)type metadata accessor for JournalEntryCollectionViewCell();
  return [super dealloc];
}

void sub_1003ECF38()
{
  v13.id receiver = v0;
  v13.Class super_class = (Class)type metadata accessor for JournalEntryCollectionViewCell();
  [super layoutSubviews];
  id v1 = *(void **)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView];
  id v2 = self;
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  id v11 = sub_1001D4CE4;
  uint64_t v12 = v3;
  id v7 = _NSConcreteStackBlock;
  uint64_t v8 = 1107296256;
  id v9 = sub_10017D530;
  id v10 = &unk_1007A9C40;
  id v4 = _Block_copy(&v7);
  id v5 = v1;
  swift_release();
  id v11 = (id (*)())AudioRecordingActivityState.hash(into:);
  uint64_t v12 = 0;
  id v7 = _NSConcreteStackBlock;
  uint64_t v8 = 1107296256;
  id v9 = sub_1001C7318;
  id v10 = &unk_1007A9C68;
  id v6 = _Block_copy(&v7);
  swift_release();
  [v2 animateWithDuration:4 delay:v4 options:v6 animations:0.0 completion:0.0];
  _Block_release(v6);
  _Block_release(v4);
}

void sub_1003ED168(char a1)
{
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded))
  {
    uint64_t v3 = 0;
    goto LABEL_9;
  }
  uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry);
  if (!v4) {
    goto LABEL_6;
  }
  id v5 = (unint64_t *)(v4 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  unint64_t v6 = *v5;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_6;
    }
  }
  else if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
LABEL_6:
    uint64_t v3 = 5;
    goto LABEL_9;
  }
  uint64_t v3 = 10;
LABEL_9:
  *(void *)(v1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_maximumNumberOfLines) = v3;
  if (a1)
  {
    id v8 = *(id *)(v1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextView);
    id v9 = [v8 textContainer];
    id v10 = [v9 maximumNumberOfLines];

    if (v10 != (id)v3)
    {
      id v11 = [v8 textContainer];
      [v11 setMaximumNumberOfLines:v3];

      [v8 invalidateIntrinsicContentSize];
    }
  }
}

void sub_1003ED2D4()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry);
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_photoMemoriesBannerView;
    uint64_t v4 = *(void **)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_photoMemoriesBannerView);
    id v5 = &OBJC_IVAR____TtC7Journal35LockJournalOnboardingViewController_collectionView;
    unint64_t v6 = &selRef_drawMapRect_zoomScale_inContext_;
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showPhotoMemoryBanner) != 1)
    {
      swift_retain();
      if (v4) {
        [v4 setHidden:1];
      }
      goto LABEL_19;
    }
    if (v4)
    {
      swift_retain();
    }
    else
    {
      type metadata accessor for CanvasPhotosMemoriesBanner();
      id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
      swift_retain();
      id v8 = [v7 init];
      id v9 = *(void **)(v2 + v3);
      *(void *)(v2 + v3) = v8;

      uint64_t v4 = *(void **)(v2 + v3);
      if (!v4) {
        goto LABEL_19;
      }
    }
    id v10 = (uint64_t *)&selRef_drawMapRect_zoomScale_inContext_;
    id v11 = *(id *)(v2 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetStackView);
    uint64_t v12 = v4;
    id v13 = [v11 arrangedSubviews];
    sub_10001B284(0, (unint64_t *)&qword_100802730);
    unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v15 = *(id *)(v2 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView);
    sub_100464F60((uint64_t)v15, v14);
    id v17 = v16;
    uint64_t v19 = v18;
    swift_bridgeObjectRelease();

    if (v19)
    {

      unint64_t v6 = &selRef_drawMapRect_zoomScale_inContext_;
    }
    else
    {
      char v20 = v12[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_isEditing];
      v12[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_isEditing] = 0;
      if (v20)
      {
        uint64_t v21 = OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_xPlatterView;
        uint64_t v22 = *(void **)&v12[OBJC_IVAR____TtC7Journal26CanvasPhotosMemoriesBanner_xPlatterView];
        if (v22)
        {
          [v22 removeFromSuperview];
          double v23 = *(void **)&v12[v21];
        }
        else
        {
          double v23 = 0;
        }
        *(void *)&v12[v21] = 0;
      }
      [v12 setHidden:0];
      if (__OFSUB__(v17, 1)) {
        goto LABEL_47;
      }
      unint64_t v6 = &selRef_drawMapRect_zoomScale_inContext_;
      [v11 insertArrangedSubview:v12 atIndex:((uint64_t)v17 - 1) & ~(((uint64_t)v17 - 1) >> 63)];
    }
    id v5 = &OBJC_IVAR____TtC7Journal35LockJournalOnboardingViewController_collectionView;
LABEL_19:
    uint64_t v24 = (void *)sub_100339674();
    if (!v24)
    {
      uint64_t v36 = *(void **)(v2 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_reflectionPromptView);
      if (v36) {
        [v36 setHidden:1];
      }
LABEL_29:
      id v37 = *(unsigned char **)(v2 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView);
      v37[OBJC_IVAR____TtC7Journal14CanvasGridView_isExpanded] = *(unsigned char *)(v2
                                                                          + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded);
      sub_10037EB80();
      *(void *)&v37[OBJC_IVAR____TtC7Journal14CanvasGridView_journalEntry] = v1;
      swift_retain_n();
      swift_release();
      sub_10037E174();
      sub_10037E484(0);
      swift_release();
      uint64_t v38 = (unint64_t *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
      swift_beginAccess();
      unint64_t v39 = *v38;
      if (v39 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      [v37 setHidden:v40 == 0];
      if ((sub_10018B188() & 1) == 0 || (id v41 = sub_100584E48()) == 0)
      {
        uint64_t v52 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_slimAssetView;
        id v53 = *(void **)(v2 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_slimAssetView);
        if (!v53) {
          goto LABEL_42;
        }
        [v53 setHidden:1];
        id v54 = *(char **)(v2 + v52);
        if (!v54) {
          goto LABEL_42;
        }
        NSString v55 = &v54[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset];
        id v11 = *(id *)&v54[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset];
        uint64_t v56 = *(void *)&v54[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset + 8];
        *(void *)NSString v55 = 0;
        *((void *)v55 + 1) = 0;
        id v48 = v54;
        sub_1005CB8E8((uint64_t)v11, v56);
        goto LABEL_40;
      }
      id v11 = v41;
      uint64_t v12 = v42;
      id v10 = &OBJC_IVAR____TtC7Journal35LockJournalOnboardingViewController_collectionView;
      uint64_t v19 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_slimAssetView;
      uint64_t v43 = *(char **)(v2 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_slimAssetView);
      if (v43)
      {
LABEL_36:
        *(void *)&v43[OBJC_IVAR____TtC7Journal13SlimAssetView_journalEntry] = v1;
        swift_retain();
        id v48 = v43;
        swift_release();
        NSString v49 = &v48[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset];
        id v50 = *(void **)&v48[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset];
        uint64_t v51 = *(void *)&v48[OBJC_IVAR____TtC7Journal13SlimAssetView_slimAsset + 8];
        *(void *)NSString v49 = v11;
        *((void *)v49 + 1) = v12;
        id v11 = v11;
        sub_1005CB8E8((uint64_t)v50, v51);

        swift_weakLoadStrong();
        swift_weakAssign();
        swift_release();
        sub_1005CFFA0();
        [v48 setHidden:0];
        id v5 = v10;
        [*(id *)(v2 + v10[66]) addArrangedSubview:v48];
        unint64_t v6 = &selRef_drawMapRect_zoomScale_inContext_;
LABEL_40:

LABEL_41:
LABEL_42:
        id v57 = *(void **)(v2 + v5[66]);
        id v58 = [v57 v6[68]];
        sub_10001B284(0, (unint64_t *)&qword_100802730);
        unint64_t v59 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        LOBYTE(v58) = sub_1003EB788(v59);
        swift_bridgeObjectRelease();
        [v57 setHidden:v58 & 1];
        swift_release();
        return;
      }
      type metadata accessor for SlimAssetView();
      id v17 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
      if (qword_1007F7448 == -1)
      {
LABEL_35:
        double v44 = *(double *)&qword_10083DA58;
        [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v45 = [v17 heightAnchor];
        id v46 = [v45 constraintEqualToConstant:v44];

        [v46 setActive:1];
        id v47 = *(void **)(v2 + v19);
        *(void *)(v2 + v19) = v17;

        uint64_t v43 = *(char **)(v2 + v19);
        if (!v43)
        {
          unint64_t v6 = &selRef_drawMapRect_zoomScale_inContext_;
          id v5 = v10;
          goto LABEL_41;
        }
        goto LABEL_36;
      }
LABEL_48:
      swift_once();
      goto LABEL_35;
    }
    sub_10033AA5C(v24);

    uint64_t v26 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_reflectionPromptView;
    id v27 = *(void **)(v2 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_reflectionPromptView);
    if (!v27)
    {
      type metadata accessor for CanvasReflectionPromptView();
      id v28 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
      id v29 = *(void **)(v2 + v26);
      *(void *)(v2 + v26) = v28;

      id v27 = *(void **)(v2 + v26);
      if (!v27) {
        goto LABEL_29;
      }
    }
    id v10 = (uint64_t *)&selRef_drawMapRect_zoomScale_inContext_;
    id v11 = *(id *)(v2 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetStackView);
    uint64_t v12 = v27;
    id v30 = [v11 arrangedSubviews];
    sub_10001B284(0, (unint64_t *)&qword_100802730);
    unint64_t v31 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v32 = *(id *)(v2 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView);
    sub_100464F60((uint64_t)v32, v31);
    id v17 = v33;
    uint64_t v19 = v34;
    swift_bridgeObjectRelease();

    if (v19)
    {

      unint64_t v6 = &selRef_drawMapRect_zoomScale_inContext_;
      goto LABEL_28;
    }
    *(void *)&v12[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_journalEntry] = v1;
    swift_retain_n();
    swift_release();
    sub_100263548();
    swift_release();
    char v35 = v12[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_isEditing];
    v12[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_isEditing] = 0;
    sub_100262928(v35);
    [v12 setHidden:0];
    if (!__OFSUB__(v17, 1))
    {
      [v11 insertArrangedSubview:v12 atIndex:((uint64_t)v17 - 1) & ~(((uint64_t)v17 - 1) >> 63)];

      unint64_t v6 = &selRef_drawMapRect_zoomScale_inContext_;
LABEL_28:
      id v5 = &OBJC_IVAR____TtC7Journal35LockJournalOnboardingViewController_collectionView;
      goto LABEL_29;
    }
    __break(1u);
LABEL_47:
    __break(1u);
    goto LABEL_48;
  }
}

void sub_1003EDA5C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry);
  if (v1)
  {
    uint64_t v2 = v0;
    uint64_t v3 = *(char **)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextView);
    char v4 = *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded);
    *(void *)&v3[OBJC_IVAR____TtC7Journal14CanvasTextView_journalEntry] = v1;
    swift_retain_n();
    id v5 = v3;
    swift_release();
    sub_10012D750(0, v4, 0);

    swift_release();
    id v6 = *(id *)(v2 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextContainerView);
    [v6 setHidden:sub_10018ACD8()];

    id v7 = *(char **)(v2 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_bundleTitle);
    *(void *)&v7[OBJC_IVAR____TtC7Journal24TimelineMomentsTitleView_journalEntry] = v1;
    swift_retain_n();
    swift_release();
    sub_100271C88();
    swift_release();
    id v8 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title);
    if (v8
      && (id v9 = [v8 string],
          static String._unconditionallyBridgeFromObjectiveC(_:)(),
          v9,
          uint64_t v10 = String.count.getter(),
          swift_bridgeObjectRelease(),
          v10 >= 1))
    {
      char v11 = *(unsigned char *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showTitle) ^ 1;
    }
    else
    {
      char v11 = 1;
    }
    [v7 setHidden:v11 & 1];
    sub_1003ED168(1);
    uint64_t v12 = *(void **)(v2 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_textStackView);
    id v13 = [v12 arrangedSubviews];
    sub_10001B284(0, (unint64_t *)&qword_100802730);
    unint64_t v14 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    LOBYTE(v13) = sub_1003EB788(v14);
    swift_bridgeObjectRelease();
    [v12 setHidden:v13 & 1];
    swift_release();
  }
}

void sub_1003EDCCC()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry);
  if (v1)
  {
    uint64_t v2 = *(void **)(v1 + 32);
    swift_retain();
    signed int v3 = [v2 minimumSupportedAppVersion];
    if (qword_1007F6AA8 != -1) {
      swift_once();
    }
    if (static Journaling.EntryViewModel.currentAppVersion < v3
      && (unsigned __int16)((unsigned __int16)[*(id *)(v1 + 32) minimumSupportedAppVersionMode] - 1) >= 2u)
    {
      uint64_t v5 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_unsupportedEntryView;
      id v6 = *(void **)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_unsupportedEntryView);
      if (v6) {
        goto LABEL_12;
      }
      type metadata accessor for UnsupportedEntryView();
      id v7 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
      double v8 = *(double *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_unsupportedEntryCellHeight);
      [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v9 = [v7 heightAnchor];
      id v10 = [v9 constraintEqualToConstant:v8];

      [v10 setActive:1];
      id v11 = [objc_allocWithZone((Class)UITapGestureRecognizer) initWithTarget:v0 action:"handleTapUnsupportedView:"];
      [v7 addGestureRecognizer:v11];

      uint64_t v12 = *(void **)(v0 + v5);
      *(void *)(v0 + v5) = v7;

      id v6 = *(void **)(v0 + v5);
      if (v6)
      {
LABEL_12:
        id v13 = v6;
        [v13 setHidden:0];
        [*(id *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_contentStackView) insertArrangedSubview:v13 atIndex:0];
        [*(id *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_topContentMaskView) setHidden:1];
      }
    }
    else
    {
      char v4 = *(void **)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_unsupportedEntryView);
      if (v4) {
        [v4 setHidden:1];
      }
      [*(id *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_topContentMaskView) setHidden:0];
    }
    swift_release();
  }
}

void sub_1003EDF48()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_platterView)
                + OBJC_IVAR____TtC7Journal27PlatterBackgroundEffectView_contentView);
  long long v35 = xmmword_1006E36E0;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_collapseAffordanceAccessibilityElement);
  if (v2)
  {
    uint64_t v3 = type metadata accessor for JournalEntryCollectionViewCell.CollapseAffordanceAccessibilityElement();
    char v4 = v2;
  }
  else
  {
    char v4 = 0;
    uint64_t v3 = 0;
    uint64_t v37 = 0;
    uint64_t v38 = 0;
  }
  uint64_t v36 = v4;
  uint64_t v39 = v3;
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_photoMemoriesBannerView);
  if (v5)
  {
    uint64_t v6 = type metadata accessor for CanvasPhotosMemoriesBanner();
    id v7 = v5;
  }
  else
  {
    id v7 = 0;
    uint64_t v6 = 0;
    uint64_t v41 = 0;
    uint64_t v42 = 0;
  }
  uint64_t v40 = v7;
  uint64_t v43 = v6;
  double v8 = *(void **)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_reflectionPromptView);
  if (v8)
  {
    uint64_t v9 = type metadata accessor for CanvasReflectionPromptView();
    id v10 = v8;
  }
  else
  {
    id v10 = 0;
    uint64_t v9 = 0;
    uint64_t v45 = 0;
    uint64_t v46 = 0;
  }
  double v44 = v10;
  uint64_t v47 = v9;
  id v11 = *(void **)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView);
  uint64_t v49 = type metadata accessor for CanvasGridView();
  id v48 = v11;
  uint64_t v12 = *(void **)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_slimAssetView);
  if (v12)
  {
    uint64_t v13 = type metadata accessor for SlimAssetView();
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v51 = 0;
    uint64_t v52 = 0;
  }
  id v50 = v12;
  uint64_t v53 = v13;
  unint64_t v14 = *(void **)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_bundleTitle);
  uint64_t v55 = type metadata accessor for TimelineMomentsTitleView();
  id v54 = v14;
  id v15 = *(void **)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextView);
  uint64_t v57 = type metadata accessor for TimelineTextView();
  uint64_t v56 = v15;
  uint64_t v16 = *(void **)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_chinView);
  uint64_t v59 = type metadata accessor for JournalEntryCellChinView();
  id v58 = v16;
  id v17 = v1;
  id v18 = v2;
  id v19 = v5;
  id v20 = v8;
  id v21 = v11;
  id v22 = v12;
  id v23 = v14;
  id v24 = v15;
  id v25 = v16;
  uint64_t v26 = _swiftEmptyArrayStorage;
  for (uint64_t i = 32; i != 288; i += 32)
  {
    sub_1001C71EC((uint64_t)&v34[i + 32], (uint64_t)v34);
    sub_1000685B8((uint64_t)v34, (uint64_t)&v31);
    if (v32)
    {
      sub_10002102C(&v31, v33);
      sub_10002102C(v33, &v31);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v26 = sub_1002A5DA8(0, v26[2] + 1, 1, v26);
      }
      unint64_t v29 = v26[2];
      unint64_t v28 = v26[3];
      if (v29 >= v28 >> 1) {
        uint64_t v26 = sub_1002A5DA8((void *)(v28 > 1), v29 + 1, 1, v26);
      }
      v26[2] = v29 + 1;
      sub_10002102C(&v31, &v26[4 * v29 + 4]);
    }
    else
    {
      sub_10001B418((uint64_t)&v31);
    }
  }
  sub_100010218(&qword_1007FAD50);
  swift_arrayDestroy();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v17 setAccessibilityElements:isa];
}

void sub_1003EE24C(char a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextView;
  id v7 = *(id *)&v2[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextView];
  char v8 = sub_10012C770();

  if ((v8 & 1) == 0)
  {
    uint64_t v9 = *(void *)&v3[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry];
    if (!v9) {
      return;
    }
    id v10 = (unint64_t *)(v9 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
    swift_beginAccess();
    unint64_t v11 = *v10;
    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v24 < 6) {
        return;
      }
    }
    else if (*(uint64_t *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10) < 6)
    {
      return;
    }
  }
  if (*(unsigned char *)(*(void *)&v3[v6] + OBJC_IVAR____TtC7Journal16TimelineTextView_isAlwaysTruncated) != 1
    || (a1 & 1) != 0)
  {
    if ((v3[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded] & 1) == 0)
    {
      v3[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded] = 1;
      [v3 setAccessibilityViewIsModal:1];
      sub_1003ED168(1);
      id v17 = *(id *)&v3[v6];
      sub_10012D750(1, 1, a1 & 1);

      *(unsigned char *)(*(void *)&v3[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView]
               + OBJC_IVAR____TtC7Journal14CanvasGridView_isExpanded) = 1;
      sub_10037EB80();
      if (a2) {
        double v18 = 0.3;
      }
      else {
        double v18 = 0.0;
      }
      id v19 = self;
      uint64_t v20 = swift_allocObject();
      swift_unknownObjectWeakInit();
      unint64_t v29 = sub_1003F18EC;
      uint64_t v30 = v20;
      aBlock = _NSConcreteStackBlock;
      uint64_t v26 = 1107296256;
      id v27 = sub_10017D530;
      unint64_t v28 = &unk_1007A9BA0;
      id v21 = _Block_copy(&aBlock);
      swift_release();
      uint64_t v22 = swift_allocObject();
      swift_unknownObjectWeakInit();
      unint64_t v29 = sub_1003F18F4;
      uint64_t v30 = v22;
      aBlock = _NSConcreteStackBlock;
      uint64_t v26 = 1107296256;
      id v27 = sub_1001C7318;
      unint64_t v28 = &unk_1007A9BC8;
      id v23 = _Block_copy(&aBlock);
      swift_release();
      [v19 animateWithDuration:0 delay:v21 options:v23 animations:v18 completion:0.0];
      _Block_release(v23);
      _Block_release(v21);
    }
  }
  else
  {
    uint64_t v12 = &v3[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_actionDelegate];
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v13 = *((void *)v12 + 1);
      uint64_t ObjectType = swift_getObjectType();
      id v15 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 16);
      uint64_t v16 = swift_retain();
      v15(v16, 0, ObjectType, v13);
      swift_release();
      swift_unknownObjectRelease();
    }
  }
}

void sub_1003EE5B0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView) layoutIfNeeded];
    [*(id *)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView] layoutIfNeeded];
    uint64_t v2 = &v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_cellDelegate];
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v3 = *((void *)v2 + 1);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 8))(v1, ObjectType, v3);
      swift_unknownObjectRelease();
    }
    [v1 invalidateIntrinsicContentSize];
  }
}

void *sub_1003EE690()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v27 = *(void *)(v0 - 8);
  uint64_t v28 = v0;
  __chkstk_darwin(v0);
  uint64_t v24 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for DispatchQoS();
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  __chkstk_darwin(v2);
  char v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchTimeInterval();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (void (**)(char *, uint64_t))((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = type metadata accessor for DispatchTime();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v15 = (char *)&v22 - v14;
  swift_beginAccess();
  uint64_t result = (void *)swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v17 = result;
    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, result);
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    uint64_t v23 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    void *v8 = 100;
    (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, enum case for DispatchTimeInterval.milliseconds(_:), v5);
    DispatchTime.advanced(by:)();
    (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v22 = *(void (**)(char *, uint64_t))(v10 + 8);
    v22(v12, v9);
    aBlock[4] = sub_1003EEB10;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    aBlock[3] = &unk_1007A9BF0;
    double v18 = _Block_copy(aBlock);
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1003F1904((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    sub_10001B1BC();
    id v19 = v24;
    uint64_t v20 = v28;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v21 = (void *)v23;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v20);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v26);
    return (void *)((uint64_t (*)(char *, uint64_t))v22)(v15, v9);
  }
  return result;
}

void sub_1003EEB10()
{
}

void sub_1003EEB38(char a1)
{
  uint64_t v2 = v1;
  if (*(void *)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry])
  {
    uint64_t v3 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded;
    if (v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded] == 1)
    {
      v2[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded] = 0;
      swift_retain();
      [v2 setAccessibilityViewIsModal:0];
      int v5 = a1 & 1;
      if (a1) {
        double v6 = 0.0;
      }
      else {
        double v6 = 0.3;
      }
      sub_1003ED168(0);
      uint64_t v7 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextView;
      char v8 = v2[v3];
      id v9 = *(id *)&v2[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextView];
      sub_10012D750(0, v8, 0);

      if (v5
        || (uint64_t v10 = *(void *)&v2[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_maximumNumberOfLines],
            id v11 = *(id *)&v2[v7],
            uint64_t v12 = sub_10012DC70(v10),
            char v14 = v13,
            v11,
            (v14 & 1) != 0))
      {
        id v18 = *(id *)&v2[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_maximumNumberOfLines];
        id v17 = *(id *)&v2[v7];
        id v19 = [v17 textContainer];
        id v20 = [v19 maximumNumberOfLines];

        if (v20 != v18)
        {
          id v21 = [v17 textContainer];
          [v21 setMaximumNumberOfLines:v18];

          [v17 invalidateIntrinsicContentSize];
        }
      }
      else
      {
        double v15 = *(double *)&v12;
        id v16 = sub_1003EB884();
        [v16 setConstant:v15];

        id v17 = sub_1003EB884();
        [v17 setActive:1];
      }

      uint64_t v22 = *(void *)&v2[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView];
      char v23 = *(unsigned char *)(v22 + OBJC_IVAR____TtC7Journal14CanvasGridView_skipLayoutInvalidation);
      *(unsigned char *)(v22 + OBJC_IVAR____TtC7Journal14CanvasGridView_skipLayoutInvalidation) = 1;
      if ((v23 & 1) == 0) {
        *(unsigned char *)(*(void *)(v22 + OBJC_IVAR____TtC7Journal14CanvasGridView_mosaicLayout)
      }
                 + OBJC_IVAR____TtC7Journal12MosaicLayout_skipLayoutInvalidation) = 1;
      uint64_t v24 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridHeightConstraint;
      uint64_t v25 = *(void **)&v2[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridHeightConstraint];
      if (v25)
      {
        uint64_t v26 = *(void **)(v22 + OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView);
        id v27 = v25;
        if (v26)
        {
          id v28 = v26;
          sub_1003BA38C();
          double v30 = v29;
        }
        else
        {
          double v30 = 0.0;
        }
        if (qword_1007F7390 != -1) {
          swift_once();
        }
        [v25 setConstant:v30 - *(double *)&qword_10083D9A0];

        long long v31 = *(void **)&v2[v24];
      }
      else
      {
        long long v31 = 0;
      }
      [v31 setActive:1];
      uint64_t v32 = self;
      uint64_t v33 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v41 = sub_1003F18DC;
      uint64_t v42 = v33;
      uint64_t v37 = _NSConcreteStackBlock;
      uint64_t v38 = 1107296256;
      uint64_t v39 = sub_10017D530;
      uint64_t v40 = &unk_1007A9B28;
      uint64_t v34 = _Block_copy(&v37);
      swift_release();
      uint64_t v35 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v41 = sub_1003F18E4;
      uint64_t v42 = v35;
      uint64_t v37 = _NSConcreteStackBlock;
      uint64_t v38 = 1107296256;
      uint64_t v39 = sub_1001C7318;
      uint64_t v40 = &unk_1007A9B50;
      uint64_t v36 = _Block_copy(&v37);
      swift_release();
      [v32 animateWithDuration:0 delay:v34 options:v36 animations:v6 completion:0.0];
      swift_release();
      _Block_release(v36);
      _Block_release(v34);
    }
  }
}

void sub_1003EEF6C()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (char *)Strong;
    [*(id *)(Strong + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView) layoutIfNeeded];
    [*(id *)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView] layoutIfNeeded];
    uint64_t v2 = &v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_cellDelegate];
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v3 = *((void *)v2 + 1);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v1, ObjectType, v3);
      swift_unknownObjectRelease();
    }
    [v1 invalidateIntrinsicContentSize];
  }
}

uint64_t sub_1003EF04C()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v44 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v43 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchTimeInterval();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (uint64_t *)((char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v41 = *(void *)(v10 - 8);
  uint64_t v42 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v40 = (char *)&v35 - v14;
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    id v16 = (char *)result;
    uint64_t v36 = v3;
    uint64_t v37 = v4;
    uint64_t v38 = v1;
    uint64_t v39 = v0;
    id v17 = *(id *)(result + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_maximumNumberOfLines);
    id v18 = *(id *)(result + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextView);
    id v19 = [v18 textContainer];
    id v20 = [v19 maximumNumberOfLines];

    if (v20 != v17)
    {
      id v21 = [v18 textContainer];
      [v21 setMaximumNumberOfLines:v17];

      [v18 invalidateIntrinsicContentSize];
    }

    id v22 = sub_1003EB884();
    [v22 setActive:0];

    uint64_t v23 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView;
    uint64_t v24 = *(unsigned char **)&v16[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView];
    v24[OBJC_IVAR____TtC7Journal14CanvasGridView_isExpanded] = 0;
    uint64_t v25 = v24;
    sub_10037EB80();

    uint64_t v26 = *(void *)&v16[v23];
    int v27 = *(unsigned __int8 *)(v26 + OBJC_IVAR____TtC7Journal14CanvasGridView_skipLayoutInvalidation);
    *(unsigned char *)(v26 + OBJC_IVAR____TtC7Journal14CanvasGridView_skipLayoutInvalidation) = 0;
    if (v27 == 1) {
      *(unsigned char *)(*(void *)(v26 + OBJC_IVAR____TtC7Journal14CanvasGridView_mosaicLayout)
    }
               + OBJC_IVAR____TtC7Journal12MosaicLayout_skipLayoutInvalidation) = 0;
    [*(id *)&v16[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridHeightConstraint] setActive:0];
    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v16);
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    uint64_t v35 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    *id v9 = 100;
    (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, enum case for DispatchTimeInterval.milliseconds(_:), v6);
    id v28 = v40;
    DispatchTime.advanced(by:)();
    (*(void (**)(void *, uint64_t))(v7 + 8))(v9, v6);
    uint64_t v29 = v42;
    uint64_t v41 = *(void *)(v41 + 8);
    ((void (*)(char *, uint64_t))v41)(v12, v42);
    aBlock[4] = sub_1003EF620;
    aBlock[5] = 0;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    aBlock[3] = &unk_1007A9B78;
    double v30 = _Block_copy(aBlock);
    long long v31 = v43;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_1003F1904((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    sub_10001B1BC();
    uint64_t v32 = v36;
    uint64_t v33 = v39;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    uint64_t v34 = (void *)v35;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v30);

    (*(void (**)(char *, uint64_t))(v38 + 8))(v32, v33);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v37);
    return ((uint64_t (*)(char *, uint64_t))v41)(v28, v29);
  }
  return result;
}

void sub_1003EF620()
{
}

void sub_1003EF648(void *a1)
{
  UIAccessibilityNotifications v1 = UIAccessibilityAnnouncementNotification;
  if (*a1 != -1) {
    swift_once();
  }
  NSString v2 = String._bridgeToObjectiveC()();
  UIAccessibilityPostNotification(v1, v2);
}

uint64_t type metadata accessor for JournalEntryCollectionViewCell()
{
  return self;
}

uint64_t sub_1003EF8D4()
{
  uint64_t v1 = type metadata accessor for Date.FormatStyle.TimeStyle();
  uint64_t v17 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Date.FormatStyle.DateStyle();
  uint64_t v16 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = 0;
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded) & 1) == 0)
  {
    uint64_t v15 = v1;
    uint64_t v12 = *(void *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry);
    if (v12)
    {
      uint64_t v13 = v12 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_date;
      swift_beginAccess();
      (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v13, v7);
      swift_retain();
      static Date.FormatStyle.DateStyle.complete.getter();
      static Date.FormatStyle.TimeStyle.shortened.getter();
      uint64_t v11 = Date.formatted(date:time:)();
      swift_release();
      (*(void (**)(char *, uint64_t))(v17 + 8))(v3, v15);
      (*(void (**)(char *, uint64_t))(v16 + 8))(v6, v4);
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    else
    {
      return 0;
    }
  }
  return v11;
}

uint64_t sub_1003EFBFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v7 = __chkstk_darwin(v6).n128_u64[0];
  uint64_t v9 = (char *)&v43 - v8;
  uint64_t v10 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry;
  uint64_t v11 = *(void *)&v1[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry];
  if (!v11)
  {
    uint64_t v16 = 0;
    uint64_t v14 = 0;
LABEL_6:
    uint64_t v17 = 0;
    uint64_t v18 = 0;
    goto LABEL_9;
  }
  uint64_t v12 = *(void **)(v11 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title);
  if (v12)
  {
    id v13 = [v12 string:v7];
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;

    uint64_t v11 = *(void *)&v1[v10];
    if (!v11) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t v16 = 0;
    uint64_t v14 = 0;
  }
  uint64_t v19 = v11 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_date;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v9, v19, v2);
  static Date.now.getter();
  uint64_t v17 = sub_1002AB594(0, 0, (uint64_t)v5);
  uint64_t v18 = v20;
  id v21 = *(void (**)(char *, uint64_t))(v3 + 8);
  v21(v5, v2);
  v21(v9, v2);
LABEL_9:
  id v22 = (objc_class *)type metadata accessor for JournalEntryCollectionViewCell();
  v46.id receiver = v1;
  v46.Class super_class = v22;
  id v23 = [super accessibilityUserInputLabels];
  if (!v23)
  {
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
    return result;
  }
  uint64_t v24 = v23;
  uint64_t v25 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  sub_100010218((uint64_t *)&unk_10080C370);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D7C30;
  *(void *)(inited + 32) = v14;
  *(void *)(inited + 40) = v16;
  *(void *)(inited + 48) = v17;
  *(void *)(inited + 56) = v18;
  id v27 = [v1 accessibilityLabel];
  if (v27)
  {
    id v28 = v27;
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v31 = v30;

    *(void *)(inited + 64) = v29;
    *(void *)(inited + 72) = v31;
    if (v16) {
      goto LABEL_12;
    }
  }
  else
  {
    uint64_t v29 = 0;
    uint64_t v31 = 0;
    *(void *)(inited + 64) = 0;
    *(void *)(inited + 72) = 0;
    if (v16)
    {
LABEL_12:
      uint64_t v44 = v18;
      swift_bridgeObjectRetain();
      uint64_t v32 = sub_1002A54A0(0, 1, 1, (char *)_swiftEmptyArrayStorage);
      unint64_t v34 = *((void *)v32 + 2);
      unint64_t v33 = *((void *)v32 + 3);
      if (v34 >= v33 >> 1) {
        uint64_t v32 = sub_1002A54A0((char *)(v33 > 1), v34 + 1, 1, v32);
      }
      *((void *)v32 + 2) = v34 + 1;
      uint64_t v35 = &v32[16 * v34];
      *((void *)v35 + 4) = v14;
      *((void *)v35 + 5) = v16;
      uint64_t v18 = v44;
      if (!v44) {
        goto LABEL_23;
      }
      goto LABEL_18;
    }
  }
  uint64_t v32 = (char *)_swiftEmptyArrayStorage;
  if (v18)
  {
LABEL_18:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v32 = sub_1002A54A0(0, *((void *)v32 + 2) + 1, 1, v32);
    }
    unint64_t v37 = *((void *)v32 + 2);
    unint64_t v36 = *((void *)v32 + 3);
    if (v37 >= v36 >> 1) {
      uint64_t v32 = sub_1002A54A0((char *)(v36 > 1), v37 + 1, 1, v32);
    }
    *((void *)v32 + 2) = v37 + 1;
    uint64_t v38 = &v32[16 * v37];
    *((void *)v38 + 4) = v17;
    *((void *)v38 + 5) = v18;
  }
LABEL_23:
  if (v31)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v32 = sub_1002A54A0(0, *((void *)v32 + 2) + 1, 1, v32);
    }
    unint64_t v40 = *((void *)v32 + 2);
    unint64_t v39 = *((void *)v32 + 3);
    if (v40 >= v39 >> 1) {
      uint64_t v32 = sub_1002A54A0((char *)(v39 > 1), v40 + 1, 1, v32);
    }
    *((void *)v32 + 2) = v40 + 1;
    uint64_t v41 = &v32[16 * v40];
    *((void *)v41 + 4) = v29;
    *((void *)v41 + 5) = v31;
  }
  swift_release();
  uint64_t v45 = v25;
  sub_1000C8C2C((uint64_t)v32);
  return v45;
}

id sub_1003F0194(void *a1, uint64_t a2, void (*a3)(void))
{
  id v4 = a1;
  a3();
  uint64_t v6 = v5;

  if (v6)
  {
    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v7 = 0;
  }

  return v7;
}

uint64_t sub_1003F0214()
{
  if ((*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded) & 1) != 0
    || !*(void *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry))
  {
    return 0;
  }
  swift_retain();
  if (sub_10018ACD8())
  {
    if (qword_1007F7A48 != -1) {
      swift_once();
    }
    uint64_t v1 = &xmmword_10083E638;
  }
  else
  {
    if (qword_1007F7A50 != -1) {
      swift_once();
    }
    uint64_t v1 = &xmmword_10083E648;
  }
  uint64_t v2 = *(void *)v1;
  swift_bridgeObjectRetain();
  swift_release();
  return v2;
}

uint64_t sub_1003F0388()
{
  uint64_t v1 = (uint64_t)_swiftEmptyArrayStorage;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded)) {
    return v1;
  }
  uint64_t v2 = v0;
  uint64_t v3 = sub_100009BD0();
  id v48 = v3;
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry);
  if (v4)
  {
    uint64_t v5 = v3;
    uint64_t v6 = (unint64_t *)(v4 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
    swift_beginAccess();
    unint64_t v7 = *v6;
    if (v7 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v37 >= 6) {
        goto LABEL_5;
      }
    }
    else if (*(uint64_t *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10) >= 6)
    {
LABEL_5:
      if (qword_1007F7AF0 != -1) {
        swift_once();
      }
      uint64_t v8 = swift_allocObject();
      swift_unknownObjectWeakInit();
      id v9 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
      swift_bridgeObjectRetain();
      swift_retain();
      NSString v10 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      unint64_t v46 = (unint64_t)sub_1003F18D4;
      uint64_t v47 = v8;
      unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
      uint64_t v43 = 1107296256;
      uint64_t v44 = sub_1005D2A64;
      uint64_t v45 = (ValueMetadata *)&unk_1007A9B00;
      uint64_t v11 = _Block_copy(&aBlock);
      id v12 = [v9 initWithName:v10 actionHandler:v11];

      _Block_release(v11);
      swift_release();
      swift_release();
      if ((unint64_t)v5 >> 62)
      {
        id v38 = v12;
        swift_bridgeObjectRetain();
        uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
        uint64_t result = swift_bridgeObjectRelease();
        if (v39 < 0)
        {
          __break(1u);
          return result;
        }
      }
      else
      {
        id v13 = v12;
      }
      sub_1000F3BBC(0, 0, (uint64_t)v12);
    }
  }
  uint64_t v45 = &type metadata for JournalFeatureFlags;
  unint64_t v46 = sub_10005F364();
  LOBYTE(aBlock) = 9;
  char v14 = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&aBlock);
  if ((v14 & 1) == 0) {
    goto LABEL_17;
  }
  if (qword_1007F7548 != -1) {
    goto LABEL_51;
  }
  while (1)
  {
    uint64_t v15 = qword_1007F7B60;
    swift_bridgeObjectRetain();
    if (v15 != -1) {
      swift_once();
    }
    uint64_t v16 = (void *)qword_10083E848;
    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v18 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
    id v19 = v16;
    swift_retain();
    NSString v20 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unint64_t v46 = (unint64_t)sub_1003F18CC;
    uint64_t v47 = v17;
    unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
    uint64_t v43 = 1107296256;
    uint64_t v44 = sub_1005D2A64;
    uint64_t v45 = (ValueMetadata *)&unk_1007A9AD8;
    id v21 = _Block_copy(&aBlock);
    [v18 initWithName:v20 image:v19 actionHandler:v21];

    _Block_release(v21);
    swift_release();
    swift_release();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v48 & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
LABEL_17:
    uint64_t v2 = *(void *)(v2 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_optionalChinActions);
    unint64_t aBlock = v1;
    if ((unint64_t)v2 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v1 = _CocoaArrayWrapper.endIndex.getter();
      if (!v1)
      {
LABEL_32:
        swift_bridgeObjectRelease();
        unint64_t v25 = (unint64_t)_swiftEmptyArrayStorage;
        goto LABEL_33;
      }
    }
    else
    {
      uint64_t v1 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
      if (!v1) {
        goto LABEL_32;
      }
    }
    if (v1 < 1)
    {
      __break(1u);
      goto LABEL_50;
    }
    for (uint64_t i = 0; i != v1; ++i)
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v23 = *(id *)(v2 + 8 * i + 32);
      }
      uint64_t v24 = v23;
      self;
      if (swift_dynamicCastObjCClass())
      {
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((aBlock & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized Array._endMutation()();
      }
      else
      {
      }
    }
    swift_bridgeObjectRelease();
    unint64_t v25 = aBlock;
LABEL_33:
    swift_bridgeObjectRelease();
    if (v25 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (!v2) {
        goto LABEL_45;
      }
    }
    else
    {
      uint64_t v2 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v2) {
        goto LABEL_45;
      }
    }
    if (v2 >= 1) {
      break;
    }
LABEL_50:
    __break(1u);
LABEL_51:
    swift_once();
  }
  uint64_t v26 = 0;
  unint64_t v40 = &v44;
  unint64_t v41 = v25 & 0xC000000000000001;
  id v27 = (double *)v25;
  do
  {
    if (v41) {
      id v28 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v28 = *(id *)(v25 + 8 * v26 + 32);
    }
    uint64_t v29 = v28;
    id v30 = [v28 title:v40];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v31 = [v29 image];
    uint64_t v32 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v33 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
    swift_retain();
    NSString v34 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unint64_t v46 = (unint64_t)sub_1003F18AC;
    uint64_t v47 = v32;
    unint64_t aBlock = (unint64_t)_NSConcreteStackBlock;
    uint64_t v43 = 1107296256;
    uint64_t v44 = sub_1005D2A64;
    uint64_t v45 = (ValueMetadata *)&unk_1007A9A88;
    uint64_t v35 = _Block_copy(&aBlock);
    [v33 initWithName:v34 image:v31 actionHandler:v35];

    _Block_release(v35);
    swift_release();
    swift_release();
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)(((unint64_t)v48 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)v48 & 0xFFFFFFFFFFFFFF8)
                                                                                        + 0x18) >> 1)
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    ++v26;
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();

    unint64_t v25 = (unint64_t)v27;
  }
  while (v2 != v26);
LABEL_45:
  swift_bridgeObjectRelease();
  return (uint64_t)v48;
}

uint64_t sub_1003F0BA8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    return 0;
  }
  uint64_t v1 = (void *)Strong;
  int v2 = *(unsigned __int8 *)(Strong + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded);
  if ((v2 & 1) == 0)
  {
    sub_1003EE24C(0, 1);
    UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v1);
  }
  uint64_t v3 = v2 ^ 1u;

  return v3;
}

uint64_t sub_1003F0C38()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    if (*(void *)(result + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry))
    {
      uint64_t v2 = result + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_actionDelegate;
      if (swift_unknownObjectWeakLoadStrong())
      {
        uint64_t v3 = *(void *)(v2 + 8);
        uint64_t ObjectType = swift_getObjectType();
        uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32);
        uint64_t v6 = swift_retain();
        v5(v6, ObjectType, v3);

        swift_release();
        swift_unknownObjectRelease();
      }
      else
      {
      }
      return 1;
    }
    else
    {

      return 0;
    }
  }
  return result;
}

uint64_t sub_1003F0D24()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [Strong performWithSender:0 target:0];
  }
  return 1;
}

id sub_1003F0D8C()
{
  if (!*(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry]) {
    return [*(id *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView] accessibilityActivate];
  }
  swift_retain();
  BOOL v1 = sub_10018ACD8();
  swift_release();
  if (v1) {
    return [*(id *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView] accessibilityActivate];
  }
  if (v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded]) {
    return 0;
  }
  uint64_t v2 = 1;
  sub_1003EE24C(0, 1);
  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v0);
  return (id)v2;
}

id sub_1003F0EC0()
{
  [*(id *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView] layoutIfNeeded];
  [v0 invalidateIntrinsicContentSize];

  return [v0 invalidateIntrinsicContentSize];
}

uint64_t sub_1003F0F20()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_actionDelegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 8);
    uint64_t v6 = swift_retain();
    v5(v6, ObjectType, v3);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1003F0FE4(uint64_t a1, char a2)
{
  uint64_t v4 = v2 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_actionDelegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v6 = *(void *)(v4 + 8);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v8 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 16);
    uint64_t v9 = swift_retain();
    v8(v9, a2 & 1, ObjectType, v6);
    swift_release();
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1003F10B0(uint64_t a1)
{
  uint64_t v3 = v1 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_actionDelegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v5 = *(void *)(v3 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(a1, ObjectType, v5);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1003F1140()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_actionDelegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 40))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1003F11B8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_actionDelegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 48))(ObjectType, v3);
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1003F12F4(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v5 = sub_1003EB92C();
  sub_10001B284(0, (unint64_t *)&qword_10080C350);
  char v6 = static NSObject.== infix(_:_:)();

  if ((v6 & 1) == 0) {
    return 0;
  }
  id v7 = [a2 view];
  if (!v7) {
    return 0;
  }
  uint64_t v8 = v7;
  uint64_t v9 = *(void **)(v3 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_platterView);
  sub_10001B284(0, (unint64_t *)&qword_100802730);
  id v10 = v9;
  id v11 = v8;
  char v12 = static NSObject.== infix(_:_:)();

  return v12 & 1;
}

double sub_1003F14A8()
{
  double v1 = 0.0;
  if ([v0 accessibilityContainer])
  {
    self;
    uint64_t v2 = (UIView *)swift_dynamicCastObjCClass();
    if (v2)
    {
      uint64_t v3 = v2;
      [(UIView *)v2 bounds];
      CGFloat v5 = v4;
      CGFloat v7 = v6;
      CGFloat v9 = v8;
      CGFloat v11 = v10;
      UIUserInterfaceLayoutDirection v12 = [(UIView *)v3 effectiveUserInterfaceLayoutDirection];
      CGFloat v13 = 8.0;
      if (v12 == UIUserInterfaceLayoutDirectionLeftToRight)
      {
        v18.origin.x = v5;
        v18.origin.y = v7;
        v18.size.width = v9;
        v18.size.height = v11;
        CGFloat v13 = CGRectGetWidth(v18) + -41.0;
      }
      uint64_t v14 = 0x4040800000000000;
      double v15 = 8.0;
      uint64_t v16 = 0x4040800000000000;
      *(void *)&double v1 = (unint64_t)UIAccessibilityConvertFrameToScreenCoordinates(*(CGRect *)&v13, v3);
      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  return v1;
}

id sub_1003F1808()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for JournalEntryCollectionViewCell.CollapseAffordanceAccessibilityElement();
  return [super dealloc];
}

uint64_t type metadata accessor for JournalEntryCollectionViewCell.CollapseAffordanceAccessibilityElement()
{
  return self;
}

uint64_t sub_1003F1874()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1003F18AC()
{
  return sub_1003F0D24();
}

uint64_t sub_1003F18B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003F18C4()
{
  return swift_release();
}

uint64_t sub_1003F18CC()
{
  return sub_1003F0C38();
}

uint64_t sub_1003F18D4()
{
  return sub_1003F0BA8();
}

void sub_1003F18DC()
{
}

uint64_t sub_1003F18E4()
{
  return sub_1003EF04C();
}

void sub_1003F18EC()
{
}

void *sub_1003F18F4()
{
  return sub_1003EE690();
}

id sub_1003F18FC()
{
  return sub_1003ECAFC();
}

uint64_t sub_1003F1904(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1003F194C()
{
  swift_weakInit();
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_cellDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_actionDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded] = 0;
  uint64_t v1 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_contentStackView;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v2 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_topContentMaskView;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v3 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetStackView;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v4 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_textStackView;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIStackView) init];
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_reflectionPromptView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_photoMemoriesBannerView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_slimAssetView] = 0;
  uint64_t v5 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView;
  type metadata accessor for CanvasGridView();
  *(void *)&v0[v5] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridHeightConstraint] = 0;
  uint64_t v6 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextContainerView;
  *(void *)&v0[v6] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v7 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_entryTextView;
  type metadata accessor for TimelineTextView();
  *(void *)&v0[v7] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v8 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_bundleTitle;
  type metadata accessor for TimelineMomentsTitleView();
  *(void *)&v0[v8] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v9 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_gridMargin;
  if (qword_1007F7390 != -1) {
    swift_once();
  }
  *(void *)&v0[v9] = qword_10083D9A0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_textViewMarginNoAssets] = 0x4030000000000000;
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_unsupportedEntryCellHeight] = 0x4069000000000000;
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_unsupportedEntryView] = 0;
  uint64_t v10 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_menuSwipeView;
  type metadata accessor for EntrySwipeMenuView();
  *(void *)&v0[v10] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v11 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_platterView;
  type metadata accessor for PlatterBackgroundEffectView();
  *(void *)&v0[v11] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_contextMenuInteraction] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___textMaskViewHeightConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___textViewTapGesture] = 0;
  uint64_t v12 = OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_chinView;
  type metadata accessor for JournalEntryCellChinView();
  *(void *)&v0[v12] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_optionalChinActions] = _swiftEmptyArrayStorage;
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_collapseAffordanceAccessibilityElement] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_maximumNumberOfLines] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_numCollapsedLinesWithAssets] = 5;
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_numCollapsedLinesNoAssets] = 10;
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___bookmarkButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___editButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell____lazy_storage___deleteButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_journalEntry] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1003F1CB0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_cellDelegate;
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v2 = *(void *)(v1 + 8);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v2 + 40))(ObjectType, v2);
    swift_unknownObjectRelease();
  }
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_isExpanded) == 1)
  {
    sub_1003EEB38(0);
  }
  else
  {
    sub_1003EE24C(0, 1);
  }
}

uint64_t sub_1003F1D6C()
{
  return swift_deallocObject();
}

uint64_t sub_1003F1DF8(uint64_t a1)
{
  unint64_t v3 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v3 = sub_1002A6E68(0, *(void *)(v3 + 16) + 1, 1, v3);
  }
  unint64_t v5 = *(void *)(v3 + 16);
  unint64_t v4 = *(void *)(v3 + 24);
  if (v5 >= v4 >> 1) {
    unint64_t v3 = sub_1002A6E68(v4 > 1, v5 + 1, 1, v3);
  }
  *(void *)(v3 + 16) = v5 + 1;
  uint64_t v6 = *(void *)(type metadata accessor for PendingPhotoAsset(0) - 8);
  uint64_t result = sub_10040A9FC(a1, v3+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v5, type metadata accessor for PendingPhotoAsset);
  *uint64_t v1 = v3;
  return result;
}

uint64_t sub_1003F1F08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100237318();
  if (v6) {
    goto LABEL_9;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_9:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    return sub_1003FBEA0(result, v5, a1, a2);
  }
  return result;
}

uint64_t sub_1003F1F90(uint64_t a1)
{
  return sub_1003F22E4(a1, (unint64_t *)&qword_10080CF00);
}

uint64_t sub_1003F1FA4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100237318();
  if (v6) {
    goto LABEL_10;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    uint64_t v7 = type metadata accessor for DatePickerDataProvider.MediaDate();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }
  else
  {
    sub_1003FBEF8(result, v5, a1, a2);
    uint64_t v12 = type metadata accessor for DatePickerDataProvider.MediaDate();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v9 = v12;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }

  return v8(v10, v11, 1, v9);
}

uint64_t sub_1003F2088@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for LayoutSubviews();
  sub_10040DB58((unint64_t *)&qword_10080C8B8, (void (*)(uint64_t))&type metadata accessor for LayoutSubviews);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  if (v9[4] == v9[0])
  {
    uint64_t v2 = type metadata accessor for LayoutSubview();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    unint64_t v4 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v6 = v5;
    uint64_t v7 = type metadata accessor for LayoutSubview();
    uint64_t v8 = *(void *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v6, v7);
    v4(v9, 0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
}

unint64_t sub_1003F2224(unint64_t result)
{
  unint64_t v1 = result;
  if (!(result >> 62))
  {
    if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_3;
    }
    return 0;
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2) {
    return 0;
  }
LABEL_3:
  if ((v1 & 0xC000000000000001) != 0) {
    return specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  if (*(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    return (unint64_t)*(id *)(v1 + 32);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003F22BC(uint64_t a1)
{
  return sub_1003F22E4(a1, &qword_1008095F8);
}

uint64_t sub_1003F22D0(uint64_t a1)
{
  return sub_1003F22E4(a1, &qword_10080C768);
}

uint64_t sub_1003F22E4(uint64_t a1, unint64_t *a2)
{
  unint64_t v4 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v5 = __CocoaSet.startIndex.getter();
    uint64_t v7 = v6;
    __CocoaSet.endIndex.getter();
    char v8 = static __CocoaSet.Index.== infix(_:_:)();
    swift_bridgeObjectRelease();
    if (v8)
    {
LABEL_3:
      sub_1000733B8(v5, v7, v4 != 0);
      return 0;
    }
LABEL_7:
    sub_1003FBFA8(v5, v7, v4 != 0, a1, a2);
    uint64_t v9 = v13;
    sub_1000733B8(v5, v7, v4 != 0);
    return v9;
  }
  uint64_t result = sub_1003FC218(a1);
  if ((v12 & 1) == 0)
  {
    uint64_t v7 = v11;
    if (*(_DWORD *)(a1 + 36) == v11)
    {
      uint64_t v5 = result;
      if (result == 1 << *(unsigned char *)(a1 + 32)) {
        goto LABEL_3;
      }
      goto LABEL_7;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1003F240C@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for SubviewsCollection();
  sub_10040DB58(&qword_10080C8C0, (void (*)(uint64_t))&type metadata accessor for SubviewsCollection);
  dispatch thunk of Collection.startIndex.getter();
  dispatch thunk of Collection.endIndex.getter();
  if (v9[4] == v9[0])
  {
    uint64_t v2 = type metadata accessor for Subview();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    unint64_t v4 = (void (*)(void *, void))dispatch thunk of Collection.subscript.read();
    uint64_t v6 = v5;
    uint64_t v7 = type metadata accessor for Subview();
    uint64_t v8 = *(void *)(v7 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(a1, v6, v7);
    v4(v9, 0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
}

uint64_t sub_1003F25A8(unint64_t a1)
{
  if (!(a1 >> 62)) {
    return *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRetain();
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  return v2;
}

double sub_1003F2608@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  if (*(void *)(a2 + 16) && (unint64_t v5 = sub_10001B738(a1), (v6 & 1) != 0))
  {
    uint64_t v7 = *(void *)(a2 + 56) + 32 * v5;
    sub_10001B648(v7, (uint64_t)a3);
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

uint64_t sub_1003F266C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9D70);
  *(void *)&double v4 = __chkstk_darwin(v3).n128_u64[0];
  char v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16StateOfMindAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v8)
  {
    id v9 = [v8 assetMetaData:v4];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      *char v6 = v11;
      v6[1] = v13;
      swift_storeEnumTagMultiPayload();
      sub_100010218(&qword_1007FBEC8);
      uint64_t v14 = swift_allocObject();
      uint64_t v15 = v14 + *(void *)(*(void *)v14 + 104);
      uint64_t v16 = sub_100010218((uint64_t *)&unk_100807640);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
      *(_OWORD *)(v14 + *(void *)(*(void *)v14 + 112)) = xmmword_1006D6A80;
      sub_10002C4EC((uint64_t)v6, v14 + *(void *)(*(void *)v14 + 120), &qword_1007F9D70);
      *(void *)(v1 + v7) = v14;
      swift_release();
    }
  }
  if (*(void *)(v1 + v7))
  {
LABEL_6:
    swift_retain();
    sub_100039278(a1);
    return swift_release();
  }
  else
  {
    uint64_t v18 = _s16StateOfMindAssetC15StateOfMindDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
}

uint64_t sub_1003F2894@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9E28);
  *(void *)&double v4 = __chkstk_darwin(v3).n128_u64[0];
  char v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = OBJC_IVAR____TtCC7Journal10Journaling10AudioAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling10AudioAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v8)
  {
    id v9 = [v8 assetMetaData:v4];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      *char v6 = v11;
      v6[1] = v13;
      swift_storeEnumTagMultiPayload();
      sub_100010218(&qword_1007FE8E0);
      uint64_t v14 = swift_allocObject();
      uint64_t v15 = v14 + *(void *)(*(void *)v14 + 104);
      uint64_t v16 = sub_100010218(&qword_1007F9E38);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
      *(_OWORD *)(v14 + *(void *)(*(void *)v14 + 112)) = xmmword_1006D6A80;
      sub_10002C4EC((uint64_t)v6, v14 + *(void *)(*(void *)v14 + 120), &qword_1007F9E28);
      *(void *)(v1 + v7) = v14;
      swift_release();
    }
  }
  if (*(void *)(v1 + v7))
  {
LABEL_6:
    swift_retain();
    sub_10003AC18(a1);
    return swift_release();
  }
  else
  {
    uint64_t v18 = _s10AudioAssetC9AudioDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
}

id sub_1003F2ABC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = OBJC_IVAR____TtCC7Journal10Journaling15ReflectionAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling15ReflectionAsset_metadata)) {
    goto LABEL_6;
  }
  id result = *(id *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (result)
  {
    id result = [result assetMetaData];
    if (result)
    {
      uint64_t v5 = result;
      uint64_t v6 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v8 = v7;

      sub_100010218(&qword_1008047E8);
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 24) = 0;
      *(void *)(v9 + 32) = 0;
      *(void *)(v9 + 16) = 0;
      *(void *)(v9 + 80) = 0;
      *(void *)(v9 + 88) = 0;
      *(void *)(v9 + 64) = v6;
      *(void *)(v9 + 72) = v8;
      *(unsigned char *)(v9 + 96) = 0;
      *(_OWORD *)(v9 + 40) = xmmword_1006DF8C0;
      *(void *)(v9 + 56) = 0xB000000000000000;
      *(void *)(v1 + v3) = v9;
      id result = (id)swift_release();
    }
  }
  if (*(void *)(v1 + v3))
  {
LABEL_6:
    swift_retain();
    sub_10003AF4C(a1);
    return (id)swift_release();
  }
  else
  {
    *a1 = 0;
    a1[1] = 0;
    a1[2] = 0;
    a1[3] = 0xB000000000000000;
  }
  return result;
}

uint64_t sub_1003F2BE0()
{
  uint64_t v1 = OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata;
  if (*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v2)
  {
    id v3 = [v2 assetMetaData];
    if (v3)
    {
      double v4 = v3;
      uint64_t v5 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v7 = v6;

      sub_100010218(&qword_1007F9E20);
      uint64_t v8 = swift_allocObject();
      *(void *)(v8 + 64) = v5;
      *(void *)(v8 + 72) = v7;
      *(void *)(v8 + 80) = 0;
      *(_WORD *)(v8 + 88) = 0;
      *(void *)(v8 + 24) = 0;
      *(void *)(v8 + 32) = 0;
      *(void *)(v8 + 16) = 2;
      *(unsigned char *)(v8 + 40) = 0;
      *(_OWORD *)(v8 + 48) = xmmword_1006D6A80;
      *(void *)(v0 + v1) = v8;
      swift_release();
    }
  }
  if (!*(void *)(v0 + v1)) {
    return 1;
  }
LABEL_6:
  swift_retain();
  uint64_t v9 = sub_100039114();
  swift_release();
  return v9;
}

uint64_t sub_1003F2D04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9DA8);
  *(void *)&double v4 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = OBJC_IVAR____TtCC7Journal10Journaling15GenericMapAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling15GenericMapAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v8)
  {
    id v9 = [v8 assetMetaData:v4];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      *uint64_t v6 = v11;
      v6[1] = v13;
      swift_storeEnumTagMultiPayload();
      sub_100010218(&qword_100803330);
      uint64_t v14 = swift_allocObject();
      uint64_t v15 = v14 + *(void *)(*(void *)v14 + 104);
      uint64_t v16 = sub_100010218(&qword_1007F9DB8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
      *(_OWORD *)(v14 + *(void *)(*(void *)v14 + 112)) = xmmword_1006D6A80;
      sub_10002C4EC((uint64_t)v6, v14 + *(void *)(*(void *)v14 + 120), &qword_1007F9DA8);
      *(void *)(v1 + v7) = v14;
      swift_release();
    }
  }
  if (*(void *)(v1 + v7))
  {
LABEL_6:
    swift_retain();
    sub_10003B080(a1);
    return swift_release();
  }
  else
  {
    uint64_t v18 = _s15GenericMapAssetC14GenericMapDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
}

uint64_t sub_1003F2F2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_10080F2C0);
  *(void *)&double v4 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v8)
  {
    id v9 = [v8 assetMetaData:v4];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      *uint64_t v6 = v11;
      v6[1] = v13;
      swift_storeEnumTagMultiPayload();
      sub_100010218((uint64_t *)&unk_10080F2E0);
      uint64_t v14 = swift_allocObject();
      uint64_t v15 = v14 + *(void *)(*(void *)v14 + 104);
      uint64_t v16 = sub_100010218((uint64_t *)&unk_100804080);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
      *(_OWORD *)(v14 + *(void *)(*(void *)v14 + 112)) = xmmword_1006D6A80;
      sub_10002C4EC((uint64_t)v6, v14 + *(void *)(*(void *)v14 + 120), (uint64_t *)&unk_10080F2C0);
      *(void *)(v1 + v7) = v14;
      swift_release();
    }
  }
  if (*(void *)(v1 + v7))
  {
LABEL_6:
    swift_retain();
    sub_1000395AC(a1);
    return swift_release();
  }
  else
  {
    uint64_t v18 = _s10PhotoAssetC9PhotoDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
}

uint64_t sub_1003F3154@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_10080F2A0);
  *(void *)&double v4 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v8)
  {
    id v9 = [v8 assetMetaData:v4];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      *uint64_t v6 = v11;
      v6[1] = v13;
      swift_storeEnumTagMultiPayload();
      sub_100010218((uint64_t *)&unk_10080F2D0);
      uint64_t v14 = swift_allocObject();
      uint64_t v15 = v14 + *(void *)(*(void *)v14 + 104);
      uint64_t v16 = sub_100010218(&qword_1007F9E10);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
      *(_OWORD *)(v14 + *(void *)(*(void *)v14 + 112)) = xmmword_1006D6A80;
      sub_10002C4EC((uint64_t)v6, v14 + *(void *)(*(void *)v14 + 120), (uint64_t *)&unk_10080F2A0);
      *(void *)(v1 + v7) = v14;
      swift_release();
    }
  }
  if (*(void *)(v1 + v7))
  {
LABEL_6:
    swift_retain();
    sub_100039C14(a1);
    return swift_release();
  }
  else
  {
    uint64_t v18 = _s10VideoAssetC9VideoDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
}

uint64_t sub_1003F337C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_10080F2B0);
  *(void *)&double v4 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v8)
  {
    id v9 = [v8 assetMetaData:v4];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      *uint64_t v6 = v11;
      v6[1] = v13;
      swift_storeEnumTagMultiPayload();
      sub_100010218(&qword_1007F99C0);
      uint64_t v14 = swift_allocObject();
      uint64_t v15 = v14 + *(void *)(*(void *)v14 + 104);
      uint64_t v16 = sub_100010218((uint64_t *)&unk_100804090);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
      *(_OWORD *)(v14 + *(void *)(*(void *)v14 + 112)) = xmmword_1006D6A80;
      sub_10002C4EC((uint64_t)v6, v14 + *(void *)(*(void *)v14 + 120), (uint64_t *)&unk_10080F2B0);
      *(void *)(v1 + v7) = v14;
      swift_release();
    }
  }
  if (*(void *)(v1 + v7))
  {
LABEL_6:
    swift_retain();
    sub_1000398E0(a1);
    return swift_release();
  }
  else
  {
    uint64_t v18 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
}

uint64_t sub_1003F35A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9F58);
  *(void *)&double v4 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = OBJC_IVAR____TtCC7Journal10Journaling9LinkAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling9LinkAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v8)
  {
    id v9 = [v8 assetMetaData:v4];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      *uint64_t v6 = v11;
      v6[1] = v13;
      swift_storeEnumTagMultiPayload();
      sub_100010218(&qword_1007FD3B8);
      uint64_t v14 = swift_allocObject();
      uint64_t v15 = v14 + *(void *)(*(void *)v14 + 104);
      uint64_t v16 = sub_100010218(&qword_1007F9F68);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
      *(_OWORD *)(v14 + *(void *)(*(void *)v14 + 112)) = xmmword_1006D6A80;
      sub_10002C4EC((uint64_t)v6, v14 + *(void *)(*(void *)v14 + 120), &qword_1007F9F58);
      *(void *)(v1 + v7) = v14;
      swift_release();
    }
  }
  if (*(void *)(v1 + v7))
  {
LABEL_6:
    swift_retain();
    sub_10003BD50(a1);
    return swift_release();
  }
  else
  {
    uint64_t v18 = _s9LinkAssetC8LinkDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
}

uint64_t sub_1003F37CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9DC8);
  *(void *)&double v4 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = OBJC_IVAR____TtCC7Journal10Journaling20ThirdPartyMediaAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling20ThirdPartyMediaAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v8)
  {
    id v9 = [v8 assetMetaData:v4];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      *uint64_t v6 = v11;
      v6[1] = v13;
      swift_storeEnumTagMultiPayload();
      sub_100010218(&qword_10080A228);
      uint64_t v14 = swift_allocObject();
      uint64_t v15 = v14 + *(void *)(*(void *)v14 + 104);
      uint64_t v16 = sub_100010218(&qword_1007F9DD8);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
      *(_OWORD *)(v14 + *(void *)(*(void *)v14 + 112)) = xmmword_1006D6A80;
      sub_10002C4EC((uint64_t)v6, v14 + *(void *)(*(void *)v14 + 120), &qword_1007F9DC8);
      *(void *)(v1 + v7) = v14;
      swift_release();
    }
  }
  if (*(void *)(v1 + v7))
  {
LABEL_6:
    swift_retain();
    sub_10003A8E4(a1);
    return swift_release();
  }
  else
  {
    uint64_t v18 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
}

uint64_t sub_1003F39F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9ED0);
  *(void *)&double v4 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = OBJC_IVAR____TtCC7Journal10Journaling12ContactAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling12ContactAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v8)
  {
    id v9 = [v8 assetMetaData:v4];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      *uint64_t v6 = v11;
      v6[1] = v13;
      swift_storeEnumTagMultiPayload();
      sub_100010218(&qword_1007FDB18);
      uint64_t v14 = swift_allocObject();
      uint64_t v15 = v14 + *(void *)(*(void *)v14 + 104);
      uint64_t v16 = sub_100010218(&qword_1007F9EE0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
      *(_OWORD *)(v14 + *(void *)(*(void *)v14 + 112)) = xmmword_1006D6A80;
      sub_10002C4EC((uint64_t)v6, v14 + *(void *)(*(void *)v14 + 120), &qword_1007F9ED0);
      *(void *)(v1 + v7) = v14;
      swift_release();
    }
  }
  if (*(void *)(v1 + v7))
  {
LABEL_6:
    swift_retain();
    sub_10003C084(a1);
    return swift_release();
  }
  else
  {
    uint64_t v18 = _s12ContactAssetC11ContactDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
}

uint64_t sub_1003F3C1C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9EA0);
  *(void *)&double v4 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = OBJC_IVAR____TtCC7Journal10Journaling16WorkoutIconAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16WorkoutIconAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v8)
  {
    id v9 = [v8 assetMetaData:v4];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      *uint64_t v6 = v11;
      v6[1] = v13;
      swift_storeEnumTagMultiPayload();
      sub_100010218(&qword_10080C758);
      uint64_t v14 = swift_allocObject();
      uint64_t v15 = v14 + *(void *)(*(void *)v14 + 104);
      uint64_t v16 = sub_100010218(&qword_1007F9EB0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
      *(_OWORD *)(v14 + *(void *)(*(void *)v14 + 112)) = xmmword_1006D6A80;
      sub_10002C4EC((uint64_t)v6, v14 + *(void *)(*(void *)v14 + 120), &qword_1007F9EA0);
      *(void *)(v1 + v7) = v14;
      swift_release();
    }
  }
  if (*(void *)(v1 + v7))
  {
LABEL_6:
    swift_retain();
    sub_10003B3B4(a1);
    return swift_release();
  }
  else
  {
    uint64_t v18 = _s16WorkoutIconAssetC15WorkoutIconDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
}

uint64_t sub_1003F3E44@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_10080E8E0);
  *(void *)&double v4 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = OBJC_IVAR____TtCC7Journal10Journaling17WorkoutRouteAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling17WorkoutRouteAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v8)
  {
    id v9 = [v8 assetMetaData:v4];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      *uint64_t v6 = v11;
      v6[1] = v13;
      swift_storeEnumTagMultiPayload();
      sub_100010218(&qword_10080C760);
      uint64_t v14 = swift_allocObject();
      uint64_t v15 = v14 + *(void *)(*(void *)v14 + 104);
      uint64_t v16 = sub_100010218((uint64_t *)&unk_10080E8F0);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
      *(_OWORD *)(v14 + *(void *)(*(void *)v14 + 112)) = xmmword_1006D6A80;
      sub_10002C4EC((uint64_t)v6, v14 + *(void *)(*(void *)v14 + 120), (uint64_t *)&unk_10080E8E0);
      *(void *)(v1 + v7) = v14;
      swift_release();
    }
  }
  if (*(void *)(v1 + v7))
  {
LABEL_6:
    swift_retain();
    sub_10003B6E8(a1);
    return swift_release();
  }
  else
  {
    uint64_t v18 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
}

uint64_t sub_1003F406C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9D88);
  *(void *)&double v4 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = OBJC_IVAR____TtCC7Journal10Journaling19MotionActivityAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling19MotionActivityAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v8)
  {
    id v9 = [v8 assetMetaData:v4];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      *uint64_t v6 = v11;
      v6[1] = v13;
      swift_storeEnumTagMultiPayload();
      sub_100010218(&qword_1007FE388);
      uint64_t v14 = swift_allocObject();
      uint64_t v15 = v14 + *(void *)(*(void *)v14 + 104);
      uint64_t v16 = sub_100010218(&qword_1007F9D98);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
      *(_OWORD *)(v14 + *(void *)(*(void *)v14 + 112)) = xmmword_1006D6A80;
      sub_10002C4EC((uint64_t)v6, v14 + *(void *)(*(void *)v14 + 120), &qword_1007F9D88);
      *(void *)(v1 + v7) = v14;
      swift_release();
    }
  }
  if (*(void *)(v1 + v7))
  {
LABEL_6:
    swift_retain();
    sub_10003BA1C(a1);
    return swift_release();
  }
  else
  {
    uint64_t v18 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
}

uint64_t sub_1003F4294@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9E48);
  *(void *)&double v4 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v6 = (uint64_t *)((char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = OBJC_IVAR____TtCC7Journal10Journaling10MusicAsset_metadata;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling10MusicAsset_metadata)) {
    goto LABEL_6;
  }
  uint64_t v8 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
  if (v8)
  {
    id v9 = [v8 assetMetaData:v4];
    if (v9)
    {
      uint64_t v10 = v9;
      uint64_t v11 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v13 = v12;

      *uint64_t v6 = v11;
      v6[1] = v13;
      swift_storeEnumTagMultiPayload();
      sub_100010218(&qword_1007FC708);
      uint64_t v14 = swift_allocObject();
      uint64_t v15 = v14 + *(void *)(*(void *)v14 + 104);
      uint64_t v16 = sub_100010218(&qword_1007F9E58);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
      *(_OWORD *)(v14 + *(void *)(*(void *)v14 + 112)) = xmmword_1006D6A80;
      sub_10002C4EC((uint64_t)v6, v14 + *(void *)(*(void *)v14 + 120), &qword_1007F9E48);
      *(void *)(v1 + v7) = v14;
      swift_release();
    }
  }
  if (*(void *)(v1 + v7))
  {
LABEL_6:
    swift_retain();
    sub_100039F48(a1);
    return swift_release();
  }
  else
  {
    uint64_t v18 = _s10MusicAssetC9MusicDataVMa(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(a1, 1, 1, v18);
  }
}

uint64_t sub_1003F44BC(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_1003F44E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t sub_1003F450C()
{
  v0._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003F456C(void *a1)
{
  type metadata accessor for MOSuggestionAssetMetadataKey(0);
  sub_10040DB58(&qword_1007F8C30, type metadata accessor for MOSuggestionAssetMetadataKey);
  id v2 = a1;
  return AnyHashable.init<A>(_:)();
}

uint64_t sub_1003F4600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v9[10] = a8;
  v9[11] = v8;
  v9[8] = a6;
  v9[9] = a7;
  v9[6] = a4;
  v9[7] = a5;
  v9[4] = a2;
  void v9[5] = a3;
  v9[3] = a1;
  uint64_t v10 = type metadata accessor for Date();
  v9[12] = v10;
  v9[13] = *(void *)(v10 - 8);
  v9[14] = swift_task_alloc();
  return _swift_task_switch(sub_1003F46D0, 0, 0);
}

uint64_t sub_1003F46D0()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 96);
  static Date.now.getter();
  Date.timeIntervalSinceReferenceDate.getter();
  *(void *)(v0 + 120) = v4;
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v0 + 128) = v5;
  *(void *)(v0 + 136) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v3);
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 144) = v6;
  *(void *)uint64_t v6 = v0;
  *(void *)(v6 + 8) = sub_1003F47D0;
  uint64_t v8 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 48);
  uint64_t v9 = *(void *)(v0 + 24);
  *(_OWORD *)(v6 + 104) = *(_OWORD *)(v0 + 72);
  *(void *)(v6 + 88) = v8;
  *(void *)(v6 + 96) = v7;
  *(void *)(v6 + 80) = v9;
  return _swift_task_switch(sub_100408E18, 0, 0);
}

uint64_t sub_1003F47D0(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 152) = a1;
  *(void *)(v4 + 160) = a2;
  *(unsigned char *)(v4 + 208) = a3;
  swift_task_dealloc();
  return _swift_task_switch(sub_1003F48D4, 0, 0);
}

uint64_t sub_1003F48D4()
{
  int v1 = *(unsigned __int8 *)(v0 + 208);
  if (v1 != 255)
  {
    _StringGuts.grow(_:)(50);
    swift_bridgeObjectRelease();
    if (v1)
    {
      if (v1 != 1)
      {
        if (*(_OWORD *)(v0 + 152) == 0) {
          unint64_t v23 = 0xD000000000000017;
        }
        else {
          unint64_t v23 = 0x7373417972746E65;
        }
        if (*(_OWORD *)(v0 + 152) == 0) {
          unint64_t v27 = 0x800000010069C6B0;
        }
        else {
          unint64_t v27 = 0xEF6C6C7546737465;
        }
        goto LABEL_18;
      }
      unint64_t v23 = 0xD000000000000017;
      uint64_t v24 = "entryMultiAssetOverflow";
    }
    else
    {
      unint64_t v23 = 0xD000000000000018;
      uint64_t v24 = "entrySingleAssetOverflow";
    }
    unint64_t v27 = (unint64_t)(v24 - 32) | 0x8000000000000000;
LABEL_18:
    id v28 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
    double v29 = *(double *)(v0 + 120);
    uint64_t v30 = *(void *)(v0 + 112);
    uint64_t v31 = *(void *)(v0 + 96);
    uint64_t v32 = *(void (**)(unint64_t, unint64_t))(v0 + 56);
    unint64_t v33 = v27;
    String.append(_:)(*(Swift::String *)&v23);
    swift_bridgeObjectRelease();
    v34._countAndFlagsBits = 8236;
    v34._object = (void *)0xE200000000000000;
    String.append(_:)(v34);
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1006D6280;
    static Date.now.getter();
    Date.timeIntervalSinceReferenceDate.getter();
    double v37 = v36;
    v28(v30, v31);
    *(void *)(v35 + 56) = &type metadata for Double;
    *(void *)(v35 + 64) = &protocol witness table for Double;
    *(double *)(v35 + 32) = v37 - v29;
    v38._countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v38);
    swift_bridgeObjectRelease();
    v39._object = (void *)0x800000010069C5C0;
    v39._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v39);
    v32(0xD00000000000001BLL, 0x800000010069C650);
    swift_bridgeObjectRelease();
    uint64_t v25 = *(void *)(v0 + 152);
    uint64_t v26 = *(void *)(v0 + 160);
    goto LABEL_19;
  }
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
  double v3 = *(double *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v6 = *(void (**)(unint64_t, unint64_t))(v0 + 72);
  uint64_t v7 = *(void *)(v0 + 24);
  _StringGuts.grow(_:)(36);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 168) = sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1006D6280;
  static Date.now.getter();
  Date.timeIntervalSinceReferenceDate.getter();
  double v10 = v9;
  v2(v4, v5);
  *(void *)(v8 + 56) = &type metadata for Double;
  *(void *)(v8 + 64) = &protocol witness table for Double;
  *(double *)(v8 + 32) = v10 - v3;
  v11._countAndFlagsBits = String.init(format:_:)();
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._object = (void *)0x800000010069C5C0;
  v12._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v12);
  v6(0xD000000000000011, 0x800000010069C5A0);
  swift_bridgeObjectRelease();
  uint64_t v13 = *(void *)(v7 + 32);
  uint64_t v14 = *(void *)(v13 + 16);
  *(void *)(v0 + 176) = v14;
  if (v14)
  {
    uint64_t v15 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
    uint64_t v16 = *(void *)(v0 + 112);
    uint64_t v18 = *(void *)(v0 + 88);
    uint64_t v17 = *(void *)(v0 + 96);
    uint64_t v19 = *(void *)(v0 + 24);
    long long v45 = *(_OWORD *)(v0 + 72);
    int8x16_t v43 = vextq_s8(*(int8x16_t *)(v0 + 32), *(int8x16_t *)(v0 + 32), 8uLL);
    long long v44 = *(_OWORD *)(v0 + 56);
    static Date.now.getter();
    Date.timeIntervalSinceReferenceDate.getter();
    *(void *)(v0 + 184) = v20;
    v15(v16, v17);
    type metadata accessor for PhotoFetchOutcome();
    uint64_t v21 = swift_task_alloc();
    *(void *)(v0 + 192) = v21;
    *(void *)(v21 + 16) = v13;
    *(void *)(v21 + 24) = v18;
    *(int8x16_t *)(v21 + 32) = v43;
    *(void *)(v21 + 48) = v19;
    *(_OWORD *)(v21 + 56) = v45;
    *(_OWORD *)(v21 + 72) = v44;
    id v22 = (void *)swift_task_alloc();
    *(void *)(v0 + 200) = v22;
    *id v22 = v0;
    v22[1] = sub_1003F4DC0;
    return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)();
  }
  (*(void (**)(unint64_t, unint64_t))(v0 + 72))(0xD000000000000013, 0x800000010069C630);
  uint64_t v25 = 0;
  uint64_t v26 = 0;
LABEL_19:
  swift_task_dealloc();
  unint64_t v40 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 8);
  uint64_t v41 = *(unsigned __int8 *)(v0 + 208);
  return v40(v25, v26, v41);
}

uint64_t sub_1003F4DC0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1003F4ED8, 0, 0);
}

uint64_t sub_1003F4ED8()
{
  double v1 = *(double *)(v0 + 184);
  uint64_t v2 = *(void *)(v0 + 176);
  double v3 = *(void (**)(uint64_t, uint64_t))(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v17 = *(void (**)(void, unint64_t))(v0 + 72);
  _StringGuts.grow(_:)(74);
  v6._object = (void *)0x800000010069C5E0;
  v6._countAndFlagsBits = 0xD00000000000001DLL;
  String.append(_:)(v6);
  *(void *)(v0 + 16) = v2;
  v7._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0xD000000000000020;
  v8._object = (void *)0x800000010069C600;
  String.append(_:)(v8);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1006D6280;
  static Date.now.getter();
  Date.timeIntervalSinceReferenceDate.getter();
  double v11 = v10;
  v3(v4, v5);
  *(void *)(v9 + 56) = &type metadata for Double;
  *(void *)(v9 + 64) = &protocol witness table for Double;
  *(double *)(v9 + 32) = v11 - v1;
  v12._countAndFlagsBits = String.init(format:_:)();
  String.append(_:)(v12);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = 0x73646E6F63657320;
  v13._object = (void *)0xE90000000000002ELL;
  String.append(_:)(v13);
  v17(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v14 = *(uint64_t (**)(void, void, uint64_t))(v0 + 8);
  uint64_t v15 = *(unsigned __int8 *)(v0 + 208);
  return v14(0, 0, v15);
}

void sub_1003F50DC()
{
  off_10080C390 = &_swiftEmptySetSingleton;
}

uint64_t sub_1003F50F0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v5 - 8);
  Swift::String v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = 538976288;
  unint64_t v28 = 0xE400000000000000;
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v13 = [a3 stringFromDate:isa];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v16 = v15;

  v17._countAndFlagsBits = v14;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  uint64_t v18 = v27;
  sub_10001B220(a2, (uint64_t)v7, (uint64_t *)&unk_1007FC470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
  {
    sub_10001457C((uint64_t)v7, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
    v26._countAndFlagsBits = 2108704;
    v26._object = (void *)0xE300000000000000;
    Class v19 = Date._bridgeToObjectiveC()().super.isa;
    id v20 = [a3 stringFromDate:v19];

    uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v23 = v22;

    v24._countAndFlagsBits = v21;
    v24._object = v23;
    String.append(_:)(v24);
    swift_bridgeObjectRelease();
    String.append(_:)(v26);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    return v27;
  }
  return v18;
}

uint64_t sub_1003F5384(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100807940);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10040DB58((unint64_t *)&qword_1007FD120, (void (*)(uint64_t))&type metadata accessor for Date);
  char v11 = dispatch thunk of static Comparable.<= infix(_:_:)();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_10001B220(a2, (uint64_t)v6, &qword_100807940);
  if (v11) {
    char v12 = dispatch thunk of static Comparable.< infix(_:_:)();
  }
  else {
    char v12 = 0;
  }
  sub_10001457C((uint64_t)v6, &qword_100807940);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12 & 1;
}

uint64_t sub_1003F556C(uint64_t a1, uint64_t a2)
{
  uint64_t v44 = a2;
  uint64_t v3 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v43 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for VisitDuration(0);
  uint64_t v41 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100010218(&qword_1007F9F50);
  __chkstk_darwin(v9 - 8);
  unint64_t v40 = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v39 = (uint64_t)v36 - v12;
  __chkstk_darwin(v13);
  uint64_t v42 = (uint64_t)v36 - v14;
  uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v15 - 8);
  Swift::String v17 = (char *)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for Date();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)v36 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B220(a1, (uint64_t)v17, (uint64_t *)&unk_1007FC470);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_10001457C((uint64_t)v17, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    uint64_t v38 = v3;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    uint64_t v22 = v44;
    uint64_t v23 = *(void *)(v44 + 16);
    if (v23)
    {
      Swift::String v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56);
      v36[1] = v43 + 56;
      double v37 = v5;
      v36[0] = v24;
      v24(v42, 1, 1, v38);
      uint64_t v25 = v22 + ((*(unsigned __int8 *)(v41 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v41 + 80));
      uint64_t v26 = *(void *)(v41 + 72);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_10040AAE4(v25, (uint64_t)v8, type metadata accessor for VisitDuration);
        uint64_t v27 = *(uint64_t (**)(char *))&v8[*(int *)(v6 + 20)];
        swift_retain();
        LOBYTE(v27) = v27(v21);
        swift_release();
        if (v27) {
          break;
        }
        sub_10040AA64((uint64_t)v8, type metadata accessor for VisitDuration);
        v25 += v26;
        if (!--v23)
        {
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
          uint64_t v29 = (uint64_t)v37;
          uint64_t v28 = v38;
          uint64_t v30 = (uint64_t)v40;
          uint64_t v31 = v42;
          goto LABEL_10;
        }
      }
      swift_bridgeObjectRelease();
      uint64_t v31 = v42;
      sub_10001457C(v42, &qword_1007F9F50);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
      uint64_t v32 = v39;
      sub_10040AAE4((uint64_t)v8, v39, _s10VisitAssetC9VisitDataVMa);
      sub_10040AA64((uint64_t)v8, type metadata accessor for VisitDuration);
      uint64_t v28 = v38;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v36[0])(v32, 0, 1, v38);
      sub_10002C4EC(v32, v31, &qword_1007F9F50);
      uint64_t v29 = (uint64_t)v37;
      uint64_t v30 = (uint64_t)v40;
LABEL_10:
      sub_10002C4EC(v31, v30, &qword_1007F9F50);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v43 + 48))(v30, 1, v28) == 1)
      {
        sub_10001457C(v30, &qword_1007F9F50);
      }
      else
      {
        sub_10040A9FC(v30, v29, _s10VisitAssetC9VisitDataVMa);
        uint64_t v33 = v29 + *(int *)(v28 + 40);
        if ((*(unsigned char *)(v33 + 8) & 1) == 0 && (*(unsigned char *)(v29 + *(int *)(v28 + 44) + 8) & 1) == 0)
        {
          uint64_t v34 = *(void *)v33;
          swift_bridgeObjectRetain();
          sub_10040AA64(v29, _s10VisitAssetC9VisitDataVMa);
          return v34;
        }
        sub_10040AA64(v29, _s10VisitAssetC9VisitDataVMa);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
    }
  }
  return 0;
}

uint64_t sub_1003F5B3C(uint64_t a1, void *a2, uint64_t a3, void *a4, void (*a5)(unint64_t, unint64_t))
{
  _StringGuts.grow(_:)(43);
  swift_bridgeObjectRelease();
  v10._countAndFlagsBits = a1;
  v10._object = a2;
  String.append(_:)(v10);
  v11._countAndFlagsBits = 8236;
  v11._object = (void *)0xE200000000000000;
  String.append(_:)(v11);
  v12._countAndFlagsBits = a3;
  v12._object = a4;
  String.append(_:)(v12);
  a5(0xD000000000000025, 0x800000010069CDE0);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1003F5C20(void *a1, void *a2, void *a3)
{
  sub_1003F5CCC(a2);
  swift_beginAccess();
  id v5 = a1;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  return swift_endAccess();
}

uint64_t sub_1003F5CCC(void *a1)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v3 - 8);
  id v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_100800950);
  *(void *)&double v7 = __chkstk_darwin(v6 - 8).n128_u64[0];
  uint64_t v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = [a1 suggestionIdentifier:v7];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v11 = type metadata accessor for UUID();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 0, 1, v11);
  uint64_t v12 = v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionId;
  swift_beginAccess();
  sub_100041190((uint64_t)v9, v12, &qword_100800950);
  swift_endAccess();
  id v13 = [a1 startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v14 = type metadata accessor for Date();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v5, 0, 1, v14);
  uint64_t v15 = v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionDate;
  swift_beginAccess();
  sub_100041190((uint64_t)v5, v15, (uint64_t *)&unk_1007FC470);
  return swift_endAccess();
}

uint64_t sub_1003F5EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  uint64_t v7 = type metadata accessor for PendingPhotoAsset(0);
  uint64_t v8 = (char *)a4 + *(int *)(v7 + 20);
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8, a2, v9);
  id v10 = (char *)a4 + *(int *)(v7 + 24);
  uint64_t v11 = type metadata accessor for URL();
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32);

  return v12(v10, a3, v11);
}

uint64_t sub_1003F5FC8(uint64_t a1, uint64_t a2, char a3, uint64_t a4)
{
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v8;
  void *v8 = v4;
  v8[1] = sub_100052588;
  return sub_1003397D4(a2, a3 & 1, a4, 0);
}

uint64_t sub_1003F6088(uint64_t a1, int *a2)
{
  id v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_100052588;
  return v5();
}

uint64_t sub_1003F6154(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (char *)&dword_1008058A0 + dword_1008058A0;
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_10002C194;
  return ((uint64_t (*)(uint64_t, uint64_t, void))v7)(a1, a2, 0);
}

uint64_t sub_1003F620C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1008058A0 + dword_1008058A0);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_100052588;
  return v9(a1, a2, a3);
}

uint64_t sub_1003F62CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[23] = a4;
  v5[24] = v4;
  v5[21] = a2;
  v5[22] = a3;
  v5[20] = a1;
  uint64_t v6 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v5[25] = v6;
  v5[26] = *(void *)(v6 - 8);
  v5[27] = swift_task_alloc();
  v5[28] = type metadata accessor for PendingPhotoAsset(0);
  v5[29] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Date();
  v5[30] = v7;
  v5[31] = *(void *)(v7 - 8);
  v5[32] = swift_task_alloc();
  return _swift_task_switch(sub_1003F6420, 0, 0);
}

uint64_t sub_1003F6420()
{
  uint64_t v2 = *(void *)(v0 + 248);
  uint64_t v1 = *(void *)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 232);
  uint64_t v3 = *(void *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 176);
  uint64_t v6 = *(void *)(v0 + 160);
  int8x16_t v14 = *(int8x16_t *)(v0 + 184);
  static Date.now.getter();
  Date.timeIntervalSinceReferenceDate.getter();
  uint64_t v8 = v7;
  *(void *)(v0 + 264) = v7;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v0 + 272) = v9;
  *(void *)(v0 + 280) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v9(v1, v3);
  *(void *)(v0 + 136) = v8;
  *(void *)(v0 + 88) = 0;
  *(void *)(v0 + 104) = 0;
  *(void *)(v0 + 112) = 0;
  *(void *)(v0 + 96) = 0;
  sub_10040AAE4(v6, v4, type metadata accessor for PendingPhotoAsset);
  uint64_t v10 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 288) = v10;
  v10[1].i64[0] = v0 + 136;
  v10[1].i64[1] = v6;
  v10[2].i64[0] = v0 + 88;
  v10[2].i64[1] = v5;
  v10[3] = vextq_s8(v14, v14, 8uLL);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 296) = v11;
  uint64_t v12 = _s5AssetCMa();
  *uint64_t v11 = v0;
  v11[1] = sub_1003F65D0;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 144, 0, 0, 0xD000000000000020, 0x800000010069C760, sub_10040A69C, v10, v12);
}

uint64_t sub_1003F65D0()
{
  *(void *)(*(void *)v1 + 304) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1003F7900;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1003F66EC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1003F66EC()
{
  uint64_t v1 = (void *)v0[18];
  v0[39] = v1;
  id v2 = v1;
  if (static Task<>.isCancelled.getter())
  {
    uint64_t v3 = v0[29];

    sub_10040AA64(v3, type metadata accessor for PendingPhotoAsset);
    swift_bridgeObjectRelease();
    type metadata accessor for CancellationError();
    sub_10040DB58(qword_100808708, (void (*)(uint64_t))&type metadata accessor for CancellationError);
    swift_allocError();
    CancellationError.init()();
    swift_willThrow();

    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = (void (*)(uint64_t, uint64_t))v0[34];
    uint64_t v7 = v0[32];
    uint64_t v8 = v0[30];
    uint64_t v10 = v0[26];
    uint64_t v9 = v0[27];
    uint64_t v11 = v0[25];
    static Date.now.getter();
    Date.timeIntervalSinceReferenceDate.getter();
    uint64_t v13 = v12;
    v6(v7, v8);
    v0[17] = v13;
    (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v9, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v11);
    swift_retain();
    int8x16_t v14 = (void *)swift_task_alloc();
    v0[40] = v14;
    *int8x16_t v14 = v0;
    v14[1] = sub_1003F6964;
    uint64_t v15 = v0[27];
    uint64_t v16 = v0[21];
    return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 54, v15, sub_10005F0F8, v16, &type metadata for Bool);
  }
}

uint64_t sub_1003F6964()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 216);
  uint64_t v3 = *(void *)(*(void *)v1 + 208);
  uint64_t v4 = *(void *)(*(void *)v1 + 200);
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_1003F6AE4, 0, 0);
}

uint64_t sub_1003F6AE4()
{
  uint64_t v1 = v0 + 88;
  uint64_t v2 = v0 + 104;
  if (*(unsigned char *)(v0 + 432))
  {

    uint64_t v3 = swift_task_alloc();
    *(void *)(v0 + 392) = v3;
    *(void *)uint64_t v3 = v0;
    *(void *)(v3 + 8) = sub_1003F770C;
    uint64_t v4 = *(void *)(v0 + 264);
    uint64_t v5 = *(void *)(v0 + 232);
    uint64_t v6 = *(void *)(v0 + 168);
    *(void *)(v3 + 128) = v1;
    *(void *)(v3 + 136) = v2;
    *(void *)(v3 + 120) = v4;
    *(void *)(v3 + 104) = v6;
    *(void *)(v3 + 112) = v5;
    *(void *)(v3 + 88) = 0xD000000000000047;
    *(void *)(v3 + 96) = 0x800000010069C830;
    *(unsigned char *)(v3 + 168) = 1;
LABEL_8:
    return _swift_task_switch(sub_1003F7C78, 0, 0);
  }
  uint64_t v7 = *(void *)(v0 + 160) + *(int *)(*(void *)(v0 + 224) + 20);
  uint64_t v8 = (unint64_t *)(*(void *)(v0 + 168) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
  swift_beginAccess();
  unint64_t v9 = *v8;
  uint64_t v10 = swift_task_alloc();
  *(void *)(v10 + 16) = v7;
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1000E93D8((uint64_t (*)(id *))sub_1003854D0, v10, v9);
  *(void *)(v0 + 336) = v11;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (!v11)
  {

    uint64_t v15 = swift_task_alloc();
    *(void *)(v0 + 376) = v15;
    *(void *)uint64_t v15 = v0;
    *(void *)(v15 + 8) = sub_1003F7518;
    uint64_t v16 = *(void *)(v0 + 264);
    uint64_t v17 = *(void *)(v0 + 232);
    uint64_t v18 = *(void *)(v0 + 168);
    *(void *)(v15 + 128) = v1;
    *(void *)(v15 + 136) = v2;
    *(void *)(v15 + 120) = v16;
    *(void *)(v15 + 104) = v18;
    *(void *)(v15 + 112) = v17;
    *(void *)(v15 + 88) = 0xD00000000000004FLL;
    *(void *)(v15 + 96) = 0x800000010069C790;
    *(unsigned char *)(v15 + 168) = 0;
    goto LABEL_8;
  }
  swift_bridgeObjectRelease();
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 344) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_1003F6D90;
  uint64_t v13 = *(void *)(v0 + 312);
  return sub_1000EA4DC((uint64_t)v11, v13);
}

uint64_t sub_1003F6D90(char a1)
{
  *(unsigned char *)(*(void *)v1 + 433) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1003F6E90, 0, 0);
}

uint64_t sub_1003F6E90()
{
  char v1 = *(unsigned char *)(v0 + 433);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
  uint64_t v3 = *(void *)(v0 + 256);
  uint64_t v4 = *(void *)(v0 + 240);
  double v5 = *(double *)(v0 + 136);
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1006D6280;
  static Date.now.getter();
  Date.timeIntervalSinceReferenceDate.getter();
  double v8 = v7;
  v2(v3, v4);
  *(void *)(v6 + 56) = &type metadata for Double;
  *(void *)(v6 + 64) = &protocol witness table for Double;
  *(double *)(v6 + 32) = v8 - v5;
  uint64_t v9 = String.init(format:_:)();
  uint64_t v11 = v10;
  swift_beginAccess();
  *(void *)(v0 + 104) = v9;
  *(void *)(v0 + 112) = v11;
  if (v1)
  {
    sub_10040AA64(*(void *)(v0 + 232), type metadata accessor for PendingPhotoAsset);
    uint64_t v18 = (uint64_t (__cdecl *)())((char *)&dword_10080CA48 + dword_10080CA48);
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 368) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1003F72FC;
    return v18();
  }
  else
  {

    uint64_t v14 = swift_task_alloc();
    *(void *)(v0 + 352) = v14;
    *(void *)uint64_t v14 = v0;
    *(void *)(v14 + 8) = sub_1003F7100;
    uint64_t v15 = *(void *)(v0 + 264);
    uint64_t v16 = *(void *)(v0 + 232);
    uint64_t v17 = *(void *)(v0 + 168);
    *(void *)(v14 + 128) = v0 + 88;
    *(void *)(v14 + 136) = v0 + 104;
    *(void *)(v14 + 120) = v15;
    *(void *)(v14 + 104) = v17;
    *(void *)(v14 + 112) = v16;
    *(void *)(v14 + 88) = 0xD000000000000046;
    *(void *)(v14 + 96) = 0x800000010069C7E0;
    *(unsigned char *)(v14 + 168) = 0;
    return _swift_task_switch(sub_1003F7C78, 0, 0);
  }
}

uint64_t sub_1003F7100(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 232);
  *(void *)(*(void *)v1 + 360) = a1;
  swift_task_dealloc();
  sub_10040AA64(v2, type metadata accessor for PendingPhotoAsset);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1003F7258, 0, 0);
}

uint64_t sub_1003F7258()
{
  uint64_t v1 = *(void **)(v0 + 336);

  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + 360);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v3(v2);
}

uint64_t sub_1003F72FC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1003F73F8, 0, 0);
}

uint64_t sub_1003F73F8()
{
  uint64_t v1 = (void *)v0[42];
  uint64_t v2 = (void *)v0[39];
  uint64_t v3 = v0[33];
  swift_beginAccess();
  uint64_t v4 = v0[11];
  unint64_t v5 = v0[12];
  uint64_t v6 = v0[13];
  unint64_t v7 = v0[14];
  type metadata accessor for PhotoFetchResult();
  double v8 = (void *)swift_allocObject();
  uint64_t v9 = v8;
  v8[7] = v2;
  v8[2] = v3;
  if (v5) {
    uint64_t v10 = v4;
  }
  else {
    uint64_t v10 = 0x3030302E30;
  }
  if (v5) {
    unint64_t v11 = v5;
  }
  else {
    unint64_t v11 = 0xE500000000000000;
  }
  v8[3] = v10;
  v8[4] = v11;

  if (v7) {
    uint64_t v12 = v6;
  }
  else {
    uint64_t v12 = 0x3030302E30;
  }
  if (v7) {
    unint64_t v13 = v7;
  }
  else {
    unint64_t v13 = 0xE500000000000000;
  }
  void v9[5] = v12;
  v9[6] = v13;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(void *))v0[1];
  return v14(v9);
}

uint64_t sub_1003F7518(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 232);
  *(void *)(*(void *)v1 + 384) = a1;
  swift_task_dealloc();
  sub_10040AA64(v2, type metadata accessor for PendingPhotoAsset);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1003F7670, 0, 0);
}

uint64_t sub_1003F7670()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 384);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1003F770C(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 232);
  *(void *)(*(void *)v1 + 400) = a1;
  swift_task_dealloc();
  sub_10040AA64(v2, type metadata accessor for PendingPhotoAsset);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1003F7864, 0, 0);
}

uint64_t sub_1003F7864()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 400);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1003F7900()
{
  uint64_t v1 = v0[38];
  swift_task_dealloc();
  v0[15] = 0;
  v0[16] = 0xE000000000000000;
  v0[19] = v1;
  sub_100010218((uint64_t *)&unk_1007FC0D0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v2 = v0[15];
  uint64_t v3 = v0[16];
  v0[51] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[52] = v4;
  *(void *)uint64_t v4 = v0;
  *(void *)(v4 + 8) = sub_1003F7A38;
  uint64_t v5 = v0[33];
  uint64_t v6 = v0[29];
  uint64_t v7 = v0[21];
  *(void *)(v4 + 128) = v0 + 11;
  *(void *)(v4 + 136) = v0 + 13;
  *(void *)(v4 + 120) = v5;
  *(void *)(v4 + 104) = v7;
  *(void *)(v4 + 112) = v6;
  *(void *)(v4 + 88) = v2;
  *(void *)(v4 + 96) = v3;
  *(unsigned char *)(v4 + 168) = 0;
  return _swift_task_switch(sub_1003F7C78, 0, 0);
}

uint64_t sub_1003F7A38(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 232);
  *(void *)(*(void *)v1 + 424) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_10040AA64(v2, type metadata accessor for PendingPhotoAsset);
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_1003F7BAC, 0, 0);
}

uint64_t sub_1003F7BAC()
{
  swift_errorRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(void *)(v0 + 424);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1003F7C48(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, double a8)
{
  *(void *)(v8 + 128) = a6;
  *(void *)(v8 + 136) = a7;
  *(double *)(v8 + 120) = a8;
  *(void *)(v8 + 104) = a4;
  *(void *)(v8 + 112) = a5;
  *(void *)(v8 + 88) = a2;
  *(void *)(v8 + 96) = a3;
  *(unsigned char *)(v8 + 168) = a1;
  return _swift_task_switch(sub_1003F7C78, 0, 0);
}

uint64_t sub_1003F7C78()
{
  uint64_t v2 = *(void *)(v0 + 104);
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v3 = v1 + *(int *)(type metadata accessor for PendingPhotoAsset(0) + 20);
  uint64_t v4 = (unint64_t *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
  swift_beginAccess();
  unint64_t v5 = *v4;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v6 + 16) = v3;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1000E93D8((uint64_t (*)(id *))sub_100386084, v6, v5);
  *(void *)(v0 + 144) = v7;
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  if (v7)
  {
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v8;
    void *v8 = v0;
    v8[1] = sub_1003F7E90;
    return sub_1000E99A4((uint64_t)v7);
  }
  else
  {
    unint64_t v11 = *(uint64_t **)(v0 + 128);
    uint64_t v10 = *(void *)(v0 + 136);
    double v12 = *(double *)(v0 + 120);
    uint64_t v14 = *(void *)(v0 + 88);
    uint64_t v13 = *(void *)(v0 + 96);
    char v15 = *(unsigned char *)(v0 + 168);
    swift_beginAccess();
    uint64_t v17 = *v11;
    unint64_t v16 = v11[1];
    swift_beginAccess();
    uint64_t v18 = sub_10040AB4C(v17, v16, *(void *)v10, *(void *)(v10 + 8), v15, v14, v13, v12);
    uint64_t v19 = *(uint64_t (**)(uint64_t))(v0 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return v19(v18);
  }
}

uint64_t sub_1003F7E90()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0;
  swift_task_dealloc();
  unint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_10080CA48 + dword_10080CA48);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 160) = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_1003F7FE4;
  return v5();
}

uint64_t sub_1003F7FE4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1003F80E0, 0, 0);
}

uint64_t sub_1003F80E0()
{
  uint64_t v2 = *(uint64_t **)(v0 + 128);
  uint64_t v1 = *(void *)(v0 + 136);
  double v3 = *(double *)(v0 + 120);
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v4 = *(void *)(v0 + 96);
  char v6 = *(unsigned char *)(v0 + 168);
  swift_beginAccess();
  uint64_t v7 = *v2;
  unint64_t v8 = v2[1];
  swift_beginAccess();
  uint64_t v9 = sub_10040AB4C(v7, v8, *(void *)v1, *(void *)(v1 + 8), v6, v5, v4, v3);
  unint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v11(v9);
}

void sub_1003F81F0(uint64_t a1, double *a2, uint64_t a3, uint64_t *a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v76 = a6;
  uint64_t v77 = a7;
  id v75 = a5;
  unint64_t v79 = a4;
  uint64_t v78 = sub_100010218(&qword_10080C6B8);
  uint64_t v10 = *(void *)(v78 - 8);
  id v72 = *(double **)(v10 + 64);
  __chkstk_darwin(v78);
  uint64_t v71 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PendingPhotoAsset(0);
  uint64_t v13 = v12 - 8;
  uint64_t v70 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v70 + 64);
  __chkstk_darwin(v12);
  uint64_t v69 = (uint64_t)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)&v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v74 = [objc_allocWithZone((Class)NSFileCoordinator) init];
  Swift::String v82 = 0;
  static Date.now.getter();
  Date.timeIntervalSinceReferenceDate.getter();
  uint64_t v20 = v19;
  uint64_t v21 = *(void (**)(char *, uint64_t))(v16 + 8);
  id v65 = v18;
  uint64_t v67 = v15;
  uint64_t v66 = v16 + 8;
  id v64 = v21;
  v21(v18, v15);
  *(void *)a2 = v20;
  URL._bridgeToObjectiveC()((NSURL *)*(int *)(v13 + 32));
  uint64_t v73 = v22;
  sub_10040AAE4(a3, (uint64_t)&v64 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), type metadata accessor for PendingPhotoAsset);
  uint64_t v23 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  Swift::String v24 = v71;
  uint64_t v68 = a1;
  uint64_t v25 = a1;
  uint64_t v26 = v78;
  v23(v71, v25, v78);
  unint64_t v27 = (*(unsigned __int8 *)(v70 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v70 + 80);
  unint64_t v28 = (v14 + v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v28 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (*(unsigned __int8 *)(v10 + 80) + v30 + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v32 = ((unint64_t)v72 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = swift_allocObject();
  uint64_t v34 = a2;
  uint64_t v35 = v33;
  id v72 = v34;
  *(void *)(v33 + 16) = v79;
  *(void *)(v33 + 24) = v34;
  sub_10040A9FC(v69, v33 + v27, type metadata accessor for PendingPhotoAsset);
  double v37 = v75;
  uint64_t v36 = v76;
  *(void *)(v35 + v28) = v75;
  *(void *)(v35 + v29) = v36;
  *(void *)(v35 + v30) = v77;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v35 + v31, v24, v26);
  *(void *)(v35 + v32) = &v82;
  uint64_t v38 = (void *)swift_allocObject();
  v38[2] = sub_10040A8B4;
  v38[3] = v35;
  aBlock[4] = sub_100184568;
  aBlock[5] = v38;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1003F9D28;
  aBlock[3] = &unk_1007A9DF8;
  uint64_t v39 = _Block_copy(aBlock);
  id v40 = v37;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v41 = v74;
  swift_release();
  aBlock[0] = 0;
  uint64_t v42 = v73;
  [v41 coordinateReadingItemAtURL:v73 options:0 error:aBlock byAccessor:v39];
  _Block_release(v39);

  id v43 = aBlock[0];
  LOBYTE(v42) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v42) {
    __break(1u);
  }
  if (v43)
  {
    double v44 = *v72;
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = xmmword_1006D6280;
    id v46 = v43;
    uint64_t v47 = v65;
    static Date.now.getter();
    Date.timeIntervalSinceReferenceDate.getter();
    double v49 = v48;
    v64(v47, v67);
    *(void *)(v45 + 56) = &type metadata for Double;
    *(void *)(v45 + 64) = &protocol witness table for Double;
    *(double *)(v45 + 32) = v49 - v44;
    uint64_t v50 = String.init(format:_:)();
    uint64_t v52 = v51;
    uint64_t v53 = v79;
    swift_beginAccess();
    *uint64_t v53 = v50;
    v53[1] = v52;
    swift_bridgeObjectRelease();
    id v80 = v46;
LABEL_6:
    CheckedContinuation.resume(throwing:)();
    goto LABEL_7;
  }
  id v54 = v82;
  if (v82)
  {
    double v55 = *v72;
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v56 = swift_allocObject();
    *(_OWORD *)(v56 + 16) = xmmword_1006D6280;
    swift_errorRetain();
    uint64_t v57 = v65;
    static Date.now.getter();
    Date.timeIntervalSinceReferenceDate.getter();
    double v59 = v58;
    v64(v57, v67);
    *(void *)(v56 + 56) = &type metadata for Double;
    *(void *)(v56 + 64) = &protocol witness table for Double;
    *(double *)(v56 + 32) = v59 - v55;
    uint64_t v60 = String.init(format:_:)();
    uint64_t v62 = v61;
    id v63 = v79;
    swift_beginAccess();
    *id v63 = v60;
    v63[1] = v62;
    swift_bridgeObjectRelease();
    id v80 = v54;
    goto LABEL_6;
  }
LABEL_7:

  swift_errorRelease();
  swift_release();
}

uint64_t sub_1003F88AC(uint64_t a1, uint64_t *a2, double *a3, id *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t *a9)
{
  uint64_t v197 = a8;
  uint64_t v196 = a7;
  uint64_t v195 = a5;
  uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v13 - 8);
  uint64_t v199 = (uint64_t)&v195 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v195 - v16;
  uint64_t v18 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v18 - 8);
  uint64_t v200 = (char *)&v195 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v22 = (char *)&v195 - v21;
  uint64_t v23 = type metadata accessor for Date();
  uint64_t v24 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)&v195 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v27 = *a3;
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v28 = swift_allocObject();
  *(_OWORD *)(v28 + 16) = xmmword_1006D6280;
  static Date.now.getter();
  Date.timeIntervalSinceReferenceDate.getter();
  double v30 = v29;
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v23);
  *(void *)(v28 + 56) = &type metadata for Double;
  *(void *)(v28 + 64) = &protocol witness table for Double;
  *(double *)(v28 + 32) = v30 - v27;
  uint64_t v31 = String.init(format:_:)();
  uint64_t v33 = v32;
  swift_beginAccess();
  *a2 = v31;
  a2[1] = v33;
  swift_bridgeObjectRelease();
  id v201 = a4;
  id v34 = *a4;
  id v35 = [*a4 assetType];
  uint64_t v36 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v38 = v37;
  if (v36 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v38 == v39)
  {
    swift_bridgeObjectRelease_n();
LABEL_5:

    uint64_t v41 = type metadata accessor for URL();
    uint64_t v42 = *(void *)(v41 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v22, a1, v41);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v42 + 56))(v22, 0, 1, v41);
    id v43 = [v34 metadata:v195, v196, v197];
    uint64_t v44 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v45 = (void *)MOSuggestionAssetMetadataKeyPhotoLocalIdentifier;
    *(void *)&long long v215 = MOSuggestionAssetMetadataKeyPhotoLocalIdentifier;
    type metadata accessor for MOSuggestionAssetMetadataKey(0);
    sub_10040DB58(&qword_1007F8C30, type metadata accessor for MOSuggestionAssetMetadataKey);
    id v46 = v45;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v44 + 16) && (unint64_t v47 = sub_10001B738((uint64_t)&v205), (v48 & 1) != 0))
    {
      sub_10001B648(*(void *)(v44 + 56) + 32 * v47, (uint64_t)&v215);
    }
    else
    {
      long long v215 = 0u;
      long long v216 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10001DF0C((uint64_t)&v205);
    if (*((void *)&v216 + 1))
    {
      int v49 = swift_dynamicCast();
      uint64_t v50 = v210;
      if (!v49) {
        uint64_t v50 = 0;
      }
      uint64_t v200 = v50;
      if (v49) {
        uint64_t v51 = v211;
      }
      else {
        uint64_t v51 = 0;
      }
      uint64_t v199 = v51;
    }
    else
    {
      sub_10001457C((uint64_t)&v215, &qword_1007FAD50);
      uint64_t v200 = 0;
      uint64_t v199 = 0;
    }
    id v52 = [*v201 metadata];
    uint64_t v53 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v210 = (char *)MOSuggestionAssetMetadataKeyPhotoTakenDate;
    id v54 = MOSuggestionAssetMetadataKeyPhotoTakenDate;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v53 + 16) && (unint64_t v55 = sub_10001B738((uint64_t)&v205), (v56 & 1) != 0))
    {
      sub_10001B648(*(void *)(v53 + 56) + 32 * v55, (uint64_t)&v215);
    }
    else
    {
      long long v215 = 0u;
      long long v216 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10001DF0C((uint64_t)&v205);
    if (*((void *)&v216 + 1))
    {
      int v57 = swift_dynamicCast();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v17, v57 ^ 1u, 1, v23);
    }
    else
    {
      sub_10001457C((uint64_t)&v215, &qword_1007FAD50);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v24 + 56))(v17, 1, 1, v23);
    }
    double v58 = v201;
    id v59 = [*v201 metadata];
    uint64_t v60 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    *(void *)&long long v215 = MOSuggestionAssetMetadataKeyPhotoMomentResolution;
    id v61 = MOSuggestionAssetMetadataKeyPhotoMomentResolution;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v60 + 16) && (unint64_t v62 = sub_10001B738((uint64_t)&v205), (v63 & 1) != 0))
    {
      sub_10001B648(*(void *)(v60 + 56) + 32 * v62, (uint64_t)&v215);
    }
    else
    {
      long long v215 = 0u;
      long long v216 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10001DF0C((uint64_t)&v205);
    if (*((void *)&v216 + 1))
    {
      type metadata accessor for CGSize(0);
      int v64 = swift_dynamicCast();
      if (v64) {
        uint64_t v65 = (uint64_t)v210;
      }
      else {
        uint64_t v65 = 0;
      }
      if (v64) {
        uint64_t v66 = (id *)v211;
      }
      else {
        uint64_t v66 = 0;
      }
      id v201 = v66;
      int v67 = v64 ^ 1;
    }
    else
    {
      sub_10001457C((uint64_t)&v215, &qword_1007FAD50);
      uint64_t v65 = 0;
      id v201 = 0;
      int v67 = 1;
    }
    int v198 = v67;
    id v68 = [*v58 metadata];
    uint64_t v69 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v210 = (char *)MOSuggestionAssetMetadataKeyPhotoBestSquareCropRect;
    id v70 = MOSuggestionAssetMetadataKeyPhotoBestSquareCropRect;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v69 + 16) && (unint64_t v71 = sub_10001B738((uint64_t)&v205), (v72 & 1) != 0))
    {
      sub_10001B648(*(void *)(v69 + 56) + 32 * v71, (uint64_t)&v215);
    }
    else
    {
      long long v215 = 0u;
      long long v216 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10001DF0C((uint64_t)&v205);
    if (*((void *)&v216 + 1))
    {
      sub_10001B284(0, &qword_10080C6C0);
      if (swift_dynamicCast())
      {
        uint64_t v73 = v210;
        [v210 cgRect];
        id v75 = v74;
        uint64_t v77 = v76;
        uint64_t v79 = v78;
        uint64_t v81 = v80;

        char v82 = 0;
LABEL_46:
        uint64_t v210 = v75;
        uint64_t v211 = v77;
        uint64_t v212 = v79;
        uint64_t v213 = v81;
        char v214 = v82;
        id v83 = [*v58 metadata];
        uint64_t v84 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        *(void *)&long long v203 = MOSuggestionAssetMetadataKeyPhotoBestLandscapeCropRect;
        id v85 = MOSuggestionAssetMetadataKeyPhotoBestLandscapeCropRect;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v84 + 16) && (unint64_t v86 = sub_10001B738((uint64_t)&v205), (v87 & 1) != 0))
        {
          sub_10001B648(*(void *)(v84 + 56) + 32 * v86, (uint64_t)&v215);
        }
        else
        {
          long long v215 = 0u;
          long long v216 = 0u;
        }
        swift_bridgeObjectRelease();
        sub_10001DF0C((uint64_t)&v205);
        if (*((void *)&v216 + 1))
        {
          sub_10001B284(0, &qword_10080C6C0);
          if (swift_dynamicCast())
          {
            int v88 = (void *)v203;
            [(id)v203 cgRect];
            uint64_t v90 = v89;
            uint64_t v92 = v91;
            uint64_t v94 = v93;
            uint64_t v96 = v95;

            char v97 = 0;
LABEL_55:
            *(void *)&long long v215 = v90;
            *((void *)&v215 + 1) = v92;
            *(void *)&long long v216 = v94;
            *((void *)&v216 + 1) = v96;
            char v217 = v97;
            id v98 = [*v58 metadata];
            uint64_t v99 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v202 = (id)MOSuggestionAssetMetadataKeyPhotoBestPortraitCropRect;
            id v100 = MOSuggestionAssetMetadataKeyPhotoBestPortraitCropRect;
            AnyHashable.init<A>(_:)();
            if (*(void *)(v99 + 16) && (unint64_t v101 = sub_10001B738((uint64_t)&v205), (v102 & 1) != 0))
            {
              sub_10001B648(*(void *)(v99 + 56) + 32 * v101, (uint64_t)&v203);
            }
            else
            {
              long long v204 = 0u;
              long long v203 = 0u;
            }
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v205);
            if (*((void *)&v204 + 1))
            {
              sub_10001B284(0, &qword_10080C6C0);
              if (swift_dynamicCast())
              {
                id v103 = v202;
                [v202 cgRect];
                uint64_t v105 = v104;
                uint64_t v107 = v106;
                uint64_t v109 = v108;
                uint64_t v111 = v110;

                char v112 = 0;
                uint64_t v113 = (uint64_t)v200;
                uint64_t v114 = v199;
                id v115 = (char *)v201;
                unsigned __int8 v116 = v198;
LABEL_64:
                uint64_t v205 = v105;
                uint64_t v206 = v107;
                uint64_t v207 = v109;
                uint64_t v208 = v111;
                char v209 = v112;
                UIMenuElementSize v117 = sub_1002B5008(0, 0, (uint64_t)v22, v113, v114, (uint64_t)v17, 0, 0, 0, 1u, 0, 1u, v65, v115, v116, (uint64_t)&v210, (uint64_t)&v215, (uint64_t)&v205);
LABEL_65:
                UIMenuElementSize v118 = v117;
                sub_1003F5CCC(v195);
                sub_100010218((uint64_t *)&unk_1007FA1C0);
                uint64_t v119 = swift_allocObject();
                *(_OWORD *)(v119 + 16) = xmmword_1006D6D00;
                *(void *)(v119 + 32) = v118;
                *(void *)&long long v203 = v119;
                specialized Array._endMutation()();
                unint64_t v120 = v203;
                id v121 = v118;
                sub_1003FFC14(v196, v120);
                swift_bridgeObjectRelease();
                *(void *)&long long v203 = v121;
                sub_100010218(&qword_10080C6B8);
                return CheckedContinuation.resume(returning:)();
              }
            }
            else
            {
              sub_10001457C((uint64_t)&v203, &qword_1007FAD50);
            }
            uint64_t v113 = (uint64_t)v200;
            uint64_t v114 = v199;
            id v115 = (char *)v201;
            unsigned __int8 v116 = v198;
            char v112 = 1;
            uint64_t v105 = 0;
            uint64_t v107 = 0;
            uint64_t v109 = 0;
            uint64_t v111 = 0;
            goto LABEL_64;
          }
        }
        else
        {
          sub_10001457C((uint64_t)&v215, &qword_1007FAD50);
        }
        char v97 = 1;
        uint64_t v90 = 0;
        uint64_t v92 = 0;
        uint64_t v94 = 0;
        uint64_t v96 = 0;
        goto LABEL_55;
      }
    }
    else
    {
      sub_10001457C((uint64_t)&v215, &qword_1007FAD50);
    }
    char v82 = 1;
    id v75 = 0;
    uint64_t v77 = 0;
    uint64_t v79 = 0;
    uint64_t v81 = 0;
    goto LABEL_46;
  }
  char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v40) {
    goto LABEL_5;
  }
  uint64_t v123 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v125 = v124;
  if (v123 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v125 == v126)
  {

    swift_bridgeObjectRelease_n();
LABEL_70:
    uint64_t v128 = type metadata accessor for URL();
    uint64_t v129 = *(void *)(v128 - 8);
    uint64_t v130 = (uint64_t)v200;
    (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v200, a1, v128);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v129 + 56))(v130, 0, 1, v128);
    id v131 = [v34 metadata:v195, v196, v197];
    uint64_t v132 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v133 = (void *)MOSuggestionAssetMetadataKeyPhotoLocalIdentifier;
    *(void *)&long long v215 = MOSuggestionAssetMetadataKeyPhotoLocalIdentifier;
    type metadata accessor for MOSuggestionAssetMetadataKey(0);
    sub_10040DB58(&qword_1007F8C30, type metadata accessor for MOSuggestionAssetMetadataKey);
    id v134 = v133;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v132 + 16) && (unint64_t v135 = sub_10001B738((uint64_t)&v205), (v136 & 1) != 0))
    {
      sub_10001B648(*(void *)(v132 + 56) + 32 * v135, (uint64_t)&v215);
    }
    else
    {
      long long v215 = 0u;
      long long v216 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10001DF0C((uint64_t)&v205);
    if (*((void *)&v216 + 1))
    {
      int v137 = swift_dynamicCast();
      if (v137) {
        uint64_t v138 = (uint64_t)v210;
      }
      else {
        uint64_t v138 = 0;
      }
      if (v137) {
        uint64_t v139 = v211;
      }
      else {
        uint64_t v139 = 0;
      }
    }
    else
    {
      sub_10001457C((uint64_t)&v215, &qword_1007FAD50);
      uint64_t v138 = 0;
      uint64_t v139 = 0;
    }
    id v140 = [*v201 metadata];
    uint64_t v141 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v210 = (char *)MOSuggestionAssetMetadataKeyPhotoTakenDate;
    id v142 = MOSuggestionAssetMetadataKeyPhotoTakenDate;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v141 + 16) && (unint64_t v143 = sub_10001B738((uint64_t)&v205), (v144 & 1) != 0))
    {
      sub_10001B648(*(void *)(v141 + 56) + 32 * v143, (uint64_t)&v215);
    }
    else
    {
      long long v215 = 0u;
      long long v216 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10001DF0C((uint64_t)&v205);
    if (*((void *)&v216 + 1))
    {
      uint64_t v145 = v199;
      int v146 = swift_dynamicCast();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v145, v146 ^ 1u, 1, v23);
    }
    else
    {
      sub_10001457C((uint64_t)&v215, &qword_1007FAD50);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 56))(v199, 1, 1, v23);
    }
    uint64_t v147 = v201;
    id v148 = [*v201 metadata];
    uint64_t v149 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v210 = (char *)MOSuggestionAssetMetadataKeyPhotoBestSquareCropRect;
    id v150 = MOSuggestionAssetMetadataKeyPhotoBestSquareCropRect;
    AnyHashable.init<A>(_:)();
    if (*(void *)(v149 + 16) && (unint64_t v151 = sub_10001B738((uint64_t)&v205), (v152 & 1) != 0))
    {
      sub_10001B648(*(void *)(v149 + 56) + 32 * v151, (uint64_t)&v215);
    }
    else
    {
      long long v215 = 0u;
      long long v216 = 0u;
    }
    swift_bridgeObjectRelease();
    sub_10001DF0C((uint64_t)&v205);
    if (*((void *)&v216 + 1))
    {
      sub_10001B284(0, &qword_10080C6C0);
      if (swift_dynamicCast())
      {
        char v153 = v210;
        [v210 cgRect];
        id v155 = v154;
        uint64_t v157 = v156;
        uint64_t v159 = v158;
        uint64_t v161 = v160;

        char v162 = 0;
LABEL_98:
        uint64_t v210 = v155;
        uint64_t v211 = v157;
        uint64_t v212 = v159;
        uint64_t v213 = v161;
        char v214 = v162;
        id v163 = [*v147 metadata];
        uint64_t v164 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        *(void *)&long long v203 = MOSuggestionAssetMetadataKeyPhotoBestLandscapeCropRect;
        id v165 = MOSuggestionAssetMetadataKeyPhotoBestLandscapeCropRect;
        AnyHashable.init<A>(_:)();
        if (*(void *)(v164 + 16) && (unint64_t v166 = sub_10001B738((uint64_t)&v205), (v167 & 1) != 0))
        {
          sub_10001B648(*(void *)(v164 + 56) + 32 * v166, (uint64_t)&v215);
        }
        else
        {
          long long v215 = 0u;
          long long v216 = 0u;
        }
        swift_bridgeObjectRelease();
        sub_10001DF0C((uint64_t)&v205);
        if (*((void *)&v216 + 1))
        {
          sub_10001B284(0, &qword_10080C6C0);
          if (swift_dynamicCast())
          {
            uint64_t v168 = (void *)v203;
            [(id)v203 cgRect];
            uint64_t v170 = v169;
            uint64_t v172 = v171;
            uint64_t v174 = v173;
            uint64_t v176 = v175;

            char v177 = 0;
LABEL_107:
            *(void *)&long long v215 = v170;
            *((void *)&v215 + 1) = v172;
            *(void *)&long long v216 = v174;
            *((void *)&v216 + 1) = v176;
            char v217 = v177;
            id v178 = [*v147 metadata];
            uint64_t v179 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v202 = (id)MOSuggestionAssetMetadataKeyPhotoBestPortraitCropRect;
            id v180 = MOSuggestionAssetMetadataKeyPhotoBestPortraitCropRect;
            AnyHashable.init<A>(_:)();
            if (*(void *)(v179 + 16) && (unint64_t v181 = sub_10001B738((uint64_t)&v205), (v182 & 1) != 0))
            {
              sub_10001B648(*(void *)(v179 + 56) + 32 * v181, (uint64_t)&v203);
            }
            else
            {
              long long v204 = 0u;
              long long v203 = 0u;
            }
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v205);
            if (*((void *)&v204 + 1))
            {
              sub_10001B284(0, &qword_10080C6C0);
              if (swift_dynamicCast())
              {
                id v183 = v202;
                [v202 cgRect];
                uint64_t v185 = v184;
                uint64_t v187 = v186;
                uint64_t v189 = v188;
                uint64_t v191 = v190;

                char v192 = 0;
LABEL_116:
                uint64_t v205 = v185;
                uint64_t v206 = v187;
                uint64_t v207 = v189;
                uint64_t v208 = v191;
                char v209 = v192;
                UIMenuElementSize v117 = sub_100033E34(0, (uint64_t)v200, 0, v138, v139, v199, 0, 0, 0, 1u, 0, 1u, 0, 0, 1u, (uint64_t)&v210, (uint64_t)&v215, (uint64_t)&v205);
                goto LABEL_65;
              }
            }
            else
            {
              sub_10001457C((uint64_t)&v203, &qword_1007FAD50);
            }
            char v192 = 1;
            uint64_t v185 = 0;
            uint64_t v187 = 0;
            uint64_t v189 = 0;
            uint64_t v191 = 0;
            goto LABEL_116;
          }
        }
        else
        {
          sub_10001457C((uint64_t)&v215, &qword_1007FAD50);
        }
        char v177 = 1;
        uint64_t v170 = 0;
        uint64_t v172 = 0;
        uint64_t v174 = 0;
        uint64_t v176 = 0;
        goto LABEL_107;
      }
    }
    else
    {
      sub_10001457C((uint64_t)&v215, &qword_1007FAD50);
    }
    char v162 = 1;
    id v155 = 0;
    uint64_t v157 = 0;
    uint64_t v159 = 0;
    uint64_t v161 = 0;
    goto LABEL_98;
  }
  char v127 = _stringCompareWithSmolCheck(_:_:expecting:)();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v127) {
    goto LABEL_70;
  }
  sub_1000352C4();
  uint64_t v193 = swift_allocError();
  *uint64_t v194 = 0;
  swift_willThrow();
  *a9 = v193;
  return swift_errorRelease();
}

uint64_t sub_1003F9D28(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v6 = *(void (**)(char *))(a1 + 32);
  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  v6(v5);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1003F9E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 240) = v13;
  *(_OWORD *)(v8 + 224) = v12;
  *(void *)(v8 + 208) = a7;
  *(void *)(v8 + 216) = a8;
  *(void *)(v8 + 192) = a5;
  *(void *)(v8 + 200) = a6;
  *(void *)(v8 + 176) = a3;
  *(void *)(v8 + 184) = a4;
  *(void *)(v8 + 168) = a2;
  uint64_t v9 = *(void *)(type metadata accessor for PendingPhotoAsset(0) - 8);
  *(void *)(v8 + 248) = v9;
  *(void *)(v8 + 256) = *(void *)(v9 + 64);
  *(void *)(v8 + 264) = swift_task_alloc();
  sub_100010218(&qword_1007FA1D0);
  *(void *)(v8 + 272) = swift_task_alloc();
  *(void *)(v8 + 280) = swift_task_alloc();
  return _swift_task_switch(sub_1003F9F30, 0, 0);
}

uint64_t sub_1003F9F30()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 248);
    uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
    uint64_t v5 = v1 + ((v4 + 32) & ~v4);
    uint64_t v31 = (v4 + 40) & ~v4;
    uint64_t v32 = *(void *)(v3 + 72);
    unint64_t v30 = (*(void *)(v0 + 256) + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v29 = (v30 + 15) & 0xFFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v33 = v2;
      uint64_t v7 = *(void *)(v0 + 272);
      uint64_t v8 = *(void *)(v0 + 280);
      uint64_t v9 = *(void *)(v0 + 264);
      uint64_t v10 = *(void *)(v0 + 208);
      uint64_t v11 = *(void *)(v0 + 184);
      uint64_t v34 = *(void *)(v0 + 192);
      id v35 = *(void **)(v0 + 200);
      static TaskPriority.userInitiated.getter();
      uint64_t v12 = type metadata accessor for TaskPriority();
      uint64_t v13 = *(void *)(v12 - 8);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v8, 0, 1, v12);
      uint64_t v36 = v5;
      sub_10040AAE4(v5, v9, type metadata accessor for PendingPhotoAsset);
      uint64_t v14 = (void *)swift_allocObject();
      v14[2] = 0;
      v14[3] = 0;
      void v14[4] = v11;
      sub_10040A9FC(v9, (uint64_t)v14 + v31, type metadata accessor for PendingPhotoAsset);
      *(void *)((char *)v14 + v30) = v34;
      *(void *)((char *)v14 + v29) = v35;
      uint64_t v15 = (char *)v14 + ((v29 + 15) & 0xFFFFFFFFFFFFFFF8);
      long long v16 = *(_OWORD *)(v10 + 16);
      long long v17 = *(_OWORD *)(v10 + 32);
      long long v18 = *(_OWORD *)(v10 + 48);
      *((void *)v15 + 8) = *(void *)(v10 + 64);
      *((_OWORD *)v15 + 2) = v17;
      *((_OWORD *)v15 + 3) = v18;
      *((_OWORD *)v15 + 1) = v16;
      *(_OWORD *)uint64_t v15 = *(_OWORD *)v10;
      sub_10001B220(v8, v7, &qword_1007FA1D0);
      LODWORD(v7) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v7, 1, v12);
      swift_retain();
      id v19 = v35;
      sub_10040A5D8(v10);
      uint64_t v20 = *(void *)(v0 + 272);
      if (v7 == 1)
      {
        sub_10001457C(*(void *)(v0 + 272), &qword_1007FA1D0);
      }
      else
      {
        TaskPriority.rawValue.getter();
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v20, v12);
      }
      if (v14[2])
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v21 = dispatch thunk of Actor.unownedExecutor.getter();
        uint64_t v23 = v22;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v21 = 0;
        uint64_t v23 = 0;
      }
      uint64_t v24 = **(void **)(v0 + 168);
      type metadata accessor for PhotoFetchOutcome();
      uint64_t v25 = v23 | v21;
      if (v23 | v21)
      {
        uint64_t v25 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v21;
        *(void *)(v0 + 40) = v23;
      }
      uint64_t v6 = *(void *)(v0 + 280);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v25;
      *(void *)(v0 + 64) = v24;
      swift_task_create();
      swift_release();
      sub_10001457C(v6, &qword_1007FA1D0);
      uint64_t v5 = v36 + v32;
      uint64_t v2 = v33 - 1;
    }
    while (v33 != 1);
    swift_bridgeObjectRelease();
  }
  uint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 288) = v26;
  uint64_t v27 = sub_100010218(&qword_10080C6A0);
  *uint64_t v26 = v0;
  v26[1] = sub_1003FA31C;
  return ThrowingTaskGroup.nextResult()(v0 + 152, v27);
}

uint64_t sub_1003FA31C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 296) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_1003FA854;
  }
  else
  {
    *(void *)(v2 + 304) = *(void *)(v2 + 152);
    *(unsigned char *)(v2 + 161) = *(unsigned char *)(v2 + 160);
    uint64_t v3 = sub_1003FA440;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1003FA440()
{
  int v1 = *(unsigned __int8 *)(v0 + 161);
  if (v1 != 255)
  {
    uint64_t v2 = *(void **)(v0 + 304);
    if (v1)
    {
      uint64_t v22 = *(void *)(v0 + 304);
    }
    else
    {
      *(void *)(v0 + 72) = 0;
      *(void *)(v0 + 80) = 0xE000000000000000;
      sub_10040A678((uint64_t)v2, 0);
      _StringGuts.grow(_:)(65);
      uint64_t v3 = *(void *)(v0 + 80);
      *(void *)(v0 + 88) = *(void *)(v0 + 72);
      *(void *)(v0 + 96) = v3;
      v4._countAndFlagsBits = 0x4164657472617473;
      v4._object = (void *)0xEA00000000003D74;
      String.append(_:)(v4);
      Double.write<A>(to:)();
      v5._object = (void *)0x800000010069C6F0;
      v5._countAndFlagsBits = 0xD000000000000010;
      String.append(_:)(v5);
      uint64_t v6 = v2[3];
      uint64_t v7 = (void *)v2[4];
      swift_bridgeObjectRetain();
      v8._countAndFlagsBits = v6;
      v8._object = v7;
      String.append(_:)(v8);
      swift_bridgeObjectRelease();
      v9._countAndFlagsBits = 0xD000000000000018;
      v9._object = (void *)0x800000010069C710;
      String.append(_:)(v9);
      uint64_t v10 = v2[5];
      uint64_t v11 = (void *)v2[6];
      swift_bridgeObjectRetain();
      v12._countAndFlagsBits = v10;
      v12._object = v11;
      String.append(_:)(v12);
      swift_bridgeObjectRelease();
      v13._countAndFlagsBits = 0x73646E6F63657320;
      v13._object = (void *)0xE90000000000002ELL;
      String.append(_:)(v13);
      uint64_t v15 = *(void *)(v0 + 88);
      uint64_t v14 = *(void **)(v0 + 96);
      type metadata accessor for PhotoFetchResult();
      if (swift_dynamicCastClass())
      {
        uint64_t v16 = *(void *)(v0 + 304);
        long long v17 = *(void (**)(void, void))(v0 + 216);
        *(void *)(v0 + 136) = 0;
        *(void *)(v0 + 144) = 0xE000000000000000;
        unsigned __int8 v18 = *(unsigned char *)(v0 + 161);
        _StringGuts.grow(_:)(49);
        swift_bridgeObjectRelease();
        *(void *)(v0 + 120) = 0xD00000000000002FLL;
        *(void *)(v0 + 128) = 0x800000010069C730;
        v19._countAndFlagsBits = v15;
        v19._object = v14;
        String.append(_:)(v19);
        swift_bridgeObjectRelease();
        v17(*(void *)(v0 + 120), *(void *)(v0 + 128));
        sub_10040A654(v16, v18);
        sub_10040A654(v16, v18);
        swift_bridgeObjectRelease();
LABEL_10:
        uint64_t v23 = (void *)swift_task_alloc();
        *(void *)(v0 + 288) = v23;
        uint64_t v24 = sub_100010218(&qword_10080C6A0);
        *uint64_t v23 = v0;
        v23[1] = sub_1003FA31C;
        return ThrowingTaskGroup.nextResult()(v0 + 152, v24);
      }
      type metadata accessor for PhotoFetchError();
      uint64_t v25 = swift_dynamicCastClass();
      unsigned __int8 v26 = *(unsigned char *)(v0 + 161);
      uint64_t v27 = *(void *)(v0 + 304);
      if (v25)
      {
        uint64_t v28 = v25;
        unint64_t v29 = *(void (**)(void, void))(v0 + 232);
        uint64_t v30 = *(void *)(v25 + 64);
        *(void *)(v0 + 104) = *(void *)(v25 + 56);
        *(void *)(v0 + 112) = v30;
        sub_10040A684(v27, v26);
        swift_bridgeObjectRetain();
        v31._countAndFlagsBits = 32;
        v31._object = (void *)0xE100000000000000;
        String.append(_:)(v31);
        v32._countAndFlagsBits = v15;
        v32._object = v14;
        String.append(_:)(v32);
        swift_bridgeObjectRelease();
        v29(*(void *)(v0 + 104), *(void *)(v0 + 112));
        swift_bridgeObjectRelease();
        int v33 = *(unsigned __int8 *)(v28 + 72);
        unsigned __int8 v34 = *(unsigned char *)(v0 + 161);
        uint64_t v35 = *(void *)(v0 + 304);
        if (v33 == 1)
        {
          type metadata accessor for PhotoFetchOutcome();
          sub_100010218((uint64_t *)&unk_1007FC0D0);
          ThrowingTaskGroup.cancelAll()();
        }
        sub_10040A654(v35, v34);
        sub_10040A654(v35, v34);
        sub_10040A66C(v35, 0);
        goto LABEL_10;
      }
      sub_10040A654(*(void *)(v0 + 304), *(unsigned char *)(v0 + 161));
      swift_bridgeObjectRelease();
      uint64_t v22 = v27;
      LOBYTE(v1) = v26;
    }
    sub_10040A654(v22, v1);
    goto LABEL_10;
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_1003FA854()
{
  return _swift_unexpectedError(*(void *)(v0 + 296), "_Concurrency/TaskGroup.swift", 28, 1, 1173);
}

uint64_t sub_1003FA870(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 16) = a1;
  uint64_t v12 = *(void *)(a8 + 40);
  Swift::String v13 = (void *)swift_task_alloc();
  *(void *)(v8 + 24) = v13;
  *Swift::String v13 = v8;
  v13[1] = sub_1003FA938;
  return sub_1003F62CC(a5, a6, a7, v12);
}

uint64_t sub_1003FA938(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
    return v6();
  }
  else
  {
    *(void *)(v4 + 32) = a1;
    return _swift_task_switch(sub_1003FAA84, 0, 0);
  }
}

uint64_t sub_1003FAA84()
{
  **(void **)(v0 + 16) = *(void *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t type metadata accessor for SuggestionUtil()
{
  return self;
}

uint64_t sub_1003FAACC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_10000F9D8();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1003FAB0C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PhotoFetchOutcome()
{
  return self;
}

void sub_1003FAB70()
{
}

uint64_t sub_1003FAB78()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PhotoFetchResult()
{
  return self;
}

uint64_t sub_1003FABE4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_1003FABEC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PhotoFetchError()
{
  return self;
}

void sub_1003FAC58(void **a1)
{
  uint64_t v2 = *(void *)(sub_100010218(&qword_1007FC158) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1000F3FF8(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1003FAD04(v5);
  *a1 = v3;
}

void sub_1003FAD04(void *a1)
{
  uint64_t v123 = sub_100010218(&qword_1007FC158);
  uint64_t v121 = *(void *)(v123 - 8);
  __chkstk_darwin(v123);
  uint64_t v117 = (uint64_t)&v114 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v128 = (uint64_t)&v114 - v4;
  __chkstk_darwin(v5);
  uint64_t v125 = (uint64_t)&v114 - v6;
  __chkstk_darwin(v7);
  Swift::String v9 = (char *)&v114 - v8;
  Swift::Int v10 = a1[1];
  Swift::Int v11 = _minimumMergeRunLength(_:)(v10);
  if (v11 >= v10)
  {
    if (v10 < 0) {
      goto LABEL_138;
    }
    if (v10) {
      sub_1003FB750(0, v10, 1, a1);
    }
    return;
  }
  if (v10 >= 0) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = v10 + 1;
  }
  if (v10 < -1) {
    goto LABEL_146;
  }
  Swift::Int v115 = v11;
  if (v10 < 2)
  {
    uint64_t v16 = (char *)_swiftEmptyArrayStorage;
    unint64_t v120 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v121 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v121 + 80));
    uint64_t v114 = _swiftEmptyArrayStorage;
    if (v10 != 1)
    {
      unint64_t v18 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_105:
      if (v18 >= 2)
      {
        uint64_t v105 = *a1;
        uint64_t v106 = v122;
        do
        {
          unint64_t v107 = v18 - 2;
          if (v18 < 2) {
            goto LABEL_133;
          }
          if (!v105) {
            goto LABEL_145;
          }
          uint64_t v108 = v16;
          uint64_t v109 = v16 + 32;
          uint64_t v110 = *(void *)&v16[16 * v107 + 32];
          uint64_t v111 = *(void *)&v16[16 * v18 + 24];
          sub_1003FB9D4(v105 + *(void *)(v121 + 72) * v110, v105 + *(void *)(v121 + 72) * *(void *)&v109[16 * v18 - 16], v105 + *(void *)(v121 + 72) * v111, v120);
          if (v106) {
            break;
          }
          if (v111 < v110) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v108 = sub_1000F1E40((uint64_t)v108);
          }
          if (v107 >= *((void *)v108 + 2)) {
            goto LABEL_135;
          }
          char v112 = &v108[16 * v107 + 32];
          *(void *)char v112 = v110;
          *((void *)v112 + 1) = v111;
          unint64_t v113 = *((void *)v108 + 2);
          if (v18 > v113) {
            goto LABEL_136;
          }
          uint64_t v16 = v108;
          memmove(&v108[16 * v18 + 16], &v108[16 * v18 + 32], 16 * (v113 - v18));
          *((void *)v108 + 2) = v113 - 1;
          unint64_t v18 = v113 - 1;
        }
        while (v113 > 2);
      }
LABEL_116:
      swift_bridgeObjectRelease();
      v114[2] = 0.0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v13 = v12 >> 1;
    uint64_t v14 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v14 + 16) = v13;
    uint64_t v15 = *(unsigned __int8 *)(v121 + 80);
    uint64_t v114 = (double *)v14;
    unint64_t v120 = v14 + ((v15 + 32) & ~v15);
  }
  Swift::Int v17 = 0;
  uint64_t v16 = (char *)_swiftEmptyArrayStorage;
  uint64_t v126 = a1;
  while (1)
  {
    uint64_t v19 = v17;
    Swift::Int v20 = v17 + 1;
    uint64_t v119 = v17;
    if (v17 + 1 >= v10)
    {
      uint64_t v25 = v17 + 1;
      goto LABEL_55;
    }
    uint64_t v21 = *a1;
    Swift::Int v130 = v10;
    uint64_t v22 = *(void *)(v121 + 72);
    sub_10001B220(v21 + v22 * v20, (uint64_t)v9, &qword_1007FC158);
    uint64_t v23 = v125;
    sub_10001B220(v21 + v22 * v19, v125, &qword_1007FC158);
    uint64_t v129 = Date.compare(_:)();
    sub_10001457C(v23, &qword_1007FC158);
    Swift::Int v24 = v130;
    sub_10001457C((uint64_t)v9, &qword_1007FC158);
    uint64_t v25 = v19 + 2;
    uint64_t v124 = v21;
    if (v19 + 2 < v24)
    {
      unsigned __int8 v116 = v16;
      Swift::Int v127 = v22 * v20;
      uint64_t v26 = v21;
      uint64_t v27 = v19 + 2;
      uint64_t v28 = v22 * (v19 + 2);
      while (1)
      {
        int v29 = v129 == -1;
        sub_10001B220(v26 + v28, (uint64_t)v9, &qword_1007FC158);
        uint64_t v30 = v125;
        sub_10001B220(v26 + v127, v125, &qword_1007FC158);
        int v31 = Date.compare(_:)() != -1;
        sub_10001457C(v30, &qword_1007FC158);
        sub_10001457C((uint64_t)v9, &qword_1007FC158);
        if (v29 == v31) {
          break;
        }
        v26 += v22;
        ++v27;
        Swift::Int v24 = v130;
        if (v130 == v27)
        {
          uint64_t v25 = v130;
          a1 = v126;
          uint64_t v16 = v116;
          uint64_t v19 = v119;
          goto LABEL_23;
        }
      }
      a1 = v126;
      uint64_t v16 = v116;
      uint64_t v25 = v27;
      uint64_t v19 = v119;
      Swift::Int v24 = v130;
    }
LABEL_23:
    if (v129 != -1) {
      break;
    }
    if (v25 < v19) {
      goto LABEL_141;
    }
    if (v19 >= v25) {
      break;
    }
    unsigned __int8 v116 = v16;
    uint64_t v32 = 0;
    Swift::Int v33 = v25;
    uint64_t v34 = v22 * (v25 - 1);
    Swift::Int v35 = v33 * v22;
    uint64_t v36 = v19 * v22;
    Swift::Int v127 = v33;
    do
    {
      if (v19 != v33 + v32 - 1)
      {
        uint64_t v38 = v124;
        if (!v124) {
          goto LABEL_144;
        }
        unint64_t v39 = v124 + v36;
        uint64_t v129 = v124 + v34;
        sub_10002C4EC(v124 + v36, v117, &qword_1007FC158);
        if (v36 < v34 || v39 >= v38 + v35)
        {
          uint64_t v37 = v129;
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          uint64_t v37 = v129;
          if (v36 != v34) {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        sub_10002C4EC(v117, v37, &qword_1007FC158);
        a1 = v126;
      }
      ++v19;
      --v32;
      Swift::Int v33 = v127;
      v34 -= v22;
      v35 -= v22;
      v36 += v22;
    }
    while (v19 < v127 + v32);
    uint64_t v16 = v116;
    uint64_t v25 = v127;
    uint64_t v19 = v119;
    Swift::Int v24 = v130;
    if (v127 < v130) {
      goto LABEL_37;
    }
LABEL_55:
    if (v25 < v19) {
      goto LABEL_132;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v16 = sub_1000F1750(0, *((void *)v16 + 2) + 1, 1, v16);
    }
    unint64_t v54 = *((void *)v16 + 2);
    unint64_t v53 = *((void *)v16 + 3);
    unint64_t v18 = v54 + 1;
    if (v54 >= v53 >> 1) {
      uint64_t v16 = sub_1000F1750((char *)(v53 > 1), v54 + 1, 1, v16);
    }
    *((void *)v16 + 2) = v18;
    unint64_t v55 = v16 + 32;
    char v56 = &v16[16 * v54 + 32];
    *(void *)char v56 = v19;
    *((void *)v56 + 1) = v25;
    Swift::Int v127 = v25;
    if (v54)
    {
      while (1)
      {
        unint64_t v57 = v18 - 1;
        if (v18 >= 4)
        {
          unint64_t v62 = &v55[16 * v18];
          uint64_t v63 = *((void *)v62 - 8);
          uint64_t v64 = *((void *)v62 - 7);
          BOOL v68 = __OFSUB__(v64, v63);
          uint64_t v65 = v64 - v63;
          if (v68) {
            goto LABEL_121;
          }
          uint64_t v67 = *((void *)v62 - 6);
          uint64_t v66 = *((void *)v62 - 5);
          BOOL v68 = __OFSUB__(v66, v67);
          uint64_t v60 = v66 - v67;
          char v61 = v68;
          if (v68) {
            goto LABEL_122;
          }
          unint64_t v69 = v18 - 2;
          id v70 = &v55[16 * v18 - 32];
          uint64_t v72 = *(void *)v70;
          uint64_t v71 = *((void *)v70 + 1);
          BOOL v68 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          if (v68) {
            goto LABEL_124;
          }
          BOOL v68 = __OFADD__(v60, v73);
          uint64_t v74 = v60 + v73;
          if (v68) {
            goto LABEL_127;
          }
          if (v74 >= v65)
          {
            uint64_t v92 = &v55[16 * v57];
            uint64_t v94 = *(void *)v92;
            uint64_t v93 = *((void *)v92 + 1);
            BOOL v68 = __OFSUB__(v93, v94);
            uint64_t v95 = v93 - v94;
            if (v68) {
              goto LABEL_131;
            }
            BOOL v85 = v60 < v95;
            goto LABEL_92;
          }
        }
        else
        {
          if (v18 != 3)
          {
            uint64_t v86 = *((void *)v16 + 4);
            uint64_t v87 = *((void *)v16 + 5);
            BOOL v68 = __OFSUB__(v87, v86);
            uint64_t v79 = v87 - v86;
            char v80 = v68;
            goto LABEL_86;
          }
          uint64_t v59 = *((void *)v16 + 4);
          uint64_t v58 = *((void *)v16 + 5);
          BOOL v68 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          char v61 = v68;
        }
        if (v61) {
          goto LABEL_123;
        }
        unint64_t v69 = v18 - 2;
        id v75 = &v55[16 * v18 - 32];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v78 = __OFSUB__(v76, v77);
        uint64_t v79 = v76 - v77;
        char v80 = v78;
        if (v78) {
          goto LABEL_126;
        }
        uint64_t v81 = &v55[16 * v57];
        uint64_t v83 = *(void *)v81;
        uint64_t v82 = *((void *)v81 + 1);
        BOOL v68 = __OFSUB__(v82, v83);
        uint64_t v84 = v82 - v83;
        if (v68) {
          goto LABEL_129;
        }
        if (__OFADD__(v79, v84)) {
          goto LABEL_130;
        }
        if (v79 + v84 >= v60)
        {
          BOOL v85 = v60 < v84;
LABEL_92:
          if (v85) {
            unint64_t v57 = v69;
          }
          goto LABEL_94;
        }
LABEL_86:
        if (v80) {
          goto LABEL_125;
        }
        int v88 = &v55[16 * v57];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v68 = __OFSUB__(v89, v90);
        uint64_t v91 = v89 - v90;
        if (v68) {
          goto LABEL_128;
        }
        if (v91 < v79) {
          goto LABEL_14;
        }
LABEL_94:
        unint64_t v96 = v57 - 1;
        if (v57 - 1 >= v18)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        uint64_t v97 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        id v98 = v16;
        uint64_t v99 = &v55[16 * v96];
        uint64_t v100 = *(void *)v99;
        unint64_t v101 = &v55[16 * v57];
        uint64_t v102 = *((void *)v101 + 1);
        uint64_t v103 = v122;
        sub_1003FB9D4(v97 + *(void *)(v121 + 72) * *(void *)v99, v97 + *(void *)(v121 + 72) * *(void *)v101, v97 + *(void *)(v121 + 72) * v102, v120);
        uint64_t v122 = v103;
        if (v103) {
          goto LABEL_116;
        }
        if (v102 < v100) {
          goto LABEL_118;
        }
        if (v57 > *((void *)v98 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v99 = v100;
        *(void *)&v55[16 * v96 + 8] = v102;
        unint64_t v104 = *((void *)v98 + 2);
        if (v57 >= v104) {
          goto LABEL_120;
        }
        uint64_t v16 = v98;
        unint64_t v18 = v104 - 1;
        memmove(&v55[16 * v57], v101 + 16, 16 * (v104 - 1 - v57));
        *((void *)v98 + 2) = v104 - 1;
        a1 = v126;
        if (v104 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v18 = 1;
LABEL_14:
    Swift::Int v10 = a1[1];
    Swift::Int v17 = v127;
    if (v127 >= v10) {
      goto LABEL_105;
    }
  }
  if (v25 >= v24) {
    goto LABEL_55;
  }
LABEL_37:
  if (__OFSUB__(v25, v19)) {
    goto LABEL_137;
  }
  if (v25 - v19 >= v115) {
    goto LABEL_55;
  }
  if (__OFADD__(v19, v115)) {
    goto LABEL_139;
  }
  if (v19 + v115 >= v24) {
    uint64_t v40 = v24;
  }
  else {
    uint64_t v40 = v19 + v115;
  }
  if (v40 >= v19)
  {
    if (v25 != v40)
    {
      unsigned __int8 v116 = v16;
      uint64_t v41 = *(void *)(v121 + 72);
      uint64_t v42 = v41 * (v25 - 1);
      uint64_t v124 = v41;
      Swift::Int v130 = v25 * v41;
      uint64_t v118 = v40;
      do
      {
        uint64_t v44 = 0;
        Swift::Int v127 = v25;
        while (1)
        {
          uint64_t v129 = v19;
          uint64_t v45 = *a1;
          sub_10001B220(v130 + v44 + *a1, (uint64_t)v9, &qword_1007FC158);
          uint64_t v46 = v42;
          uint64_t v47 = v42 + v44 + v45;
          char v48 = a1;
          uint64_t v49 = v125;
          sub_10001B220(v47, v125, &qword_1007FC158);
          uint64_t v50 = Date.compare(_:)();
          sub_10001457C(v49, &qword_1007FC158);
          sub_10001457C((uint64_t)v9, &qword_1007FC158);
          if (v50 != -1) {
            break;
          }
          uint64_t v51 = *v48;
          if (!*v48) {
            goto LABEL_142;
          }
          uint64_t v42 = v46;
          uint64_t v52 = v51 + v46 + v44;
          sub_10002C4EC(v51 + v130 + v44, v128, &qword_1007FC158);
          swift_arrayInitWithTakeFrontToBack();
          sub_10002C4EC(v128, v52, &qword_1007FC158);
          v44 -= v124;
          uint64_t v19 = v129 + 1;
          a1 = v126;
          Swift::Int v43 = v127;
          if (v127 == v129 + 1) {
            goto LABEL_47;
          }
        }
        Swift::Int v43 = v127;
        a1 = v48;
        uint64_t v42 = v46;
LABEL_47:
        uint64_t v25 = v43 + 1;
        v42 += v124;
        v130 += v124;
        uint64_t v19 = v119;
      }
      while (v25 != v118);
      uint64_t v25 = v118;
      uint64_t v16 = v116;
    }
    goto LABEL_55;
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1003FB750(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v25 = a1;
  uint64_t v26 = sub_100010218(&qword_1007FC158);
  __chkstk_darwin(v26);
  uint64_t v30 = (uint64_t)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v27 = (uint64_t)&v23 - v9;
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v23 - v12;
  uint64_t v29 = a3;
  uint64_t v24 = a2;
  if (a3 != a2)
  {
    uint64_t v14 = *(void *)(v11 + 72);
    uint64_t v32 = v14 * (v29 - 1);
    uint64_t v28 = v14;
    uint64_t v31 = v14 * v29;
LABEL_5:
    uint64_t v15 = 0;
    uint64_t v16 = v25;
    while (1)
    {
      uint64_t v17 = *a4;
      sub_10001B220(v31 + v15 + *a4, (uint64_t)v13, &qword_1007FC158);
      uint64_t v18 = v27;
      sub_10001B220(v32 + v15 + v17, v27, &qword_1007FC158);
      uint64_t v19 = Date.compare(_:)();
      sub_10001457C(v18, &qword_1007FC158);
      sub_10001457C((uint64_t)v13, &qword_1007FC158);
      if (v19 != -1)
      {
LABEL_4:
        v32 += v28;
        v31 += v28;
        if (++v29 == v24) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v20 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v21 = a4;
      uint64_t v22 = v20 + v32 + v15;
      sub_10002C4EC(v20 + v31 + v15, v30, &qword_1007FC158);
      swift_arrayInitWithTakeFrontToBack();
      sub_10002C4EC(v30, v22, &qword_1007FC158);
      v15 -= v28;
      ++v16;
      a4 = v21;
      if (v29 == v16) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1003FB9D4(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v41 = sub_100010218(&qword_1007FC158);
  __chkstk_darwin(v41);
  uint64_t v42 = (uint64_t)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v38 - v10;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_62:
    __break(1u);
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_62;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_63;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v45 = a1;
  unint64_t v44 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v25 = a4 + v18;
      unint64_t v43 = a4 + v18;
      unint64_t v45 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        uint64_t v27 = -v13;
        unint64_t v39 = a4;
        unint64_t v40 = a1;
        do
        {
          unint64_t v28 = a3 + v27;
          sub_10001B220(v25 + v27, (uint64_t)v11, &qword_1007FC158);
          unint64_t v29 = a2 + v27;
          unint64_t v30 = a3;
          uint64_t v31 = v42;
          sub_10001B220(a2 + v27, v42, &qword_1007FC158);
          uint64_t v32 = Date.compare(_:)();
          sub_10001457C(v31, &qword_1007FC158);
          sub_10001457C((uint64_t)v11, &qword_1007FC158);
          if (v32 == -1)
          {
            if (v30 < a2 || v28 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v36 = v39;
              unint64_t v35 = v40;
            }
            else
            {
              BOOL v34 = v30 == a2;
              unint64_t v36 = v39;
              unint64_t v35 = v40;
              if (!v34) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v45 += v27;
          }
          else
          {
            unint64_t v33 = v43;
            v43 += v27;
            if (v30 < v33 || v28 >= v33)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v29 = a2;
              unint64_t v36 = v39;
              unint64_t v35 = v40;
            }
            else
            {
              BOOL v34 = v30 == v33;
              unint64_t v36 = v39;
              unint64_t v35 = v40;
              if (!v34) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v29 = a2;
            }
          }
          unint64_t v25 = v43;
          if (v43 <= v36) {
            break;
          }
          a2 = v29;
          a3 = v28;
        }
        while (v29 > v35);
      }
      goto LABEL_60;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v40 = a4 + v17;
    unint64_t v43 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v20 = v42;
      do
      {
        sub_10001B220(a2, (uint64_t)v11, &qword_1007FC158);
        sub_10001B220(a4, v20, &qword_1007FC158);
        uint64_t v21 = Date.compare(_:)();
        sub_10001457C(v20, &qword_1007FC158);
        sub_10001457C((uint64_t)v11, &qword_1007FC158);
        unint64_t v22 = v45;
        if (v21 == -1)
        {
          unint64_t v24 = a2 + v13;
          if (v45 < a2 || v45 >= v24)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v45 == a2)
          {
            unint64_t v22 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        else
        {
          unint64_t v23 = v44 + v13;
          if (v45 < v44 || v45 >= v23)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v45 != v44)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v44 = v23;
          unint64_t v24 = a2;
        }
        unint64_t v45 = v22 + v13;
        a4 = v44;
        if (v44 >= v40) {
          break;
        }
        a2 = v24;
      }
      while (v24 < a3);
    }
LABEL_60:
    sub_1000F1CF4(&v45, &v44, (uint64_t *)&v43);
    return 1;
  }
LABEL_64:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1003FBEA0@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || 1 << *(unsigned char *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2) {
    return sub_10001DEB0(*(void *)(a3 + 48) + 40 * result, a4);
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1003FBEF8@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  if (result < 0 || (uint64_t v4 = result, 1 << *(unsigned char *)(a3 + 32) <= result))
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    uint64_t v6 = *(void *)(a3 + 48);
    uint64_t v7 = type metadata accessor for DatePickerDataProvider.MediaDate();
    return sub_10040AAE4(v6 + *(void *)(*(void *)(v7 - 8) + 72) * v4, a4, (uint64_t (*)(void))type metadata accessor for DatePickerDataProvider.MediaDate);
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_1003FBFA8(uint64_t a1, int a2, char a3, uint64_t a4, unint64_t *a5)
{
  unint64_t v7 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      __CocoaSet.element(at:)();
      sub_10001B284(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (__CocoaSet.Index.age.getter() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  __CocoaSet.Index.element.getter();
  sub_10001B284(0, a5);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  a5 = v17;
  swift_unknownObjectRelease();
  Swift::Int v8 = NSObject._rawHashValue(seed:)(*(void *)(a4 + 40));
  uint64_t v9 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v7 = v8 & ~v9;
  if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v10 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
  char v11 = static NSObject.== infix(_:_:)();

  if ((v11 & 1) == 0)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v7 = (v7 + 1) & v12;
      if (((*(void *)(a4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_23;
      }
      id v13 = *(id *)(*(void *)(a4 + 48) + 8 * v7);
      char v14 = static NSObject.== infix(_:_:)();
    }
    while ((v14 & 1) == 0);
  }

LABEL_17:
  uint64_t v15 = *(void **)(*(void *)(a4 + 48) + 8 * v7);

  id v16 = v15;
}

uint64_t sub_1003FC218(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

double *sub_1003FC2A0(uint64_t a1, void (*a2)(unint64_t, unint64_t), uint64_t a3)
{
  uint64_t v36 = a3;
  uint64_t v42 = a2;
  uint64_t v5 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v5 - 8);
  unint64_t v7 = (char *)v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v41 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_1007FC158);
  uint64_t v39 = *(void *)(v10 - 8);
  uint64_t v40 = v10;
  __chkstk_darwin(v10);
  uint64_t v45 = (uint64_t)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v38 = (char *)v31 - v13;
  __chkstk_darwin(v14);
  uint64_t v37 = (uint64_t)v31 - v15;
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return _swiftEmptyArrayStorage;
  }
  void v31[2] = v3;
  uint64_t v17 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v18 = a1
      + ((*(unsigned __int8 *)(*(void *)(v17 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v17 - 8) + 80));
  uint64_t v19 = *(void *)(*(void *)(v17 - 8) + 72);
  unint64_t v44 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  BOOL v34 = (void (**)(char *))(v8 + 32);
  v31[1] = a1;
  swift_bridgeObjectRetain();
  uint64_t v20 = _swiftEmptyArrayStorage;
  unint64_t v32 = 0x800000010069CD90;
  uint64_t v33 = v19;
  uint64_t v21 = v43;
  uint64_t v35 = v17;
  do
  {
    sub_10001B220(v18 + *(int *)(v17 + 28), (uint64_t)v7, (uint64_t *)&unk_1007FC470);
    if ((*v44)(v7, 1, v21) == 1)
    {
      sub_10001457C((uint64_t)v7, (uint64_t *)&unk_1007FC470);
      v42(0xD000000000000040, v32);
    }
    else
    {
      unint64_t v22 = *v34;
      unint64_t v23 = v41;
      (*v34)(v41);
      uint64_t v24 = v21;
      uint64_t v25 = (uint64_t)v38;
      uint64_t v26 = (uint64_t)&v38[*(int *)(v40 + 48)];
      ((void (*)(char *, char *, uint64_t))v22)(v38, v23, v24);
      sub_10040AAE4(v18, v26, _s10VisitAssetC9VisitDataVMa);
      uint64_t v27 = v37;
      sub_10002C4EC(v25, v37, &qword_1007FC158);
      sub_10002C4EC(v27, v45, &qword_1007FC158);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v20 = (double *)sub_1002A6BE8(0, *((void *)v20 + 2) + 1, 1, (unint64_t)v20);
      }
      unint64_t v29 = *((void *)v20 + 2);
      unint64_t v28 = *((void *)v20 + 3);
      uint64_t v19 = v33;
      if (v29 >= v28 >> 1) {
        uint64_t v20 = (double *)sub_1002A6BE8(v28 > 1, v29 + 1, 1, (unint64_t)v20);
      }
      *((void *)v20 + 2) = v29 + 1;
      sub_10002C4EC(v45, (uint64_t)v20+ ((*(unsigned __int8 *)(v39 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v39 + 80))+ *(void *)(v39 + 72) * v29, &qword_1007FC158);
      uint64_t v21 = v43;
      uint64_t v17 = v35;
    }
    v18 += v19;
    --v16;
  }
  while (v16);
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_1003FC708(uint64_t a1, uint64_t a2)
{
  v2[35] = a1;
  v2[36] = a2;
  uint64_t v3 = type metadata accessor for Date();
  v2[37] = v3;
  v2[38] = *(void *)(v3 - 8);
  v2[39] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[40] = v4;
  v2[41] = *(void *)(v4 - 8);
  v2[42] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_1007FC470);
  v2[43] = swift_task_alloc();
  v2[44] = swift_task_alloc();
  v2[45] = swift_task_alloc();
  sub_100010218(&qword_100800950);
  v2[46] = swift_task_alloc();
  return _swift_task_switch(sub_1003FC8A0, 0, 0);
}

unint64_t sub_1003FC8A0()
{
  unint64_t v1 = *(void **)(v0 + 280);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 368);
    uint64_t v3 = *(void *)(v0 + 320);
    uint64_t v4 = *(void *)(v0 + 328);
    uint64_t v5 = *(void *)(v0 + 288) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bundleId;
    swift_beginAccess();
    sub_10001B220(v5, v2, &qword_100800950);
    LODWORD(v5) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
    id v6 = v1;
    sub_10001457C(v2, &qword_100800950);
    if (v5 == 1) {
      goto LABEL_5;
    }
    uint64_t v7 = *(void *)(v0 + 360);
    uint64_t v8 = *(void *)(v0 + 296);
    uint64_t v9 = *(void *)(v0 + 304);
    uint64_t v10 = *(void *)(v0 + 288) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bundleDate;
    swift_beginAccess();
    sub_10001B220(v10, v7, (uint64_t *)&unk_1007FC470);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    LODWORD(v8) = v11(v7, 1, v8);
    sub_10001457C(v7, (uint64_t *)&unk_1007FC470);
    if (v8 == 1
      || (uint64_t v12 = *(void *)(v0 + 352),
          uint64_t v13 = *(void *)(v0 + 296),
          uint64_t v14 = *(void *)(v0 + 288) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bundleEndDate,
          swift_beginAccess(),
          sub_10001B220(v14, v12, (uint64_t *)&unk_1007FC470),
          LODWORD(v13) = v11(v12, 1, v13),
          sub_10001457C(v12, (uint64_t *)&unk_1007FC470),
          v13 == 1))
    {
LABEL_5:
      uint64_t v15 = *(void *)(v0 + 344);
      uint64_t v16 = *(void *)(v0 + 304);
      uint64_t v17 = *(void *)(v0 + 296);
      id v18 = [v6 suggestionIdentifier];
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      id v19 = [v6 startDate];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      id v20 = [v6 endDate];
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v15, 0, 1, v17);
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 376) = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_1003FD3E0;
      uint64_t v23 = *(void *)(v0 + 336);
      uint64_t v22 = *(void *)(v0 + 344);
      uint64_t v24 = *(void *)(v0 + 312);
      return sub_1005840C8(v23, v24, v22);
    }
    if (qword_1007F6E48 != -1) {
      swift_once();
    }
    if (![(id)qword_10083D3C0 BOOLForKey:@"ALWAYS_USE_MOMENT_DATE"]
      || (sub_10018AF68() & 1) != 0)
    {
      if ([(id)qword_10083D3C0 integerForKey:@"ADD_ENTRY_TITLE"] == (id)2) {
        goto LABEL_25;
      }
      uint64_t v27 = *(void *)(v0 + 288);
      uint64_t v28 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title;
      unint64_t v29 = *(void **)(v27 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title);
      if (v29)
      {
        id v30 = [v29 string];
        uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v33 = v32;

        swift_bridgeObjectRelease();
        if ((v33 & 0x2000000000000000) == 0)
        {
          uint64_t v34 = v31 & 0xFFFFFFFFFFFFLL;
          goto LABEL_24;
        }
      }
      else
      {
        unint64_t v33 = 0xE000000000000000;
      }
      uint64_t v34 = HIBYTE(v33) & 0xF;
LABEL_24:
      if (!v34)
      {
        id v53 = [*(id *)(v0 + 280) title];
        uint64_t v54 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v56 = v55;

        swift_bridgeObjectRelease();
        uint64_t v57 = HIBYTE(v56) & 0xF;
        if ((v56 & 0x2000000000000000) == 0) {
          uint64_t v57 = v54 & 0xFFFFFFFFFFFFLL;
        }
        if (v57 && [*(id *)(v0 + 280) type] != (id)11)
        {
          uint64_t v58 = *(void *)(v0 + 288);
          id v59 = [*(id *)(v0 + 280) title];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          id v60 = objc_allocWithZone((Class)NSAttributedString);
          swift_bridgeObjectRetain();
          NSString v61 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v62 = [v60 initWithString:v61];

          swift_bridgeObjectRelease();
          uint64_t v63 = *(void **)(v27 + v28);
          *(void *)(v27 + v28) = v62;
          id v64 = v62;

          uint64_t v65 = *(void **)(v58 + 24);
          uint64_t v66 = swift_allocObject();
          swift_weakInit();
          *(void *)(v0 + 48) = sub_1003FE858;
          *(void *)(v0 + 56) = v66;
          *(void *)(v0 + 16) = _NSConcreteStackBlock;
          *(void *)(v0 + 24) = 1107296256;
          *(void *)(v0 + 32) = sub_10017D530;
          *(void *)(v0 + 40) = &unk_1007A9D30;
          uint64_t v67 = _Block_copy((const void *)(v0 + 16));
          swift_release();
          [v65 performBlock:v67];
          _Block_release(v67);

          *(unsigned char *)(v58 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showTitle) = 1;
          uint64_t v68 = swift_allocObject();
          swift_weakInit();
          *(void *)(v0 + 192) = sub_10005F75C;
          *(void *)(v0 + 200) = v68;
          *(void *)(v0 + 160) = _NSConcreteStackBlock;
          *(void *)(v0 + 168) = 1107296256;
          *(void *)(v0 + 176) = sub_10017D530;
          *(void *)(v0 + 184) = &unk_1007A9D58;
          unint64_t v69 = _Block_copy((const void *)(v0 + 160));
          swift_release();
          [v65 performBlock:v69];
          _Block_release(v69);
        }
      }
LABEL_25:
      uint64_t v38 = *(void *)(v0 + 288);
      uint64_t v39 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_prompts;
      uint64_t v40 = *(void **)(v38 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_prompts);
      if (v40)
      {
        id v41 = [v40 string];
        uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v44 = v43;

        swift_bridgeObjectRelease();
        if ((v44 & 0x2000000000000000) == 0)
        {
          uint64_t v45 = v42 & 0xFFFFFFFFFFFFLL;
          goto LABEL_30;
        }
      }
      else
      {
        unint64_t v44 = 0xE000000000000000;
      }
      uint64_t v45 = HIBYTE(v44) & 0xF;
LABEL_30:
      if (!v45)
      {
        id v46 = [*(id *)(v0 + 280) writingPrompts];
        uint64_t v47 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        unint64_t v48 = *(void *)(v47 + 16);
        if (!v48) {
          goto LABEL_38;
        }
        unint64_t result = sub_1000CDA14(v48);
        if ((result & 0x8000000000000000) != 0)
        {
LABEL_52:
          __break(1u);
          goto LABEL_53;
        }
        if (result >= *(void *)(v47 + 16))
        {
LABEL_53:
          __break(1u);
          return result;
        }
        unint64_t v49 = v47 + 16 * result;
        uint64_t v51 = *(void *)(v49 + 32);
        unint64_t v50 = *(void *)(v49 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v52 = HIBYTE(v50) & 0xF;
        if ((v50 & 0x2000000000000000) == 0) {
          uint64_t v52 = v51 & 0xFFFFFFFFFFFFLL;
        }
        if (v52 && [*(id *)(v0 + 280) type] != (id)11)
        {
          uint64_t v70 = *(void *)(v0 + 288);
          id v71 = objc_allocWithZone((Class)NSAttributedString);
          swift_bridgeObjectRetain();
          NSString v72 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v73 = [v71 initWithString:v72];

          swift_bridgeObjectRelease();
          uint64_t v74 = *(void **)(v38 + v39);
          *(void *)(v38 + v39) = v73;
          id v75 = v73;

          uint64_t v76 = *(void **)(v70 + 24);
          uint64_t v77 = swift_allocObject();
          swift_weakInit();
          *(void *)(v0 + 144) = sub_10005F35C;
          *(void *)(v0 + 152) = v77;
          *(void *)(v0 + 112) = _NSConcreteStackBlock;
          *(void *)(v0 + 120) = 1107296256;
          *(void *)(v0 + 128) = sub_10017D530;
          *(void *)(v0 + 136) = &unk_1007A9D08;
          BOOL v78 = _Block_copy((const void *)(v0 + 112));
          swift_release();
          [v76 performBlock:v78];
          _Block_release(v78);
        }
        else
        {
LABEL_38:
          swift_bridgeObjectRelease();
        }
      }
      if ([*(id *)(v0 + 280) type] != (id)10) {
        goto LABEL_48;
      }
      uint64_t v79 = *(void *)(v0 + 288);
      *(unsigned char *)(v79 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showPhotoMemoryBanner) = 1;
      char v80 = *(void **)(v79 + 24);
      uint64_t v81 = swift_allocObject();
      *(void *)(v81 + 16) = sub_10039A378;
      *(void *)(v81 + 24) = v79;
      *(void *)(v0 + 96) = sub_100010848;
      *(void *)(v0 + 104) = v81;
      *(void *)(v0 + 64) = _NSConcreteStackBlock;
      *(void *)(v0 + 72) = 1107296256;
      *(void *)(v0 + 80) = sub_1003F44E4;
      *(void *)(v0 + 88) = &unk_1007A9CB8;
      uint64_t v82 = _Block_copy((const void *)(v0 + 64));
      swift_retain();
      swift_retain();
      swift_release();
      [v80 performBlockAndWait:v82];
      _Block_release(v82);
      LOBYTE(v82) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      unint64_t result = swift_release();
      if ((v82 & 1) == 0)
      {
LABEL_48:
        uint64_t v84 = (uint64_t (__cdecl *)())((char *)&dword_10080CA48 + dword_10080CA48);
        uint64_t v83 = (void *)swift_task_alloc();
        *(void *)(v0 + 392) = v83;
        void *v83 = v0;
        v83[1] = sub_1003FE650;
        return v84();
      }
      __break(1u);
      goto LABEL_52;
    }
    id v35 = [*(id *)(v0 + 280) startDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v36 = (void *)swift_task_alloc();
    *(void *)(v0 + 384) = v36;
    *uint64_t v36 = v0;
    v36[1] = sub_1003FDDE4;
    uint64_t v37 = *(void *)(v0 + 312);
    return sub_100583590(v37, 0);
  }
  else
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
    return v26();
  }
}

uint64_t sub_1003FD3E0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 344);
  uint64_t v2 = *(void *)(*(void *)v0 + 336);
  uint64_t v3 = *(void *)(*(void *)v0 + 328);
  uint64_t v4 = *(void *)(*(void *)v0 + 320);
  uint64_t v5 = *(void *)(*(void *)v0 + 312);
  uint64_t v6 = *(void *)(*(void *)v0 + 304);
  uint64_t v7 = *(void *)(*(void *)v0 + 296);
  swift_task_dealloc();
  sub_10001457C(v1, (uint64_t *)&unk_1007FC470);
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_1003FD5C0, 0, 0);
}

unint64_t sub_1003FD5C0()
{
  if (qword_1007F6E48 != -1) {
    swift_once();
  }
  if (![(id)qword_10083D3C0 BOOLForKey:@"ALWAYS_USE_MOMENT_DATE"]
    || (sub_10018AF68() & 1) != 0)
  {
    if ([(id)qword_10083D3C0 integerForKey:@"ADD_ENTRY_TITLE"] == (id)2) {
      goto LABEL_20;
    }
    uint64_t v1 = *(void *)(v0 + 288);
    uint64_t v2 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title;
    uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title);
    if (v3)
    {
      id v4 = [v3 string];
      uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v7 = v6;

      swift_bridgeObjectRelease();
      if ((v7 & 0x2000000000000000) == 0)
      {
        if ((v5 & 0xFFFFFFFFFFFFLL) != 0) {
          goto LABEL_20;
        }
LABEL_15:
        id v12 = [*(id *)(v0 + 280) title];
        uint64_t v13 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v15 = v14;

        swift_bridgeObjectRelease();
        uint64_t v16 = HIBYTE(v15) & 0xF;
        if ((v15 & 0x2000000000000000) == 0) {
          uint64_t v16 = v13 & 0xFFFFFFFFFFFFLL;
        }
        if (v16 && [*(id *)(v0 + 280) type] != (id)11)
        {
          uint64_t v17 = *(void *)(v0 + 288);
          id v18 = [*(id *)(v0 + 280) title];
          static String._unconditionallyBridgeFromObjectiveC(_:)();

          id v19 = objc_allocWithZone((Class)NSAttributedString);
          swift_bridgeObjectRetain();
          NSString v20 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v21 = [v19 initWithString:v20];

          swift_bridgeObjectRelease();
          uint64_t v22 = *(void **)(v1 + v2);
          *(void *)(v1 + v2) = v21;
          id v23 = v21;

          uint64_t v24 = *(void **)(v17 + 24);
          uint64_t v25 = swift_allocObject();
          swift_weakInit();
          *(void *)(v0 + 48) = sub_1003FE858;
          *(void *)(v0 + 56) = v25;
          *(void *)(v0 + 16) = _NSConcreteStackBlock;
          *(void *)(v0 + 24) = 1107296256;
          *(void *)(v0 + 32) = sub_10017D530;
          *(void *)(v0 + 40) = &unk_1007A9D30;
          uint64_t v26 = _Block_copy((const void *)(v0 + 16));
          swift_release();
          [v24 performBlock:v26];
          _Block_release(v26);

          *(unsigned char *)(v17 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showTitle) = 1;
          uint64_t v27 = swift_allocObject();
          swift_weakInit();
          *(void *)(v0 + 192) = sub_10005F75C;
          *(void *)(v0 + 200) = v27;
          *(void *)(v0 + 160) = _NSConcreteStackBlock;
          *(void *)(v0 + 168) = 1107296256;
          *(void *)(v0 + 176) = sub_10017D530;
          *(void *)(v0 + 184) = &unk_1007A9D58;
          uint64_t v28 = _Block_copy((const void *)(v0 + 160));
          swift_release();
          [v24 performBlock:v28];
          _Block_release(v28);
        }
LABEL_20:
        uint64_t v29 = *(void *)(v0 + 288);
        uint64_t v30 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_prompts;
        uint64_t v31 = *(void **)(v29 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_prompts);
        if (v31)
        {
          id v32 = [v31 string];
          uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v35 = v34;

          swift_bridgeObjectRelease();
          if ((v35 & 0x2000000000000000) == 0)
          {
            if ((v33 & 0xFFFFFFFFFFFFLL) != 0) {
              goto LABEL_36;
            }
LABEL_26:
            id v36 = [*(id *)(v0 + 280) writingPrompts];
            uint64_t v37 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

            unint64_t v38 = *(void *)(v37 + 16);
            if (!v38) {
              goto LABEL_33;
            }
            unint64_t result = sub_1000CDA14(v38);
            if ((result & 0x8000000000000000) != 0)
            {
LABEL_42:
              __break(1u);
              goto LABEL_43;
            }
            if (result >= *(void *)(v37 + 16))
            {
LABEL_43:
              __break(1u);
              return result;
            }
            unint64_t v39 = v37 + 16 * result;
            uint64_t v41 = *(void *)(v39 + 32);
            unint64_t v40 = *(void *)(v39 + 40);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            uint64_t v42 = HIBYTE(v40) & 0xF;
            if ((v40 & 0x2000000000000000) == 0) {
              uint64_t v42 = v41 & 0xFFFFFFFFFFFFLL;
            }
            if (v42 && [*(id *)(v0 + 280) type] != (id)11)
            {
              uint64_t v43 = *(void *)(v0 + 288);
              id v44 = objc_allocWithZone((Class)NSAttributedString);
              swift_bridgeObjectRetain();
              NSString v45 = String._bridgeToObjectiveC()();
              swift_bridgeObjectRelease();
              id v46 = [v44 initWithString:v45];

              swift_bridgeObjectRelease();
              uint64_t v47 = *(void **)(v29 + v30);
              *(void *)(v29 + v30) = v46;
              id v48 = v46;

              unint64_t v49 = *(void **)(v43 + 24);
              uint64_t v50 = swift_allocObject();
              swift_weakInit();
              *(void *)(v0 + 144) = sub_10005F35C;
              *(void *)(v0 + 152) = v50;
              *(void *)(v0 + 112) = _NSConcreteStackBlock;
              *(void *)(v0 + 120) = 1107296256;
              *(void *)(v0 + 128) = sub_10017D530;
              *(void *)(v0 + 136) = &unk_1007A9D08;
              uint64_t v51 = _Block_copy((const void *)(v0 + 112));
              swift_release();
              [v49 performBlock:v51];
              _Block_release(v51);
            }
            else
            {
LABEL_33:
              swift_bridgeObjectRelease();
            }
LABEL_36:
            if ([*(id *)(v0 + 280) type] != (id)10) {
              goto LABEL_38;
            }
            uint64_t v52 = *(void *)(v0 + 288);
            *(unsigned char *)(v52 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showPhotoMemoryBanner) = 1;
            id v53 = *(void **)(v52 + 24);
            uint64_t v54 = swift_allocObject();
            *(void *)(v54 + 16) = sub_10039A378;
            *(void *)(v54 + 24) = v52;
            *(void *)(v0 + 96) = sub_100010848;
            *(void *)(v0 + 104) = v54;
            *(void *)(v0 + 64) = _NSConcreteStackBlock;
            *(void *)(v0 + 72) = 1107296256;
            *(void *)(v0 + 80) = sub_1003F44E4;
            *(void *)(v0 + 88) = &unk_1007A9CB8;
            unint64_t v55 = _Block_copy((const void *)(v0 + 64));
            swift_retain();
            swift_retain();
            swift_release();
            [v53 performBlockAndWait:v55];
            _Block_release(v55);
            LOBYTE(v55) = swift_isEscapingClosureAtFileLocation();
            swift_release();
            unint64_t result = swift_release();
            if ((v55 & 1) == 0)
            {
LABEL_38:
              uint64_t v57 = (uint64_t (__cdecl *)())((char *)&dword_10080CA48 + dword_10080CA48);
              unint64_t v56 = (void *)swift_task_alloc();
              *(void *)(v0 + 392) = v56;
              *unint64_t v56 = v0;
              v56[1] = sub_1003FE650;
              return v57();
            }
            __break(1u);
            goto LABEL_42;
          }
        }
        else
        {
          unint64_t v35 = 0xE000000000000000;
        }
        if ((v35 & 0xF00000000000000) != 0) {
          goto LABEL_36;
        }
        goto LABEL_26;
      }
    }
    else
    {
      unint64_t v7 = 0xE000000000000000;
    }
    if ((v7 & 0xF00000000000000) != 0) {
      goto LABEL_20;
    }
    goto LABEL_15;
  }
  id v8 = [*(id *)(v0 + 280) startDate];
  static Date._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 384) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1003FDDE4;
  uint64_t v10 = *(void *)(v0 + 312);
  return sub_100583590(v10, 0);
}

uint64_t sub_1003FDDE4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 312);
  uint64_t v2 = *(void *)(*(void *)v0 + 304);
  uint64_t v3 = *(void *)(*(void *)v0 + 296);
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1003FDF3C, 0, 0);
}

unint64_t sub_1003FDF3C()
{
  if ([(id)qword_10083D3C0 integerForKey:@"ADD_ENTRY_TITLE"] == (id)2) {
    goto LABEL_13;
  }
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v2 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title);
  if (!v3)
  {
    unint64_t v7 = 0xE000000000000000;
LABEL_7:
    if ((v7 & 0xF00000000000000) != 0) {
      goto LABEL_13;
    }
    goto LABEL_8;
  }
  id v4 = [v3 string];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = v6;

  swift_bridgeObjectRelease();
  if ((v7 & 0x2000000000000000) != 0) {
    goto LABEL_7;
  }
  if ((v5 & 0xFFFFFFFFFFFFLL) != 0) {
    goto LABEL_13;
  }
LABEL_8:
  id v8 = [*(id *)(v0 + 280) title];
  uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v11 = v10;

  swift_bridgeObjectRelease();
  uint64_t v12 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
  }
  if (v12 && [*(id *)(v0 + 280) type] != (id)11)
  {
    uint64_t v13 = *(void *)(v0 + 288);
    id v14 = [*(id *)(v0 + 280) title];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    id v15 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain();
    NSString v16 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v17 = [v15 initWithString:v16];

    swift_bridgeObjectRelease();
    id v18 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v17;
    id v19 = v17;

    NSString v20 = *(void **)(v13 + 24);
    uint64_t v21 = swift_allocObject();
    swift_weakInit();
    *(void *)(v0 + 48) = sub_1003FE858;
    *(void *)(v0 + 56) = v21;
    *(void *)(v0 + 16) = _NSConcreteStackBlock;
    *(void *)(v0 + 24) = 1107296256;
    *(void *)(v0 + 32) = sub_10017D530;
    *(void *)(v0 + 40) = &unk_1007A9D30;
    uint64_t v22 = _Block_copy((const void *)(v0 + 16));
    swift_release();
    [v20 performBlock:v22];
    _Block_release(v22);

    *(unsigned char *)(v13 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showTitle) = 1;
    uint64_t v23 = swift_allocObject();
    swift_weakInit();
    *(void *)(v0 + 192) = sub_10005F75C;
    *(void *)(v0 + 200) = v23;
    *(void *)(v0 + 160) = _NSConcreteStackBlock;
    *(void *)(v0 + 168) = 1107296256;
    *(void *)(v0 + 176) = sub_10017D530;
    *(void *)(v0 + 184) = &unk_1007A9D58;
    uint64_t v24 = _Block_copy((const void *)(v0 + 160));
    swift_release();
    [v20 performBlock:v24];
    _Block_release(v24);
  }
LABEL_13:
  uint64_t v25 = *(void *)(v0 + 288);
  uint64_t v26 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_prompts;
  uint64_t v27 = *(void **)(v25 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_prompts);
  if (v27)
  {
    id v28 = [v27 string];
    uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v31 = v30;

    swift_bridgeObjectRelease();
    if ((v31 & 0x2000000000000000) == 0)
    {
      if ((v29 & 0xFFFFFFFFFFFFLL) != 0) {
        goto LABEL_29;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v31 = 0xE000000000000000;
  }
  if ((v31 & 0xF00000000000000) != 0) {
    goto LABEL_29;
  }
LABEL_19:
  id v32 = [*(id *)(v0 + 280) writingPrompts];
  uint64_t v33 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v34 = *(void *)(v33 + 16);
  if (!v34) {
    goto LABEL_26;
  }
  unint64_t result = sub_1000CDA14(v34);
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (result >= *(void *)(v33 + 16))
  {
LABEL_36:
    __break(1u);
    return result;
  }
  unint64_t v36 = v33 + 16 * result;
  uint64_t v38 = *(void *)(v36 + 32);
  unint64_t v37 = *(void *)(v36 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v39 = HIBYTE(v37) & 0xF;
  if ((v37 & 0x2000000000000000) == 0) {
    uint64_t v39 = v38 & 0xFFFFFFFFFFFFLL;
  }
  if (v39 && [*(id *)(v0 + 280) type] != (id)11)
  {
    uint64_t v40 = *(void *)(v0 + 288);
    id v41 = objc_allocWithZone((Class)NSAttributedString);
    swift_bridgeObjectRetain();
    NSString v42 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v43 = [v41 initWithString:v42];

    swift_bridgeObjectRelease();
    id v44 = *(void **)(v25 + v26);
    *(void *)(v25 + v26) = v43;
    id v45 = v43;

    id v46 = *(void **)(v40 + 24);
    uint64_t v47 = swift_allocObject();
    swift_weakInit();
    *(void *)(v0 + 144) = sub_10005F35C;
    *(void *)(v0 + 152) = v47;
    *(void *)(v0 + 112) = _NSConcreteStackBlock;
    *(void *)(v0 + 120) = 1107296256;
    *(void *)(v0 + 128) = sub_10017D530;
    *(void *)(v0 + 136) = &unk_1007A9D08;
    id v48 = _Block_copy((const void *)(v0 + 112));
    swift_release();
    [v46 performBlock:v48];
    _Block_release(v48);
  }
  else
  {
LABEL_26:
    swift_bridgeObjectRelease();
  }
LABEL_29:
  if ([*(id *)(v0 + 280) type] == (id)10)
  {
    uint64_t v49 = *(void *)(v0 + 288);
    *(unsigned char *)(v49 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showPhotoMemoryBanner) = 1;
    uint64_t v50 = *(void **)(v49 + 24);
    uint64_t v51 = swift_allocObject();
    *(void *)(v51 + 16) = sub_10039A378;
    *(void *)(v51 + 24) = v49;
    *(void *)(v0 + 96) = sub_100010848;
    *(void *)(v0 + 104) = v51;
    *(void *)(v0 + 64) = _NSConcreteStackBlock;
    *(void *)(v0 + 72) = 1107296256;
    *(void *)(v0 + 80) = sub_1003F44E4;
    *(void *)(v0 + 88) = &unk_1007A9CB8;
    uint64_t v52 = _Block_copy((const void *)(v0 + 64));
    swift_retain();
    swift_retain();
    swift_release();
    [v50 performBlockAndWait:v52];
    _Block_release(v52);
    LOBYTE(v52) = swift_isEscapingClosureAtFileLocation();
    swift_release();
    unint64_t result = swift_release();
    if (v52)
    {
      __break(1u);
      goto LABEL_35;
    }
  }
  uint64_t v54 = (uint64_t (__cdecl *)())((char *)&dword_10080CA48 + dword_10080CA48);
  id v53 = (void *)swift_task_alloc();
  *(void *)(v0 + 392) = v53;
  *id v53 = v0;
  v53[1] = sub_1003FE650;
  return v54();
}

uint64_t sub_1003FE650()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1003FE74C, 0, 0);
}

uint64_t sub_1003FE74C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1003FE7F8()
{
  return swift_deallocObject();
}

uint64_t sub_1003FE808(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1003FE818()
{
  return swift_release();
}

uint64_t sub_1003FE820()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

void sub_1003FE858()
{
}

unint64_t sub_1003FE860(void *a1)
{
  unint64_t result = (unint64_t)[a1 reflectionType];
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_10033AA50();
    uint64_t v4 = v3;
    id v5 = [a1 reflectionPrompts];
    uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (*(void *)(v6 + 16))
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v7 = objc_allocWithZone((Class)NSAttributedString);
      swift_bridgeObjectRetain();
      NSString v8 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v7 initWithString:v8];
      swift_bridgeObjectRelease();
    }
    else
    {

      swift_bridgeObjectRelease();
    }
    return v4;
  }
  return result;
}

uint64_t sub_1003FE97C(uint64_t a1, void *a2, uint64_t a3, void *a4, void *a5, void (*a6)(unint64_t, unint64_t))
{
  uint64_t v12 = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  v13._countAndFlagsBits = a3;
  v13._object = a4;
  String.append(_:)(v13);
  v14._countAndFlagsBits = 2108704;
  v14._object = (void *)0xE300000000000000;
  String.append(_:)(v14);
  if ([a5 respondsToSelector:"debugDescription"])
  {
    id v15 = [a5 debugDescription];
    uint64_t v16 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v17;
  }
  else
  {
    uint64_t v16 = 0;
  }
  v18._countAndFlagsBits = v16;
  v18._object = v12;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  sub_1003F5B3C(a1, a2, 0xD000000000000012, (void *)0x800000010069CCE0, a6);

  return swift_bridgeObjectRelease();
}

double *sub_1003FEACC(uint64_t a1, void *a2, void (*a3)(unint64_t, unint64_t), uint64_t a4, void (*a5)(unint64_t, unint64_t, __n128), uint64_t a6)
{
  uint64_t v139 = a4;
  uint64_t v138 = a3;
  id v147 = a2;
  uint64_t v152 = type metadata accessor for VisitDuration(0);
  uint64_t v151 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  uint64_t v146 = (uint64_t)&v131 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v131 - v11;
  uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v13 - 8);
  id v150 = (char *)&v131 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_100010218(&qword_1007FD188);
  __chkstk_darwin(v155);
  uint64_t v145 = (char *)&v131 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  char v144 = (char *)&v131 - v17;
  uint64_t v143 = sub_100010218(&qword_100807940);
  uint64_t v142 = *(void *)(v143 - 8);
  __chkstk_darwin(v143);
  uint64_t v161 = (char *)&v131 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v141 = v18;
  __chkstk_darwin(v19);
  uint64_t v160 = (uint64_t)&v131 - v20;
  uint64_t v21 = type metadata accessor for Date();
  uint64_t v137 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  unint64_t v135 = (char *)&v131 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  char v162 = (char *)&v131 - v24;
  uint64_t v136 = v25;
  __chkstk_darwin(v26);
  uint64_t v173 = (char *)&v131 - v27;
  uint64_t v28 = sub_100010218(&qword_1007FC158);
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  __n128 v32 = __chkstk_darwin(v30);
  uint64_t v165 = (uint64_t)&v131 - v33;
  if (!a1 || !*(void *)(a1 + 16))
  {
    a5(0xD000000000000014, 0x800000010069CD00, v32);
    return _swiftEmptyArrayStorage;
  }
  uint64_t v164 = v31;
  uint64_t v34 = v139;
  swift_retain();
  unint64_t v35 = sub_1003FC2A0(a1, v138, v34);
  swift_release();
  uint64_t v175 = v35;
  swift_bridgeObjectRetain();
  sub_1003FAC58((void **)&v175);
  uint64_t v133 = a6;
  swift_bridgeObjectRelease();
  unint64_t v36 = v175;
  id v37 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v38 = String._bridgeToObjectiveC()();
  uint64_t v149 = v37;
  [v37 setDateFormat:v38];

  unint64_t v39 = *((void *)v36 + 2);
  if (v39)
  {
    uint64_t v159 = v28;
    uint64_t v132 = a5;
    uint64_t v40 = 0;
    unint64_t v41 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    id v131 = v36;
    uint64_t v42 = (uint64_t)v36 + v41;
    uint64_t v158 = *(void *)(v29 + 72);
    id v43 = (void (**)(char *, uint64_t, uint64_t))(v137 + 32);
    uint64_t v169 = (void (**)(char *, uint64_t))(v137 + 8);
    uint64_t v170 = (void (**)(uint64_t, uint64_t, uint64_t))(v137 + 16);
    id v148 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v137 + 56);
    id v134 = (void *)0x800000010069CD40;
    uint64_t v171 = _swiftEmptyArrayStorage;
    uint64_t v172 = _swiftEmptyArrayStorage;
    id v140 = v12;
    uint64_t v44 = v165;
    unint64_t v154 = v39;
    uint64_t v157 = (void (**)(char *, uint64_t, uint64_t))(v137 + 32);
    uint64_t v45 = v21;
    uint64_t v156 = v21;
    while (1)
    {
      uint64_t v54 = v159;
      uint64_t v55 = v44 + *(int *)(v159 + 48);
      sub_10001B220(v42, v44, &qword_1007FC158);
      uint64_t v56 = v44;
      uint64_t v57 = v164;
      uint64_t v58 = v164 + *(int *)(v54 + 48);
      uint64_t v168 = *v170;
      v168(v164, v56, v45);
      uint64_t v163 = v55;
      sub_10040AAE4(v55, v58, _s10VisitAssetC9VisitDataVMa);
      id v59 = *v43;
      (*v43)(v173, v57, v45);
      sub_10040AA64(v58, _s10VisitAssetC9VisitDataVMa);
      uint64_t v166 = v42;
      uint64_t v167 = v40 + 1;
      if (v40 + 1 >= v39)
      {
        id v62 = [v147 endDate:v131];
        NSString v61 = v162;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();
      }
      else
      {
        sub_10001B220(v42 + v158, v57, &qword_1007FC158);
        uint64_t v60 = v57 + *(int *)(v54 + 48);
        NSString v61 = v162;
        v59(v162, v57, v45);
        sub_10040AA64(v60, _s10VisitAssetC9VisitDataVMa);
      }
      uint64_t v63 = v54;
      uint64_t v64 = (uint64_t)v173;
      uint64_t v65 = v61;
      if (static Date.< infix(_:_:)())
      {
        sub_10040DB58((unint64_t *)&qword_1007FD120, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v66 = v156;
        if ((dispatch thunk of static Comparable.<= infix(_:_:)() & 1) == 0)
        {
          __break(1u);
          unint64_t result = (double *)swift_release();
          __break(1u);
          return result;
        }
        uint64_t v67 = v155;
        uint64_t v68 = v144;
        unint64_t v69 = &v144[*(int *)(v155 + 48)];
        uint64_t v70 = (void (*)(char *, char *, uint64_t))v168;
        v168((uint64_t)v144, v64, v66);
        char v153 = v69;
        v70(v69, v61, v66);
        id v71 = v145;
        NSString v72 = &v145[*(int *)(v67 + 48)];
        v70(v145, v68, v66);
        v70(v72, v69, v66);
        v59(v161, (uint64_t)v71, v66);
        id v73 = (char *)*v169;
        (*v169)(v72, v66);
        uint64_t v74 = &v71[*(int *)(v155 + 48)];
        v59(v71, (uint64_t)v68, v66);
        v59(v74, (uint64_t)v153, v66);
        uint64_t v75 = (uint64_t)v161;
        v59(&v161[*(int *)(v143 + 36)], (uint64_t)v74, v66);
        uint64_t v76 = v71;
        uint64_t v77 = v162;
        char v153 = v73;
        ((void (*)(char *, uint64_t))v73)(v76, v66);
        uint64_t v78 = (uint64_t)v173;
        sub_10002C4EC(v75, v160, &qword_100807940);
        uint64_t v79 = (uint64_t)v150;
        v70(v150, v77, v66);
        (*v148)(v79, 0, 1, v66);
        uint64_t v80 = sub_1003F50F0(v78, v79, v149);
        uint64_t v82 = v81;
        sub_10001457C(v79, (uint64_t *)&unk_1007FC470);
        uint64_t v83 = v66;
        if (swift_isUniquelyReferenced_nonNull_native())
        {
          uint64_t v84 = v164;
          uint64_t v85 = (char *)v171;
        }
        else
        {
          uint64_t v85 = sub_1002A54A0(0, *((void *)v171 + 2) + 1, 1, (char *)v171);
          uint64_t v84 = v164;
        }
        unint64_t v87 = *((void *)v85 + 2);
        unint64_t v86 = *((void *)v85 + 3);
        if (v87 >= v86 >> 1) {
          uint64_t v85 = sub_1002A54A0((char *)(v86 > 1), v87 + 1, 1, v85);
        }
        *((void *)v85 + 2) = v87 + 1;
        uint64_t v171 = (double *)v85;
        int v88 = &v85[16 * v87];
        *((void *)v88 + 4) = v80;
        *((void *)v88 + 5) = v82;
        uint64_t v89 = v84 + *(int *)(v159 + 48);
        v168(v84, v165, v83);
        sub_10040AAE4(v163, v89, _s10VisitAssetC9VisitDataVMa);
        uint64_t v90 = (uint64_t)v161;
        sub_10001B220(v160, (uint64_t)v161, &qword_100807940);
        unint64_t v91 = (*(unsigned __int8 *)(v142 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80);
        uint64_t v92 = swift_allocObject();
        sub_10002C4EC(v90, v92 + v91, &qword_100807940);
        uint64_t v93 = (uint64_t)v140;
        sub_10040A9FC(v89, (uint64_t)v140, _s10VisitAssetC9VisitDataVMa);
        uint64_t v94 = (uint64_t (**)(uint64_t))(v93 + *(int *)(v152 + 20));
        void *v94 = sub_10040B348;
        v94[1] = (uint64_t (*)(uint64_t))v92;
        uint64_t v95 = v153;
        ((void (*)(uint64_t, uint64_t))v153)(v84, v83);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v96 = (unint64_t)v172;
        }
        else {
          unint64_t v96 = sub_1002A6BB4(0, *((void *)v172 + 2) + 1, 1, (unint64_t)v172);
        }
        unint64_t v53 = v154;
        unint64_t v98 = *(void *)(v96 + 16);
        unint64_t v97 = *(void *)(v96 + 24);
        if (v98 >= v97 >> 1) {
          unint64_t v96 = sub_1002A6BB4(v97 > 1, v98 + 1, 1, v96);
        }
        *(void *)(v96 + 16) = v98 + 1;
        unint64_t v99 = (*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80);
        uint64_t v172 = (double *)v96;
        sub_10040A9FC(v93, v96 + v99 + *(void *)(v151 + 72) * v98, type metadata accessor for VisitDuration);
        sub_10001457C(v160, &qword_100807940);
        ((void (*)(char *, uint64_t))v95)(v77, v83);
        uint64_t v45 = v83;
        ((void (*)(char *, uint64_t))v95)(v173, v83);
      }
      else
      {
        if (static Date.== infix(_:_:)())
        {
          uint64_t v100 = (uint64_t)v150;
          (*v148)((uint64_t)v150, 1, 1, v156);
          uint64_t v101 = sub_1003F50F0(v64, v100, v149);
          uint64_t v103 = v102;
          sub_10001457C(v100, (uint64_t *)&unk_1007FC470);
          unint64_t v104 = v59;
          if (swift_isUniquelyReferenced_nonNull_native()) {
            uint64_t v105 = (char *)v171;
          }
          else {
            uint64_t v105 = sub_1002A54A0(0, *((void *)v171 + 2) + 1, 1, (char *)v171);
          }
          unint64_t v107 = *((void *)v105 + 2);
          unint64_t v106 = *((void *)v105 + 3);
          if (v107 >= v106 >> 1) {
            uint64_t v105 = sub_1002A54A0((char *)(v106 > 1), v107 + 1, 1, v105);
          }
          *((void *)v105 + 2) = v107 + 1;
          uint64_t v171 = (double *)v105;
          uint64_t v108 = &v105[16 * v107];
          *((void *)v108 + 4) = v101;
          *((void *)v108 + 5) = v103;
          uint64_t v109 = v164;
          uint64_t v110 = v164 + *(int *)(v63 + 48);
          uint64_t v45 = v156;
          uint64_t v111 = (void (*)(char *, uint64_t, uint64_t))v168;
          v168(v164, v165, v156);
          sub_10040AAE4(v163, v110, _s10VisitAssetC9VisitDataVMa);
          char v112 = v135;
          v111(v135, v64, v45);
          uint64_t v113 = v137;
          unint64_t v114 = (*(unsigned __int8 *)(v137 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v137 + 80);
          uint64_t v115 = swift_allocObject();
          id v43 = v157;
          v104((char *)(v115 + v114), (uint64_t)v112, v45);
          uint64_t v116 = v146;
          sub_10040A9FC(v110, v146, _s10VisitAssetC9VisitDataVMa);
          uint64_t v117 = (uint64_t (**)())(v116 + *(int *)(v152 + 20));
          *uint64_t v117 = sub_10040B1CC;
          v117[1] = (uint64_t (*)())v115;
          uint64_t v118 = *(void (**)(uint64_t, uint64_t))(v113 + 8);
          v118(v109, v45);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v119 = (unint64_t)v172;
          }
          else {
            unint64_t v119 = sub_1002A6BB4(0, *((void *)v172 + 2) + 1, 1, (unint64_t)v172);
          }
          unint64_t v121 = *(void *)(v119 + 16);
          unint64_t v120 = *(void *)(v119 + 24);
          uint64_t v122 = v173;
          if (v121 >= v120 >> 1) {
            unint64_t v119 = sub_1002A6BB4(v120 > 1, v121 + 1, 1, v119);
          }
          *(void *)(v119 + 16) = v121 + 1;
          unint64_t v123 = (*(unsigned __int8 *)(v151 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v151 + 80);
          uint64_t v172 = (double *)v119;
          sub_10040A9FC(v146, v119 + v123 + *(void *)(v151 + 72) * v121, type metadata accessor for VisitDuration);
          v118((uint64_t)v65, v45);
          v118((uint64_t)v122, v45);
          unint64_t v53 = v154;
          goto LABEL_7;
        }
        uint64_t v175 = 0;
        unint64_t v176 = 0xE000000000000000;
        _StringGuts.grow(_:)(61);
        v46._countAndFlagsBits = 0xD000000000000029;
        v46._object = v134;
        String.append(_:)(v46);
        sub_10040DB58((unint64_t *)&qword_1007FC490, (void (*)(uint64_t))&type metadata accessor for Date);
        uint64_t v47 = v156;
        v48._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v48);
        swift_bridgeObjectRelease();
        v49._countAndFlagsBits = 0x20646E65203E2029;
        v49._object = (void *)0xEE00282065746164;
        String.append(_:)(v49);
        v50._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
        String.append(_:)(v50);
        swift_bridgeObjectRelease();
        v51._countAndFlagsBits = 11817;
        v51._object = (void *)0xE200000000000000;
        String.append(_:)(v51);
        v138((unint64_t)v175, v176);
        swift_bridgeObjectRelease();
        uint64_t v52 = (char *)*v169;
        (*v169)(v61, v47);
        uint64_t v45 = v47;
        ((void (*)(uint64_t, uint64_t))v52)(v64, v47);
        unint64_t v53 = v154;
      }
      id v43 = v157;
LABEL_7:
      uint64_t v44 = v165;
      sub_10001457C(v165, &qword_1007FC158);
      uint64_t v40 = v167;
      uint64_t v42 = v166 + v158;
      unint64_t v39 = v53;
      if (v53 == v167)
      {
        swift_release();
        a5 = v132;
        uint64_t v125 = v171;
        goto LABEL_39;
      }
    }
  }
  swift_release();
  uint64_t v125 = _swiftEmptyArrayStorage;
  uint64_t v172 = _swiftEmptyArrayStorage;
LABEL_39:
  uint64_t v175 = 0;
  unint64_t v176 = 0xE000000000000000;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  uint64_t v175 = (double *)0xD000000000000014;
  unint64_t v176 = 0x800000010069CD70;
  uint64_t v174 = v125;
  sub_100010218(&qword_100800A70);
  sub_1000245BC();
  uint64_t v126 = BidirectionalCollection<>.joined(separator:)();
  uint64_t v128 = v127;
  swift_bridgeObjectRelease();
  v129._countAndFlagsBits = v126;
  v129._object = v128;
  String.append(_:)(v129);
  swift_bridgeObjectRelease();
  v130._countAndFlagsBits = 23818;
  v130._object = (void *)0xE200000000000000;
  String.append(_:)(v130);
  ((void (*)(double *, unint64_t))a5)(v175, v176);
  swift_bridgeObjectRelease();

  return v172;
}

uint64_t sub_1003FFC14(uint64_t a1, unint64_t a2)
{
  uint64_t v217 = a1;
  uint64_t v191 = sub_100010218((uint64_t *)&unk_10080F2A0);
  __chkstk_darwin(v191);
  uint64_t v190 = (uint64_t *)((char *)&v184 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v189 = sub_100010218(&qword_1007F9E10);
  char v223 = *(char **)(v189 - 8);
  __chkstk_darwin(v189);
  id v5 = (char *)&v184 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s10VideoAssetC9VideoDataVMa(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v184 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v200 = sub_100010218((uint64_t *)&unk_10080F2B0);
  __chkstk_darwin(v200);
  uint64_t v199 = (uint64_t *)((char *)&v184 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v198 = sub_100010218((uint64_t *)&unk_100804090);
  *(void *)&long long v214 = *(void *)(v198 - 8);
  __chkstk_darwin(v198);
  uint64_t v212 = (uint64_t)&v184 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v215 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  uint64_t v12 = *(void *)(v215 - 8);
  __chkstk_darwin(v215);
  long long v216 = (char *)&v184 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v211 = sub_100010218((uint64_t *)&unk_10080F2C0);
  __chkstk_darwin(v211);
  uint64_t v210 = (uint64_t *)((char *)&v184 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v209 = sub_100010218((uint64_t *)&unk_100804080);
  uint64_t v15 = *(void *)(v209 - 8);
  __chkstk_darwin(v209);
  id v219 = (char *)&v184 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (int *)_s10PhotoAssetC9PhotoDataVMa(0);
  uint64_t v18 = *((void *)v17 - 1);
  __chkstk_darwin(v17);
  id v201 = (char *)&v184 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v222 = a2;
  uint64_t v213 = v20;
  if (a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = v213;
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v21 = result;
    uint64_t v23 = (int *)v215;
    if (result) {
      goto LABEL_3;
    }
LABEL_58:
    return swift_bridgeObjectRelease();
  }
  uint64_t v21 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v23 = (int *)v215;
  if (!v21) {
    goto LABEL_58;
  }
LABEL_3:
  uint64_t v220 = v21;
  if (v21 >= 1)
  {
    uint64_t v188 = (uint64_t *)v9;
    uint64_t v195 = (int *)v6;
    uint64_t v196 = v5;
    uint64_t v24 = 0;
    unint64_t v221 = v222 & 0xC000000000000001;
    long long v203 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
    uint64_t v218 = (unsigned int (**)(uint64_t, uint64_t, int *))(v18 + 48);
    uint64_t v197 = (void (**)(uint64_t, uint64_t, uint64_t, int *))(v18 + 56);
    uint64_t v194 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v214 + 56);
    id v202 = (unsigned int (**)(uint64_t, uint64_t, int *))(v12 + 48);
    uint64_t v187 = (void (**)(uint64_t, uint64_t, uint64_t, int *))(v12 + 56);
    uint64_t v186 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v223 + 56);
    uint64_t v193 = (unsigned int (**)(uint64_t, uint64_t, int *))(v7 + 48);
    uint64_t v185 = (void (**)(char *, uint64_t, uint64_t, int *))(v7 + 56);
    long long v214 = xmmword_1006D6A80;
    uint64_t v25 = (uint64_t *)v216;
    uint64_t v27 = (uint64_t)v219;
    uint64_t v26 = v220;
    uint64_t v28 = v201;
    while (1)
    {
      uint64_t v30 = v221
          ? (char *)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : (char *)*(id *)(v222 + 8 * v24 + 32);
      uint64_t v31 = v30;
      _s10PhotoAssetCMa(0);
      uint64_t v32 = swift_dynamicCastClass();
      if (v32) {
        break;
      }
      _s14LivePhotoAssetCMa(0);
      uint64_t v36 = swift_dynamicCastClass();
      if (v36)
      {
        uint64_t v37 = v36;
        char v223 = v31;
        uint64_t v38 = OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata;
        if (*(void *)(v36 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata))
        {
          unint64_t v39 = v223;
LABEL_43:
          swift_retain();
          uint64_t v118 = (uint64_t)v25;
          unint64_t v119 = v23;
          unint64_t v120 = v28;
          uint64_t v121 = v212;
          sub_1000398E0(v212);
          uint64_t v122 = v121;
          uint64_t v28 = v120;
          uint64_t v23 = v119;
          uint64_t v25 = (uint64_t *)v118;
          swift_release();
          if ((*v202)(v122, 1, v23) != 1)
          {
            sub_10040A9FC(v122, v118, _s14LivePhotoAssetC13LivePhotoDataVMa);
            uint64_t v123 = v118 + v23[5];
            uint64_t v124 = sub_1003F556C(v123, v217);
            if (v127 == 1)
            {
              sub_10040AA64(v118, _s14LivePhotoAssetC13LivePhotoDataVMa);
              uint64_t v128 = v223;
            }
            else
            {
              uint64_t v129 = v126;
              uint64_t v130 = v127;
              uint64_t v131 = *(void *)(v118 + 8);
              uint64_t v192 = *v25;
              uint64_t v132 = v23[5];
              uint64_t v133 = v199;
              uint64_t v204 = v124;
              uint64_t v205 = v125;
              sub_10001B220(v123, (uint64_t)v199 + v132, (uint64_t *)&unk_1007FC470);
              id v134 = (char *)v25 + v23[9];
              char v135 = v134[16];
              uint64_t v136 = (uint64_t *)((char *)v25 + v23[10]);
              uint64_t v137 = *v136;
              uint64_t v138 = v136[1];
              uint64_t v139 = v23[12];
              id v140 = (uint64_t *)((char *)v25 + v23[11]);
              uint64_t v141 = *v140;
              uint64_t v206 = v140[1];
              uint64_t v142 = v206;
              uint64_t v143 = (char *)v25 + v139;
              uint64_t v144 = *(uint64_t *)((char *)v25 + v139);
              uint64_t v207 = *((void *)v143 + 1);
              uint64_t v145 = v207;
              uint64_t v208 = v138;
              *uint64_t v133 = v192;
              v133[1] = v131;
              uint64_t v146 = (uint64_t *)((char *)v133 + v23[6]);
              *uint64_t v146 = v129;
              v146[1] = v130;
              id v147 = (char *)v133 + v23[7];
              *(void *)id v147 = v204;
              v147[8] = 0;
              id v148 = (char *)v133 + v23[8];
              *(void *)id v148 = v205;
              v148[8] = 0;
              uint64_t v149 = (char *)v133 + v23[9];
              *(_OWORD *)uint64_t v149 = *(_OWORD *)v134;
              v149[16] = v135;
              id v150 = (uint64_t *)((char *)v133 + v23[10]);
              *id v150 = v137;
              v150[1] = v138;
              uint64_t v151 = (uint64_t *)((char *)v133 + v23[11]);
              void *v151 = v141;
              v151[1] = v142;
              uint64_t v152 = (uint64_t *)((char *)v133 + v23[12]);
              *uint64_t v152 = v144;
              v152[1] = v145;
              swift_storeEnumTagMultiPayload();
              sub_100010218(&qword_1007F99C0);
              uint64_t v153 = swift_allocObject();
              (*v194)(v153 + *(void *)(*(void *)v153 + 104), 1, 1, v198);
              *(_OWORD *)(v153 + *(void *)(*(void *)v153 + 112)) = v214;
              uint64_t v154 = (uint64_t)v133;
              uint64_t v28 = v201;
              sub_10002C4EC(v154, v153 + *(void *)(*(void *)v153 + 120), (uint64_t *)&unk_10080F2B0);
              *(void *)(v37 + v38) = v153;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v155 = v223;

              swift_release();
              sub_10040AA64((uint64_t)v25, _s14LivePhotoAssetC13LivePhotoDataVMa);
            }
            goto LABEL_51;
          }
        }
        else
        {
          uint64_t v55 = *(void **)(v36 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
          if (v55)
          {
            uint64_t v56 = v223;
            id v57 = [v55 assetMetaData];
            if (v57)
            {
              uint64_t v58 = v57;
              uint64_t v59 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v61 = v60;

              id v62 = v199;
              uint64_t *v199 = v59;
              v62[1] = v61;
              uint64_t v17 = v213;
              swift_storeEnumTagMultiPayload();
              sub_100010218(&qword_1007F99C0);
              uint64_t v63 = swift_allocObject();
              (*v194)(v63 + *(void *)(*(void *)v63 + 104), 1, 1, v198);
              *(_OWORD *)(v63 + *(void *)(*(void *)v63 + 112)) = v214;
              uint64_t v64 = (uint64_t)v62;
              uint64_t v23 = (int *)v215;
              sub_10002C4EC(v64, v63 + *(void *)(*(void *)v63 + 120), (uint64_t *)&unk_10080F2B0);
              *(void *)(v37 + v38) = v63;
              swift_release();
            }
          }
          else
          {
            uint64_t v117 = v223;
          }
          uint64_t v26 = v220;
          if (*(void *)(v37 + v38)) {
            goto LABEL_43;
          }
          uint64_t v122 = v212;
          (*v187)(v212, 1, 1, v23);
        }
        uint64_t v156 = v223;

        sub_10001457C(v122, (uint64_t *)&unk_100804090);
        uint64_t v27 = (uint64_t)v219;
        goto LABEL_7;
      }
      _s10VideoAssetCMa(0);
      uint64_t v50 = swift_dynamicCastClass();
      if (v50)
      {
        uint64_t v51 = v50;
        uint64_t v52 = v31;
        uint64_t v53 = OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata;
        if (*(void *)(v50 + OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata))
        {
          uint64_t v54 = v31;
          goto LABEL_38;
        }
        unint64_t v99 = *(void **)(v50 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
        if (v99)
        {
          uint64_t v100 = v31;
          id v101 = [v99 assetMetaData];
          if (v101)
          {
            uint64_t v102 = v101;
            uint64_t v103 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v105 = v104;

            unint64_t v106 = v190;
            *uint64_t v190 = v103;
            v106[1] = v105;
            uint64_t v17 = v213;
            swift_storeEnumTagMultiPayload();
            sub_100010218((uint64_t *)&unk_10080F2D0);
            uint64_t v107 = swift_allocObject();
            (*v186)(v107 + *(void *)(*(void *)v107 + 104), 1, 1, v189);
            *(_OWORD *)(v107 + *(void *)(*(void *)v107 + 112)) = v214;
            uint64_t v108 = (uint64_t)v106;
            uint64_t v23 = (int *)v215;
            sub_10002C4EC(v108, v107 + *(void *)(*(void *)v107 + 120), (uint64_t *)&unk_10080F2A0);
            *(void *)(v51 + v53) = v107;
            swift_release();
          }
          if (*(void *)(v51 + v53))
          {
LABEL_38:
            swift_retain();
            uint64_t v109 = (uint64_t)v196;
            sub_100039C14((uint64_t)v196);
            swift_release();
            uint64_t v110 = v195;
            if ((*v193)(v109, 1, v195) != 1)
            {
              uint64_t v111 = v188;
              sub_10040A9FC(v109, (uint64_t)v188, _s10VideoAssetC9VideoDataVMa);
              uint64_t v112 = (uint64_t)v111 + v110[5];
              uint64_t v113 = sub_1003F556C(v112, v217);
              if (v116 == 1)
              {
                sub_10040AA64((uint64_t)v111, _s10VideoAssetC9VideoDataVMa);
              }
              else
              {
                uint64_t v157 = v116;
                uint64_t v158 = (char *)v111[1];
                uint64_t v205 = *v111;
                char v223 = v158;
                uint64_t v159 = v110[5];
                uint64_t v160 = v190;
                uint64_t v206 = v113;
                uint64_t v207 = v114;
                uint64_t v161 = v112;
                uint64_t v162 = v115;
                sub_10001B220(v161, (uint64_t)v190 + v159, (uint64_t *)&unk_1007FC470);
                uint64_t v163 = (char *)v111 + v110[9];
                char v164 = v163[16];
                uint64_t v165 = (uint64_t *)((char *)v111 + v110[10]);
                uint64_t v166 = *v165;
                uint64_t v208 = v165[1];
                uint64_t v167 = v208;
                uint64_t v168 = (uint64_t *)((char *)v111 + v110[11]);
                uint64_t v169 = *v168;
                uint64_t v170 = v168[1];
                uint64_t v171 = (uint64_t *)((char *)v111 + v110[12]);
                uint64_t v172 = *v171;
                uint64_t v173 = v171[1];
                uint64_t v174 = v206;
                uint64_t *v160 = v205;
                v160[1] = (uint64_t)v158;
                uint64_t v175 = (uint64_t *)((char *)v160 + v110[6]);
                *uint64_t v175 = v162;
                v175[1] = v157;
                unint64_t v176 = (char *)v160 + v110[7];
                *(void *)unint64_t v176 = v174;
                v176[8] = 0;
                char v177 = (char *)v160 + v110[8];
                *(void *)char v177 = v207;
                v177[8] = 0;
                id v178 = (char *)v160 + v110[9];
                *(_OWORD *)id v178 = *(_OWORD *)v163;
                v178[16] = v164;
                uint64_t v179 = (uint64_t *)((char *)v160 + v110[10]);
                *uint64_t v179 = v166;
                v179[1] = v167;
                id v180 = (uint64_t *)((char *)v160 + v110[11]);
                *id v180 = v169;
                v180[1] = v170;
                unint64_t v181 = (uint64_t *)((char *)v160 + v110[12]);
                *unint64_t v181 = v172;
                v181[1] = v173;
                swift_storeEnumTagMultiPayload();
                sub_100010218((uint64_t *)&unk_10080F2D0);
                uint64_t v182 = swift_allocObject();
                (*v186)(v182 + *(void *)(*(void *)v182 + 104), 1, 1, v189);
                *(_OWORD *)(v182 + *(void *)(*(void *)v182 + 112)) = v214;
                sub_10002C4EC((uint64_t)v160, v182 + *(void *)(*(void *)v182 + 120), (uint64_t *)&unk_10080F2A0);
                *(void *)(v51 + v53) = v182;
                uint64_t v28 = v201;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();

                uint64_t v23 = (int *)v215;
                swift_release();
                sub_10040AA64((uint64_t)v111, _s10VideoAssetC9VideoDataVMa);
              }
              uint64_t v25 = (uint64_t *)v216;
LABEL_51:
              uint64_t v17 = v213;
LABEL_55:
              uint64_t v27 = (uint64_t)v219;
              uint64_t v26 = v220;
              goto LABEL_7;
            }
LABEL_54:

            sub_10001457C(v109, &qword_1007F9E10);
            uint64_t v25 = (uint64_t *)v216;
            goto LABEL_55;
          }
        }
        else
        {
          id v183 = v31;
          if (*(void *)(v51 + v53)) {
            goto LABEL_38;
          }
        }
        uint64_t v109 = (uint64_t)v196;
        (*v185)(v196, 1, 1, v195);
        goto LABEL_54;
      }

LABEL_7:
      if (v26 == ++v24) {
        return swift_bridgeObjectRelease();
      }
    }
    uint64_t v33 = v32;
    char v223 = v31;
    uint64_t v34 = OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata;
    if (*(void *)(v32 + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata))
    {
      unint64_t v35 = v223;
    }
    else
    {
      uint64_t v40 = *(void **)(v32 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO);
      if (v40)
      {
        unint64_t v41 = v223;
        id v42 = [v40 assetMetaData];
        if (v42)
        {
          id v43 = v42;
          uint64_t v44 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v46 = v45;

          uint64_t v47 = v210;
          uint64_t *v210 = v44;
          v47[1] = v46;
          uint64_t v17 = v213;
          swift_storeEnumTagMultiPayload();
          sub_100010218((uint64_t *)&unk_10080F2E0);
          uint64_t v48 = swift_allocObject();
          (*v203)(v48 + *(void *)(*(void *)v48 + 104), 1, 1, v209);
          *(_OWORD *)(v48 + *(void *)(*(void *)v48 + 112)) = v214;
          uint64_t v49 = (uint64_t)v47;
          uint64_t v27 = (uint64_t)v219;
          sub_10002C4EC(v49, v48 + *(void *)(*(void *)v48 + 120), (uint64_t *)&unk_10080F2C0);
          *(void *)(v33 + v34) = v48;
          swift_release();
        }
      }
      else
      {
        uint64_t v65 = v223;
      }
      uint64_t v26 = v220;
      if (!*(void *)(v33 + v34))
      {
        (*v197)(v27, 1, 1, v17);
LABEL_6:
        uint64_t v29 = v223;

        sub_10001457C(v27, (uint64_t *)&unk_100804080);
        goto LABEL_7;
      }
    }
    swift_retain();
    sub_1000395AC(v27);
    swift_release();
    if ((*v218)(v27, 1, v17) != 1)
    {
      sub_10040A9FC(v27, (uint64_t)v28, _s10PhotoAssetC9PhotoDataVMa);
      uint64_t v66 = (uint64_t)v28 + v17[5];
      uint64_t v67 = sub_1003F556C(v66, v217);
      if (v70 == 1)
      {
        sub_10040AA64((uint64_t)v28, _s10PhotoAssetC9PhotoDataVMa);
        id v71 = v223;
      }
      else
      {
        uint64_t v72 = v69;
        uint64_t v73 = v70;
        uint64_t v74 = v28[1];
        uint64_t v204 = *v28;
        uint64_t v205 = v67;
        uint64_t v208 = v74;
        uint64_t v75 = v17[5];
        uint64_t v76 = v210;
        uint64_t v206 = v68;
        sub_10001B220(v66, (uint64_t)v210 + v75, (uint64_t *)&unk_1007FC470);
        uint64_t v77 = (char *)v28 + v17[9];
        char v78 = v77[16];
        uint64_t v79 = (void *)((char *)v28 + v17[10]);
        uint64_t v80 = *v79;
        uint64_t v81 = v79[1];
        uint64_t v82 = (void *)((char *)v28 + v17[11]);
        uint64_t v83 = *v82;
        uint64_t v84 = v82[1];
        uint64_t v85 = (void *)((char *)v28 + v17[12]);
        uint64_t v86 = *v85;
        uint64_t v207 = v85[1];
        uint64_t v87 = v207;
        uint64_t v88 = v205;
        *uint64_t v76 = v204;
        v76[1] = v74;
        uint64_t v89 = (uint64_t *)((char *)v76 + v17[6]);
        void *v89 = v72;
        v89[1] = v73;
        uint64_t v90 = (char *)v76 + v17[7];
        *(void *)uint64_t v90 = v88;
        v90[8] = 0;
        unint64_t v91 = (char *)v76 + v17[8];
        *(void *)unint64_t v91 = v206;
        v91[8] = 0;
        uint64_t v92 = (char *)v76 + v17[9];
        *(_OWORD *)uint64_t v92 = *(_OWORD *)v77;
        v92[16] = v78;
        uint64_t v93 = (uint64_t *)((char *)v76 + v17[10]);
        *uint64_t v93 = v80;
        v93[1] = v81;
        uint64_t v94 = (uint64_t *)((char *)v76 + v17[11]);
        void *v94 = v83;
        v94[1] = v84;
        uint64_t v95 = (uint64_t *)((char *)v76 + v17[12]);
        *uint64_t v95 = v86;
        v95[1] = v87;
        swift_storeEnumTagMultiPayload();
        sub_100010218((uint64_t *)&unk_10080F2E0);
        uint64_t v96 = swift_allocObject();
        (*v203)(v96 + *(void *)(*(void *)v96 + 104), 1, 1, v209);
        *(_OWORD *)(v96 + *(void *)(*(void *)v96 + 112)) = v214;
        uint64_t v97 = (uint64_t)v76;
        uint64_t v27 = (uint64_t)v219;
        sub_10002C4EC(v97, v96 + *(void *)(*(void *)v96 + 120), (uint64_t *)&unk_10080F2C0);
        *(void *)(v33 + v34) = v96;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v98 = v223;

        swift_release();
        sub_10040AA64((uint64_t)v28, _s10PhotoAssetC9PhotoDataVMa);
      }
      uint64_t v23 = (int *)v215;
      uint64_t v25 = (uint64_t *)v216;
      uint64_t v26 = v220;
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  __break(1u);
  return result;
}

void sub_100400F3C(unint64_t a1@<X0>, void *a2@<X1>, void (*a3)(unint64_t, unint64_t)@<X2>, uint64_t a4@<X3>, void (*a5)(unint64_t, unint64_t, __n128)@<X4>, uint64_t a6@<X5>, unint64_t *a7@<X8>)
{
  uint64_t v937 = a6;
  v965 = a3;
  v959 = a2;
  v938 = a7;
  uint64_t v10 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v922 = *(void *)(v10 - 8);
  __chkstk_darwin(v10 - 8);
  uint64_t v910 = (uint64_t)v864 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  v909 = (void *)((char *)v864 - v13);
  __chkstk_darwin(v14);
  v929 = (void *)((char *)v864 - v15);
  uint64_t v16 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v16 - 8);
  uint64_t v902 = (uint64_t)v864 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v906 = (uint64_t)v864 - v19;
  __chkstk_darwin(v20);
  uint64_t v905 = (uint64_t)v864 - v21;
  __chkstk_darwin(v22);
  v908 = (char *)v864 - v23;
  __chkstk_darwin(v24);
  v904 = (char *)v864 - v25;
  __chkstk_darwin(v26);
  v907 = (char *)v864 - v27;
  __chkstk_darwin(v28);
  v903 = (char *)v864 - v29;
  __chkstk_darwin(v30);
  uint64_t v911 = (uint64_t)v864 - v31;
  __chkstk_darwin(v32);
  uint64_t v34 = (char *)v864 - v33;
  __chkstk_darwin(v35);
  uint64_t v918 = (uint64_t)v864 - v36;
  __chkstk_darwin(v37);
  uint64_t v917 = (uint64_t)v864 - v38;
  __chkstk_darwin(v39);
  uint64_t v916 = (uint64_t)v864 - v40;
  __chkstk_darwin(v41);
  uint64_t v915 = (uint64_t)v864 - v42;
  __chkstk_darwin(v43);
  uint64_t v914 = (uint64_t)v864 - v44;
  __chkstk_darwin(v45);
  uint64_t v928 = (uint64_t)v864 - v46;
  __chkstk_darwin(v47);
  v921 = (char *)v864 - v48;
  __chkstk_darwin(v49);
  uint64_t v926 = (uint64_t)v864 - v50;
  __chkstk_darwin(v51);
  v920 = (char *)v864 - v52;
  __chkstk_darwin(v53);
  uint64_t v927 = (uint64_t)v864 - v54;
  __chkstk_darwin(v55);
  uint64_t v934 = (uint64_t)v864 - v56;
  __chkstk_darwin(v57);
  uint64_t v933 = (uint64_t)v864 - v58;
  __chkstk_darwin(v59);
  uint64_t v61 = (char *)v864 - v60;
  __chkstk_darwin(v62);
  v912 = (char *)v864 - v63;
  __chkstk_darwin(v64);
  uint64_t v925 = (uint64_t)v864 - v65;
  __chkstk_darwin(v66);
  uint64_t v68 = (char *)v864 - v67;
  __chkstk_darwin(v69);
  uint64_t v943 = (uint64_t)v864 - v70;
  uint64_t v71 = type metadata accessor for PendingPhotoAsset(0);
  __chkstk_darwin(v71 - 8);
  v951 = (void *)((char *)v864 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v950 = type metadata accessor for UUID();
  uint64_t v73 = *(void *)(v950 - 8);
  __chkstk_darwin(v950);
  v949 = (char *)v864 - ((v74 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v75);
  v948 = (char *)v864 - v76;
  uint64_t v77 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v77 - 8);
  uint64_t v919 = (uint64_t)v864 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v79);
  uint64_t v913 = (uint64_t)v864 - v80;
  __chkstk_darwin(v81);
  uint64_t v924 = (uint64_t)v864 - v82;
  __chkstk_darwin(v83);
  uint64_t v923 = (uint64_t)v864 - v84;
  __chkstk_darwin(v85);
  v945 = (char *)v864 - v86;
  __chkstk_darwin(v87);
  v942 = (char *)v864 - v88;
  __chkstk_darwin(v89);
  unint64_t v91 = (char *)v864 - v90;
  __chkstk_darwin(v92);
  v962 = (char *)v864 - v93;
  uint64_t v964 = type metadata accessor for URL();
  uint64_t v94 = *(void *)(v964 - 8);
  __chkstk_darwin(v964);
  v932 = (char *)v864 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v96);
  v941 = (char *)v864 - v97;
  __chkstk_darwin(v98);
  v947 = (char *)v864 - v99;
  __chkstk_darwin(v100);
  v944 = (char *)v864 - v101;
  swift_retain_n();
  v982 = variable initialization expression of Journaling.EntryViewModel.assetsAll();
  v981 = variable initialization expression of Journaling.EntryViewModel.assetsAll();
  uint64_t v967 = a4;
  swift_retain_n();
  unint64_t v102 = swift_bridgeObjectRetain();
  uint64_t v103 = sub_1003F25A8(v102);
  if (!v103)
  {
    swift_bridgeObjectRelease();
    uint64_t v845 = 0;
    unint64_t v969 = 0;
    uint64_t v968 = 0;
    v843 = 0;
    uint64_t v844 = 1;
    unint64_t v842 = a1;
    uint64_t v846 = v937;
    goto LABEL_521;
  }
  unint64_t v972 = a1;
  if (v103 < 1)
  {
    __break(1u);
LABEL_533:
    __break(1u);
    JUMPOUT(0x100408280);
  }
  v930 = a5;
  unint64_t v969 = 0;
  uint64_t v968 = 0;
  uint64_t v104 = 0;
  v935 = 0;
  v963 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v94 + 56);
  v960 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v94 + 48);
  v954 = (void (**)(char *, uint64_t, uint64_t))(v94 + 32);
  v940 = (void (**)(char *, char *, uint64_t))(v73 + 16);
  v939 = (void (**)(char *, uint64_t))(v73 + 8);
  v953 = (void (**)(char *, char *, uint64_t))(v94 + 16);
  v952 = (void (**)(char *, uint64_t))(v94 + 8);
  v958 = (void *)0x800000010069CC80;
  v957 = (void *)0x800000010069CCB0;
  unint64_t v956 = 0x800000010069CC60;
  unint64_t v946 = 0x800000010069CC40;
  unint64_t v936 = 0x800000010069CC20;
  unint64_t v901 = 0x800000010069CBB0;
  v889 = (void *)0x800000010069CBF0;
  unint64_t v897 = 0x800000010069CB70;
  v898 = (void *)0x800000010069CBD0;
  unint64_t v896 = 0x800000010069CB50;
  unint64_t v891 = 0x800000010069CB00;
  v882 = (void *)0x800000010069CB20;
  v886 = (void *)0x800000010069CA80;
  v888 = (void *)0x800000010069CAA0;
  v887 = (void *)0x800000010069CAC0;
  unint64_t v884 = 0x800000010069CA40;
  unint64_t v879 = 0x800000010069CA20;
  unint64_t v880 = 0x800000010069CA00;
  v881 = (void *)0x800000010069C9B0;
  unint64_t v971 = v972 & 0xC000000000000001;
  v961 = (char *)&type metadata for Swift.AnyObject + 8;
  v931 = (char *)&type metadata for Any + 8;
  unint64_t v899 = (unint64_t)"Journaling.ContactAsset";
  unint64_t v900 = 0x800000010069CB90;
  unint64_t v883 = (unint64_t)"dark content missing";
  unint64_t v890 = 0x800000010069CAE0;
  unint64_t v892 = (unint64_t)"Journaling.GenericMapAsset";
  v893 = v34;
  v885 = (void *)0x800000010069CA60;
  uint64_t v966 = 1;
  v955 = v91;
  uint64_t v105 = v964;
  v894 = v61;
  v895 = v68;
  uint64_t v970 = v103;
  do
  {
    if (v971) {
      id v113 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v113 = *(id *)(v972 + 8 * v104 + 32);
    }
    uint64_t v114 = v113;
    id v115 = [v113 assetType];
    uint64_t v116 = (void *)MOSuggestionAssetsTypeReflectionPrompt;
    id v117 = v115;
    id v118 = v116;
    char v119 = sub_10017BED0();

    if (v119)
    {

      id v106 = [v114 content];
      self;
      uint64_t v107 = (void *)swift_dynamicCastObjCClass();
      if (v107)
      {
        unint64_t v108 = sub_1003FE860(v107);
        uint64_t v110 = v109;
        uint64_t v112 = v111 & 1;
        sub_10027149C(v969, v968, (void *)v966);

        unint64_t v969 = v108;
        uint64_t v968 = v112;
        uint64_t v105 = v964;
        uint64_t v966 = v110;
        goto LABEL_6;
      }
      swift_unknownObjectRelease();
      id v155 = [v114 content];
      swift_retain();
      sub_1003FE97C(0xD000000000000024, v958, 0xD000000000000021, v957, v155, v965);
      swift_unknownObjectRelease();

      goto LABEL_49;
    }
    unint64_t v120 = (void *)MOSuggestionAssetsTypePhoto;
    id v121 = v117;
    id v122 = v120;
    char v123 = sub_10017BED0();

    if (v123)
    {

      id v973 = [v114 content];
      uint64_t v124 = (uint64_t)v962;
      int v125 = swift_dynamicCast();
      uint64_t v126 = *v963;
      if (v125)
      {
        v126(v124, 0, 1, v105);
        if ((*v960)(v124, 1, v105) != 1)
        {
          uint64_t v127 = v944;
          (*v954)(v944, v124, v105);
          uint64_t v128 = v948;
          j___s10Foundation4UUIDVACycfC();
          id v129 = objc_allocWithZone((Class)_s16PlaceholderAssetCMa());
          uint64_t v130 = *v940;
          uint64_t v131 = v949;
          uint64_t v132 = v950;
          (*v940)(v949, v128, v950);
          uint64_t v133 = (uint64_t)v131;
          char v134 = 0;
LABEL_15:
          char v135 = (char *)sub_1001817C4(v133, v134, 0);
          (*v939)(v128, v132);
          sub_1003F5C20(v135, v959, &v982);
          v130(v128, &v135[OBJC_IVAR____TtCC7Journal10Journaling5Asset_id], v132);
          uint64_t v136 = (uint64_t)v947;
          (*v953)(v947, v127, v964);
          uint64_t v137 = v951;
          uint64_t v138 = (uint64_t)v128;
          unint64_t v91 = v955;
          sub_1003F5EEC((uint64_t)v114, v138, v136, v951);
          id v139 = v114;
          uint64_t v140 = (uint64_t)v137;
          uint64_t v105 = v964;
          sub_1003F1DF8(v140);

          (*v952)(v127, v105);
          goto LABEL_6;
        }
      }
      else
      {
        v126(v124, 1, 1, v105);
      }
      sub_10001457C(v124, (uint64_t *)&unk_100800A60);
      id v156 = [v114 content];
      swift_retain();
      uint64_t v157 = 0xD000000000000015;
      uint64_t v158 = (void *)v956;
LABEL_47:
      uint64_t v193 = 5001813;
      uint64_t v194 = (void *)0xE300000000000000;
      goto LABEL_48;
    }
    uint64_t v141 = (void *)MOSuggestionAssetsTypeVideo;
    id v142 = v121;
    id v143 = v141;
    char v144 = sub_10017BED0();

    if (v144)
    {

      id v973 = [v114 content];
      int v145 = swift_dynamicCast();
      uint64_t v146 = *v963;
      if (!v145)
      {
        v146((uint64_t)v91, 1, 1, v105);
LABEL_34:
        sub_10001457C((uint64_t)v91, (uint64_t *)&unk_100800A60);
        id v156 = [v114 content];
        swift_retain();
        uint64_t v157 = 0xD000000000000015;
        uint64_t v158 = (void *)v946;
        goto LABEL_47;
      }
      v146((uint64_t)v91, 0, 1, v105);
      if ((*v960)((uint64_t)v91, 1, v105) == 1) {
        goto LABEL_34;
      }
      id v147 = v941;
      (*v954)(v941, (uint64_t)v91, v105);
      uint64_t v148 = (uint64_t)v942;
      (*v953)(v942, v147, v105);
      v146(v148, 0, 1, v105);
      id v149 = [v114 metadata];
      uint64_t v150 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v151 = MOSuggestionAssetMetadataKeyPhotoLocalIdentifier;
      sub_1003F456C(v151);

      sub_1003F2608((uint64_t)&v973, v150, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        int v152 = swift_dynamicCast();
        if (v152) {
          uint64_t v153 = (uint64_t)v979;
        }
        else {
          uint64_t v153 = 0;
        }
        if (v152) {
          uint64_t v154 = (uint64_t)v980;
        }
        else {
          uint64_t v154 = 0;
        }
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
        uint64_t v153 = 0;
        uint64_t v154 = 0;
      }
      id v217 = [v114 metadata];
      uint64_t v218 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v219 = MOSuggestionAssetMetadataKeyPhotoTakenDate;
      sub_1003F456C(v219);

      sub_1003F2608((uint64_t)&v973, v218, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        uint64_t v220 = type metadata accessor for Date();
        uint64_t v221 = v943;
        int v222 = swift_dynamicCast();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v220 - 8) + 56))(v221, v222 ^ 1u, 1, v220);
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
        uint64_t v223 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v223 - 8) + 56))(v943, 1, 1, v223);
      }
      id v224 = [v114 metadata];
      uint64_t v225 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v226 = MOSuggestionAssetMetadataKeyPhotoBestSquareCropRect;
      sub_1003F456C(v226);

      sub_1003F2608((uint64_t)&v973, v225, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        sub_10001B284(0, &qword_10080C6C0);
        char v227 = swift_dynamicCast();
        uint64_t v105 = v964;
        if (v227)
        {
          id v228 = v979;
          [v979 cgRect];
          uint64_t v230 = v229;
          uint64_t v232 = v231;
          uint64_t v234 = v233;
          uint64_t v236 = v235;

          char v237 = 0;
          goto LABEL_71;
        }
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
        uint64_t v105 = v964;
      }
      char v237 = 1;
      uint64_t v230 = 0;
      uint64_t v232 = 0;
      uint64_t v234 = 0;
      uint64_t v236 = 0;
LABEL_71:
      v983[0] = v230;
      v983[1] = v232;
      v983[2] = v234;
      v983[3] = v236;
      char v984 = v237;
      id v238 = [v114 metadata];
      uint64_t v239 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v240 = MOSuggestionAssetMetadataKeyPhotoBestLandscapeCropRect;
      sub_1003F456C(v240);

      sub_1003F2608((uint64_t)&v973, v239, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        sub_10001B284(0, &qword_10080C6C0);
        if (swift_dynamicCast())
        {
          id v241 = v979;
          [v979 cgRect];
          uint64_t v243 = v242;
          uint64_t v245 = v244;
          uint64_t v247 = v246;
          uint64_t v249 = v248;

          char v250 = 0;
          goto LABEL_76;
        }
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
      }
      char v250 = 1;
      uint64_t v243 = 0;
      uint64_t v245 = 0;
      uint64_t v247 = 0;
      uint64_t v249 = 0;
LABEL_76:
      v985[0] = v243;
      v985[1] = v245;
      v985[2] = v247;
      v985[3] = v249;
      char v986 = v250;
      id v251 = [v114 metadata];
      uint64_t v252 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v253 = MOSuggestionAssetMetadataKeyPhotoBestPortraitCropRect;
      sub_1003F456C(v253);

      sub_1003F2608((uint64_t)&v973, v252, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        sub_10001B284(0, &qword_10080C6C0);
        char v254 = swift_dynamicCast();
        unint64_t v91 = v955;
        if (v254)
        {
          id v255 = v979;
          [v979 cgRect];
          uint64_t v257 = v256;
          uint64_t v259 = v258;
          uint64_t v261 = v260;
          uint64_t v263 = v262;

          char v264 = 0;
LABEL_81:
          v987[0] = v257;
          v987[1] = v259;
          v987[2] = v261;
          v987[3] = v263;
          char v988 = v264;
          uint64_t v265 = sub_10011C880(0, (uint64_t)v942, 0, v153, v154, v943, 0, 0, 0, 1, 0, 1u, 0, 0, 1u, (uint64_t)v983, (uint64_t)v985, (uint64_t)v987);
          sub_1003F5C20(v265, v959, &v982);

          (*v952)(v941, v105);
          goto LABEL_6;
        }
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
        unint64_t v91 = v955;
      }
      char v264 = 1;
      uint64_t v257 = 0;
      uint64_t v259 = 0;
      uint64_t v261 = 0;
      uint64_t v263 = 0;
      goto LABEL_81;
    }
    uint64_t v159 = (void *)MOSuggestionAssetsTypeLivePhoto;
    id v160 = v142;
    id v161 = v159;
    char v162 = sub_10017BED0();

    if (v162)
    {

      id v973 = [v114 content];
      uint64_t v163 = (uint64_t)v945;
      int v164 = swift_dynamicCast();
      uint64_t v165 = *v963;
      if (v164)
      {
        v165(v163, 0, 1, v105);
        if ((*v960)(v163, 1, v105) != 1)
        {
          uint64_t v127 = v932;
          (*v954)(v932, v163, v105);
          uint64_t v128 = v948;
          j___s10Foundation4UUIDVACycfC();
          id v166 = objc_allocWithZone((Class)_s16PlaceholderAssetCMa());
          uint64_t v130 = *v940;
          uint64_t v167 = v949;
          uint64_t v132 = v950;
          (*v940)(v949, v128, v950);
          uint64_t v133 = (uint64_t)v167;
          char v134 = 1;
          goto LABEL_15;
        }
      }
      else
      {
        v165(v163, 1, 1, v105);
      }
      sub_10001457C(v163, (uint64_t *)&unk_100800A60);
      id v156 = [v114 content];
      swift_retain();
      uint64_t v157 = 0xD000000000000019;
      uint64_t v158 = (void *)v936;
      goto LABEL_47;
    }
    uint64_t v168 = (void *)MOSuggestionAssetsTypeMediaCoverArt;
    id v169 = v160;
    id v170 = v168;
    char v171 = sub_10017BED0();

    if (v171)
    {

      id v172 = [v114 content];
      self;
      uint64_t v173 = (void *)swift_dynamicCastObjCClass();
      if (!v173)
      {
        swift_unknownObjectRelease();
        id v156 = [v114 content];
        swift_retain();
        uint64_t v193 = 0xD00000000000001ALL;
        uint64_t v157 = 0xD000000000000015;
        uint64_t v158 = (void *)v900;
        uint64_t v194 = (void *)v901;
        goto LABEL_48;
      }
      uint64_t v174 = v173;
      id v175 = [v173 albumArt];
      if (v175)
      {
        unint64_t v176 = v175;
        switch((unint64_t)[v174 mediaType])
        {
          case 1uLL:
          case 4uLL:
            id v328 = [v174 trackIdentifier];
            if (v328)
            {
              uint64_t v329 = v328;
              uint64_t v330 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              v871 = v331;
              unint64_t v872 = v330;
            }
            else
            {
              v871 = (void *)0xE000000000000000;
              unint64_t v872 = 0;
            }
            id v450 = [v174 previewURL];
            if (v450)
            {
              v451 = v450;
              uint64_t v452 = v923;
              static URL._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v453 = v452;
              uint64_t v454 = 0;
            }
            else
            {
              uint64_t v454 = 1;
              uint64_t v453 = v923;
            }
            (*v963)(v453, v454, 1, v105);
            id v464 = [v174 artistName];
            v465 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
            id v877 = v466;
            v878 = v465;

            id v467 = [v174 title];
            v468 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v875 = v469;
            id v876 = v468;

            id v470 = [v174 albumTitle];
            uint64_t v471 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            v873 = v472;
            unint64_t v874 = v471;

            id v473 = [v114 metadata];
            uint64_t v474 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v475 = MOSuggestionAssetMetadataKeyMusicNumberOfRepetitions;
            sub_1003F456C(v475);

            sub_1003F2608((uint64_t)&v973, v474, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              int v476 = swift_dynamicCast();
              unint64_t v477 = (unint64_t)v979;
              if (!v476) {
                unint64_t v477 = 0;
              }
              unint64_t v870 = v477;
              int v478 = v476 ^ 1;
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              unint64_t v870 = 0;
              int v478 = 1;
            }
            LODWORD(v869) = v478;
            id v488 = [v114 metadata];
            uint64_t v489 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v490 = MOSuggestionAssetMetadataKeyMediaStartDate;
            sub_1003F456C(v490);

            sub_1003F2608((uint64_t)&v973, v489, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              uint64_t v491 = type metadata accessor for Date();
              uint64_t v492 = (uint64_t)v895;
              int v493 = swift_dynamicCast();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v491 - 8) + 56))(v492, v493 ^ 1u, 1, v491);
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              uint64_t v501 = type metadata accessor for Date();
              uint64_t v492 = (uint64_t)v895;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v501 - 8) + 56))(v895, 1, 1, v501);
            }
            unint64_t v91 = v955;
            v502 = (char *)[v174 mediaType];
            if ((unint64_t)(v502 - 2) >= 7) {
              unsigned __int8 v503 = 0;
            }
            else {
              unsigned __int8 v503 = 0x7060503010002uLL >> (8 * (v502 - 2));
            }
            uint64_t v322 = v176;
            v504 = sub_1000B1130(0, v872, (uint64_t)v871, v923, v176, (uint64_t)v878, (uint64_t)v877, (uint64_t)v876, v875, v874, (uint64_t)v873, v870, v869, v492, v503);
            goto LABEL_241;
          case 2uLL:
          case 5uLL:
            id v332 = [v174 trackIdentifier];
            if (v332)
            {
              uint64_t v333 = v332;
              uint64_t v334 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              v873 = v335;
              unint64_t v874 = v334;
            }
            else
            {
              v873 = (void (*)(char *, uint64_t))0xE000000000000000;
              unint64_t v874 = 0;
            }
            id v455 = [v174 title];
            v456 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
            v458 = v457;

            id v459 = [v174 previewURL];
            id v877 = v458;
            v878 = v456;
            if (v459)
            {
              v460 = v459;
              uint64_t v461 = v924;
              static URL._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v462 = v461;
              uint64_t v463 = 0;
            }
            else
            {
              uint64_t v463 = 1;
              uint64_t v462 = v924;
            }
            (*v963)(v462, v463, 1, v105);
            id v479 = [v174 artistName];
            v480 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v875 = v481;
            id v876 = v480;

            id v482 = [v114 metadata];
            uint64_t v483 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v484 = MOSuggestionAssetMetadataKeyMediaStartDate;
            sub_1003F456C(v484);

            sub_1003F2608((uint64_t)&v973, v483, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              uint64_t v485 = type metadata accessor for Date();
              uint64_t v486 = v925;
              int v487 = swift_dynamicCast();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v485 - 8) + 56))(v486, v487 ^ 1u, 1, v485);
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              uint64_t v494 = type metadata accessor for Date();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v494 - 8) + 56))(v925, 1, 1, v494);
            }
            id v495 = [v114 metadata];
            uint64_t v496 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v497 = MOSuggestionAssetMetadataKeyPodcastNumberOfRepetitions;
            sub_1003F456C(v497);

            sub_1003F2608((uint64_t)&v973, v496, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              int v498 = swift_dynamicCast();
              if (v498) {
                uint64_t v499 = (uint64_t)v979;
              }
              else {
                uint64_t v499 = 0;
              }
              unsigned __int8 v500 = v498 ^ 1;
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              uint64_t v499 = 0;
              unsigned __int8 v500 = 1;
            }
            unint64_t v91 = v955;
            v505 = (char *)[v174 mediaType];
            if ((unint64_t)(v505 - 2) >= 7) {
              unsigned __int8 v506 = 0;
            }
            else {
              unsigned __int8 v506 = 0x7060503010002uLL >> (8 * (v505 - 2));
            }
            uint64_t v322 = v176;
            v504 = sub_1003935AC(0, v874, (uint64_t)v873, v322, (uint64_t)v878, (uint64_t)v877, v924, (uint64_t)v876, v875, v925, v499, v500, v506);
LABEL_241:
            v507 = v504;
            sub_1003F5C20(v504, v959, &v982);

            goto LABEL_242;
          case 3uLL:
            v878 = v176;
            id v407 = [v174 previewURL];
            if (v407)
            {
              v408 = v407;
              uint64_t v409 = v913;
              static URL._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v410 = 0;
            }
            else
            {
              uint64_t v410 = 1;
              uint64_t v409 = v913;
            }
            (*v963)(v409, v410, 1, v105);
            id v688 = [v114 metadata];
            uint64_t v689 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v690 = MOSuggestionAssetMetadataKeyPhotoLocalIdentifier;
            sub_1003F456C(v690);

            sub_1003F2608((uint64_t)&v973, v689, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              int v691 = swift_dynamicCast();
              id v692 = v979;
              if (!v691) {
                id v692 = 0;
              }
              id v877 = v692;
              if (v691) {
                uint64_t v693 = (uint64_t)v980;
              }
              else {
                uint64_t v693 = 0;
              }
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              id v877 = 0;
              uint64_t v693 = 0;
            }
            id v694 = [v114 metadata];
            uint64_t v695 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v696 = MOSuggestionAssetMetadataKeyVideoMomentDate;
            sub_1003F456C(v696);

            sub_1003F2608((uint64_t)&v973, v695, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              uint64_t v697 = type metadata accessor for Date();
              v698 = v912;
              int v699 = swift_dynamicCast();
              v700 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v697 - 8) + 56);
              uint64_t v701 = v699 ^ 1u;
              v702 = v698;
              uint64_t v703 = v697;
              uint64_t v704 = (uint64_t)v698;
              uint64_t v105 = v964;
              v700(v702, v701, 1, v703);
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              uint64_t v705 = type metadata accessor for Date();
              uint64_t v704 = (uint64_t)v912;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v705 - 8) + 56))(v912, 1, 1, v705);
            }
            unint64_t v91 = v955;
            memset(v989, 0, 32);
            v989[32] = 1;
            v706 = sub_10011C880(0, v913, 0, (uint64_t)v877, v693, v704, 0, 0, 0, 1, 0, 1u, 0, 0, 1u, (uint64_t)v989, (uint64_t)v989, (uint64_t)v989);
            sub_1003F5C20(v706, v959, &v982);

            swift_unknownObjectRelease();
            goto LABEL_6;
          case 6uLL:
          case 7uLL:
          case 8uLL:
            v975 = &type metadata for JournalFeatureFlags;
            unint64_t v976 = sub_10005F364();
            LOBYTE(v973) = 13;
            char v177 = isFeatureEnabled(_:)();
            _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v973);
            if ((v177 & 1) == 0) {
              goto LABEL_179;
            }
            id v178 = (char *)[v174 mediaType];
            if ((unint64_t)(v178 - 2) >= 7) {
              int v179 = 0;
            }
            else {
              int v179 = 0x7060503010002uLL >> (8 * (v178 - 2));
            }
            id v180 = [v174 title];
            unint64_t v181 = (void *)static String._unconditionallyBridgeFromObjectiveC(_:)();
            id v876 = v182;
            id v877 = v181;

            id v183 = [v174 albumTitle];
            uint64_t v184 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v874 = v185;
            uint64_t v875 = v184;

            id v186 = [v174 artistName];
            uint64_t v187 = (void (*)(char *, uint64_t))static String._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v872 = v188;
            v873 = v187;

            id v189 = [v174 previewURL];
            LODWORD(v878) = v179;
            if (v189)
            {
              uint64_t v190 = v189;
              uint64_t v191 = v919;
              static URL._unconditionallyBridgeFromObjectiveC(_:)();

              uint64_t v192 = 0;
            }
            else
            {
              uint64_t v192 = 1;
              uint64_t v191 = v919;
            }
            (*v963)(v191, v192, 1, v105);
            id v529 = [v114 metadata];
            uint64_t v530 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v531 = MOSuggestionAssetMetadataKeyMediaThirdPartyAppeName;
            sub_1003F456C(v531);

            sub_1003F2608((uint64_t)&v973, v530, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              int v532 = swift_dynamicCast();
              if (v532) {
                v533 = v979;
              }
              else {
                v533 = 0;
              }
              if (v532) {
                unint64_t v534 = (unint64_t)v980;
              }
              else {
                unint64_t v534 = 0;
              }
              unint64_t v870 = v534;
              v871 = v533;
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              unint64_t v870 = 0;
              v871 = 0;
            }
            id v535 = [v114 metadata];
            uint64_t v536 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v537 = MOSuggestionAssetMetadataKeyMediaStartDate;
            sub_1003F456C(v537);

            sub_1003F2608((uint64_t)&v973, v536, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              uint64_t v538 = type metadata accessor for Date();
              uint64_t v539 = (uint64_t)v894;
              int v540 = swift_dynamicCast();
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v538 - 8) + 56))(v539, v540 ^ 1u, 1, v538);
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              uint64_t v541 = type metadata accessor for Date();
              uint64_t v539 = (uint64_t)v894;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v541 - 8) + 56))(v894, 1, 1, v541);
            }
            unint64_t v91 = v955;
            id v542 = [v174 bgColor];
            unint64_t v543 = (unint64_t)[v174 bgColorVariant];
            if (v543 >= 4) {
              char v544 = 3;
            }
            else {
              char v544 = 0x2010003u >> (8 * v543);
            }
            v545 = v176;
            v546 = sub_100386404(0, (int)v878, (uint64_t)v877, (unint64_t)v876, v875, v874, (uint64_t)v873, v872, v919, (uint64_t)v871, v870, v176, v539, v542, v544);
            sub_1003F5C20(v546, v959, &v982);

            goto LABEL_271;
          default:
            id v973 = 0;
            v974 = (void *)0xE000000000000000;
            _StringGuts.grow(_:)(34);
            v405._countAndFlagsBits = 0xD000000000000020;
            v405._object = v889;
            DefaultStringInterpolation.appendLiteral(_:)(v405);
            [v174 mediaType];
            sub_1003F450C();
            v406._countAndFlagsBits = 0;
            v406._object = (void *)0xE000000000000000;
            DefaultStringInterpolation.appendLiteral(_:)(v406);
            sub_1003F5B3C(0xD000000000000015, (void *)(v899 | 0x8000000000000000), (uint64_t)v973, v974, v965);
            swift_bridgeObjectRelease();
LABEL_179:
            swift_unknownObjectRelease();

            goto LABEL_6;
        }
      }
      sub_1003F5B3C(0xD000000000000015, (void *)(v899 | 0x8000000000000000), 0xD00000000000001ALL, v898, v965);
LABEL_94:

      swift_unknownObjectRelease();
      goto LABEL_6;
    }
    uint64_t v195 = (void *)MOSuggestionAssetsTypeContactPhoto;
    id v196 = v169;
    id v197 = v195;
    char v198 = sub_10017BED0();

    if (v198)
    {

      id v199 = [v114 content];
      self;
      uint64_t v200 = swift_dynamicCastObjCClass();
      if (!v200)
      {
        swift_unknownObjectRelease();
        id v156 = [v114 content];
        swift_retain();
        uint64_t v157 = 0xD000000000000017;
        uint64_t v158 = (void *)v897;
        uint64_t v193 = 0x6567616D494955;
        uint64_t v194 = (void *)0xE700000000000000;
LABEL_48:
        sub_1003FE97C(v157, v158, v193, v194, v156, v965);

        swift_unknownObjectRelease();
LABEL_49:
        swift_release();
        goto LABEL_6;
      }
      id v201 = (void *)v200;
      id v202 = [v114 metadata];
      uint64_t v203 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v204 = MOSuggestionAssetMetadataKeyContactName;
      sub_1003F456C(v204);

      sub_1003F2608((uint64_t)&v973, v203, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        if (swift_dynamicCast())
        {
          v878 = v979;
          uint64_t v205 = v980;
          goto LABEL_106;
        }
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
      }
      v878 = 0;
      uint64_t v205 = (void *)0xE000000000000000;
LABEL_106:
      id v877 = v205;
      id v296 = [v114 metadata];
      uint64_t v297 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v298 = MOSuggestionAssetMetadataKeyContactStartTime;
      sub_1003F456C(v298);

      sub_1003F2608((uint64_t)&v973, v297, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        uint64_t v299 = type metadata accessor for Date();
        uint64_t v300 = v933;
        int v301 = swift_dynamicCast();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v299 - 8) + 56))(v300, v301 ^ 1u, 1, v299);
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
        uint64_t v302 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v302 - 8) + 56))(v933, 1, 1, v302);
      }
      id v303 = [v114 metadata];
      uint64_t v304 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v305 = MOSuggestionAssetMetadataKeyContactEndTime;
      sub_1003F456C(v305);

      sub_1003F2608((uint64_t)&v973, v304, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        uint64_t v306 = type metadata accessor for Date();
        uint64_t v307 = v934;
        int v308 = swift_dynamicCast();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v306 - 8) + 56))(v307, v308 ^ 1u, 1, v306);
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
        uint64_t v309 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v309 - 8) + 56))(v934, 1, 1, v309);
      }
      id v310 = [v114 metadata];
      uint64_t v311 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v312 = MOSuggestionAssetMetadataKeyContactDuration;
      sub_1003F456C(v312);

      sub_1003F2608((uint64_t)&v973, v311, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        int v313 = swift_dynamicCast();
        if (v313) {
          uint64_t v314 = (uint64_t)v979;
        }
        else {
          uint64_t v314 = 0;
        }
        int v315 = v313 ^ 1;
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
        uint64_t v314 = 0;
        int v315 = 1;
      }
      id v316 = [v114 metadata];
      uint64_t v317 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v318 = MOSuggestionAssetMetadataKeyContactNumberOfExchanges;
      sub_1003F456C(v318);

      sub_1003F2608((uint64_t)&v973, v317, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        int v319 = swift_dynamicCast();
        if (v319) {
          uint64_t v320 = (uint64_t)v979;
        }
        else {
          uint64_t v320 = 0;
        }
        unsigned __int8 v321 = v319 ^ 1;
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
        uint64_t v320 = 0;
        unsigned __int8 v321 = 1;
      }
      unint64_t v91 = v955;
      swift_unknownObjectRetain();
      uint64_t v322 = sub_1000E04BC(0, (uint64_t)v878, (uint64_t)v877, v201, v933, v934, v314, v315, v320, v321);
      sub_1003F5C20(v322, v959, &v982);
LABEL_242:
      swift_unknownObjectRelease();

      goto LABEL_243;
    }
    uint64_t v206 = (void *)MOSuggestionAssetsTypeLocationPreview;
    id v207 = v196;
    id v208 = v206;
    char v209 = sub_10017BED0();

    if (v209)
    {

      id v210 = [v114 content];
      self;
      uint64_t v211 = (void *)swift_dynamicCastObjCClass();
      if (v211)
      {
        v864[1] = v210;
        id v876 = v211;
        id v212 = [v114 metadata];
        uint64_t v213 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v214 = MOSuggestionAssetMetadataKeyLocationPreviewVisitMapItem;
        sub_1003F456C(v214);

        sub_1003F2608((uint64_t)&v973, v213, &v977);
        swift_bridgeObjectRelease();
        sub_10001DF0C((uint64_t)&v973);
        if (*((void *)&v978 + 1))
        {
          sub_10001B284(0, (unint64_t *)&unk_10080F270);
          int v215 = swift_dynamicCast();
          id v216 = v979;
          if (!v215) {
            id v216 = 0;
          }
          id v877 = v216;
        }
        else
        {
          sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
          id v877 = 0;
        }
        v352 = v959;
        id v353 = [v114 metadata];
        uint64_t v354 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v355 = MOSuggestionAssetMetadataKeyLocationPreviewTypeOfPlace;
        sub_1003F456C(v355);

        sub_1003F2608((uint64_t)&v973, v354, &v977);
        swift_bridgeObjectRelease();
        sub_10001DF0C((uint64_t)&v973);
        if (*((void *)&v978 + 1))
        {
          if (swift_dynamicCast())
          {
            int v356 = 0;
            v878 = 0;
            switch((unint64_t)v979)
            {
              case 1uLL:
                goto LABEL_144;
              case 2uLL:
                int v356 = 0;
                uint64_t v357 = 1;
                goto LABEL_143;
              case 3uLL:
                int v356 = 0;
                uint64_t v357 = 2;
                goto LABEL_143;
              case 4uLL:
                int v356 = 0;
                uint64_t v357 = 3;
                goto LABEL_143;
              default:
                goto LABEL_142;
            }
            goto LABEL_144;
          }
        }
        else
        {
          sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
        }
LABEL_142:
        int v356 = 1;
        uint64_t v357 = 4;
LABEL_143:
        v878 = (void *)v357;
LABEL_144:
        int v867 = v356;
        id v358 = [v114 metadata];
        uint64_t v359 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v360 = MOSuggestionAssetMetadataKeyLocationPreviewPlaceName;
        sub_1003F456C(v360);

        sub_1003F2608((uint64_t)&v973, v359, &v977);
        swift_bridgeObjectRelease();
        sub_10001DF0C((uint64_t)&v973);
        if (*((void *)&v978 + 1))
        {
          int v361 = swift_dynamicCast();
          if (v361) {
            uint64_t v362 = (void (*)(char *, uint64_t))v979;
          }
          else {
            uint64_t v362 = 0;
          }
          if (v361) {
            unint64_t v363 = (unint64_t)v980;
          }
          else {
            unint64_t v363 = 0;
          }
          unint64_t v872 = v363;
          v873 = v362;
        }
        else
        {
          sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
          unint64_t v872 = 0;
          v873 = 0;
        }
        id v364 = [v114 metadata];
        uint64_t v365 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v366 = MOSuggestionAssetMetadataKeyLocationPreviewCityName;
        sub_1003F456C(v366);

        sub_1003F2608((uint64_t)&v973, v365, &v977);
        swift_bridgeObjectRelease();
        sub_10001DF0C((uint64_t)&v973);
        if (*((void *)&v978 + 1))
        {
          int v367 = swift_dynamicCast();
          if (v367) {
            uint64_t v368 = v979;
          }
          else {
            uint64_t v368 = 0;
          }
          if (v367) {
            unint64_t v369 = (unint64_t)v980;
          }
          else {
            unint64_t v369 = 0;
          }
          unint64_t v870 = v369;
          v871 = v368;
        }
        else
        {
          sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
          unint64_t v870 = 0;
          v871 = 0;
        }
        uint64_t v370 = sub_10065C35C(v878);
        unint64_t v874 = v371;
        uint64_t v875 = v370;
        id v372 = [v114 metadata];
        uint64_t v373 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v374 = MOSuggestionAssetMetadataKeyLocationPreviewVisitStartTime;
        sub_1003F456C(v374);

        sub_1003F2608((uint64_t)&v973, v373, &v977);
        swift_bridgeObjectRelease();
        sub_10001DF0C((uint64_t)&v973);
        if (*((void *)&v978 + 1))
        {
          uint64_t v375 = type metadata accessor for Date();
          uint64_t v376 = (uint64_t)v920;
          int v377 = swift_dynamicCast();
          uint64_t v378 = *(void *)(v375 - 8);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v378 + 56))(v376, v377 ^ 1u, 1, v375);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v378 + 48))(v376, 1, v375) != 1)
          {
            uint64_t v379 = v927;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v378 + 32))(v927, v376, v375);
            goto LABEL_167;
          }
        }
        else
        {
          sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
          uint64_t v380 = type metadata accessor for Date();
          uint64_t v376 = (uint64_t)v920;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v380 - 8) + 56))(v920, 1, 1, v380);
        }
        id v381 = [v352 startDate];
        uint64_t v379 = v927;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        sub_10001457C(v376, (uint64_t *)&unk_1007FC470);
LABEL_167:
        uint64_t v382 = type metadata accessor for Date();
        uint64_t v383 = *(void *)(v382 - 8);
        v384 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v383 + 56);
        v384(v379, 0, 1, v382);
        id v385 = [v114 metadata];
        uint64_t v386 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        id v387 = MOSuggestionAssetMetadataKeyLocationPreviewVisitEndTime;
        sub_1003F456C(v387);

        sub_1003F2608((uint64_t)&v973, v386, &v977);
        swift_bridgeObjectRelease();
        sub_10001DF0C((uint64_t)&v973);
        if (*((void *)&v978 + 1))
        {
          uint64_t v388 = (uint64_t)v921;
          int v389 = swift_dynamicCast();
          v384(v388, v389 ^ 1u, 1, v382);
          BOOL v349 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v383 + 48))(v388, 1, v382) == 1;
          v390 = v959;
          uint64_t v391 = v926;
          if (!v349)
          {
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v383 + 32))(v926, v388, v382);
            goto LABEL_172;
          }
        }
        else
        {
          sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
          uint64_t v388 = (uint64_t)v921;
          v384((uint64_t)v921, 1, 1, v382);
          v390 = v959;
          uint64_t v391 = v926;
        }
        id v392 = [v390 endDate];
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        sub_10001457C(v388, (uint64_t *)&unk_1007FC470);
LABEL_172:
        v384(v391, 0, 1, v382);
        v384(v928, 1, 1, v382);
        id v393 = v876;
        [v876 coordinate];
        uint64_t v395 = v394;
        [v393 coordinate];
        uint64_t v397 = v396;
        id v398 = v877;
        if (v877)
        {
          id v399 = [v877 _styleAttributes];
          char v400 = v867;
          if (v399)
          {
            v401 = v399;
            uint64_t v402 = sub_10008C5D0();
            uint64_t v865 = v403;
            uint64_t v866 = v402;
          }
          else
          {
            uint64_t v865 = 0xF000000000000000;
            uint64_t v866 = 0;
          }
          id v411 = v398;
          uint64_t v412 = sub_10008C5D0();
          uint64_t v868 = v413;
          uint64_t v869 = v412;

          if (v400)
          {
LABEL_184:
            LODWORD(v876) = 0;
LABEL_185:
            id v414 = [v114 metadata];
            uint64_t v415 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v416 = MOSuggestionAssetMetadataKeyLocationPreviewVisitHorizontalUncertainty;
            sub_1003F456C(v416);

            sub_1003F2608((uint64_t)&v973, v415, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              int v417 = swift_dynamicCast();
              if (v417) {
                uint64_t v418 = (uint64_t)v979;
              }
              else {
                uint64_t v418 = 0;
              }
              char v419 = v417 ^ 1;
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              uint64_t v418 = 0;
              char v419 = 1;
            }
            id v420 = [v114 metadata];
            uint64_t v421 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v422 = MOSuggestionAssetMetadataKeyLocationPreviewVisitHorizontalUncertainty;
            sub_1003F456C(v422);

            sub_1003F2608((uint64_t)&v973, v421, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              int v423 = swift_dynamicCast();
              uint64_t v424 = (uint64_t)v979;
              if (!v423) {
                uint64_t v424 = 0;
              }
              char v425 = v423 ^ 1;
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              uint64_t v424 = 0;
              char v425 = 1;
            }
            v426 = v929;
            unint64_t v91 = v955;
            sub_10036DDC0((uint64_t)v873, v872, (uint64_t)v871, v870, v875, v874, v927, v926, v929, v928, v395, 0, v397, 0, v866, v865, v869, v868, v876 & 1,
              v418,
              v419,
              v424,
              v425);
            if (v935)
            {
              uint64_t v427 = OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata;
              if (!*(void *)&v935[OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata])
              {
                v438 = v935;
                goto LABEL_203;
              }
              v428 = v935;
              swift_retain();
              v429 = (void *)sub_100039114();
              LODWORD(v876) = v430;
              swift_release();
              if (v429 == (void *)1 || (uint64_t v431 = swift_bridgeObjectRetain(), sub_10003F810(v431), !v429))
              {
LABEL_203:
                v429 = (void *)sub_10009C3B0(0);
                swift_bridgeObjectRelease();
              }
              sub_100010218(&qword_10080F280);
              uint64_t v439 = swift_allocObject();
              sub_1001F3A1C(v439, 1);
              sub_10040AAE4((uint64_t)v929, v440, _s10VisitAssetC9VisitDataVMa);
              AudioRecordingActivityState.hash(into:)(v441, v442);
              sub_1000983D8();
              uint64_t v443 = (uint64_t)v429;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (*(void *)&v935[v427])
              {
                swift_retain();
                uint64_t v444 = sub_100039114();
                unsigned __int8 v446 = v445;
                id v876 = v447;
                LODWORD(v875) = v448;
                swift_release();
                if (v444 == 1) {
                  unsigned __int8 v446 = 2;
                }
                else {
                  sub_10003F810(v444);
                }
                if (*(void *)&v935[v427])
                {
                  id v876 = v429;
                  swift_retain();
                  uint64_t v523 = sub_100039114();
                  uint64_t v875 = v524;
                  uint64_t v526 = v525;
                  char v528 = v527;
                  swift_release();
                  v426 = v929;
                  if (v523 == 1)
                  {
                    uint64_t v449 = 0;
                  }
                  else
                  {
                    sub_10003F810(v523);
                    if (v528) {
                      uint64_t v449 = 0;
                    }
                    else {
                      uint64_t v449 = v526;
                    }
                  }
                  uint64_t v443 = (uint64_t)v876;
                }
                else
                {
                  uint64_t v449 = 0;
                  v426 = v929;
                }
              }
              else
              {
                uint64_t v449 = 0;
                unsigned __int8 v446 = 2;
                v426 = v929;
              }
              if (__OFADD__(v449, 1)) {
                goto LABEL_533;
              }
              sub_10009841C(v443, v446, v449 + 1, 256);
              v437 = v935;
              sub_10003D0B0(v587);
            }
            else
            {
              sub_100010218(&qword_10080F280);
              uint64_t v432 = swift_allocObject();
              sub_1001F3A1C(v432, 1);
              sub_10040AAE4((uint64_t)v426, v433, _s10VisitAssetC9VisitDataVMa);
              AudioRecordingActivityState.hash(into:)(v434, v435);
              v935 = sub_1000407C0(0, v436);
              v437 = v935;
              sub_1003F5C20(v437, v959, &v982);
            }
            id v588 = v877;

            swift_unknownObjectRelease();
            sub_10040B12C(v878);

            uint64_t v589 = (uint64_t)v426;
            goto LABEL_309;
          }
        }
        else
        {
          uint64_t v868 = 0xF000000000000000;
          uint64_t v869 = 0;
          uint64_t v865 = 0xF000000000000000;
          uint64_t v866 = 0;
          if (v867) {
            goto LABEL_184;
          }
        }
        v404 = v878;
        sub_10001DFB8(v878);
        LODWORD(v876) = sub_100641588(v404, (void *)1);
        sub_10040B12C(v404);
        goto LABEL_185;
      }
      swift_unknownObjectRelease();
      id v323 = [v114 content];
      swift_retain();
      uint64_t v324 = 0xD00000000000001FLL;
      uint64_t v325 = (void *)v896;
LABEL_126:
      uint64_t v326 = 0x697461636F4C4C43;
      uint64_t v327 = (void *)0xEA00000000006E6FLL;
      goto LABEL_477;
    }
    uint64_t v266 = (void *)MOSuggestionAssetsTypeWorkout;
    id v267 = v207;
    id v268 = v266;
    char v269 = sub_10017BED0();

    if ((v269 & 1) == 0)
    {
      uint64_t v280 = (void *)MOSuggestionAssetsTypeMotionActivity;
      id v281 = v267;
      id v282 = v280;
      char v283 = sub_10017BED0();

      if ((v283 & 1) == 0)
      {
        uint64_t v336 = (void *)MOSuggestionAssetsTypeGenericMap;
        id v337 = v281;
        id v338 = v336;
        char v339 = sub_10017BED0();

        if (v339)
        {

          id v340 = [v114 content];
          self;
          uint64_t v341 = (void *)swift_dynamicCastObjCClass();
          if (v341)
          {
            id v877 = v340;
            v878 = v341;
            id v342 = [v114 metadata];
            uint64_t v343 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v344 = MOSuggestionAssetMetadataKeyLocationPreviewVisitStartTime;
            sub_1003F456C(v344);

            sub_1003F2608((uint64_t)&v973, v343, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              uint64_t v345 = type metadata accessor for Date();
              uint64_t v346 = (uint64_t)v903;
              int v347 = swift_dynamicCast();
              uint64_t v348 = *(void *)(v345 - 8);
              (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v348 + 56))(v346, v347 ^ 1u, 1, v345);
              BOOL v349 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v348 + 48))(v346, 1, v345) == 1;
              uint64_t v350 = v959;
              uint64_t v351 = v911;
              if (!v349)
              {
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v348 + 32))(v911, v346, v345);
                goto LABEL_429;
              }
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              uint64_t v739 = type metadata accessor for Date();
              uint64_t v346 = (uint64_t)v903;
              (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v739 - 8) + 56))(v903, 1, 1, v739);
              uint64_t v350 = v959;
              uint64_t v351 = v911;
            }
            id v740 = [v350 startDate];
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            sub_10001457C(v346, (uint64_t *)&unk_1007FC470);
LABEL_429:
            uint64_t v741 = type metadata accessor for Date();
            id v876 = *(id *)(v741 - 8);
            uint64_t v742 = v351;
            v743 = (void (*)(uint64_t, void, uint64_t, uint64_t))*((void *)v876 + 7);
            v743(v742, 0, 1, v741);
            id v744 = [v114 metadata];
            uint64_t v745 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v746 = MOSuggestionAssetMetadataKeyLocationPreviewVisitEndTime;
            sub_1003F456C(v746);

            sub_1003F2608((uint64_t)&v973, v745, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              uint64_t v747 = (uint64_t)v904;
              int v748 = swift_dynamicCast();
              v749 = v743;
              v743(v747, v748 ^ 1u, 1, v741);
              v750 = (void (**)(char *, uint64_t, uint64_t))v876;
              int v751 = (*((uint64_t (**)(uint64_t, uint64_t, uint64_t))v876 + 6))(v747, 1, v741);
              unint64_t v91 = v955;
              if (v751 != 1)
              {
                uint64_t v752 = (uint64_t)v907;
                v750[4](v907, v747, v741);
                goto LABEL_434;
              }
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              uint64_t v747 = (uint64_t)v904;
              v749 = v743;
              v743((uint64_t)v904, 1, 1, v741);
              unint64_t v91 = v955;
            }
            id v753 = [v959 endDate];
            uint64_t v752 = (uint64_t)v907;
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            sub_10001457C(v747, (uint64_t *)&unk_1007FC470);
LABEL_434:
            v749(v752, 0, 1, v741);
            v754 = v908;
            v749((uint64_t)v908, 1, 1, v741);
            v755 = v878;
            [v878 coordinate];
            uint64_t v757 = v756;
            [v755 coordinate];
            uint64_t v759 = v758;
            [v755 horizontalAccuracy];
            uint64_t v863 = (uint64_t)v754;
            v760 = v909;
            sub_10036DDC0(0, 0, 0, 0, 0, 0, v911, v752, v909, v863, v757, 0, v759, 0, 0, 0xF000000000000000, 0, 0xF000000000000000, 0,
              0,
              0,
              v761,
              0);
            uint64_t v762 = v910;
            sub_10040AAE4((uint64_t)v760, v910, _s10VisitAssetC9VisitDataVMa);
            v763 = sub_1001F3A84(0, v762);
            sub_1003F5C20(v763, v959, &v982);

            swift_unknownObjectRelease();
            uint64_t v589 = (uint64_t)v760;
LABEL_309:
            sub_10040AA64(v589, _s10VisitAssetC9VisitDataVMa);
            uint64_t v105 = v964;
            goto LABEL_6;
          }
          swift_unknownObjectRelease();
          id v323 = [v114 content];
          swift_retain();
          uint64_t v324 = 0xD00000000000001ALL;
          uint64_t v325 = (void *)v884;
          goto LABEL_126;
        }
        v508 = (void *)MOSuggestionAssetsTypeWorkoutGroup;
        id v509 = v337;
        id v510 = v508;
        char v511 = sub_10017BED0();

        if (v511)
        {

          id v512 = [v114 content];
          self;
          uint64_t v513 = swift_dynamicCastObjCClass();
          if (v513)
          {
            v514 = (void *)v513;
            uint64_t v515 = type metadata accessor for Date();
            v516 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v515 - 8) + 56);
            v516(v905, 1, 1, v515);
            v516(v906, 1, 1, v515);
            id v517 = [v114 metadata];
            uint64_t v518 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v519 = MOSuggestionAssetMetadataKeyWorkoutGroupCount;
            sub_1003F456C(v519);

            sub_1003F2608((uint64_t)&v973, v518, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              int v520 = swift_dynamicCast();
              id v521 = v979;
              if (!v520) {
                id v521 = 0;
              }
              v878 = v521;
              int v522 = v520 ^ 1;
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              v878 = 0;
              int v522 = 1;
            }
            LODWORD(v877) = v522;
            id v766 = [v114 metadata];
            uint64_t v767 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v768 = MOSuggestionAssetMetadataKeyWorkoutGroupTotalTime;
            sub_1003F456C(v768);

            sub_1003F2608((uint64_t)&v973, v767, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              int v769 = swift_dynamicCast();
              id v770 = v979;
              if (!v769) {
                id v770 = 0;
              }
              id v876 = v770;
              int v771 = v769 ^ 1;
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              id v876 = 0;
              int v771 = 1;
            }
            LODWORD(v875) = v771;
            id v772 = [v114 metadata];
            uint64_t v773 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v774 = MOSuggestionAssetMetadataKeyWorkoutGroupStartDates;
            sub_1003F456C(v774);

            sub_1003F2608((uint64_t)&v973, v773, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              sub_100010218(&qword_100800348);
              int v775 = swift_dynamicCast();
              unint64_t v776 = (unint64_t)v979;
              if (!v775) {
                unint64_t v776 = 0;
              }
              unint64_t v874 = v776;
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              unint64_t v874 = 0;
            }
            id v777 = [v114 metadata];
            uint64_t v778 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v779 = MOSuggestionAssetMetadataKeyWorkoutGroupEndDates;
            sub_1003F456C(v779);

            sub_1003F2608((uint64_t)&v973, v778, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              sub_100010218(&qword_100800348);
              int v780 = swift_dynamicCast();
              v781 = (void (*)(char *, uint64_t))v979;
              if (!v780) {
                v781 = 0;
              }
              v873 = v781;
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              v873 = 0;
            }
            id v782 = [v114 metadata];
            uint64_t v783 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v784 = MOSuggestionAssetMetadataKeyWorkoutGroupAverageHeartrate;
            sub_1003F456C(v784);

            sub_1003F2608((uint64_t)&v973, v783, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              int v785 = swift_dynamicCast();
              unint64_t v786 = (unint64_t)v979;
              if (!v785) {
                unint64_t v786 = 0;
              }
              unint64_t v872 = v786;
              int v787 = v785 ^ 1;
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              unint64_t v872 = 0;
              int v787 = 1;
            }
            LODWORD(v871) = v787;
            id v788 = [v114 metadata];
            uint64_t v789 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v790 = MOSuggestionAssetMetadataKeyWorkoutGroupTotalCalories;
            sub_1003F456C(v790);

            sub_1003F2608((uint64_t)&v973, v789, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              int v791 = swift_dynamicCast();
              if (v791) {
                uint64_t v792 = (uint64_t)v979;
              }
              else {
                uint64_t v792 = 0;
              }
              unsigned __int8 v793 = v791 ^ 1;
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              uint64_t v792 = 0;
              unsigned __int8 v793 = 1;
            }
            id v794 = [v114 metadata];
            uint64_t v795 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

            id v796 = MOSuggestionAssetMetadataKeyWorkoutGroupTotalCaloriesWithUnit;
            sub_1003F456C(v796);

            sub_1003F2608((uint64_t)&v973, v795, &v977);
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v973);
            if (*((void *)&v978 + 1))
            {
              int v797 = swift_dynamicCast();
              if (v797) {
                uint64_t v798 = (uint64_t)v979;
              }
              else {
                uint64_t v798 = 0;
              }
              if (v797) {
                uint64_t v799 = (uint64_t)v980;
              }
              else {
                uint64_t v799 = 0;
              }
            }
            else
            {
              sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
              uint64_t v798 = 0;
              uint64_t v799 = 0;
            }
            unint64_t v91 = v955;
            swift_unknownObjectRetain();
            v545 = sub_10048CBA8(0, v514, 0, 0, 0, 1, v905, v906, 0, 1u, 0, 1u, 0, 0, 0, 0, (uint64_t)v878, v877, (uint64_t)v876,
                     v875,
                     v874,
                     (uint64_t)v873,
                     v872,
                     v871,
                     v792,
                     v793,
                     v798,
                     v799);
            sub_1003F5C20(v545, v959, &v982);
LABEL_271:
            swift_unknownObjectRelease();

            goto LABEL_243;
          }
          swift_unknownObjectRelease();
          id v323 = [v114 content];
          swift_retain();
          uint64_t v324 = 0xD00000000000001BLL;
          uint64_t v325 = (void *)v879;
        }
        else
        {
          id v707 = MOSuggestionAssetsTypeStateOfMindAsset;
          char v708 = sub_10017BED0();

          if ((v708 & 1) == 0)
          {
            id v973 = 0;
            v974 = (void *)0xE000000000000000;
            _StringGuts.grow(_:)(67);
            v732._countAndFlagsBits = 0xD000000000000041;
            v732._object = v881;
            DefaultStringInterpolation.appendLiteral(_:)(v732);
            id v733 = [v114 assetType];
            uint64_t v734 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            v736 = v735;

            v737._countAndFlagsBits = v734;
            v737._object = v736;
            j___sSS6appendyySSF(v737);
            swift_bridgeObjectRelease();
            v738._countAndFlagsBits = 0;
            v738._object = (void *)0xE000000000000000;
            DefaultStringInterpolation.appendLiteral(_:)(v738);
            v965((unint64_t)v973, (unint64_t)v974);
            swift_bridgeObjectRelease();
LABEL_243:

            uint64_t v105 = v964;
            goto LABEL_6;
          }
          id v709 = [v114 content];
          self;
          v710 = (void *)swift_dynamicCastObjCClass();
          if (v710)
          {
            v711 = v710;
            id v712 = [v710 imageAsset];
            if (v712)
            {
              v713 = v712;
              sub_10001B284(0, &qword_10080C748);
              id v714 = sub_10022A93C(1);
              v878 = v709;
              v715 = v714;
              id v716 = [v713 imageWithTraitCollection:v714];

              if (v716)
              {
                v717 = v716;
                id v718 = [v711 imageAsset];
                if (v718)
                {
                  v719 = v718;
                  id v720 = sub_10022A93C(2);
                  id v721 = [v719 imageWithTraitCollection:v720];

                  if (v721)
                  {
                    v722 = v717;
                    id v723 = [v717 imageAsset];
                    if (v723)
                    {
                      v724 = v723;
                      id v725 = sub_10022A93C(1);
                      [v724 registerImage:v721 withTraitCollection:v725];
                    }
                    id v726 = [v114 metadata];
                    uint64_t v727 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

                    id v728 = MOSuggestionAssetMetadataKeyStateOfMindIdentifier;
                    sub_1003F456C(v728);

                    sub_1003F2608((uint64_t)&v973, v727, &v977);
                    swift_bridgeObjectRelease();
                    sub_10001DF0C((uint64_t)&v973);
                    if (*((void *)&v978 + 1))
                    {
                      int v729 = swift_dynamicCast();
                      if (v729) {
                        id v730 = v979;
                      }
                      else {
                        id v730 = 0;
                      }
                      if (v729) {
                        v731 = v980;
                      }
                      else {
                        v731 = 0;
                      }
                      id v876 = v731;
                      id v877 = v730;
                    }
                    else
                    {
                      sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
                      id v876 = 0;
                      id v877 = 0;
                    }
                    id v800 = [v114 metadata];
                    uint64_t v801 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

                    id v802 = MOSuggestionAssetMetadataKeyStateOfMindStartDate;
                    sub_1003F456C(v802);

                    sub_1003F2608((uint64_t)&v973, v801, &v977);
                    swift_bridgeObjectRelease();
                    sub_10001DF0C((uint64_t)&v973);
                    if (*((void *)&v978 + 1))
                    {
                      uint64_t v803 = type metadata accessor for Date();
                      uint64_t v804 = v902;
                      int v805 = swift_dynamicCast();
                      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v803 - 8) + 56))(v804, v805 ^ 1u, 1, v803);
                    }
                    else
                    {
                      sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
                      uint64_t v806 = type metadata accessor for Date();
                      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v806 - 8) + 56))(v902, 1, 1, v806);
                    }
                    id v807 = [v114 metadata];
                    uint64_t v808 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

                    id v809 = MOSuggestionAssetMetadataKeyStateOfMindReflectiveInterval;
                    sub_1003F456C(v809);

                    sub_1003F2608((uint64_t)&v973, v808, &v977);
                    swift_bridgeObjectRelease();
                    sub_10001DF0C((uint64_t)&v973);
                    if (*((void *)&v978 + 1))
                    {
                      int v810 = swift_dynamicCast();
                      uint64_t v811 = (uint64_t)v979;
                      if (!v810) {
                        uint64_t v811 = 0;
                      }
                      uint64_t v875 = v811;
                      int v812 = v810 ^ 1;
                    }
                    else
                    {
                      sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
                      uint64_t v875 = 0;
                      int v812 = 1;
                    }
                    LODWORD(v874) = v812;
                    id v813 = [v114 metadata];
                    uint64_t v814 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

                    id v815 = MOSuggestionAssetMetadataKeyStateOfMindLabels;
                    sub_1003F456C(v815);

                    sub_1003F2608((uint64_t)&v973, v814, &v977);
                    swift_bridgeObjectRelease();
                    sub_10001DF0C((uint64_t)&v973);
                    if (*((void *)&v978 + 1))
                    {
                      sub_100010218(&qword_10080A1D0);
                      int v816 = swift_dynamicCast();
                      v817 = (void (*)(char *, uint64_t))v979;
                      if (!v816) {
                        v817 = 0;
                      }
                      v873 = v817;
                    }
                    else
                    {
                      sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
                      v873 = 0;
                    }
                    id v818 = [v114 metadata];
                    uint64_t v819 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

                    id v820 = MOSuggestionAssetMetadataKeyStateOfMindDomains;
                    sub_1003F456C(v820);

                    sub_1003F2608((uint64_t)&v973, v819, &v977);
                    swift_bridgeObjectRelease();
                    sub_10001DF0C((uint64_t)&v973);
                    if (*((void *)&v978 + 1))
                    {
                      sub_100010218(&qword_10080A1D0);
                      int v821 = swift_dynamicCast();
                      unint64_t v822 = (unint64_t)v979;
                      if (!v821) {
                        unint64_t v822 = 0;
                      }
                      unint64_t v872 = v822;
                    }
                    else
                    {
                      sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
                      unint64_t v872 = 0;
                    }
                    id v823 = [v114 metadata];
                    uint64_t v824 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

                    id v825 = MOSuggestionAssetMetadataKeyStateOfMindValenceClassification;
                    sub_1003F456C(v825);

                    sub_1003F2608((uint64_t)&v973, v824, &v977);
                    swift_bridgeObjectRelease();
                    sub_10001DF0C((uint64_t)&v973);
                    if (*((void *)&v978 + 1))
                    {
                      int v826 = swift_dynamicCast();
                      v827 = v979;
                      if (!v826) {
                        v827 = 0;
                      }
                      v871 = v827;
                      char v828 = v826 ^ 1;
                    }
                    else
                    {
                      sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
                      v871 = 0;
                      char v828 = 1;
                    }
                    id v829 = [v114 metadata];
                    uint64_t v830 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

                    id v831 = MOSuggestionAssetMetadataKeyStateOfMindAssociatedColorsLight;
                    sub_1003F456C(v831);

                    sub_1003F2608((uint64_t)&v973, v830, &v977);
                    swift_bridgeObjectRelease();
                    sub_10001DF0C((uint64_t)&v973);
                    if (*((void *)&v978 + 1))
                    {
                      sub_100010218(&qword_10080C750);
                      if (swift_dynamicCast())
                      {
                        uint64_t v832 = (uint64_t)v979;
                        goto LABEL_507;
                      }
                    }
                    else
                    {
                      sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
                    }
                    uint64_t v832 = sub_10009C2F8(0);
LABEL_507:
                    v833 = sub_100091F04(v832);
                    swift_bridgeObjectRelease();
                    id v834 = [v114 metadata];
                    uint64_t v835 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

                    id v836 = MOSuggestionAssetMetadataKeyStateOfMindAssociatedColorsDark;
                    sub_1003F456C(v836);

                    sub_1003F2608((uint64_t)&v973, v835, &v977);
                    swift_bridgeObjectRelease();
                    sub_10001DF0C((uint64_t)&v973);
                    if (*((void *)&v978 + 1))
                    {
                      sub_100010218(&qword_10080C750);
                      if (swift_dynamicCast())
                      {
                        uint64_t v837 = (uint64_t)v979;
                        goto LABEL_512;
                      }
                    }
                    else
                    {
                      sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
                    }
                    uint64_t v837 = sub_10009C2F8(0);
LABEL_512:
                    v838 = sub_100091F04(v837);
                    swift_bridgeObjectRelease();
                    id v839 = v722;
                    id v840 = v721;
                    v841 = sub_10008FF38(0, v722, v721, (uint64_t)v877, (uint64_t)v876, v902, v875, v874, v873, v872, v871, v828, (uint64_t)v833, (uint64_t)v838);
                    sub_1003F5C20(v841, v959, &v982);
                    swift_unknownObjectRelease();

LABEL_394:
                    unint64_t v91 = v955;
                    uint64_t v105 = v964;
                    goto LABEL_6;
                  }
                }
              }
            }
          }
          swift_unknownObjectRelease();
          id v323 = [v114 content];
          swift_retain();
          uint64_t v324 = 0xD00000000000001BLL;
          uint64_t v325 = (void *)v880;
        }
        uint64_t v326 = 0x6567616D494955;
        uint64_t v327 = (void *)0xE700000000000000;
LABEL_477:
        sub_1003FE97C(v324, v325, v326, v327, v323, v965);

        swift_unknownObjectRelease();
        swift_release();
        uint64_t v105 = v964;
        goto LABEL_6;
      }

      id v284 = [v114 content];
      self;
      double v285 = (void *)swift_dynamicCastObjCClass();
      if (v285)
      {
        double v286 = v285;
        v878 = v284;
        id v287 = [v285 imageAsset];
        if (!v287
          || (id v288 = v287,
              sub_10001B284(0, &qword_10080C748),
              id v289 = sub_10022A93C(1),
              id v290 = [v288 imageWithTraitCollection:v289],
              v288,
              v289,
              !v290))
        {
          id v291 = [v114 content];
          swift_retain();
          sub_1003FE97C(0xD00000000000001ELL, (void *)(v892 | 0x8000000000000000), 0xD000000000000015, v888, v291, v965);
          swift_unknownObjectRelease();
          swift_release();
          id v290 = 0;
        }
        id v292 = [v286 imageAsset];
        if (v292
          && (uint64_t v293 = v292,
              sub_10001B284(0, &qword_10080C748),
              id v294 = sub_10022A93C(2),
              uint64_t v295 = [v293 imageWithTraitCollection:v294],
              v293,
              v294,
              v295))
        {
          swift_unknownObjectRelease();
          v871 = v295;
        }
        else
        {
          id v547 = [v114 content];
          swift_retain();
          sub_1003FE97C(0xD00000000000001ELL, (void *)(v892 | 0x8000000000000000), 0xD000000000000014, v887, v547, v965);
          swift_unknownObjectRelease();
          swift_unknownObjectRelease();
          swift_release();
          v871 = 0;
        }
      }
      else
      {
        swift_unknownObjectRelease();
        id v548 = [v114 content];
        swift_retain();
        sub_1003FE97C(0xD00000000000001ELL, v885, 0xD00000000000001ALL, v886, v548, v965);
        swift_unknownObjectRelease();
        swift_release();
        v871 = 0;
        id v290 = 0;
      }
      id v549 = [v114 metadata];
      uint64_t v550 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v551 = MOSuggestionAssetMetadataKeyMotionActivityType;
      sub_1003F456C(v551);

      sub_1003F2608((uint64_t)&v973, v550, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        v552 = v290;
        if (swift_dynamicCast())
        {
          id v553 = v979;
          v554 = v980;
          goto LABEL_279;
        }
      }
      else
      {
        v552 = v290;
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
      }
      id v553 = 0;
      v554 = (void *)0xE000000000000000;
LABEL_279:
      id v555 = [v114 metadata];
      uint64_t v556 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v557 = MOSuggestionAssetMetadataKeyMotionActivityTypeEnum;
      sub_1003F456C(v557);

      sub_1003F2608((uint64_t)&v973, v556, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v875 = (uint64_t)v979;
          unint64_t v558 = (unint64_t)v980;
          goto LABEL_284;
        }
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
      }
      uint64_t v875 = 0;
      unint64_t v558 = 0xE000000000000000;
LABEL_284:
      unint64_t v874 = v558;
      id v559 = [v114 metadata];
      uint64_t v560 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v561 = MOSuggestionAssetMetadataKeyMotionActivityTypeLocalized;
      sub_1003F456C(v561);

      sub_1003F2608((uint64_t)&v973, v560, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        if (swift_dynamicCast())
        {
          v873 = (void (*)(char *, uint64_t))v979;
          unint64_t v562 = (unint64_t)v980;
          goto LABEL_289;
        }
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
      }
      v873 = 0;
      unint64_t v562 = 0xE000000000000000;
LABEL_289:
      unint64_t v872 = v562;
      id v563 = [v114 metadata];
      uint64_t v564 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v565 = MOSuggestionAssetMetadataKeyMotionActivityNumberOfSteps;
      sub_1003F456C(v565);

      sub_1003F2608((uint64_t)&v973, v564, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      id v877 = v554;
      v878 = v553;
      if (*((void *)&v978 + 1))
      {
        if (swift_dynamicCast())
        {
          id v566 = v979;
LABEL_294:
          id v973 = v566;
          v567 = (void (*)(char *, uint64_t))dispatch thunk of CustomStringConvertible.description.getter();
          id v876 = v568;
          id v569 = [v114 metadata];
          uint64_t v570 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          id v571 = MOSuggestionAssetMetadataKeyMotionActivityStartDate;
          sub_1003F456C(v571);

          sub_1003F2608((uint64_t)&v973, v570, &v977);
          swift_bridgeObjectRelease();
          sub_10001DF0C((uint64_t)&v973);
          if (*((void *)&v978 + 1))
          {
            uint64_t v572 = type metadata accessor for Date();
            uint64_t v573 = v918;
            int v574 = swift_dynamicCast();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v572 - 8) + 56))(v573, v574 ^ 1u, 1, v572);
          }
          else
          {
            sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
            uint64_t v575 = type metadata accessor for Date();
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v575 - 8) + 56))(v918, 1, 1, v575);
          }
          id v576 = [v114 metadata];
          uint64_t v577 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

          id v578 = MOSuggestionAssetMetadataKeyMotionActivityEndDate;
          sub_1003F456C(v578);

          sub_1003F2608((uint64_t)&v973, v577, &v977);
          swift_bridgeObjectRelease();
          sub_10001DF0C((uint64_t)&v973);
          if (*((void *)&v978 + 1))
          {
            uint64_t v579 = type metadata accessor for Date();
            uint64_t v580 = (uint64_t)v893;
            int v581 = swift_dynamicCast();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v579 - 8) + 56))(v580, v581 ^ 1u, 1, v579);
          }
          else
          {
            sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
            uint64_t v582 = type metadata accessor for Date();
            uint64_t v580 = (uint64_t)v893;
            (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v582 - 8) + 56))(v893, 1, 1, v582);
          }
          unint64_t v91 = v955;
          id v583 = v552;
          v584 = v871;
          v585 = v871;
          id v586 = sub_100100118(0, v552, v584, (uint64_t)v878, (uint64_t)v877, v875, v874, (uint64_t)v873, v872, v567, (uint64_t)v876, v918, v580);
          sub_1003F5C20(v586, v959, &v982);

          uint64_t v105 = v964;
          goto LABEL_6;
        }
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
      }
      id v566 = 0;
      goto LABEL_294;
    }

    id v270 = [v114 content];
    self;
    v878 = (void *)swift_dynamicCastObjCClass();
    if (!v878)
    {
      swift_unknownObjectRelease();
      id v323 = [v114 content];
      swift_retain();
      uint64_t v326 = 0xD000000000000018;
      uint64_t v324 = 0xD00000000000001CLL;
      uint64_t v325 = (void *)v890;
      uint64_t v327 = (void *)v891;
      goto LABEL_477;
    }
    id v271 = [v878 route];
    id v272 = v271;
    uint64_t v105 = v964;
    if (!v271) {
      goto LABEL_346;
    }
    id v273 = [v271 locationReadings];
    sub_10001B284(0, (unint64_t *)&qword_1007F9110);
    id v876 = (id)static Array._unconditionallyBridgeFromObjectiveC(_:)();

    id v274 = [v114 metadata];
    uint64_t v275 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v276 = MOSuggestionAssetMetadataKeyWorkoutType;
    sub_1003F456C(v276);

    sub_1003F2608((uint64_t)&v973, v275, &v977);
    swift_bridgeObjectRelease();
    sub_10001DF0C((uint64_t)&v973);
    if (*((void *)&v978 + 1))
    {
      int v277 = swift_dynamicCast();
      if (v277) {
        uint64_t v278 = (uint64_t)v979;
      }
      else {
        uint64_t v278 = 0;
      }
      if (v277) {
        unint64_t v279 = (unint64_t)v980;
      }
      else {
        unint64_t v279 = 0;
      }
      unint64_t v874 = v279;
      uint64_t v875 = v278;
    }
    else
    {
      sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
      unint64_t v874 = 0;
      uint64_t v875 = 0;
    }
    id v590 = [v114 metadata];
    uint64_t v591 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v592 = MOSuggestionAssetMetadataKeyWorkoutDuration;
    sub_1003F456C(v592);

    sub_1003F2608((uint64_t)&v973, v591, &v977);
    swift_bridgeObjectRelease();
    sub_10001DF0C((uint64_t)&v973);
    id v877 = v272;
    if (*((void *)&v978 + 1))
    {
      if (swift_dynamicCast())
      {
        v873 = (void (*)(char *, uint64_t))v979;
        goto LABEL_316;
      }
    }
    else
    {
      sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
    }
    v873 = 0;
LABEL_316:
    id v593 = [v114 metadata];
    uint64_t v594 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v595 = MOSuggestionAssetMetadataKeyWorkoutWorkoutStartTime;
    sub_1003F456C(v595);

    sub_1003F2608((uint64_t)&v973, v594, &v977);
    swift_bridgeObjectRelease();
    sub_10001DF0C((uint64_t)&v973);
    if (*((void *)&v978 + 1))
    {
      uint64_t v596 = type metadata accessor for Date();
      uint64_t v597 = v914;
      int v598 = swift_dynamicCast();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v596 - 8) + 56))(v597, v598 ^ 1u, 1, v596);
    }
    else
    {
      sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
      uint64_t v599 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v599 - 8) + 56))(v914, 1, 1, v599);
    }
    id v600 = [v114 metadata];
    uint64_t v601 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v602 = MOSuggestionAssetMetadataKeyWorkoutWorkoutEndTime;
    sub_1003F456C(v602);

    sub_1003F2608((uint64_t)&v973, v601, &v977);
    swift_bridgeObjectRelease();
    sub_10001DF0C((uint64_t)&v973);
    if (*((void *)&v978 + 1))
    {
      uint64_t v603 = type metadata accessor for Date();
      uint64_t v604 = v915;
      int v605 = swift_dynamicCast();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v603 - 8) + 56))(v604, v605 ^ 1u, 1, v603);
    }
    else
    {
      sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
      uint64_t v606 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v606 - 8) + 56))(v915, 1, 1, v606);
    }
    id v607 = [v114 metadata];
    uint64_t v608 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v609 = MOSuggestionAssetMetadataKeyWorkoutAverageHeartRate;
    sub_1003F456C(v609);

    sub_1003F2608((uint64_t)&v973, v608, &v977);
    swift_bridgeObjectRelease();
    sub_10001DF0C((uint64_t)&v973);
    if (*((void *)&v978 + 1))
    {
      int v610 = swift_dynamicCast();
      unint64_t v611 = (unint64_t)v979;
      if (!v610) {
        unint64_t v611 = 0;
      }
      unint64_t v872 = v611;
      int v612 = v610 ^ 1;
    }
    else
    {
      sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
      unint64_t v872 = 0;
      int v612 = 1;
    }
    LODWORD(v871) = v612;
    id v613 = [v114 metadata];
    uint64_t v614 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v615 = MOSuggestionAssetMetadataKeyWorkoutCaloriesBurnt;
    sub_1003F456C(v615);

    sub_1003F2608((uint64_t)&v973, v614, &v977);
    swift_bridgeObjectRelease();
    sub_10001DF0C((uint64_t)&v973);
    if (*((void *)&v978 + 1))
    {
      int v616 = swift_dynamicCast();
      unint64_t v617 = (unint64_t)v979;
      if (!v616) {
        unint64_t v617 = 0;
      }
      unint64_t v870 = v617;
      int v618 = v616 ^ 1;
    }
    else
    {
      sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
      unint64_t v870 = 0;
      int v618 = 1;
    }
    LODWORD(v869) = v618;
    id v619 = [v114 metadata];
    uint64_t v620 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v621 = MOSuggestionAssetMetadataKeyWorkoutCaloriesBurntWithUnit;
    sub_1003F456C(v621);

    sub_1003F2608((uint64_t)&v973, v620, &v977);
    swift_bridgeObjectRelease();
    sub_10001DF0C((uint64_t)&v973);
    if (*((void *)&v978 + 1))
    {
      int v622 = swift_dynamicCast();
      if (v622) {
        uint64_t v623 = (uint64_t)v979;
      }
      else {
        uint64_t v623 = 0;
      }
      if (v622) {
        uint64_t v624 = (uint64_t)v980;
      }
      else {
        uint64_t v624 = 0;
      }
    }
    else
    {
      sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
      uint64_t v623 = 0;
      uint64_t v624 = 0;
    }
    id v625 = [v114 metadata];
    uint64_t v626 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    id v627 = MOSuggestionAssetMetadataKeyWorkoutTotalDistanceWithUnit;
    sub_1003F456C(v627);

    sub_1003F2608((uint64_t)&v973, v626, &v977);
    swift_bridgeObjectRelease();
    sub_10001DF0C((uint64_t)&v973);
    if (!*((void *)&v978 + 1))
    {
      sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
      unint64_t v91 = v955;
      uint64_t v105 = v964;
LABEL_344:
      uint64_t v629 = 0;
      uint64_t v630 = 0xE000000000000000;
      goto LABEL_345;
    }
    int v628 = swift_dynamicCast();
    unint64_t v91 = v955;
    uint64_t v105 = v964;
    if (!v628) {
      goto LABEL_344;
    }
    uint64_t v629 = (uint64_t)v979;
    uint64_t v630 = (uint64_t)v980;
LABEL_345:
    v631 = sub_1004AC7E0(0, (unint64_t)v876, v875, v874, (uint64_t)v873, 0, v914, v915, v872, v871, v870, v869, v623, v624, v629, v630);
    sub_1003F5C20(v631, v959, &v982);
    id v272 = v877;

LABEL_346:
    id v632 = [v878 icon];
    if (v632)
    {
      v633 = v632;
      id v634 = [v114 metadata];
      uint64_t v635 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v636 = MOSuggestionAssetMetadataKeyWorkoutType;
      sub_1003F456C(v636);

      sub_1003F2608((uint64_t)&v973, v635, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        int v637 = swift_dynamicCast();
        if (v637) {
          id v638 = v979;
        }
        else {
          id v638 = 0;
        }
        if (v637) {
          v639 = v980;
        }
        else {
          v639 = 0;
        }
        id v877 = v639;
        v878 = v638;
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
        id v877 = 0;
        v878 = 0;
      }
      id v646 = [v114 metadata];
      uint64_t v647 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v648 = MOSuggestionAssetMetadataKeyWorkoutDuration;
      sub_1003F456C(v648);

      sub_1003F2608((uint64_t)&v973, v647, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        if (swift_dynamicCast())
        {
          id v876 = v979;
          goto LABEL_364;
        }
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
      }
      id v876 = 0;
LABEL_364:
      id v649 = [v114 metadata];
      uint64_t v650 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v651 = MOSuggestionAssetMetadataKeyWorkoutWorkoutStartTime;
      sub_1003F456C(v651);

      sub_1003F2608((uint64_t)&v973, v650, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        uint64_t v652 = type metadata accessor for Date();
        uint64_t v653 = v916;
        int v654 = swift_dynamicCast();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v652 - 8) + 56))(v653, v654 ^ 1u, 1, v652);
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
        uint64_t v655 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v655 - 8) + 56))(v916, 1, 1, v655);
      }
      id v656 = [v114 metadata];
      uint64_t v657 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v658 = MOSuggestionAssetMetadataKeyWorkoutWorkoutEndTime;
      sub_1003F456C(v658);

      sub_1003F2608((uint64_t)&v973, v657, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        uint64_t v659 = type metadata accessor for Date();
        uint64_t v660 = v917;
        int v661 = swift_dynamicCast();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v659 - 8) + 56))(v660, v661 ^ 1u, 1, v659);
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
        uint64_t v662 = type metadata accessor for Date();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v662 - 8) + 56))(v917, 1, 1, v662);
      }
      id v663 = [v114 metadata];
      uint64_t v664 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v665 = MOSuggestionAssetMetadataKeyWorkoutAverageHeartRate;
      sub_1003F456C(v665);

      sub_1003F2608((uint64_t)&v973, v664, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        int v666 = swift_dynamicCast();
        uint64_t v667 = (uint64_t)v979;
        if (!v666) {
          uint64_t v667 = 0;
        }
        uint64_t v875 = v667;
        int v668 = v666 ^ 1;
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
        uint64_t v875 = 0;
        int v668 = 1;
      }
      LODWORD(v874) = v668;
      id v669 = [v114 metadata];
      uint64_t v670 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v671 = MOSuggestionAssetMetadataKeyWorkoutCaloriesBurnt;
      sub_1003F456C(v671);

      sub_1003F2608((uint64_t)&v973, v670, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        int v672 = swift_dynamicCast();
        v673 = (void (*)(char *, uint64_t))v979;
        if (!v672) {
          v673 = 0;
        }
        v873 = v673;
        int v674 = v672 ^ 1;
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
        v873 = 0;
        int v674 = 1;
      }
      LODWORD(v872) = v674;
      id v675 = [v114 metadata];
      uint64_t v676 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v677 = MOSuggestionAssetMetadataKeyWorkoutCaloriesBurntWithUnit;
      sub_1003F456C(v677);

      sub_1003F2608((uint64_t)&v973, v676, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        int v678 = swift_dynamicCast();
        if (v678) {
          uint64_t v679 = (uint64_t)v979;
        }
        else {
          uint64_t v679 = 0;
        }
        if (v678) {
          uint64_t v680 = (uint64_t)v980;
        }
        else {
          uint64_t v680 = 0;
        }
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
        uint64_t v679 = 0;
        uint64_t v680 = 0;
      }
      id v681 = [v114 metadata];
      uint64_t v682 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

      id v683 = MOSuggestionAssetMetadataKeyWorkoutTotalDistanceWithUnit;
      sub_1003F456C(v683);

      sub_1003F2608((uint64_t)&v973, v682, &v977);
      swift_bridgeObjectRelease();
      sub_10001DF0C((uint64_t)&v973);
      if (*((void *)&v978 + 1))
      {
        if (swift_dynamicCast())
        {
          uint64_t v684 = (uint64_t)v979;
          uint64_t v685 = (uint64_t)v980;
LABEL_393:
          id v686 = v633;
          v687 = sub_10048CBA8(0, v633, (uint64_t)v878, (uint64_t)v877, (uint64_t)v876, 0, v916, v917, v875, v874, (uint64_t)v873, v872, v679, v680, v684, v685, 0, 1u, 0,
                   1u,
                   0,
                   0,
                   0,
                   1u,
                   0,
                   1u,
                   0,
                   0);
          sub_1003F5C20(v687, v959, &v982);

          swift_unknownObjectRelease();
          goto LABEL_394;
        }
      }
      else
      {
        sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
      }
      uint64_t v684 = 0;
      uint64_t v685 = 0xE000000000000000;
      goto LABEL_393;
    }
    if (v272) {
      goto LABEL_94;
    }
    id v973 = 0;
    v974 = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(35);
    v640._countAndFlagsBits = 0xD000000000000021;
    v640._object = v882;
    DefaultStringInterpolation.appendLiteral(_:)(v640);
    id v641 = [v114 content];
    if ([v641 respondsToSelector:"debugDescription"])
    {
      id v642 = [v641 debugDescription];
      swift_unknownObjectRelease();
      uint64_t v643 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      v645 = v644;

      uint64_t v105 = v964;
    }
    else
    {
      swift_unknownObjectRelease();
      uint64_t v643 = 0;
      v645 = (void *)0xE000000000000000;
    }
    v764._countAndFlagsBits = v643;
    v764._object = v645;
    j___sSS6appendyySSF(v764);
    swift_bridgeObjectRelease();
    v765._countAndFlagsBits = 0;
    v765._object = (void *)0xE000000000000000;
    DefaultStringInterpolation.appendLiteral(_:)(v765);
    sub_1003F5B3C(0xD00000000000001CLL, (void *)(v883 | 0x8000000000000000), (uint64_t)v973, v974, v965);
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();

LABEL_6:
    ++v104;
  }
  while (v970 != v104);
  unint64_t v842 = v972;
  swift_bridgeObjectRelease();
  v843 = v935;
  if (v935)
  {
    uint64_t v844 = v966;
    if (*(void *)&v935[OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata]
      && (swift_retain(), uint64_t v845 = sub_100039114(), swift_release(), v845 != 1))
    {
      uint64_t v847 = swift_bridgeObjectRetain();
      sub_10003F810(v847);
    }
    else
    {
      uint64_t v845 = 0;
    }
    uint64_t v846 = v937;
    a5 = v930;
  }
  else
  {
    uint64_t v845 = 0;
    uint64_t v846 = v937;
    a5 = v930;
    uint64_t v844 = v966;
  }
LABEL_521:
  v848 = sub_1003FEACC(v845, v959, v965, v967, a5, v846);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  unint64_t v849 = (unint64_t)v982;
  swift_bridgeObjectRetain();
  sub_1003FFC14((uint64_t)v848, v849);
  swift_bridgeObjectRelease();
  unint64_t v850 = swift_bridgeObjectRetain();
  v851 = (void *)sub_1003F2224(v850);
  swift_bridgeObjectRelease();
  if (!v851)
  {
    long long v977 = 0u;
    long long v978 = 0u;
    goto LABEL_530;
  }
  id v852 = [v851 metadata];

  uint64_t v853 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
  id v854 = MOSuggestionAssetMetadataKeyTransferID;
  sub_1003F456C(v854);

  sub_1003F2608((uint64_t)&v973, v853, &v977);
  swift_bridgeObjectRelease();
  sub_10001DF0C((uint64_t)&v973);
  if (!*((void *)&v978 + 1))
  {
LABEL_530:
    sub_10001457C((uint64_t)&v977, &qword_1007FAD50);
    unint64_t v856 = 0;
    unint64_t v857 = 0;
    goto LABEL_531;
  }
  int v855 = swift_dynamicCast();
  if (v855) {
    unint64_t v856 = (unint64_t)v973;
  }
  else {
    unint64_t v856 = 0;
  }
  if (v855) {
    unint64_t v857 = (unint64_t)v974;
  }
  else {
    unint64_t v857 = 0;
  }
LABEL_531:
  unint64_t v858 = (unint64_t)v982;
  unint64_t v859 = (unint64_t)v981;
  uint64_t v860 = sub_1003F25A8(v842);
  swift_release_n();

  v861 = v938;
  uint64_t v862 = v968;
  unint64_t *v938 = v969;
  v861[1] = v862;
  v861[2] = v844;
  v861[3] = v858;
  v861[4] = v859;
  v861[5] = (unint64_t)v848;
  v861[6] = v860;
  v861[7] = v856;
  v861[8] = v857;
}

uint64_t sub_1004082B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[28] = a5;
  v6[29] = a6;
  v6[26] = a3;
  v6[27] = a4;
  v6[24] = a1;
  v6[25] = a2;
  uint64_t v7 = type metadata accessor for Date();
  v6[30] = v7;
  v6[31] = *(void *)(v7 - 8);
  v6[32] = swift_task_alloc();
  return _swift_task_switch(sub_100408378, 0, 0);
}

uint64_t sub_100408378()
{
  uint64_t v2 = v0[31];
  uint64_t v1 = v0[32];
  uint64_t v3 = v0[30];
  static Date.now.getter();
  Date.timeIntervalSinceReferenceDate.getter();
  v0[33] = v4;
  id v5 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v0[34] = v5;
  v0[35] = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v1, v3);
  if (qword_1007F6C18 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)swift_task_alloc();
  v0[36] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100408488;
  uint64_t v7 = v0[25];
  return sub_1002424F8(v7);
}

uint64_t sub_100408488(uint64_t a1)
{
  *(void *)(*(void *)v1 + 296) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100408588, 0, 0);
}

void sub_100408588()
{
  unint64_t v1 = *(void *)(v0 + 296);
  if (!v1)
  {
    (*(void (**)(unint64_t, unint64_t))(v0 + 208))(0xD000000000000021, 0x800000010069C900);
    uint64_t v29 = 0;
    uint64_t v30 = 0;
    unint64_t v87 = 0;
    uint64_t v31 = 0;
    uint64_t v32 = 0;
    uint64_t v33 = 0;
    uint64_t v34 = 0;
    uint64_t v35 = 0;
LABEL_29:
    uint64_t v66 = *(void **)(v0 + 192);
    swift_task_dealloc();
    *uint64_t v66 = v29;
    v66[1] = v1;
    v66[2] = v30;
    v66[3] = v87;
    v66[4] = v31;
    v66[5] = v32;
    v66[6] = v33;
    v66[7] = v34;
    v66[8] = v35;
    uint64_t v67 = *(void (**)(void))(v0 + 8);
    v67();
    return;
  }
  uint64_t v86 = (unint64_t *)(v0 + 16);
  _StringGuts.grow(_:)(50);
  swift_bridgeObjectRelease();
  if (v1 >> 62) {
    goto LABEL_37;
  }
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v77 = v0 + 136;
    uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
    double v4 = *(double *)(v0 + 264);
    uint64_t v5 = *(void *)(v0 + 256);
    uint64_t v6 = *(void *)(v0 + 232);
    uint64_t v7 = *(void *)(v0 + 240);
    uint64_t v8 = *(void (**)(unint64_t, unint64_t, __n128))(v0 + 224);
    uint64_t v82 = *(void (**)(unint64_t, unint64_t))(v0 + 208);
    uint64_t v84 = *(void *)(v0 + 216);
    uint64_t v80 = *(void **)(v0 + 200);
    *(void *)(v0 + 144) = v2;
    v9._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v9);
    swift_bridgeObjectRelease();
    v10._countAndFlagsBits = 0xD000000000000015;
    v10._object = (void *)0x800000010069C930;
    String.append(_:)(v10);
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1006D6280;
    static Date.now.getter();
    Date.timeIntervalSinceReferenceDate.getter();
    double v13 = v12;
    v3(v5, v7);
    *(void *)(v11 + 56) = &type metadata for Double;
    *(void *)(v11 + 64) = &protocol witness table for Double;
    *(double *)(v11 + 32) = v13 - v4;
    v14._countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    v15._object = (void *)0x800000010069C5C0;
    v15._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v15);
    ((void (*)(uint64_t, unint64_t))v8)(0x2064656863746546, 0xE800000000000000);
    swift_bridgeObjectRelease();
    static Date.now.getter();
    Date.timeIntervalSinceReferenceDate.getter();
    double v17 = v16;
    v3(v5, v7);
    sub_100400F3C(v1, v80, v82, v84, v8, v6, v86);
    uint64_t v18 = *(void *)(v0 + 16);
    unint64_t v83 = *(void *)(v0 + 24);
    uint64_t v20 = *(void *)(v0 + 32);
    unint64_t v19 = *(void *)(v0 + 40);
    uint64_t v75 = *(void *)(v0 + 56);
    uint64_t v76 = *(void *)(v0 + 48);
    uint64_t v21 = *(void *)(v0 + 80);
    uint64_t v73 = *(void *)(v0 + 72);
    uint64_t v74 = *(void *)(v0 + 64);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 136) = v19;
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain_n();
      uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    }
    else
    {
      uint64_t v22 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain_n();
    }
    uint64_t v72 = v21;
    uint64_t v81 = v20;
    uint64_t v85 = v18;
    if (v22)
    {
      uint64_t v23 = 0;
      do
      {
        id v24 = (v19 & 0xC000000000000001) != 0
            ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
            : *(id *)(v19 + 8 * v23 + 32);
        uint64_t v25 = v24;
        uint64_t v26 = v23 + 1;
        if (__OFADD__(v23, 1)) {
          goto LABEL_36;
        }
        _s16MultiPinMapAssetCMa();
        uint64_t v27 = swift_dynamicCastClass();
        if (v27)
        {
          unint64_t v1 = v27;
          uint64_t v28 = v0 + 136;
          sub_100179324(v77);
          sub_100179324(v77);
          goto LABEL_17;
        }

        ++v23;
      }
      while (v26 != v22);
    }
    uint64_t v28 = v0 + 136;
    sub_100179324(v77);
    sub_100179324(v77);
    unint64_t v1 = 0;
LABEL_17:
    sub_10002C4EC((uint64_t)v86, v0 + 112, &qword_10080C740);
    sub_10002C4EC(v0 + 112, v0 + 88, &qword_10080C740);
    BOOL v36 = *(void *)(v0 + 104) != 1;
    if (v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v37 = _CocoaArrayWrapper.endIndex.getter();
      sub_100179324(v28);
    }
    else
    {
      uint64_t v37 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    BOOL v38 = v1 != 0;
    uint64_t v39 = v37 - v38;
    if (__OFSUB__(v37, v38))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (!v1 || !*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata))
    {
      uint64_t v42 = 0;
      uint64_t v43 = v36 + v39;
      if (!__OFADD__(v36, v39)) {
        break;
      }
      goto LABEL_35;
    }
    uint64_t v86 = (unint64_t *)(v37 - v38);
    swift_retain();
    id v78 = (id)v1;
    uint64_t v40 = sub_100039114();
    swift_release();
    if (v40 == 1 || (uint64_t v41 = swift_bridgeObjectRetain(), sub_10003F810(v41), !v40))
    {
      uint64_t v42 = 0;
    }
    else
    {
      uint64_t v42 = *(void *)(v40 + 16);
      swift_bridgeObjectRelease();
    }

    uint64_t v43 = v36 + v39;
    if (!__OFADD__(v36, v39)) {
      break;
    }
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  BOOL v44 = __OFADD__(v43, v42);
  uint64_t v45 = v43 + v42;
  if (!v44)
  {
    uint64_t v68 = v45;
    uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v0 + 272);
    uint64_t v69 = *(void *)(v0 + 256);
    uint64_t v70 = *(void *)(v0 + 240);
    uint64_t v79 = *(void (**)(void, unint64_t))(v0 + 224);
    _StringGuts.grow(_:)(35);
    *(void *)(v0 + 152) = v36;
    uint64_t v46 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v48 = v47;
    swift_bridgeObjectRelease();
    v49._countAndFlagsBits = 0x7463656C66657220;
    v49._object = (void *)0xED0000202C6E6F69;
    String.append(_:)(v49);
    *(void *)(v0 + 160) = v39;
    v50._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v50);
    swift_bridgeObjectRelease();
    v51._countAndFlagsBits = 0x202C746573736120;
    v51._object = (void *)0xE800000000000000;
    String.append(_:)(v51);
    *(void *)(v0 + 168) = v42;
    v52._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v52);
    swift_bridgeObjectRelease();
    v53._countAndFlagsBits = 0x6E69702070616D20;
    v53._object = (void *)0xE800000000000000;
    String.append(_:)(v53);
    _StringGuts.grow(_:)(104);
    v54._countAndFlagsBits = 0xD00000000000001DLL;
    v54._object = (void *)0x800000010069C950;
    String.append(_:)(v54);
    *(void *)(v0 + 176) = v68;
    v55._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v55);
    swift_bridgeObjectRelease();
    v56._countAndFlagsBits = 0xD000000000000013;
    v56._object = (void *)0x800000010069C970;
    String.append(_:)(v56);
    v57._countAndFlagsBits = v46;
    v57._object = v48;
    String.append(_:)(v57);
    swift_bridgeObjectRelease();
    v58._countAndFlagsBits = 0x20646E61205DLL;
    v58._object = (void *)0xE600000000000000;
    String.append(_:)(v58);
    *(void *)(v0 + 184) = *(void *)(*(void *)(v0 + 48) + 16);
    v59._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v59);
    swift_bridgeObjectRelease();
    v60._countAndFlagsBits = 0xD000000000000019;
    v60._object = (void *)0x800000010069C990;
    String.append(_:)(v60);
    uint64_t v61 = swift_allocObject();
    *(_OWORD *)(v61 + 16) = xmmword_1006D6280;
    static Date.now.getter();
    Date.timeIntervalSinceReferenceDate.getter();
    double v63 = v62;
    v71(v69, v70);
    *(void *)(v61 + 56) = &type metadata for Double;
    *(void *)(v61 + 64) = &protocol witness table for Double;
    *(double *)(v61 + 32) = v63 - v17;
    v64._countAndFlagsBits = String.init(format:_:)();
    String.append(_:)(v64);
    swift_bridgeObjectRelease();
    v65._object = (void *)0x800000010069C5C0;
    v65._countAndFlagsBits = 0xD000000000000011;
    String.append(_:)(v65);
    v79(0, 0xE000000000000000);
    swift_bridgeObjectRelease();

    unint64_t v1 = v83;
    uint64_t v29 = v85;
    uint64_t v30 = v81;
    uint64_t v32 = v75;
    uint64_t v31 = v76;
    uint64_t v34 = v73;
    uint64_t v33 = v74;
    unint64_t v87 = v19;
    uint64_t v35 = v72;
    goto LABEL_29;
  }
LABEL_40:
  __break(1u);
}

uint64_t sub_100408DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[13] = a4;
  v5[14] = a5;
  v5[11] = a2;
  v5[12] = a3;
  v5[10] = a1;
  return _swift_task_switch(sub_100408E18, 0, 0);
}

uint64_t sub_100408E18()
{
  uint64_t v5 = *(void *)(v1 + 88) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets;
  swift_beginAccess();
  unint64_t v6 = *(void *)v5;
  if (*(void *)v5 >> 62) {
    goto LABEL_114;
  }
  uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t v8 = 13 - v7;
    if (__OFSUB__(13, v7))
    {
      __break(1u);
    }
    else
    {
      uint64_t v110 = (uint64_t *)(v1 + 40);
      Swift::String v9 = *(uint64_t **)(v1 + 80);
      uint64_t v0 = *v9;
      *(void *)(v1 + 120) = *v9;
      uint64_t v4 = v9[1];
      *(void *)(v1 + 128) = v4;
      uint64_t v3 = (void *)v9[2];
      *(void *)(v1 + 136) = v3;
      unint64_t v10 = v9[3];
      *(void *)(v1 + 40) = v10;
      if (v3 == (void *)1)
      {
        if (v10 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v100 = _CocoaArrayWrapper.endIndex.getter();
          sub_100179324((uint64_t)v110);
          uint64_t v8 = 13 - v7;
          if (!v100) {
            goto LABEL_95;
          }
        }
        else if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          goto LABEL_95;
        }
        uint64_t v107 = v8;
        unint64_t v6 = (unint64_t)_swiftEmptyArrayStorage;
      }
      else
      {
        uint64_t v107 = 13 - v7;
        uint64_t v11 = *(void *)(v1 + 88);
        uint64_t v12 = swift_allocObject();
        *(void *)(v12 + 16) = v11;
        *(void *)(v12 + 24) = v0;
        *(unsigned char *)(v12 + 32) = v4 & 1;
        *(void *)(v12 + 40) = v3;
        id v13 = v3;
        sub_10040A644(v0, v4, v3);
        sub_10040A644(v0, v4, v3);
        swift_retain();
        Swift::String v14 = (void *)sub_100339674();
        if (v14)
        {
          uint64_t v15 = *(void *)(v1 + 96);
          sub_10033AA5C(v14);

          if ((v15 & 1) == 0)
          {
            swift_bridgeObjectRelease();
            sub_10027149C(v0, v4, v3);
            swift_release();
            sub_10027149C(v0, v4, v3);
            uint64_t v17 = 0;
            unint64_t v18 = 0;
            uint64_t v19 = 2;
            goto LABEL_96;
          }
        }
        unint64_t v2 = v0;
        uint64_t v0 = swift_allocObject();
        *(void *)(v0 + 16) = &unk_10080C728;
        *(void *)(v0 + 24) = v12;
        swift_retain();
        unint64_t v6 = (unint64_t)_swiftEmptyArrayStorage;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_124:
        }
          unint64_t v6 = (unint64_t)sub_1002A6E9C(0, *(void *)(v6 + 16) + 1, 1, (char *)v6);
        unint64_t v21 = *(void *)(v6 + 16);
        unint64_t v20 = *(void *)(v6 + 24);
        if (v21 >= v20 >> 1) {
          unint64_t v6 = (unint64_t)sub_1002A6E9C((char *)(v20 > 1), v21 + 1, 1, (char *)v6);
        }
        *(void *)(v6 + 16) = v21 + 1;
        unint64_t v22 = v6 + 16 * v21;
        *(void *)(v22 + 32) = &unk_10080C730;
        *(void *)(v22 + 40) = v0;
        uint64_t v0 = v2;
        sub_10027149C(v2, v4, v3);
        swift_release();
      }
      uint64_t v23 = *(void *)(v1 + 88);
      *(void *)(v1 + 48) = v6;
      unint64_t v6 = *(void *)(v23 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsWithSlimAsset);
      if (!(v6 >> 62))
      {
        uint64_t v24 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain_n();
        goto LABEL_17;
      }
    }
    swift_bridgeObjectRetain_n();
    uint64_t v24 = _CocoaArrayWrapper.endIndex.getter();
LABEL_17:
    uint64_t v104 = (uint64_t *)v5;
    uint64_t v106 = v0;
    if (!v24) {
      break;
    }
    uint64_t v0 = 0;
    unint64_t v2 = v6 & 0xC000000000000001;
    while (1)
    {
      id v25 = v2 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v6 + 8 * v0 + 32);
      uint64_t v26 = v25;
      uint64_t v27 = v0 + 1;
      if (__OFADD__(v0, 1)) {
        break;
      }
      _s16MultiPinMapAssetCMa();
      uint64_t v28 = swift_dynamicCastClass();
      uint64_t v5 = v28 == 0;
      if (v28) {
        goto LABEL_27;
      }

      ++v0;
      if (v27 == v24)
      {
        uint64_t v26 = 0;
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_114:
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  uint64_t v26 = 0;
  uint64_t v5 = 1;
LABEL_27:
  uint64_t v109 = v4;
  uint64_t v114 = v1;

  swift_bridgeObjectRelease_n();
  uint64_t v1 = *v110;
  unint64_t v29 = (unint64_t)*v110 >> 62;
  if (v29)
  {
    if (v1 < 0) {
      unint64_t v6 = *v110;
    }
    else {
      unint64_t v6 = *v110 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v4 = *(void *)((*v110 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  unint64_t v108 = v3;
  uint64_t v111 = v1;
  unint64_t v105 = v29;
  if (!v4)
  {
    uint64_t v31 = _swiftEmptyArrayStorage;
    id v115 = _swiftEmptyArrayStorage;
    goto LABEL_50;
  }
  if (v4 < 1)
  {
    __break(1u);
    goto LABEL_124;
  }
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v30 = 0;
    uint64_t v31 = _swiftEmptyArrayStorage;
    id v115 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v33 = *(void *)(v114 + 88);
      uint64_t v34 = specialized _ArrayBuffer._getElementSlowPath(_:)();
      uint64_t v35 = swift_allocObject();
      *(void *)(v35 + 16) = v34;
      *(void *)(v35 + 24) = v33;
      _s16MultiPinMapAssetCMa();
      if (swift_dynamicCastClass()) {
        char v36 = v5;
      }
      else {
        char v36 = 1;
      }
      if (v36)
      {
        uint64_t v37 = swift_allocObject();
        *(void *)(v37 + 16) = &unk_10080C6D0;
        *(void *)(v37 + 24) = v35;
        swift_unknownObjectRetain_n();
        swift_retain();
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v31 = sub_1002A6EB0(0, *((void *)v31 + 2) + 1, 1, v31);
        }
        unint64_t v39 = *((void *)v31 + 2);
        unint64_t v38 = *((void *)v31 + 3);
        if (v39 >= v38 >> 1) {
          uint64_t v31 = sub_1002A6EB0((double *)(v38 > 1), v39 + 1, 1, v31);
        }
        *((void *)v31 + 2) = v39 + 1;
        uint64_t v40 = &v31[3 * v39];
        *((void *)v40 + 4) = v34;
        *((void *)v40 + 5) = &unk_10080C6E0;
        *((void *)v40 + 6) = v37;
      }
      else
      {
        uint64_t v41 = swift_allocObject();
        *(void *)(v41 + 16) = &unk_10080C6D0;
        *(void *)(v41 + 24) = v35;
        swift_retain();
        swift_unknownObjectRetain();
        swift_retain();
        if (swift_isUniquelyReferenced_nonNull_native()) {
          uint64_t v42 = (char *)v115;
        }
        else {
          uint64_t v42 = sub_1002A6E9C(0, *((void *)v115 + 2) + 1, 1, (char *)v115);
        }
        unint64_t v44 = *((void *)v42 + 2);
        unint64_t v43 = *((void *)v42 + 3);
        if (v44 >= v43 >> 1) {
          uint64_t v42 = sub_1002A6E9C((char *)(v43 > 1), v44 + 1, 1, v42);
        }
        *((void *)v42 + 2) = v44 + 1;
        id v115 = (double *)v42;
        uint64_t v32 = &v42[16 * v44];
        *((void *)v32 + 4) = &unk_10080C700;
        *((void *)v32 + 5) = v41;
      }
      ++v30;
      swift_unknownObjectRelease();
      swift_release();
    }
    while (v4 != v30);
  }
  else
  {
    Swift::String v50 = (void **)(v1 + 32);
    uint64_t v31 = _swiftEmptyArrayStorage;
    id v115 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v52 = *(void *)(v114 + 88);
      Swift::String v53 = *v50;
      uint64_t v54 = swift_allocObject();
      *(void *)(v54 + 16) = v53;
      *(void *)(v54 + 24) = v52;
      _s16MultiPinMapAssetCMa();
      if (swift_dynamicCastClass()) {
        char v55 = v5;
      }
      else {
        char v55 = 1;
      }
      if (v55)
      {
        uint64_t v56 = swift_allocObject();
        *(void *)(v56 + 16) = &unk_10080C708;
        *(void *)(v56 + 24) = v54;
        id v57 = v53;
        swift_retain();
        id v58 = v57;
        swift_retain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v31 = sub_1002A6EB0(0, *((void *)v31 + 2) + 1, 1, v31);
        }
        unint64_t v60 = *((void *)v31 + 2);
        unint64_t v59 = *((void *)v31 + 3);
        if (v60 >= v59 >> 1) {
          uint64_t v31 = sub_1002A6EB0((double *)(v59 > 1), v60 + 1, 1, v31);
        }
        *((void *)v31 + 2) = v60 + 1;
        uint64_t v61 = &v31[3 * v60];
        *((void *)v61 + 4) = v58;
        *((void *)v61 + 5) = &unk_10080C710;
        *((void *)v61 + 6) = v56;
      }
      else
      {
        uint64_t v62 = swift_allocObject();
        *(void *)(v62 + 16) = &unk_10080C708;
        *(void *)(v62 + 24) = v54;
        id v63 = v53;
        swift_retain();
        id v64 = v63;
        swift_retain();
        if (swift_isUniquelyReferenced_nonNull_native()) {
          Swift::String v65 = (char *)v115;
        }
        else {
          Swift::String v65 = sub_1002A6E9C(0, *((void *)v115 + 2) + 1, 1, (char *)v115);
        }
        unint64_t v67 = *((void *)v65 + 2);
        unint64_t v66 = *((void *)v65 + 3);
        if (v67 >= v66 >> 1) {
          Swift::String v65 = sub_1002A6E9C((char *)(v66 > 1), v67 + 1, 1, v65);
        }
        *((void *)v65 + 2) = v67 + 1;
        id v115 = (double *)v65;
        Swift::String v51 = &v65[16 * v67];
        *((void *)v51 + 4) = &unk_10080C718;
        *((void *)v51 + 5) = v62;
      }

      swift_release();
      ++v50;
      --v4;
    }
    while (v4);
  }
LABEL_50:
  uint64_t v1 = v114;
  sub_100179324((uint64_t)v110);
  unint64_t v45 = v107;
  if (!v107)
  {
    unint64_t v48 = *((void *)v31 + 2);
    uint64_t v46 = v108;
    uint64_t v49 = v109;
    if (v48 >= 2)
    {
      sub_10027149C(v106, v109, v108);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v18 = 0;
      uint64_t v19 = 2;
      uint64_t v17 = 1;
      goto LABEL_96;
    }
    if (v48 != 1) {
      goto LABEL_82;
    }
    uint64_t v68 = (unsigned __int8 *)*((void *)v31 + 4);
    if ((unint64_t)*v104 >> 62)
    {
      uint64_t v101 = v68;
      swift_bridgeObjectRetain();
      uint64_t v102 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      unint64_t v71 = v102 - 1;
      if (!__OFSUB__(v102, 1))
      {
LABEL_77:
        uint64_t v72 = *v104;
        if ((*v104 & 0xC000000000000001) == 0)
        {
          if ((v71 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v71 < *(void *)((v72 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            if ((*(unsigned char *)(v114 + 96) & 2) == 0)
            {
LABEL_81:
              sub_10027149C(v106, v49, v108);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v17 = v68[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type];

              swift_bridgeObjectRelease();
              unint64_t v18 = 0;
              uint64_t v19 = 0;
              goto LABEL_96;
            }
            unint64_t v71 = (unint64_t)*(id *)(v72 + 8 * v71 + 32);
LABEL_111:
            uint64_t v96 = *(void *)(v1 + 88);
            sub_100010218(&qword_1007FD150);
            uint64_t v73 = (double *)swift_allocObject();
            *((_OWORD *)v73 + 1) = xmmword_1006D6280;
            uint64_t v97 = (void *)swift_allocObject();
            v97[2] = v68;
            v97[3] = v96;
            v97[4] = v71;
            uint64_t v98 = swift_allocObject();
            *(void *)(v98 + 16) = &unk_10080C6F0;
            *(void *)(v98 + 24) = v97;
            *((void *)v73 + 4) = v68;
            *((void *)v73 + 5) = &unk_10080C6F8;
            *((void *)v73 + 6) = v98;
            swift_retain();
            uint64_t v99 = v68;
LABEL_112:
            swift_bridgeObjectRelease();
            goto LABEL_83;
          }
          __break(1u);
LABEL_136:
          uint64_t v1 = v114;
          goto LABEL_111;
        }
LABEL_128:
        uint64_t v103 = *(void *)(v114 + 96);
        swift_bridgeObjectRetain();
        unint64_t v71 = specialized _ArrayBuffer._getElementSlowPath(_:)();
        swift_bridgeObjectRelease();
        if ((v103 & 2) == 0)
        {
          swift_unknownObjectRelease();
          uint64_t v1 = v114;
          uint64_t v49 = v109;
          goto LABEL_81;
        }
        goto LABEL_136;
      }
    }
    else
    {
      uint64_t v69 = *(void *)((*v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v70 = v68;
      unint64_t v71 = v69 - 1;
      if (!__OFSUB__(v69, 1)) {
        goto LABEL_77;
      }
    }
    __break(1u);
    goto LABEL_128;
  }
  uint64_t v46 = v108;
  if (v107 < 1 || (unint64_t v47 = *((void *)v31 + 2), v107 >= v47))
  {
LABEL_82:
    uint64_t v73 = v31;
    goto LABEL_83;
  }
  if (v105)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    sub_100179324((uint64_t)v110);
    unint64_t v45 = v107;
    unint64_t v47 = *((void *)v31 + 2);
  }
  else
  {
    uint64_t v17 = *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v18 = v47 - v45;
  if ((*(unsigned char *)(v114 + 96) & 4) == 0)
  {
    sub_10027149C(v106, v109, v108);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = 1;
    goto LABEL_96;
  }
  BOOL v92 = __OFSUB__(v47, v18);
  unint64_t v93 = v45;
  if (v92)
  {
    __break(1u);
    goto LABEL_131;
  }
  if ((v45 & 0x8000000000000000) != 0)
  {
LABEL_131:
    __break(1u);
    goto LABEL_132;
  }
  if (v47 < v45)
  {
LABEL_132:
    __break(1u);
LABEL_133:
    swift_bridgeObjectRelease();
    uint64_t v73 = sub_1000CD79C((uint64_t)v31, (uint64_t)(v31 + 4), 0, (2 * v93) | 1);
    goto LABEL_112;
  }
  type metadata accessor for __ContiguousArrayStorageBase();
  swift_unknownObjectRetain_n();
  uint64_t v94 = (double *)swift_dynamicCastClass();
  if (!v94)
  {
    swift_bridgeObjectRelease();
    uint64_t v94 = _swiftEmptyArrayStorage;
  }
  uint64_t v95 = *((void *)v94 + 2);
  swift_release();
  if (v95 != v93) {
    goto LABEL_133;
  }
  uint64_t v73 = (double *)swift_dynamicCastClass();
  swift_bridgeObjectRelease();
  if (!v73)
  {
    uint64_t v73 = _swiftEmptyArrayStorage;
    goto LABEL_112;
  }
LABEL_83:
  *(void *)(v114 + 144) = v73;
  uint64_t v112 = *(void (**)(void, unint64_t))(v114 + 104);
  _StringGuts.grow(_:)(75);
  v74._countAndFlagsBits = 0xD000000000000024;
  v74._object = (void *)0x800000010069C890;
  String.append(_:)(v74);
  *(void *)(v114 + 56) = v46 != (void *)1;
  v75._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v75);
  uint64_t v1 = v114;
  swift_bridgeObjectRelease();
  v76._countAndFlagsBits = 0xD000000000000011;
  v76._object = (void *)0x800000010069C8C0;
  String.append(_:)(v76);
  *(double *)(v114 + 64) = v115[2];
  v77._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v77);
  swift_bridgeObjectRelease();
  v78._object = (void *)0x800000010069C8E0;
  v78._countAndFlagsBits = 0xD000000000000010;
  String.append(_:)(v78);
  *(double *)(v114 + 72) = v73[2];
  v79._countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v79);
  swift_bridgeObjectRelease();
  v112(0, 0xE000000000000000);
  swift_bridgeObjectRelease();
  uint64_t v80 = swift_bridgeObjectRetain();
  sub_1000C8F68(v80);
  int64_t v81 = *((void *)v73 + 2);
  if (v81)
  {
    swift_bridgeObjectRetain();
    sub_100095F78(0, v81, 0);
    double v82 = _swiftEmptyArrayStorage[2];
    uint64_t v83 = 5;
    uint64_t v84 = v109;
    do
    {
      double v85 = _swiftEmptyArrayStorage[3];
      long long v113 = *(_OWORD *)&v73[v83];
      swift_retain();
      if (*(void *)&v82 >= *(void *)&v85 >> 1) {
        sub_100095F78(*(void *)&v85 > 1uLL, *(void *)&v82 + 1, 1);
      }
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v82 + 1;
      *(_OWORD *)&_swiftEmptyArrayStorage[2 * *(void *)&v82 + 4] = v113;
      v83 += 3;
      ++*(void *)&v82;
      --v81;
    }
    while (v81);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v84 = v109;
  }
  sub_1000C8F68((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v86 = *(void **)(v114 + 48);
  *(void *)(v114 + 152) = v86;
  uint64_t v87 = v86[2];
  *(void *)(v114 + 160) = v87;
  if (v87)
  {
    *(void *)(v114 + 168) = 0;
    uint64_t v88 = (int *)v86[4];
    *(void *)(v114 + 176) = v86[5];
    uint64_t v116 = (uint64_t (*)(void))((char *)v88 + *v88);
    swift_retain();
    uint64_t v89 = (void *)swift_task_alloc();
    *(void *)(v114 + 184) = v89;
    void *v89 = v114;
    v89[1] = sub_100409DB8;
    return v116();
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_10027149C(v106, v84, v108);
    swift_bridgeObjectRelease();
LABEL_95:
    uint64_t v17 = 0;
    unint64_t v18 = 0;
    uint64_t v19 = 255;
LABEL_96:
    unint64_t v91 = *(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v1 + 8);
    return v91(v17, v18, v19);
  }
}

uint64_t sub_100409DB8()
{
  swift_task_dealloc();
  swift_release();
  return _swift_task_switch(sub_100409ED0, 0, 0);
}

uint64_t sub_100409ED0()
{
  uint64_t v1 = v0[21] + 1;
  if (v1 == v0[20])
  {
    swift_bridgeObjectRelease();
    uint64_t v8 = (uint64_t (*)(void))((char *)&dword_10080CA48 + dword_10080CA48);
    unint64_t v2 = (void *)swift_task_alloc();
    v0[24] = v2;
    *unint64_t v2 = v0;
    v2[1] = sub_10040A04C;
    uint64_t v3 = v8;
  }
  else
  {
    v0[21] = v1;
    uint64_t v4 = v0[19] + 16 * v1;
    uint64_t v5 = *(int **)(v4 + 32);
    v0[22] = *(void *)(v4 + 40);
    Swift::String v9 = (uint64_t (*)(void))((char *)v5 + *v5);
    swift_retain();
    unint64_t v6 = (void *)swift_task_alloc();
    v0[23] = v6;
    *unint64_t v6 = v0;
    v6[1] = sub_100409DB8;
    uint64_t v3 = v9;
  }
  return v3();
}

uint64_t sub_10040A04C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10040A148, 0, 0);
}

uint64_t sub_10040A148()
{
  sub_10027149C(*(void *)(v0 + 120), *(void *)(v0 + 128), *(void **)(v0 + 136));
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void, void, uint64_t))(v0 + 8);
  return v1(0, 0, 255);
}

uint64_t sub_10040A1C0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = v2[7];
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *uint64_t v12 = v3;
  v12[1] = sub_100052588;
  return sub_1003F9E0C(a1, a2, v6, v7, v8, v9, v10, v11);
}

uint64_t type metadata accessor for PendingPhotoAsset(uint64_t a1)
{
  return sub_10003352C(a1, qword_10080C858);
}

uint64_t sub_10040A2E0()
{
  uint64_t v1 = (int *)(type metadata accessor for PendingPhotoAsset(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (((*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  uint64_t v4 = v0 + v2;

  unint64_t v5 = v0 + v2 + v1[7];
  uint64_t v6 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  uint64_t v7 = v4 + v1[8];
  uint64_t v8 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  swift_release();

  uint64_t v9 = *(void **)(v0 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 16);
  if (v9 != (void *)1) {

  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10040A484(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for PendingPhotoAsset(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = v1[2];
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[4];
  uint64_t v11 = *(void *)((char *)v1 + v6);
  uint64_t v12 = (uint64_t)v1 + v5;
  uint64_t v13 = *(void *)((char *)v1 + v7);
  uint64_t v14 = (uint64_t)v1 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  void *v15 = v2;
  v15[1] = sub_10002C194;
  return sub_1003FA870(a1, v8, v9, v10, v12, v11, v13, v14);
}

uint64_t sub_10040A5D8(uint64_t a1)
{
  return a1;
}

id sub_10040A644(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3 != (void *)1) {
    return a3;
  }
  return result;
}

uint64_t sub_10040A654(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_10040A66C(result, a2 & 1);
  }
  return result;
}

uint64_t sub_10040A66C(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRelease();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_10040A678(uint64_t a1, char a2)
{
  if (a2) {
    return swift_errorRetain();
  }
  else {
    return swift_retain();
  }
}

uint64_t sub_10040A684(uint64_t result, unsigned __int8 a2)
{
  if (a2 != 255) {
    return sub_10040A678(result, a2 & 1);
  }
  return result;
}

void sub_10040A69C(uint64_t a1)
{
  sub_1003F81F0(a1, *(double **)(v1 + 16), *(void *)(v1 + 24), *(uint64_t **)(v1 + 32), *(void **)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_10040A6AC()
{
  uint64_t v1 = (int *)(type metadata accessor for PendingPhotoAsset(0) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80);
  unint64_t v3 = (*(void *)(*(void *)v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = sub_100010218(&qword_10080C6B8);
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + ((((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v0 + v2;

  unint64_t v8 = v0 + v2 + v1[7];
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
  uint64_t v10 = v7 + v1[8];
  uint64_t v11 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10, v11);

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v4);

  return swift_deallocObject();
}

uint64_t sub_10040A8B4(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PendingPhotoAsset(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v6 = (v5 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(sub_100010218(&qword_10080C6B8) - 8);
  unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + v7 + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  return sub_1003F88AC(a1, *(uint64_t **)(v1 + 16), *(double **)(v1 + 24), (id *)(v1 + v4), *(void **)(v1 + v5), *(void *)(v1 + v6), *(void *)(v1 + v7), v1 + v9, *(uint64_t **)(v1 + ((*(void *)(v8 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8)));
}

uint64_t sub_10040A9EC()
{
  return swift_deallocObject();
}

uint64_t sub_10040A9FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10040AA64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for VisitDuration(uint64_t a1)
{
  return sub_10003352C(a1, qword_10080C7C8);
}

uint64_t sub_10040AAE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10040AB4C(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, char a5, uint64_t a6, uint64_t a7, double a8)
{
  type metadata accessor for PhotoFetchError();
  uint64_t result = swift_allocObject();
  *(void *)(result + 56) = a6;
  *(void *)(result + 64) = a7;
  *(unsigned char *)(result + 72) = a5;
  *(double *)(result + 16) = a8;
  uint64_t v17 = 0x3030302E30;
  if (a2) {
    uint64_t v18 = a1;
  }
  else {
    uint64_t v18 = 0x3030302E30;
  }
  if (a2) {
    unint64_t v19 = a2;
  }
  else {
    unint64_t v19 = 0xE500000000000000;
  }
  *(void *)(result + 24) = v18;
  *(void *)(result + 32) = v19;
  if (a4)
  {
    uint64_t v17 = a3;
    unint64_t v20 = a4;
  }
  else
  {
    unint64_t v20 = 0xE500000000000000;
  }
  *(void *)(result + 40) = v17;
  *(void *)(result + 48) = v20;
  return result;
}

uint64_t sub_10040ABFC()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  unint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *unint64_t v4 = v1;
  v4[1] = sub_100052588;
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1008058A0 + dword_1008058A0);
  uint64_t v5 = (void *)swift_task_alloc();
  v4[2] = v5;
  void *v5 = v4;
  v5[1] = sub_10002C194;
  return v7(v2, v3, 0);
}

uint64_t sub_10040ACF8(uint64_t a1)
{
  unint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  void *v5 = v2;
  v5[1] = sub_100052588;
  unint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10080C6D8 + dword_10080C6D8);
  return v6(a1, v4);
}

uint64_t sub_10040ADB0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10040ADF8()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v5;
  void *v5 = v1;
  v5[1] = sub_100052588;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1008058A0 + dword_1008058A0);
  unint64_t v6 = (void *)swift_task_alloc();
  void v5[2] = v6;
  *unint64_t v6 = v5;
  v6[1] = sub_100052588;
  return v8(v2, v3, v4);
}

uint64_t sub_10040AF00()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10002C194;
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1008058A0 + dword_1008058A0);
  uint64_t v5 = (void *)swift_task_alloc();
  v4[2] = v5;
  void *v5 = v4;
  v5[1] = sub_10002C194;
  return v7(v2, v3, 0);
}

uint64_t sub_10040AFFC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10040B034()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10040B074()
{
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *unint64_t v6 = v1;
  v6[1] = sub_100052588;
  return sub_1003F5FC8(v2, v3, v4, v5);
}

void sub_10040B12C(id a1)
{
  if (a1 != (id)4) {
    sub_10001DFA8(a1);
  }
}

uint64_t sub_10040B13C()
{
  uint64_t v1 = type metadata accessor for Date();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_10040B1CC()
{
  type metadata accessor for Date();

  return static Date.== infix(_:_:)();
}

uint64_t sub_10040B23C()
{
  uint64_t v1 = (int *)(sub_100010218(&qword_100807940) - 8);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*(void *)v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v1 + 80));
  uint64_t v3 = type metadata accessor for Date();
  char v4 = *(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
  v4(v2, v3);
  v4(v2 + v1[11], v3);

  return swift_deallocObject();
}

uint64_t sub_10040B348(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100010218(&qword_100807940) - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_1003F5384(a1, v4);
}

ValueMetadata *type metadata accessor for SuggestionMergeResolution()
{
  return &type metadata for SuggestionMergeResolution;
}

void *sub_10040B3CC(void *a1, char *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *(void *)a2;
    *uint64_t v4 = *(void *)a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v6 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v6;
    uint64_t v7 = *((void *)a2 + 3);
    a1[2] = *((void *)a2 + 2);
    a1[3] = v7;
    uint64_t v8 = *((void *)a2 + 5);
    a1[4] = *((void *)a2 + 4);
    a1[5] = v8;
    uint64_t v9 = _s10VisitAssetC9VisitDataVMa(0);
    uint64_t v10 = *(int *)(v9 + 28);
    uint64_t v54 = (int *)v9;
    __dst = (char *)v4 + v10;
    uint64_t v11 = &a2[v10];
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v17 = v13;
    uint64_t v18 = v54[8];
    unint64_t v19 = (char *)v4 + v18;
    unint64_t v20 = &a2[v18];
    if (v14(&a2[v18], 1, v12))
    {
      uint64_t v21 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v19, v20, *(void *)(*(void *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v19, v20, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v19, 0, 1, v12);
    }
    uint64_t v22 = v54[9];
    uint64_t v23 = (char *)v4 + v22;
    uint64_t v24 = &a2[v22];
    if (v14(&a2[v22], 1, v12))
    {
      uint64_t v25 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v23, v24, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v23, 0, 1, v12);
    }
    uint64_t v26 = v54[10];
    uint64_t v27 = (char *)v4 + v26;
    uint64_t v28 = &a2[v26];
    *(void *)uint64_t v27 = *(void *)v28;
    v27[8] = v28[8];
    uint64_t v29 = v54[11];
    uint64_t v30 = (char *)v4 + v29;
    uint64_t v31 = &a2[v29];
    *(void *)uint64_t v30 = *(void *)v31;
    v30[8] = v31[8];
    uint64_t v32 = v54[12];
    uint64_t v33 = (char *)v4 + v32;
    uint64_t v34 = &a2[v32];
    unint64_t v35 = *((void *)v34 + 1);
    if (v35 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v33 = *(_OWORD *)v34;
    }
    else
    {
      uint64_t v36 = *(void *)v34;
      sub_100040D64(*(void *)v34, *((void *)v34 + 1));
      *(void *)uint64_t v33 = v36;
      *((void *)v33 + 1) = v35;
    }
    uint64_t v37 = v54[13];
    unint64_t v38 = (char *)v4 + v37;
    unint64_t v39 = &a2[v37];
    unint64_t v40 = *((void *)v39 + 1);
    if (v40 >> 60 == 15)
    {
      *(_OWORD *)unint64_t v38 = *(_OWORD *)v39;
    }
    else
    {
      uint64_t v41 = *(void *)v39;
      sub_100040D64(*(void *)v39, *((void *)v39 + 1));
      *(void *)unint64_t v38 = v41;
      *((void *)v38 + 1) = v40;
    }
    *((unsigned char *)v4 + v54[14]) = a2[v54[14]];
    uint64_t v42 = v54[15];
    unint64_t v43 = (char *)v4 + v42;
    unint64_t v44 = &a2[v42];
    *(void *)unint64_t v43 = *(void *)v44;
    v43[8] = v44[8];
    uint64_t v45 = v54[16];
    uint64_t v46 = (char *)v4 + v45;
    unint64_t v47 = &a2[v45];
    *(void *)uint64_t v46 = *(void *)v47;
    v46[8] = v47[8];
    uint64_t v48 = *(int *)(a3 + 20);
    uint64_t v49 = (void *)((char *)v4 + v48);
    Swift::String v50 = &a2[v48];
    uint64_t v51 = *((void *)v50 + 1);
    void *v49 = *(void *)v50;
    v49[1] = v51;
  }
  swift_retain();
  return v4;
}

uint64_t sub_10040B7D4(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v3 = a1 + v2[7];
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  uint64_t v7 = a1 + v2[8];
  if (!v6(v7, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v8 = a1 + v2[9];
  if (!v6(v8, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  }
  uint64_t v9 = (uint64_t *)(a1 + v2[12]);
  unint64_t v10 = v9[1];
  if (v10 >> 60 != 15) {
    sub_100040DD0(*v9, v10);
  }
  uint64_t v11 = (uint64_t *)(a1 + v2[13]);
  unint64_t v12 = v11[1];
  if (v12 >> 60 != 15) {
    sub_100040DD0(*v11, v12);
  }

  return swift_release();
}

void *sub_10040B98C(void *a1, char *a2, uint64_t a3)
{
  uint64_t v5 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v5;
  uint64_t v6 = *((void *)a2 + 3);
  a1[2] = *((void *)a2 + 2);
  a1[3] = v6;
  uint64_t v7 = *((void *)a2 + 5);
  a1[4] = *((void *)a2 + 4);
  a1[5] = v7;
  uint64_t v8 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v9 = *(int *)(v8 + 28);
  uint64_t v52 = (int *)v8;
  __dst = (char *)a1 + v9;
  unint64_t v10 = &a2[v9];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  uint64_t v15 = v12;
  uint64_t v16 = v52[8];
  uint64_t v17 = (char *)a1 + v16;
  uint64_t v18 = &a2[v16];
  if (v13(&a2[v16], 1, v11))
  {
    uint64_t v19 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v17, v18, *(void *)(*(void *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v17, v18, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v17, 0, 1, v11);
  }
  uint64_t v20 = v52[9];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = &a2[v20];
  if (v13(&a2[v20], 1, v11))
  {
    uint64_t v23 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v21, v22, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v11);
  }
  uint64_t v24 = v52[10];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = &a2[v24];
  *(void *)uint64_t v25 = *(void *)v26;
  v25[8] = v26[8];
  uint64_t v27 = v52[11];
  uint64_t v28 = (char *)a1 + v27;
  uint64_t v29 = &a2[v27];
  *(void *)uint64_t v28 = *(void *)v29;
  v28[8] = v29[8];
  uint64_t v30 = v52[12];
  uint64_t v31 = (char *)a1 + v30;
  uint64_t v32 = &a2[v30];
  unint64_t v33 = *((void *)v32 + 1);
  if (v33 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
  }
  else
  {
    uint64_t v34 = *(void *)v32;
    sub_100040D64(*(void *)v32, *((void *)v32 + 1));
    *(void *)uint64_t v31 = v34;
    *((void *)v31 + 1) = v33;
  }
  uint64_t v35 = v52[13];
  uint64_t v36 = (char *)a1 + v35;
  uint64_t v37 = &a2[v35];
  unint64_t v38 = *((void *)v37 + 1);
  if (v38 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
  }
  else
  {
    uint64_t v39 = *(void *)v37;
    sub_100040D64(*(void *)v37, *((void *)v37 + 1));
    *(void *)uint64_t v36 = v39;
    *((void *)v36 + 1) = v38;
  }
  *((unsigned char *)a1 + v52[14]) = a2[v52[14]];
  uint64_t v40 = v52[15];
  uint64_t v41 = (char *)a1 + v40;
  uint64_t v42 = &a2[v40];
  *(void *)uint64_t v41 = *(void *)v42;
  v41[8] = v42[8];
  uint64_t v43 = v52[16];
  unint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = &a2[v43];
  *(void *)unint64_t v44 = *(void *)v45;
  v44[8] = v45[8];
  uint64_t v46 = *(int *)(a3 + 20);
  unint64_t v47 = (void *)((char *)a1 + v46);
  uint64_t v48 = &a2[v46];
  uint64_t v49 = *((void *)v48 + 1);
  *unint64_t v47 = *(void *)v48;
  v47[1] = v49;
  swift_retain();
  return a1;
}

char *sub_10040BD48(char *a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v6 = v5[7];
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = v5[8];
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v19)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
LABEL_12:
    uint64_t v20 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
LABEL_13:
  uint64_t v21 = v5[9];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = (char *)a2 + v21;
  int v24 = v11(&a1[v21], 1, v9);
  int v25 = v11(v23, 1, v9);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v22, v23, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v22, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v25)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v22, v9);
LABEL_18:
    uint64_t v26 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v22, v23, *(void *)(*(void *)(v26 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v22, v23, v9);
LABEL_19:
  uint64_t v27 = v5[10];
  uint64_t v28 = &a1[v27];
  uint64_t v29 = (char *)a2 + v27;
  uint64_t v30 = *(void *)v29;
  v28[8] = v29[8];
  *(void *)uint64_t v28 = v30;
  uint64_t v31 = v5[11];
  uint64_t v32 = &a1[v31];
  unint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = *(void *)v33;
  v32[8] = v33[8];
  *(void *)uint64_t v32 = v34;
  uint64_t v35 = v5[12];
  uint64_t v36 = (uint64_t *)&a1[v35];
  uint64_t v37 = (void *)((char *)a2 + v35);
  unint64_t v38 = *(void *)((char *)a2 + v35 + 8);
  if (*(void *)&a1[v35 + 8] >> 60 == 15)
  {
    if (v38 >> 60 != 15)
    {
      uint64_t v39 = *v37;
      sub_100040D64(*v37, v38);
      *uint64_t v36 = v39;
      v36[1] = v38;
      goto LABEL_26;
    }
    goto LABEL_24;
  }
  if (v38 >> 60 == 15)
  {
    sub_1001F2560((uint64_t)v36);
LABEL_24:
    *(_OWORD *)uint64_t v36 = *(_OWORD *)v37;
    goto LABEL_26;
  }
  uint64_t v40 = *v37;
  sub_100040D64(*v37, v38);
  uint64_t v41 = *v36;
  unint64_t v42 = v36[1];
  *uint64_t v36 = v40;
  v36[1] = v38;
  sub_100040DD0(v41, v42);
LABEL_26:
  uint64_t v43 = v5[13];
  unint64_t v44 = (uint64_t *)&a1[v43];
  uint64_t v45 = (void *)((char *)a2 + v43);
  unint64_t v46 = *(void *)((char *)a2 + v43 + 8);
  if (*(void *)&a1[v43 + 8] >> 60 != 15)
  {
    if (v46 >> 60 != 15)
    {
      uint64_t v48 = *v45;
      sub_100040D64(*v45, v46);
      uint64_t v49 = *v44;
      unint64_t v50 = v44[1];
      *unint64_t v44 = v48;
      v44[1] = v46;
      sub_100040DD0(v49, v50);
      goto LABEL_33;
    }
    sub_1001F2560((uint64_t)v44);
    goto LABEL_31;
  }
  if (v46 >> 60 == 15)
  {
LABEL_31:
    *(_OWORD *)unint64_t v44 = *(_OWORD *)v45;
    goto LABEL_33;
  }
  uint64_t v47 = *v45;
  sub_100040D64(*v45, v46);
  *unint64_t v44 = v47;
  v44[1] = v46;
LABEL_33:
  a1[v5[14]] = *((unsigned char *)a2 + v5[14]);
  uint64_t v51 = v5[15];
  uint64_t v52 = &a1[v51];
  Swift::String v53 = (char *)a2 + v51;
  uint64_t v54 = *(void *)v53;
  v52[8] = v53[8];
  *(void *)uint64_t v52 = v54;
  uint64_t v55 = v5[16];
  uint64_t v56 = &a1[v55];
  id v57 = (char *)a2 + v55;
  uint64_t v58 = *(void *)v57;
  v56[8] = v57[8];
  *(void *)uint64_t v56 = v58;
  uint64_t v59 = *(int *)(a3 + 20);
  unint64_t v60 = &a1[v59];
  uint64_t v61 = (void *)((char *)a2 + v59);
  uint64_t v62 = v61[1];
  *(void *)unint64_t v60 = *v61;
  *((void *)v60 + 1) = v62;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_10040C2D8(_OWORD *a1, char *a2, uint64_t a3)
{
  long long v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  a1[2] = *((_OWORD *)a2 + 2);
  uint64_t v7 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v8 = v7[7];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = &a2[v8];
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = v7[8];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = &a2[v15];
  if (v13(&a2[v15], 1, v11))
  {
    uint64_t v18 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v17, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  uint64_t v19 = v7[9];
  uint64_t v20 = (char *)a1 + v19;
  uint64_t v21 = &a2[v19];
  if (v13(&a2[v19], 1, v11))
  {
    uint64_t v22 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v21, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
  }
  uint64_t v23 = v7[10];
  int v24 = (char *)a1 + v23;
  int v25 = &a2[v23];
  *(void *)int v24 = *(void *)v25;
  v24[8] = v25[8];
  uint64_t v26 = v7[11];
  uint64_t v27 = (char *)a1 + v26;
  uint64_t v28 = &a2[v26];
  v27[8] = v28[8];
  *(void *)uint64_t v27 = *(void *)v28;
  *(_OWORD *)((char *)a1 + v7[12]) = *(_OWORD *)&a2[v7[12]];
  *(_OWORD *)((char *)a1 + v7[13]) = *(_OWORD *)&a2[v7[13]];
  *((unsigned char *)a1 + v7[14]) = a2[v7[14]];
  uint64_t v29 = v7[15];
  uint64_t v30 = (char *)a1 + v29;
  uint64_t v31 = &a2[v29];
  v30[8] = v31[8];
  *(void *)uint64_t v30 = *(void *)v31;
  uint64_t v32 = v7[16];
  unint64_t v33 = (char *)a1 + v32;
  uint64_t v34 = &a2[v32];
  *(void *)unint64_t v33 = *(void *)v34;
  v33[8] = v34[8];
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 20)) = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_10040C5F0(char *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[3];
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[5];
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = (int *)_s10VisitAssetC9VisitDataVMa(0);
  uint64_t v9 = v8[7];
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = v8[8];
  uint64_t v19 = &a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  int v21 = v14(&a1[v18], 1, v12);
  int v22 = v14(v20, 1, v12);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v20, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
LABEL_12:
    uint64_t v23 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v19, v20, v12);
LABEL_13:
  uint64_t v24 = v8[9];
  int v25 = &a1[v24];
  uint64_t v26 = (char *)a2 + v24;
  int v27 = v14(&a1[v24], 1, v12);
  int v28 = v14(v26, 1, v12);
  if (v27)
  {
    if (!v28)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v25, v26, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v25, 0, 1, v12);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v28)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v25, v12);
LABEL_18:
    uint64_t v29 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v25, v26, *(void *)(*(void *)(v29 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v25, v26, v12);
LABEL_19:
  uint64_t v30 = v8[10];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = (char *)a2 + v30;
  *(void *)uint64_t v31 = *(void *)v32;
  v31[8] = v32[8];
  uint64_t v33 = v8[11];
  uint64_t v34 = &a1[v33];
  uint64_t v35 = (char *)a2 + v33;
  *(void *)uint64_t v34 = *(void *)v35;
  v34[8] = v35[8];
  uint64_t v36 = v8[12];
  uint64_t v37 = (uint64_t)&a1[v36];
  unint64_t v38 = (char *)a2 + v36;
  unint64_t v39 = *(void *)&a1[v36 + 8];
  if (v39 >> 60 == 15)
  {
LABEL_22:
    *(_OWORD *)uint64_t v37 = *(_OWORD *)v38;
    goto LABEL_24;
  }
  unint64_t v40 = *((void *)v38 + 1);
  if (v40 >> 60 == 15)
  {
    sub_1001F2560(v37);
    goto LABEL_22;
  }
  uint64_t v41 = *(void *)v37;
  *(void *)uint64_t v37 = *(void *)v38;
  *(void *)(v37 + 8) = v40;
  sub_100040DD0(v41, v39);
LABEL_24:
  uint64_t v42 = v8[13];
  uint64_t v43 = (uint64_t *)&a1[v42];
  unint64_t v44 = (void *)((char *)a2 + v42);
  unint64_t v45 = *(void *)&a1[v42 + 8];
  if (v45 >> 60 != 15)
  {
    unint64_t v46 = v44[1];
    if (v46 >> 60 != 15)
    {
      uint64_t v47 = *v43;
      uint64_t *v43 = *v44;
      v43[1] = v46;
      sub_100040DD0(v47, v45);
      goto LABEL_29;
    }
    sub_1001F2560((uint64_t)v43);
  }
  *(_OWORD *)uint64_t v43 = *(_OWORD *)v44;
LABEL_29:
  a1[v8[14]] = *((unsigned char *)a2 + v8[14]);
  uint64_t v48 = v8[15];
  uint64_t v49 = &a1[v48];
  unint64_t v50 = (char *)a2 + v48;
  *(void *)uint64_t v49 = *(void *)v50;
  v49[8] = v50[8];
  uint64_t v51 = v8[16];
  uint64_t v52 = &a1[v51];
  Swift::String v53 = (char *)a2 + v51;
  *(void *)uint64_t v52 = *(void *)v53;
  v52[8] = v53[8];
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)((char *)a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_10040CAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040CAF8);
}

uint64_t sub_10040CAF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_10040CBB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10040CBCC);
}

uint64_t sub_10040CBCC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = _s10VisitAssetC9VisitDataVMa(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10040CC88()
{
  uint64_t result = _s10VisitAssetC9VisitDataVMa(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void **sub_10040CD20(void **a1, void **a2, uint64_t a3)
{
  int v3 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  uint64_t v4 = (char *)*a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = (void **)&v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    unint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = type metadata accessor for UUID();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    uint64_t v13 = v4;
    v12(v9, v10, v11);
    uint64_t v14 = *(int *)(a3 + 24);
    int v15 = (char *)v7 + v14;
    int v16 = (char *)a2 + v14;
    uint64_t v17 = type metadata accessor for URL();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v7;
}

uint64_t sub_10040CE58(id *a1, uint64_t a2)
{
  uint64_t v4 = (char *)a1 + *(int *)(a2 + 20);
  uint64_t v5 = type metadata accessor for UUID();
  (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  uint64_t v6 = (char *)a1 + *(int *)(a2 + 24);
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8);

  return v8(v6, v7);
}

void **sub_10040CF18(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  *a1 = *a2;
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  id v12 = v6;
  v11(v8, v9, v10);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  int v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

void **sub_10040D004(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  id v8 = v6;

  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  uint64_t v13 = *(int *)(a3 + 24);
  uint64_t v14 = (char *)a1 + v13;
  int v15 = (char *)a2 + v13;
  uint64_t v16 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 24))(v14, v15, v16);
  return a1;
}

void *sub_10040D0E4(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = (char *)a1 + v6;
  id v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = *(int *)(a3 + 24);
  uint64_t v11 = (char *)a1 + v10;
  uint64_t v12 = (char *)a2 + v10;
  uint64_t v13 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

void **sub_10040D1B8(void **a1, void **a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  *a1 = *a2;

  uint64_t v7 = *(int *)(a3 + 20);
  id v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for UUID();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = *(int *)(a3 + 24);
  uint64_t v12 = (char *)a1 + v11;
  uint64_t v13 = (char *)a2 + v11;
  uint64_t v14 = type metadata accessor for URL();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_10040D294(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10040D2A8);
}

uint64_t sub_10040D2A8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    uint64_t v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for URL();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t sub_10040D3D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10040D3E8);
}

void *sub_10040D3E8(void *result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *uint64_t result = (a2 - 1);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UUID();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = (char *)v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return (void *)v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = type metadata accessor for URL();
      uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = (char *)v5 + *(int *)(a4 + 24);
      return (void *)v14(v16, a2, a2, v15);
    }
  }
  return result;
}

uint64_t sub_10040D514()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for URL();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t destroy for SuggestionAssetFetchResult(uint64_t a1)
{
  unint64_t v1 = *(void **)(a1 + 16);
  if (v1 != (void *)1) {

  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SuggestionAssetFetchResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a2 + 16);
  if (v4 == (void *)1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
    *(void *)(a1 + 16) = v4;
    id v5 = v4;
  }
  uint64_t v6 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SuggestionAssetFetchResult(uint64_t a1, long long *a2)
{
  uint64_t v4 = *(void **)(a1 + 16);
  uint64_t v5 = *((void *)a2 + 2);
  if (v4 == (void *)1)
  {
    if (v5 == 1)
    {
      long long v6 = *a2;
      *(void *)(a1 + 16) = *((void *)a2 + 2);
      *(_OWORD *)a1 = v6;
    }
    else
    {
      uint64_t v8 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
      *(void *)a1 = v8;
      uint64_t v9 = (void *)*((void *)a2 + 2);
      *(void *)(a1 + 16) = v9;
      id v10 = v9;
    }
  }
  else if (v5 == 1)
  {
    sub_10040D81C(a1);
    uint64_t v7 = *((void *)a2 + 2);
    *(_OWORD *)a1 = *a2;
    *(void *)(a1 + 16) = v7;
  }
  else
  {
    uint64_t v11 = *(void *)a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    *(void *)a1 = v11;
    uint64_t v12 = (void *)*((void *)a2 + 2);
    *(void *)(a1 + 16) = v12;
    id v13 = v12;
  }
  *(void *)(a1 + 24) = *((void *)a2 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *((void *)a2 + 4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *((void *)a2 + 5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *((void *)a2 + 6);
  *(void *)(a1 + 56) = *((void *)a2 + 7);
  *(void *)(a1 + 64) = *((void *)a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10040D81C(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for SuggestionAssetFetchResult(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SuggestionAssetFetchResult(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)(a1 + 16);
  if (v4 != (void *)1)
  {
    uint64_t v5 = *(void *)(a2 + 16);
    if (v5 != 1)
    {
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(void *)(a1 + 16) = v5;

      goto LABEL_6;
    }
    sub_10040D81C(a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
LABEL_6:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SuggestionAssetFetchResult(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SuggestionAssetFetchResult(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SuggestionAssetFetchResult()
{
  return &type metadata for SuggestionAssetFetchResult;
}

unint64_t sub_10040D9FC()
{
  unint64_t result = qword_10080C898;
  if (!qword_10080C898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080C898);
  }
  return result;
}

unint64_t sub_10040DA54()
{
  unint64_t result = qword_10080C8A0;
  if (!qword_10080C8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080C8A0);
  }
  return result;
}

unint64_t sub_10040DAAC()
{
  unint64_t result = qword_10080C8A8;
  if (!qword_10080C8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080C8A8);
  }
  return result;
}

unint64_t sub_10040DB04()
{
  unint64_t result = qword_10080C8B0;
  if (!qword_10080C8B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080C8B0);
  }
  return result;
}

uint64_t sub_10040DB58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10040DBD4(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  uint64_t v3 = type metadata accessor for URL.DirectoryHint();
  v2[7] = v3;
  v2[8] = *(void *)(v3 - 8);
  v2[9] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for UUID();
  v2[10] = v4;
  v2[11] = *(void *)(v4 - 8);
  v2[12] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100800A60);
  v2[13] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for URL();
  v2[14] = v5;
  v2[15] = *(void *)(v5 - 8);
  v2[16] = swift_task_alloc();
  v2[17] = swift_task_alloc();
  v2[18] = swift_task_alloc();
  v2[19] = swift_task_alloc();
  return _swift_task_switch(sub_10040DDD0, 0, 0);
}

uint64_t sub_10040DDD0()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = type metadata accessor for ExportOptions();
  if (*(unsigned char *)(v1 + *(int *)(v2 + 20)))
  {
    uint64_t v3 = sub_10040F480(v1);
    uint64_t v5 = v4;
    _StringGuts.grow(_:)(76);
    v6._object = (void *)0x800000010069CE10;
    v6._countAndFlagsBits = 0xD00000000000003FLL;
    String.append(_:)(v6);
    v7._countAndFlagsBits = sub_10040E6D8(v1);
    String.append(_:)(v7);
    swift_bridgeObjectRelease();
    v8._countAndFlagsBits = 0x642F3C202020200ALL;
    v8._object = (void *)0xEB000000003E7669;
    String.append(_:)(v8);
    v83._countAndFlagsBits = 0;
    v83._object = 0;
    uint64_t v9 = sub_1003882D0(v3, v5, v83, 0, 0, 0, (void *)0xE000000000000000, 0, 0);
    uint64_t v11 = v10;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_3:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
    return v12(v9, v11);
  }
  uint64_t v14 = v2;
  unint64_t v15 = *(void *)(v0[6] + OBJC_IVAR____TtCC7Journal10Journaling5Asset_attachments);
  if (!(v15 >> 62))
  {
    uint64_t v16 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16) {
      goto LABEL_8;
    }
LABEL_20:
    uint64_t v70 = v0[14];
    uint64_t v71 = v0[15];
    uint64_t v72 = v0[13];
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v71 + 56))(v72, 1, 1, v70);
LABEL_21:
    sub_10001457C(v0[13], (uint64_t *)&unk_100800A60);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  if (!_CocoaArrayWrapper.endIndex.getter()) {
    goto LABEL_20;
  }
LABEL_8:
  if ((v15 & 0xC000000000000001) != 0) {
    specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else {
    swift_retain();
  }
  uint64_t v17 = v0[14];
  uint64_t v18 = v0[15];
  uint64_t v19 = (char *)v0[13];
  swift_bridgeObjectRelease();
  sub_1005DA2EC(v19);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v19, 1, v17) == 1) {
    goto LABEL_21;
  }
  (*(void (**)(void, void, void))(v0[15] + 32))(v0[19], v0[13], v0[14]);
  uint64_t v20 = URL.pathExtension.getter();
  char v22 = sub_100464B90(v20, v21);
  swift_bridgeObjectRelease();
  if ((v22 & 1) == 0)
  {
    (*(void (**)(void, void))(v0[15] + 8))(v0[19], v0[14]);
LABEL_22:
    sub_1002E00EC();
    swift_allocError();
    *uint64_t v73 = 0;
    swift_willThrow();
    goto LABEL_23;
  }
  uint64_t v23 = self;
  id v24 = [v23 defaultManager];
  URL.path.getter();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  unsigned int v26 = [v24 fileExistsAtPath:v25];

  if (!v26)
  {
    (*(void (**)(void, void))(v0[15] + 8))(v0[19], v0[14]);
    goto LABEL_22;
  }
  id v80 = v23;
  uint64_t v77 = v0[17];
  uint64_t v27 = v0[15];
  uint64_t v79 = v0[14];
  uint64_t v29 = v0[11];
  uint64_t v28 = v0[12];
  uint64_t v30 = v0[9];
  uint64_t v31 = v0[10];
  uint64_t v32 = v0[8];
  uint64_t v75 = v0[7];
  uint64_t v76 = v0[16];
  sub_100478818(v76);
  UUID.init()();
  uint64_t v33 = UUID.uuidString.getter();
  uint64_t v35 = v34;
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v31);
  v0[2] = v33;
  v0[3] = v35;
  (*(void (**)(uint64_t, void, uint64_t))(v32 + 104))(v30, enum case for URL.DirectoryHint.inferFromPath(_:), v75);
  sub_100014344();
  URL.appending<A>(path:directoryHint:)();
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v30, v75);
  swift_bridgeObjectRelease();
  uint64_t v36 = *(void (**)(uint64_t, uint64_t))(v27 + 8);
  v36(v76, v79);
  URL.pathExtension.getter();
  URL.appendingPathExtension(_:)();
  swift_bridgeObjectRelease();
  v36(v77, v79);
  uint64_t v78 = URL.lastPathComponent.getter();
  unint64_t v38 = v37;
  id v39 = [v80 defaultManager];
  URL._bridgeToObjectiveC()(v40);
  uint64_t v42 = v41;
  URL._bridgeToObjectiveC()(v43);
  unint64_t v45 = v44;
  v0[4] = 0;
  LODWORD(v27) = [v39 copyItemAtURL:v42 toURL:v44 error:v0 + 4];

  unint64_t v46 = (void *)v0[4];
  uint64_t v47 = v0[19];
  uint64_t v81 = v0[18];
  uint64_t v48 = v0[14];
  if (v27)
  {
    uint64_t v49 = v0[5];
    id v50 = v46;
    _StringGuts.grow(_:)(156);
    v51._object = (void *)0x800000010069CE10;
    v51._countAndFlagsBits = 0xD00000000000003FLL;
    String.append(_:)(v51);
    v52._countAndFlagsBits = sub_10040E6D8(v49);
    String.append(_:)(v52);
    swift_bridgeObjectRelease();
    v53._countAndFlagsBits = 0xD000000000000010;
    v53._object = (void *)0x800000010069CE50;
    String.append(_:)(v53);
    v54._countAndFlagsBits = sub_10040F480(v49);
    String.append(_:)(v54);
    swift_bridgeObjectRelease();
    v55._countAndFlagsBits = 0xD00000000000002CLL;
    v55._object = (void *)0x800000010069CE70;
    String.append(_:)(v55);
    uint64_t v56 = (uint64_t *)(v49 + *(int *)(v14 + 36));
    uint64_t v57 = *v56;
    uint64_t v58 = (void *)v56[1];
    swift_bridgeObjectRetain();
    v59._countAndFlagsBits = v57;
    v59._object = v58;
    String.append(_:)(v59);
    swift_bridgeObjectRelease();
    v60._countAndFlagsBits = 47;
    v60._object = (void *)0xE100000000000000;
    String.append(_:)(v60);
    v61._countAndFlagsBits = v78;
    v61._object = v38;
    String.append(_:)(v61);
    swift_bridgeObjectRelease();
    v62._countAndFlagsBits = 0x20202020200A3E22;
    v62._object = (void *)0xE900000000000020;
    String.append(_:)(v62);
    id v63 = [self mainBundle];
    v64._countAndFlagsBits = 0xD000000000000038;
    v85._countAndFlagsBits = 0xD00000000000004ELL;
    v85._object = (void *)0x800000010069CEE0;
    v64._object = (void *)0x800000010069CEA0;
    v65._countAndFlagsBits = 0;
    v65._object = (void *)0xE000000000000000;
    Swift::String v66 = NSLocalizedString(_:tableName:bundle:value:comment:)(v64, (Swift::String_optional)0, (NSBundle)v63, v65, v85);

    String.append(_:)(v66);
    swift_bridgeObjectRelease();
    v67._countAndFlagsBits = 0x612F3C202020200ALL;
    v67._object = (void *)0xED00003E6F696475;
    String.append(_:)(v67);
    v84._countAndFlagsBits = 0;
    v84._object = 0;
    uint64_t v9 = sub_1003882D0(0, (void *)0xE000000000000000, v84, 0, 0, 0, 0, 0, 0);
    uint64_t v11 = v68;
    swift_bridgeObjectRelease();
    v36(v81, v48);
    v36(v47, v48);
    goto LABEL_3;
  }
  id v69 = v46;
  swift_bridgeObjectRelease();
  _convertNSErrorToError(_:)();

  swift_willThrow();
  v36(v81, v48);
  v36(v47, v48);
LABEL_23:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  Swift::String v74 = (uint64_t (*)(void))v0[1];
  return v74();
}

uint64_t sub_10040E6D8(uint64_t a1)
{
  uint64_t v2 = sub_10040F8BC(a1);
  id v3 = sub_10040E7E0();
  uint64_t v5 = v4;
  swift_bridgeObjectRetain();
  v6._countAndFlagsBits = (uint64_t)v3;
  v6._object = v5;
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v7 = sub_10010F0D8();
  unint64_t v9 = v8;
  if (!v8) {
    goto LABEL_7;
  }
  uint64_t v10 = v7;
  swift_bridgeObjectRelease();
  uint64_t v11 = HIBYTE(v9) & 0xF;
  if ((v9 & 0x2000000000000000) == 0) {
    uint64_t v11 = v10 & 0xFFFFFFFFFFFFLL;
  }
  if (!v11)
  {
    unint64_t v9 = 0;
LABEL_7:
    id v13 = (void *)0xE000000000000000;
    goto LABEL_8;
  }
  unint64_t v9 = sub_10040FBC0(a1);
  id v13 = v12;
LABEL_8:
  swift_bridgeObjectRetain();
  v14._countAndFlagsBits = v9;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2;
}

id sub_10040E7E0()
{
  uint64_t v1 = sub_100010218(&qword_1007F9E38);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = _s10AudioAssetC9AudioDataVMa(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __n128 v6 = __chkstk_darwin(v4);
  unint64_t v8 = (double *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling10AudioAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v5 + 56))(v3, 1, 1, v4, v6);
    goto LABEL_6;
  }
  swift_retain();
  sub_10003AC18((uint64_t)v3);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4) == 1)
  {
LABEL_6:
    sub_10001457C((uint64_t)v3, &qword_1007F9E38);
    return 0;
  }
  sub_10040FE3C((uint64_t)v3, (uint64_t)v8);
  if ((_BYTE)v8[1])
  {
    sub_1004109F4((uint64_t)v8, _s10AudioAssetC9AudioDataVMa);
    return 0;
  }
  double v11 = *v8;
  if (qword_1007F7168 != -1)
  {
    double v18 = *v8;
    swift_once();
    double v11 = v18;
  }
  id v9 = [(id)qword_100810AD0 stringFromTimeInterval:v11 + 0.5];
  if (v9)
  {
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    Swift::String v14 = v13;

    unint64_t v19 = 0;
    unint64_t v20 = 0xE000000000000000;
    _StringGuts.grow(_:)(39);
    swift_bridgeObjectRelease();
    unint64_t v19 = 0xD00000000000001FLL;
    unint64_t v20 = 0x800000010069CF90;
    v15._countAndFlagsBits = v12;
    v15._object = v14;
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    v16._countAndFlagsBits = 0x3E7669642F3CLL;
    v16._object = (void *)0xE600000000000000;
    String.append(_:)(v16);
    id v9 = (id)v19;
  }
  sub_1004109F4((uint64_t)v8, _s10AudioAssetC9AudioDataVMa);
  return v9;
}

uint64_t sub_10040EAB8(uint64_t a1)
{
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_1001DBEDC;
  return sub_10040DBD4(a1);
}

double sub_10040EB4C@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_1007F9E38);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = _s10AudioAssetC9AudioDataVMa(0);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v14 = __chkstk_darwin(v13);
  Swift::String v16 = (char *)&v24 - v15;
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling10AudioAsset_metadata))
  {
    swift_retain();
    sub_10003AC18((uint64_t)v8);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
    {
      sub_10040FE3C((uint64_t)v8, (uint64_t)v16);
      sub_10041098C((uint64_t)v16, (uint64_t)v12, _s10AudioAssetC9AudioDataVMa);
      uint64_t v17 = sub_10010F0D8();
      uint64_t v19 = v18;
      uint64_t v20 = _s6ResultVMa_4();
      *(void *)(a1 + 24) = v20;
      *(void *)(a1 + 32) = sub_100410A54(&qword_10080C8E0, (void (*)(uint64_t))_s6ResultVMa_4);
      *(void *)(a1 + 40) = sub_100410A54(&qword_10080C8E8, (void (*)(uint64_t))_s6ResultVMa_4);
      uint64_t v21 = sub_100062E54((uint64_t *)a1);
      sub_100045944((uint64_t)&v12[*(int *)(v9 + 24)], (uint64_t)v5);
      sub_1004109F4((uint64_t)v12, _s10AudioAssetC9AudioDataVMa);
      sub_100062DA4((uint64_t)v5, (uint64_t)v21);
      char v22 = (uint64_t *)((char *)v21 + *(int *)(v20 + 20));
      *char v22 = v17;
      v22[1] = v19;
      sub_1004109F4((uint64_t)v16, _s10AudioAssetC9AudioDataVMa);
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v10 + 56))(v8, 1, 1, v9, v14);
  }
  sub_10001457C((uint64_t)v8, &qword_1007F9E38);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_10040EE4C(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_10080C990);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002E0BC(a1, a1[3]);
  sub_100410938();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  type metadata accessor for Date();
  sub_100410A54(&qword_1007F99F0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  if (!v1)
  {
    _s6ResultVMa_4();
    v8[14] = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_10040F004@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a2;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_10080C980);
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = _s6ResultVMa_4();
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_100410938();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  uint64_t v13 = v21;
  type metadata accessor for Date();
  char v24 = 0;
  sub_100410A54(&qword_10080E9D0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  sub_100062DA4((uint64_t)v6, (uint64_t)v12);
  char v23 = 1;
  uint64_t v14 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v9, v22);
  uint64_t v17 = (uint64_t *)&v12[*(int *)(v10 + 20)];
  uint64_t *v17 = v14;
  v17[1] = v16;
  sub_10041098C((uint64_t)v12, v20, (uint64_t (*)(void))_s6ResultVMa_4);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  return sub_1004109F4((uint64_t)v12, (uint64_t (*)(void))_s6ResultVMa_4);
}

uint64_t sub_10040F30C(uint64_t a1)
{
  uint64_t result = sub_100410A54(&qword_10080C8C8, (void (*)(uint64_t))_s10AudioAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_10040F364()
{
  if (*v0) {
    return 0x697263736E617274;
  }
  else {
    return 0x6E6964726F636572;
  }
}

uint64_t sub_10040F3B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100410CA8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10040F3D8(uint64_t a1)
{
  unint64_t v2 = sub_100410938();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10040F414(uint64_t a1)
{
  unint64_t v2 = sub_100410938();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10040F450@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_10040F004(a1, a2);
}

uint64_t sub_10040F468(void *a1)
{
  return sub_10040EE4C(a1);
}

uint64_t sub_10040F480(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ColorResource();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v33 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F7B78 != -1) {
    swift_once();
  }
  uint64_t v10 = (void *)qword_10083E860;
  if (!qword_10083E860) {
    return 0;
  }
  uint64_t v34 = v3;
  uint64_t v33 = type metadata accessor for ExportOptions();
  double v11 = *(double *)(a1 + *(int *)(v33 + 48));
  uint64_t v12 = self;
  id v13 = [v12 configurationWithPointSize:v11];
  id v14 = [v10 imageWithConfiguration:v13];

  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1006D6D00;
  sub_100088B50();
  if (qword_1007F7F18 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_100026A54(v6, (uint64_t)qword_10083EE68);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v16, v6);
  uint64_t v17 = (void *)UIColor.init(resource:)();
  id v18 = [v17 colorWithAlphaComponent:0.5];

  *(void *)(v15 + 32) = v18;
  v35[0] = v15;
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v20 = [v12 configurationWithPaletteColors:isa];

  uint64_t v21 = (UIImage *)[v14 imageByApplyingSymbolConfiguration:v20];
  if (!v21) {
    return 0;
  }
  uint64_t v22 = sub_100478A6C((uint64_t)v5, v21, 0x7661576F69647561, 0xEE00636965682E65);
  char v24 = v23;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v2);
  v35[0] = 0;
  v35[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(42);
  swift_bridgeObjectRelease();
  strcpy((char *)v35, "<img src=\"../");
  HIWORD(v35[1]) = -4864;
  NSString v25 = (uint64_t *)(a1 + *(int *)(v33 + 36));
  uint64_t v26 = *v25;
  uint64_t v27 = (void *)v25[1];
  swift_bridgeObjectRetain();
  v28._countAndFlagsBits = v26;
  v28._object = v27;
  String.append(_:)(v28);
  swift_bridgeObjectRelease();
  v29._countAndFlagsBits = 47;
  v29._object = (void *)0xE100000000000000;
  String.append(_:)(v29);
  v30._countAndFlagsBits = v22;
  v30._object = v24;
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  v31._object = (void *)0x800000010069CFF0;
  v31._countAndFlagsBits = 0xD000000000000018;
  String.append(_:)(v31);

  return v35[0];
}

uint64_t sub_10040F8BC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F7BE8 != -1) {
    swift_once();
  }
  uint64_t v6 = (void *)qword_10083E8D0;
  if (!qword_10083E8D0) {
    return 0;
  }
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1006D6D10;
  uint64_t v8 = self;
  *(void *)(v7 + 32) = [v8 whiteColor];
  *(void *)(v7 + 40) = [v8 systemIndigoColor];
  v23[0] = v7;
  specialized Array._endMutation()();
  sub_100088B50();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v10 = [self configurationWithPaletteColors:isa];

  double v11 = (UIImage *)[v6 imageWithConfiguration:v10];
  if (!v11) {
    return 0;
  }
  uint64_t v12 = sub_100478A6C((uint64_t)v5, v11, 0xD000000000000014, 0x800000010069CFB0);
  id v14 = v13;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v23[0] = 0;
  v23[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(46);
  swift_bridgeObjectRelease();
  strcpy((char *)v23, "<img src=\"../");
  HIWORD(v23[1]) = -4864;
  uint64_t v15 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ExportOptions() + 36));
  uint64_t v16 = *v15;
  uint64_t v17 = (void *)v15[1];
  swift_bridgeObjectRetain();
  v18._countAndFlagsBits = v16;
  v18._object = v17;
  String.append(_:)(v18);
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = 47;
  v19._object = (void *)0xE100000000000000;
  String.append(_:)(v19);
  v20._countAndFlagsBits = v12;
  v20._object = v14;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 0xD00000000000001CLL;
  v21._object = (void *)0x800000010069CFD0;
  String.append(_:)(v21);

  return v23[0];
}

uint64_t sub_10040FBC0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [self systemImageNamed:v6];

  if (!v7) {
    return 0;
  }
  id v8 = [self secondaryLabelColor];
  uint64_t v9 = (UIImage *)[v7 imageWithTintColor:v8 renderingMode:2];

  if (!v9) {
    return 0;
  }
  uint64_t v10 = sub_100478A6C((uint64_t)v5, v9, 0xD000000000000010, 0x800000010069CF30);
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v22[0] = 0;
  v22[1] = 0xE000000000000000;
  _StringGuts.grow(_:)(51);
  v13._object = (void *)0x800000010069CF50;
  v13._countAndFlagsBits = 0x1000000000000011;
  String.append(_:)(v13);
  id v14 = (uint64_t *)(a1 + *(int *)(type metadata accessor for ExportOptions() + 36));
  uint64_t v15 = *v14;
  uint64_t v16 = (void *)v14[1];
  swift_bridgeObjectRetain();
  v17._countAndFlagsBits = v15;
  v17._object = v16;
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = 47;
  v18._object = (void *)0xE100000000000000;
  String.append(_:)(v18);
  v19._countAndFlagsBits = v10;
  v19._object = v12;
  String.append(_:)(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 0xD00000000000001DLL;
  v20._object = (void *)0x800000010069CF70;
  String.append(_:)(v20);

  return v22[0];
}

uint64_t sub_10040FE3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s10AudioAssetC9AudioDataVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t _s6ResultVMa_4()
{
  uint64_t result = qword_10080C948;
  if (!qword_10080C948) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_10040FEEC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for Date();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    Swift::String v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_100410070(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }

  return swift_bridgeObjectRelease();
}

char *sub_100410140(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = v12;
  swift_bridgeObjectRetain();
  return a1;
}

char *sub_100410274(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  Swift::String v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)Swift::String v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *sub_100410420(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *sub_100410548(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  Swift::String v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)Swift::String v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1004106E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1004106F8);
}

uint64_t sub_1004106F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1007FC470);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_1004107CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1004107E0);
}

uint64_t sub_1004107E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_100010218((uint64_t *)&unk_1007FC470);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  }
  return result;
}

void sub_1004108A4()
{
  sub_100033618();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_100410938()
{
  unint64_t result = qword_10080C988;
  if (!qword_10080C988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080C988);
  }
  return result;
}

uint64_t sub_10041098C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1004109F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100410A54(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s6ResultV10CodingKeysOwst_4(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100410B68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_4()
{
  return &_s6ResultV10CodingKeysON_4;
}

unint64_t sub_100410BA4()
{
  unint64_t result = qword_10080C998;
  if (!qword_10080C998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080C998);
  }
  return result;
}

unint64_t sub_100410BFC()
{
  unint64_t result = qword_10080C9A0;
  if (!qword_10080C9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080C9A0);
  }
  return result;
}

unint64_t sub_100410C54()
{
  unint64_t result = qword_10080C9A8;
  if (!qword_10080C9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080C9A8);
  }
  return result;
}

uint64_t sub_100410CA8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E6964726F636572 && a2 == 0xED00006574614467;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x697263736E617274 && a2 == 0xEA00000000007470)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100410DCC(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001FB8C();
  unint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_1004127E8;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007AA1D8;
  Swift::String v13 = _Block_copy(aBlock);
  id v14 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10001FF10((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1004110A0(uint64_t a1, void *a2)
{
  uint64_t v3 = type metadata accessor for Date.FormatStyle.TimeStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v132 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date.FormatStyle.DateStyle();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v140 = (char *)&v132 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = _s23YearAdaptiveFormatStyleVMa();
  __chkstk_darwin(v138);
  uint64_t v137 = (char *)&v132 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v11 - 8);
  uint64_t v141 = (uint64_t)&v132 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v143 = (uint64_t *)((char *)&v132 - v14);
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v145 = *(void *)(v15 - 8);
  uint64_t v146 = v15;
  __chkstk_darwin(v15);
  id v139 = (char *)&v132 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  id v142 = (char *)&v132 - v18;
  uint64_t v19 = sub_100010218((uint64_t *)&unk_10080E8F0);
  __chkstk_darwin(v19 - 8);
  Swift::String v21 = (char *)&v132 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = _s17WorkoutRouteAssetC16WorkoutRouteDataVMa(0);
  uint64_t v23 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v144 = (uint64_t)&v132 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v26 = (char *)Strong;
    uint64_t v132 = v8;
    uint64_t v134 = v7;
    uint64_t v136 = v3;
    uint64_t v151 = OBJC_IVAR____TtC7Journal19FullScreenRouteView_routeView;
    uint64_t v27 = *(unsigned char **)(Strong + OBJC_IVAR____TtC7Journal19FullScreenRouteView_routeView);
    uint64_t v28 = v27[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
    v27[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType] = 5;
    uint64_t v29 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
    BOOL v30 = v27[OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated] == 1;
    uint64_t v135 = v4;
    uint64_t v133 = v6;
    if (v30)
    {
      switch(v28)
      {
        case 5:
          swift_bridgeObjectRelease();
          break;
        default:
          char v32 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v33 = v27;
          swift_bridgeObjectRelease();
          if ((v32 & 1) == 0) {
            goto LABEL_7;
          }

          break;
      }
    }
    else
    {
      Swift::String v31 = v27;
LABEL_7:
      sub_1001041A0();
      v27[v29] = 1;
    }
    uint64_t v34 = v151;
    uint64_t v35 = *(char **)&v26[v151];
    uint64_t v36 = *(void **)&v35[OBJC_IVAR____TtC7Journal14RouteAssetView_routeAsset];
    *(void *)&v35[OBJC_IVAR____TtC7Journal14RouteAssetView_routeAsset] = a2;
    id v37 = a2;
    unint64_t v38 = v35;

    sub_100100EF4();
    id v39 = *(id *)&v26[v34];
    UIView.removeAllConstraints()();

    uint64_t v40 = OBJC_IVAR____TtC7Journal19FullScreenRouteView_backgroundView;
    id v41 = *(id *)&v26[OBJC_IVAR____TtC7Journal19FullScreenRouteView_backgroundView];
    UIView.removeAllConstraints()();

    uint64_t v148 = OBJC_IVAR____TtC7Journal19FullScreenRouteView_dropShadowView;
    id v42 = *(id *)&v26[OBJC_IVAR____TtC7Journal19FullScreenRouteView_dropShadowView];
    UIView.removeAllConstraints()();

    id v43 = [objc_allocWithZone((Class)UIStackView) init];
    [v43 setUserInteractionEnabled:1];
    [v43 setAxis:1];
    [v43 setAlignment:3];
    if (qword_1007F72F8 != -1) {
      swift_once();
    }
    [v43 setSpacing:*(double *)&qword_10083D908 v132];
    id v149 = [objc_allocWithZone((Class)UIStackView) init];
    id v150 = [objc_allocWithZone((Class)UILabel) init];
    sub_1003F3E44((uint64_t)v21);
    int v44 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22);
    uint64_t v147 = v40;
    if (v44 == 1)
    {
      sub_10001457C((uint64_t)v21, (uint64_t *)&unk_10080E8F0);
    }
    else
    {
      uint64_t v45 = v144;
      sub_1001089E4((uint64_t)v21, v144);
      unint64_t v46 = (void (*)(void, void, void))v143;
      sub_100045944(v45 + *(int *)(v22 + 28), (uint64_t)v143);
      uint64_t v48 = v145;
      uint64_t v47 = v146;
      uint64_t v49 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v145 + 48);
      if (v49((uint64_t)v46, 1, v146) == 1)
      {
        sub_100412808(v45, _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
        sub_10001457C((uint64_t)v46, (uint64_t *)&unk_1007FC470);
        uint64_t v40 = v147;
      }
      else
      {
        id v50 = v142;
        id v143 = *(void **)(v48 + 32);
        ((void (*)(char *, void, uint64_t))v143)(v142, v46, v47);
        uint64_t v51 = v45 + *(int *)(v22 + 32);
        uint64_t v52 = v141;
        sub_100045944(v51, v141);
        if (v49(v52, 1, v47) == 1)
        {
          (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v47);
          sub_100412808(v45, _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
          sub_10001457C(v52, (uint64_t *)&unk_1007FC470);
        }
        else
        {
          Swift::String v53 = v139;
          ((void (*)(char *, uint64_t, uint64_t))v143)(v139, v52, v47);
          if (qword_1007F75E0 != -1) {
            swift_once();
          }
          uint64_t v141 = *((void *)&xmmword_10083DD68 + 1);
          id v143 = (void *)xmmword_10083DD68;
          sub_100010218((uint64_t *)&unk_100806070);
          uint64_t v54 = swift_allocObject();
          *(_OWORD *)(v54 + 16) = xmmword_1006D6270;
          uint64_t v55 = (uint64_t)v137;
          static Date.FormatStyle.TimeStyle.shortened.getter();
          static FormatStyleCapitalizationContext.standalone.getter();
          static Locale.autoupdatingCurrent.getter();
          static Calendar.autoupdatingCurrent.getter();
          static TimeZone.autoupdatingCurrent.getter();
          static Date.now.getter();
          sub_10001FF10((unint64_t *)&qword_1007F8F38, (void (*)(uint64_t))_s23YearAdaptiveFormatStyleVMa);
          Date.formatted<A>(_:)();
          sub_100412808(v55, (uint64_t (*)(void))_s23YearAdaptiveFormatStyleVMa);
          long long v56 = v152;
          *(void *)(v54 + 56) = &type metadata for String;
          unint64_t v57 = sub_10001B2C0();
          *(void *)(v54 + 64) = v57;
          *(_OWORD *)(v54 + 32) = v56;
          uint64_t v58 = v140;
          static Date.FormatStyle.DateStyle.omitted.getter();
          Swift::String v59 = v133;
          static Date.FormatStyle.TimeStyle.shortened.getter();
          uint64_t v60 = Date.formatted(date:time:)();
          uint64_t v62 = v61;
          (*(void (**)(char *, uint64_t))(v135 + 8))(v59, v136);
          (*(void (**)(char *, uint64_t))(v132 + 8))(v58, v134);
          *(void *)(v54 + 96) = &type metadata for String;
          *(void *)(v54 + 104) = v57;
          *(void *)(v54 + 72) = v60;
          *(void *)(v54 + 80) = v62;
          static String.localizedStringWithFormat(_:_:)();
          swift_bridgeObjectRelease();
          NSString v63 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          [v150 setText:v63];

          uint64_t v64 = v146;
          Swift::String v65 = *(void (**)(char *, uint64_t))(v145 + 8);
          v65(v53, v146);
          v65(v142, v64);
          sub_100412808(v144, _s17WorkoutRouteAssetC16WorkoutRouteDataVMa);
        }
        uint64_t v40 = v147;
      }
    }
    id v66 = [objc_allocWithZone((Class)UILabel) init];
    id v67 = [objc_allocWithZone((Class)UILabel) init];
    id v68 = [objc_allocWithZone((Class)UIButton) init];
    sub_100540B38(v149, v66, v67, v150, 0, v68);

    [v43 addArrangedSubview:*(void *)&v26[v40]];
    uint64_t v69 = v148;
    id v70 = *(id *)&v26[v148];
    sub_1005412A4(v70);

    id v71 = [*(id *)&v26[v69] layer];
    if (qword_1007F7CA0 != -1) {
      swift_once();
    }
    long long v152 = xmmword_10083E9C0;
    long long v153 = *(_OWORD *)&qword_10083E9D0;
    long long v154 = xmmword_10083E9E0;
    long long v155 = *(_OWORD *)&qword_10083E9F0;
    [v71 setCornerRadii:&v152];

    uint64_t v72 = v151;
    id v73 = [*(id *)&v26[v151] layer];
    long long v152 = xmmword_10083E9C0;
    long long v153 = *(_OWORD *)&qword_10083E9D0;
    long long v154 = xmmword_10083E9E0;
    long long v155 = *(_OWORD *)&qword_10083E9F0;
    [v73 setCornerRadii:&v152];

    [*(id *)&v26[v72] setClipsToBounds:1];
    Swift::String v74 = *(void **)&v26[v40];
    [v74 addSubview:*(void *)&v26[v69]];
    [v74 addSubview:*(void *)&v26[v72]];
    uint64_t v75 = qword_1007F7300;
    id v76 = v74;
    if (v75 != -1) {
      swift_once();
    }
    double v77 = *(double *)&qword_10083D910;
    id v78 = [v76 superview];
    uint64_t v79 = &stru_1007D7000;
    if (v78)
    {
      id v80 = v78;
      [v76 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v81 = [v76 leadingAnchor];
      id v82 = [v80 leadingAnchor];
      id v83 = [v81 constraintEqualToAnchor:v82];

      [v83 setConstant:v77];
      if (v83)
      {
        id v83 = v83;
        [v83 setActive:1];

        id v76 = v83;
      }
      uint64_t v40 = v147;

      uint64_t v79 = &stru_1007D7000;
    }
    else
    {
      id v83 = 0;
      id v80 = v76;
    }

    double v84 = *(double *)&qword_10083D910;
    id v85 = *(id *)&v26[v40];
    id v86 = [v85 superview];
    if (v86)
    {
      uint64_t v87 = v86;
      [v85 v79[96].name];
      id v88 = [v85 trailingAnchor];
      id v89 = [v87 trailingAnchor];
      id v90 = [v88 constraintEqualToAnchor:v89];

      [v90 setConstant:-v84];
      unint64_t v91 = v149;
      if (v90)
      {
        id v90 = v90;
        [v90 setActive:1];

        id v85 = v90;
      }

      uint64_t v40 = v147;
      uint64_t v79 = &stru_1007D7000;
    }
    else
    {
      id v90 = 0;
      uint64_t v87 = v85;
      unint64_t v91 = v149;
    }

    id v92 = *(id *)&v26[v40];
    [v92 v79[96].name];
    id v93 = [v92 heightAnchor];
    id v94 = [v92 widthAnchor];
    id v95 = [v93 constraintEqualToAnchor:v94 multiplier:1.0];

    [v95 setActive:1];
    uint64_t v96 = v151;
    id v97 = *(id *)&v26[v151];
    sub_1001DCF60(0.0);

    swift_bridgeObjectRelease();
    id v98 = [*(id *)&v26[v96] layer];
    long long v152 = xmmword_10083E9C0;
    long long v153 = *(_OWORD *)&qword_10083E9D0;
    long long v154 = xmmword_10083E9E0;
    long long v155 = *(_OWORD *)&qword_10083E9F0;
    [v98 setCornerRadii:&v152];

    id v99 = *(id *)&v26[v148];
    sub_1001DCF60(0.0);

    swift_bridgeObjectRelease();
    [v43 addArrangedSubview:v91];
    if (qword_1007F7368 != -1) {
      swift_once();
    }
    double v100 = *(double *)&qword_10083D978;
    id v101 = [v91 superview];
    if (v101)
    {
      uint64_t v102 = v101;
      [v91 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v103 = [v91 leadingAnchor];
      id v104 = [v102 leadingAnchor];
      id v105 = [v103 constraintEqualToAnchor:v104];

      [v105 setConstant:v100];
      id v106 = v105;
      [v106 setActive:1];
    }
    double v107 = *(double *)&qword_10083D978;
    id v108 = [v91 superview];
    if (v108)
    {
      uint64_t v109 = v108;
      [v91 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v110 = [v91 trailingAnchor];
      id v111 = [v109 trailingAnchor];
      id v112 = [v110 constraintEqualToAnchor:v111];

      [v112 setConstant:-v107];
      id v113 = v112;
      [v113 setActive:1];
    }
    [v26 addSubview:v43];
    id v114 = [v43 superview];
    if (v114)
    {
      id v115 = v114;
      [v43 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v116 = [v43 centerYAnchor];
      id v117 = [v115 centerYAnchor];
      id v118 = [v116 constraintEqualToAnchor:v117];

      [v118 setConstant:0.0];
      id v119 = v118;
      [v119 setActive:1];
    }
    id v120 = [v43 superview];
    if (v120)
    {
      id v121 = v120;
      [v43 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v122 = [v43 leadingAnchor];
      id v123 = [v121 leadingAnchor];
      id v124 = [v122 constraintEqualToAnchor:v123];

      [v124 setConstant:0.0];
      id v125 = v124;
      [v125 setActive:1];
    }
    id v126 = [v43 superview];
    if (v126)
    {
      uint64_t v127 = v126;
      [v43 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v128 = [v43 trailingAnchor];
      id v129 = [v127 trailingAnchor];
      id v130 = [v128 constraintEqualToAnchor:v129];

      [v130 setConstant:0.0];
      id v131 = v130;
      [v131 setActive:1];
    }
    [v26 layoutIfNeeded];
    [v43 layoutIfNeeded];
    [*(id *)&v26[v151] layoutIfNeeded];
  }
}

id sub_10041247C(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC7Journal19FullScreenRouteView_routeAsset] = 0;
  uint64_t v9 = OBJC_IVAR____TtC7Journal19FullScreenRouteView_routeView;
  type metadata accessor for RouteAssetView();
  id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal19FullScreenRouteView_backgroundView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal19FullScreenRouteView_dropShadowView;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UIView) init];

  v15.id receiver = v11;
  v15.Class super_class = (Class)type metadata accessor for FullScreenRouteView();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_1004125A0(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal19FullScreenRouteView_routeAsset] = 0;
  uint64_t v3 = OBJC_IVAR____TtC7Journal19FullScreenRouteView_routeView;
  type metadata accessor for RouteAssetView();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC7Journal19FullScreenRouteView_backgroundView;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v7 = OBJC_IVAR____TtC7Journal19FullScreenRouteView_dropShadowView;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UIView) init];

  v10.id receiver = v5;
  v10.Class super_class = (Class)type metadata accessor for FullScreenRouteView();
  [super initWithCoder:a1];

  return v8;
}

id sub_1004126AC()
{
  v2.id receiver = v0;
  v2.Class super_class = (Class)type metadata accessor for FullScreenRouteView();
  return [super dealloc];
}

uint64_t type metadata accessor for FullScreenRouteView()
{
  return self;
}

uint64_t sub_100412770()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1004127A8()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1004127E8()
{
  sub_1004110A0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1004127F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100412800()
{
  return swift_release();
}

uint64_t sub_100412808(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100412868(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (!v5) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v10 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v8 << 6))
  {
    if (*(unsigned char *)(*(void *)(a1 + 56) + 16 * i + 8) == 1)
    {
      objc_super v15 = (uint64_t *)(*(void *)(a1 + 48) + 16 * i);
      uint64_t v16 = v15[1];
      uint64_t v20 = *v15;
      swift_bridgeObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_1002A54A0(0, *((void *)v9 + 2) + 1, 1, (char *)v9);
        uint64_t v9 = (double *)result;
      }
      unint64_t v18 = *((void *)v9 + 2);
      unint64_t v17 = *((void *)v9 + 3);
      if (v18 >= v17 >> 1)
      {
        uint64_t result = (uint64_t)sub_1002A54A0((char *)(v17 > 1), v18 + 1, 1, (char *)v9);
        uint64_t v9 = (double *)result;
      }
      *((void *)v9 + 2) = v18 + 1;
      uint64_t v19 = &v9[2 * v18];
      *((void *)v19 + 4) = v20;
      *((void *)v19 + 5) = v16;
      if (v5) {
        goto LABEL_4;
      }
    }
    else if (v5)
    {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v6) {
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v6) {
        goto LABEL_29;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v6) {
          goto LABEL_29;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v8);
        if (!v13)
        {
          int64_t v8 = v12 + 3;
          if (v12 + 3 >= v6) {
            goto LABEL_29;
          }
          unint64_t v13 = *(void *)(v2 + 8 * v8);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v6)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v9;
  }
  unint64_t v13 = *(void *)(v2 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_29;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_100412A68()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_100412B28, 0, 0);
}

uint64_t sub_100412B28()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v3 = *(void **)(*(void *)(v0 + 16) + 24);
  *(void *)(v0 + 48) = v3;
  *(_DWORD *)(v0 + 120) = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
  uint64_t v4 = *(void (**)(uint64_t))(v2 + 104);
  *(void *)(v0 + 56) = v4;
  *(void *)(v0 + 64) = (v2 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v4(v1);
  v3;
  swift_retain();
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v5;
  void *v5 = v0;
  v5[1] = sub_100412C3C;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 16);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v5, v6, sub_1004386D8, v7, (char *)&type metadata for () + 8);
}

uint64_t sub_100412C3C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 48);
  uint64_t v3 = *(void *)(*v0 + 40);
  uint64_t v4 = *(void *)(*v0 + 32);
  uint64_t v5 = *(void *)(*v0 + 24);
  swift_task_dealloc();
  swift_release();

  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(void *)(v1 + 80) = v6;
  *(void *)(v1 + 88) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  return _swift_task_switch(sub_100412DDC, 0, 0);
}

uint64_t sub_100412DDC()
{
  id v1 = [*(id *)(v0 + 48) parentContext];
  *(void *)(v0 + 96) = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 56);
    uint64_t v4 = *(unsigned int *)(v0 + 120);
    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 16);
    uint64_t v6 = *(void *)(v0 + 24);
    uint64_t v8 = swift_allocObject();
    *(void *)(v0 + 104) = v8;
    *(void *)(v8 + 16) = v7;
    *(void *)(v8 + 24) = v2;
    v3(v5, v4, v6);
    swift_retain();
    v2;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100412F68;
    uint64_t v10 = *(void *)(v0 + 40);
    return NSManagedObjectContext.perform<A>(schedule:_:)(v9, v10, sub_1004386F8, v8, (char *)&type metadata for () + 8);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_100412F68()
{
  id v1 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 80);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();
  v1(v2, v3);
  return _swift_task_switch(sub_1004130EC, 0, 0);
}

uint64_t sub_1004130EC()
{
  swift_task_dealloc();
  id v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100413154()
{
  v1[2] = v0;
  uint64_t v2 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v1[3] = v2;
  v1[4] = *(void *)(v2 - 8);
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_100413214, 0, 0);
}

uint64_t sub_100413214()
{
  id v1 = *(void **)(*(void *)(v0 + 16) + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_context);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  *(void *)(v0 + 48) = v1;
  *(_DWORD *)(v0 + 120) = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
  uint64_t v4 = *(void (**)(uint64_t))(v3 + 104);
  *(void *)(v0 + 56) = v4;
  *(void *)(v0 + 64) = (v3 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v4(v2);
  v1;
  swift_retain();
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v5;
  void *v5 = v0;
  v5[1] = sub_100413334;
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v7 = *(void *)(v0 + 16);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v5, v6, sub_10043E944, v7, (char *)&type metadata for () + 8);
}

uint64_t sub_100413334()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 48);
  uint64_t v3 = *(void *)(*v0 + 40);
  uint64_t v4 = *(void *)(*v0 + 32);
  uint64_t v5 = *(void *)(*v0 + 24);
  swift_task_dealloc();
  swift_release();

  uint64_t v6 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  *(void *)(v1 + 80) = v6;
  *(void *)(v1 + 88) = (v4 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v6(v3, v5);
  return _swift_task_switch(sub_1004134D4, 0, 0);
}

uint64_t sub_1004134D4()
{
  id v1 = [*(id *)(v0 + 48) parentContext];
  *(void *)(v0 + 96) = v1;
  if (v1)
  {
    uint64_t v2 = v1;
    uint64_t v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 56);
    uint64_t v4 = *(unsigned int *)(v0 + 120);
    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v7 = *(void *)(v0 + 16);
    uint64_t v6 = *(void *)(v0 + 24);
    uint64_t v8 = swift_allocObject();
    *(void *)(v0 + 104) = v8;
    *(void *)(v8 + 16) = v7;
    *(void *)(v8 + 24) = v2;
    v3(v5, v4, v6);
    swift_retain();
    v2;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100413660;
    uint64_t v10 = *(void *)(v0 + 40);
    return NSManagedObjectContext.perform<A>(schedule:_:)(v9, v10, sub_100440D00, v8, (char *)&type metadata for () + 8);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
    return v11();
  }
}

uint64_t sub_100413660()
{
  id v1 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 80);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();
  v1(v2, v3);
  return _swift_task_switch(sub_100440D70, 0, 0);
}

uint64_t sub_1004137E4()
{
  v1[6] = v0;
  uint64_t v2 = type metadata accessor for URL.DirectoryHint();
  v1[7] = v2;
  v1[8] = *(void *)(v2 - 8);
  v1[9] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for URL();
  v1[10] = v3;
  v1[11] = *(void *)(v3 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100800A60);
  v1[16] = swift_task_alloc();
  v1[17] = swift_task_alloc();
  v1[18] = type metadata accessor for AssetAttachment.AssetType(0);
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  return _swift_task_switch(sub_1004139D4, 0, 0);
}

uint64_t sub_1004139D4()
{
  uint64_t v132 = v0;
  id v1 = (unint64_t *)(*(void *)(v0 + 48) + OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments);
  swift_beginAccess();
  unint64_t v2 = *v1;
  *(void *)(v0 + 168) = *v1;
  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    *(void *)(v0 + 176) = v3;
    if (v3) {
      goto LABEL_3;
    }
LABEL_67:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    id v128 = *(uint64_t (**)(void))(v0 + 8);
    return v128();
  }
  uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  *(void *)(v0 + 176) = v3;
  if (!v3) {
    goto LABEL_67;
  }
LABEL_3:
  if (v3 < 1) {
    __break(1u);
  }
  uint64_t v4 = 0;
  *(_DWORD *)(v0 + 256) = enum case for URL.DirectoryHint.inferFromPath(_:);
  while (1)
  {
    *(void *)(v0 + 184) = v4;
    uint64_t v5 = *(void *)(v0 + 168);
    if ((v5 & 0xC000000000000001) != 0)
    {
      uint64_t v6 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v6 = *(void *)(v5 + 8 * v4 + 32);
      swift_retain();
    }
    *(void *)(v0 + 192) = v6;
    uint64_t v7 = v6 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType;
    sub_10043E748(v6 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, *(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = *(void *)(v0 + 160);
        uint64_t v9 = type metadata accessor for AssetAttachment.AssetType;
        goto LABEL_11;
      case 2u:
        sub_100440B48(*(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v10 = 0x6F65646976;
        break;
      case 3u:
        sub_100440B48(*(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v10 = 0x6F69647561;
        break;
      case 4u:
        uint64_t v11 = *(void *)(v0 + 160);
        swift_bridgeObjectRelease();
        uint64_t v12 = sub_100010218(&qword_10080B3F0);
        sub_100440B48(v11 + *(int *)(v12 + 48), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v10 = 0x726568746FLL;
        break;
      default:
        uint64_t v8 = *(void *)(v0 + 160);
        uint64_t v9 = type metadata accessor for AssetAttachment.AssetType.FilePathType;
LABEL_11:
        sub_100440B48(v8, v9);
        uint64_t v10 = 0x6567616D69;
        break;
    }
    uint64_t v14 = *(void *)(v0 + 128);
    uint64_t v13 = *(char **)(v0 + 136);
    uint64_t v15 = *(void *)(v0 + 80);
    uint64_t v16 = *(void *)(v0 + 88);
    uint64_t v17 = *(void *)(v6 + 16);
    sub_1005DA2EC(v13);
    sub_10001B220((uint64_t)v13, v14, (uint64_t *)&unk_100800A60);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1) {
      break;
    }
    id v41 = *(void **)(v0 + 120);
    (*(void (**)(void *, void, void))(*(void *)(v0 + 88) + 32))(v41, *(void *)(v0 + 128), *(void *)(v0 + 80));
    swift_bridgeObjectRetain();
    uint64_t v42 = sub_1005DC69C(v41);
    uint64_t v44 = v43;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 200) = v44;
    if (v44)
    {
      uint64_t v118 = dword_10080CA60;
      id v119 = (void *)swift_task_alloc();
      *(void *)(v0 + 208) = v119;
      *id v119 = v0;
      v119[1] = sub_10041498C;
      id v120 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10080CA60 + v118);
      uint64_t v121 = v17;
      uint64_t v122 = v10;
      uint64_t v123 = v42;
      uint64_t v124 = v44;
      goto LABEL_63;
    }
    swift_bridgeObjectRelease();
    if (qword_1007F7E98 != -1) {
      swift_once();
    }
    uint64_t v45 = *(void *)(v0 + 112);
    uint64_t v46 = *(void *)(v0 + 120);
    uint64_t v47 = *(void *)(v0 + 80);
    uint64_t v48 = *(void *)(v0 + 88);
    uint64_t v49 = *(void **)(v0 + 48);
    uint64_t v130 = type metadata accessor for Logger();
    sub_100026A54(v130, (uint64_t)qword_100812D90);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v48 + 16))(v45, v46, v47);
    id v50 = v49;
    uint64_t v51 = Logger.logObject.getter();
    os_log_type_t v52 = static os_log_type_t.error.getter();
    BOOL v53 = os_log_type_enabled(v51, v52);
    uint64_t v54 = *(void *)(v0 + 112);
    uint64_t v55 = *(void *)(v0 + 80);
    long long v56 = *(void **)(v0 + 48);
    unint64_t v57 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 88) + 8);
    if (v53)
    {
      uint64_t v58 = swift_slowAlloc();
      Swift::String v59 = (void *)swift_slowAlloc();
      uint64_t v131 = swift_slowAlloc();
      *(_DWORD *)uint64_t v58 = 138412546;
      *(void *)(v58 + 4) = v56;
      *Swift::String v59 = v56;
      *(_WORD *)(v58 + 12) = 2080;
      sub_100438EA8((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v60 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v58 + 14) = sub_10011EA98(v60, v61, &v131);
      swift_bridgeObjectRelease();
      (*v57)(v54, v55);
      _os_log_impl((void *)&_mh_execute_header, v51, v52, "%@.saveAttachments error, failed to save file from sourceURL: %s", (uint8_t *)v58, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*v57)(v54, v55);
    }

    if (qword_1007F6EF8 != -1) {
      swift_once();
    }
    if (qword_10083D468)
    {
      uint64_t v71 = *(unsigned int *)(v0 + 256);
      uint64_t v72 = *(void *)(v0 + 96);
      uint64_t v73 = *(void *)(v0 + 80);
      uint64_t v74 = *(void *)(v0 + 88);
      uint64_t v76 = *(void *)(v0 + 64);
      uint64_t v75 = *(void *)(v0 + 72);
      uint64_t v77 = *(void *)(v0 + 56);
      sub_1004FD498(qword_10083D460, (void *)qword_10083D468, v72);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v76 + 104))(v75, v71, v77);
      sub_100014344();
      URL.appending<A>(components:directoryHint:)();
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v75, v77);
      (*(void (**)(uint64_t, uint64_t))(v74 + 8))(v72, v73);
    }
    else
    {
      static URL.temporaryDirectory.getter();
    }
    uint64_t v78 = *(void *)(v0 + 104);
    uint64_t v79 = *(void *)(v0 + 80);
    uint64_t v80 = *(void *)(v0 + 88);
    uint64_t v81 = URL.absoluteString.getter();
    id v83 = v82;
    double v84 = *(void (**)(uint64_t, uint64_t))(v80 + 8);
    v84(v78, v79);
    URL.absoluteString.getter();
    v85._countAndFlagsBits = v81;
    v85._object = v83;
    Swift::Bool v86 = String.hasPrefix(_:)(v85);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v86)
    {
      id v87 = [self defaultManager];
      URL._bridgeToObjectiveC()(v88);
      id v90 = v89;
      *(void *)(v0 + 40) = 0;
      unsigned __int8 v91 = [v87 removeItemAtURL:v89 error:v0 + 40];

      id v92 = *(void **)(v0 + 40);
      if (v91)
      {
        uint64_t v93 = *(void *)(v0 + 120);
        uint64_t v94 = *(void *)(v0 + 80);
        id v95 = v92;
        swift_release();
        uint64_t v96 = v93;
        uint64_t v97 = v94;
      }
      else
      {
        id v100 = v92;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        if (qword_1007F7E98 != -1) {
          swift_once();
        }
        sub_100026A54(v130, (uint64_t)qword_100812D90);
        swift_errorRetain();
        swift_errorRetain();
        id v101 = Logger.logObject.getter();
        os_log_type_t v102 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v101, v102))
        {
          uint64_t v103 = swift_slowAlloc();
          id v104 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v103 = 138412290;
          swift_errorRetain();
          uint64_t v105 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v103 + 4) = v105;
          *id v104 = v105;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v101, v102, "Error when removing attachment source file: %@", (uint8_t *)v103, 0xCu);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_release();
        }
        else
        {

          swift_release();
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v114 = *(void *)(v0 + 120);
        uint64_t v115 = *(void *)(v0 + 80);
        swift_errorRelease();
        uint64_t v96 = v114;
        uint64_t v97 = v115;
      }
    }
    else
    {
      uint64_t v98 = *(void *)(v0 + 120);
      uint64_t v99 = *(void *)(v0 + 80);
      swift_release();
      uint64_t v96 = v98;
      uint64_t v97 = v99;
    }
    v84(v96, v97);
LABEL_59:
    uint64_t v116 = *(void *)(v0 + 176);
    uint64_t v117 = *(void *)(v0 + 184) + 1;
    sub_10001457C(*(void *)(v0 + 136), (uint64_t *)&unk_100800A60);
    if (v117 == v116) {
      goto LABEL_67;
    }
    uint64_t v4 = *(void *)(v0 + 184) + 1;
  }
  uint64_t v18 = *(void *)(v0 + 152);
  sub_10001457C(*(void *)(v0 + 128), (uint64_t *)&unk_100800A60);
  sub_10043E748(v7, v18, type metadata accessor for AssetAttachment.AssetType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v20 = *(UIImage ***)(v0 + 152);
  if (EnumCaseMultiPayload != 1)
  {
    swift_bridgeObjectRelease();
    sub_100440B48((uint64_t)v20, type metadata accessor for AssetAttachment.AssetType);
    if (qword_1007F7E98 != -1) {
      swift_once();
    }
    uint64_t v62 = *(void **)(v0 + 48);
    uint64_t v63 = type metadata accessor for Logger();
    sub_100026A54(v63, (uint64_t)qword_100812D90);
    id v64 = v62;
    Swift::String v65 = Logger.logObject.getter();
    os_log_type_t v66 = static os_log_type_t.error.getter();
    BOOL v67 = os_log_type_enabled(v65, v66);
    id v68 = *(void **)(v0 + 48);
    if (v67)
    {
      uint64_t v69 = swift_slowAlloc();
      id v70 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v69 = 138412290;
      *(void *)(v69 + 4) = v68;
      *id v70 = v68;

      _os_log_impl((void *)&_mh_execute_header, v65, v66, "%@.saveAttachments error, nothing to save", (uint8_t *)v69, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    goto LABEL_58;
  }
  Swift::String v21 = *v20;
  *(void *)(v0 + 216) = *v20;
  uint64_t v22 = UIImageHEICRepresentation(v21);
  if (!v22)
  {
    swift_bridgeObjectRelease();
    if (qword_1007F7E98 != -1) {
      swift_once();
    }
    id v106 = *(void **)(v0 + 48);
    uint64_t v107 = type metadata accessor for Logger();
    sub_100026A54(v107, (uint64_t)qword_100812D90);
    id v108 = v106;
    Swift::String v65 = Logger.logObject.getter();
    os_log_type_t v109 = static os_log_type_t.error.getter();
    BOOL v110 = os_log_type_enabled(v65, v109);
    id v111 = *(void **)(v0 + 48);
    if (v110)
    {
      uint64_t v112 = swift_slowAlloc();
      id v113 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v112 = 138412290;
      *(void *)(v112 + 4) = v111;
      *id v113 = v111;

      _os_log_impl((void *)&_mh_execute_header, v65, v109, "%@.saveAttachments error, imageData is nil", (uint8_t *)v112, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
LABEL_58:

    swift_release();
    goto LABEL_59;
  }
  uint64_t v23 = v22;
  id v129 = v21;
  uint64_t v24 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v26 = v25;

  *(void *)(v0 + 224) = v24;
  *(void *)(v0 + 232) = v26;
  uint64_t v27 = *(void *)(v6 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID);
  uint64_t v28 = *(void **)(v6 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID + 8);
  swift_bridgeObjectRetain();
  uint64_t v29 = sub_1005DD45C(v24, v26, v27, v28, 0x63696568, (void *)0xE400000000000000);
  uint64_t v31 = v30;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 240) = v31;
  if (!v31)
  {
    swift_bridgeObjectRelease();
    if (qword_1007F7E98 != -1) {
      swift_once();
    }
    char v32 = *(void **)(v0 + 48);
    uint64_t v33 = type metadata accessor for Logger();
    sub_100026A54(v33, (uint64_t)qword_100812D90);
    id v34 = v32;
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.error.getter();
    BOOL v37 = os_log_type_enabled(v35, v36);
    unint64_t v38 = *(void **)(v0 + 48);
    if (v37)
    {
      uint64_t v39 = swift_slowAlloc();
      uint64_t v40 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 138412290;
      *(void *)(v39 + 4) = v38;
      *uint64_t v40 = v38;

      _os_log_impl((void *)&_mh_execute_header, v35, v36, "%@.saveAttachments error, failed to save image data", (uint8_t *)v39, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_100040DD0(v24, v26);
    }
    else
    {
      sub_100040DD0(v24, v26);
    }
    swift_release();
    goto LABEL_59;
  }
  uint64_t v125 = dword_10080CA60;
  id v126 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v126;
  void *v126 = v0;
  v126[1] = sub_100415A04;
  id v120 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10080CA60 + v125);
  uint64_t v121 = v17;
  uint64_t v122 = v10;
  uint64_t v123 = v29;
  uint64_t v124 = v31;
LABEL_63:
  return v120(v121, v122, 0xE500000000000000, v123, v124, 1);
}

uint64_t sub_10041498C()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100414AD8, 0, 0);
}

uint64_t sub_100414AD8()
{
  uint64_t v132 = v0;
  uint64_t v1 = &off_1007F6000;
  unint64_t v2 = &static Journaling.EntryViewModel.currentAppVersion;
LABEL_2:
  if (v1[479] != (_UNKNOWN *)-1)
  {
    swift_once();
    uint64_t v3 = (void *)*((void *)v2 + 141);
    if (v3) {
      goto LABEL_4;
    }
LABEL_6:
    static URL.temporaryDirectory.getter();
    goto LABEL_7;
  }
  uint64_t v3 = (void *)*((void *)v2 + 141);
  if (!v3) {
    goto LABEL_6;
  }
LABEL_4:
  uint64_t v4 = *(unsigned int *)(v0 + 256);
  uint64_t v5 = *(void *)(v0 + 96);
  uint64_t v6 = *(void *)(v0 + 80);
  uint64_t v7 = *(void *)(v0 + 88);
  uint64_t v9 = *(void *)(v0 + 64);
  uint64_t v8 = *(void *)(v0 + 72);
  uint64_t v10 = *(void *)(v0 + 56);
  sub_1004FD498(qword_10083D460, v3, v5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 104))(v8, v4, v10);
  sub_100014344();
  URL.appending<A>(components:directoryHint:)();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
  (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
LABEL_7:
  uint64_t v11 = *(void *)(v0 + 104);
  uint64_t v12 = *(void *)(v0 + 80);
  uint64_t v13 = *(void *)(v0 + 88);
  uint64_t v14 = URL.absoluteString.getter();
  uint64_t v16 = v15;
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
  v17(v11, v12);
  URL.absoluteString.getter();
  v18._countAndFlagsBits = v14;
  v18._object = v16;
  Swift::Bool v19 = String.hasPrefix(_:)(v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v19)
  {
    id v20 = [self defaultManager];
    URL._bridgeToObjectiveC()(v21);
    uint64_t v23 = v22;
    *(void *)(v0 + 40) = 0;
    unsigned __int8 v24 = [v20 removeItemAtURL:v22 error:v0 + 40];

    unint64_t v25 = *(void **)(v0 + 40);
    if (v24)
    {
      uint64_t v26 = *(void *)(v0 + 120);
      uint64_t v27 = *(void *)(v0 + 80);
      id v28 = v25;
      swift_release();
      uint64_t v29 = v26;
      uint64_t v30 = v27;
    }
    else
    {
      id v33 = v25;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      if (qword_1007F7E98 != -1) {
        swift_once();
      }
      uint64_t v34 = type metadata accessor for Logger();
      sub_100026A54(v34, (uint64_t)qword_100812D90);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v35 = Logger.logObject.getter();
      os_log_type_t v36 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v37 = swift_slowAlloc();
        unint64_t v38 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v37 = 138412290;
        swift_errorRetain();
        uint64_t v39 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v37 + 4) = v39;
        void *v38 = v39;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl((void *)&_mh_execute_header, v35, v36, "Error when removing attachment source file: %@", (uint8_t *)v37, 0xCu);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_release();
      }
      else
      {

        swift_release();
        swift_errorRelease();
        swift_errorRelease();
      }
      uint64_t v40 = *(void *)(v0 + 120);
      uint64_t v41 = *(void *)(v0 + 80);
      swift_errorRelease();
      uint64_t v29 = v40;
      uint64_t v30 = v41;
    }
  }
  else
  {
    uint64_t v31 = *(void *)(v0 + 120);
    uint64_t v32 = *(void *)(v0 + 80);
    swift_release();
    uint64_t v29 = v31;
    uint64_t v30 = v32;
  }
  v17(v29, v30);
  while (1)
  {
    uint64_t v42 = *(void *)(v0 + 176);
    uint64_t v43 = *(void *)(v0 + 184) + 1;
    sub_10001457C(*(void *)(v0 + 136), (uint64_t *)&unk_100800A60);
    if (v43 == v42) {
      break;
    }
    uint64_t v44 = *(void *)(v0 + 184) + 1;
    *(void *)(v0 + 184) = v44;
    uint64_t v45 = *(void *)(v0 + 168);
    if ((v45 & 0xC000000000000001) != 0)
    {
      uint64_t v46 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v46 = *(void *)(v45 + 8 * v44 + 32);
      swift_retain();
    }
    *(void *)(v0 + 192) = v46;
    uint64_t v47 = v46 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType;
    sub_10043E748(v46 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, *(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v48 = *(void *)(v0 + 160);
        uint64_t v49 = type metadata accessor for AssetAttachment.AssetType;
        goto LABEL_27;
      case 2u:
        sub_100440B48(*(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v50 = 0x6F65646976;
        break;
      case 3u:
        sub_100440B48(*(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v50 = 0x6F69647561;
        break;
      case 4u:
        uint64_t v51 = *(void *)(v0 + 160);
        swift_bridgeObjectRelease();
        uint64_t v52 = sub_100010218(&qword_10080B3F0);
        sub_100440B48(v51 + *(int *)(v52 + 48), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v50 = 0x726568746FLL;
        break;
      default:
        uint64_t v48 = *(void *)(v0 + 160);
        uint64_t v49 = type metadata accessor for AssetAttachment.AssetType.FilePathType;
LABEL_27:
        sub_100440B48(v48, v49);
        uint64_t v50 = 0x6567616D69;
        break;
    }
    uint64_t v54 = *(void *)(v0 + 128);
    BOOL v53 = *(char **)(v0 + 136);
    uint64_t v56 = *(void *)(v0 + 80);
    uint64_t v55 = *(void *)(v0 + 88);
    uint64_t v57 = *(void *)(v46 + 16);
    sub_1005DA2EC(v53);
    sub_10001B220((uint64_t)v53, v54, (uint64_t *)&unk_100800A60);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48))(v54, 1, v56) != 1)
    {
      uint64_t v97 = *(void **)(v0 + 120);
      (*(void (**)(void *, void, void))(*(void *)(v0 + 88) + 32))(v97, *(void *)(v0 + 128), *(void *)(v0 + 80));
      swift_bridgeObjectRetain();
      uint64_t v98 = sub_1005DC69C(v97);
      uint64_t v100 = v99;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 200) = v100;
      if (v100)
      {
        uint64_t v128 = dword_10080CA60;
        id v129 = (void *)swift_task_alloc();
        *(void *)(v0 + 208) = v129;
        *id v129 = v0;
        v129[1] = sub_10041498C;
        uint64_t v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10080CA60
                                                                                         + v128);
        uint64_t v124 = v57;
        uint64_t v125 = v50;
        uint64_t v126 = v98;
        uint64_t v127 = v100;
        goto LABEL_61;
      }
      swift_bridgeObjectRelease();
      if (qword_1007F7E98 != -1) {
        swift_once();
      }
      uint64_t v101 = *(void *)(v0 + 112);
      uint64_t v102 = *(void *)(v0 + 120);
      uint64_t v103 = *(void *)(v0 + 80);
      uint64_t v104 = *(void *)(v0 + 88);
      uint64_t v105 = *(void **)(v0 + 48);
      uint64_t v106 = type metadata accessor for Logger();
      sub_100026A54(v106, (uint64_t)qword_100812D90);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 16))(v101, v102, v103);
      id v107 = v105;
      id v108 = Logger.logObject.getter();
      os_log_type_t v109 = static os_log_type_t.error.getter();
      BOOL v110 = os_log_type_enabled(v108, v109);
      uint64_t v111 = *(void *)(v0 + 112);
      uint64_t v112 = *(void *)(v0 + 80);
      id v113 = *(void **)(v0 + 48);
      uint64_t v114 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 88) + 8);
      if (v110)
      {
        uint64_t v115 = swift_slowAlloc();
        uint64_t v116 = (void *)swift_slowAlloc();
        uint64_t v131 = swift_slowAlloc();
        *(_DWORD *)uint64_t v115 = 138412546;
        *(void *)(v115 + 4) = v113;
        *uint64_t v116 = v113;
        *(_WORD *)(v115 + 12) = 2080;
        sub_100438EA8((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
        uint64_t v117 = dispatch thunk of CustomStringConvertible.description.getter();
        *(void *)(v115 + 14) = sub_10011EA98(v117, v118, &v131);
        swift_bridgeObjectRelease();
        (*v114)(v111, v112);
        _os_log_impl((void *)&_mh_execute_header, v108, v109, "%@.saveAttachments error, failed to save file from sourceURL: %s", (uint8_t *)v115, 0x16u);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        (*v114)(v111, v112);
      }

      uint64_t v1 = &off_1007F6000;
      unint64_t v2 = &static Journaling.EntryViewModel.currentAppVersion;
      goto LABEL_2;
    }
    uint64_t v58 = *(void *)(v0 + 152);
    sub_10001457C(*(void *)(v0 + 128), (uint64_t *)&unk_100800A60);
    sub_10043E748(v47, v58, type metadata accessor for AssetAttachment.AssetType);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v60 = *(UIImage ***)(v0 + 152);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v130 = v50;
      unint64_t v61 = *v60;
      *(void *)(v0 + 216) = *v60;
      uint64_t v62 = UIImageHEICRepresentation(v61);
      if (v62)
      {
        uint64_t v63 = v62;
        uint64_t v64 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v66 = v65;

        *(void *)(v0 + 224) = v64;
        *(void *)(v0 + 232) = v66;
        uint64_t v68 = *(void *)(v46 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID);
        BOOL v67 = *(void **)(v46 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID + 8);
        swift_bridgeObjectRetain();
        uint64_t v69 = sub_1005DD45C(v64, v66, v68, v67, 0x63696568, (void *)0xE400000000000000);
        uint64_t v71 = v70;
        swift_bridgeObjectRelease();
        *(void *)(v0 + 240) = v71;
        if (v71)
        {
          uint64_t v121 = dword_10080CA60;
          uint64_t v122 = (void *)swift_task_alloc();
          *(void *)(v0 + 248) = v122;
          *uint64_t v122 = v0;
          v122[1] = sub_100415A04;
          uint64_t v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10080CA60
                                                                                           + v121);
          uint64_t v124 = v57;
          uint64_t v125 = v130;
          uint64_t v126 = v69;
          uint64_t v127 = v71;
LABEL_61:
          return v123(v124, v125, 0xE500000000000000, v126, v127, 1);
        }
        swift_bridgeObjectRelease();
        if (qword_1007F7E98 != -1) {
          swift_once();
        }
        uint64_t v72 = *(void **)(v0 + 48);
        uint64_t v73 = type metadata accessor for Logger();
        sub_100026A54(v73, (uint64_t)qword_100812D90);
        id v74 = v72;
        uint64_t v75 = Logger.logObject.getter();
        os_log_type_t v76 = static os_log_type_t.error.getter();
        BOOL v77 = os_log_type_enabled(v75, v76);
        uint64_t v78 = *(void **)(v0 + 48);
        if (v77)
        {
          uint64_t v79 = swift_slowAlloc();
          uint64_t v80 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v79 = 138412290;
          *(void *)(v79 + 4) = v78;
          void *v80 = v78;

          _os_log_impl((void *)&_mh_execute_header, v75, v76, "%@.saveAttachments error, failed to save image data", (uint8_t *)v79, 0xCu);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
          sub_100040DD0(v64, v66);
        }
        else
        {
          sub_100040DD0(v64, v66);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        if (qword_1007F7E98 != -1) {
          swift_once();
        }
        id v89 = *(void **)(v0 + 48);
        uint64_t v90 = type metadata accessor for Logger();
        sub_100026A54(v90, (uint64_t)qword_100812D90);
        id v91 = v89;
        uint64_t v75 = Logger.logObject.getter();
        os_log_type_t v92 = static os_log_type_t.error.getter();
        BOOL v93 = os_log_type_enabled(v75, v92);
        uint64_t v94 = *(void **)(v0 + 48);
        if (v93)
        {
          uint64_t v95 = swift_slowAlloc();
          uint64_t v96 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v95 = 138412290;
          *(void *)(v95 + 4) = v94;
          *uint64_t v96 = v94;

          _os_log_impl((void *)&_mh_execute_header, v75, v92, "%@.saveAttachments error, imageData is nil", (uint8_t *)v95, 0xCu);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
        }
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_100440B48((uint64_t)v60, type metadata accessor for AssetAttachment.AssetType);
      if (qword_1007F7E98 != -1) {
        swift_once();
      }
      uint64_t v81 = *(void **)(v0 + 48);
      uint64_t v82 = type metadata accessor for Logger();
      sub_100026A54(v82, (uint64_t)qword_100812D90);
      id v83 = v81;
      uint64_t v75 = Logger.logObject.getter();
      os_log_type_t v84 = static os_log_type_t.error.getter();
      BOOL v85 = os_log_type_enabled(v75, v84);
      Swift::Bool v86 = *(void **)(v0 + 48);
      if (v85)
      {
        uint64_t v87 = swift_slowAlloc();
        id v88 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v87 = 138412290;
        *(void *)(v87 + 4) = v86;
        void *v88 = v86;

        _os_log_impl((void *)&_mh_execute_header, v75, v84, "%@.saveAttachments error, nothing to save", (uint8_t *)v87, 0xCu);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }

    swift_release();
  }
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v119 = *(uint64_t (**)(void))(v0 + 8);
  return v119();
}

uint64_t sub_100415A04()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return _swift_task_switch(sub_100415B50, 0, 0);
}

uint64_t sub_100415B50()
{
  uint64_t v133 = v0;
  uint64_t v1 = *(void **)(v0 + 216);
  sub_100040DD0(*(void *)(v0 + 224), *(void *)(v0 + 232));

  swift_release();
  uint64_t v2 = *(void *)(v0 + 176);
  uint64_t v3 = *(void *)(v0 + 184) + 1;
  sub_10001457C(*(void *)(v0 + 136), (uint64_t *)&unk_100800A60);
  if (v3 == v2)
  {
LABEL_2:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  while (1)
  {
    uint64_t v10 = *(void *)(v0 + 184) + 1;
    *(void *)(v0 + 184) = v10;
    uint64_t v11 = *(void *)(v0 + 168);
    if ((v11 & 0xC000000000000001) != 0)
    {
      uint64_t v12 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v12 = *(void *)(v11 + 8 * v10 + 32);
      swift_retain();
    }
    *(void *)(v0 + 192) = v12;
    uint64_t v13 = v12 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType;
    sub_10043E748(v12 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, *(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v14 = *(void *)(v0 + 160);
        uint64_t v15 = type metadata accessor for AssetAttachment.AssetType;
        goto LABEL_15;
      case 2u:
        sub_100440B48(*(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v16 = 0x6F65646976;
        break;
      case 3u:
        sub_100440B48(*(void *)(v0 + 160), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v16 = 0x6F69647561;
        break;
      case 4u:
        uint64_t v17 = *(void *)(v0 + 160);
        swift_bridgeObjectRelease();
        uint64_t v18 = sub_100010218(&qword_10080B3F0);
        sub_100440B48(v17 + *(int *)(v18 + 48), type metadata accessor for AssetAttachment.AssetType.FilePathType);
        uint64_t v16 = 0x726568746FLL;
        break;
      default:
        uint64_t v14 = *(void *)(v0 + 160);
        uint64_t v15 = type metadata accessor for AssetAttachment.AssetType.FilePathType;
LABEL_15:
        sub_100440B48(v14, v15);
        uint64_t v16 = 0x6567616D69;
        break;
    }
    uint64_t v20 = *(void *)(v0 + 128);
    Swift::Bool v19 = *(char **)(v0 + 136);
    uint64_t v21 = *(void *)(v0 + 80);
    uint64_t v22 = *(void *)(v0 + 88);
    uint64_t v23 = *(void *)(v12 + 16);
    sub_1005DA2EC(v19);
    sub_10001B220((uint64_t)v19, v20, (uint64_t *)&unk_100800A60);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) == 1) {
      break;
    }
    uint64_t v47 = *(void **)(v0 + 120);
    (*(void (**)(void *, void, void))(*(void *)(v0 + 88) + 32))(v47, *(void *)(v0 + 128), *(void *)(v0 + 80));
    swift_bridgeObjectRetain();
    uint64_t v48 = sub_1005DC69C(v47);
    uint64_t v50 = v49;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 200) = v50;
    if (v50)
    {
      uint64_t v121 = dword_10080CA60;
      uint64_t v122 = (void *)swift_task_alloc();
      *(void *)(v0 + 208) = v122;
      *uint64_t v122 = v0;
      v122[1] = sub_10041498C;
      uint64_t v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10080CA60 + v121);
      uint64_t v124 = v23;
      uint64_t v125 = v16;
      uint64_t v126 = v48;
      uint64_t v127 = v50;
      goto LABEL_63;
    }
    swift_bridgeObjectRelease();
    if (qword_1007F7E98 != -1) {
      swift_once();
    }
    uint64_t v51 = *(void *)(v0 + 112);
    uint64_t v52 = *(void *)(v0 + 120);
    uint64_t v53 = *(void *)(v0 + 80);
    uint64_t v54 = *(void *)(v0 + 88);
    uint64_t v55 = *(void **)(v0 + 48);
    uint64_t v56 = type metadata accessor for Logger();
    sub_100026A54(v56, (uint64_t)qword_100812D90);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v54 + 16))(v51, v52, v53);
    id v57 = v55;
    uint64_t v58 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.error.getter();
    BOOL v60 = os_log_type_enabled(v58, v59);
    uint64_t v61 = *(void *)(v0 + 112);
    uint64_t v62 = *(void *)(v0 + 80);
    uint64_t v63 = *(void **)(v0 + 48);
    uint64_t v64 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 88) + 8);
    uint64_t v131 = v56;
    if (v60)
    {
      uint64_t v65 = swift_slowAlloc();
      unint64_t v66 = (void *)swift_slowAlloc();
      uint64_t v132 = swift_slowAlloc();
      *(_DWORD *)uint64_t v65 = 138412546;
      *(void *)(v65 + 4) = v63;
      *unint64_t v66 = v63;
      *(_WORD *)(v65 + 12) = 2080;
      sub_100438EA8((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
      uint64_t v67 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)(v65 + 14) = sub_10011EA98(v67, v68, &v132);
      swift_bridgeObjectRelease();
      (*v64)(v61, v62);
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "%@.saveAttachments error, failed to save file from sourceURL: %s", (uint8_t *)v65, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      (*v64)(v61, v62);
    }

    if (qword_1007F6EF8 != -1) {
      swift_once();
    }
    if (qword_10083D468)
    {
      uint64_t v76 = *(unsigned int *)(v0 + 256);
      uint64_t v77 = *(void *)(v0 + 96);
      uint64_t v78 = *(void *)(v0 + 80);
      uint64_t v79 = *(void *)(v0 + 88);
      uint64_t v81 = *(void *)(v0 + 64);
      uint64_t v80 = *(void *)(v0 + 72);
      uint64_t v82 = *(void *)(v0 + 56);
      sub_1004FD498(qword_10083D460, (void *)qword_10083D468, v77);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 104))(v80, v76, v82);
      sub_100014344();
      URL.appending<A>(components:directoryHint:)();
      (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v80, v82);
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v77, v78);
    }
    else
    {
      static URL.temporaryDirectory.getter();
    }
    uint64_t v83 = *(void *)(v0 + 104);
    uint64_t v84 = *(void *)(v0 + 80);
    uint64_t v85 = *(void *)(v0 + 88);
    uint64_t v86 = URL.absoluteString.getter();
    id v88 = v87;
    id v89 = *(void (**)(uint64_t, uint64_t))(v85 + 8);
    v89(v83, v84);
    URL.absoluteString.getter();
    v90._countAndFlagsBits = v86;
    v90._object = v88;
    Swift::Bool v91 = String.hasPrefix(_:)(v90);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v91)
    {
      id v92 = [self defaultManager];
      URL._bridgeToObjectiveC()(v93);
      uint64_t v95 = v94;
      *(void *)(v0 + 40) = 0;
      unsigned __int8 v96 = [v92 removeItemAtURL:v94 error:v0 + 40];

      uint64_t v97 = *(void **)(v0 + 40);
      if (v96)
      {
        uint64_t v98 = *(void *)(v0 + 120);
        uint64_t v99 = *(void *)(v0 + 80);
        id v100 = v97;
        swift_release();
        uint64_t v101 = v98;
        uint64_t v102 = v99;
      }
      else
      {
        id v105 = v97;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        if (qword_1007F7E98 != -1) {
          swift_once();
        }
        sub_100026A54(v131, (uint64_t)qword_100812D90);
        swift_errorRetain();
        swift_errorRetain();
        uint64_t v106 = Logger.logObject.getter();
        os_log_type_t v107 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v106, v107))
        {
          uint64_t v108 = swift_slowAlloc();
          os_log_type_t v109 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v108 = 138412290;
          swift_errorRetain();
          uint64_t v110 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v108 + 4) = v110;
          void *v109 = v110;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v106, v107, "Error when removing attachment source file: %@", (uint8_t *)v108, 0xCu);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_release();
        }
        else
        {

          swift_release();
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v119 = *(void *)(v0 + 120);
        uint64_t v120 = *(void *)(v0 + 80);
        swift_errorRelease();
        uint64_t v101 = v119;
        uint64_t v102 = v120;
      }
    }
    else
    {
      uint64_t v103 = *(void *)(v0 + 120);
      uint64_t v104 = *(void *)(v0 + 80);
      swift_release();
      uint64_t v101 = v103;
      uint64_t v102 = v104;
    }
    v89(v101, v102);
LABEL_8:
    uint64_t v8 = *(void *)(v0 + 176);
    uint64_t v9 = *(void *)(v0 + 184) + 1;
    sub_10001457C(*(void *)(v0 + 136), (uint64_t *)&unk_100800A60);
    if (v9 == v8) {
      goto LABEL_2;
    }
  }
  uint64_t v24 = *(void *)(v0 + 152);
  sub_10001457C(*(void *)(v0 + 128), (uint64_t *)&unk_100800A60);
  sub_10043E748(v13, v24, type metadata accessor for AssetAttachment.AssetType);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v26 = *(UIImage ***)(v0 + 152);
  if (EnumCaseMultiPayload != 1)
  {
    swift_bridgeObjectRelease();
    sub_100440B48((uint64_t)v26, type metadata accessor for AssetAttachment.AssetType);
    if (qword_1007F7E98 != -1) {
      swift_once();
    }
    uint64_t v69 = *(void **)(v0 + 48);
    uint64_t v70 = type metadata accessor for Logger();
    sub_100026A54(v70, (uint64_t)qword_100812D90);
    id v71 = v69;
    uint64_t v72 = Logger.logObject.getter();
    os_log_type_t v73 = static os_log_type_t.error.getter();
    BOOL v74 = os_log_type_enabled(v72, v73);
    uint64_t v75 = *(void **)(v0 + 48);
    if (v74)
    {
      uint64_t v6 = swift_slowAlloc();
      uint64_t v7 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v6 = 138412290;
      *(void *)(v6 + 4) = v75;
      *uint64_t v7 = v75;

      _os_log_impl((void *)&_mh_execute_header, v72, v73, "%@.saveAttachments error, nothing to save", (uint8_t *)v6, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    goto LABEL_7;
  }
  uint64_t v27 = *v26;
  *(void *)(v0 + 216) = *v26;
  id v28 = UIImageHEICRepresentation(v27);
  if (!v28)
  {
    swift_bridgeObjectRelease();
    if (qword_1007F7E98 != -1) {
      swift_once();
    }
    uint64_t v111 = *(void **)(v0 + 48);
    uint64_t v112 = type metadata accessor for Logger();
    sub_100026A54(v112, (uint64_t)qword_100812D90);
    id v113 = v111;
    uint64_t v72 = Logger.logObject.getter();
    os_log_type_t v114 = static os_log_type_t.error.getter();
    BOOL v115 = os_log_type_enabled(v72, v114);
    uint64_t v116 = *(void **)(v0 + 48);
    if (v115)
    {
      uint64_t v117 = swift_slowAlloc();
      unint64_t v118 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v117 = 138412290;
      *(void *)(v117 + 4) = v116;
      *unint64_t v118 = v116;

      _os_log_impl((void *)&_mh_execute_header, v72, v114, "%@.saveAttachments error, imageData is nil", (uint8_t *)v117, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
LABEL_7:

    swift_release();
    goto LABEL_8;
  }
  uint64_t v29 = v28;
  uint64_t v130 = v27;
  uint64_t v30 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v32 = v31;

  *(void *)(v0 + 224) = v30;
  *(void *)(v0 + 232) = v32;
  uint64_t v33 = *(void *)(v12 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID);
  uint64_t v34 = *(void **)(v12 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID + 8);
  swift_bridgeObjectRetain();
  uint64_t v35 = sub_1005DD45C(v30, v32, v33, v34, 0x63696568, (void *)0xE400000000000000);
  uint64_t v37 = v36;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 240) = v37;
  if (!v37)
  {
    swift_bridgeObjectRelease();
    if (qword_1007F7E98 != -1) {
      swift_once();
    }
    unint64_t v38 = *(void **)(v0 + 48);
    uint64_t v39 = type metadata accessor for Logger();
    sub_100026A54(v39, (uint64_t)qword_100812D90);
    id v40 = v38;
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.error.getter();
    BOOL v43 = os_log_type_enabled(v41, v42);
    uint64_t v44 = *(void **)(v0 + 48);
    if (v43)
    {
      uint64_t v45 = swift_slowAlloc();
      uint64_t v46 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v45 = 138412290;
      *(void *)(v45 + 4) = v44;
      *uint64_t v46 = v44;

      _os_log_impl((void *)&_mh_execute_header, v41, v42, "%@.saveAttachments error, failed to save image data", (uint8_t *)v45, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
      sub_100040DD0(v30, v32);
    }
    else
    {
      sub_100040DD0(v30, v32);
    }
    swift_release();
    goto LABEL_8;
  }
  uint64_t v128 = dword_10080CA60;
  id v129 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v129;
  *id v129 = v0;
  v129[1] = sub_100415A04;
  uint64_t v123 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_10080CA60 + v128);
  uint64_t v124 = v23;
  uint64_t v125 = v16;
  uint64_t v126 = v35;
  uint64_t v127 = v37;
LABEL_63:
  return v123(v124, v125, 0xE500000000000000, v126, v127, 1);
}

void sub_100416AB0(unint64_t a1, void *a2)
{
  id v111 = a2;
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v107 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = _s10PhotoAssetC9PhotoDataVMa(0);
  uint64_t v123 = *(char **)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v108 = (uint64_t *)((char *)&v107 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_100010218((uint64_t *)&unk_100804080);
  __chkstk_darwin(v8 - 8);
  uint64_t v117 = (uint64_t)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v120 = _s10VideoAssetC9VideoDataVMa(0);
  uint64_t v10 = *(void *)(v120 - 8);
  __chkstk_darwin(v120);
  BOOL v115 = (uint64_t *)((char *)&v107 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = sub_100010218(&qword_1007F9E10);
  __chkstk_darwin(v12 - 8);
  uint64_t v121 = (char *)&v107 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  uint64_t v14 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v119 = (uint64_t *)((char *)&v107 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_100010218((uint64_t *)&unk_100804090);
  __chkstk_darwin(v16 - 8);
  uint64_t v18 = (char *)&v107 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v114 = sub_100412868(v19);
  uint64_t v110 = 0;
  swift_bridgeObjectRelease();
  uint64_t v20 = (uint64_t)v2 + OBJC_IVAR____TtC7Journal20CanvasViewController_photoPickerLatestAssetAdditions;
  swift_beginAccess();
  uint64_t v21 = *(void *)v20;
  if (*(void *)v20 >> 62)
  {
    if (v21 < 0) {
      uint64_t v20 = *(void *)v20;
    }
    else {
      uint64_t v20 = v21 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
  }
  else
  {
    uint64_t v22 = *(void *)((v21 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
  }
  unint64_t v124 = a1;
  id v109 = v2;
  os_log_type_t v107 = v6;
  if (v22)
  {
    if (v22 < 1) {
      goto LABEL_86;
    }
    uint64_t v23 = 0;
    uint64_t v24 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    unint64_t v118 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    id v113 = v123 + 48;
    uint64_t v123 = (char *)_swiftEmptyArrayStorage;
    uint64_t v25 = (uint64_t)v121;
    uint64_t v112 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    while (1)
    {
      id v28 = (v21 & 0xC000000000000001) != 0
          ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v21 + 8 * v23 + 32);
      uint64_t v29 = v28;
      _s14LivePhotoAssetCMa(0);
      uint64_t v30 = swift_dynamicCastClass();
      if (v30) {
        break;
      }
      _s10VideoAssetCMa(0);
      uint64_t v35 = swift_dynamicCastClass();
      if (v35)
      {
        if (*(void *)(v35 + OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata))
        {
          swift_retain();
          sub_100039C14(v25);
          swift_release();
          if (!(*v118)(v25, 1, v120))
          {
            unint64_t v31 = v115;
            sub_10043E748(v25, (uint64_t)v115, _s10VideoAssetC9VideoDataVMa);
            sub_10001457C(v25, &qword_1007F9E10);
            uint64_t v33 = *v31;
            uint64_t v32 = v31[1];
            swift_bridgeObjectRetain();
            uint64_t v34 = _s10VideoAssetC9VideoDataVMa;
LABEL_26:
            sub_100440B48((uint64_t)v31, v34);

            if (!v32)
            {
LABEL_32:
              uint64_t v25 = (uint64_t)v121;
              goto LABEL_9;
            }
LABEL_27:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v123 = sub_1002A54A0(0, *((void *)v123 + 2) + 1, 1, v123);
            }
            unint64_t v39 = *((void *)v123 + 2);
            unint64_t v38 = *((void *)v123 + 3);
            if (v39 >= v38 >> 1) {
              uint64_t v123 = sub_1002A54A0((char *)(v38 > 1), v39 + 1, 1, v123);
            }
            id v40 = v123;
            *((void *)v123 + 2) = v39 + 1;
            uint64_t v41 = &v40[16 * v39];
            *((void *)v41 + 4) = v33;
            *((void *)v41 + 5) = v32;
            goto LABEL_32;
          }
          uint64_t v26 = v25;
          uint64_t v27 = &qword_1007F9E10;
LABEL_7:
          sub_10001457C(v26, v27);
        }
LABEL_8:

        goto LABEL_9;
      }
      _s10PhotoAssetCMa(0);
      uint64_t v36 = swift_dynamicCastClass();
      if (!v36 || !*(void *)(v36 + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata)) {
        goto LABEL_8;
      }
      swift_retain();
      uint64_t v37 = v117;
      sub_1000395AC(v117);
      swift_release();
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v113)(v37, 1, v116))
      {
        os_log_type_t v42 = v108;
        sub_10043E748(v37, (uint64_t)v108, _s10PhotoAssetC9PhotoDataVMa);
        sub_10001457C(v117, (uint64_t *)&unk_100804080);
        uint64_t v33 = *v42;
        uint64_t v32 = v42[1];
        swift_bridgeObjectRetain();
        sub_100440B48((uint64_t)v42, _s10PhotoAssetC9PhotoDataVMa);
        uint64_t v24 = v112;

        if (!v32) {
          goto LABEL_32;
        }
        goto LABEL_27;
      }
      sub_10001457C(v37, (uint64_t *)&unk_100804080);

      uint64_t v24 = v112;
LABEL_9:
      if (v22 == ++v23) {
        goto LABEL_36;
      }
    }
    if (*(void *)(v30 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata))
    {
      swift_retain();
      sub_1000398E0((uint64_t)v18);
      swift_release();
      if (!(*v24)(v18, 1, v122))
      {
        unint64_t v31 = v119;
        sub_10043E748((uint64_t)v18, (uint64_t)v119, _s14LivePhotoAssetC13LivePhotoDataVMa);
        sub_10001457C((uint64_t)v18, (uint64_t *)&unk_100804090);
        uint64_t v33 = *v31;
        uint64_t v32 = v31[1];
        swift_bridgeObjectRetain();
        uint64_t v34 = _s14LivePhotoAssetC13LivePhotoDataVMa;
        goto LABEL_26;
      }
      uint64_t v26 = (uint64_t)v18;
      uint64_t v27 = (uint64_t *)&unk_100804090;
      goto LABEL_7;
    }
    goto LABEL_8;
  }
  uint64_t v123 = (char *)_swiftEmptyArrayStorage;
LABEL_36:
  swift_bridgeObjectRelease_n();
  aBlock[0] = v114;
  sub_1000C8C2C((uint64_t)v123);
  unint64_t v44 = v124;
  BOOL v43 = (char *)aBlock[0];
  if (v124 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v123 = v43;
    if (v20) {
      goto LABEL_38;
    }
LABEL_56:
    uint64_t v47 = (char *)_swiftEmptyArrayStorage;
    goto LABEL_57;
  }
  uint64_t v20 = *(void *)((v124 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v123 = v43;
  if (!v20) {
    goto LABEL_56;
  }
LABEL_38:
  if (v20 < 1) {
    goto LABEL_87;
  }
  uint64_t v45 = 0;
  unint64_t v46 = v44 & 0xC000000000000001;
  uint64_t v47 = (char *)_swiftEmptyArrayStorage;
  do
  {
    if (v46) {
      id v48 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v48 = *(id *)(v44 + 8 * v45 + 32);
    }
    uint64_t v49 = v48;
    id v50 = [v48 assetIdentifier:v107];
    if (v50)
    {
      uint64_t v51 = v50;
      uint64_t v52 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v54 = v53;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v47 = sub_1002A54A0(0, *((void *)v47 + 2) + 1, 1, v47);
      }
      unint64_t v56 = *((void *)v47 + 2);
      unint64_t v55 = *((void *)v47 + 3);
      if (v56 >= v55 >> 1) {
        uint64_t v47 = sub_1002A54A0((char *)(v55 > 1), v56 + 1, 1, v47);
      }
      *((void *)v47 + 2) = v56 + 1;
      id v57 = &v47[16 * v56];
      *((void *)v57 + 4) = v52;
      *((void *)v57 + 5) = v54;
      unint64_t v44 = v124;
    }
    else
    {
    }
    ++v45;
  }
  while (v20 != v45);
LABEL_57:
  swift_bridgeObjectRelease();
  uint64_t v58 = v123;
  uint64_t v59 = swift_bridgeObjectRetain();
  uint64_t v60 = sub_100388854(v59);
  swift_bridgeObjectRelease();
  uint64_t v61 = swift_bridgeObjectRetain();
  uint64_t v62 = sub_100388854(v61);
  swift_bridgeObjectRelease();
  char v63 = sub_10041C014(v60, v62);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v63)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v64 = [v111 sheetPresentationController];
    if (v64)
    {
      unint64_t v65 = (unint64_t)v64;
      id v66 = [v64 detents];
      sub_10001B284(0, (unint64_t *)&qword_1007FB5F0);
      uint64_t v20 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v124 = v65;
      if ((unint64_t)v20 >> 62) {
        goto LABEL_88;
      }
      uint64_t v67 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      if (v67)
      {
        while (1)
        {
          unint64_t v68 = self;
          uint64_t v69 = 4;
          while (1)
          {
            if ((v20 & 0xC000000000000001) != 0) {
              id v70 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
            }
            else {
              id v70 = *(id *)(v20 + 8 * v69);
            }
            id v71 = v70;
            uint64_t v72 = v69 - 3;
            if (__OFADD__(v69 - 4, 1)) {
              goto LABEL_85;
            }
            id v73 = [v68 largeDetent];
            char v74 = static NSObject.== infix(_:_:)();

            if ((v74 & 1) == 0) {
              break;
            }

            ++v69;
            if (v72 == v67) {
              goto LABEL_68;
            }
          }
          swift_bridgeObjectRelease_n();
          id v92 = [v71 identifier];

          id v93 = (id)v124;
          id v94 = [(id)v124 selectedDetentIdentifier];
          if (v94)
          {
            uint64_t v95 = v94;
            uint64_t v96 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v98 = v97;
            if (v96 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v98 == v99)
            {
              id v100 = v92;

              swift_bridgeObjectRelease_n();
LABEL_82:

              return;
            }
            char v101 = _stringCompareWithSmolCheck(_:_:expecting:)();
            id v102 = v92;

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v101) {
              goto LABEL_82;
            }
          }
          [v109 becomeFirstResponder:v107];
          uint64_t v20 = swift_allocObject();
          *(void *)(v20 + 16) = v93;
          *(void *)(v20 + 24) = v92;
          uint64_t v103 = swift_allocObject();
          *(void *)(v103 + 16) = sub_100440B20;
          *(void *)(v103 + 24) = v20;
          aBlock[4] = sub_10001AC84;
          aBlock[5] = v103;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_1003F44E4;
          aBlock[3] = &unk_1007AAAA0;
          uint64_t v104 = _Block_copy(aBlock);
          id v105 = v92;
          id v106 = v93;
          swift_retain();
          swift_release();
          [v106 animateChanges:v104];

          _Block_release(v104);
          LOBYTE(v106) = swift_isEscapingClosureAtFileLocation();
          swift_release();
          swift_release();
          if ((v106 & 1) == 0) {
            break;
          }
          __break(1u);
LABEL_85:
          __break(1u);
LABEL_86:
          __break(1u);
LABEL_87:
          __break(1u);
LABEL_88:
          swift_bridgeObjectRetain();
          uint64_t v67 = _CocoaArrayWrapper.endIndex.getter();
          if (!v67) {
            goto LABEL_68;
          }
        }
      }
      else
      {
LABEL_68:
        swift_bridgeObjectRelease_n();
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_100438AA0((uint64_t)v58, v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v75 + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v76 = type metadata accessor for TaskPriority();
      uint64_t v77 = (uint64_t)v107;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v76 - 8) + 56))(v107, 1, 1, v76);
      type metadata accessor for MainActor();
      id v78 = v109;
      uint64_t v79 = static MainActor.shared.getter();
      uint64_t v80 = (void *)swift_allocObject();
      v80[2] = v79;
      v80[3] = &protocol witness table for MainActor;
      v80[4] = v78;
      v80[5] = v75;
      sub_100328A60(v77, (uint64_t)&unk_10080CBA8, (uint64_t)v80);
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v81 = (void *)sub_100438AA0((uint64_t)v47, v58);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v81[2]
        && (uint64_t v83 = v81[4],
            uint64_t v82 = v81[5],
            swift_bridgeObjectRetain_n(),
            swift_bridgeObjectRelease(),
            uint64_t v84 = sub_100438C68(v44, v83, v82),
            swift_bridgeObjectRelease(),
            v84))
      {
        uint64_t v85 = type metadata accessor for TaskPriority();
        uint64_t v86 = (uint64_t)v107;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v107, 1, 1, v85);
        type metadata accessor for MainActor();
        id v87 = v109;
        id v88 = v84;
        id v89 = v111;
        uint64_t v90 = static MainActor.shared.getter();
        Swift::Bool v91 = (void *)swift_allocObject();
        v91[2] = v90;
        v91[3] = &protocol witness table for MainActor;
        v91[4] = v87;
        v91[5] = v88;
        v91[6] = v89;
        v91[7] = v83;
        v91[8] = v82;
        sub_100328A60(v86, (uint64_t)&unk_10080CBB8, (uint64_t)v91);
        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t sub_1004179F0(uint64_t a1, void *a2)
{
  uint64_t v5 = sub_100010218(&qword_1007FA1D0);
  *(void *)&double v6 = __chkstk_darwin(v5 - 8).n128_u64[0];
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = [a2 cameraDevice:v6];
  id v10 = [self standardUserDefaults];
  NSString v11 = String._bridgeToObjectiveC()();
  [v10 setInteger:v9 forKey:v11];

  uint64_t v12 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v8, 1, 1, v12);
  type metadata accessor for MainActor();
  id v13 = v2;
  swift_bridgeObjectRetain();
  uint64_t v14 = static MainActor.shared.getter();
  uint64_t v15 = (void *)swift_allocObject();
  void v15[2] = v14;
  v15[3] = &protocol witness table for MainActor;
  v15[4] = v13;
  v15[5] = a1;
  sub_100328A60((uint64_t)v8, (uint64_t)&unk_10080CB48, (uint64_t)v15);
  return swift_release();
}

uint64_t sub_100417B98(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  v2[7] = type metadata accessor for MainActor();
  v2[8] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[9] = v5;
  v2[10] = v4;
  return _swift_task_switch(sub_100417C90, v5, v4);
}

uint64_t sub_100417C90()
{
  uint64_t v1 = (char *)v0[3];
  uint64_t v2 = *(void *)&v1[OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry];
  uint64_t v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[11] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_100417D48;
  uint64_t v5 = v0[2];
  return sub_10042AEA0(v2, v5);
}

uint64_t sub_100417D48(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  return _swift_task_switch(sub_100417E70, v4, v3);
}

uint64_t sub_100417E70()
{
  uint64_t v1 = *(void **)(v0 + 96);

  if (v1) {
    uint64_t v2 = sub_100418058;
  }
  else {
    uint64_t v2 = sub_100417EEC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100417EEC()
{
  *(void *)(v0 + 104) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100417F78, v2, v1);
}

uint64_t sub_100417F78()
{
  swift_release();
  id v1 = [self defaultCenter];
  if (qword_1007F6EA0 != -1) {
    swift_once();
  }
  [v1 postNotificationName:qword_10083D428 object:*(void *)(v0 + 24) userInfo:0];

  return _swift_task_switch(sub_100418058, 0, 0);
}

uint64_t sub_100418058()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_context);
  v0[14] = v2;
  if (v2 && (uint64_t v3 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO), (v0[15] = v3) != 0))
  {
    uint64_t v5 = v0[5];
    uint64_t v4 = v0[6];
    uint64_t v6 = v0[4];
    uint64_t v7 = swift_allocObject();
    v0[16] = v7;
    *(void *)(v7 + 16) = v3;
    *(unsigned char *)(v7 + 24) = 1;
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v6);
    id v8 = v3;
    v2;
    id v9 = (void *)swift_task_alloc();
    v0[17] = v9;
    *id v9 = v0;
    v9[1] = sub_1004181FC;
    uint64_t v10 = v0[6];
    return NSManagedObjectContext.perform<A>(schedule:_:)(v9, v10, sub_1003D2B80, v7, (char *)&type metadata for () + 8);
  }
  else
  {
    uint64_t v11 = v0[9];
    uint64_t v12 = v0[10];
    return _swift_task_switch(sub_1004183D8, v11, v12);
  }
}

uint64_t sub_1004181FC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  uint64_t v2 = *(void *)(*(void *)v0 + 40);
  uint64_t v3 = *(void *)(*(void *)v0 + 32);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_100418370, 0, 0);
}

uint64_t sub_100418370()
{
  uint64_t v1 = *(void **)(v0 + 112);

  uint64_t v2 = *(void *)(v0 + 72);
  uint64_t v3 = *(void *)(v0 + 80);
  return _swift_task_switch(sub_1004183D8, v2, v3);
}

uint64_t sub_1004183D8()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100418450(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_1007FA1D0);
  *(void *)&double v4 = __chkstk_darwin(v3 - 8).n128_u64[0];
  uint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [v1 presentedViewController];
  if (v7)
  {
    id v8 = v7;
    type metadata accessor for CanvasTranscribingAudioPickerController();
    id v7 = (id)swift_dynamicCastClass();
    if (!v7)
    {

      id v7 = 0;
    }
  }
  BOOL v9 = v7 != 0;

  uint64_t v10 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
  type metadata accessor for MainActor();
  id v11 = a1;
  id v12 = v1;
  uint64_t v13 = static MainActor.shared.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v13;
  *(void *)(v14 + 24) = &protocol witness table for MainActor;
  *(void *)(v14 + 32) = v11;
  *(unsigned char *)(v14 + 40) = v9;
  *(void *)(v14 + 48) = v12;
  sub_100328A60((uint64_t)v6, (uint64_t)&unk_10080CAF8, v14);
  return swift_release();
}

void sub_1004185D0(uint64_t a1)
{
  id v1 = *(id *)(a1 + 24);
  sub_100439298(v1, 0x292865766173, 0xE600000000000000, 0x6E6F6320706D6574, 0xEC00000074786574);

  id v11 = 0;
  if ([v1 save:&v11])
  {
    id v2 = v11;
  }
  else
  {
    id v3 = v11;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F6DB8 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100026A54(v4, (uint64_t)qword_100807C00);
    swift_retain();
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      id v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412546;
      id v11 = v1;
      id v9 = v1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v8 = v1;
      swift_release_n();
      *(_WORD *)(v7 + 12) = 2112;
      swift_errorRetain();
      uint64_t v10 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v11 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v8[1] = v10;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Error saving editing context %@: %@", (uint8_t *)v7, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_release_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

void sub_1004188C8(uint64_t a1)
{
  id v1 = *(id *)(a1 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_context);
  sub_100439298(v1, 0x292865766173, 0xE600000000000000, 0x6E6F6320706D6574, 0xEC00000074786574);

  id v11 = 0;
  if ([v1 save:&v11])
  {
    id v2 = v11;
  }
  else
  {
    id v3 = v11;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F6DB8 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100026A54(v4, (uint64_t)qword_100807C00);
    swift_retain();
    swift_errorRetain();
    swift_retain();
    swift_errorRetain();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = swift_slowAlloc();
      id v8 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 138412546;
      id v11 = v1;
      id v9 = v1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v8 = v1;
      swift_release_n();
      *(_WORD *)(v7 + 12) = 2112;
      swift_errorRetain();
      uint64_t v10 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v11 = v10;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v8[1] = v10;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Error saving editing context %@: %@", (uint8_t *)v7, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_release_n();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

void sub_100418BCC(uint64_t a1, void *a2)
{
  sub_100439298(a2, 0x292865766173, 0xE600000000000000, 0xD000000000000013, 0x800000010069B8D0);
  id v15 = 0;
  if ([a2 save:&v15])
  {
    id v3 = v15;
  }
  else
  {
    id v4 = v15;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F6DB8 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100026A54(v5, (uint64_t)qword_100807C00);
    id v6 = a2;
    swift_errorRetain();
    id v7 = v6;
    swift_errorRetain();
    id v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      id v11 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 138412546;
      id v15 = v7;
      log = v8;
      id v12 = v7;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v11 = v7;

      *(_WORD *)(v10 + 12) = 2112;
      swift_errorRetain();
      uint64_t v13 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v15 = v13;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      v11[1] = v13;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, log, v9, "Error saving parent context %@: %@", (uint8_t *)v10, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();

      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_100418EB8()
{
  uint64_t v0 = sub_100010218(&qword_1007F99B8);
  __chkstk_darwin(v0);
  id v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100035380(v3, qword_10080C9F8);
  uint64_t v4 = sub_100026A54(v0, (uint64_t)qword_10080C9F8);
  id v5 = (id)PFCurrentPlatformLivePhotoBundleType();
  if (v5)
  {
    id v6 = v5;
    static UTType._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v7 = type metadata accessor for UTType();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v2, 0, 1, v7);
  }
  else
  {
    uint64_t v8 = type metadata accessor for UTType();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v2, 1, 1, v8);
  }
  return sub_10002C4EC((uint64_t)v2, v4, &qword_1007F99B8);
}

uint64_t sub_100418FF4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_10080CA10);
  sub_100026A54(v0, (uint64_t)qword_10080CA10);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1004190F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[5] = a4;
  v5[6] = a5;
  v5[7] = type metadata accessor for MainActor();
  v5[8] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[9] = v7;
  v5[10] = v6;
  return _swift_task_switch(sub_10041918C, v7, v6);
}

uint64_t sub_10041918C()
{
  uint64_t v1 = *(void *)(v0[5] + OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry);
  v0[11] = v1;
  uint64_t v2 = swift_allocObject();
  v0[12] = v2;
  swift_unknownObjectWeakInit();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100419280;
  uint64_t v4 = v0[6];
  return sub_1004199C8(v1, v4, (uint64_t)&unk_10080CAA8, v2);
}

uint64_t sub_100419280(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  uint64_t v4 = (void *)*v2;
  v4[2] = v2;
  v4[3] = a1;
  v4[4] = a2;
  v4[14] = a2;
  swift_task_dealloc();
  swift_release();
  uint64_t v5 = v3[10];
  uint64_t v6 = v3[9];
  return _swift_task_switch(sub_1004193CC, v6, v5);
}

uint64_t sub_1004193CC()
{
  uint64_t v1 = *(double **)(v0 + 112);
  if (v1)
  {
    if (*(unsigned char *)(v0 + 24) == 1)
    {
      uint64_t v2 = *(void **)(v0 + 40);
      swift_bridgeObjectRelease();
      id v3 = [v2 viewIfLoaded];
      id v4 = [v3 window];

      if ((v4
         || (id v5 = [*(id *)(v0 + 40) presentedViewController],
             v5,
             v5))
        && ([*(id *)(v0 + 40) isBeingDismissed] & 1) == 0)
      {
        return _swift_task_switch(sub_10041958C, 0, 0);
      }
      else
      {
        swift_release();
        uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
        return v6();
      }
    }
  }
  else
  {
    uint64_t v1 = _swiftEmptyArrayStorage;
  }
  *(void *)(v0 + 128) = v1;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v8;
  void *v8 = v0;
  v8[1] = sub_1004196A0;
  uint64_t v9 = *(void *)(v0 + 88);
  return sub_10041A54C(v9, (uint64_t)v1);
}

uint64_t sub_10041958C()
{
  *(void *)(v0 + 120) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100419618, v2, v1);
}

uint64_t sub_100419618()
{
  swift_release();
  sub_10043989C(0, 0, (uint64_t)AudioRecordingActivityState.hash(into:), 0);
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  return _swift_task_switch(sub_1003AB828, v1, v2);
}

uint64_t sub_1004196A0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_100440CB8, v3, v2);
}

uint64_t sub_1004197E4(uint64_t a1)
{
  *(void *)(v1 + 40) = a1;
  type metadata accessor for MainActor();
  *(void *)(v1 + 48) = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10041987C, v3, v2);
}

uint64_t sub_10041987C()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = Strong;
    id v3 = [Strong viewIfLoaded];
    id v4 = [v3 window];

    if (v4
      || (id v5 = [v2 presentedViewController], v5, v5))
    {
      if (([v2 isBeingDismissed] & 1) == 0)
      {
        uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC7Journal20CanvasViewController_overflowBarButtonItem];
        if (v6)
        {
          id v7 = v6;
          Class isa = sub_100449F38().super.super.isa;
          [v7 setMenu:isa];
        }
        sub_100441640();
      }
    }
  }
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_1004199C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[12] = a4;
  v5[13] = v4;
  v5[10] = a2;
  v5[11] = a3;
  v5[9] = a1;
  v5[14] = swift_getObjectType();
  v5[15] = sub_100010218((uint64_t *)&unk_1007FEB40);
  v5[16] = swift_task_alloc();
  sub_100010218(&qword_100800950);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for UUID();
  v5[20] = v6;
  v5[21] = *(void *)(v6 - 8);
  v5[22] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[23] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[24] = v8;
  v5[25] = v7;
  return _swift_task_switch(sub_100419B50, v8, v7);
}

uint64_t sub_100419B50()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[20];
  uint64_t v4 = v0[14];
  id v5 = (void *)v0[10];
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  id v6 = [v5 suggestionIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v7 = UUID.uuidString.getter();
  uint64_t v9 = v8;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v1 + 8);
  v0[26] = v10;
  v0[27] = (v1 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v10(v2, v3);
  v11._countAndFlagsBits = v7;
  v11._object = v9;
  String.append(_:)(v11);
  swift_bridgeObjectRelease();
  v12._countAndFlagsBits = 93;
  v12._object = (void *)0xE100000000000000;
  String.append(_:)(v12);
  v0[28] = 0xD000000000000014;
  v0[29] = 0x800000010069D100;
  uint64_t v13 = (void *)swift_allocObject();
  v0[30] = v13;
  v13[2] = 0xD000000000000014;
  v13[3] = 0x800000010069D100;
  v13[4] = v4;
  uint64_t v14 = (void *)swift_allocObject();
  v0[31] = v14;
  v14[2] = 0xD000000000000014;
  v14[3] = 0x800000010069D100;
  void v14[4] = v4;
  swift_bridgeObjectRetain_n();
  sub_10043A1C8(0xD00000000000001BLL, 0x800000010069D120, 0xD000000000000014, 0x800000010069D100, (uint64_t (*)(void))&static os_log_type_t.debug.getter);
  uint64_t v15 = swift_allocObject();
  v0[32] = v15;
  *(void *)(v15 + 16) = 0;
  type metadata accessor for AssetProcessingUtil();
  swift_unknownObjectWeakInit();
  uint64_t v16 = (void *)swift_allocObject();
  v0[33] = v16;
  v16[2] = v0 + 8;
  v16[3] = sub_10043DF80;
  v16[4] = v13;
  v16[5] = sub_10043DFB0;
  v16[6] = v14;
  v16[7] = v15;
  swift_retain();
  swift_retain();
  swift_retain();
  uint64_t v17 = (void *)swift_task_alloc();
  v0[34] = v17;
  void *v17 = v0;
  v17[1] = sub_100419E24;
  uint64_t v18 = v0[11];
  uint64_t v19 = v0[12];
  uint64_t v20 = v0[9];
  uint64_t v21 = v0[10];
  return sub_10026CEB8(v21, v20, v18, v19, (uint64_t)&unk_10080CAC0, (uint64_t)v16);
}

uint64_t sub_100419E24(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 280) = a1;
  swift_task_dealloc();
  swift_release();
  swift_unknownObjectWeakDestroy();
  uint64_t v3 = *(void *)(v2 + 200);
  uint64_t v4 = *(void *)(v2 + 192);
  return _swift_task_switch(sub_100419F7C, v4, v3);
}

uint64_t sub_100419F7C()
{
  int v1 = *(unsigned __int8 *)(v0 + 280);
  swift_release();
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  unint64_t v2 = 0xD000000000000014;
  unint64_t v3 = 0x800000010069D180;
  if (v1 != 1)
  {
    unint64_t v2 = 0xD00000000000001DLL;
    unint64_t v3 = 0x800000010069D160;
  }
  if (v1) {
    uint64_t v4 = v2;
  }
  else {
    uint64_t v4 = 0x73736563637573;
  }
  if (v1) {
    unint64_t v5 = v3;
  }
  else {
    unint64_t v5 = 0xE700000000000000;
  }
  int v6 = *(unsigned __int8 *)(v0 + 280);
  uint64_t v8 = *(void *)(v0 + 224);
  unint64_t v7 = *(void *)(v0 + 232);
  unint64_t v9 = v5;
  String.append(_:)(*(Swift::String *)&v4);
  swift_bridgeObjectRelease();
  sub_10043A1C8(0xD000000000000012, 0x800000010069D140, v8, v7, (uint64_t (*)(void))&static os_log_type_t.debug.getter);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v6)
  {
    uint64_t v10 = (uint64_t *)(*(void *)(v0 + 72) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
    swift_beginAccess();
    uint64_t v11 = *v10;
    if ((unint64_t)*v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t result = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v12 = result;
      if (result) {
        goto LABEL_13;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      if (v12)
      {
LABEL_13:
        if (v12 < 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v14 = 0;
        uint64_t v15 = *(void *)(v0 + 168);
        id v48 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56);
        unint64_t v49 = v11 & 0xC000000000000001;
        uint64_t v46 = *(void *)(v0 + 120);
        uint64_t v47 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
        os_log_type_t v42 = (void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32);
        uint64_t v50 = v12;
        uint64_t v51 = v11;
        while (1)
        {
          id v19 = v49 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v11 + 8 * v14 + 32);
          uint64_t v20 = v19;
          uint64_t v21 = *(void *)(v0 + 152);
          uint64_t v22 = *(void *)(v0 + 160);
          uint64_t v23 = *(void *)(v0 + 144);
          uint64_t v24 = *(void *)(v0 + 128);
          uint64_t v25 = *(void **)(v0 + 80);
          uint64_t v26 = (uint64_t)v19 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_suggestionId;
          swift_beginAccess();
          sub_10001B220(v26, v21, &qword_100800950);
          id v27 = [v25 suggestionIdentifier];
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          (*v48)(v23, 0, 1, v22);
          uint64_t v28 = v24 + *(int *)(v46 + 48);
          sub_10001B220(v21, v24, &qword_100800950);
          sub_10001B220(v23, v28, &qword_100800950);
          uint64_t v29 = *v47;
          int v30 = (*v47)(v24, 1, v22);
          uint64_t v31 = *(void *)(v0 + 160);
          if (v30 == 1) {
            break;
          }
          sub_10001B220(*(void *)(v0 + 128), *(void *)(v0 + 136), &qword_100800950);
          int v33 = v29(v28, 1, v31);
          uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v0 + 208);
          if (v33 == 1)
          {
            uint64_t v16 = *(void *)(v0 + 152);
            uint64_t v17 = *(void *)(v0 + 160);
            uint64_t v18 = *(void *)(v0 + 136);
            sub_10001457C(*(void *)(v0 + 144), &qword_100800950);
            sub_10001457C(v16, &qword_100800950);
            v34(v18, v17);
LABEL_16:
            sub_10001457C(*(void *)(v0 + 128), (uint64_t *)&unk_1007FEB40);
            goto LABEL_17;
          }
          uint64_t v35 = *(void *)(v0 + 176);
          uint64_t v36 = *(void *)(v0 + 160);
          uint64_t v37 = *(void *)(v0 + 136);
          uint64_t v43 = *(void *)(v0 + 144);
          uint64_t v44 = *(void *)(v0 + 152);
          uint64_t v45 = *(void *)(v0 + 128);
          (*v42)(v35, v28, v36);
          sub_100438EA8((unint64_t *)&qword_1007FEB50, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v38 = dispatch thunk of static Equatable.== infix(_:_:)();
          v34(v35, v36);
          sub_10001457C(v43, &qword_100800950);
          sub_10001457C(v44, &qword_100800950);
          v34(v37, v36);
          sub_10001457C(v45, &qword_100800950);
          if (v38) {
            goto LABEL_26;
          }
LABEL_17:
          ++v14;

          uint64_t v11 = v51;
          if (v50 == v14) {
            goto LABEL_31;
          }
        }
        uint64_t v32 = *(void *)(v0 + 152);
        sub_10001457C(*(void *)(v0 + 144), &qword_100800950);
        sub_10001457C(v32, &qword_100800950);
        if (v29(v28, 1, v31) == 1)
        {
          sub_10001457C(*(void *)(v0 + 128), &qword_100800950);
LABEL_26:
          id v39 = v20;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          goto LABEL_17;
        }
        goto LABEL_16;
      }
    }
LABEL_31:
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    goto LABEL_32;
  }
  swift_release();
  swift_release();
LABEL_32:
  uint64_t v40 = *(unsigned __int8 *)(v0 + 280);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v41 = *(uint64_t (**)(uint64_t, double *))(v0 + 8);
  return v41(v40, _swiftEmptyArrayStorage);
}

uint64_t sub_10041A54C(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  v3[6] = a1;
  uint64_t v4 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = type metadata accessor for MainActor();
  v3[13] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[14] = v6;
  v3[15] = v5;
  return _swift_task_switch(sub_10041A648, v6, v5);
}

uint64_t sub_10041A648()
{
  unint64_t v1 = *(void *)(v0 + 56);
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 128) = v2;
    if (v2) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    *(void *)(v0 + 128) = v2;
    if (v2)
    {
LABEL_3:
      uint64_t v3 = sub_100585038();
      BOOL v4 = sub_100038BD0(v3);
      goto LABEL_6;
    }
  }
  BOOL v4 = 0;
LABEL_6:
  id v5 = [*(id *)(v0 + 64) viewIfLoaded];
  id v6 = [v5 window];

  if (!v6
    && (id v7 = [*(id *)(v0 + 64) presentedViewController],
        v7,
        !v7)
    || ([*(id *)(v0 + 64) isBeingDismissed] & 1) != 0)
  {
    if (!v4) {
      goto LABEL_31;
    }
    if (!v2)
    {
      if (qword_1007F6F70 == -1) {
        goto LABEL_20;
      }
      goto LABEL_43;
    }
    if (v2 >= 1)
    {
      uint64_t v8 = *(void *)(v0 + 56);
      *(void *)(v0 + 152) = 0;
      swift_bridgeObjectRetain();
      if ((v8 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(v8 + 32);
      }
      uint64_t v20 = (uint64_t)v9;
      *(void *)(v0 + 160) = v9;
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 168) = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_10041AD10;
      return sub_1000E99A4(v20);
    }
    while (1)
    {
      __break(1u);
LABEL_43:
      swift_once();
LABEL_20:
      uint64_t v13 = type metadata accessor for Logger();
      sub_100026A54(v13, (uint64_t)qword_10080CA10);
      swift_bridgeObjectRetain_n();
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.error.getter();
      BOOL v16 = os_log_type_enabled(v14, v15);
      unint64_t v17 = *(void *)(v0 + 56);
      if (v16)
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)uint64_t v18 = 134217984;
        if (v17 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v19 = _CocoaArrayWrapper.endIndex.getter();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v19 = *(void *)((*(void *)(v0 + 56) & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        swift_bridgeObjectRelease();
        *(void *)(v0 + 40) = v19;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v14, v15, "Auto-ejected %ld asset(s) because the entry was left in a \"too large\" state w/o a controller.", v18, 0xCu);
        swift_slowDealloc();
      }
      else
      {
        swift_bridgeObjectRelease_n();
      }

LABEL_31:
      *(unsigned char *)(v0 + 289) = sub_10018ACD8();
      uint64_t v22 = (void *)sub_100339674();
      uint64_t v23 = v22;
      *(void *)(v0 + 176) = v22;
      if (v22)
      {
        sub_10033AA5C(v22);
      }
      uint64_t v25 = (void *)(*(void *)(v0 + 48) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
      swift_beginAccess();
      if (*v25 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v26 = *(void *)((*v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      BOOL v27 = v23 != 0;
      BOOL v28 = __OFSUB__(v26, v27);
      uint64_t v29 = v26 - v27;
      if (!v28) {
        break;
      }
      __break(1u);
    }
    *(void *)(v0 + 184) = v29;
    uint64_t v10 = sub_10041B178;
    goto LABEL_37;
  }
  if (v4)
  {
    uint64_t v10 = sub_10041AAFC;
LABEL_37:
    return _swift_task_switch(v10, 0, 0);
  }
  int v30 = (uint64_t (*)(void))((char *)&dword_10080CA48 + dword_10080CA48);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_10041ABF0;
  return v30();
}

uint64_t sub_10041AAFC()
{
  *(void *)(v0 + 136) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10041AB88, v2, v1);
}

uint64_t sub_10041AB88()
{
  swift_release();
  sub_1004383D0();
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  return _swift_task_switch(sub_100440CB4, v1, v2);
}

uint64_t sub_10041ABF0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  return _swift_task_switch(sub_100440CB4, v3, v2);
}

uint64_t sub_10041AD10()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  return _swift_task_switch(sub_10041AE30, v3, v2);
}

uint64_t sub_10041AE30()
{
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(void *)(v0 + 128);

  if (v1 + 1 == v2)
  {
    swift_bridgeObjectRelease();
    if (qword_1007F6F70 != -1) {
      swift_once();
    }
    uint64_t v3 = type metadata accessor for Logger();
    sub_100026A54(v3, (uint64_t)qword_10080CA10);
    swift_bridgeObjectRetain_n();
    uint64_t v4 = Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.error.getter();
    BOOL v6 = os_log_type_enabled(v4, v5);
    unint64_t v7 = *(void *)(v0 + 56);
    if (v6)
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v8 = 134217984;
      if (v7 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v9 = *(void *)((*(void *)(v0 + 56) & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      *(void *)(v0 + 40) = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "Auto-ejected %ld asset(s) because the entry was left in a \"too large\" state w/o a controller.", v8, 0xCu);
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    *(unsigned char *)(v0 + 289) = sub_10018ACD8();
    BOOL v16 = (void *)sub_100339674();
    unint64_t v17 = v16;
    *(void *)(v0 + 176) = v16;
    if (v16)
    {
      sub_10033AA5C(v16);
    }
    uint64_t v19 = (void *)(*(void *)(v0 + 48) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
    uint64_t v20 = swift_beginAccess();
    if (*v19 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
      uint64_t v20 = swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v23 = *(void *)((*v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    BOOL v24 = v17 != 0;
    BOOL v25 = __OFSUB__(v23, v24);
    uint64_t v26 = v23 - v24;
    if (v25)
    {
      __break(1u);
    }
    else
    {
      *(void *)(v0 + 184) = v26;
      uint64_t v20 = (uint64_t)sub_10041B178;
      uint64_t v21 = 0;
      uint64_t v22 = 0;
    }
    return _swift_task_switch(v20, v21, v22);
  }
  else
  {
    uint64_t v10 = *(void *)(v0 + 152) + 1;
    *(void *)(v0 + 152) = v10;
    uint64_t v11 = *(void *)(v0 + 56);
    if ((v11 & 0xC000000000000001) != 0) {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v12 = *(id *)(v11 + 8 * v10 + 32);
    }
    uint64_t v13 = (uint64_t)v12;
    *(void *)(v0 + 160) = v12;
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 168) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_10041AD10;
    return sub_1000E99A4(v13);
  }
}

uint64_t sub_10041B178()
{
  uint64_t v2 = *(void *)(v0 + 80);
  uint64_t v1 = *(void *)(v0 + 88);
  *(void *)(v0 + 192) = *(void *)(*(void *)(v0 + 48) + 24);
  *(_DWORD *)(v0 + 284) = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
  uint64_t v3 = *(void (**)(uint64_t))(v2 + 104);
  *(void *)(v0 + 200) = v3;
  *(void *)(v0 + 208) = (v2 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v3(v1);
  swift_retain();
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10041B28C;
  uint64_t v5 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 48);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 288, v5, sub_10005F0F8, v6, &type metadata for Bool);
}

uint64_t sub_10041B28C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 88);
  uint64_t v3 = *(void *)(*v0 + 80);
  uint64_t v4 = *(void *)(*v0 + 72);
  swift_task_dealloc();
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 224) = v5;
  *(void *)(v1 + 232) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v4);
  return _swift_task_switch(sub_10041B414, 0, 0);
}

uint64_t sub_10041B414()
{
  *(unsigned char *)(v0 + 290) = *(unsigned char *)(v0 + 288);
  return _swift_task_switch(sub_10041B434, *(void *)(v0 + 112), *(void *)(v0 + 120));
}

uint64_t sub_10041B434()
{
  BOOL v1 = *(unsigned char *)(v0 + 289) == 1 && *(void *)(v0 + 184) <= 0;
  if (!v1 || (*(unsigned char *)(v0 + 290) & 1) != 0)
  {
    uint64_t v5 = (uint64_t (__cdecl *)())((char *)&dword_10080CA48 + dword_10080CA48);
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_10041BB54;
    return v5();
  }
  else
  {
    if (qword_1007F7CE0 != -1) {
      swift_once();
    }
    uint64_t v2 = qword_10083EA18;
    *(void *)(v0 + 240) = qword_10083EA18;
    return _swift_task_switch(sub_10041B568, v2, 0);
  }
}

uint64_t sub_10041B568()
{
  (*(void (**)(void, void, void))(v0 + 200))(*(void *)(v0 + 88), *(unsigned int *)(v0 + 284), *(void *)(v0 + 72));
  swift_retain();
  BOOL v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v1;
  *BOOL v1 = v0;
  v1[1] = sub_10041B648;
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = *(void *)(v0 + 48);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v1, v2, sub_10005EF68, v3, (char *)&type metadata for () + 8);
}

uint64_t sub_10041B648()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 240);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 224);
  uint64_t v3 = *(void *)(*(void *)v0 + 88);
  uint64_t v4 = *(void *)(*(void *)v0 + 72);
  swift_task_dealloc();
  swift_release();
  v2(v3, v4);
  return _swift_task_switch(sub_10041B7E0, v1, 0);
}

uint64_t sub_10041B7E0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 256) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10041B870;
  return sub_100580C88();
}

uint64_t sub_10041B870()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  return _swift_task_switch(sub_10041B990, v3, v2);
}

uint64_t sub_10041B990()
{
  swift_release();
  if (qword_1007F6F70 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_10080CA10);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    char v4 = *(unsigned char *)(v0 + 289);
    BOOL v5 = *(void *)(v0 + 184) > 0;
    BOOL v6 = *(void *)(v0 + 176) != 0;
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 67109632;
    *(_DWORD *)(v0 + 272) = (v4 & 1) == 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 8) = 1024;
    *(_DWORD *)(v0 + 276) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *(_WORD *)(v7 + 14) = 1024;
    *(_DWORD *)(v0 + 280) = v5;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Deleted entry that was left in an invalid state w/o a controller (hasText=%{BOOL}d, hasReflection=%{BOOL}d, hasAssets=%{BOOL}d).", (uint8_t *)v7, 0x14u);
    swift_slowDealloc();
  }

  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_10041BB54()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  return _swift_task_switch(sub_10041BC74, v3, v2);
}

uint64_t sub_10041BC74()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10041BCDC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0) {
      uint64_t v5 = a1;
    }
    else {
      uint64_t v5 = a1 & 0xFFFFFFFFFFFFFF8;
    }
    if (v4)
    {
      if (a2 < 0) {
        uint64_t v6 = a2;
      }
      else {
        uint64_t v6 = a2 & 0xFFFFFFFFFFFFFF8;
      }
      goto _$ss10__CocoaSetV7isEqual2toSbAB_tF;
    }
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    goto LABEL_18;
  }
  if (v4)
  {
    if (a2 < 0) {
      uint64_t v7 = a2;
    }
    else {
      uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v8 = a1;
LABEL_18:
    sub_10043827C(v7, v8);
    return;
  }
  if (a1 == a2 || *(void *)(a1 + 16) != *(void *)(a2 + 16)) {
    return;
  }
  uint64_t v29 = a1 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(a1 + 56);
  uint64_t v6 = sub_10001B284(0, (unint64_t *)&qword_100800A40);
  int64_t v12 = 0;
  int64_t v30 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = a2 + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v14 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_46;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_56;
    }
    if (v16 >= v30) {
      return;
    }
    unint64_t v17 = *(void *)(v29 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v30) {
        return;
      }
      unint64_t v17 = *(void *)(v29 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v30) {
          return;
        }
        unint64_t v17 = *(void *)(v29 + 8 * v12);
        if (!v17)
        {
          int64_t v12 = v16 + 3;
          if (v16 + 3 >= v30) {
            return;
          }
          unint64_t v17 = *(void *)(v29 + 8 * v12);
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_45:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_46:
    Swift::Int v19 = *(void *)(a2 + 40);
    id v20 = *(id *)(*(void *)(a1 + 48) + 8 * v15);
    Swift::Int v21 = NSObject._rawHashValue(seed:)(v19);
    uint64_t v22 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v23 = v21 & ~v22;
    if (((*(void *)(v13 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
      goto LABEL_53;
    }
    int64_t v31 = v12;
    id v24 = *(id *)(*(void *)(a2 + 48) + 8 * v23);
    char v25 = static NSObject.== infix(_:_:)();

    if ((v25 & 1) == 0)
    {
      uint64_t v26 = ~v22;
      while (1)
      {
        unint64_t v23 = (v23 + 1) & v26;
        if (((*(void *)(v13 + ((v23 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v23) & 1) == 0) {
          break;
        }
        id v27 = *(id *)(*(void *)(a2 + 48) + 8 * v23);
        char v28 = static NSObject.== infix(_:_:)();

        if (v28) {
          goto LABEL_27;
        }
      }
LABEL_53:

      return;
    }
LABEL_27:

    int64_t v12 = v31;
  }
  int64_t v18 = v16 + 4;
  if (v18 >= v30) {
    return;
  }
  unint64_t v17 = *(void *)(v29 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_45;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v30) {
      return;
    }
    unint64_t v17 = *(void *)(v29 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_45;
    }
  }
LABEL_56:
  __break(1u);
_$ss10__CocoaSetV7isEqual2toSbAB_tF:
  __CocoaSet.isEqual(to:)(v6, v5);
}

uint64_t sub_10041C014(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_26;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_45;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11)
        {
          int64_t v12 = v3 + 4;
          if (v3 + 4 >= v30) {
            return 1;
          }
          unint64_t v11 = *(void *)(v29 + 8 * v12);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_25:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_26:
    uint64_t v14 = result;
    unint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    Hasher.init(_seed:)();
    swift_bridgeObjectRetain();
    String.hash(into:)();
    Swift::Int v18 = Hasher._finalize()();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_41;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    uint64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        id v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 5;
  if (v3 + 5 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 5;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_25;
    }
  }
LABEL_45:
  __break(1u);
  return result;
}

uint64_t sub_10041C2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[5] = v7;
  v5[6] = v6;
  return _swift_task_switch(sub_10041C350, v7, v6);
}

uint64_t sub_10041C350()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[7] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10022823C;
  uint64_t v3 = v0[3];
  return sub_10041C3F8(v1, v3);
}

uint64_t sub_10041C3F8(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  uint64_t v4 = _s10PhotoAssetC9PhotoDataVMa(0);
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100804080);
  v3[21] = swift_task_alloc();
  uint64_t v5 = _s10VideoAssetC9VideoDataVMa(0);
  v3[22] = v5;
  v3[23] = *(void *)(v5 - 8);
  v3[24] = swift_task_alloc();
  sub_100010218(&qword_1007F9E10);
  v3[25] = swift_task_alloc();
  uint64_t v6 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  v3[26] = v6;
  v3[27] = *(void *)(v6 - 8);
  v3[28] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100804090);
  v3[29] = swift_task_alloc();
  type metadata accessor for MainActor();
  v3[30] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[31] = v8;
  v3[32] = v7;
  return _swift_task_switch(sub_10041C638, v8, v7);
}

uint64_t sub_10041C638()
{
  uint64_t v86 = v0;
  unint64_t v1 = (unint64_t)_swiftEmptyArrayStorage;
  v0[14] = _swiftEmptyArrayStorage;
  uint64_t v2 = v0[16];
  uint64_t v78 = *(void *)(v2 + 16);
  if (!v78)
  {
LABEL_63:
    v0[33] = v1;
    if (!(v1 >> 62))
    {
      uint64_t v66 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t result = swift_bridgeObjectRetain();
      v0[34] = v66;
      if (v66) {
        goto LABEL_65;
      }
      goto LABEL_79;
    }
LABEL_78:
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v66 = result;
    v0[34] = result;
    if (result)
    {
LABEL_65:
      if (v66 < 1)
      {
        __break(1u);
      }
      else
      {
        v0[35] = 0;
        uint64_t v68 = v0[33];
        if ((v68 & 0xC000000000000001) != 0) {
          id v69 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v69 = *(id *)(v68 + 32);
        }
        uint64_t v70 = (uint64_t)v69;
        v0[36] = v69;
        id v71 = (void *)swift_task_alloc();
        v0[37] = v71;
        void *v71 = v0;
        v71[1] = sub_10041D0DC;
        return sub_1000E99A4(v70);
      }
      return result;
    }
LABEL_79:
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v72 = (uint64_t (*)(void))v0[1];
    return v72();
  }
  uint64_t v3 = v0[27];
  uint64_t v80 = v0[28];
  uint64_t v4 = v0[23];
  uint64_t v75 = v0[24];
  uint64_t v5 = v0[19];
  uint64_t v73 = v0[20];
  uint64_t v6 = v0[17];
  uint64_t v7 = (uint64_t *)(v6 + OBJC_IVAR____TtC7Journal20CanvasViewController_photoPickerActiveFetchRequests);
  uint64_t v8 = (uint64_t *)(v6 + OBJC_IVAR____TtC7Journal20CanvasViewController_photoPickerLatestAssetAdditions);
  uint64_t v77 = v2 + 32;
  swift_bridgeObjectRetain();
  uint64_t v81 = v7;
  swift_beginAccess();
  uint64_t v76 = v8;
  swift_beginAccess();
  uint64_t v9 = 0;
  uint64_t v84 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  uint64_t v79 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  char v74 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  while (1)
  {
    uint64_t v82 = v9;
    uint64_t v10 = (uint64_t *)(v77 + 16 * v9);
    unint64_t v11 = v10[1];
    uint64_t v83 = *v10;
    uint64_t v12 = *v81;
    uint64_t v13 = *(void *)(*v81 + 16);
    swift_bridgeObjectRetain();
    if (v13)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v14 = sub_10001B5D0(v83, v11);
      if (v15)
      {
        id v16 = *(id *)(*(void *)(v12 + 56) + 16 * v14);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_100439FB4(v83, v11, 0xD000000000000024, 0x800000010069D710);
        swift_beginAccess();
        swift_bridgeObjectRetain();
        id v17 = v16;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v85 = (void *)*v81;
        uint64_t v19 = v85;
        *uint64_t v81 = 0x8000000000000000;
        unint64_t v21 = sub_10001B5D0(v83, v11);
        uint64_t v22 = v19[2];
        BOOL v23 = (v20 & 1) == 0;
        uint64_t v24 = v22 + v23;
        if (__OFADD__(v22, v23))
        {
          __break(1u);
LABEL_77:
          __break(1u);
          goto LABEL_78;
        }
        char v25 = v20;
        if (v19[3] < v24)
        {
          sub_1005480DC(v24, isUniquelyReferenced_nonNull_native);
          uint64_t v19 = v85;
          unint64_t v26 = sub_10001B5D0(v83, v11);
          if ((v25 & 1) != (v27 & 1)) {
            goto LABEL_73;
          }
          unint64_t v21 = v26;
          if ((v25 & 1) == 0) {
            goto LABEL_55;
          }
LABEL_46:
          uint64_t v56 = v19[7] + 16 * v21;

          *(void *)uint64_t v56 = v17;
          *(unsigned char *)(v56 + 8) = 0;
LABEL_57:
          *uint64_t v81 = (uint64_t)v19;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_58:
          swift_endAccess();
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v0[14] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[14] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          goto LABEL_61;
        }
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v20) {
            goto LABEL_46;
          }
        }
        else
        {
          sub_10054B0C4();
          uint64_t v19 = v85;
          if (v25) {
            goto LABEL_46;
          }
        }
LABEL_55:
        v19[(v21 >> 6) + 8] |= 1 << v21;
        uint64_t v61 = (uint64_t *)(v19[6] + 16 * v21);
        uint64_t *v61 = v83;
        v61[1] = v11;
        uint64_t v62 = v19[7] + 16 * v21;
        *(void *)uint64_t v62 = v17;
        *(unsigned char *)(v62 + 8) = 0;
        uint64_t v63 = v19[2];
        BOOL v64 = __OFADD__(v63, 1);
        uint64_t v65 = v63 + 1;
        if (v64) {
          goto LABEL_77;
        }
        _OWORD v19[2] = v65;
        swift_bridgeObjectRetain();
        goto LABEL_57;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    uint64_t v28 = *v76;
    if ((unint64_t)*v76 >> 62) {
      break;
    }
    uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v29) {
      goto LABEL_15;
    }
LABEL_50:
    swift_bridgeObjectRelease();
    if (qword_1007F6F70 != -1) {
      swift_once();
    }
    uint64_t v57 = type metadata accessor for Logger();
    sub_100026A54(v57, (uint64_t)qword_10080CA10);
    swift_bridgeObjectRetain_n();
    uint64_t v58 = Logger.logObject.getter();
    os_log_type_t v59 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v58, v59))
    {
      uint64_t v60 = swift_slowAlloc();
      uint64_t v85 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = 136315394;
      swift_bridgeObjectRetain();
      *(void *)(v60 + 4) = sub_10011EA98(v83, v11, (uint64_t *)&v85);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v60 + 12) = 2080;
      *(void *)(v60 + 14) = sub_10011EA98(0xD000000000000030, 0x800000010069D6D0, (uint64_t *)&v85);
      _os_log_impl((void *)&_mh_execute_header, v58, v59, "photoSubtraction [%s] %s", (uint8_t *)v60, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

LABEL_61:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    swift_bridgeObjectRelease_n();

LABEL_4:
    uint64_t v9 = v82 + 1;
    if (v82 + 1 == v78)
    {
      swift_bridgeObjectRelease();
      unint64_t v1 = v0[14];
      goto LABEL_63;
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
  if (!v29) {
    goto LABEL_50;
  }
LABEL_15:
  unint64_t v30 = 0;
  while (1)
  {
    id v31 = (v28 & 0xC000000000000001) != 0
        ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
        : *(id *)(v28 + 8 * v30 + 32);
    uint64_t v32 = v31;
    _s14LivePhotoAssetCMa(0);
    uint64_t v33 = swift_dynamicCastClass();
    if (v33)
    {
      if (!*(void *)(v33 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata)) {
        goto LABEL_33;
      }
      uint64_t v34 = v0[29];
      uint64_t v35 = v0[26];
      swift_retain();
      sub_1000398E0(v34);
      swift_release();
      int v36 = (*v84)(v34, 1, v35);
      uint64_t v37 = v0[29];
      if (v36)
      {
        uint64_t v38 = v0[29];
        id v39 = (uint64_t *)&unk_100804090;
LABEL_32:
        sub_10001457C(v38, v39);
LABEL_33:

        goto LABEL_34;
      }
      uint64_t v45 = (uint64_t *)v0[28];
      sub_10043E748(v0[29], (uint64_t)v45, _s14LivePhotoAssetC13LivePhotoDataVMa);
      sub_10001457C(v37, (uint64_t *)&unk_100804090);
      uint64_t v46 = *v45;
      uint64_t v47 = *(void *)(v80 + 8);
      swift_bridgeObjectRetain();
      id v48 = _s14LivePhotoAssetC13LivePhotoDataVMa;
    }
    else
    {
      _s10VideoAssetCMa(0);
      uint64_t v40 = swift_dynamicCastClass();
      if (v40)
      {
        if (!*(void *)(v40 + OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata)) {
          goto LABEL_33;
        }
        uint64_t v41 = v0[25];
        uint64_t v42 = v0[22];
        swift_retain();
        sub_100039C14(v41);
        swift_release();
        int v43 = (*v79)(v41, 1, v42);
        uint64_t v44 = v0[25];
        if (v43)
        {
          uint64_t v38 = v0[25];
          id v39 = &qword_1007F9E10;
          goto LABEL_32;
        }
        uint64_t v45 = (uint64_t *)v0[24];
        sub_10043E748(v0[25], (uint64_t)v45, _s10VideoAssetC9VideoDataVMa);
        sub_10001457C(v44, &qword_1007F9E10);
        uint64_t v46 = *v45;
        uint64_t v47 = *(void *)(v75 + 8);
        swift_bridgeObjectRetain();
        id v48 = _s10VideoAssetC9VideoDataVMa;
      }
      else
      {
        _s10PhotoAssetCMa(0);
        uint64_t v49 = swift_dynamicCastClass();
        if (!v49 || !*(void *)(v49 + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata)) {
          goto LABEL_33;
        }
        uint64_t v50 = v0[21];
        uint64_t v51 = v0[18];
        swift_retain();
        sub_1000395AC(v50);
        swift_release();
        int v52 = (*v74)(v50, 1, v51);
        uint64_t v53 = v0[21];
        if (v52)
        {
          uint64_t v38 = v0[21];
          id v39 = (uint64_t *)&unk_100804080;
          goto LABEL_32;
        }
        uint64_t v45 = (uint64_t *)v0[20];
        sub_10043E748(v0[21], (uint64_t)v45, _s10PhotoAssetC9PhotoDataVMa);
        sub_10001457C(v53, (uint64_t *)&unk_100804080);
        uint64_t v46 = *v45;
        uint64_t v47 = *(void *)(v73 + 8);
        swift_bridgeObjectRetain();
        id v48 = _s10PhotoAssetC9PhotoDataVMa;
      }
    }
    sub_100440B48((uint64_t)v45, v48);
    if (!v47) {
      goto LABEL_33;
    }
    if (v46 == v83 && v47 == v11)
    {
      swift_bridgeObjectRelease();

LABEL_48:
      swift_bridgeObjectRelease();
      swift_beginAccess();
      sub_10035FEF4(v30);
      goto LABEL_58;
    }
    char v55 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();

    if (v55) {
      goto LABEL_48;
    }
LABEL_34:
    unint64_t v54 = v30 + 1;
    if (__OFADD__(v30, 1)) {
      break;
    }
    ++v30;
    if (v54 == v29) {
      goto LABEL_50;
    }
  }
  __break(1u);
LABEL_73:
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_10041D0DC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 256);
  uint64_t v3 = *(void *)(v1 + 248);
  return _swift_task_switch(sub_10041D1FC, v3, v2);
}

uint64_t sub_10041D1FC()
{
  uint64_t v1 = (void *)v0[36];
  uint64_t v2 = v0[34];
  uint64_t v3 = v0[35] + 1;
  uint64_t v4 = UUID.uuidString.getter();
  sub_100439FB4(v4, v5, 0x206465766F6D6552, 0xEE002E7465737361);
  swift_bridgeObjectRelease();

  if (v3 == v2)
  {
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    uint64_t v8 = v0[35] + 1;
    v0[35] = v8;
    uint64_t v9 = v0[33];
    if ((v9 & 0xC000000000000001) != 0) {
      id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v10 = *(id *)(v9 + 8 * v8 + 32);
    }
    uint64_t v11 = (uint64_t)v10;
    v0[36] = v10;
    uint64_t v12 = (void *)swift_task_alloc();
    v0[37] = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_10041D0DC;
    return sub_1000E99A4(v11);
  }
}

uint64_t sub_10041D3C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  v8[2] = a4;
  v8[7] = type metadata accessor for MainActor();
  v8[8] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v8[9] = v10;
  v8[10] = v9;
  return _swift_task_switch(sub_10041D464, v10, v9);
}

uint64_t sub_10041D464()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry);
  v0[11] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[12] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10041D510;
  uint64_t v3 = v0[3];
  return sub_10041DC48(v1, v3);
}

uint64_t sub_10041D510(uint64_t a1, char a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v4 + 104) = a1;
  *(unsigned char *)(v4 + 160) = a2;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v3 + 80);
  uint64_t v6 = *(void *)(v3 + 72);
  return _swift_task_switch(sub_10041D63C, v6, v5);
}

uint64_t sub_10041D63C()
{
  uint64_t v1 = *(void **)(v0 + 16);
  id v2 = *(id *)(v0 + 104);
  id v3 = [v1 viewIfLoaded];
  id v4 = [v3 window];

  if ((v4
     || (id v5 = [*(id *)(v0 + 16) presentedViewController],
         v5,
         v5))
    && ([*(id *)(v0 + 16) isBeingDismissed] & 1) == 0)
  {
    uint64_t v9 = sub_10041D768;
    uint64_t v10 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    *(void *)(v0 + 120) = static MainActor.shared.getter();
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
    *(void *)(v0 + 128) = v6;
    *(void *)(v0 + 136) = v7;
    uint64_t v9 = sub_10041D930;
    uint64_t v10 = v6;
  }
  return _swift_task_switch(v9, v10, v8);
}

uint64_t sub_10041D768()
{
  *(void *)(v0 + 112) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10041D7F4, v2, v1);
}

uint64_t sub_10041D7F4()
{
  char v1 = *(unsigned char *)(v0 + 160);
  uint64_t v2 = *(void **)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 40);
  uint64_t v3 = *(void *)(v0 + 48);
  id v5 = *(void **)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 16);
  swift_release();
  sub_10042544C(v2, v6, (uint64_t)v2, v1, v5, v4, v3);
  uint64_t v7 = *(void *)(v0 + 72);
  uint64_t v8 = *(void *)(v0 + 80);
  return _swift_task_switch(sub_10041D8A4, v7, v8);
}

uint64_t sub_10041D8A4()
{
  v0[15] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[16] = v2;
  v0[17] = v1;
  return _swift_task_switch(sub_10041D930, v2, v1);
}

uint64_t sub_10041D930()
{
  uint64_t v1 = v0[13];
  if (v1)
  {
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1006D6D00;
    *(void *)(v2 + 32) = v1;
    uint64_t v9 = (double *)v2;
    specialized Array._endMutation()();
    uint64_t v3 = v9;
    uint64_t v4 = (void *)v0[13];
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  v0[18] = v3;
  id v5 = v4;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[19] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10041DA34;
  uint64_t v7 = v0[11];
  return sub_10041A54C(v7, (uint64_t)v3);
}

uint64_t sub_10041DA34()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(v1 + 128);
  return _swift_task_switch(sub_10041DB78, v3, v2);
}

uint64_t sub_10041DB78()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 72);
  uint64_t v2 = *(void *)(v0 + 80);
  return _swift_task_switch(sub_10041DBDC, v1, v2);
}

uint64_t sub_10041DBDC()
{
  uint64_t v1 = *(void **)(v0 + 104);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10041DC48(uint64_t a1, uint64_t a2)
{
  v3[56] = a2;
  v3[57] = v2;
  v3[55] = a1;
  v3[58] = swift_getObjectType();
  sub_100010218(&qword_1007FA1D0);
  v3[59] = swift_task_alloc();
  uint64_t v4 = _s10PhotoAssetC9PhotoDataVMa(0);
  v3[60] = v4;
  v3[61] = *(void *)(v4 - 8);
  v3[62] = swift_task_alloc();
  uint64_t v5 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  v3[63] = v5;
  v3[64] = *(void *)(v5 - 8);
  v3[65] = swift_task_alloc();
  uint64_t v6 = _s10VideoAssetC9VideoDataVMa(0);
  v3[66] = v6;
  v3[67] = *(void *)(v6 - 8);
  v3[68] = swift_task_alloc();
  sub_100010218(&qword_1007F9E10);
  v3[69] = swift_task_alloc();
  v3[70] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100804090);
  v3[71] = swift_task_alloc();
  v3[72] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100804080);
  v3[73] = swift_task_alloc();
  v3[74] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_1007FC470);
  v3[75] = swift_task_alloc();
  v3[76] = swift_task_alloc();
  v3[77] = swift_task_alloc();
  v3[78] = type metadata accessor for PhotoMetadata(0);
  v3[79] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for URL();
  v3[80] = v7;
  v3[81] = *(void *)(v7 - 8);
  v3[82] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100800A60);
  v3[83] = swift_task_alloc();
  v3[84] = swift_task_alloc();
  v3[85] = swift_task_alloc();
  v3[86] = swift_task_alloc();
  v3[87] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for UUID();
  v3[88] = v8;
  v3[89] = *(void *)(v8 - 8);
  v3[90] = swift_task_alloc();
  v3[91] = swift_task_alloc();
  v3[92] = sub_100010218(&qword_10080CBC8);
  v3[93] = swift_task_alloc();
  v3[94] = sub_100010218(&qword_1007F99B8);
  v3[95] = swift_task_alloc();
  v3[96] = swift_task_alloc();
  v3[97] = swift_task_alloc();
  v3[98] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for UTType();
  v3[99] = v9;
  v3[100] = *(void *)(v9 - 8);
  v3[101] = swift_task_alloc();
  v3[102] = swift_task_alloc();
  v3[103] = swift_task_alloc();
  v3[104] = swift_task_alloc();
  v3[105] = swift_task_alloc();
  v3[106] = swift_task_alloc();
  v3[107] = type metadata accessor for MainActor();
  v3[108] = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[109] = v11;
  v3[110] = v10;
  return _swift_task_switch(sub_10041E1D0, v11, v10);
}

uint64_t sub_10041E1D0()
{
  id v1 = [*(id *)(v0 + 448) assetIdentifier];
  if (!v1)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v0 + 456);
  uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v6 = v5;

  *(void *)(v0 + 888) = v4;
  *(void *)(v0 + 896) = v6;
  uint64_t v7 = OBJC_IVAR____TtC7Journal20CanvasViewController_photoPickerActiveFetchRequests;
  *(void *)(v0 + 904) = OBJC_IVAR____TtC7Journal20CanvasViewController_photoPickerActiveFetchRequests;
  uint64_t v8 = (uint64_t *)(v3 + v7);
  swift_beginAccess();
  uint64_t v9 = *v8;
  if (*(void *)(*v8 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_10001B5D0(v4, (uint64_t)v6);
    if (v11)
    {
      char v12 = *(unsigned char *)(*(void *)(v9 + 56) + 16 * v10 + 8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
        swift_release();
        swift_bridgeObjectRelease();
LABEL_7:
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v13 = *(uint64_t (**)(void, void))(v0 + 8);
        return v13(0, 0);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  id v15 = [*(id *)(v0 + 448) itemProvider];
  *(void *)(v0 + 912) = v15;
  _StringGuts.grow(_:)(18);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = v4;
  v16._object = v6;
  String.append(_:)(v16);
  v17._countAndFlagsBits = 93;
  v17._object = (void *)0xE100000000000000;
  String.append(_:)(v17);
  *(void *)(v0 + 920) = 0x6464416F746F6870;
  *(void *)(v0 + 928) = 0xEF5B206E6F697469;
  uint64_t v18 = *v8;
  uint64_t v19 = *(void *)(*v8 + 16);
  swift_bridgeObjectRetain_n();
  if (v19)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_10001B5D0(v4, (uint64_t)v6);
    if (v21)
    {
      uint64_t v22 = *(void *)(v18 + 56) + 16 * v20;
      BOOL v23 = *(void **)v22;
      *(void *)(v0 + 936) = *(void *)v22;
      char v24 = *(unsigned char *)(v22 + 8);
      id v25 = v23;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) == 0)
      {
        return _swift_task_switch(sub_10041F108, 0, 0);
      }
      uint64_t v125 = (uint64_t)v6;
      uint64_t v126 = v4;
    }
    else
    {
      uint64_t v126 = v4;
      swift_bridgeObjectRelease();
      uint64_t v125 = (uint64_t)v6;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v125 = (uint64_t)v6;
    uint64_t v126 = v4;
    swift_bridgeObjectRetain();
  }
  id v26 = [v15 registeredContentTypes];
  uint64_t v27 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v28 = *(void *)(v27 + 16);
  uint64_t v29 = *(void *)(v0 + 800);
  uint64_t v127 = v8;
  if (!v28)
  {
    uint64_t v53 = *(void (**)(void, void, void, void))(v29 + 56);
    v53(*(void *)(v0 + 784), 1, 1, *(void *)(v0 + 792));
LABEL_31:
    swift_bridgeObjectRelease();
    unint64_t v54 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
    goto LABEL_37;
  }
  id v124 = v15;
  uint64_t v137 = *(void *)(v0 + 736);
  uint64_t v136 = *(void (**)(void, void, void))(v29 + 16);
  unint64_t v30 = v27 + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80));
  id v31 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v29 + 48);
  uint64_t v128 = (void (**)(uint64_t, uint64_t, uint64_t))(v29 + 32);
  uint64_t v133 = *(void *)(v29 + 72);
  uint64_t v134 = (void (**)(uint64_t, uint64_t))(v29 + 8);
  swift_bridgeObjectRetain();
  id v139 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v29 + 56);
  uint64_t v32 = &qword_1007F99B8;
  uint64_t v135 = v31;
  while (1)
  {
    int v36 = v32;
    uint64_t v37 = *(void *)(v0 + 832);
    uint64_t v38 = *(void *)(v0 + 792);
    uint64_t v39 = *(void *)(v0 + 776);
    v136(v37, v30, v38);
    v136(v39, v37, v38);
    uint64_t v141 = *v139;
    (*v139)(v39, 0, 1, v38);
    if (qword_1007F6F68 != -1) {
      swift_once();
    }
    uint64_t v40 = *(void *)(v0 + 792);
    uint64_t v41 = *(void *)(v0 + 776);
    uint64_t v42 = *(void *)(v0 + 744);
    uint64_t v43 = sub_100026A54(*(void *)(v0 + 752), (uint64_t)qword_10080C9F8);
    uint64_t v44 = v42 + *(int *)(v137 + 48);
    sub_10001B220(v41, v42, v36);
    sub_10001B220(v43, v44, v36);
    uint64_t v45 = *v135;
    unsigned int v46 = (*v135)(v42, 1, v40);
    uint64_t v47 = *(void *)(v0 + 792);
    if (v46 == 1) {
      break;
    }
    sub_10001B220(*(void *)(v0 + 744), *(void *)(v0 + 768), v36);
    if (v45(v44, 1, v47) == 1)
    {
      uint64_t v32 = v36;
      uint64_t v33 = v134;
      (*v134)(*(void *)(v0 + 768), *(void *)(v0 + 792));
      goto LABEL_20;
    }
    id v129 = v45;
    uint64_t v48 = *(void *)(v0 + 824);
    uint64_t v49 = *(void *)(v0 + 792);
    uint64_t v50 = *(void *)(v0 + 768);
    uint64_t v131 = *(void *)(v0 + 744);
    uint64_t v132 = *(void *)(v0 + 776);
    (*v128)(v48, v44, v49);
    sub_100438EA8((unint64_t *)&unk_10080CBF0, (void (*)(uint64_t))&type metadata accessor for UTType);
    char v51 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v35 = *v134;
    (*v134)(v50, v49);
    uint64_t v52 = v48;
    uint64_t v32 = v36;
    v35(v52, v49);
    sub_10001457C(v131, v36);
    sub_10001457C(v132, v36);
    if (v51) {
      goto LABEL_36;
    }
LABEL_21:
    v35(*(void *)(v0 + 832), *(void *)(v0 + 792));
    v30 += v133;
    if (!--v28)
    {
      swift_bridgeObjectRelease();
      uint64_t v29 = *(void *)(v0 + 800);
      uint64_t v8 = v127;
      id v15 = v124;
      uint64_t v53 = v141;
      v141(*(void *)(v0 + 784), 1, 1, *(void *)(v0 + 792));
      goto LABEL_31;
    }
  }
  uint64_t v32 = v36;
  uint64_t v33 = v134;
  if (v45(v44, 1, *(void *)(v0 + 792)) != 1)
  {
LABEL_20:
    uint64_t v34 = *(void *)(v0 + 776);
    sub_10001457C(*(void *)(v0 + 744), (uint64_t *)&unk_10080CBC8);
    sub_10001457C(v34, v32);
    uint64_t v35 = *v33;
    goto LABEL_21;
  }
  id v129 = v45;
  uint64_t v55 = *(void *)(v0 + 776);
  sub_10001457C(*(void *)(v0 + 744), &qword_1007F99B8);
  sub_10001457C(v55, &qword_1007F99B8);
LABEL_36:
  uint64_t v56 = *(void *)(v0 + 832);
  uint64_t v57 = *(void *)(v0 + 792);
  uint64_t v58 = *(void *)(v0 + 784);
  swift_bridgeObjectRelease();
  (*v128)(v58, v56, v57);
  uint64_t v59 = v58;
  uint64_t v53 = v141;
  v141(v59, 0, 1, v57);
  swift_bridgeObjectRelease();
  uint64_t v8 = v127;
  id v15 = v124;
  unint64_t v54 = v129;
LABEL_37:
  uint64_t v60 = *(void *)(v0 + 792);
  uint64_t v61 = *(void *)(v0 + 784);
  unsigned int v62 = v54(v61, 1, v60);
  *(_DWORD *)(v0 + 52) = v62;
  if (v62 == 1)
  {
    uint64_t v130 = v54;
    sub_10001457C(v61, &qword_1007F99B8);
    id v63 = [v15 registeredContentTypes];
    uint64_t v64 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v65 = *(void *)(v64 + 16);
    if (v65)
    {
      uint64_t v66 = *(void *)(v0 + 800);
      uint64_t v67 = *(void (**)(void, void, void))(v66 + 16);
      v66 += 16;
      uint64_t v140 = v67;
      id v142 = v53;
      unint64_t v68 = v64 + ((*(unsigned __int8 *)(v66 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v66 + 64));
      id v69 = (void (**)(uint64_t, uint64_t))(v66 - 8);
      uint64_t v138 = *(void *)(v66 + 56);
      swift_bridgeObjectRetain();
      while (1)
      {
        uint64_t v70 = *(void *)(v0 + 824);
        uint64_t v71 = *(void *)(v0 + 792);
        v140(*(void *)(v0 + 808), v68, v71);
        static UTType.movie.getter();
        char v72 = UTType.conforms(to:)();
        uint64_t v73 = *v69;
        (*v69)(v70, v71);
        uint64_t v74 = *(void *)(v0 + 808);
        if (v72) {
          break;
        }
        v73(*(void *)(v0 + 808), *(void *)(v0 + 792));
        v68 += v138;
        if (!--v65)
        {
          swift_bridgeObjectRelease();
          uint64_t v75 = 1;
          goto LABEL_46;
        }
      }
      uint64_t v86 = *(void *)(v0 + 800);
      uint64_t v87 = *(void *)(v0 + 792);
      uint64_t v88 = *(void *)(v0 + 760);
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 32))(v88, v74, v87);
      uint64_t v75 = 0;
LABEL_46:
      uint64_t v8 = v127;
      uint64_t v53 = v142;
    }
    else
    {
      uint64_t v75 = 1;
    }
    uint64_t v89 = *(void *)(v0 + 792);
    uint64_t v90 = *(void *)(v0 + 760);
    v53(v90, v75, 1, v89);
    swift_bridgeObjectRelease();
    unsigned int v91 = v130(v90, 1, v89);
    uint64_t v92 = *(void *)(v0 + 848);
    if (v91 == 1)
    {
      uint64_t v93 = *(void *)(v0 + 728);
      uint64_t v94 = *(void *)(v0 + 720);
      uint64_t v95 = *(void *)(v0 + 712);
      uint64_t v96 = *(void *)(v0 + 704);
      sub_10001457C(*(void *)(v0 + 760), &qword_1007F99B8);
      static UTType.image.getter();
      UUID.init()();
      id v97 = objc_allocWithZone((Class)_s16PlaceholderAssetCMa());
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v95 + 16))(v94, v93, v96);
      id v85 = sub_1001817C4(v94, 0, 2);
      (*(void (**)(uint64_t, uint64_t))(v95 + 8))(v93, v96);
      char v84 = 1;
    }
    else
    {
      uint64_t v98 = *(void *)(v0 + 816);
      uint64_t v99 = *(void *)(v0 + 800);
      uint64_t v100 = *(void *)(v0 + 792);
      uint64_t v101 = *(void *)(v0 + 728);
      uint64_t v102 = *(void *)(v0 + 720);
      uint64_t v103 = *(void *)(v0 + 712);
      uint64_t v104 = *(void *)(v0 + 704);
      (*(void (**)(uint64_t, void, uint64_t))(v99 + 32))(v98, *(void *)(v0 + 760), v100);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v99 + 16))(v92, v98, v100);
      UUID.init()();
      id v105 = objc_allocWithZone((Class)_s16PlaceholderAssetCMa());
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 16))(v102, v101, v104);
      id v85 = sub_1001817C4(v102, 2, 2);
      (*(void (**)(uint64_t, uint64_t))(v103 + 8))(v101, v104);
      (*(void (**)(uint64_t, uint64_t))(v99 + 8))(v98, v100);
      char v84 = 0;
    }
  }
  else
  {
    uint64_t v76 = *(void *)(v0 + 848);
    uint64_t v77 = *(void *)(v0 + 840);
    uint64_t v78 = *(void *)(v0 + 800);
    uint64_t v79 = *(void *)(v0 + 728);
    uint64_t v80 = *(void *)(v0 + 720);
    uint64_t v81 = *(void *)(v0 + 712);
    uint64_t v82 = *(void *)(v0 + 704);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 32))(v77, v61, v60);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v78 + 16))(v76, v77, v60);
    UUID.init()();
    id v83 = objc_allocWithZone((Class)_s16PlaceholderAssetCMa());
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v81 + 16))(v80, v79, v82);
    char v84 = 1;
    id v85 = sub_1001817C4(v80, 1, 2);
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v79, v82);
    uint64_t v8 = v127;
    (*(void (**)(uint64_t, uint64_t))(v78 + 8))(v77, v60);
  }
  *(unsigned char *)(v0 + 50) = v84;
  *(void *)(v0 + 1024) = v85;
  id v106 = *(void **)(v0 + 448);
  swift_unknownObjectWeakInit();
  [v106 _preferredContentsRectForTargetSize:350.0, 350.0];
  *(void *)(v0 + 96) = v109;
  *(double *)(v0 + 104) = 1.0 - (v107 + v108);
  *(void *)(v0 + 112) = v110;
  *(double *)(v0 + 120) = v108;
  *(unsigned char *)(v0 + 128) = 0;
  [v106 _preferredContentsRectForTargetSize:200.0, 95.0];
  *(void *)(v0 + 56) = v113;
  *(double *)(v0 + 64) = 1.0 - (v111 + v112);
  *(void *)(v0 + 72) = v114;
  *(double *)(v0 + 80) = v112;
  *(unsigned char *)(v0 + 88) = 0;
  [v106 _preferredContentsRectForTargetSize:200.0, 95.0];
  *(void *)(v0 + 16) = v117;
  *(double *)(v0 + 24) = 1.0 - (v115 + v116);
  *(void *)(v0 + 32) = v118;
  *(double *)(v0 + 40) = v116;
  *(unsigned char *)(v0 + 48) = 0;
  sub_10043A1C8(0xD00000000000001BLL, 0x800000010069D120, 0x6464416F746F6870, 0xEF5B206E6F697469, (uint64_t (*)(void))&static os_log_type_t.debug.getter);
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v119 = v85;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v143 = *v8;
  uint64_t *v8 = 0x8000000000000000;
  sub_10059A3B8((uint64_t)v119, 1, v126, v125, isUniquelyReferenced_nonNull_native);
  uint64_t *v8 = v143;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();
  char v121 = v119[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type];
  uint64_t v122 = (void *)swift_task_alloc();
  *(void *)(v0 + 1032) = v122;
  *uint64_t v122 = v0;
  v122[1] = sub_10042039C;
  uint64_t v123 = *(void *)(v0 + 440);
  return sub_10042F018(v123, v121);
}

uint64_t sub_10041F108()
{
  _s16MultiPinMapAssetCMa();
  uint64_t v1 = swift_dynamicCastClass();
  if (!v1) {
    goto LABEL_14;
  }
  if (!*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)) {
    goto LABEL_14;
  }
  swift_retain();
  uint64_t v2 = sub_100039114();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7;
  swift_release();
  *(void *)(v0 + 944) = v2;
  *(void *)(v0 + 952) = v4;
  *(void *)(v0 + 960) = v6;
  *(unsigned char *)(v0 + 49) = v8;
  if (v2 == 1) {
    goto LABEL_14;
  }
  unint64_t v9 = *(void *)(*(void *)(v0 + 440) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsWithSlimAsset);
  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v10) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  if (!v10)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    sub_10003F810(v2);
LABEL_14:
    Swift::String v16 = (unint64_t *)(*(void *)(v0 + 440) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
    swift_beginAccess();
    unint64_t v17 = *v16;
    if (v17 >> 62)
    {
LABEL_29:
      swift_bridgeObjectRetain();
      uint64_t v18 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v18 = *(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    char v19 = sub_10018B188();
    uint64_t v20 = 11;
    if ((v19 & 1) == 0) {
      uint64_t v20 = 12;
    }
    if (v18 <= v20)
    {
      BOOL v23 = (void *)swift_task_alloc();
      *(void *)(v0 + 968) = v23;
      *BOOL v23 = v0;
      v23[1] = sub_10041F480;
      uint64_t v24 = *(void *)(v0 + 936);
      return sub_1000E7908(v24);
    }
    else
    {
      uint64_t v21 = *(void *)(v0 + 880);
      uint64_t v22 = *(void *)(v0 + 872);
      return _swift_task_switch(sub_1004200F4, v22, v21);
    }
  }
LABEL_6:
  uint64_t v11 = 0;
  while (1)
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v12 = *(id *)(v9 + 8 * v11 + 32);
    }
    uint64_t v13 = v12;
    *(void *)(v0 + 976) = v12;
    uint64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    uint64_t v15 = swift_dynamicCastClass();
    *(void *)(v0 + 984) = v15;
    if (v15) {
      break;
    }

    ++v11;
    if (v14 == v10) {
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease_n();
  id v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 992) = v25;
  *id v25 = v0;
  v25[1] = sub_10041F5A0;
  return sub_1000987F4(v2);
}

uint64_t sub_10041F480()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 880);
  uint64_t v3 = *(void *)(v1 + 872);
  return _swift_task_switch(sub_100440D84, v3, v2);
}

uint64_t sub_10041F5A0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10041F69C, 0, 0);
}

uint64_t sub_10041F69C()
{
  uint64_t v1 = (void *)v0[123];
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = v1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    id v6 = v1;
    char v7 = (void *)swift_task_alloc();
    v0[125] = v7;
    *char v7 = v0;
    v7[1] = sub_10041F810;
    return sub_10058DF1C(ObjectType, v3);
  }
  else
  {
    uint64_t v10 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
    unint64_t v9 = (void *)swift_task_alloc();
    v0[126] = v9;
    *unint64_t v9 = v0;
    v9[1] = sub_10041F9B8;
    return v10();
  }
}

uint64_t sub_10041F810()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10041F90C, 0, 0);
}

uint64_t sub_10041F90C()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 1008) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10041F9B8;
  return v3();
}

uint64_t sub_10041F9B8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10041FAB4, 0, 0);
}

uint64_t sub_10041FAB4()
{
  if (qword_1007F6BA0 != -1) {
    swift_once();
  }
  sub_100438714(*(void *)(v0 + 984) + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id);
  id v1 = [self defaultCenter];
  if (qword_1007F6E78 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 944);
  uint64_t v3 = qword_10083D400;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v1 postNotificationName:v3 object:isa];

  uint64_t v5 = sub_10003F810(v2);
  if (sub_10003D0C8(v5))
  {
    *(void *)(v0 + 1016) = static MainActor.shared.getter();
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
    unint64_t v9 = sub_10041FC80;
    uint64_t v10 = v6;
    uint64_t v11 = v8;
  }
  else
  {

    uint64_t v11 = *(void *)(v0 + 880);
    uint64_t v10 = *(void *)(v0 + 872);
    unint64_t v9 = sub_10041FDC8;
  }
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_10041FC80()
{
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v1 = *(void *)(v0 + 440);
    uint64_t v2 = *(void *)(v1 + 56);
    uint64_t ObjectType = swift_getObjectType();
    Swift::Int v4 = sub_1000F678C((uint64_t)&off_100794BC0);
    (*(void (**)(uint64_t, Swift::Int, uint64_t, uint64_t))(v2 + 8))(v1, v4, ObjectType, v2);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return _swift_task_switch(sub_10041FD60, 0, 0);
}

uint64_t sub_10041FD60()
{
  uint64_t v1 = *(void *)(v0 + 880);
  uint64_t v2 = *(void *)(v0 + 872);
  return _swift_task_switch(sub_10041FDC8, v2, v1);
}

uint64_t sub_10041FDC8()
{
  uint64_t v1 = (void *)v0[117];
  unint64_t v2 = v0[116];
  uint64_t v3 = v0[115];
  uint64_t v4 = (void *)v0[114];
  uint64_t v5 = v0[113];
  uint64_t v6 = v0[112];
  uint64_t v7 = v0[111];
  uint64_t v8 = v0[57];
  swift_release();
  unint64_t v9 = (uint64_t *)(v8 + v5);
  sub_10043A1C8(0xD000000000000049, 0x800000010069D5C0, v3, v2, (uint64_t (*)(void))&static os_log_type_t.debug.getter);
  swift_bridgeObjectRelease();
  swift_beginAccess();
  id v10 = v1;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v14 = *v9;
  *unint64_t v9 = 0x8000000000000000;
  sub_10059A3B8((uint64_t)v10, 1, v7, v6, isUniquelyReferenced_nonNull_native);
  *unint64_t v9 = v14;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_endAccess();

  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v12 = (uint64_t (*)(void, void))v0[1];
  return v12(0, 0);
}

uint64_t sub_1004200F4()
{
  uint64_t v1 = (void *)v0[117];
  unint64_t v2 = v0[116];
  uint64_t v3 = v0[115];
  uint64_t v4 = (void *)v0[114];
  swift_release();
  swift_bridgeObjectRelease();
  sub_10043A1C8(0xD00000000000003FLL, 0x800000010069D610, v3, v2, (uint64_t (*)(void))&static os_log_type_t.error.getter);

  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = (uint64_t (*)(void, uint64_t))v0[1];
  return v5(0, 1);
}

uint64_t sub_10042039C(uint64_t a1)
{
  unint64_t v2 = *(void **)(*(void *)v1 + 1024);
  *(void *)(*(void *)v1 + 1040) = a1;
  swift_task_dealloc();
  id v3 = v2;
  return _swift_task_switch(sub_1004204BC, 0, 0);
}

uint64_t sub_1004204BC()
{
  _s16MultiPinMapAssetCMa();
  uint64_t v1 = swift_dynamicCastClass();
  if (!v1) {
    goto LABEL_14;
  }
  if (!*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)) {
    goto LABEL_14;
  }
  swift_retain();
  uint64_t v2 = sub_100039114();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7;
  swift_release();
  *(void *)(v0 + 1048) = v2;
  *(void *)(v0 + 1056) = v4;
  *(void *)(v0 + 1064) = v6;
  *(unsigned char *)(v0 + 51) = v8;
  if (v2 == 1)
  {
LABEL_14:
    Swift::String v16 = *(void **)(v0 + 1040);
    if (v16)
    {
      id v17 = v16;
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 1072) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_1004208D8;
      uint64_t v19 = *(void *)(v0 + 1024);
      return sub_1000EA4DC((uint64_t)v17, v19);
    }
    else
    {
      uint64_t v21 = (unint64_t *)(*(void *)(v0 + 440) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
      swift_beginAccess();
      unint64_t v22 = *v21;
      if (v22 >> 62)
      {
LABEL_34:
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v24 = *(void *)(v0 + 1040);
      char v25 = sub_10018B188();
      uint64_t v26 = 11;
      if ((v25 & 1) == 0) {
        uint64_t v26 = 12;
      }
      if (v24 || v23 <= v26)
      {
        uint64_t v29 = (void *)swift_task_alloc();
        *(void *)(v0 + 1080) = v29;
        void *v29 = v0;
        v29[1] = sub_100420C58;
        uint64_t v30 = *(void *)(v0 + 1024);
        return sub_1000E7908(v30);
      }
      else
      {

        uint64_t v27 = *(void *)(v0 + 880);
        uint64_t v28 = *(void *)(v0 + 872);
        return _swift_task_switch(sub_100424900, v28, v27);
      }
    }
  }
  unint64_t v9 = *(void *)(*(void *)(v0 + 440) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsWithSlimAsset);
  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v10) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  if (!v10)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    sub_10003F810(v2);
    goto LABEL_14;
  }
LABEL_6:
  uint64_t v11 = 0;
  while (1)
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v12 = *(id *)(v9 + 8 * v11 + 32);
    }
    uint64_t v13 = v12;
    *(void *)(v0 + 1088) = v12;
    uint64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v15 = swift_dynamicCastClass();
    *(void *)(v0 + 1096) = v15;
    if (v15) {
      break;
    }

    ++v11;
    if (v14 == v10) {
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease_n();
  id v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 1104) = v31;
  *id v31 = v0;
  v31[1] = sub_100420D98;
  return sub_1000987F4(v2);
}

uint64_t sub_1004208D8(char a1)
{
  *(unsigned char *)(*(void *)v1 + 89) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_1004209D8, 0, 0);
}

uint64_t sub_1004209D8()
{
  int v1 = *(unsigned __int8 *)(v0 + 89);

  if (v1 == 1)
  {

    uint64_t v2 = *(void *)(v0 + 880);
    uint64_t v3 = *(void *)(v0 + 872);
    uint64_t v4 = sub_100420B7C;
LABEL_10:
    return _swift_task_switch(v4, v3, v2);
  }
  uint64_t v5 = (unint64_t *)(*(void *)(v0 + 440) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  unint64_t v6 = *v5;
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v8 = *(void *)(v0 + 1040);
  char v9 = sub_10018B188();
  uint64_t v10 = 11;
  if ((v9 & 1) == 0) {
    uint64_t v10 = 12;
  }
  if (!v8 && v7 > v10)
  {

    uint64_t v2 = *(void *)(v0 + 880);
    uint64_t v3 = *(void *)(v0 + 872);
    uint64_t v4 = sub_100424900;
    goto LABEL_10;
  }
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 1080) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_100420C58;
  uint64_t v12 = *(void *)(v0 + 1024);
  return sub_1000E7908(v12);
}

uint64_t sub_100420B7C()
{
  uint64_t v1 = v0[87];
  uint64_t v2 = v0[81];
  uint64_t v3 = v0[80];
  sub_10043A1C8(0xD000000000000025, 0x800000010069D460, v0[115], v0[116], (uint64_t (*)(void))&static os_log_type_t.debug.getter);
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56);
  v0[142] = v4;
  v0[143] = (v2 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v4(v1, 1, 1, v3);
  return _swift_task_switch(sub_1004215D0, 0, 0);
}

uint64_t sub_100420C58()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 1024);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 880);
  uint64_t v4 = *(void *)(v1 + 872);
  return _swift_task_switch(sub_100440CC8, v4, v3);
}

uint64_t sub_100420D98()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100420E94, 0, 0);
}

uint64_t sub_100420E94()
{
  uint64_t v1 = (void *)v0[137];
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = v1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    id v6 = v1;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[139] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_100421008;
    return sub_10058DF1C(ObjectType, v3);
  }
  else
  {
    uint64_t v10 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
    char v9 = (void *)swift_task_alloc();
    v0[140] = v9;
    *char v9 = v0;
    v9[1] = sub_1004211B0;
    return v10();
  }
}

uint64_t sub_100421008()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100421104, 0, 0);
}

uint64_t sub_100421104()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 1120) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1004211B0;
  return v3();
}

uint64_t sub_1004211B0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1004212AC, 0, 0);
}

uint64_t sub_1004212AC()
{
  if (qword_1007F6BA0 != -1) {
    swift_once();
  }
  sub_100438714(*(void *)(v0 + 1096) + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id);
  id v1 = [self defaultCenter];
  if (qword_1007F6E78 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 1048);
  uint64_t v3 = qword_10083D400;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v1 postNotificationName:v3 object:isa];

  uint64_t v5 = sub_10003F810(v2);
  if (sub_10003D0C8(v5))
  {
    *(void *)(v0 + 1128) = static MainActor.shared.getter();
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
    char v9 = sub_100421480;
    uint64_t v10 = v6;
    uint64_t v11 = v8;
  }
  else
  {
    uint64_t v12 = *(void **)(v0 + 1024);

    uint64_t v11 = *(void *)(v0 + 880);
    uint64_t v10 = *(void *)(v0 + 872);
    char v9 = sub_100440CC8;
  }
  return _swift_task_switch(v9, v10, v11);
}

uint64_t sub_100421480()
{
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v1 = *(void *)(v0 + 440);
    uint64_t v2 = *(void *)(v1 + 56);
    uint64_t ObjectType = swift_getObjectType();
    Swift::Int v4 = sub_1000F678C((uint64_t)&off_100794BE8);
    (*(void (**)(uint64_t, Swift::Int, uint64_t, uint64_t))(v2 + 8))(v1, v4, ObjectType, v2);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return _swift_task_switch(sub_100421560, 0, 0);
}

uint64_t sub_100421560()
{
  uint64_t v1 = *(void **)(v0 + 1024);

  uint64_t v2 = *(void *)(v0 + 880);
  uint64_t v3 = *(void *)(v0 + 872);
  return _swift_task_switch(sub_100440CC8, v3, v2);
}

uint64_t sub_1004215D0()
{
  uint64_t v1 = v0[114];
  uint64_t v2 = v0[106];
  uint64_t v3 = swift_task_alloc();
  v0[144] = v3;
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = v2;
  Swift::Int v4 = (void *)swift_task_alloc();
  v0[145] = v4;
  *Swift::Int v4 = v0;
  v4[1] = sub_1004216C8;
  uint64_t v5 = v0[82];
  uint64_t v6 = v0[80];
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000020, 0x800000010069D490, sub_100440B40, v3, v6);
}

uint64_t sub_1004216C8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 1168) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = sub_100422974;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v5 = *(void *)(v2 + 880);
    uint64_t v4 = *(void *)(v2 + 872);
    uint64_t v3 = sub_1004217F0;
  }
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_1004217F0()
{
  uint64_t v1 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1136);
  int v2 = *(unsigned __int8 *)(v0 + 50);
  uint64_t v3 = *(void *)(v0 + 696);
  uint64_t v4 = *(void *)(v0 + 656);
  uint64_t v5 = *(void *)(v0 + 648);
  uint64_t v6 = *(void *)(v0 + 640);
  sub_10001457C(v3, (uint64_t *)&unk_100800A60);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  *(void *)(v0 + 1176) = v7;
  *(void *)(v0 + 1184) = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v7(v3, v4, v6);
  v1(v3, 0, 1, v6);
  if (v2 != 1)
  {
    swift_bridgeObjectRetain();
    uint64_t v45 = (void *)swift_task_alloc();
    *(void *)(v0 + 1192) = v45;
    *uint64_t v45 = v0;
    v45[1] = sub_100422B78;
    uint64_t v46 = *(void *)(v0 + 928);
    uint64_t v47 = *(void *)(v0 + 920);
    uint64_t v48 = *(void *)(v0 + 656);
    uint64_t v49 = *(void *)(v0 + 632);
    uint64_t v50 = *(void *)(v0 + 456);
    return sub_10043149C(v49, v48, v50, v47, v46);
  }
  uint64_t v185 = v0 + 56;
  uint64_t v186 = v0 + 16;
  uint64_t v183 = v0 + 96;
  int v8 = *(_DWORD *)(v0 + 52);
  unint64_t v9 = *(void *)(v0 + 928);
  uint64_t v10 = *(void *)(v0 + 920);
  uint64_t v11 = *(void *)(v0 + 656);
  uint64_t v12 = *(void *)(v0 + 632);
  swift_bridgeObjectRetain();
  sub_10042FF08(v11, v10, v9, v12);
  if (v8 == 1)
  {
    uint64_t v180 = *(void *)(v0 + 1168);
    uint64_t v13 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1136);
    uint64_t v177 = *(void *)(v0 + 896);
    uint64_t v179 = *(void *)(v0 + 888);
    uint64_t v14 = *(void *)(v0 + 680);
    uint64_t v15 = *(void *)(v0 + 640);
    uint64_t v16 = *(void *)(v0 + 632);
    uint64_t v17 = *(void *)(v0 + 624);
    uint64_t v18 = *(void *)(v0 + 608);
    v7(v14, *(void *)(v0 + 656), v15);
    v13(v14, 0, 1, v15);
    sub_10001B220(v16, v18, (uint64_t *)&unk_1007FC470);
    uint64_t v19 = *(int *)(v17 + 24);
    uint64_t v20 = v16 + *(int *)(v17 + 20);
    uint64_t v21 = *(void *)v20;
    unsigned __int8 v22 = *(unsigned char *)(v20 + 8);
    uint64_t v23 = *(void *)(v16 + v19);
    LOBYTE(v15) = *(unsigned char *)(v16 + v19 + 8);
    swift_bridgeObjectRetain();
    uint64_t v168 = v23;
    uint64_t v24 = v180;
    char v25 = sub_1002B5008(2, 0, v14, v179, v177, v18, 0, 0, v21, v22, v168, v15, 0, 0, 1u, v183, v185, v186);
    if (!v180) {
      goto LABEL_4;
    }
LABEL_18:
    uint64_t v66 = *(void *)(v0 + 656);
    uint64_t v67 = *(void *)(v0 + 648);
    uint64_t v68 = *(void *)(v0 + 640);
    sub_100440B48(*(void *)(v0 + 632), type metadata accessor for PhotoMetadata);
    (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v66, v68);
    *(void *)(v0 + 1248) = v24;
    id v69 = *(void **)(v0 + 1024);
    unint64_t v70 = *(void *)(v0 + 928);
    uint64_t v71 = *(void *)(v0 + 920);
    _StringGuts.grow(_:)(43);
    *(void *)(v0 + 400) = 0;
    *(void *)(v0 + 408) = 0xE000000000000000;
    v72._countAndFlagsBits = 0xD000000000000028;
    v72._object = (void *)0x800000010069D4C0;
    String.append(_:)(v72);
    *(void *)(v0 + 424) = v24;
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    _print_unlocked<A, B>(_:_:)();
    v73._countAndFlagsBits = 46;
    v73._object = (void *)0xE100000000000000;
    String.append(_:)(v73);
    sub_10043A1C8(*(void *)(v0 + 400), *(void *)(v0 + 408), v71, v70, (uint64_t (*)(void))&static os_log_type_t.error.getter);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v74 = v69;
    *(void *)(v0 + 1256) = static MainActor.shared.getter();
    uint64_t v75 = (void *)swift_task_alloc();
    *(void *)(v0 + 1264) = v75;
    *uint64_t v75 = v0;
    v75[1] = sub_100424F3C;
    uint64_t v76 = *(void *)(v0 + 696);
    uint64_t v77 = *(void *)(v0 + 440);
    return sub_10043A3E4(v77, v76, (uint64_t)v69);
  }
  uint64_t v181 = *(void *)(v0 + 1168);
  char v51 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1136);
  uint64_t v52 = *(void *)(v0 + 896);
  uint64_t v53 = *(void *)(v0 + 888);
  uint64_t v54 = *(void *)(v0 + 688);
  uint64_t v55 = *(void *)(v0 + 640);
  uint64_t v56 = *(void *)(v0 + 632);
  uint64_t v57 = *(void *)(v0 + 624);
  uint64_t v58 = *(void *)(v0 + 616);
  (*(void (**)(uint64_t, void, uint64_t))(v0 + 1176))(v54, *(void *)(v0 + 656), v55);
  v51(v54, 0, 1, v55);
  sub_10001B220(v56, v58, (uint64_t *)&unk_1007FC470);
  uint64_t v59 = *(int *)(v57 + 24);
  uint64_t v60 = v56 + *(int *)(v57 + 20);
  uint64_t v61 = *(unsigned int (**)(char *, uint64_t, uint64_t))v60;
  LOBYTE(v55) = *(unsigned char *)(v60 + 8);
  uint64_t v62 = v56 + v59;
  id v63 = *(void (**)(char *, char *, uint64_t))(v56 + v59);
  unsigned __int8 v64 = *(unsigned char *)(v62 + 8);
  swift_bridgeObjectRetain();
  uint64_t v65 = v53;
  uint64_t v24 = v181;
  char v25 = sub_100033E34(2, v54, 0, v65, v52, v58, 0, 0, v61, v55, v63, v64, 0, 0, 1u, v183, v185, v186);
  if (v181) {
    goto LABEL_18;
  }
LABEL_4:
  uint64_t v26 = v25;
  sub_100440B48(*(void *)(v0 + 632), type metadata accessor for PhotoMetadata);
  *(void *)(v0 + 1200) = v26;
  unint64_t v27 = *(void *)(v0 + 928);
  uint64_t v28 = *(void *)(v0 + 920);
  uint64_t v29 = *(void *)(v0 + 440);
  (*(void (**)(void, void))(*(void *)(v0 + 648) + 8))(*(void *)(v0 + 656), *(void *)(v0 + 640));
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  uint64_t v174 = v26;
  *(void *)(v0 + 432) = swift_getObjectType();
  sub_100010218(&qword_1008076B0);
  v30._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v30);
  swift_bridgeObjectRelease();
  v31._countAndFlagsBits = 46;
  v31._object = (void *)0xE100000000000000;
  String.append(_:)(v31);
  sub_10043A1C8(0xD000000000000014, 0x800000010069D4F0, v28, v27, (uint64_t (*)(void))&static os_log_type_t.debug.getter);
  swift_bridgeObjectRelease();
  uint64_t v32 = (uint64_t *)(v29 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
  swift_beginAccess();
  uint64_t v33 = *v32;
  uint64_t v34 = *(void **)(v0 + 1024);
  if ((unint64_t)*v32 >> 62)
  {
LABEL_90:
    id v159 = v34;
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v35 = result;
    if (result) {
      goto LABEL_6;
    }
LABEL_91:
    id v160 = *(void **)(v0 + 1024);
    unint64_t v161 = *(void *)(v0 + 928);
    uint64_t v162 = *(void *)(v0 + 920);
    swift_bridgeObjectRelease();

    sub_10043A1C8(0xD00000000000001ELL, 0x800000010069D560, v162, v161, (uint64_t (*)(void))&static os_log_type_t.debug.getter);
    swift_bridgeObjectRelease();
    uint64_t v163 = (void *)swift_task_alloc();
    *(void *)(v0 + 1224) = v163;
    *uint64_t v163 = v0;
    v163[1] = sub_1004247BC;
    uint64_t v164 = *(void *)(v0 + 896);
    uint64_t v165 = *(void *)(v0 + 888);
    uint64_t v166 = *(void *)(v0 + 696);
    uint64_t v167 = *(void *)(v0 + 440);
    return sub_10043A9A8(v166, 0, v167, v0 + 416, v165, v164);
  }
  uint64_t v35 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v36 = v34;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v35) {
    goto LABEL_91;
  }
LABEL_6:
  if ((v33 & 0xC000000000000001) != 0)
  {
    id v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v38 = *(id *)(v33 + 32);
  }
  id v39 = v38;
  if (static UUID.== infix(_:_:)())
  {
LABEL_10:
    uint64_t v40 = *(void **)(v0 + 1024);
    swift_bridgeObjectRelease();

    goto LABEL_11;
  }
  uint64_t v171 = *(void *)(v0 + 544);
  uint64_t v172 = *(void *)(v0 + 520);
  uint64_t v173 = *(void *)(v0 + 496);
  unint64_t v176 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 512) + 48);
  id v178 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 488) + 48);
  id v175 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 536) + 48);
  uint64_t v78 = (void *)_s10PhotoAssetCMa(0);
  uint64_t v79 = 0;
  uint64_t v182 = v78;
  uint64_t v184 = v35 - 1;
  while (1)
  {
    uint64_t v80 = swift_dynamicCastClass();
    if (v80)
    {
      uint64_t v81 = v80;
      uint64_t v82 = *(void **)(v0 + 1024);
      uint64_t v83 = swift_dynamicCastClass();
      if (v83)
      {
        if (*(void *)(v81 + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata))
        {
          uint64_t v84 = v83;
          uint64_t v85 = *(void *)(v0 + 592);
          uint64_t v86 = *(void *)(v0 + 480);
          id v87 = v82;
          id v88 = v39;
          swift_retain();
          sub_1000395AC(v85);
          swift_release();
          uint64_t v89 = *v178;
          if ((*v178)(v85, 1, v86))
          {
            uint64_t v90 = *(void **)(v0 + 1024);
            uint64_t v91 = *(void *)(v0 + 592);

LABEL_27:
            sub_10001457C(v91, (uint64_t *)&unk_100804080);
LABEL_28:
            uint64_t v78 = v182;
            goto LABEL_29;
          }
          uint64_t v116 = *(void *)(v0 + 592);
          uint64_t v117 = *(uint64_t **)(v0 + 496);
          sub_10043E748(v116, (uint64_t)v117, _s10PhotoAssetC9PhotoDataVMa);
          sub_10001457C(v116, (uint64_t *)&unk_100804080);
          uint64_t v118 = *v117;
          uint64_t v119 = *(void *)(v173 + 8);
          swift_bridgeObjectRetain();
          sub_100440B48((uint64_t)v117, _s10PhotoAssetC9PhotoDataVMa);
          if (!v119)
          {
            uint64_t v137 = *(void **)(v0 + 1024);

            goto LABEL_28;
          }
          uint64_t v169 = v118;
          if (*(void *)(v84 + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata))
          {
            uint64_t v120 = *(void *)(v0 + 584);
            uint64_t v121 = *(void *)(v0 + 480);
            swift_retain();
            sub_1000395AC(v120);
            swift_release();
            if (v89(v120, 1, v121))
            {
              uint64_t v122 = *(void **)(v0 + 1024);
              uint64_t v91 = *(void *)(v0 + 584);

              swift_bridgeObjectRelease();
              goto LABEL_27;
            }
            uint64_t v140 = *(void *)(v0 + 584);
            uint64_t v141 = *(uint64_t **)(v0 + 496);
            sub_10043E748(v140, (uint64_t)v141, _s10PhotoAssetC9PhotoDataVMa);
            sub_10001457C(v140, (uint64_t *)&unk_100804080);
            uint64_t v142 = *v141;
            uint64_t v143 = *(void *)(v173 + 8);
            swift_bridgeObjectRetain();
            sub_100440B48((uint64_t)v141, _s10PhotoAssetC9PhotoDataVMa);
            if (v143)
            {
              uint64_t v144 = *(void **)(v0 + 1024);
              if (v169 == v142 && v119 == v143)
              {
LABEL_84:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

LABEL_85:
                swift_bridgeObjectRelease();

                uint64_t v40 = *(void **)(v0 + 1024);
                goto LABEL_11;
              }
              char v145 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              if (v145) {
                goto LABEL_85;
              }

              goto LABEL_28;
            }
          }
          uint64_t v146 = *(void **)(v0 + 1024);

          swift_bridgeObjectRelease();
          goto LABEL_28;
        }
      }
    }
LABEL_29:
    _s14LivePhotoAssetCMa(0);
    uint64_t v92 = swift_dynamicCastClass();
    if (v92)
    {
      uint64_t v93 = v92;
      uint64_t v94 = *(void **)(v0 + 1024);
      uint64_t v95 = swift_dynamicCastClass();
      if (v95)
      {
        if (*(void *)(v93 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata))
        {
          uint64_t v96 = v95;
          uint64_t v97 = *(void *)(v0 + 576);
          uint64_t v98 = *(void *)(v0 + 504);
          id v99 = v94;
          id v88 = v39;
          swift_retain();
          sub_1000398E0(v97);
          swift_release();
          uint64_t v100 = *v176;
          if ((*v176)(v97, 1, v98))
          {
            uint64_t v101 = *(void **)(v0 + 1024);
            uint64_t v102 = *(void *)(v0 + 576);

LABEL_34:
            sub_10001457C(v102, (uint64_t *)&unk_100804090);
LABEL_35:
            uint64_t v78 = v182;
            goto LABEL_36;
          }
          uint64_t v123 = *(void *)(v0 + 576);
          id v124 = *(uint64_t **)(v0 + 520);
          sub_10043E748(v123, (uint64_t)v124, _s14LivePhotoAssetC13LivePhotoDataVMa);
          sub_10001457C(v123, (uint64_t *)&unk_100804090);
          uint64_t v125 = *v124;
          uint64_t v126 = *(void *)(v172 + 8);
          swift_bridgeObjectRetain();
          sub_100440B48((uint64_t)v124, _s14LivePhotoAssetC13LivePhotoDataVMa);
          if (!v126)
          {
            uint64_t v138 = *(void **)(v0 + 1024);

            goto LABEL_35;
          }
          uint64_t v170 = v125;
          if (*(void *)(v96 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata))
          {
            uint64_t v127 = *(void *)(v0 + 568);
            uint64_t v128 = *(void *)(v0 + 504);
            swift_retain();
            sub_1000398E0(v127);
            swift_release();
            if (v100(v127, 1, v128))
            {
              id v129 = *(void **)(v0 + 1024);
              uint64_t v102 = *(void *)(v0 + 568);

              swift_bridgeObjectRelease();
              goto LABEL_34;
            }
            uint64_t v147 = *(void *)(v0 + 568);
            uint64_t v148 = *(uint64_t **)(v0 + 520);
            sub_10043E748(v147, (uint64_t)v148, _s14LivePhotoAssetC13LivePhotoDataVMa);
            sub_10001457C(v147, (uint64_t *)&unk_100804090);
            uint64_t v149 = *v148;
            uint64_t v150 = *(void *)(v172 + 8);
            swift_bridgeObjectRetain();
            sub_100440B48((uint64_t)v148, _s14LivePhotoAssetC13LivePhotoDataVMa);
            if (v150)
            {
              uint64_t v144 = *(void **)(v0 + 1024);
              if (v170 == v149 && v126 == v150) {
                goto LABEL_84;
              }
              char v151 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              if (v151) {
                goto LABEL_85;
              }

              goto LABEL_35;
            }
          }
          long long v152 = *(void **)(v0 + 1024);

          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
      }
    }
LABEL_36:
    _s10VideoAssetCMa(0);
    uint64_t v103 = swift_dynamicCastClass();
    if (v103
      && (uint64_t v104 = v103, v105 = *(void **)(v0 + 1024), (v106 = swift_dynamicCastClass()) != 0)
      && *(void *)(v104 + OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata))
    {
      uint64_t v107 = v106;
      uint64_t v108 = *(void *)(v0 + 560);
      uint64_t v109 = *(void *)(v0 + 528);
      id v110 = v105;
      id v39 = v39;
      swift_retain();
      sub_100039C14(v108);
      swift_release();
      double v111 = *v175;
      if ((*v175)(v108, 1, v109))
      {
        double v112 = *(void **)(v0 + 1024);
        uint64_t v113 = *(void *)(v0 + 560);

LABEL_41:
        sub_10001457C(v113, &qword_1007F9E10);
        uint64_t v78 = v182;
        goto LABEL_43;
      }
      uint64_t v130 = *(void *)(v0 + 560);
      uint64_t v131 = *(uint64_t **)(v0 + 544);
      sub_10043E748(v130, (uint64_t)v131, _s10VideoAssetC9VideoDataVMa);
      sub_10001457C(v130, &qword_1007F9E10);
      uint64_t v132 = *v131;
      uint64_t v133 = *(void *)(v171 + 8);
      swift_bridgeObjectRetain();
      sub_100440B48((uint64_t)v131, _s10VideoAssetC9VideoDataVMa);
      if (v133)
      {
        if (!*(void *)(v107 + OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata)) {
          goto LABEL_83;
        }
        uint64_t v134 = *(void *)(v0 + 552);
        uint64_t v135 = *(void *)(v0 + 528);
        swift_retain();
        sub_100039C14(v134);
        swift_release();
        if (v111(v134, 1, v135))
        {
          uint64_t v136 = *(void **)(v0 + 1024);
          uint64_t v113 = *(void *)(v0 + 552);

          swift_bridgeObjectRelease();
          goto LABEL_41;
        }
        uint64_t v153 = *(void *)(v0 + 552);
        long long v154 = *(uint64_t **)(v0 + 544);
        sub_10043E748(v153, (uint64_t)v154, _s10VideoAssetC9VideoDataVMa);
        sub_10001457C(v153, &qword_1007F9E10);
        uint64_t v155 = *v154;
        uint64_t v156 = *(void *)(v171 + 8);
        swift_bridgeObjectRetain();
        sub_100440B48((uint64_t)v154, _s10VideoAssetC9VideoDataVMa);
        if (v156)
        {
          uint64_t v78 = *(void **)(v0 + 1024);
          if (v132 == v155 && v133 == v156) {
            goto LABEL_87;
          }
          char v157 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (v157)
          {
            swift_bridgeObjectRelease();

            uint64_t v40 = *(void **)(v0 + 1024);
            goto LABEL_11;
          }

          uint64_t v78 = v182;
        }
        else
        {
LABEL_83:
          uint64_t v158 = *(void **)(v0 + 1024);

          swift_bridgeObjectRelease();
          uint64_t v78 = v182;
        }
      }
      else
      {
        id v139 = *(void **)(v0 + 1024);

        uint64_t v78 = v182;
      }
    }
    else
    {
    }
LABEL_43:
    if (v184 == v79) {
      goto LABEL_91;
    }
    unint64_t v114 = v79 + 1;
    if ((v33 & 0xC000000000000001) != 0)
    {
      id v115 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v34 = *(void **)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v114 >= (unint64_t)v34)
      {
        __break(1u);
        goto LABEL_90;
      }
      id v115 = *(id *)(v33 + 8 * v79 + 40);
    }
    id v39 = v115;
    if (__OFADD__(v114, 1)) {
      break;
    }
    ++v79;
    if (static UUID.== infix(_:_:)()) {
      goto LABEL_10;
    }
  }
  __break(1u);
LABEL_87:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  uint64_t v40 = *(void **)(v0 + 1024);
LABEL_11:

  uint64_t v41 = *(void **)(v0 + 1024);
  uint64_t v187 = (uint64_t (*)(char *, uint64_t, void *))((char *)&dword_1008058A0 + dword_1008058A0);
  id v42 = v41;
  uint64_t v43 = (void *)swift_task_alloc();
  *(void *)(v0 + 1208) = v43;
  void *v43 = v0;
  v43[1] = sub_100423CB0;
  uint64_t v44 = *(void *)(v0 + 440);
  return v187(v174, v44, v41);
}

uint64_t sub_100422974()
{
  swift_task_dealloc();
  uint64_t v1 = *(void *)(v0 + 880);
  uint64_t v2 = *(void *)(v0 + 872);
  return _swift_task_switch(sub_1004229DC, v2, v1);
}

uint64_t sub_1004229DC()
{
  uint64_t v1 = v0[146];
  v0[156] = v1;
  uint64_t v2 = (void *)v0[128];
  unint64_t v3 = v0[116];
  uint64_t v4 = v0[115];
  _StringGuts.grow(_:)(43);
  v0[50] = 0;
  v0[51] = 0xE000000000000000;
  v5._object = (void *)0x800000010069D4C0;
  v5._countAndFlagsBits = 0xD000000000000028;
  String.append(_:)(v5);
  v0[53] = v1;
  sub_100010218((uint64_t *)&unk_1007FC0D0);
  _print_unlocked<A, B>(_:_:)();
  v6._countAndFlagsBits = 46;
  v6._object = (void *)0xE100000000000000;
  String.append(_:)(v6);
  sub_10043A1C8(v0[50], v0[51], v4, v3, (uint64_t (*)(void))&static os_log_type_t.error.getter);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v7 = v2;
  v0[157] = static MainActor.shared.getter();
  int v8 = (void *)swift_task_alloc();
  v0[158] = v8;
  void *v8 = v0;
  v8[1] = sub_100424F3C;
  uint64_t v9 = v0[87];
  uint64_t v10 = v0[55];
  return sub_10043A3E4(v10, v9, (uint64_t)v2);
}

uint64_t sub_100422B78()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 880);
  uint64_t v3 = *(void *)(v1 + 872);
  return _swift_task_switch(sub_100422C98, v3, v2);
}

uint64_t sub_100422C98()
{
  uint64_t v160 = v0 + 96;
  uint64_t v161 = v0 + 16;
  uint64_t v1 = *(void (**)(uint64_t, void, uint64_t))(v0 + 1176);
  if (*(_DWORD *)(v0 + 52) == 1)
  {
    uint64_t v2 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1136);
    uint64_t v3 = *(void *)(v0 + 896);
    uint64_t v157 = *(void *)(v0 + 888);
    uint64_t v4 = *(void *)(v0 + 672);
    uint64_t v5 = *(void *)(v0 + 640);
    uint64_t v6 = *(void *)(v0 + 632);
    uint64_t v7 = *(void *)(v0 + 624);
    uint64_t v8 = *(void *)(v0 + 600);
    v1(v4, *(void *)(v0 + 656), v5);
    v2(v4, 0, 1, v5);
    sub_10001B220(v6, v8, (uint64_t *)&unk_1007FC470);
    uint64_t v9 = *(int *)(v7 + 24);
    uint64_t v10 = v6 + *(int *)(v7 + 20);
    uint64_t v11 = *(void *)v10;
    LOBYTE(v5) = *(unsigned char *)(v10 + 8);
    uint64_t v12 = *(void *)(v6 + v9);
    LOBYTE(v2) = *(unsigned char *)(v6 + v9 + 8);
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_10011C880(2, v4, 0, v157, v3, v8, 0, 0, v11, v5, v12, v2, 0, 0, 1u, v160, v0 + 56, v161);
  }
  else
  {
    uint64_t v14 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1136);
    uint64_t v15 = *(void *)(v0 + 896);
    uint64_t v155 = *(void *)(v0 + 888);
    uint64_t v158 = *(void *)(v0 + 1168);
    uint64_t v16 = *(void *)(v0 + 688);
    uint64_t v17 = *(void *)(v0 + 640);
    uint64_t v18 = *(void *)(v0 + 632);
    uint64_t v19 = *(void *)(v0 + 624);
    uint64_t v20 = *(void *)(v0 + 616);
    v1(v16, *(void *)(v0 + 656), v17);
    v14(v16, 0, 1, v17);
    sub_10001B220(v18, v20, (uint64_t *)&unk_1007FC470);
    uint64_t v21 = *(int *)(v19 + 24);
    uint64_t v22 = v18 + *(int *)(v19 + 20);
    uint64_t v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))v22;
    LOBYTE(v14) = *(unsigned char *)(v22 + 8);
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v18 + v21);
    LOBYTE(v18) = *(unsigned char *)(v18 + v21 + 8);
    swift_bridgeObjectRetain();
    char v25 = sub_100033E34(2, v16, 0, v155, v15, v20, 0, 0, v23, v14, v24, v18, 0, 0, 1u, v160, v0 + 56, v161);
    if (v158)
    {
      uint64_t v26 = *(void *)(v0 + 656);
      uint64_t v27 = *(void *)(v0 + 648);
      uint64_t v28 = *(void *)(v0 + 640);
      sub_100440B48(*(void *)(v0 + 632), type metadata accessor for PhotoMetadata);
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
      *(void *)(v0 + 1248) = v158;
      uint64_t v29 = *(void **)(v0 + 1024);
      unint64_t v30 = *(void *)(v0 + 928);
      uint64_t v31 = *(void *)(v0 + 920);
      _StringGuts.grow(_:)(43);
      *(void *)(v0 + 400) = 0;
      *(void *)(v0 + 408) = 0xE000000000000000;
      v32._countAndFlagsBits = 0xD000000000000028;
      v32._object = (void *)0x800000010069D4C0;
      String.append(_:)(v32);
      *(void *)(v0 + 424) = v158;
      sub_100010218((uint64_t *)&unk_1007FC0D0);
      _print_unlocked<A, B>(_:_:)();
      v33._countAndFlagsBits = 46;
      v33._object = (void *)0xE100000000000000;
      String.append(_:)(v33);
      sub_10043A1C8(*(void *)(v0 + 400), *(void *)(v0 + 408), v31, v30, (uint64_t (*)(void))&static os_log_type_t.error.getter);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v34 = v29;
      *(void *)(v0 + 1256) = static MainActor.shared.getter();
      uint64_t v35 = (void *)swift_task_alloc();
      *(void *)(v0 + 1264) = v35;
      *uint64_t v35 = v0;
      v35[1] = sub_100424F3C;
      uint64_t v36 = *(void *)(v0 + 696);
      uint64_t v37 = *(void *)(v0 + 440);
      return sub_10043A3E4(v37, v36, (uint64_t)v29);
    }
    uint64_t v13 = v25;
    uint64_t v6 = *(void *)(v0 + 632);
  }
  sub_100440B48(v6, type metadata accessor for PhotoMetadata);
  *(void *)(v0 + 1200) = v13;
  unint64_t v39 = *(void *)(v0 + 928);
  uint64_t v40 = *(void *)(v0 + 920);
  uint64_t v41 = *(void *)(v0 + 440);
  (*(void (**)(void, void))(*(void *)(v0 + 648) + 8))(*(void *)(v0 + 656), *(void *)(v0 + 640));
  _StringGuts.grow(_:)(23);
  swift_bridgeObjectRelease();
  char v151 = v13;
  *(void *)(v0 + 432) = swift_getObjectType();
  sub_100010218(&qword_1008076B0);
  v42._countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v42);
  swift_bridgeObjectRelease();
  v43._countAndFlagsBits = 46;
  v43._object = (void *)0xE100000000000000;
  String.append(_:)(v43);
  sub_10043A1C8(0xD000000000000014, 0x800000010069D4F0, v40, v39, (uint64_t (*)(void))&static os_log_type_t.debug.getter);
  swift_bridgeObjectRelease();
  uint64_t v44 = (uint64_t *)(v41 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
  swift_beginAccess();
  uint64_t v45 = *v44;
  uint64_t v46 = *(void **)(v0 + 1024);
  if ((unint64_t)*v44 >> 62)
  {
LABEL_87:
    id v137 = v46;
    swift_bridgeObjectRetain();
    uint64_t result = _CocoaArrayWrapper.endIndex.getter();
    uint64_t v47 = result;
    if (result) {
      goto LABEL_10;
    }
LABEL_88:
    uint64_t v138 = *(void **)(v0 + 1024);
    unint64_t v139 = *(void *)(v0 + 928);
    uint64_t v140 = *(void *)(v0 + 920);
    swift_bridgeObjectRelease();

    sub_10043A1C8(0xD00000000000001ELL, 0x800000010069D560, v140, v139, (uint64_t (*)(void))&static os_log_type_t.debug.getter);
    swift_bridgeObjectRelease();
    uint64_t v141 = (void *)swift_task_alloc();
    *(void *)(v0 + 1224) = v141;
    *uint64_t v141 = v0;
    v141[1] = sub_1004247BC;
    uint64_t v142 = *(void *)(v0 + 896);
    uint64_t v143 = *(void *)(v0 + 888);
    uint64_t v144 = *(void *)(v0 + 696);
    uint64_t v145 = *(void *)(v0 + 440);
    return sub_10043A9A8(v144, 0, v145, v0 + 416, v143, v142);
  }
  uint64_t v47 = *(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
  id v48 = v46;
  uint64_t result = swift_bridgeObjectRetain();
  if (!v47) {
    goto LABEL_88;
  }
LABEL_10:
  if ((v45 & 0xC000000000000001) != 0)
  {
    id v49 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return result;
    }
    id v49 = *(id *)(v45 + 32);
  }
  id v50 = v49;
  if (static UUID.== infix(_:_:)())
  {
LABEL_14:
    char v51 = *(void **)(v0 + 1024);
    swift_bridgeObjectRelease();

    goto LABEL_15;
  }
  uint64_t v148 = *(void *)(v0 + 544);
  uint64_t v149 = *(void *)(v0 + 520);
  uint64_t v150 = *(void *)(v0 + 496);
  uint64_t v153 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 512) + 48);
  long long v154 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 488) + 48);
  long long v152 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 536) + 48);
  uint64_t v56 = (void *)_s10PhotoAssetCMa(0);
  uint64_t v57 = 0;
  uint64_t v156 = v56;
  uint64_t v159 = v47 - 1;
  while (1)
  {
    uint64_t v58 = swift_dynamicCastClass();
    if (v58)
    {
      uint64_t v59 = v58;
      uint64_t v60 = *(void **)(v0 + 1024);
      uint64_t v61 = swift_dynamicCastClass();
      if (v61)
      {
        if (*(void *)(v59 + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata))
        {
          uint64_t v62 = v61;
          uint64_t v63 = *(void *)(v0 + 592);
          uint64_t v64 = *(void *)(v0 + 480);
          id v65 = v60;
          id v66 = v50;
          swift_retain();
          sub_1000395AC(v63);
          swift_release();
          uint64_t v67 = *v154;
          if ((*v154)(v63, 1, v64))
          {
            uint64_t v68 = *(void **)(v0 + 1024);
            uint64_t v69 = *(void *)(v0 + 592);

LABEL_24:
            sub_10001457C(v69, (uint64_t *)&unk_100804080);
LABEL_25:
            uint64_t v56 = v156;
            goto LABEL_26;
          }
          uint64_t v94 = *(void *)(v0 + 592);
          uint64_t v95 = *(uint64_t **)(v0 + 496);
          sub_10043E748(v94, (uint64_t)v95, _s10PhotoAssetC9PhotoDataVMa);
          sub_10001457C(v94, (uint64_t *)&unk_100804080);
          uint64_t v96 = *v95;
          uint64_t v97 = *(void *)(v150 + 8);
          swift_bridgeObjectRetain();
          sub_100440B48((uint64_t)v95, _s10PhotoAssetC9PhotoDataVMa);
          if (!v97)
          {
            id v115 = *(void **)(v0 + 1024);

            goto LABEL_25;
          }
          uint64_t v146 = v96;
          if (*(void *)(v62 + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata))
          {
            uint64_t v98 = *(void *)(v0 + 584);
            uint64_t v99 = *(void *)(v0 + 480);
            swift_retain();
            sub_1000395AC(v98);
            swift_release();
            if (v67(v98, 1, v99))
            {
              uint64_t v100 = *(void **)(v0 + 1024);
              uint64_t v69 = *(void *)(v0 + 584);

              swift_bridgeObjectRelease();
              goto LABEL_24;
            }
            uint64_t v118 = *(void *)(v0 + 584);
            uint64_t v119 = *(uint64_t **)(v0 + 496);
            sub_10043E748(v118, (uint64_t)v119, _s10PhotoAssetC9PhotoDataVMa);
            sub_10001457C(v118, (uint64_t *)&unk_100804080);
            uint64_t v120 = *v119;
            uint64_t v121 = *(void *)(v150 + 8);
            swift_bridgeObjectRetain();
            sub_100440B48((uint64_t)v119, _s10PhotoAssetC9PhotoDataVMa);
            if (v121)
            {
              uint64_t v122 = *(void **)(v0 + 1024);
              if (v146 == v120 && v97 == v121)
              {
LABEL_81:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();

LABEL_82:
                swift_bridgeObjectRelease();

                char v51 = *(void **)(v0 + 1024);
                goto LABEL_15;
              }
              char v123 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              if (v123) {
                goto LABEL_82;
              }

              goto LABEL_25;
            }
          }
          id v124 = *(void **)(v0 + 1024);

          swift_bridgeObjectRelease();
          goto LABEL_25;
        }
      }
    }
LABEL_26:
    _s14LivePhotoAssetCMa(0);
    uint64_t v70 = swift_dynamicCastClass();
    if (v70)
    {
      uint64_t v71 = v70;
      Swift::String v72 = *(void **)(v0 + 1024);
      uint64_t v73 = swift_dynamicCastClass();
      if (v73)
      {
        if (*(void *)(v71 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata))
        {
          uint64_t v74 = v73;
          uint64_t v75 = *(void *)(v0 + 576);
          uint64_t v76 = *(void *)(v0 + 504);
          id v77 = v72;
          id v66 = v50;
          swift_retain();
          sub_1000398E0(v75);
          swift_release();
          uint64_t v78 = *v153;
          if ((*v153)(v75, 1, v76))
          {
            uint64_t v79 = *(void **)(v0 + 1024);
            uint64_t v80 = *(void *)(v0 + 576);

LABEL_31:
            sub_10001457C(v80, (uint64_t *)&unk_100804090);
LABEL_32:
            uint64_t v56 = v156;
            goto LABEL_33;
          }
          uint64_t v101 = *(void *)(v0 + 576);
          uint64_t v102 = *(uint64_t **)(v0 + 520);
          sub_10043E748(v101, (uint64_t)v102, _s14LivePhotoAssetC13LivePhotoDataVMa);
          sub_10001457C(v101, (uint64_t *)&unk_100804090);
          uint64_t v103 = *v102;
          uint64_t v104 = *(void *)(v149 + 8);
          swift_bridgeObjectRetain();
          sub_100440B48((uint64_t)v102, _s14LivePhotoAssetC13LivePhotoDataVMa);
          if (!v104)
          {
            uint64_t v116 = *(void **)(v0 + 1024);

            goto LABEL_32;
          }
          uint64_t v147 = v103;
          if (*(void *)(v74 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata))
          {
            uint64_t v105 = *(void *)(v0 + 568);
            uint64_t v106 = *(void *)(v0 + 504);
            swift_retain();
            sub_1000398E0(v105);
            swift_release();
            if (v78(v105, 1, v106))
            {
              uint64_t v107 = *(void **)(v0 + 1024);
              uint64_t v80 = *(void *)(v0 + 568);

              swift_bridgeObjectRelease();
              goto LABEL_31;
            }
            uint64_t v125 = *(void *)(v0 + 568);
            uint64_t v126 = *(uint64_t **)(v0 + 520);
            sub_10043E748(v125, (uint64_t)v126, _s14LivePhotoAssetC13LivePhotoDataVMa);
            sub_10001457C(v125, (uint64_t *)&unk_100804090);
            uint64_t v127 = *v126;
            uint64_t v128 = *(void *)(v149 + 8);
            swift_bridgeObjectRetain();
            sub_100440B48((uint64_t)v126, _s14LivePhotoAssetC13LivePhotoDataVMa);
            if (v128)
            {
              uint64_t v122 = *(void **)(v0 + 1024);
              if (v147 == v127 && v104 == v128) {
                goto LABEL_81;
              }
              char v129 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();

              if (v129) {
                goto LABEL_82;
              }

              goto LABEL_32;
            }
          }
          uint64_t v130 = *(void **)(v0 + 1024);

          swift_bridgeObjectRelease();
          goto LABEL_32;
        }
      }
    }
LABEL_33:
    _s10VideoAssetCMa(0);
    uint64_t v81 = swift_dynamicCastClass();
    if (v81
      && (v82 = v81, v83 = *(void **)(v0 + 1024), (uint64_t v84 = swift_dynamicCastClass()) != 0)
      && *(void *)(v82 + OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata))
    {
      uint64_t v85 = v84;
      uint64_t v86 = *(void *)(v0 + 560);
      uint64_t v87 = *(void *)(v0 + 528);
      id v88 = v83;
      id v50 = v50;
      swift_retain();
      sub_100039C14(v86);
      swift_release();
      uint64_t v89 = *v152;
      if ((*v152)(v86, 1, v87))
      {
        uint64_t v90 = *(void **)(v0 + 1024);
        uint64_t v91 = *(void *)(v0 + 560);

LABEL_38:
        sub_10001457C(v91, &qword_1007F9E10);
        uint64_t v56 = v156;
        goto LABEL_40;
      }
      uint64_t v108 = *(void *)(v0 + 560);
      uint64_t v109 = *(uint64_t **)(v0 + 544);
      sub_10043E748(v108, (uint64_t)v109, _s10VideoAssetC9VideoDataVMa);
      sub_10001457C(v108, &qword_1007F9E10);
      uint64_t v110 = *v109;
      uint64_t v111 = *(void *)(v148 + 8);
      swift_bridgeObjectRetain();
      sub_100440B48((uint64_t)v109, _s10VideoAssetC9VideoDataVMa);
      if (v111)
      {
        if (!*(void *)(v85 + OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata)) {
          goto LABEL_80;
        }
        uint64_t v112 = *(void *)(v0 + 552);
        uint64_t v113 = *(void *)(v0 + 528);
        swift_retain();
        sub_100039C14(v112);
        swift_release();
        if (v89(v112, 1, v113))
        {
          unint64_t v114 = *(void **)(v0 + 1024);
          uint64_t v91 = *(void *)(v0 + 552);

          swift_bridgeObjectRelease();
          goto LABEL_38;
        }
        uint64_t v131 = *(void *)(v0 + 552);
        uint64_t v132 = *(uint64_t **)(v0 + 544);
        sub_10043E748(v131, (uint64_t)v132, _s10VideoAssetC9VideoDataVMa);
        sub_10001457C(v131, &qword_1007F9E10);
        uint64_t v133 = *v132;
        uint64_t v134 = *(void *)(v148 + 8);
        swift_bridgeObjectRetain();
        sub_100440B48((uint64_t)v132, _s10VideoAssetC9VideoDataVMa);
        if (v134)
        {
          uint64_t v56 = *(void **)(v0 + 1024);
          if (v110 == v133 && v111 == v134) {
            goto LABEL_84;
          }
          char v135 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (v135)
          {
            swift_bridgeObjectRelease();

            char v51 = *(void **)(v0 + 1024);
            goto LABEL_15;
          }

          uint64_t v56 = v156;
        }
        else
        {
LABEL_80:
          uint64_t v136 = *(void **)(v0 + 1024);

          swift_bridgeObjectRelease();
          uint64_t v56 = v156;
        }
      }
      else
      {
        uint64_t v117 = *(void **)(v0 + 1024);

        uint64_t v56 = v156;
      }
    }
    else
    {
    }
LABEL_40:
    if (v159 == v57) {
      goto LABEL_88;
    }
    unint64_t v92 = v57 + 1;
    if ((v45 & 0xC000000000000001) != 0)
    {
      id v93 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else
    {
      uint64_t v46 = *(void **)((v45 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v92 >= (unint64_t)v46)
      {
        __break(1u);
        goto LABEL_87;
      }
      id v93 = *(id *)(v45 + 8 * v57 + 40);
    }
    id v50 = v93;
    if (__OFADD__(v92, 1)) {
      break;
    }
    ++v57;
    if (static UUID.== infix(_:_:)()) {
      goto LABEL_14;
    }
  }
  __break(1u);
LABEL_84:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  char v51 = *(void **)(v0 + 1024);
LABEL_15:

  uint64_t v52 = *(void **)(v0 + 1024);
  uint64_t v162 = (uint64_t (*)(void *, uint64_t, void *))((char *)&dword_1008058A0 + dword_1008058A0);
  id v53 = v52;
  uint64_t v54 = (void *)swift_task_alloc();
  *(void *)(v0 + 1208) = v54;
  void *v54 = v0;
  v54[1] = sub_100423CB0;
  uint64_t v55 = *(void *)(v0 + 440);
  return v162(v151, v55, v52);
}

uint64_t sub_100423CB0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 1024);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 880);
  uint64_t v4 = *(void *)(v1 + 872);
  return _swift_task_switch(sub_100423DF0, v4, v3);
}

uint64_t sub_100423DF0()
{
  uint64_t v1 = *(void **)(v0 + 456);
  sub_10043A1C8(0xD000000000000026, 0x800000010069D510, *(void *)(v0 + 920), *(void *)(v0 + 928), (uint64_t (*)(void))&static os_log_type_t.debug.getter);
  id v2 = [v1 viewIfLoaded];
  id v3 = [v2 window];

  if ((v3
     || (id v4 = [*(id *)(v0 + 456) presentedViewController],
         v4,
         v4))
    && ![*(id *)(v0 + 456) isBeingDismissed]
    || (uint64_t v5 = sub_100585038(), !sub_100038BD0(v5)))
  {
    uint64_t v14 = *(void **)(v0 + 1200);
    unint64_t v30 = *(void **)(v0 + 1024);
    uint64_t v31 = *(void **)(v0 + 1040);
    unint64_t v15 = *(void *)(v0 + 928);
    uint64_t v27 = *(void *)(v0 + 896);
    uint64_t v28 = *(void **)(v0 + 912);
    uint64_t v25 = *(void *)(v0 + 920);
    uint64_t v26 = *(void *)(v0 + 888);
    uint64_t v16 = *(void *)(v0 + 800);
    uint64_t v32 = *(void *)(v0 + 792);
    uint64_t v33 = *(void *)(v0 + 848);
    uint64_t v29 = *(void *)(v0 + 696);
    uint64_t v17 = *(void *)(v0 + 472);
    uint64_t v18 = *(void **)(v0 + 456);
    swift_release();
    uint64_t v19 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
    id v34 = v14;
    id v20 = v18;
    uint64_t v21 = static MainActor.shared.getter();
    uint64_t v22 = (void *)swift_allocObject();
    void v22[2] = v21;
    v22[3] = &protocol witness table for MainActor;
    v22[4] = v20;
    v22[5] = v34;
    sub_100328CA0(v17, (uint64_t)&unk_10080CBE0, (uint64_t)v22);
    swift_release();
    sub_10043A1C8(0xD000000000000019, 0x800000010069D540, v25, v15, (uint64_t (*)(void))&static os_log_type_t.debug.getter);
    swift_bridgeObjectRelease();
    swift_beginAccess();
    uint64_t v23 = (void *)sub_1000F2254(v26, v27);
    swift_endAccess();

    sub_10001457C(v29, (uint64_t *)&unk_100800A60);
    swift_unknownObjectWeakDestroy();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v33, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v24 = *(uint64_t (**)(id, void))(v0 + 8);
    return v24(v34, 0);
  }
  else
  {
    uint64_t v6 = *(void **)(v0 + 1200);
    sub_10043A1C8(0xD00000000000003DLL, 0x800000010069D3B0, *(void *)(v0 + 920), *(void *)(v0 + 928), (uint64_t (*)(void))&static os_log_type_t.error.getter);
    swift_bridgeObjectRelease();
    id v7 = v6;
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 1216) = v8;
    void *v8 = v0;
    v8[1] = sub_1004243A8;
    uint64_t v9 = *(void *)(v0 + 896);
    uint64_t v10 = *(void *)(v0 + 888);
    uint64_t v11 = *(void *)(v0 + 696);
    uint64_t v12 = *(void *)(v0 + 440);
    return sub_10043A9A8(v11, (uint64_t)v6, v12, v0 + 416, v10, v9);
  }
}

uint64_t sub_1004243A8()
{
  uint64_t v1 = *v0;
  id v2 = *(void **)(*v0 + 1200);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  uint64_t v3 = *(void *)(v1 + 880);
  uint64_t v4 = *(void *)(v1 + 872);
  return _swift_task_switch(sub_100424504, v4, v3);
}

uint64_t sub_100424504()
{
  uint64_t v1 = (void *)v0[150];
  id v2 = (void *)v0[130];
  uint64_t v3 = (void *)v0[128];
  uint64_t v4 = (void *)v0[114];
  uint64_t v5 = v0[106];
  uint64_t v6 = v0[100];
  uint64_t v7 = v0[99];
  uint64_t v8 = v0[87];
  swift_release();

  sub_10001457C(v8, (uint64_t *)&unk_100800A60);
  swift_unknownObjectWeakDestroy();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void, uint64_t))v0[1];
  return v9(0, 1);
}

uint64_t sub_1004247BC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 880);
  uint64_t v3 = *(void *)(v1 + 872);
  return _swift_task_switch(sub_100440CB0, v3, v2);
}

uint64_t sub_100424900()
{
  unint64_t v1 = v0[116];
  uint64_t v2 = v0[115];
  uint64_t v3 = v0[83];
  uint64_t v4 = v0[81];
  uint64_t v5 = v0[80];
  _StringGuts.grow(_:)(34);
  swift_bridgeObjectRelease();
  sub_10043A1C8(0xD00000000000003CLL, 0x800000010069D580, v2, v1, (uint64_t (*)(void))&static os_log_type_t.error.getter);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56))(v3, 1, 1, v5);
  v0[154] = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_task_alloc();
  v0[155] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_100424A54;
  uint64_t v7 = v0[83];
  uint64_t v8 = v0[55];
  return sub_10043A3E4(v8, v7, 0);
}

uint64_t sub_100424A54()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100424B90, v1, v0);
}

uint64_t sub_100424B90()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = v0[112];
    uint64_t v4 = v0[111];
    swift_beginAccess();
    uint64_t v5 = (void *)sub_1000F2254(v4, v3);
    swift_endAccess();

    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_10001457C(v0[83], (uint64_t *)&unk_100800A60);
  uint64_t v6 = v0[110];
  uint64_t v7 = v0[109];
  return _swift_task_switch(sub_100424CAC, v7, v6);
}

uint64_t sub_100424CAC()
{
  uint64_t v1 = (void *)v0[128];
  uint64_t v2 = (void *)v0[114];
  uint64_t v3 = v0[106];
  uint64_t v4 = v0[100];
  uint64_t v5 = v0[99];
  swift_release();

  swift_unknownObjectWeakDestroy();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void, uint64_t))v0[1];
  return v6(0, 1);
}

uint64_t sub_100424F3C()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100425078, v1, v0);
}

uint64_t sub_100425078()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    uint64_t v3 = (void *)v0[128];
    uint64_t v4 = v0[112];
    uint64_t v5 = v0[111];
    swift_beginAccess();
    uint64_t v6 = (void *)sub_1000F2254(v5, v4);
    swift_endAccess();

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = (void *)v0[128];
    swift_bridgeObjectRelease();
  }

  uint64_t v7 = v0[110];
  uint64_t v8 = v0[109];
  return _swift_task_switch(sub_100425190, v8, v7);
}

uint64_t sub_100425190()
{
  uint64_t v1 = (void *)v0[130];
  uint64_t v2 = (void *)v0[128];
  uint64_t v3 = (void *)v0[114];
  uint64_t v4 = v0[106];
  uint64_t v5 = v0[100];
  uint64_t v6 = v0[99];
  uint64_t v7 = v0[87];
  swift_release();

  swift_errorRelease();
  sub_10001457C(v7, (uint64_t *)&unk_100800A60);
  swift_unknownObjectWeakDestroy();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  swift_bridgeObjectRelease_n();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void, uint64_t))v0[1];
  return v8(0, 1);
}

void sub_10042544C(void *a1, uint64_t a2, uint64_t a3, char a4, void *a5, uint64_t a6, uint64_t a7)
{
  if (a1)
  {
    uint64_t v8 = (void *)(a2 + OBJC_IVAR____TtC7Journal20CanvasViewController_photoPickerLatestAssetAdditions);
    swift_beginAccess();
    id v9 = a1;
    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v8 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
    swift_endAccess();
  }
  else if (a4)
  {
    sub_100010218(&qword_1007FC170);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1006D6280;
    *(void *)(v13 + 32) = a6;
    *(void *)(v13 + 40) = a7;
    swift_bridgeObjectRetain();
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [a5 deselectAssetsWithIdentifiers:isa];
  }
}

uint64_t sub_100425580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[2] = a4;
  v5[3] = a5;
  v5[4] = type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_task_alloc();
  v5[6] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_100425638;
  return sub_100425CF0(1, 1);
}

uint64_t sub_100425638()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v1 + 56) = v3;
  *(void *)(v1 + 64) = v2;
  return _swift_task_switch(sub_10042577C, v3, v2);
}

uint64_t sub_10042577C()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry);
  v0[9] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_100425828;
  uint64_t v3 = v0[3];
  return sub_1004260C8(v1, v3);
}

uint64_t sub_100425828(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  return _swift_task_switch(sub_100425950, v4, v3);
}

uint64_t sub_100425950()
{
  v0[12] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[13] = v2;
  v0[14] = v1;
  return _swift_task_switch(sub_1004259DC, v2, v1);
}

uint64_t sub_1004259DC()
{
  uint64_t v1 = (void *)v0[11];
  if (v1)
  {
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1006D6D00;
    *(void *)(v2 + 32) = v1;
    uint64_t v8 = (double *)v2;
    specialized Array._endMutation()();
    uint64_t v3 = v8;
  }
  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  v0[15] = v3;
  id v4 = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[16] = v5;
  void *v5 = v0;
  v5[1] = sub_100425AE0;
  uint64_t v6 = v0[9];
  return sub_10041A54C(v6, (uint64_t)v3);
}

uint64_t sub_100425AE0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return _swift_task_switch(sub_100425C24, v3, v2);
}

uint64_t sub_100425C24()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  return _swift_task_switch(sub_100425C88, v1, v2);
}

uint64_t sub_100425C88()
{
  uint64_t v1 = *(void **)(v0 + 88);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100425CF0(char a1, char a2)
{
  *(void *)(v3 + 16) = v2;
  *(unsigned char *)(v3 + 81) = a2;
  *(unsigned char *)(v3 + 80) = a1;
  *(void *)(v3 + 24) = type metadata accessor for MainActor();
  *(void *)(v3 + 32) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 40) = v5;
  *(void *)(v3 + 48) = v4;
  return _swift_task_switch(sub_100425D94, v5, v4);
}

uint64_t sub_100425D94()
{
  id v1 = [*(id *)(v0 + 16) viewIfLoaded];
  id v2 = [v1 window];

  if ((v2
     || (id v3 = [*(id *)(v0 + 16) presentedViewController],
         v3,
         v3))
    && ([*(id *)(v0 + 16) isBeingDismissed] & 1) == 0)
  {
    uint64_t v6 = *(void *)(v0 + 16);
    char v7 = *(unsigned char *)(v0 + 81);
    char v8 = *(unsigned char *)(v0 + 80);
    uint64_t v9 = static MainActor.shared.getter();
    *(void *)(v0 + 56) = v9;
    uint64_t v10 = swift_task_alloc();
    *(void *)(v0 + 64) = v10;
    *(unsigned char *)(v10 + 16) = v7;
    *(void *)(v10 + 24) = v6;
    *(unsigned char *)(v10 + 32) = v8;
    uint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 72) = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_100425F68;
    return withCheckedContinuation<A>(isolation:function:_:)(v11, v9, &protocol witness table for MainActor, 0xD000000000000038, 0x800000010069D0C0, sub_10043DB44, v10, (char *)&type metadata for () + 8);
  }
  else
  {
    swift_release();
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_100425F68()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_100193204, v3, v2);
}

uint64_t sub_1004260C8(uint64_t a1, uint64_t a2)
{
  v3[26] = a2;
  v3[27] = v2;
  v3[25] = a1;
  sub_100010218(&qword_1007FA1D0);
  v3[28] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for URL();
  v3[29] = v4;
  v3[30] = *(void *)(v4 - 8);
  v3[31] = swift_task_alloc();
  v3[32] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_1007FC470);
  v3[33] = swift_task_alloc();
  v3[34] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100800A60);
  v3[35] = swift_task_alloc();
  v3[36] = swift_task_alloc();
  v3[37] = swift_task_alloc();
  v3[38] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for Date();
  v3[39] = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  v3[40] = v6;
  v3[41] = *(void *)(v6 + 64);
  v3[42] = swift_task_alloc();
  v3[43] = swift_task_alloc();
  v3[44] = type metadata accessor for MainActor();
  v3[45] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[46] = v8;
  v3[47] = v7;
  return _swift_task_switch(sub_100426310, v8, v7);
}

uint64_t sub_100426310()
{
  uint64_t v1 = (_OWORD *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 304);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v4 = *(void *)(v0 + 240);
  uint64_t v5 = *(void *)(v0 + 208);
  Date.init()();
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
  v6(v2, 1, 1, v3);
  if (!*(void *)(v5 + 16))
  {
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;
    goto LABEL_8;
  }
  uint64_t v7 = UIImagePickerControllerOriginalImage;
  uint64_t v8 = sub_10001B6A4(v7);
  if ((v9 & 1) == 0)
  {
    *uint64_t v1 = 0u;
    *(_OWORD *)(v0 + 112) = 0u;

    goto LABEL_8;
  }
  sub_10001B648(*(void *)(*(void *)(v0 + 208) + 56) + 32 * v8, v0 + 96);

  if (!*(void *)(v0 + 120))
  {
LABEL_8:
    sub_10001457C(v0 + 96, &qword_1007FAD50);
    goto LABEL_9;
  }
  sub_10001B284(0, (unint64_t *)&qword_10080A1F0);
  if (swift_dynamicCast())
  {
    uint64_t v10 = *(void *)(v0 + 344);
    uint64_t v11 = *(void *)(v0 + 312);
    uint64_t v12 = *(void *)(v0 + 320);
    uint64_t v13 = *(void *)(v0 + 296);
    uint64_t v14 = *(void *)(v0 + 272);
    id v49 = *(void **)(v0 + 192);
    v6(v13, 1, 1, *(void *)(v0 + 232));
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v14, v10, v11);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(v14, 0, 1, v11);
    *(_OWORD *)(v0 + 16) = 0u;
    *(_OWORD *)(v0 + 32) = 0u;
    *(unsigned char *)(v0 + 48) = 1;
    unint64_t v15 = sub_1002B5008(3, v49, v13, 0, 0, v14, 0, 0, 0, 1u, 0, 1u, 0, 0, 1u, v0 + 16, v0 + 16, v0 + 16);
LABEL_21:
    *(void *)(v0 + 384) = v15;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease();
    *(void *)(v0 + 184) = swift_getObjectType();
    sub_100010218(&qword_1008076B0);
    v40._countAndFlagsBits = String.init<A>(describing:)();
    String.append(_:)(v40);
    swift_bridgeObjectRelease();
    v41._countAndFlagsBits = 46;
    v41._object = (void *)0xE100000000000000;
    String.append(_:)(v41);
    sub_10043AC9C(0xD000000000000015, 0x800000010069D370, (uint64_t (*)(void))&static os_log_type_t.debug.getter);
    swift_bridgeObjectRelease();
    char v42 = v15[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type];
    Swift::String v43 = (void *)swift_task_alloc();
    *(void *)(v0 + 392) = v43;
    void *v43 = v0;
    v43[1] = sub_100426B84;
    uint64_t v44 = *(void *)(v0 + 200);
    return sub_10042F018(v44, v42);
  }
LABEL_9:
  uint64_t v16 = (_OWORD *)(v0 + 128);
  if (!*(void *)(v5 + 16))
  {
    _OWORD *v16 = 0u;
    *(_OWORD *)(v0 + 144) = 0u;
LABEL_17:
    uint64_t v25 = *(void *)(v0 + 288);
    uint64_t v26 = *(void *)(v0 + 232);
    sub_10001457C(v0 + 128, &qword_1007FAD50);
    v6(v25, 1, 1, v26);
    goto LABEL_18;
  }
  uint64_t v17 = UIImagePickerControllerMediaURL;
  uint64_t v18 = sub_10001B6A4(v17);
  if (v19)
  {
    sub_10001B648(*(void *)(*(void *)(v0 + 208) + 56) + 32 * v18, v0 + 128);
  }
  else
  {
    _OWORD *v16 = 0u;
    *(_OWORD *)(v0 + 144) = 0u;
  }

  if (!*(void *)(v0 + 152)) {
    goto LABEL_17;
  }
  uint64_t v20 = *(void *)(v0 + 288);
  uint64_t v21 = *(void *)(v0 + 232);
  uint64_t v22 = *(void *)(v0 + 240);
  int v23 = swift_dynamicCast();
  v6(v20, v23 ^ 1u, 1, v21);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21) != 1)
  {
    uint64_t v24 = *(void *)(v0 + 248);
    (*(void (**)(void, void, void))(*(void *)(v0 + 240) + 32))(*(void *)(v0 + 256), *(void *)(v0 + 288), *(void *)(v0 + 232));
    sub_100369EF0(v24);
    uint64_t v33 = *(void *)(v0 + 320);
    uint64_t v47 = *(void *)(v0 + 312);
    uint64_t v48 = *(void *)(v0 + 344);
    uint64_t v34 = *(void *)(v0 + 304);
    uint64_t v45 = *(void *)(v0 + 280);
    uint64_t v46 = *(void *)(v0 + 264);
    uint64_t v35 = *(void *)(v0 + 248);
    uint64_t v50 = *(void *)(v0 + 256);
    uint64_t v37 = *(void *)(v0 + 232);
    uint64_t v36 = *(void *)(v0 + 240);
    sub_10001457C(v34, (uint64_t *)&unk_100800A60);
    id v38 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
    v38(v34, v35, v37);
    v6(v34, 0, 1, v37);
    v38(v45, v35, v37);
    v6(v45, 0, 1, v37);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v46, v48, v47);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v33 + 56))(v46, 0, 1, v47);
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    *(unsigned char *)(v0 + 88) = 1;
    unint64_t v15 = sub_10011C880(3, v45, 0, 0, 0, v46, 0, 0, 0, 1, 0, 1u, 0, 0, 1u, v0 + 56, v0 + 56, v0 + 56);
    unint64_t v39 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v39(v35, v37);
    v39(v50, v37);
    goto LABEL_21;
  }
LABEL_18:
  uint64_t v27 = *(void *)(v0 + 288);
  swift_release();
  sub_10001457C(v27, (uint64_t *)&unk_100800A60);
  sub_10043AC9C(0xD00000000000003FLL, 0x800000010069D2F0, (uint64_t (*)(void))&static os_log_type_t.error.getter);
  uint64_t v28 = *(void *)(v0 + 344);
  uint64_t v30 = *(void *)(v0 + 312);
  uint64_t v29 = *(void *)(v0 + 320);
  sub_10001457C(*(void *)(v0 + 304), (uint64_t *)&unk_100800A60);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(void))(v0 + 8);
  return v31(0);
}

uint64_t sub_100426B84(uint64_t a1)
{
  uint64_t v3 = (void *)*v1;
  uint64_t v4 = (void *)*v1;
  v3[50] = a1;
  swift_task_dealloc();
  char v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1008058A0 + dword_1008058A0);
  uint64_t v5 = (void *)swift_task_alloc();
  v3[51] = v5;
  void *v5 = v4;
  v5[1] = sub_100426D00;
  uint64_t v6 = v3[25];
  uint64_t v7 = v3[48];
  return v9(v7, v6, a1);
}

uint64_t sub_100426D00(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 49) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 376);
  uint64_t v4 = *(void *)(v2 + 368);
  return _swift_task_switch(sub_100426E28, v4, v3);
}

uint64_t sub_100426E28()
{
  if (*(unsigned char *)(v0 + 49))
  {
    _StringGuts.grow(_:)(28);
    swift_bridgeObjectRelease();
    sub_10043AC9C(0xD000000000000036, 0x800000010069D3F0, (uint64_t (*)(void))&static os_log_type_t.error.getter);
    uint64_t v25 = (void *)swift_task_alloc();
    *(void *)(v0 + 416) = v25;
    *uint64_t v25 = v0;
    v25[1] = sub_1004272A8;
    uint64_t v22 = *(void *)(v0 + 304);
    uint64_t v23 = *(void *)(v0 + 200);
    uint64_t v24 = 0;
    goto LABEL_8;
  }
  uint64_t v1 = *(void **)(v0 + 384);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 336);
  uint64_t v4 = *(void *)(v0 + 312);
  uint64_t v5 = *(void *)(v0 + 320);
  uint64_t v7 = *(void **)(v0 + 216);
  uint64_t v6 = *(void *)(v0 + 224);
  uint64_t v32 = v6;
  uint64_t v8 = *(void *)(v0 + 208);
  sub_10043AC9C(0xD00000000000001FLL, 0x800000010069D390, (uint64_t (*)(void))&static os_log_type_t.debug.getter);
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2, v4);
  id v10 = v7;
  id v11 = v1;
  swift_bridgeObjectRetain();
  uint64_t v12 = static MainActor.shared.getter();
  unint64_t v13 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = v12;
  *((void *)v14 + 3) = &protocol witness table for MainActor;
  *((void *)v14 + 4) = v10;
  *((void *)v14 + 5) = v11;
  *((void *)v14 + 6) = v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(&v14[v13], v3, v4);
  sub_100328A60(v32, (uint64_t)&unk_10080CB68, (uint64_t)v14);
  swift_release();
  id v15 = [v10 viewIfLoaded];
  id v16 = [v15 window];

  if (!v16
    && (id v17 = [*(id *)(v0 + 216) presentedViewController],
        v17,
        !v17)
    || [*(id *)(v0 + 216) isBeingDismissed])
  {
    uint64_t v18 = sub_100585038();
    if (sub_100038BD0(v18))
    {
      char v19 = *(void **)(v0 + 384);
      sub_10043AC9C(0xD00000000000003DLL, 0x800000010069D3B0, (uint64_t (*)(void))&static os_log_type_t.error.getter);
      id v20 = v19;
      uint64_t v21 = (void *)swift_task_alloc();
      *(void *)(v0 + 424) = v21;
      *uint64_t v21 = v0;
      v21[1] = sub_100427504;
      uint64_t v22 = *(void *)(v0 + 304);
      uint64_t v23 = *(void *)(v0 + 200);
      uint64_t v24 = (uint64_t)v19;
LABEL_8:
      return sub_10043A3E4(v23, v22, v24);
    }
  }
  uint64_t v27 = *(void **)(v0 + 400);
  uint64_t v33 = *(void *)(v0 + 384);
  swift_release();

  uint64_t v28 = *(void *)(v0 + 344);
  uint64_t v30 = *(void *)(v0 + 312);
  uint64_t v29 = *(void *)(v0 + 320);
  sub_10001457C(*(void *)(v0 + 304), (uint64_t *)&unk_100800A60);
  (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v28, v30);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v31 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v31(v33);
}

uint64_t sub_1004272A8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 376);
  uint64_t v3 = *(void *)(v1 + 368);
  return _swift_task_switch(sub_1004273C8, v3, v2);
}

uint64_t sub_1004273C8()
{
  uint64_t v1 = (void *)v0[50];
  uint64_t v2 = (void *)v0[48];
  swift_release();

  uint64_t v3 = v0[43];
  uint64_t v4 = v0[39];
  uint64_t v5 = v0[40];
  sub_10001457C(v0[38], (uint64_t *)&unk_100800A60);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6(0);
}

uint64_t sub_100427504()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 384);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 376);
  uint64_t v4 = *(void *)(v1 + 368);
  return _swift_task_switch(sub_100440D74, v4, v3);
}

uint64_t sub_100427644()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 376);
  uint64_t v3 = *(void *)(v1 + 368);
  return _swift_task_switch(sub_100427764, v3, v2);
}

uint64_t sub_100427764()
{
  swift_release();
  swift_errorRelease();
  uint64_t v1 = v0[43];
  uint64_t v2 = v0[39];
  uint64_t v3 = v0[40];
  sub_10001457C(v0[38], (uint64_t *)&unk_100800A60);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4(0);
}

void sub_10042789C(uint64_t a1)
{
  id v2 = [self defaultCenter];
  id v3 = v2;
  if (qword_1007F6EA0 != -1)
  {
    swift_once();
    id v2 = v3;
  }
  [v2 postNotificationName:qword_10083D428 object:a1 userInfo:0];
}

uint64_t sub_10042794C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[4] = a6;
  v7[5] = a7;
  uint64_t v7[2] = a4;
  v7[3] = a5;
  v7[6] = type metadata accessor for MainActor();
  v7[7] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[8] = v9;
  v7[9] = v8;
  return _swift_task_switch(sub_1004279EC, v9, v8);
}

uint64_t sub_1004279EC()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry);
  id v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *id v2 = v0;
  v2[1] = sub_100427A94;
  uint64_t v3 = v0[3];
  return sub_100427D5C(v1, v3);
}

uint64_t sub_100427A94(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  return _swift_task_switch(sub_100427BBC, v4, v3);
}

uint64_t sub_100427BBC()
{
  uint64_t v1 = *(void **)(v0 + 88);

  if (v1)
  {
    swift_release();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    return _swift_task_switch(sub_100427C60, 0, 0);
  }
}

uint64_t sub_100427C60()
{
  *(void *)(v0 + 96) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100427CEC, v2, v1);
}

uint64_t sub_100427CEC()
{
  uint64_t v1 = (void (*)(uint64_t))v0[4];
  uint64_t v2 = swift_release();
  v1(v2);
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  return _swift_task_switch(sub_100289EB8, v3, v4);
}

uint64_t sub_100427D5C(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  v2[7] = type metadata accessor for MainActor();
  v2[8] = static MainActor.shared.getter();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[9] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100427E20;
  return sub_10042F018(a1, 6);
}

uint64_t sub_100427E20(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100427F20, 0, 0);
}

uint64_t sub_100427F20()
{
  _s16MultiPinMapAssetCMa();
  uint64_t v1 = swift_dynamicCastClass();
  if (!v1) {
    goto LABEL_14;
  }
  if (!*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)) {
    goto LABEL_14;
  }
  swift_retain();
  uint64_t v2 = sub_100039114();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7;
  swift_release();
  *(void *)(v0 + 88) = v2;
  *(void *)(v0 + 96) = v4;
  *(void *)(v0 + 104) = v6;
  *(unsigned char *)(v0 + 176) = v8;
  if (v2 == 1)
  {
LABEL_14:
    id v16 = *(void **)(v0 + 80);
    if (v16)
    {
      id v17 = v16;
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 112) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_100428340;
      uint64_t v19 = *(void *)(v0 + 48);
      return sub_1000EA4DC((uint64_t)v17, v19);
    }
    else
    {
      uint64_t v21 = (unint64_t *)(*(void *)(v0 + 40) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
      swift_beginAccess();
      unint64_t v22 = *v21;
      if (v22 >> 62)
      {
LABEL_34:
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v24 = *(void *)(v0 + 80);
      char v25 = sub_10018B188();
      uint64_t v26 = 11;
      if ((v25 & 1) == 0) {
        uint64_t v26 = 12;
      }
      if (v24 || v23 <= v26)
      {
        uint64_t v29 = (void *)swift_task_alloc();
        *(void *)(v0 + 120) = v29;
        void *v29 = v0;
        v29[1] = sub_1004285F8;
        uint64_t v30 = *(void *)(v0 + 48);
        return sub_1000E7908(v30);
      }
      else
      {
        uint64_t v28 = dispatch thunk of Actor.unownedExecutor.getter();
        return _swift_task_switch(sub_1004290B4, v28, v27);
      }
    }
  }
  unint64_t v9 = *(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsWithSlimAsset);
  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v10) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  if (!v10)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    sub_10003F810(v2);
    goto LABEL_14;
  }
LABEL_6:
  uint64_t v11 = 0;
  while (1)
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v12 = *(id *)(v9 + 8 * v11 + 32);
    }
    unint64_t v13 = v12;
    *(void *)(v0 + 128) = v12;
    uint64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v15 = swift_dynamicCastClass();
    *(void *)(v0 + 136) = v15;
    if (v15) {
      break;
    }

    ++v11;
    if (v14 == v10) {
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_100428734;
  return sub_1000987F4(v2);
}

uint64_t sub_100428340(char a1)
{
  *(unsigned char *)(*(void *)v1 + 177) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100428440, 0, 0);
}

uint64_t sub_100428440()
{
  int v1 = *(unsigned __int8 *)(v0 + 177);

  if (v1 == 1)
  {
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v3;
    uint64_t v5 = sub_100440D78;
LABEL_10:
    return _swift_task_switch(v5, v2, v4);
  }
  uint64_t v6 = (unint64_t *)(*(void *)(v0 + 40) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  unint64_t v7 = *v6;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v9 = *(void *)(v0 + 80);
  char v10 = sub_10018B188();
  uint64_t v11 = 11;
  if ((v10 & 1) == 0) {
    uint64_t v11 = 12;
  }
  if (!v9 && v8 > v11)
  {
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v12;
    uint64_t v5 = sub_1004290B4;
    goto LABEL_10;
  }
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v13;
  *unint64_t v13 = v0;
  v13[1] = sub_1004285F8;
  uint64_t v14 = *(void *)(v0 + 48);
  return sub_1000E7908(v14);
}

uint64_t sub_1004285F8()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100440D78, v1, v0);
}

uint64_t sub_100428734()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100428830, 0, 0);
}

uint64_t sub_100428830()
{
  uint64_t v1 = (void *)v0[17];
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = v1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    id v6 = v1;
    unint64_t v7 = (void *)swift_task_alloc();
    v0[19] = v7;
    *unint64_t v7 = v0;
    v7[1] = sub_1004289A4;
    return sub_10058DF1C(ObjectType, v3);
  }
  else
  {
    char v10 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[20] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100428B4C;
    return v10();
  }
}

uint64_t sub_1004289A4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100428AA0, 0, 0);
}

uint64_t sub_100428AA0()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_100428B4C;
  return v3();
}

uint64_t sub_100428B4C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100428C48, 0, 0);
}

uint64_t sub_100428C48()
{
  if (qword_1007F6BA0 != -1) {
    swift_once();
  }
  sub_100438714(*(void *)(v0 + 136) + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id);
  id v1 = [self defaultCenter];
  if (qword_1007F6E78 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = qword_10083D400;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v1 postNotificationName:v3 object:isa];

  uint64_t v5 = sub_10003F810(v2);
  if (sub_10003D0C8(v5))
  {
    *(void *)(v0 + 168) = static MainActor.shared.getter();
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
    uint64_t v9 = sub_100428E1C;
  }
  else
  {

    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v10;
    uint64_t v9 = sub_100428F7C;
  }
  return _swift_task_switch(v9, v6, v8);
}

uint64_t sub_100428E1C()
{
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v1 = *(void *)(v0 + 40);
    uint64_t v2 = *(void *)(v1 + 56);
    uint64_t ObjectType = swift_getObjectType();
    Swift::Int v4 = sub_1000F678C((uint64_t)&off_100794C10);
    (*(void (**)(uint64_t, Swift::Int, uint64_t, uint64_t))(v2 + 8))(v1, v4, ObjectType, v2);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return _swift_task_switch(sub_100428EFC, 0, 0);
}

uint64_t sub_100428EFC()
{
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100428F7C, v2, v1);
}

uint64_t sub_100428F7C()
{
  swift_release();
  if (qword_1007F6F70 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_10080CA10);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "audioAddition - Appended new placeholder to entry assets.", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = (void *)v0[10];
  uint64_t v6 = (void *)v0[6];

  uint64_t v9 = (uint64_t (*)(void *))v0[1];
  id v7 = v6;
  return v9(v6);
}

uint64_t sub_1004290B4()
{
  swift_release();
  if (qword_1007F6F70 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_10080CA10);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "audioAddition - Failed to append new placeholder.", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5(0);
}

uint64_t sub_1004291D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(v7 + 200) = a7;
  *(void *)(v7 + 24) = a5;
  *(void *)(v7 + 32) = a6;
  *(void *)(v7 + 16) = a4;
  uint64_t v8 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v7 + 40) = v8;
  *(void *)(v7 + 48) = *(void *)(v8 - 8);
  *(void *)(v7 + 56) = swift_task_alloc();
  *(void *)(v7 + 64) = type metadata accessor for MainActor();
  *(void *)(v7 + 72) = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v7 + 80) = v10;
  *(void *)(v7 + 88) = v9;
  return _swift_task_switch(sub_1004292D4, v10, v9);
}

uint64_t sub_1004292D4()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = *(void *)(v0[2] + OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry);
  v0[12] = v2;
  os_log_type_t v3 = (void *)swift_task_alloc();
  v0[13] = v3;
  *os_log_type_t v3 = v0;
  v3[1] = sub_100429384;
  uint64_t v4 = v0[4];
  return sub_10043AE4C(v2, v1, v4);
}

uint64_t sub_100429384(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 112) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 88);
  uint64_t v4 = *(void *)(v2 + 80);
  return _swift_task_switch(sub_1004294AC, v4, v3);
}

uint64_t sub_1004294AC()
{
  uint64_t v1 = (void *)v0[14];
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = sub_100429564;
    uint64_t v4 = 0;
    uint64_t v5 = 0;
  }
  else
  {
    v0[20] = static MainActor.shared.getter();
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v5 = v7;
    v0[21] = v6;
    v0[22] = v7;
    uint64_t v3 = sub_100429BA0;
    uint64_t v4 = v6;
  }
  return _swift_task_switch(v3, v4, v5);
}

uint64_t sub_100429564()
{
  uint64_t v1 = (char *)v0[14];
  id v2 = *(void **)&v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_context];
  v0[15] = v2;
  if (v2 && (uint64_t v3 = *(void **)&v1[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO], (v0[16] = v3) != 0))
  {
    uint64_t v5 = v0[6];
    uint64_t v4 = v0[7];
    uint64_t v6 = v0[5];
    uint64_t v7 = swift_allocObject();
    v0[17] = v7;
    *(void *)(v7 + 16) = v3;
    *(unsigned char *)(v7 + 24) = 0;
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v6);
    id v8 = v3;
    v2;
    uint64_t v9 = (void *)swift_task_alloc();
    v0[18] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_100429708;
    uint64_t v10 = v0[7];
    return NSManagedObjectContext.perform<A>(schedule:_:)(v9, v10, sub_1003088D4, v7, (char *)&type metadata for () + 8);
  }
  else
  {

    uint64_t v11 = v0[10];
    uint64_t v12 = v0[11];
    return _swift_task_switch(sub_1004298EC, v11, v12);
  }
}

uint64_t sub_100429708()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 56);
  uint64_t v2 = *(void *)(*(void *)v0 + 48);
  uint64_t v3 = *(void *)(*(void *)v0 + 40);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_10042987C, 0, 0);
}

uint64_t sub_10042987C()
{
  uint64_t v1 = *(void **)(v0 + 120);
  uint64_t v2 = *(void **)(v0 + 112);

  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 88);
  return _swift_task_switch(sub_1004298EC, v3, v4);
}

uint64_t sub_1004298EC()
{
  if (*(unsigned char *)(v0 + 200) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 152) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_1004299F4;
    return sub_100425CF0(1, 0);
  }
  else
  {
    *(void *)(v0 + 160) = static MainActor.shared.getter();
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 168) = v4;
    *(void *)(v0 + 176) = v3;
    return _swift_task_switch(sub_100429BA0, v4, v3);
  }
}

uint64_t sub_1004299F4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_100429B14, v3, v2);
}

uint64_t sub_100429B14()
{
  v0[20] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[21] = v2;
  v0[22] = v1;
  return _swift_task_switch(sub_100429BA0, v2, v1);
}

uint64_t sub_100429BA0()
{
  uint64_t v1 = (void *)v0[14];
  if (v1)
  {
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1006D6D00;
    *(void *)(v2 + 32) = v1;
    id v8 = (double *)v2;
    specialized Array._endMutation()();
    uint64_t v3 = v8;
  }
  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  v0[23] = v3;
  id v4 = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[24] = v5;
  void *v5 = v0;
  v5[1] = sub_100429CA4;
  uint64_t v6 = v0[12];
  return sub_10041A54C(v6, (uint64_t)v3);
}

uint64_t sub_100429CA4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 176);
  uint64_t v3 = *(void *)(v1 + 168);
  return _swift_task_switch(sub_100429DE8, v3, v2);
}

uint64_t sub_100429DE8()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  return _swift_task_switch(sub_100429E4C, v1, v2);
}

uint64_t sub_100429E4C()
{
  uint64_t v1 = *(void **)(v0 + 112);
  swift_release();

  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100429EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6)
{
  *(unsigned char *)(v6 + 217) = a5;
  *(void *)(v6 + 16) = a4;
  *(void *)(v6 + 24) = a6;
  uint64_t v7 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v6 + 32) = v7;
  *(void *)(v6 + 40) = *(void *)(v7 - 8);
  *(void *)(v6 + 48) = swift_task_alloc();
  *(void *)(v6 + 56) = type metadata accessor for MainActor();
  *(void *)(v6 + 64) = static MainActor.shared.getter();
  return _swift_task_switch(sub_100429F9C, 0, 0);
}

uint64_t sub_100429F9C()
{
  uint64_t v1 = (void *)v0[2];
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = v1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    id v6 = v1;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[9] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10042A110;
    return sub_10058DF1C(ObjectType, v3);
  }
  else
  {
    uint64_t v10 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[10] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_10042A2B8;
    return v10();
  }
}

uint64_t sub_10042A110()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10042A20C, 0, 0);
}

uint64_t sub_10042A20C()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10042A2B8;
  return v3();
}

uint64_t sub_10042A2B8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10042A3B4, 0, 0);
}

uint64_t sub_10042A3B4()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = OBJC_IVAR____TtCC7Journal10Journaling5Asset_context;
  v0[11] = OBJC_IVAR____TtCC7Journal10Journaling5Asset_context;
  uint64_t v3 = *(void **)(v1 + v2);
  v0[12] = v3;
  if (v3 && (uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO), (v0[13] = v4) != 0))
  {
    uint64_t v6 = v0[5];
    uint64_t v5 = v0[6];
    uint64_t v7 = v0[4];
    uint64_t v8 = swift_allocObject();
    v0[14] = v8;
    *(void *)(v8 + 16) = v4;
    *(unsigned char *)(v8 + 24) = 0;
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v7);
    id v9 = v4;
    v3;
    uint64_t v10 = (void *)swift_task_alloc();
    v0[15] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_10042A578;
    uint64_t v11 = v0[6];
    return NSManagedObjectContext.perform<A>(schedule:_:)(v10, v11, sub_1003D2B80, v8, (char *)&type metadata for () + 8);
  }
  else
  {
    v0[17] = 0;
    uint64_t v13 = dispatch thunk of Actor.unownedExecutor.getter();
    v0[18] = v13;
    v0[19] = v12;
    return _swift_task_switch(sub_10042A784, v13, v12);
  }
}

uint64_t sub_10042A578()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 48);
  uint64_t v3 = *(void *)(*(void *)v1 + 40);
  uint64_t v4 = *(void *)(*(void *)v1 + 32);
  *(void *)(*(void *)v1 + 128) = v0;
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  return _swift_task_switch(sub_10042A6F8, 0, 0);
}

uint64_t sub_10042A6F8()
{
  uint64_t v1 = *(void **)(v0 + 96);

  *(void *)(v0 + 136) = *(void *)(v0 + 128);
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v0 + 144) = v3;
  *(void *)(v0 + 152) = v2;
  return _swift_task_switch(sub_10042A784, v3, v2);
}

uint64_t sub_10042A784()
{
  if (*(unsigned char *)(v0 + 217) == 1)
  {
    uint64_t v1 = (void *)swift_task_alloc();
    *(void *)(v0 + 160) = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_10042A940;
    return sub_100425CF0(1, 0);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 88);
    uint64_t v4 = *(void *)(v0 + 16);
    *(unsigned char *)(v4 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_isHidden) = 0;
    uint64_t v5 = *(void **)(v4 + v3);
    if (v5)
    {
      uint64_t v6 = *(void *)(v0 + 16);
      *(void *)(swift_task_alloc() + 16) = v6;
      id v7 = v5;
      sub_100010218((uint64_t *)&unk_1007FC460);
      NSManagedObjectContext.performAndWait<A>(_:)();

      swift_task_dealloc();
    }
    *(void *)(v0 + 168) = *(void *)(*(void *)(v0 + 24)
                                      + OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry);
    *(void *)(v0 + 176) = static MainActor.shared.getter();
    uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
    *(void *)(v0 + 184) = v9;
    *(void *)(v0 + 192) = v8;
    return _swift_task_switch(sub_10042AB98, v9, v8);
  }
}

uint64_t sub_10042A940()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 152);
  uint64_t v3 = *(void *)(v1 + 144);
  return _swift_task_switch(sub_10042AA60, v3, v2);
}

uint64_t sub_10042AA60()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[2];
  *(unsigned char *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_isHidden) = 0;
  uint64_t v3 = *(void **)(v2 + v1);
  if (v3)
  {
    uint64_t v4 = v0[2];
    *(void *)(swift_task_alloc() + 16) = v4;
    id v5 = v3;
    sub_100010218((uint64_t *)&unk_1007FC460);
    NSManagedObjectContext.performAndWait<A>(_:)();

    swift_task_dealloc();
  }
  v0[21] = *(void *)(v0[3] + OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry);
  v0[22] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[23] = v7;
  v0[24] = v6;
  return _swift_task_switch(sub_10042AB98, v7, v6);
}

uint64_t sub_10042AB98()
{
  uint64_t v1 = (void *)v0[2];
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1006D6D00;
  *(void *)(v2 + 32) = v1;
  uint64_t v7 = v2;
  specialized Array._endMutation()();
  v0[25] = v7;
  id v3 = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[26] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_10042AC8C;
  uint64_t v5 = v0[21];
  return sub_10041A54C(v5, v7);
}

uint64_t sub_10042AC8C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v3 = *(void *)(v1 + 184);
  return _swift_task_switch(sub_10042ADD0, v3, v2);
}

uint64_t sub_10042ADD0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 152);
  return _swift_task_switch(sub_10042AE34, v1, v2);
}

uint64_t sub_10042AE34()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10042AEA0(uint64_t a1, uint64_t a2)
{
  v2[5] = a1;
  v2[6] = a2;
  v2[7] = type metadata accessor for MainActor();
  v2[8] = static MainActor.shared.getter();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[9] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10042AF64;
  return sub_10042F018(a1, 6);
}

uint64_t sub_10042AF64(uint64_t a1)
{
  *(void *)(*(void *)v1 + 80) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10042B064, 0, 0);
}

uint64_t sub_10042B064()
{
  _s16MultiPinMapAssetCMa();
  uint64_t v1 = swift_dynamicCastClass();
  if (!v1) {
    goto LABEL_14;
  }
  if (!*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)) {
    goto LABEL_14;
  }
  swift_retain();
  uint64_t v2 = sub_100039114();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7;
  swift_release();
  *(void *)(v0 + 88) = v2;
  *(void *)(v0 + 96) = v4;
  *(void *)(v0 + 104) = v6;
  *(unsigned char *)(v0 + 176) = v8;
  if (v2 == 1)
  {
LABEL_14:
    uint64_t v16 = *(void **)(v0 + 80);
    if (v16)
    {
      id v17 = v16;
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 112) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_10042B484;
      uint64_t v19 = *(void *)(v0 + 48);
      return sub_1000EA4DC((uint64_t)v17, v19);
    }
    else
    {
      uint64_t v21 = (unint64_t *)(*(void *)(v0 + 40) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
      swift_beginAccess();
      unint64_t v22 = *v21;
      if (v22 >> 62)
      {
LABEL_34:
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v24 = *(void *)(v0 + 80);
      char v25 = sub_10018B188();
      uint64_t v26 = 11;
      if ((v25 & 1) == 0) {
        uint64_t v26 = 12;
      }
      if (v24 || v23 <= v26)
      {
        uint64_t v29 = (void *)swift_task_alloc();
        *(void *)(v0 + 120) = v29;
        void *v29 = v0;
        v29[1] = sub_10042B73C;
        uint64_t v30 = *(void *)(v0 + 48);
        return sub_1000E7908(v30);
      }
      else
      {
        uint64_t v28 = dispatch thunk of Actor.unownedExecutor.getter();
        return _swift_task_switch(sub_10042C1F8, v28, v27);
      }
    }
  }
  unint64_t v9 = *(void *)(*(void *)(v0 + 40) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsWithSlimAsset);
  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v10) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  if (!v10)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    sub_10003F810(v2);
    goto LABEL_14;
  }
LABEL_6:
  uint64_t v11 = 0;
  while (1)
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v12 = *(id *)(v9 + 8 * v11 + 32);
    }
    uint64_t v13 = v12;
    *(void *)(v0 + 128) = v12;
    uint64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v15 = swift_dynamicCastClass();
    *(void *)(v0 + 136) = v15;
    if (v15) {
      break;
    }

    ++v11;
    if (v14 == v10) {
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_10042B878;
  return sub_1000987F4(v2);
}

uint64_t sub_10042B484(char a1)
{
  *(unsigned char *)(*(void *)v1 + 177) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10042B584, 0, 0);
}

uint64_t sub_10042B584()
{
  int v1 = *(unsigned __int8 *)(v0 + 177);

  if (v1 == 1)
  {
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v3;
    uint64_t v5 = sub_100440D7C;
LABEL_10:
    return _swift_task_switch(v5, v2, v4);
  }
  uint64_t v6 = (unint64_t *)(*(void *)(v0 + 40) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  unint64_t v7 = *v6;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v9 = *(void *)(v0 + 80);
  char v10 = sub_10018B188();
  uint64_t v11 = 11;
  if ((v10 & 1) == 0) {
    uint64_t v11 = 12;
  }
  if (!v9 && v8 > v11)
  {
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v12;
    uint64_t v5 = sub_10042C1F8;
    goto LABEL_10;
  }
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_10042B73C;
  uint64_t v14 = *(void *)(v0 + 48);
  return sub_1000E7908(v14);
}

uint64_t sub_10042B73C()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100440D7C, v1, v0);
}

uint64_t sub_10042B878()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10042B974, 0, 0);
}

uint64_t sub_10042B974()
{
  uint64_t v1 = (void *)v0[17];
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = v1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    id v6 = v1;
    unint64_t v7 = (void *)swift_task_alloc();
    v0[19] = v7;
    *unint64_t v7 = v0;
    v7[1] = sub_10042BAE8;
    return sub_10058DF1C(ObjectType, v3);
  }
  else
  {
    char v10 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[20] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_10042BC90;
    return v10();
  }
}

uint64_t sub_10042BAE8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10042BBE4, 0, 0);
}

uint64_t sub_10042BBE4()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10042BC90;
  return v3();
}

uint64_t sub_10042BC90()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10042BD8C, 0, 0);
}

uint64_t sub_10042BD8C()
{
  if (qword_1007F6BA0 != -1) {
    swift_once();
  }
  sub_100438714(*(void *)(v0 + 136) + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id);
  id v1 = [self defaultCenter];
  if (qword_1007F6E78 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 88);
  uint64_t v3 = qword_10083D400;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v1 postNotificationName:v3 object:isa];

  uint64_t v5 = sub_10003F810(v2);
  if (sub_10003D0C8(v5))
  {
    *(void *)(v0 + 168) = static MainActor.shared.getter();
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
    uint64_t v9 = sub_10042BF60;
  }
  else
  {

    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v10;
    uint64_t v9 = sub_10042C0C0;
  }
  return _swift_task_switch(v9, v6, v8);
}

uint64_t sub_10042BF60()
{
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v1 = *(void *)(v0 + 40);
    uint64_t v2 = *(void *)(v1 + 56);
    uint64_t ObjectType = swift_getObjectType();
    Swift::Int v4 = sub_1000F678C((uint64_t)&off_100793658);
    (*(void (**)(uint64_t, Swift::Int, uint64_t, uint64_t))(v2 + 8))(v1, v4, ObjectType, v2);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return _swift_task_switch(sub_10042C040, 0, 0);
}

uint64_t sub_10042C040()
{
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10042C0C0, v2, v1);
}

uint64_t sub_10042C0C0()
{
  swift_release();
  if (qword_1007F6F70 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_10080CA10);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "audioAddition - Appended new audio asset to entry assets.", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = (void *)v0[10];
  uint64_t v6 = (void *)v0[6];

  uint64_t v9 = (uint64_t (*)(void *))v0[1];
  id v7 = v6;
  return v9(v6);
}

uint64_t sub_10042C1F8()
{
  swift_release();
  if (qword_1007F6F70 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_10080CA10);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "audioAddition - Failed to append new audio asset.", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5(0);
}

uint64_t sub_10042C318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[2] = a4;
  v5[3] = a5;
  v5[4] = type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[6] = v7;
  v5[7] = v6;
  return _swift_task_switch(sub_10042C3B4, v7, v6);
}

uint64_t sub_10042C3B4()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry);
  v0[8] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[9] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_10042C460;
  uint64_t v3 = v0[3];
  return sub_10042CB4C(v1, v3);
}

uint64_t sub_10042C460(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 80) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 56);
  uint64_t v4 = *(void *)(v2 + 48);
  return _swift_task_switch(sub_10042C588, v4, v3);
}

uint64_t sub_10042C588()
{
  if (v0[10])
  {
    uint64_t v1 = (void *)swift_task_alloc();
    v0[11] = v1;
    *uint64_t v1 = v0;
    v1[1] = sub_10042C68C;
    return sub_100425CF0(1, 0);
  }
  else
  {
    v0[12] = static MainActor.shared.getter();
    uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
    v0[13] = v4;
    v0[14] = v3;
    return _swift_task_switch(sub_10042C838, v4, v3);
  }
}

uint64_t sub_10042C68C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_10042C7AC, v3, v2);
}

uint64_t sub_10042C7AC()
{
  v0[12] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[13] = v2;
  v0[14] = v1;
  return _swift_task_switch(sub_10042C838, v2, v1);
}

uint64_t sub_10042C838()
{
  uint64_t v1 = (void *)v0[10];
  if (v1)
  {
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1006D6D00;
    *(void *)(v2 + 32) = v1;
    uint64_t v8 = (double *)v2;
    specialized Array._endMutation()();
    uint64_t v3 = v8;
  }
  else
  {
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  v0[15] = v3;
  id v4 = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[16] = v5;
  void *v5 = v0;
  v5[1] = sub_10042C93C;
  uint64_t v6 = v0[8];
  return sub_10041A54C(v6, (uint64_t)v3);
}

uint64_t sub_10042C93C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 112);
  uint64_t v3 = *(void *)(v1 + 104);
  return _swift_task_switch(sub_10042CA80, v3, v2);
}

uint64_t sub_10042CA80()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void *)(v0 + 56);
  return _swift_task_switch(sub_10042CAE4, v1, v2);
}

uint64_t sub_10042CAE4()
{
  uint64_t v1 = *(void **)(v0 + 80);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10042CB4C(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  type metadata accessor for MainActor();
  v3[6] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[7] = v5;
  v3[8] = v4;
  return _swift_task_switch(sub_10042CBE8, v5, v4);
}

uint64_t sub_10042CBE8()
{
  unint64_t v1 = *(void *)(v0[3] + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsWithSlimAsset);
  if (!(v1 >> 62))
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v2) {
      goto LABEL_3;
    }
LABEL_10:
    swift_bridgeObjectRelease_n();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[9] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10042CE08;
    uint64_t v8 = v0[3];
    return sub_10042F018(v8, 8);
  }
LABEL_17:
  swift_bridgeObjectRetain_n();
  uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
  if (!v2) {
    goto LABEL_10;
  }
LABEL_3:
  uint64_t v3 = 0;
  while (1)
  {
    if ((v1 & 0xC000000000000001) != 0) {
      id v4 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v4 = *(id *)(v1 + 8 * v3 + 32);
    }
    uint64_t v5 = v4;
    uint64_t v6 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_17;
    }
    _s16MultiPinMapAssetCMa();
    if (swift_dynamicCastClass()) {
      break;
    }

    ++v3;
    if (v6 == v2) {
      goto LABEL_10;
    }
  }
  swift_bridgeObjectRelease_n();

  v0[10] = 0;
  uint64_t v13 = (char *)&dword_1008058A0 + dword_1008058A0;
  uint64_t v10 = (void *)swift_task_alloc();
  v0[11] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_10042CF84;
  uint64_t v11 = v0[3];
  uint64_t v12 = v0[4];
  return ((uint64_t (*)(uint64_t, uint64_t, void))v13)(v12, v11, 0);
}

uint64_t sub_10042CE08(uint64_t a1)
{
  uint64_t v3 = (void *)*v1;
  id v4 = (void *)*v1;
  swift_task_dealloc();
  v3[10] = a1;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_1008058A0 + dword_1008058A0);
  uint64_t v5 = (void *)swift_task_alloc();
  v3[11] = v5;
  void *v5 = v4;
  v5[1] = sub_10042CF84;
  uint64_t v6 = v3[3];
  uint64_t v7 = v3[4];
  return v9(v7, v6, a1);
}

uint64_t sub_10042CF84(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 96) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  return _swift_task_switch(sub_10042D0AC, v4, v3);
}

uint64_t sub_10042D0AC()
{
  uint64_t v18 = v0;
  char v1 = *(unsigned char *)(v0 + 96);
  swift_release();
  if (v1)
  {
    if (qword_1007F6F70 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100026A54(v9, (uint64_t)qword_10080CA10);
    uint64_t v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.error.getter();
    BOOL v12 = os_log_type_enabled(v10, v11);
    uint64_t v13 = *(void **)(v0 + 80);
    if (v12)
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v17 = swift_slowAlloc();
      *(_DWORD *)uint64_t v14 = 136315138;
      *(void *)(v0 + 16) = sub_10011EA98(0xD00000000000001CLL, 0x800000010069D080, &v17);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "locationAddition - Failed to append asset, %s.", v14, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    uint64_t v7 = 0;
  }
  else
  {
    if (qword_1007F6F70 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100026A54(v2, (uint64_t)qword_10080CA10);
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "locationAddition - Appended asset to entry assets.", v5, 2u);
      swift_slowDealloc();
    }
    uint64_t v6 = *(void **)(v0 + 80);
    uint64_t v7 = *(void **)(v0 + 32);

    id v8 = v7;
  }
  uint64_t v15 = *(uint64_t (**)(void *))(v0 + 8);
  return v15(v7);
}

uint64_t sub_10042D34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void v5[2] = a4;
  v5[3] = a5;
  v5[4] = type metadata accessor for MainActor();
  v5[5] = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_task_alloc();
  v5[6] = v6;
  *uint64_t v6 = v5;
  v6[1] = sub_10042D404;
  return sub_100425CF0(1, 0);
}

uint64_t sub_10042D404()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v1 + 56) = v3;
  *(void *)(v1 + 64) = v2;
  return _swift_task_switch(sub_10042D548, v3, v2);
}

uint64_t sub_10042D548()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = *(void *)(v0[2] + OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry);
  v0[9] = v2;
  id v3 = v1;
  os_log_type_t v4 = sub_10008F704(8, 0, v1);
  v0[10] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[11] = v5;
  void *v5 = v0;
  v5[1] = sub_10042D61C;
  return sub_10042DB04(v2, (uint64_t)v4);
}

uint64_t sub_10042D61C(uint64_t a1)
{
  uint64_t v2 = *v1;
  id v3 = *(void **)(*v1 + 80);
  *(void *)(*v1 + 96) = a1;
  swift_task_dealloc();

  uint64_t v4 = *(void *)(v2 + 64);
  uint64_t v5 = *(void *)(v2 + 56);
  return _swift_task_switch(sub_10042D764, v5, v4);
}

uint64_t sub_10042D764()
{
  v0[13] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[14] = v2;
  v0[15] = v1;
  return _swift_task_switch(sub_10042D7F0, v2, v1);
}

uint64_t sub_10042D7F0()
{
  uint64_t v1 = (void *)v0[12];
  if (v1)
  {
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v2 = swift_allocObject();
    *(_OWORD *)(v2 + 16) = xmmword_1006D6D00;
    *(void *)(v2 + 32) = v1;
    uint64_t v8 = (double *)v2;
    specialized Array._endMutation()();
    id v3 = v8;
  }
  else
  {
    id v3 = _swiftEmptyArrayStorage;
  }
  v0[16] = v3;
  id v4 = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[17] = v5;
  void *v5 = v0;
  v5[1] = sub_10042D8F4;
  uint64_t v6 = v0[9];
  return sub_10041A54C(v6, (uint64_t)v3);
}

uint64_t sub_10042D8F4()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v1 + 120);
  uint64_t v3 = *(void *)(v1 + 112);
  return _swift_task_switch(sub_10042DA38, v3, v2);
}

uint64_t sub_10042DA38()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  return _swift_task_switch(sub_10042DA9C, v1, v2);
}

uint64_t sub_10042DA9C()
{
  uint64_t v1 = *(void **)(v0 + 96);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_10042DB04(uint64_t a1, uint64_t a2)
{
  v2[6] = a1;
  v2[7] = a2;
  v2[8] = type metadata accessor for MainActor();
  v2[9] = static MainActor.shared.getter();
  uint64_t v4 = (void *)swift_task_alloc();
  v2[10] = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_10042DBC8;
  return sub_10042F018(a1, 15);
}

uint64_t sub_10042DBC8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 88) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10042DCC8, 0, 0);
}

uint64_t sub_10042DCC8()
{
  _s16MultiPinMapAssetCMa();
  uint64_t v1 = swift_dynamicCastClass();
  if (!v1) {
    goto LABEL_14;
  }
  if (!*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)) {
    goto LABEL_14;
  }
  swift_retain();
  uint64_t v2 = sub_100039114();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7;
  swift_release();
  *(void *)(v0 + 96) = v2;
  *(void *)(v0 + 104) = v4;
  *(void *)(v0 + 112) = v6;
  *(unsigned char *)(v0 + 184) = v8;
  if (v2 == 1)
  {
LABEL_14:
    uint64_t v16 = *(void **)(v0 + 88);
    if (v16)
    {
      id v17 = v16;
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 120) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_10042E0E8;
      uint64_t v19 = *(void *)(v0 + 56);
      return sub_1000EA4DC((uint64_t)v17, v19);
    }
    else
    {
      uint64_t v21 = (unint64_t *)(*(void *)(v0 + 48) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
      swift_beginAccess();
      unint64_t v22 = *v21;
      if (v22 >> 62)
      {
LABEL_34:
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v24 = *(void *)(v0 + 88);
      char v25 = sub_10018B188();
      uint64_t v26 = 11;
      if ((v25 & 1) == 0) {
        uint64_t v26 = 12;
      }
      if (v24 || v23 <= v26)
      {
        uint64_t v29 = (void *)swift_task_alloc();
        *(void *)(v0 + 128) = v29;
        void *v29 = v0;
        v29[1] = sub_10042E3A0;
        uint64_t v30 = *(void *)(v0 + 56);
        return sub_1000E7908(v30);
      }
      else
      {
        uint64_t v28 = dispatch thunk of Actor.unownedExecutor.getter();
        return _swift_task_switch(sub_10042EE5C, v28, v27);
      }
    }
  }
  unint64_t v9 = *(void *)(*(void *)(v0 + 48) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsWithSlimAsset);
  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v10) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  if (!v10)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    sub_10003F810(v2);
    goto LABEL_14;
  }
LABEL_6:
  uint64_t v11 = 0;
  while (1)
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v12 = *(id *)(v9 + 8 * v11 + 32);
    }
    uint64_t v13 = v12;
    *(void *)(v0 + 136) = v12;
    uint64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v15 = swift_dynamicCastClass();
    *(void *)(v0 + 144) = v15;
    if (v15) {
      break;
    }

    ++v11;
    if (v14 == v10) {
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 152) = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_10042E4DC;
  return sub_1000987F4(v2);
}

uint64_t sub_10042E0E8(char a1)
{
  *(unsigned char *)(*(void *)v1 + 185) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_10042E1E8, 0, 0);
}

uint64_t sub_10042E1E8()
{
  int v1 = *(unsigned __int8 *)(v0 + 185);

  if (v1 == 1)
  {
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v3;
    uint64_t v5 = sub_100440D80;
LABEL_10:
    return _swift_task_switch(v5, v2, v4);
  }
  uint64_t v6 = (unint64_t *)(*(void *)(v0 + 48) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  unint64_t v7 = *v6;
  if (v7 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v9 = *(void *)(v0 + 88);
  char v10 = sub_10018B188();
  uint64_t v11 = 11;
  if ((v10 & 1) == 0) {
    uint64_t v11 = 12;
  }
  if (!v9 && v8 > v11)
  {
    uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v4 = v12;
    uint64_t v5 = sub_10042EE5C;
    goto LABEL_10;
  }
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v13;
  *uint64_t v13 = v0;
  v13[1] = sub_10042E3A0;
  uint64_t v14 = *(void *)(v0 + 56);
  return sub_1000E7908(v14);
}

uint64_t sub_10042E3A0()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100440D80, v1, v0);
}

uint64_t sub_10042E4DC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10042E5D8, 0, 0);
}

uint64_t sub_10042E5D8()
{
  uint64_t v1 = (void *)v0[18];
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = v1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    id v6 = v1;
    unint64_t v7 = (void *)swift_task_alloc();
    v0[20] = v7;
    *unint64_t v7 = v0;
    v7[1] = sub_10042E74C;
    return sub_10058DF1C(ObjectType, v3);
  }
  else
  {
    char v10 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[21] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_10042E8F4;
    return v10();
  }
}

uint64_t sub_10042E74C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10042E848, 0, 0);
}

uint64_t sub_10042E848()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 168) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_10042E8F4;
  return v3();
}

uint64_t sub_10042E8F4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10042E9F0, 0, 0);
}

uint64_t sub_10042E9F0()
{
  if (qword_1007F6BA0 != -1) {
    swift_once();
  }
  sub_100438714(*(void *)(v0 + 144) + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id);
  id v1 = [self defaultCenter];
  if (qword_1007F6E78 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = qword_10083D400;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v1 postNotificationName:v3 object:isa];

  uint64_t v5 = sub_10003F810(v2);
  if (sub_10003D0C8(v5))
  {
    *(void *)(v0 + 176) = static MainActor.shared.getter();
    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v7;
    uint64_t v9 = sub_10042EBC4;
  }
  else
  {

    uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
    uint64_t v8 = v10;
    uint64_t v9 = sub_10042ED24;
  }
  return _swift_task_switch(v9, v6, v8);
}

uint64_t sub_10042EBC4()
{
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v1 = *(void *)(v0 + 48);
    uint64_t v2 = *(void *)(v1 + 56);
    uint64_t ObjectType = swift_getObjectType();
    Swift::Int v4 = sub_1000F678C((uint64_t)&off_100794C60);
    (*(void (**)(uint64_t, Swift::Int, uint64_t, uint64_t))(v2 + 8))(v1, v4, ObjectType, v2);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return _swift_task_switch(sub_10042ECA4, 0, 0);
}

uint64_t sub_10042ECA4()
{
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10042ED24, v2, v1);
}

uint64_t sub_10042ED24()
{
  swift_release();
  if (qword_1007F6F70 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_10080CA10);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "stateOfMindAddition - Appended asset to entry assets.", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = (void *)v0[11];
  uint64_t v6 = (void *)v0[7];

  uint64_t v9 = (uint64_t (*)(void *))v0[1];
  id v7 = v6;
  return v9(v6);
}

uint64_t sub_10042EE5C()
{
  uint64_t v8 = v0;
  swift_release();
  if (qword_1007F6F70 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_10080CA10);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    *(void *)(v0 + 40) = sub_10011EA98(0xD00000000000001CLL, 0x800000010069D080, &v7);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "stateOfMindAddition - Failed to append asset, %s.", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5(0);
}

uint64_t sub_10042F018(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 128) = a2;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = v2;
  *(void *)(v3 + 64) = type metadata accessor for MainActor();
  *(void *)(v3 + 72) = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v3 + 80) = v5;
  *(void *)(v3 + 88) = v4;
  return _swift_task_switch(sub_10042F0B8, v5, v4);
}

uint64_t sub_10042F0B8()
{
  id v1 = [*(id *)(v0 + 56) viewIfLoaded];
  id v2 = [v1 window];

  if (v2
    || (id v3 = [*(id *)(v0 + 56) presentedViewController],
        v3,
        v3))
  {
    if (([*(id *)(v0 + 56) isBeingDismissed] & 1) == 0)
    {
      uint64_t v4 = (uint64_t *)(*(void *)(v0 + 48) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
      swift_beginAccess();
      if ((unint64_t)*v4 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v5 = *(void *)((*v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      char v6 = sub_10018B188();
      uint64_t v7 = 11;
      if ((v6 & 1) == 0) {
        uint64_t v7 = 12;
      }
      if (v5 > v7)
      {
        uint64_t v8 = *v4;
        if ((unint64_t)*v4 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v9 = _CocoaArrayWrapper.endIndex.getter();
          if (v9)
          {
LABEL_11:
            unint64_t v17 = v9 - 1;
            if (__OFSUB__(v9, 1))
            {
              __break(1u);
            }
            else if ((v8 & 0xC000000000000001) == 0)
            {
              if ((v17 & 0x8000000000000000) != 0)
              {
                __break(1u);
              }
              else if (v17 < *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
              {
                id v18 = *(id *)(v8 + 8 * v17 + 32);
                goto LABEL_16;
              }
              __break(1u);
              return withCheckedContinuation<A>(isolation:function:_:)(v17, v10, v11, v12, v13, v14, v15, v16);
            }
            id v18 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_16:
            id v19 = v18;
            *(void *)(v0 + 96) = v18;
            uint64_t v20 = *(void *)(v0 + 56);
            char v21 = *(unsigned char *)(v0 + 128);
            swift_bridgeObjectRelease();
            uint64_t v22 = static MainActor.shared.getter();
            *(void *)(v0 + 104) = v22;
            uint64_t v23 = swift_task_alloc();
            *(void *)(v0 + 112) = v23;
            *(void *)(v23 + 16) = v20;
            *(unsigned char *)(v23 + 24) = v21;
            *(void *)(v23 + 32) = v19;
            uint64_t v24 = (void *)swift_task_alloc();
            *(void *)(v0 + 120) = v24;
            uint64_t v16 = sub_100010218(&qword_10080CA68);
            *uint64_t v24 = v0;
            v24[1] = sub_10042F3D0;
            unint64_t v13 = 0x800000010069D0A0;
            uint64_t v11 = &protocol witness table for MainActor;
            uint64_t v14 = sub_100438F0C;
            unint64_t v17 = v0 + 40;
            uint64_t v10 = v22;
            unint64_t v12 = 0xD00000000000001FLL;
            uint64_t v15 = v23;
            return withCheckedContinuation<A>(isolation:function:_:)(v17, v10, v11, v12, v13, v14, v15, v16);
          }
        }
        else
        {
          uint64_t v9 = *(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v9) {
            goto LABEL_11;
          }
        }
        swift_bridgeObjectRelease();
      }
    }
  }
  swift_release();
  char v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25(0);
}

uint64_t sub_10042F3D0()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 88);
  uint64_t v3 = *(void *)(v1 + 80);
  return _swift_task_switch(sub_10042F530, v3, v2);
}

uint64_t sub_10042F530()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_10042F5A0(uint64_t a1, void *a2, int a3, void *a4)
{
  int v23 = a3;
  uint64_t v7 = sub_100010218(&qword_10080CA70);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7);
  uint64_t v10 = &v22[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v11 - 8);
  unint64_t v13 = &v22[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for TaskPriority();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  type metadata accessor for MainActor();
  id v15 = a2;
  id v16 = a4;
  uint64_t v17 = static MainActor.shared.getter();
  unint64_t v18 = (*(unsigned __int8 *)(v8 + 80) + 41) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  unint64_t v19 = (v9 + v18 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v17;
  *(void *)(v20 + 24) = &protocol witness table for MainActor;
  *(void *)(v20 + 32) = v15;
  *(unsigned char *)(v20 + 40) = v23;
  (*(void (**)(unint64_t, unsigned char *, uint64_t))(v8 + 32))(v20 + v18, v10, v7);
  *(void *)(v20 + v19) = v16;
  sub_100328A60((uint64_t)v13, (uint64_t)&unk_10080CA80, v20);
  return swift_release();
}

uint64_t sub_10042F7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7)
{
  *(void *)(v7 + 16) = a6;
  *(void *)(v7 + 24) = a7;
  *(unsigned char *)(v7 + 72) = a5;
  uint64_t v8 = sub_100010218(&qword_10080CA70);
  *(void *)(v7 + 32) = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  *(void *)(v7 + 40) = v9;
  *(void *)(v7 + 48) = *(void *)(v9 + 64);
  *(void *)(v7 + 56) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v7 + 64) = static MainActor.shared.getter();
  uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10042F8D0, v11, v10);
}