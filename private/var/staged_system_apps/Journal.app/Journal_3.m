void sub_100217CE8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int (**v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t Strong;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  BOOL v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  void *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (**v36)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  uint64_t v43;
  unsigned int (**v44)(char *, uint64_t, uint64_t);
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  id v49;
  uint64_t v50;
  Class isa;
  uint64_t v52;
  uint64_t v53;
  void (**v54)(char *, uint64_t);
  void (**v55)(char *);
  unint64_t v56;
  char *v57;
  uint64_t v58;
  unsigned int (**v59)(char *, uint64_t, uint64_t);
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;

  v5 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v5 - 8);
  v7 = (unsigned int (**)(char *, uint64_t, uint64_t))((char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v8);
  v10 = (char *)&v52 - v9;
  v11 = type metadata accessor for UUID();
  v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  v14 = (char *)&v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong) {
    return;
  }
  v16 = Strong;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return;
  }
  if (qword_1007F6B98 != -1) {
    swift_once();
  }
  v17 = type metadata accessor for Logger();
  sub_100026A54(v17, (uint64_t)qword_1008035B0);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v18 = v16;
  v19 = Logger.logObject.getter();
  v20 = static os_log_type_t.default.getter();
  v21 = v20;
  v22 = os_log_type_enabled(v19, v20);
  v57 = v14;
  v53 = v18;
  if (v22)
  {
    v23 = swift_slowAlloc();
    v60 = v12;
    v24 = v23;
    v58 = swift_slowAlloc();
    v62 = v58;
    *(_DWORD *)v24 = 136446466;
    LODWORD(v56) = v21;
    sub_10021852C((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    v25 = dispatch thunk of CustomStringConvertible.description.getter();
    v61 = sub_10011EA98(v25, v26, &v62);
    v59 = v7;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2080;
    swift_bridgeObjectRetain();
    v27 = Array.description.getter();
    v28 = a3;
    v30 = v29;
    swift_bridgeObjectRelease();
    v61 = sub_10011EA98(v27, v30, &v62);
    v7 = v59;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    a3 = v28;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, (os_log_type_t)v56, "%{public}s (refreshSavedAttachments) attachments to refresh: %s", (uint8_t *)v24, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    v12 = v60;
    swift_slowDealloc();

    v31 = v53;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_release_n();
    v31 = v18;
  }
  v32 = *(id *)(v31 + 16);
  v33 = sub_10052DF8C(a3, a2);

  if (v33 >> 62)
  {
    swift_bridgeObjectRetain();
    v34 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v34) {
      goto LABEL_11;
    }
LABEL_29:
    swift_release();
    swift_bridgeObjectRelease();
    return;
  }
  v34 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v34) {
    goto LABEL_29;
  }
LABEL_11:
  v58 = v34;
  if (v34 >= 1)
  {
    v35 = 0;
    v36 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
    v59 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    v60 = v33 & 0xC000000000000001;
    v54 = (void (**)(char *, uint64_t))(v12 + 8);
    v55 = (void (**)(char *))(v12 + 32);
    v37 = v58;
    v56 = v33;
    while (1)
    {
      if (v60) {
        v38 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        v38 = *(id *)(v33 + 8 * v35 + 32);
      }
      v39 = v38;
      v40 = [v38 asset];
      if (v40)
      {
        v41 = v40;
        v42 = [v40 id];

        if (v42)
        {
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          v43 = 0;
        }
        else
        {
          v43 = 1;
        }
        (*v36)((char *)v7, v43, 1, v11);
        sub_10002C4EC((uint64_t)v7, (uint64_t)v10, &qword_100800950);
        if ((*v59)(v10, 1, v11) != 1)
        {
          v44 = v7;
          v45 = v10;
          v46 = v11;
          v47 = v57;
          v48 = v45;
          (*v55)(v57);
          v49 = [self defaultCenter];
          if (qword_1007F6E78 != -1) {
            swift_once();
          }
          v50 = qword_10083D400;
          isa = UUID._bridgeToObjectiveC()().super.isa;
          [v49 postNotificationName:v50 object:isa];

          (*v54)(v47, v46);
          v7 = v44;
          v11 = v46;
          v10 = v48;
          v33 = v56;
          v37 = v58;
          goto LABEL_15;
        }
      }
      else
      {
        (*v36)(v10, 1, 1, v11);
      }

      sub_10001457C((uint64_t)v10, &qword_100800950);
LABEL_15:
      if (v37 == ++v35) {
        goto LABEL_29;
      }
    }
  }
  __break(1u);
}

uint64_t sub_100218378(char a1, char a2, uint64_t a3)
{
  return sub_100210684(a1, a2, a3, *(void **)(v3 + 16));
}

uint64_t sub_100218380(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100218390()
{
  return swift_release();
}

uint64_t sub_100218398()
{
  return sub_1002196E4((void (*)(void))&_swift_release);
}

void sub_1002183B0(uint64_t a1, uint64_t a2, char a3, char a4)
{
  sub_100210F74(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24), *(void **)(v4 + 32));
}

id sub_1002183C0()
{
  return sub_10047C374(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1002183C8()
{
  return swift_deallocObject();
}

uint64_t sub_1002183DC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100052588;
  return sub_10020308C(a1, v5, v6, v7, v8);
}

uint64_t sub_1002184D8()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

void sub_100218520()
{
  sub_100211494(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_10021852C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100218578(uint64_t a1)
{
  return sub_1002118A8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100218584(uint64_t a1)
{
  return sub_1002118F0(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100218590()
{
  return swift_deallocObject();
}

uint64_t sub_1002185A0(char *a1)
{
  return sub_10020BCE4(a1, v1);
}

uint64_t sub_1002185A8()
{
  return swift_deallocObject();
}

uint64_t sub_1002185B8()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002185F0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100218630()
{
  sub_10020C874(*(void *)(v0 + 16), *(unsigned char **)(v0 + 24), *(NSObject **)(v0 + 32));
}

uint64_t sub_10021863C()
{
  return swift_deallocObject();
}

uint64_t sub_10021864C()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = sub_100010218((uint64_t *)&unk_1008038E0);
  uint64_t v6 = *(void *)(v5 - 8);
  unint64_t v7 = (v4 + *(unsigned __int8 *)(v6 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  (*(void (**)(unint64_t, uint64_t))(v6 + 8))(v0 + v7, v5);
  swift_release();

  return swift_deallocObject();
}

void sub_1002187DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(sub_100010218((uint64_t *)&unk_1008038E0) - 8);
  unint64_t v11 = (v9 + *(unsigned __int8 *)(v10 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v12 = *(void *)(v3 + 16);
  v13 = *(NSObject **)(v3 + v9);
  uint64_t v14 = *(void *)(v3 + ((*(void *)(v10 + 64) + v11 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_10020C910(a1, a2, a3, v12, v3 + v8, v13, v3 + v11, v14);
}

uint64_t sub_10021890C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100218948(void *a1, void *a2)
{
  sub_1002CF9CC(a1, a2, *(void *)(v2 + 16), *(void (**)(uint64_t, uint64_t, id))(v2 + 24));
}

uint64_t sub_100218960()
{
  return sub_10020D6C4();
}

uint64_t sub_1002189E8()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_1008038E0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100218A90()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_100218B7C()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + v2;
  uint64_t v5 = (uint64_t *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v6 = *v5;
  uint64_t v7 = v5[1];

  sub_10020D3A8(v3, v4, v6, v7);
}

uint64_t sub_100218C10()
{
  return swift_deallocObject();
}

uint64_t sub_100218C20()
{
  return swift_deallocObject();
}

void sub_100218C58()
{
  sub_100217810(*(void **)(v0 + 16));
}

uint64_t sub_100218C60()
{
  return swift_deallocObject();
}

uint64_t sub_100218C70()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void sub_100218CC0()
{
  sub_1002131B8(v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_100218CCC()
{
  return swift_deallocObject();
}

uint64_t sub_100218CDC(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    unint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_10026F1A8(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

uint64_t sub_100218E84()
{
  uint64_t v1 = type metadata accessor for URL();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_100218F70()
{
  uint64_t v1 = *(void *)(type metadata accessor for URL() - 8);
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = (char *)v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = v0[7];
  uint64_t v8 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_10021643C(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_100218FDC()
{
  return swift_deallocObject();
}

uint64_t sub_100218FEC()
{
  return sub_1002196E4((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_100219004()
{
  sub_10020FA18(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100219010()
{
  return swift_deallocObject();
}

uint64_t sub_100219020()
{
  return sub_1002196E4((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_100219038()
{
  sub_10020E9F4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100219044()
{
  return swift_deallocObject();
}

uint64_t sub_10021905C()
{
  return sub_1002196E4((void (*)(void))&_swift_bridgeObjectRelease);
}

void sub_100219074()
{
  sub_10020D910(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100219080()
{
  return swift_deallocObject();
}

uint64_t sub_100219094()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1002190DC()
{
  sub_10020B260(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(unsigned __int8 *)(v0 + 40), *(unsigned __int8 *)(v0 + 41), *(void **)(v0 + 48));
}

uint64_t sub_1002190F4()
{
  return swift_deallocObject();
}

uint64_t sub_100219104()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 25) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_100219200()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + v3);
  uint64_t v6 = *(void *)(v0 + v3 + 8);
  int v7 = *(unsigned __int8 *)(v0 + v3 + 16);
  int v8 = *(unsigned __int8 *)(v0 + v3 + 17);
  unint64_t v9 = *(void **)(v0 + ((v3 + 25) & 0xFFFFFFFFFFFFFFF8));

  sub_10020B62C(v4, v0 + v2, v5, v6, v7, v8, v9);
}

unint64_t sub_1002192B0()
{
  unint64_t result = qword_100803910;
  if (!qword_100803910)
  {
    sub_10001B284(255, (unint64_t *)&qword_100805AB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100803910);
  }
  return result;
}

uint64_t sub_100219318()
{
  return sub_1002128B8();
}

uint64_t sub_100219324(char a1)
{
  return sub_10020A28C(a1, v1[2], v1[3], v1[4]);
}

void *sub_100219334(uint64_t a1, uint64_t a2)
{
  return sub_1002CF7FC(a1, a2, *(void *)(v2 + 16), *(uint64_t (**)(BOOL))(v2 + 24));
}

uint64_t sub_100219340()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100219380()
{
  return sub_10020A428(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24), *(void (**)(void, unint64_t, uint64_t, void))(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_100219390()
{
  return swift_deallocObject();
}

uint64_t sub_1002193A0()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

void sub_10021948C()
{
  uint64_t v1 = *(void *)(type metadata accessor for UUID() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = v0 + v2;
  uint64_t v5 = v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v6 = *(void (**)(uint64_t, unint64_t, void, uint64_t))v5;
  uint64_t v7 = *(void *)(v5 + 8);
  int v8 = *(unsigned __int8 *)(v5 + 16);

  sub_10020A950(v3, v4, v6, v7, v8);
}

uint64_t sub_10021952C()
{
  return swift_deallocObject();
}

uint64_t sub_100219540()
{
  return sub_100211D28(v0[2], v0[3], v0[4]);
}

void sub_100219554(char a1)
{
  sub_100211DC4(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100219564()
{
  return sub_100212024(*(void *)(v0 + 16), *(void (**)(void))(v0 + 24));
}

void sub_100219570()
{
}

uint64_t sub_100219578()
{
  return swift_deallocObject();
}

void sub_100219588()
{
  sub_100203F44(v0, "%{public}s (startSyncEngine) syncEngineReset done");
}

void sub_1002195B0()
{
  sub_100209D78(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void (**)(uint64_t))(v0 + 40));
}

void sub_1002195C0(char a1)
{
  sub_100202C14(a1, v1);
}

uint64_t sub_1002195D0(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for UUID() - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v8 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10002C194;
  return sub_10020308C(a1, v5, v6, v7, v8);
}

uint64_t sub_1002196CC()
{
  return sub_1002196E4((void (*)(void))&_swift_bridgeObjectRelease);
}

uint64_t sub_1002196E4(void (*a1)(void))
{
  swift_release();
  a1(*(void *)(v1 + 24));

  return swift_deallocObject();
}

void sub_10021973C()
{
  sub_100217CE8(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_100219748()
{
  return swift_deallocObject();
}

uint64_t sub_10021975C()
{
  uint64_t v1 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

void sub_1002197EC(uint64_t *a1@<X8>)
{
  sub_10057A814(*(void **)(v1 + 32), a1);
}

void sub_10021980C(uint64_t *a1@<X8>)
{
  sub_1004FC258(*(void **)(v1 + 32), a1);
}

void sub_10021982C(uint64_t *a1@<X8>)
{
  sub_100533624(*(void **)(v1 + 32), a1);
}

void sub_10021984C()
{
  sub_100203F44(v0, "%{public}s protectedDataWillBecomeUnavailable cancelOperations Done");
}

uint64_t sub_100219874(char a1)
{
  return sub_1002123C4(a1, *(void *)(v1 + 16), *(void (**)(void))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100219880()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002198C0(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1002D0968(a1, a2, a3 & 1, *(void *)(v3 + 16), *(void (**)(uint64_t))(v3 + 24));
}

uint64_t sub_1002198D0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100219908()
{
  return sub_1002127C4(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_100219914()
{
  return swift_deallocObject();
}

uint64_t sub_100219924()
{
  return sub_1001FF624();
}

uint64_t sub_10021992C()
{
  return sub_1001FF6C0();
}

uint64_t sub_100219938()
{
  uint64_t v1 = type metadata accessor for UUID();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_100219B28()
{
  return swift_initClassMetadata2();
}

uint64_t sub_100219B88()
{
  sub_100010218(&qword_100803A68);
  uint64_t v0 = (void *)swift_allocObject();
  v0[2] = [objc_allocWithZone((Class)sub_100010218(&qword_100803A70)) init];
  sub_100010218(&qword_100803A78);
  uint64_t result = swift_allocObject();
  v0[3] = result;
  v0[4] = 0xD000000000000011;
  v0[5] = 0x80000001006906D0;
  qword_10083D190 = (uint64_t)v0;
  return result;
}

uint64_t sub_100219C20()
{
  uint64_t v0 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  sub_10001FB8C();
  static DispatchQoS.default.getter();
  static OS_dispatch_queue.Attributes.concurrent.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v0);
  uint64_t result = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  qword_10083D198 = result;
  return result;
}

uint64_t sub_100219DC8()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1008039A0);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1008039A0);
  if (qword_1007F7DB8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083ED28);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100219E90()
{
  swift_release();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100219EC0()
{
  sub_100219E90();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ImageCache()
{
  return sub_100073C20();
}

uint64_t sub_100219F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a2 + 32))(&v9, ObjectType, a2);
  if (v10)
  {
    sub_10001B3BC(&v9, (uint64_t)v11);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(a4 + 96))(v11, a3, a4);
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v11);
  }
  else
  {
    sub_1001B4990((uint64_t)&v9);
    return (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 128))(a3, a4);
  }
}

uint64_t sub_100219FE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  (*(void (**)(void))(a3 + 96))();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(a3 + 120);

  return v5(a2, a3);
}

uint64_t sub_10021A054(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5)
{
  uint64_t ObjectType = swift_getObjectType();
  (*(void (**)(uint64_t, uint64_t))(a2 + 40))(ObjectType, a2);
  (*(void (**)(uint64_t, uint64_t))(a5 + 160))(a4, a5);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 24))(ObjectType, a2);
  if (result)
  {
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 136))(ObjectType, a2);
    if (a3)
    {
      uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 120);
      return v11(a4, a5);
    }
  }
  return result;
}

NSString sub_10021A16C()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10083D1A0 = (uint64_t)result;
  return result;
}

uint64_t sub_10021A1A4(uint64_t a1, uint64_t a2, double a3)
{
  double v5 = (*(double (**)(void))(a2 + 40))() + a3;
  v6.n128_f64[0] = (*(double (**)(uint64_t))(*(void *)(a2 + 16) + 24))(a1);
  if (v6.n128_f64[0] >= v5) {
    v6.n128_f64[0] = v5;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 160))(a1, a2, v6);
}

uint64_t sub_10021A24C(uint64_t a1, uint64_t a2, double a3)
{
  v5.n128_f64[0] = (*(double (**)(void))(a2 + 40))() - a3;
  if (v5.n128_f64[0] <= 0.0) {
    v5.n128_f64[0] = 0.0;
  }
  __n128 v6 = *(uint64_t (**)(uint64_t, uint64_t, __n128))(a2 + 160);

  return v6(a1, a2, v5);
}

uint64_t sub_10021A2D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_10021A4A8(a1, (uint64_t)&v20);
  if (!v21) {
    return sub_1001B4990((uint64_t)&v20);
  }
  sub_10001B3BC(&v20, (uint64_t)v23);
  uint64_t v5 = v24;
  uint64_t v6 = v25;
  sub_10002E0BC(v23, v24);
  if (sub_100185480(v5, v6))
  {
    uint64_t v7 = v24;
    uint64_t v8 = v25;
    sub_10002E0BC(v23, v24);
    uint64_t v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v7, v8);
    uint64_t v11 = v10;
    (*(void (**)(long long *__return_ptr, uint64_t, uint64_t))(a3 + 88))(&v20, a2, a3);
    uint64_t v12 = v21;
    if (v21)
    {
      uint64_t v13 = v22;
      sub_10002E0BC(&v20, v21);
      uint64_t v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v12, v13);
      uint64_t v16 = v15;
      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v20);
      if (v9 == v14 && v11 == v16)
      {
        swift_bridgeObjectRelease_n();
        return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v23);
      }
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v18) {
        return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v23);
      }
    }
    else
    {
      sub_1001B4990((uint64_t)&v20);
      swift_bridgeObjectRelease();
    }
    (*(void (**)(void *, uint64_t, uint64_t))(a3 + 96))(v23, a2, a3);
  }
  return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v23);
}

uint64_t sub_10021A4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F9470);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_10021A510(uint64_t a1, uint64_t a2)
{
  v9[1] = a1;
  v9[2] = a2;
  v9[0] = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v3 = *(void *)(v9[0] - 8);
  __chkstk_darwin(v9[0]);
  uint64_t v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v6);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v7 - 8);
  sub_10001FB8C();
  v2[3] = 0;
  v2[4] = 0;
  v2[2] = 0;
  static DispatchQoS.unspecified.getter();
  v9[3] = _swiftEmptyArrayStorage;
  sub_10021B228((unint64_t *)&unk_100804D90, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100010218((uint64_t *)&unk_100803980);
  sub_10011AE0C(&qword_100804DA0, (uint64_t *)&unk_100803980);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v9[0]);
  v2[5] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  return v2;
}

uint64_t sub_10021A74C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = *(void *)(v3 + 40);
  uint64_t v14 = (void *)swift_allocObject();
  v14[2] = v3;
  v14[3] = a1;
  v14[4] = a2;
  aBlock[4] = sub_10021B3D8;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_10079F950;
  uint64_t v15 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v17[1] = _swiftEmptyArrayStorage;
  sub_10021B228((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10011AE0C((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_10021AA0C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1[2])
  {
    uint64_t v9 = a1[3];
    a1[3] = a2;
    a1[4] = a3;
    swift_retain();
    return sub_10001ABB8(v9);
  }
  else
  {
    uint64_t v11 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v8, 1, 1, v11);
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = 0;
    v12[3] = 0;
    v12[4] = a2;
    v12[5] = a3;
    v12[6] = a1;
    swift_retain();
    swift_retain();
    a1[2] = sub_100328A60((uint64_t)v8, (uint64_t)&unk_100803B88, (uint64_t)v12);
    return swift_release();
  }
}

uint64_t sub_10021AB7C(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6)
{
  *(void *)(v6 + 16) = a6;
  uint64_t v9 = (uint64_t (*)(void))((char *)a4 + *a4);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v6 + 24) = v7;
  *uint64_t v7 = v6;
  v7[1] = sub_10021AC4C;
  return v9();
}

uint64_t sub_10021AC4C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10021AD48, 0, 0);
}

uint64_t sub_10021AD48()
{
  sub_10021ADA8();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10021ADA8()
{
  uint64_t v1 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[0] = *(void *)(v0 + 40);
  aBlock[4] = sub_10021B208;
  uint64_t v13 = v0;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_10079F8D8;
  uint64_t v9 = _Block_copy(aBlock);
  swift_retain();
  static DispatchQoS.unspecified.getter();
  v11[1] = _swiftEmptyArrayStorage;
  sub_10021B228((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10011AE0C((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v9);
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return swift_release();
}

uint64_t sub_10021B038(void *a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  a1[2] = 0;
  uint64_t result = swift_release();
  uint64_t v6 = a1[3];
  if (v6)
  {
    uint64_t v7 = a1[4];
    a1[3] = 0;
    a1[4] = 0;
    swift_retain();
    sub_10001ABB8(v6);
    uint64_t v8 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = 0;
    v9[3] = 0;
    void v9[4] = v6;
    v9[5] = v7;
    v9[6] = a1;
    sub_1001A2550(v6);
    swift_retain();
    a1[2] = sub_100328A60((uint64_t)v4, (uint64_t)&unk_100803B80, (uint64_t)v9);
    swift_release();
    return sub_10001ABB8(v6);
  }
  return result;
}

uint64_t sub_10021B19C()
{
  swift_release();
  sub_10001ABB8(*(void *)(v0 + 24));

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CancellableTaskQueue()
{
  return self;
}

uint64_t sub_10021B208()
{
  return sub_10021B038(v0);
}

uint64_t sub_10021B210(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10021B220()
{
  return swift_release();
}

uint64_t sub_10021B228(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10021B274()
{
  uint64_t v2 = *(int **)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_100052588;
  v4[2] = v3;
  uint64_t v7 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v5 = (void *)swift_task_alloc();
  v4[3] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_10021AC4C;
  return v7();
}

uint64_t sub_10021B398()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10021B3D8()
{
  return sub_10021AA0C(*(void **)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_10021B3E8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10021B430()
{
  uint64_t v2 = *(int **)(v0 + 32);
  uint64_t v3 = *(void *)(v0 + 48);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v4;
  *uint64_t v4 = v1;
  v4[1] = sub_10002C194;
  v4[2] = v3;
  uint64_t v7 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v5 = (void *)swift_task_alloc();
  v4[3] = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_10021AC4C;
  return v7();
}

void sub_10021B55C(id *a1@<X0>, uint64_t *a2@<X1>, void *a3@<X8>)
{
  id v3 = *a1;
  uint64_t v4 = *a2;
  switch(*((unsigned char *)a2 + 16))
  {
    case 1:
      id v6 = [v3 fontDescriptorWithSymbolicTraits:[*a1 symbolicTraits] & ~v4];
      goto LABEL_4;
    case 2:
      uint64_t v23 = a2[1];
      sub_100010218(&qword_100803B98);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1006D6280;
      *(void *)(inited + 32) = UIFontDescriptorFeatureSettingsAttribute;
      sub_100010218(&qword_100803BB0);
      uint64_t v9 = swift_allocObject();
      *(_OWORD *)(v9 + 16) = xmmword_1006D6280;
      sub_100010218(&qword_100803BB8);
      uint64_t v10 = swift_initStackObject();
      *(_OWORD *)(v10 + 16) = xmmword_1006D6270;
      uint64_t v11 = (void *)UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
      *(void *)(v10 + 32) = UIFontFeatureTypeIdentifierKey_ForNewSwiftAPI;
      *(void *)(v10 + 40) = v4;
      uint64_t v12 = (void *)UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
      *(void *)(v10 + 48) = UIFontFeatureSelectorIdentifierKey_ForNewSwiftAPI;
      *(void *)(v10 + 56) = v23;
      uint64_t v13 = UIFontDescriptorFeatureSettingsAttribute;
      id v14 = v11;
      id v15 = v12;
      *(void *)(v9 + 32) = sub_100397138(v10);
      *(void *)(inited + 64) = sub_100010218(&qword_100803BC0);
      *(void *)(inited + 40) = v9;
      sub_100397238(inited);
      type metadata accessor for AttributeName(0);
      sub_10021BC24();
      v16.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v17 = [v3 fontDescriptorByAddingAttributes:v16.super.isa];
      goto LABEL_8;
    case 3:
      sub_100010218(&qword_100803B98);
      uint64_t v18 = swift_initStackObject();
      *(_OWORD *)(v18 + 16) = xmmword_1006D6280;
      *(void *)(v18 + 32) = UIFontDescriptorTraitsAttribute;
      sub_100010218(&qword_100803BA0);
      uint64_t v19 = swift_initStackObject();
      *(_OWORD *)(v19 + 16) = xmmword_1006D6280;
      *(void *)(v19 + 32) = UIFontWeightTrait;
      *(void *)(v19 + 40) = v4;
      long long v20 = UIFontDescriptorTraitsAttribute;
      uint64_t v21 = UIFontWeightTrait;
      unint64_t v22 = sub_1003975C8(v19);
      *(void *)(v18 + 64) = sub_100010218(&qword_100803BA8);
      *(void *)(v18 + 40) = v22;
      sub_100397238(v18);
      type metadata accessor for AttributeName(0);
      sub_10021BC24();
      v16.super.isa = Dictionary._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v17 = [v3 fontDescriptorByAddingAttributes:v16.super.isa];
LABEL_8:
      id v7 = v17;

      break;
    default:
      id v6 = [v3 fontDescriptorWithSymbolicTraits:[*a1 symbolicTraits] | v4];
LABEL_4:
      id v7 = v6;
      if (!v7) {
        id v7 = v3;
      }
      break;
  }
  *a3 = v7;
}

id sub_10021B898(double a1)
{
  uint64_t v2 = v1;
  id v4 = [v1 fontDescriptor];
  id v5 = [v4 fontAttributes];

  type metadata accessor for AttributeName(0);
  sub_10021BC24();
  uint64_t v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v33 = v6;
  if (!*(void *)(v6 + 16))
  {
    long long v31 = 0u;
    long long v32 = 0u;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  id v7 = UIFontDescriptorTraitsAttribute;
  uint64_t v8 = sub_10001B6A4();
  if ((v9 & 1) == 0)
  {
    long long v31 = 0u;
    long long v32 = 0u;

    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_10001B648(*(void *)(v6 + 56) + 32 * v8, (uint64_t)&v31);

  swift_bridgeObjectRelease();
  if (!*((void *)&v32 + 1))
  {
LABEL_8:
    sub_10001B418((uint64_t)&v31);
    goto LABEL_9;
  }
  sub_100010218(&qword_100803B90);
  if (!swift_dynamicCast())
  {
LABEL_9:
    unint64_t v10 = sub_100396710((uint64_t)&_swiftEmptyArrayStorage);
    goto LABEL_10;
  }
  unint64_t v10 = *(void *)&v30[0];
LABEL_10:
  type metadata accessor for Weight(0);
  *((void *)&v32 + 1) = v11;
  *(double *)&long long v31 = a1;
  sub_10002102C(&v31, v30);
  uint64_t v12 = UIFontWeightTrait;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_100598F3C(v30, v12, isUniquelyReferenced_nonNull_native);

  swift_bridgeObjectRelease();
  id v14 = UIFontDescriptorNameAttribute;
  sub_1000F1E54((uint64_t)v14, &v31);

  sub_10001B418((uint64_t)&v31);
  *((void *)&v32 + 1) = sub_100010218(&qword_100803B90);
  *(void *)&long long v31 = v10;
  sub_10002102C(&v31, v30);
  id v15 = UIFontDescriptorTraitsAttribute;
  uint64_t v16 = v33;
  char v17 = swift_isUniquelyReferenced_nonNull_native();
  sub_100598EE8(v30, v15, v17);

  swift_bridgeObjectRelease();
  uint64_t v18 = UIFontDescriptorFamilyAttribute;
  id v19 = [v2 familyName];
  uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v22 = v21;

  *((void *)&v32 + 1) = &type metadata for String;
  *(void *)&long long v31 = v20;
  *((void *)&v31 + 1) = v22;
  sub_10002102C(&v31, v30);
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  sub_100598EE8(v30, v18, v23);
  uint64_t v33 = v16;

  swift_bridgeObjectRelease();
  id v24 = objc_allocWithZone((Class)UIFontDescriptor);
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v26 = [v24 initWithFontAttributes:isa];

  [v2 pointSize];
  id v28 = [self fontWithDescriptor:v26 size:v27];

  return v28;
}

unint64_t sub_10021BC24()
{
  unint64_t result = qword_1007F8C00;
  if (!qword_1007F8C00)
  {
    type metadata accessor for AttributeName(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F8C00);
  }
  return result;
}

unint64_t sub_10021BC7C(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007F9DD8);
  __chkstk_darwin(v2 - 8);
  id v4 = &v29.i8[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  id v7 = &v29.i8[-v6];
  uint64_t v8 = OBJC_IVAR____TtCC7Journal10Journaling20ThirdPartyMediaAsset_metadata;
  if (!*(void *)(a1 + OBJC_IVAR____TtCC7Journal10Journaling20ThirdPartyMediaAsset_metadata)) {
    return 0;
  }
  swift_retain();
  sub_10003A8E4((uint64_t)v7);
  swift_release();
  uint64_t v9 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  unint64_t v10 = *(unsigned int (**)(__int8 *, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
  if (!v10(v7, 1, v9))
  {
    uint64_t v11 = &v7[*(int *)(v9 + 44)];
    unint64_t v12 = *((void *)v11 + 1);
    double v31 = *(double *)v11;
    uint64_t v13 = *((void *)v11 + 2);
    char v14 = v11[32];
    sub_10021CE78((uint64_t)v7);
    if (v14) {
      return 0;
    }
    *(void *)&long long v15 = v13;
    long long v30 = v15;
    int64x2_t v29 = vdupq_n_s64(v12);
    id v17 = objc_allocWithZone((Class)UIColor);
    id v18 = [v17 initWithRed:v31 green:*(double *)&v29.i64[1] blue:*(double *)&v30 alpha:1.0];
    id v19 = v18;
    if (*(void *)(a1 + v8))
    {
      id v20 = v18;
      swift_retain();
      sub_10003A8E4((uint64_t)v4);
      swift_release();
      if (v10(v4, 1, v9))
      {
        sub_10021CE78((uint64_t)v4);
      }
      else
      {
        int v22 = v4[*(int *)(v9 + 48)];
        sub_10021CE78((uint64_t)v4);
        if ((v22 - 2) >= 2)
        {
          if (v22)
          {
            id v23 = [self systemBlackColor];
            id v24 = [v23 colorWithAlphaComponent:0.6];
          }
          else
          {
            id v23 = [self systemWhiteColor];
            id v24 = [v23 colorWithAlphaComponent:0.78];
          }
          goto LABEL_13;
        }
      }
    }
    else
    {
      id v21 = v18;
    }
    id v23 = [self systemWhiteColor];
    id v24 = [v23 colorWithAlphaComponent:0.13];
LABEL_13:
    id v25 = v24;

    id v26 = sub_100256984(v25);
    unint64_t v32 = 0;
    unint64_t v33 = 0xE000000000000000;
    _StringGuts.grow(_:)(20);
    swift_bridgeObjectRelease();
    unint64_t v32 = 0xD000000000000011;
    unint64_t v33 = 0x800000010068F3B0;
    v27._countAndFlagsBits = sub_100256794();
    String.append(_:)(v27);
    swift_bridgeObjectRelease();
    v28._countAndFlagsBits = 59;
    v28._object = (void *)0xE100000000000000;
    String.append(_:)(v28);

    return v32;
  }
  sub_10021CE78((uint64_t)v7);
  return 0;
}

id sub_10021BFB8(char a1)
{
  id v2 = [self traitCollectionWithUserInterfaceStyle:qword_1006DF360[a1]];
  id v3 = [v1 resolvedColorWithTraitCollection:v2];

  return v3;
}

uint64_t sub_10021C034(uint64_t a1, SEL *a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F9DD8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[0] = 0x3A726F6C6F63;
  v17[1] = 0xE600000000000000;
  id v7 = [self *a2];
  if (*(void *)(a1 + OBJC_IVAR____TtCC7Journal10Journaling20ThirdPartyMediaAsset_metadata))
  {
    swift_retain();
    sub_10003A8E4((uint64_t)v6);
    swift_release();
    uint64_t v8 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v6, 1, v8)) {
      char v9 = 3;
    }
    else {
      char v9 = v6[*(int *)(v8 + 48)];
    }
    sub_10021CE78((uint64_t)v6);
  }
  else
  {
    char v9 = 3;
  }
  id v10 = sub_10021BFB8(v9);

  uint64_t v11 = sub_100256794();
  uint64_t v13 = v12;

  v14._countAndFlagsBits = v11;
  v14._object = v13;
  String.append(_:)(v14);
  swift_bridgeObjectRelease();
  v15._countAndFlagsBits = 59;
  v15._object = (void *)0xE100000000000000;
  String.append(_:)(v15);
  return v17[0];
}

unint64_t sub_10021C1C0(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v61 = a2;
  uint64_t v62 = a4;
  uint64_t v8 = sub_100010218(&qword_1007F9DD8);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v58 - v12;
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v58 - v15;
  __chkstk_darwin(v17);
  id v19 = (char *)&v58 - v18;
  __chkstk_darwin(v20);
  int v22 = (char *)&v58 - v21;
  __chkstk_darwin(v23);
  id v25 = (char *)&v58 - v24;
  uint64_t v26 = *(void *)(a1 + OBJC_IVAR____TtCC7Journal10Journaling20ThirdPartyMediaAsset_metadata);
  v60 = a3;
  if (v26)
  {
    swift_retain();
    sub_10003A8E4((uint64_t)v25);
    swift_release();
  }
  else
  {
    uint64_t v27 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v25, 1, 1, v27);
  }
  sub_10021CE10((uint64_t)v25, (uint64_t)v22);
  uint64_t v28 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  int64x2_t v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 48);
  int v30 = v29(v22, 1, v28);
  v63 = a5;
  if (v30 == 1)
  {
    sub_10021CE78((uint64_t)v22);
    sub_10021CE10((uint64_t)v25, (uint64_t)v19);
    goto LABEL_8;
  }
  unint64_t v31 = *((void *)v22 + 2);
  uint64_t v59 = *((void *)v22 + 1);
  swift_bridgeObjectRetain();
  sub_10021D0F0((uint64_t)v22);
  sub_10021CE10((uint64_t)v25, (uint64_t)v19);
  if (!v31)
  {
LABEL_8:
    sub_10021CED8((uint64_t)v19, (uint64_t)v16);
    if (v29(v16, 1, v28) == 1)
    {
      sub_10021CE78((uint64_t)v16);
      uint64_t v32 = 0;
      unint64_t v31 = 0;
    }
    else
    {
      uint64_t v33 = *((void *)v16 + 3);
      unint64_t v31 = *((void *)v16 + 4);
      swift_bridgeObjectRetain();
      uint64_t v34 = (uint64_t)v16;
      uint64_t v32 = v33;
      sub_10021D0F0(v34);
    }
    goto LABEL_11;
  }
  sub_10021CE78((uint64_t)v19);
  uint64_t v32 = v59;
LABEL_11:
  sub_10021CE10((uint64_t)v25, (uint64_t)v13);
  if (v29(v13, 1, v28) == 1)
  {
    sub_10021CE78((uint64_t)v13);
    uint64_t v35 = 0;
    unint64_t v36 = 0;
  }
  else
  {
    uint64_t v35 = *((void *)v13 + 5);
    unint64_t v36 = *((void *)v13 + 6);
    swift_bridgeObjectRetain();
    sub_10021D0F0((uint64_t)v13);
  }
  sub_10021CE10((uint64_t)v25, (uint64_t)v10);
  if (v29(v10, 1, v28) == 1)
  {
    sub_10021CE78((uint64_t)v10);
    char v37 = 5;
  }
  else
  {
    char v37 = *v10;
    sub_10021D0F0((uint64_t)v10);
  }
  v38 = v60;
  uint64_t v39 = sub_10035B6C4(v37);
  unint64_t v41 = v40;
  uint64_t v42 = v61;
  unint64_t v43 = sub_1001DC4FC(v32, v31, 0x746954616964656DLL, (void *)0xEA0000000000656CLL, v61, v38);
  unint64_t v45 = v44;
  swift_bridgeObjectRelease();
  unint64_t v46 = sub_1001DC4FC(v35, v36, 0x747241616964656DLL, (void *)0xEB00000000747369, v42, v38);
  v48 = v47;
  swift_bridgeObjectRelease();
  uint64_t v64 = v43;
  unint64_t v65 = v45;
  swift_bridgeObjectRetain();
  v49._countAndFlagsBits = v46;
  v49._object = v48;
  String.append(_:)(v49);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v51 = v64;
  unint64_t v50 = v65;
  unint64_t v52 = sub_1001DC4FC(v39, v41, 0x746143616964656DLL, (void *)0xED000079726F6765, v62, v63);
  v54 = v53;
  swift_bridgeObjectRelease();
  uint64_t v64 = v51;
  unint64_t v65 = v50;
  swift_bridgeObjectRetain();
  v55._countAndFlagsBits = v52;
  v55._object = v54;
  String.append(_:)(v55);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t v56 = sub_1001DC4FC(v64, v65, 0xD000000000000016, (void *)0x8000000100690780, 0, 0);
  swift_bridgeObjectRelease();
  sub_10021CE78((uint64_t)v25);
  return v56;
}

uint64_t sub_10021C688(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_10021C6A8, 0, 0);
}

uint64_t sub_10021C6A8()
{
  uint64_t v1 = v0[3];
  unint64_t v2 = sub_10021BC7C(v1);
  uint64_t v4 = v3;
  v0[4] = v3;
  uint64_t v5 = sub_10021C034(v1, (SEL *)&selRef_secondaryLabelColor);
  id v7 = v6;
  uint64_t v8 = sub_10021C034(v1, (SEL *)&selRef_tertiaryLabelColor);
  unint64_t v10 = sub_10021C1C0(v1, v5, v7, v8, v9);
  uint64_t v12 = v11;
  v0[5] = v11;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v13 = (void *)swift_task_alloc();
  v0[6] = v13;
  void *v13 = v0;
  v13[1] = sub_10021C7F0;
  uint64_t v14 = v0[2];
  return sub_1005E885C(v14, v2, v4, 0, 0, v10, v12, 0);
}

uint64_t sub_10021C7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(v6 + 56) = v2;
  swift_task_dealloc();
  if (v2)
  {
    return _swift_task_switch(sub_10021C954, 0, 0);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    id v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v7(a1, a2);
  }
}

uint64_t sub_10021C954()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

double sub_10021C9C0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9DD8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  unint64_t v10 = (uint64_t *)((char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling20ThirdPartyMediaAsset_metadata))
  {
    swift_retain();
    sub_10003A8E4((uint64_t)v5);
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
    {
      sub_10021D14C((uint64_t)v5, (uint64_t)v10);
      uint64_t v12 = v10[1];
      uint64_t v11 = v10[2];
      uint64_t v14 = v10[3];
      uint64_t v13 = v10[4];
      uint64_t v16 = v10[5];
      uint64_t v15 = v10[6];
      uint64_t v17 = (void *)((char *)v10 + *(int *)(v6 + 36));
      uint64_t v19 = *v17;
      uint64_t v18 = v17[1];
      *(void *)(a1 + 24) = &_s6ResultVN_0;
      *(void *)(a1 + 32) = sub_10021D1B0();
      *(void *)(a1 + 40) = sub_10021D204();
      uint64_t v20 = (void *)swift_allocObject();
      *(void *)a1 = v20;
      v20[2] = v12;
      v20[3] = v11;
      v20[4] = v14;
      v20[5] = v13;
      v20[6] = v16;
      v20[7] = v15;
      v20[8] = v19;
      v20[9] = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_10021D0F0((uint64_t)v10);
      return result;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v5, 1, 1, v6, v8);
  }
  sub_10021CE78((uint64_t)v5);
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  return result;
}

uint64_t sub_10021CBDC(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_100803BF8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002E0BC(a1, a1[3]);
  sub_10021DA30();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  v8[15] = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v1)
  {
    v8[14] = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v8[13] = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    v8[12] = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_10021CD90(uint64_t a1)
{
  unint64_t result = sub_10021CDB8();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_10021CDB8()
{
  unint64_t result = qword_100803BC8;
  if (!qword_100803BC8)
  {
    _s20ThirdPartyMediaAssetCMa(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100803BC8);
  }
  return result;
}

uint64_t sub_10021CE10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F9DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10021CE78(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007F9DD8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10021CED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F9DD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_10021CF40()
{
  uint64_t result = 1735290739;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D614E6D75626C61;
      break;
    case 2:
      uint64_t result = 0x614E747369747261;
      break;
    case 3:
      uint64_t result = 0x656D614E707061;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10021CFD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10021D544(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_10021CFF8(uint64_t a1)
{
  unint64_t v2 = sub_10021DA30();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10021D034(uint64_t a1)
{
  unint64_t v2 = sub_10021DA30();

  return CodingKey.debugDescription.getter(a1, v2);
}

double sub_10021D070@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_10021D708(a1, (uint64_t *)v7);
  if (!v2)
  {
    long long v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    double result = *(double *)&v8;
    long long v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

uint64_t sub_10021D0B4(void *a1)
{
  return sub_10021CBDC(a1);
}

uint64_t sub_10021D0F0(uint64_t a1)
{
  uint64_t v2 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10021D14C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s20ThirdPartyMediaAssetC12MetadataTypeVMa(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_10021D1B0()
{
  unint64_t result = qword_100803BD8;
  if (!qword_100803BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100803BD8);
  }
  return result;
}

unint64_t sub_10021D204()
{
  unint64_t result = qword_100803BE0;
  if (!qword_100803BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100803BE0);
  }
  return result;
}

uint64_t sub_10021D258()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t _s6ResultVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s6ResultVwcp_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s6ResultVwca_0(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s6ResultVwta_0(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s6ResultVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s6ResultVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *_s6ResultVMa_0()
{
  return &_s6ResultVN_0;
}

uint64_t sub_10021D544(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1735290739 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D614E6D75626C61 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x614E747369747261 && a2 == 0xEA0000000000656DLL {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x656D614E707061 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_10021D708@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_100010218(&qword_100803BE8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_10021DA30();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  char v31 = 0;
  uint64_t v9 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v11 = v10;
  uint64_t v26 = v9;
  char v30 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v27 = v13;
  uint64_t v25 = v12;
  char v29 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v24 = v14;
  char v28 = 3;
  swift_bridgeObjectRetain();
  uint64_t v15 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v17 = v16;
  uint64_t v18 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v22 = v15;
  v18(v8, v5);
  swift_bridgeObjectRetain();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  swift_bridgeObjectRelease();
  uint64_t v19 = v24;
  swift_bridgeObjectRelease();
  uint64_t v20 = v27;
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v26;
  a2[1] = v11;
  a2[2] = v25;
  a2[3] = v20;
  a2[4] = v23;
  a2[5] = v19;
  a2[6] = v22;
  a2[7] = v17;
  return result;
}

unint64_t sub_10021DA30()
{
  unint64_t result = qword_100803BF0;
  if (!qword_100803BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100803BF0);
  }
  return result;
}

unsigned char *_s6ResultV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10021DB50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_0()
{
  return &_s6ResultV10CodingKeysON_0;
}

unint64_t sub_10021DB8C()
{
  unint64_t result = qword_100803C00;
  if (!qword_100803C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100803C00);
  }
  return result;
}

unint64_t sub_10021DBE4()
{
  unint64_t result = qword_100803C08;
  if (!qword_100803C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100803C08);
  }
  return result;
}

unint64_t sub_10021DC3C()
{
  unint64_t result = qword_100803C10;
  if (!qword_100803C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100803C10);
  }
  return result;
}

uint64_t sub_10021DC90()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100803C18);
  sub_100026A54(v0, (uint64_t)qword_100803C18);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

__n128 sub_10021DD88()
{
  qword_10083D1A8 = 0;
  unk_10083D1B0 = 0;
  __asm { FMOV            V0.2D, #1.0 }
  xmmword_10083D1B8 = (__int128)result;
  return result;
}

uint64_t type metadata accessor for Cropping()
{
  return self;
}

id sub_10021DDC4(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_playButtonMargin;
  uint64_t v10 = qword_1007F73B0;
  uint64_t v11 = v4;
  if (v10 != -1) {
    swift_once();
  }
  *(void *)&v4[v9] = qword_10083D9C0;
  uint64_t v12 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_labelMarginSmall;
  if (qword_1007F73F8 != -1) {
    swift_once();
  }
  *(void *)&v11[v12] = qword_10083DA08;
  uint64_t v13 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_labelMarginLarge;
  if (qword_1007F7400 != -1) {
    swift_once();
  }
  *(void *)&v11[v13] = qword_10083DA10;
  uint64_t v14 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_betweenLabelsMargin;
  if (qword_1007F7320 != -1) {
    swift_once();
  }
  *(void *)&v11[v14] = qword_10083D930;
  uint64_t v15 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_playbackButton;
  type metadata accessor for PlaybackButton();
  *(void *)&v11[v15] = sub_1000E0D5C(1);
  uint64_t v16 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_titleLabel;
  *(void *)&v11[v16] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v17 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_artistLabel;
  *(void *)&v11[v17] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v18 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_categoryLabel;
  *(void *)&v11[v18] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v11[OBJC_IVAR____TtC7Journal18MediaAssetGridView_mediaIndicator] = 0;
  uint64_t v19 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_artBlurView;
  type metadata accessor for ImageBlurView();
  *(void *)&v11[v19] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  v11[OBJC_IVAR____TtC7Journal18MediaAssetGridView_previousSizeType] = 6;

  v22.receiver = v11;
  v22.super_class = (Class)type metadata accessor for MediaAssetGridView();
  [super initWithFrame:a1, a2, a3, a4];
  sub_10021E3BC();

  return v20;
}

id sub_10021E04C(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_playButtonMargin;
  uint64_t v4 = qword_1007F73B0;
  uint64_t v5 = v1;
  if (v4 != -1) {
    swift_once();
  }
  *(void *)&v1[v3] = qword_10083D9C0;
  uint64_t v6 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_labelMarginSmall;
  if (qword_1007F73F8 != -1) {
    swift_once();
  }
  *(void *)&v5[v6] = qword_10083DA08;
  uint64_t v7 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_labelMarginLarge;
  if (qword_1007F7400 != -1) {
    swift_once();
  }
  *(void *)&v5[v7] = qword_10083DA10;
  uint64_t v8 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_betweenLabelsMargin;
  if (qword_1007F7320 != -1) {
    swift_once();
  }
  *(void *)&v5[v8] = qword_10083D930;
  uint64_t v9 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_playbackButton;
  type metadata accessor for PlaybackButton();
  *(void *)&v5[v9] = sub_1000E0D5C(1);
  uint64_t v10 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_titleLabel;
  *(void *)&v5[v10] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v11 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_artistLabel;
  *(void *)&v5[v11] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_categoryLabel;
  *(void *)&v5[v12] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v5[OBJC_IVAR____TtC7Journal18MediaAssetGridView_mediaIndicator] = 0;
  uint64_t v13 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_artBlurView;
  type metadata accessor for ImageBlurView();
  *(void *)&v5[v13] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  v5[OBJC_IVAR____TtC7Journal18MediaAssetGridView_previousSizeType] = 6;

  v18.receiver = v5;
  v18.super_class = (Class)type metadata accessor for MediaAssetGridView();
  [super initWithCoder:a1];
  id v15 = v14;
  if (v14)
  {
    id v16 = v14;
    sub_10021E3BC();
  }
  return v15;
}

unsigned char *sub_10021E2C4(void *a1, unsigned __int8 a2)
{
  unsigned __int8 v3 = a2;
  int v5 = a2;
  uint64_t v6 = [objc_allocWithZone(v2) init];
  sub_1001EC884(a1);
  sub_10021ED84();
  *(void *)&v6[OBJC_IVAR____TtC7Journal14MediaAssetView_delegate + 8] = &off_10079FB08;
  swift_unknownObjectWeakAssign();
  if (v5 == 6) {
    unsigned __int8 v3 = 4;
  }
  char v7 = v6[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
  v6[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType] = v3;
  uint64_t v8 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
  int v9 = v6[OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated];
  uint64_t v10 = v6;
  if (v9 != 1 || (sub_10017CB6C(v3, v7) & 1) == 0)
  {
    sub_10021FCDC();
    v6[v8] = 1;
  }

  return v10;
}

uint64_t sub_10021E3BC()
{
  id v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  Swift::String v49 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for MusicAuthorization.Status();
  uint64_t v53 = *(void *)(v4 - 8);
  uint64_t v54 = v4;
  __chkstk_darwin(v4);
  uint64_t v51 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v7 = __chkstk_darwin(v6).n128_u64[0];
  unint64_t v52 = (char *)&v49 - v8;
  uint64_t v9 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_artBlurView;
  [v0 insertSubview:*(void *)&v0[OBJC_IVAR____TtC7Journal18MediaAssetGridView_artBlurView] atIndex:0];
  uint64_t v10 = *(void **)&v0[OBJC_IVAR____TtC7Journal18MediaAssetGridView_titleLabel];
  UIFontTextStyle v50 = UIFontTextStyleFootnote;
  uint64_t v11 = self;
  id v12 = [v11 preferredFontDescriptorWithTextStyle:UIFontTextStyleFootnote compatibleWithTraitCollection:0];
  v55[0] = v12;
  long long v57 = xmmword_100793A98;
  char v58 = 0;
  sub_10021B55C(v55, (uint64_t *)&v57, &v56);
  uint64_t v13 = v56;
  v55[0] = v56;
  long long v57 = unk_100793AB0;
  char v58 = 0;
  sub_10021B55C(v55, (uint64_t *)&v57, &v56);

  id v14 = v56;
  id v15 = self;
  id v16 = [v15 fontWithDescriptor:v14 size:0.0];

  [v10 setFont:v16];
  uint64_t v17 = self;
  id v18 = [v17 secondaryLabelColor];
  [v10 setTextColor:v18];

  [v10 setPreferredVibrancy:1];
  [v10 setNumberOfLines:3];
  [v10 setAdjustsFontForContentSizeCategory:1];
  [v10 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityLarge];
  id v19 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)&v1[v9]
                                                              + OBJC_IVAR____TtC7Journal13ImageBlurView_artBlurView), "contentView"));
  [v19 addSubview:v10];

  id v20 = *(void **)&v1[OBJC_IVAR____TtC7Journal18MediaAssetGridView_artistLabel];
  id v21 = [v11 preferredFontDescriptorWithTextStyle:v50 compatibleWithTraitCollection:0];
  v55[0] = v21;
  long long v57 = xmmword_100793AE8;
  char v58 = 0;
  sub_10021B55C(v55, (uint64_t *)&v57, &v56);

  objc_super v22 = v56;
  id v23 = [v15 fontWithDescriptor:v56 size:0.0];

  [v20 setFont:v23];
  id v24 = [v17 secondaryLabelColor];
  [v20 setTextColor:v24];

  [v20 setPreferredVibrancy:1];
  [v20 setNumberOfLines:4];
  [v20 setAdjustsFontForContentSizeCategory:1];
  [v20 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityLarge];
  id v25 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)&v1[v9]
                                                              + OBJC_IVAR____TtC7Journal13ImageBlurView_artBlurView), "contentView"));
  [v25 addSubview:v20];

  uint64_t v26 = *(void **)&v1[OBJC_IVAR____TtC7Journal18MediaAssetGridView_categoryLabel];
  if (qword_1007F7298 != -1) {
    swift_once();
  }
  [v26 setFont:qword_10083D860];
  id v27 = [v17 tertiaryLabelColor];
  [v26 setTextColor:v27];

  [v26 setPreferredVibrancy:1];
  [v26 setAdjustsFontSizeToFitWidth:1];
  [v26 setMinimumScaleFactor:0.5];
  [v26 setNumberOfLines:1];
  [v26 setAdjustsFontForContentSizeCategory:1];
  [v26 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityLarge];
  id v28 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(*(void *)&v1[v9]
                                                              + OBJC_IVAR____TtC7Journal13ImageBlurView_artBlurView), "contentView"));
  [v28 addSubview:v26];

  char v29 = *(void **)&v1[OBJC_IVAR____TtC7Journal18MediaAssetGridView_playbackButton];
  if (qword_1007F7AC0 != -1) {
    swift_once();
  }
  NSString v30 = String._bridgeToObjectiveC()();
  [v29 setAccessibilityLabel:v30];

  [v29 addTarget:v1 action:"playAction:" forControlEvents:64];
  [v29 setUserInteractionEnabled:1];
  [v29 setDeliversTouchesForGesturesToSuperview:0];
  [v1 addSubview:v29];
  char v31 = *(void **)&v1[OBJC_IVAR____TtC7Journal14MediaAssetView_assetImageView];
  type metadata accessor for UILayoutPriority(0);
  LODWORD(v55[0]) = 1144750080;
  LODWORD(v56) = 1065353216;
  sub_100223338((unint64_t *)&qword_10080C380, type metadata accessor for UILayoutPriority);
  static _UIKitNumericRawRepresentable.+ infix(_:_:)();
  LODWORD(v32) = v57;
  [v31 setContentCompressionResistancePriority:1 forAxis:v32];
  LODWORD(v33) = 1144750080;
  [v10 setContentCompressionResistancePriority:1 forAxis:v33];
  LODWORD(v34) = 1144750080;
  [v20 setContentCompressionResistancePriority:1 forAxis:v34];
  LODWORD(v35) = 1144750080;
  [v26 setContentCompressionResistancePriority:1 forAxis:v35];
  unint64_t v36 = v52;
  static MusicAuthorization.currentStatus.getter();
  uint64_t v38 = v53;
  uint64_t v37 = v54;
  uint64_t v39 = v51;
  (*(void (**)(char *, void, uint64_t))(v53 + 104))(v51, enum case for MusicAuthorization.Status.authorized(_:), v54);
  sub_100223338((unint64_t *)&qword_100803D68, (void (*)(uint64_t))&type metadata accessor for MusicAuthorization.Status);
  dispatch thunk of RawRepresentable.rawValue.getter();
  dispatch thunk of RawRepresentable.rawValue.getter();
  if (v57 == *(_OWORD *)v55)
  {
    swift_bridgeObjectRelease_n();
    unint64_t v40 = *(void (**)(char *, uint64_t))(v38 + 8);
    v40(v39, v37);
    v40(v36, v37);
  }
  else
  {
    char v41 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v42 = *(void (**)(char *, uint64_t))(v38 + 8);
    v42(v39, v37);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))v42)(v36, v37);
    if ((v41 & 1) == 0) {
      return result;
    }
  }
  uint64_t v44 = type metadata accessor for TaskPriority();
  uint64_t v45 = (uint64_t)v49;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v49, 1, 1, v44);
  uint64_t v46 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v47 = static MainActor.shared.getter();
  v48 = (void *)swift_allocObject();
  v48[2] = v47;
  v48[3] = &protocol witness table for MainActor;
  v48[4] = v46;
  swift_release();
  sub_100328A60(v45, (uint64_t)&unk_100803D70, (uint64_t)v48);
  return swift_release();
}

uint64_t sub_10021ED38(void *a1)
{
  sub_1001EC884(a1);
  sub_10021ED84();
  *(void *)(v1 + OBJC_IVAR____TtC7Journal14MediaAssetView_delegate + 8) = &off_10079FB08;

  return swift_unknownObjectWeakAssign();
}

void sub_10021ED84()
{
  uint64_t v1 = v0;
  uint64_t v111 = _s9BookAssetC8BookDataVMa(0);
  id v116 = *(id *)(v111 - 8);
  __chkstk_darwin(v111);
  uint64_t v109 = (uint64_t)&v108 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100010218(&qword_1007F9E90);
  __chkstk_darwin(v3 - 8);
  uint64_t v110 = (uint64_t)&v108 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  double v7 = (char *)&v108 - v6;
  uint64_t v8 = _s12PodcastAssetC11PodcastDataVMa(0);
  uint64_t v113 = *(void *)(v8 - 8);
  v114 = (void *)v8;
  __chkstk_darwin(v8);
  uint64_t v112 = (uint64_t)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_1007F8F98);
  __chkstk_darwin(v10 - 8);
  id v12 = (char *)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v15 = (char *)&v108 - v14;
  uint64_t v16 = _s10MusicAssetC9MusicDataVMa(0);
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v115 = (uint64_t)&v108 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100010218(&qword_1007F9E58);
  __chkstk_darwin(v19 - 8);
  id v21 = (char *)&v108 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v22);
  __chkstk_darwin(v23);
  id v25 = (char *)&v108 - v24;
  __chkstk_darwin(v26);
  char v29 = (char *)&v108 - v28;
  NSString v30 = *(void **)&v0[OBJC_IVAR____TtC7Journal14MediaAssetView_mediaAsset];
  if (v30)
  {
    uint64_t v108 = v27;
    v117 = v1;
    _s10MusicAssetCMa(0);
    uint64_t v31 = swift_dynamicCastClass();
    if (v31)
    {
      uint64_t v32 = v31;
      id v116 = v30;
      double v33 = *(void **)&v117[OBJC_IVAR____TtC7Journal18MediaAssetGridView_artistLabel];
      uint64_t v34 = OBJC_IVAR____TtCC7Journal10Journaling10MusicAsset_metadata;
      NSString v35 = *(NSString *)(v31 + OBJC_IVAR____TtCC7Journal10Journaling10MusicAsset_metadata);
      if (v35)
      {
        id v36 = v116;
        swift_retain();
        sub_100039F48((uint64_t)v29);
        swift_release();
        uint64_t v37 = v17;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v29, 1, v16))
        {
          sub_10001457C((uint64_t)v29, &qword_1007F9E58);
          NSString v35 = 0;
        }
        else
        {
          v114 = v33;
          uint64_t v45 = v115;
          sub_100223270((uint64_t)v29, v115, _s10MusicAssetC9MusicDataVMa);
          sub_10001457C((uint64_t)v29, &qword_1007F9E58);
          uint64_t v46 = *(void *)(v45 + *(int *)(v16 + 24) + 8);
          swift_bridgeObjectRetain();
          sub_1002232D8(v45, _s10MusicAssetC9MusicDataVMa);
          if (v46)
          {
            NSString v35 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
          }
          else
          {
            NSString v35 = 0;
          }
          uint64_t v37 = v17;
          double v33 = v114;
        }
      }
      else
      {
        id v44 = v116;
        uint64_t v37 = v17;
      }
      [v33 setText:v35];

      v60 = *(void **)&v117[OBJC_IVAR____TtC7Journal18MediaAssetGridView_titleLabel];
      if (!*(void *)(v32 + v34)) {
        goto LABEL_39;
      }
      swift_retain();
      sub_100039F48((uint64_t)v25);
      swift_release();
      uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v37 + 48);
      if (v61((uint64_t)v25, 1, v16))
      {
        sub_10001457C((uint64_t)v25, &qword_1007F9E58);
      }
      else
      {
        v114 = v60;
        uint64_t v62 = v115;
        sub_100223270((uint64_t)v25, v115, _s10MusicAssetC9MusicDataVMa);
        sub_10001457C((uint64_t)v25, &qword_1007F9E58);
        int v63 = *(unsigned __int8 *)(v62 + *(int *)(v16 + 44));
        v60 = v114;
        sub_1002232D8(v62, _s10MusicAssetC9MusicDataVMa);
        if (v63 == 1)
        {
          if (*(void *)(v32 + v34))
          {
            swift_retain();
            uint64_t v64 = v108;
            sub_100039F48(v108);
            swift_release();
            int v65 = v61(v64, 1, v16);
            uint64_t v1 = v117;
            if (v65)
            {
              uint64_t v66 = v64;
LABEL_38:
              sub_10001457C(v66, &qword_1007F9E58);
              NSString v68 = 0;
              goto LABEL_40;
            }
            uint64_t v72 = 8;
            uint64_t v73 = v64;
            goto LABEL_43;
          }
LABEL_39:
          NSString v68 = 0;
          uint64_t v1 = v117;
          goto LABEL_40;
        }
      }
      if (*(void *)(v32 + v34))
      {
        swift_retain();
        sub_100039F48((uint64_t)v21);
        swift_release();
        int v67 = v61((uint64_t)v21, 1, v16);
        uint64_t v1 = v117;
        if (v67)
        {
          uint64_t v66 = (uint64_t)v21;
          goto LABEL_38;
        }
        uint64_t v72 = 7;
        uint64_t v73 = (uint64_t)v21;
LABEL_43:
        uint64_t v74 = v115;
        sub_100223270(v73, v115, _s10MusicAssetC9MusicDataVMa);
        sub_10001457C(v73, &qword_1007F9E58);
        uint64_t v75 = *(void *)(v74 + *(int *)(v16 + 4 * v72) + 8);
        swift_bridgeObjectRetain();
        sub_1002232D8(v74, _s10MusicAssetC9MusicDataVMa);
        if (v75)
        {
          NSString v68 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        else
        {
          NSString v68 = 0;
        }
LABEL_40:
        [v60 setText:v68];

        v69 = [objc_allocWithZone((Class)type metadata accessor for MediaIndicatorView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
        uint64_t v70 = qword_1007F7E50;
        id v71 = *(id *)&v69[OBJC_IVAR____TtC7Journal18MediaIndicatorView_mediaImageView];
        if (v70 == -1) {
          goto LABEL_48;
        }
        goto LABEL_69;
      }
      goto LABEL_39;
    }
    _s12PodcastAssetCMa(0);
    uint64_t v38 = swift_dynamicCastClass();
    if (v38)
    {
      uint64_t v39 = v38;
      id v116 = v30;
      uint64_t v1 = v117;
      unint64_t v40 = *(void **)&v117[OBJC_IVAR____TtC7Journal18MediaAssetGridView_artistLabel];
      uint64_t v41 = OBJC_IVAR____TtCC7Journal10Journaling12PodcastAsset_metadata;
      NSString v42 = *(NSString *)(v38 + OBJC_IVAR____TtCC7Journal10Journaling12PodcastAsset_metadata);
      if (v42)
      {
        id v43 = v116;
        swift_retain();
        sub_10003A27C((uint64_t)v15);
        swift_release();
        if ((*(unsigned int (**)(char *, uint64_t, void *))(v113 + 48))(v15, 1, v114))
        {
          sub_10001457C((uint64_t)v15, &qword_1007F8F98);
LABEL_10:
          NSString v42 = 0;
          goto LABEL_22;
        }
        uint64_t v56 = v112;
        sub_100223270((uint64_t)v15, v112, _s12PodcastAssetC11PodcastDataVMa);
        sub_10001457C((uint64_t)v15, &qword_1007F8F98);
        uint64_t v57 = *(void *)(v56 + 40);
        swift_bridgeObjectRetain();
        sub_1002232D8(v56, _s12PodcastAssetC11PodcastDataVMa);
        if (!v57) {
          goto LABEL_10;
        }
        NSString v42 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v55 = v116;
      }
LABEL_22:
      [v40 setText:v42];

      char v58 = *(void **)&v1[OBJC_IVAR____TtC7Journal18MediaAssetGridView_titleLabel];
      NSString v59 = *(NSString *)(v39 + v41);
      if (!v59) {
        goto LABEL_47;
      }
      swift_retain();
      sub_10003A27C((uint64_t)v12);
      swift_release();
      if ((*(unsigned int (**)(char *, uint64_t, void *))(v113 + 48))(v12, 1, v114))
      {
        sub_10001457C((uint64_t)v12, &qword_1007F8F98);
      }
      else
      {
        uint64_t v76 = v112;
        sub_100223270((uint64_t)v12, v112, _s12PodcastAssetC11PodcastDataVMa);
        sub_10001457C((uint64_t)v12, &qword_1007F8F98);
        uint64_t v77 = *(void *)(v76 + 24);
        swift_bridgeObjectRetain();
        sub_1002232D8(v76, _s12PodcastAssetC11PodcastDataVMa);
        if (v77)
        {
          NSString v59 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
LABEL_47:
          [v58 setText:v59];

          v69 = [objc_allocWithZone((Class)type metadata accessor for MediaIndicatorView()) initWithFrame:0.0, 0.0, 0.0, 0.0];
          uint64_t v78 = qword_1007F7E50;
          id v71 = *(id *)&v69[OBJC_IVAR____TtC7Journal18MediaIndicatorView_mediaImageView];
          if (v78 == -1)
          {
LABEL_48:
            id v79 = (id)qword_100812608;
            NSString v80 = String._bridgeToObjectiveC()();
            id v81 = [self _systemImageNamed:v80 withConfiguration:v79];

            [v71 setImage:v81];
            NSString v82 = *(NSString *)&v1[OBJC_IVAR____TtC7Journal18MediaAssetGridView_mediaIndicator];
            *(void *)&v1[OBJC_IVAR____TtC7Journal18MediaAssetGridView_mediaIndicator] = v69;

LABEL_49:
            goto LABEL_50;
          }
LABEL_69:
          swift_once();
          goto LABEL_48;
        }
      }
      NSString v59 = 0;
      goto LABEL_47;
    }
    _s9BookAssetCMa(0);
    uint64_t v47 = swift_dynamicCastClass();
    uint64_t v1 = v117;
    if (!v47) {
      goto LABEL_50;
    }
    uint64_t v48 = v47;
    Swift::String v49 = v30;
    UIFontTextStyle v50 = *(void **)&v117[OBJC_IVAR____TtC7Journal18MediaAssetGridView_artistLabel];
    uint64_t v51 = OBJC_IVAR____TtCC7Journal10Journaling9BookAsset_metadata;
    if (*(void *)(v47 + OBJC_IVAR____TtCC7Journal10Journaling9BookAsset_metadata))
    {
      id v52 = v30;
      swift_retain();
      sub_10003A5B0((uint64_t)v7);
      swift_release();
      uint64_t v53 = v111;
      if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v116 + 6))(v7, 1, v111))
      {
        sub_10001457C((uint64_t)v7, &qword_1007F9E90);
LABEL_18:
        NSString v54 = 0;
        goto LABEL_61;
      }
      uint64_t v102 = v109;
      sub_100223270((uint64_t)v7, v109, _s9BookAssetC8BookDataVMa);
      sub_10001457C((uint64_t)v7, &qword_1007F9E90);
      uint64_t v103 = *(void *)(v102 + 40);
      swift_bridgeObjectRetain();
      sub_1002232D8(v102, _s9BookAssetC8BookDataVMa);
      if (!v103) {
        goto LABEL_18;
      }
      NSString v54 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v101 = v30;
      NSString v54 = 0;
      uint64_t v53 = v111;
    }
LABEL_61:
    [v50 setText:v54];

    v104 = *(void **)&v1[OBJC_IVAR____TtC7Journal18MediaAssetGridView_titleLabel];
    NSString v82 = *(NSString *)(v48 + v51);
    if (v82)
    {
      swift_retain();
      uint64_t v105 = v110;
      sub_10003A5B0(v110);
      swift_release();
      if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v116 + 6))(v105, 1, v53))
      {
        sub_10001457C(v105, &qword_1007F9E90);
      }
      else
      {
        uint64_t v106 = v109;
        sub_100223270(v105, v109, _s9BookAssetC8BookDataVMa);
        sub_10001457C(v105, &qword_1007F9E90);
        uint64_t v107 = *(void *)(v106 + 24);
        swift_bridgeObjectRetain();
        sub_1002232D8(v106, _s9BookAssetC8BookDataVMa);
        if (v107)
        {
          NSString v82 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          goto LABEL_67;
        }
      }
      NSString v82 = 0;
    }
LABEL_67:
    [v104 setText:v82];

    goto LABEL_49;
  }
LABEL_50:
  v83 = *(void **)&v1[OBJC_IVAR____TtC7Journal18MediaAssetGridView_categoryLabel];
  sub_10035B6C4(v1[OBJC_IVAR____TtC7Journal14MediaAssetView_mediaType]);
  NSString v84 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v83 setText:v84];

  v85 = *(void **)&v1[OBJC_IVAR____TtC7Journal18MediaAssetGridView_mediaIndicator];
  if (v85)
  {
    id v86 = v85;
    [v1 addSubview:v86];
    if (qword_1007F73B8 != -1) {
      swift_once();
    }
    double v87 = *(double *)&qword_10083D9C8;
    [v86 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v88 = [v86 widthAnchor];
    id v89 = [v88 constraintEqualToConstant:v87];

    [v89 setActive:1];
    [v86 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v90 = [v86 heightAnchor];
    id v91 = [v86 widthAnchor];
    id v92 = [v90 constraintEqualToAnchor:v91 multiplier:1.0];

    [v92 setActive:1];
    double v93 = *(double *)&v1[OBJC_IVAR____TtC7Journal18MediaAssetGridView_playButtonMargin];
    id v94 = [v86 superview];
    if (v94)
    {
      v95 = v94;
      [v86 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v96 = [v86 leadingAnchor];
      id v97 = [v95 leadingAnchor];
      id v98 = [v96 constraintEqualToAnchor:v97];

      [v98 setConstant:v93];
      id v99 = v98;
      [v99 setActive:1];
    }
    id v100 = sub_1001DD438(0, 1, v93);
  }
}

void sub_10021FCDC()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
  uint64_t v3 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_previousSizeType;
  int v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_previousSizeType);
  if (v4 == 6 || (sub_10017CB6C(*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType), v4) & 1) == 0)
  {
    uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_playbackButton);
    UIView.removeAllConstraints()();
    uint64_t v6 = *(void **)(v0 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_titleLabel);
    UIView.removeAllConstraints()();
    double v7 = *(void **)(v0 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_artistLabel);
    UIView.removeAllConstraints()();
    uint64_t v8 = *(void **)(v0 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_categoryLabel);
    UIView.removeAllConstraints()();
    uint64_t v9 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_artBlurView;
    id v10 = *(id *)(v0 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_artBlurView);
    UIView.removeAllConstraints()();

    UIView.removeAllConstraints()();
    [v5 setHidden:0];
    [v6 setHidden:0];
    [v7 setHidden:0];
    [v8 setHidden:0];
    [*(id *)(v1 + v9) setHidden:0];
    switch(*(unsigned char *)(v1 + v2))
    {
      case 1:
      case 5:
        break;
      case 2:
        sub_10022090C();
        break;
      case 3:
        sub_10021FEE0();
        break;
      case 4:
        [v5 setHidden:1];
        [v6 setHidden:1];
        [v7 setHidden:1];
        [v8 setHidden:1];
        [*(id *)(v1 + v9) setHidden:1];
        sub_1001DCF60(0.0);
        swift_bridgeObjectRelease();
        break;
      default:
        sub_100220BCC();
        break;
    }
    *(unsigned char *)(v1 + v3) = *(unsigned char *)(v1 + v2);
  }
}

void sub_10021FEE0()
{
  [*(id *)&v0[OBJC_IVAR____TtC7Journal18MediaAssetGridView_playbackButton] setHidden:1];
  [*(id *)&v0[OBJC_IVAR____TtC7Journal18MediaAssetGridView_categoryLabel] setHidden:1];
  uint64_t v70 = v0;
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC7Journal14MediaAssetView_assetImageView];
  uint64_t v2 = &selRef_drawMapRect_zoomScale_inContext_;
  id v3 = [v1 superview];
  if (v3)
  {
    int v4 = v3;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = [v1 leadingAnchor];
    id v6 = [v4 leadingAnchor];
    id v7 = [v5 constraintEqualToAnchor:v6];

    [v7 setConstant:0.0];
    id v8 = v7;
    [v8 setActive:1];
  }
  id v9 = [v1 superview];
  if (v9)
  {
    id v10 = v9;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v11 = [v1 topAnchor];
    id v12 = [v10 topAnchor];
    id v13 = [v11 constraintEqualToAnchor:v12];

    [v13 setConstant:0.0];
    id v14 = v13;
    [v14 setActive:1];
  }
  [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v15 = [v1 heightAnchor];
  id v16 = [v1 widthAnchor];
  id v17 = [v15 constraintEqualToAnchor:v16 multiplier:1.0];

  [v17 setActive:1];
  uint64_t v18 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_artBlurView;
  id v19 = *(id *)&v70[OBJC_IVAR____TtC7Journal18MediaAssetGridView_artBlurView];
  id v20 = [v19 superview];
  if (v20)
  {
    id v21 = v20;
    [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v22 = [v19 trailingAnchor];
    id v23 = [v21 trailingAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    id v25 = &selRef_drawMapRect_zoomScale_inContext_;
    [v24 setConstant:0.0];
    if (v24)
    {
      id v24 = v24;
      [v24 setActive:1];

      id v19 = v24;
    }

    uint64_t v2 = &selRef_drawMapRect_zoomScale_inContext_;
  }
  else
  {
    id v24 = 0;
    id v21 = v19;
    id v25 = &selRef_drawMapRect_zoomScale_inContext_;
  }

  id v26 = *(id *)&v70[v18];
  id v27 = [v26 v2[77]];
  if (v27)
  {
    uint64_t v28 = v27;
    [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v29 = [v26 topAnchor];
    id v30 = [v28 topAnchor];
    id v31 = [v29 constraintEqualToAnchor:v30];

    uint64_t v32 = &selRef_drawMapRect_zoomScale_inContext_;
    [v31 setConstant:0.0];
    if (v31)
    {
      id v31 = v31;
      [v31 setActive:1];

      id v26 = v31;
    }
  }
  else
  {
    uint64_t v32 = v25;
    id v31 = 0;
    uint64_t v28 = v26;
  }

  id v33 = *(id *)&v70[v18];
  id v34 = sub_1001DD438(0, 1, 0.0);

  id v35 = *(id *)&v70[v18];
  [v35 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v36 = [v35 leadingAnchor];
  id v37 = [v1 trailingAnchor];
  id v38 = [v36 constraintEqualToAnchor:v37];

  [v38 v32[86]:0.0];
  [v38 setActive:1];

  uint64_t v39 = *(void **)&v70[OBJC_IVAR____TtC7Journal18MediaAssetGridView_artistLabel];
  double v40 = *(double *)&v70[OBJC_IVAR____TtC7Journal18MediaAssetGridView_labelMarginSmall];
  id v41 = *(id *)&v70[v18];
  [v39 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v42 = [v39 trailingAnchor];
  id v43 = [v41 trailingAnchor];
  id v44 = [v42 constraintEqualToAnchor:v43 constant:-v40];

  [v44 setActive:1];
  id v45 = *(id *)&v70[v18];
  [v39 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v46 = [v39 bottomAnchor];
  id v47 = [v45 bottomAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47 constant:-v40];

  [v48 setActive:1];
  id v49 = *(id *)&v70[v18];
  [v39 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v50 = [v39 leadingAnchor];
  id v51 = [v49 leadingAnchor];
  id v52 = [v50 constraintEqualToAnchor:v51 constant:v40];

  [v52 setActive:1];
  uint64_t v53 = *(void **)&v70[OBJC_IVAR____TtC7Journal18MediaAssetGridView_titleLabel];
  id v54 = *(id *)&v70[v18];
  [v53 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v55 = [v53 trailingAnchor];
  id v56 = [v54 trailingAnchor];
  id v57 = [v55 constraintEqualToAnchor:v56 constant:-v40];

  [v57 setActive:1];
  id v58 = *(id *)&v70[v18];
  [v53 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v59 = [v53 leadingAnchor];
  id v60 = [v58 leadingAnchor];
  id v61 = [v59 constraintEqualToAnchor:v60 constant:v40];

  [v61 setActive:1];
  [v53 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v62 = [v53 bottomAnchor];
  id v63 = [v39 topAnchor];
  id v64 = [v62 constraintEqualToAnchor:v63];

  [v64 setConstant:0.0];
  [v64 setActive:1];

  id v65 = [v53 superview];
  if (v65)
  {
    id v71 = v65;
    [v53 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v66 = [v53 topAnchor];
    id v67 = [v71 topAnchor];
    id v68 = [v66 constraintGreaterThanOrEqualToAnchor:v67];

    [v68 setConstant:v40];
    id v69 = v68;
    [v69 setActive:1];
  }
}

uint64_t sub_10022090C()
{
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_titleLabel) setHidden:1];
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_artistLabel) setHidden:1];
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_categoryLabel) setHidden:1];
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_artBlurView) setHidden:1];
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_playbackButton);
  double v2 = *(double *)(v0 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_playButtonMargin);
  id v3 = [v1 superview];
  int v4 = &selRef_drawMapRect_zoomScale_inContext_;
  if (v3)
  {
    id v5 = v3;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v1 topAnchor];
    id v7 = [v5 topAnchor];
    id v8 = [v6 constraintEqualToAnchor:v7];

    int v4 = &selRef_drawMapRect_zoomScale_inContext_;
    [v8 setConstant:v2];
    id v9 = v8;
    [v9 setActive:1];
  }
  id v10 = [v1 superview];
  if (v10)
  {
    id v11 = v10;
    [v1 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v12 = [v1 leadingAnchor];
    id v13 = [v11 leadingAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13];

    [v14 v4[86] v2];
    id v15 = v14;
    [v15 setActive:1];
  }
  BOOL v16 = 1;
  if (*(void *)(v0 + OBJC_IVAR____TtC7Journal14MediaAssetView_mediaAsset))
  {
    _s10MusicAssetCMa(0);
    if (swift_dynamicCastClass()) {
      BOOL v16 = 0;
    }
  }
  [v1 setHidden:v16];
  sub_1001DCF60(0.0);

  return swift_bridgeObjectRelease();
}

void sub_100220BCC()
{
  uint64_t v1 = v0;
  double v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14MediaAssetView_assetImageView);
  id v3 = [v2 superview];
  int v4 = &stru_1007D7000;
  if (v3)
  {
    id v5 = v3;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v2 leadingAnchor];
    id v7 = [v5 leadingAnchor];
    id v8 = [v6 constraintEqualToAnchor:v7];

    [v8 setConstant:0.0];
    if (v8)
    {
      id v9 = v8;
      [v9 setActive:1];
    }
  }
  id v10 = [v2 superview];
  if (v10)
  {
    id v11 = v10;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v12 = [v2 topAnchor];
    id v13 = [v11 topAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13];

    [v14 setConstant:0.0];
    if (v14)
    {
      id v15 = v14;
      [v15 setActive:1];
    }
  }

  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v16 = [v2 heightAnchor];
  id v17 = [v2 widthAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17 multiplier:1.0];

  [v18 setActive:1];
  uint64_t v19 = OBJC_IVAR____TtC7Journal18MediaAssetGridView_artBlurView;
  id v20 = *(id *)(v1 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_artBlurView);
  id v21 = [v20 superview];
  if (v21)
  {
    id v22 = v21;
    [v20 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v23 = [v20 trailingAnchor];
    id v24 = [v22 trailingAnchor];
    id v25 = [v23 constraintEqualToAnchor:v24];

    [v25 setConstant:0.0];
    if (v25)
    {
      id v25 = v25;
      [v25 setActive:1];

      id v20 = v25;
    }

    int v4 = &stru_1007D7000;
  }
  else
  {
    id v25 = 0;
    id v22 = v20;
  }

  id v26 = *(id *)(v1 + v19);
  id v27 = [v26 superview];
  if (v27)
  {
    uint64_t v28 = v27;
    [v26 v4[96].name];
    id v29 = [v26 topAnchor];
    id v30 = [v28 topAnchor];
    id v31 = [v29 constraintEqualToAnchor:v30];

    [v31 setConstant:0.0];
    if (v31)
    {
      id v31 = v31;
      [v31 setActive:1];

      id v26 = v31;
    }

    int v4 = &stru_1007D7000;
  }
  else
  {
    id v31 = 0;
    uint64_t v28 = v26;
  }

  id v32 = *(id *)(v1 + v19);
  id v33 = sub_1001DD438(0, 1, 0.0);

  id v34 = *(id *)(v1 + v19);
  [v34 v4[96].name];
  id v35 = [v34 leadingAnchor];
  id v36 = [v2 trailingAnchor];
  id v37 = [v35 constraintEqualToAnchor:v36];

  [v37 setConstant:0.0];
  [v37 setActive:1];

  id v38 = *(void **)(v1 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_playbackButton);
  double v39 = *(double *)(v1 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_playButtonMargin);
  id v40 = [v38 superview];
  if (v40)
  {
    id v41 = v40;
    [v38 v4[96].name];
    id v42 = [v38 topAnchor];
    id v43 = [v41 topAnchor];
    id v44 = [v42 constraintEqualToAnchor:v43];

    [v44 setConstant:v39];
    id v45 = v44;
    int v4 = &stru_1007D7000;
    id v46 = v45;
    [v45 setActive:1];
  }
  id v47 = [v38 leadingAnchor];
  id v48 = [v2 trailingAnchor];
  id v49 = [v47 constraintEqualToAnchor:v48 constant:v39];

  BOOL v50 = 1;
  [v49 setActive:1];

  if (*(void *)(v1 + OBJC_IVAR____TtC7Journal14MediaAssetView_mediaAsset))
  {
    _s10MusicAssetCMa(0);
    BOOL v50 = swift_dynamicCastClass() == 0;
  }
  [v38 setHidden:v50];
  id v51 = *(void **)(v1 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_categoryLabel);
  double v52 = *(double *)(v1 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_labelMarginLarge);
  id v53 = *(id *)(v1 + v19);
  [v51 v4[96].name];
  id v54 = [v51 bottomAnchor];
  id v55 = [v53 bottomAnchor];
  id v56 = [v54 constraintEqualToAnchor:v55 constant:-v52];

  [v56 setActive:1];
  id v57 = *(id *)(v1 + v19);
  [v51 v4[96].name];
  id v58 = [v51 leadingAnchor];
  id v59 = [v57 leadingAnchor];
  id v60 = [v58 constraintEqualToAnchor:v59 constant:v52];

  [v60 setActive:1];
  id v61 = *(id *)(v1 + v19);
  [v51 v4[96].name];
  id v62 = [v51 trailingAnchor];
  id v63 = [v61 trailingAnchor];
  id v64 = [v62 constraintEqualToAnchor:v63 constant:-v52];

  [v64 setActive:1];
  id v65 = *(void **)(v1 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_artistLabel);
  id v66 = *(id *)(v1 + v19);
  [v65 v4[96].name];
  id v67 = [v65 leadingAnchor];
  id v68 = [v66 leadingAnchor];
  id v69 = [v67 constraintEqualToAnchor:v68 constant:v52];

  [v69 setActive:1];
  id v70 = *(id *)(v1 + v19);
  [v65 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v71 = [v65 trailingAnchor];
  id v72 = [v70 trailingAnchor];
  id v73 = [v71 constraintEqualToAnchor:v72 constant:-v52];

  [v73 setActive:1];
  double v74 = -*(double *)(v1 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_betweenLabelsMargin);
  [v65 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v75 = [v65 bottomAnchor];
  id v76 = [v51 topAnchor];
  id v77 = [v75 constraintEqualToAnchor:v76];

  [v77 setConstant:v74];
  [v77 setActive:1];

  uint64_t v78 = *(void **)(v1 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_titleLabel);
  id v79 = *(id *)(v1 + v19);
  [v78 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v80 = [v78 leadingAnchor];
  id v81 = [v79 leadingAnchor];
  id v82 = [v80 constraintEqualToAnchor:v81 constant:v52];

  [v82 setActive:1];
  id v83 = *(id *)(v1 + v19);
  [v78 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v84 = [v78 trailingAnchor];
  id v85 = [v83 trailingAnchor];
  id v86 = [v84 constraintEqualToAnchor:v85 constant:-v52];

  [v86 setActive:1];
  [v78 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v87 = [v78 bottomAnchor];
  id v88 = [v65 topAnchor];
  id v89 = [v87 constraintEqualToAnchor:v88];

  [v89 setConstant:0.0];
  [v89 setActive:1];

  id v90 = [v78 superview];
  if (v90)
  {
    id v95 = v90;
    [v78 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v91 = [v78 topAnchor];
    id v92 = [v95 topAnchor];
    id v93 = [v91 constraintGreaterThanOrEqualToAnchor:v92];

    [v93 setConstant:v39 + v39];
    id v94 = v93;
    [v94 setActive:1];
  }
}

uint64_t sub_100221924()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14MediaAssetView_assetImageView);
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_artBlurView);
  [v1 image];
  swift_getKeyPath();
  swift_getKeyPath();
  return static UIView.Invalidating.subscript.setter();
}

uint64_t sub_1002219C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  sub_100010218(&qword_1007FA1D0);
  v4[3] = swift_task_alloc();
  v4[4] = type metadata accessor for MainActor();
  v4[5] = static MainActor.shared.getter();
  id v7 = (uint64_t (__cdecl *)())((char *)&dword_100808958 + dword_100808958);
  id v5 = (void *)swift_task_alloc();
  v4[6] = v5;
  *id v5 = v4;
  v5[1] = sub_100221AB0;
  return v7();
}

uint64_t sub_100221AB0(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(v2 + 88) = a1;
  swift_task_dealloc();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 56) = v4;
  *(void *)(v2 + 64) = v3;
  return _swift_task_switch(sub_100221BFC, v4, v3);
}

uint64_t sub_100221BFC()
{
  if (*(unsigned char *)(v0 + 88))
  {
    if (*(unsigned char *)(v0 + 88) == 1)
    {
      id v9 = (uint64_t (*)(void))((char *)&dword_10080E368 + dword_10080E368);
      uint64_t v1 = (void *)swift_task_alloc();
      *(void *)(v0 + 72) = v1;
      void *v1 = v0;
      v1[1] = sub_100221DD4;
      return v9();
    }
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 24);
    swift_release();
    uint64_t v4 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    uint64_t v6 = static MainActor.shared.getter();
    id v7 = (void *)swift_allocObject();
    _OWORD v7[2] = v6;
    v7[3] = &protocol witness table for MainActor;
    v7[4] = v5;
    swift_release();
    sub_100328A60(v3, (uint64_t)&unk_100803D90, (uint64_t)v7);
  }
  swift_release();
  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100221DD4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 89) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100221ED4, 0, 0);
}

uint64_t sub_100221ED4()
{
  *(void *)(v0 + 80) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100221F60, v2, v1);
}

uint64_t sub_100221F60()
{
  char v1 = *(unsigned char *)(v0 + 89);
  swift_release();
  sub_100222044(v1);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 64);
  return _swift_task_switch(sub_100221FDC, v2, v3);
}

uint64_t sub_100221FDC()
{
  swift_release();
  swift_task_dealloc();
  char v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_100222044(char a1)
{
  if (a1) {
    id v1 = sub_10031FC88();
  }
  else {
    id v1 = sub_100320068();
  }
  uint64_t v2 = v1;
  id v3 = [self sharedApplication];
  sub_10031F2EC();
  if (v4)
  {
    id v5 = v4;
    while (1)
    {
      id v7 = [v5 presentedViewController];
      if (v7)
      {
        do
        {
          uint64_t v8 = v7;

          id v7 = [v8 presentedViewController];
          id v5 = v8;
        }
        while (v7);
      }
      else
      {
        uint64_t v8 = v5;
      }
      self;
      id v9 = (void *)swift_dynamicCastObjCClass();
      if (v9)
      {
        uint64_t v6 = &selRef_topViewController;
      }
      else
      {
        self;
        id v9 = (void *)swift_dynamicCastObjCClass();
        if (!v9)
        {

          [v8 presentViewController:v2 animated:1 completion:0];
          goto LABEL_18;
        }
        uint64_t v6 = &selRef_selectedViewController;
      }
      id v5 = [v9 *v6];

      if (!v5)
      {
        uint64_t v8 = v2;
        uint64_t v2 = v3;
        goto LABEL_18;
      }
    }
  }
  uint64_t v8 = v2;
  uint64_t v2 = v3;
LABEL_18:
}

uint64_t sub_10022230C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  sub_100010218(&qword_1007FA1D0);
  v4[6] = swift_task_alloc();
  v4[7] = type metadata accessor for MainActor();
  v4[8] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[9] = v6;
  v4[10] = v5;
  return _swift_task_switch(sub_1002223D8, v6, v5);
}

uint64_t sub_1002223D8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[11] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[12] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1002224D4;
    return sub_1001EF044();
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1002224D4(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 104) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 72);
  return _swift_task_switch(sub_1002225FC, v4, v3);
}

uint64_t sub_1002225FC()
{
  int v1 = *(unsigned __int8 *)(v0 + 104);
  swift_release();
  uint64_t v2 = *(void **)(v0 + 88);
  if (v1 == 1)
  {
    uint64_t v3 = *(void *)(v0 + 48);
    uint64_t v4 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
    uint64_t v5 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_retain();
    uint64_t v6 = static MainActor.shared.getter();
    id v7 = (void *)swift_allocObject();
    _OWORD v7[2] = v6;
    v7[3] = &protocol witness table for MainActor;
    v7[4] = v5;
    swift_release();
    sub_100328C78(v3, (uint64_t)&unk_100803D98, (uint64_t)v7);
    swift_release();
  }
  else
  {
    sub_1001EF834();
  }

  swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
  return v8();
}

uint64_t sub_100222760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v6;
  v4[8] = v5;
  return _swift_task_switch(sub_1002227F8, v6, v5);
}

uint64_t sub_1002227F8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[9] = Strong;
  if (Strong)
  {
    uint64_t v2 = *(void **)(Strong + OBJC_IVAR____TtC7Journal18MediaAssetGridView_playbackButton);
    v0[10] = v2;
    id v3 = v2;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[11] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100222904;
    return sub_1001EF044();
  }
  else
  {
    swift_release();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
}

uint64_t sub_100222904(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 96) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  return _swift_task_switch(sub_100222A2C, v4, v3);
}

uint64_t sub_100222A2C()
{
  int v1 = *(unsigned __int8 *)(v0 + 96);
  uint64_t v2 = *(void *)(v0 + 80);
  swift_release();
  int v3 = *(unsigned __int8 *)(v2 + OBJC_IVAR____TtC7Journal14PlaybackButton_isPlaying);
  *(unsigned char *)(v2 + OBJC_IVAR____TtC7Journal14PlaybackButton_isPlaying) = v1;
  uint64_t v4 = *(void **)(v0 + 72);
  uint64_t v5 = *(void **)(v0 + 80);
  if (v1 != v3) {
    [*(id *)(v0 + 80) setNeedsUpdateConfiguration];
  }

  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

void sub_100222AD4(double a1, double a2)
{
  if (*(void *)&v2[OBJC_IVAR____TtC7Journal14MediaAssetView_mediaAsset])
  {
    _s10MusicAssetCMa(0);
    if (swift_dynamicCastClass())
    {
      BOOL v5 = a2 == 0.0 && a1 == 0.0;
      uint64_t v6 = *(void **)&v2[OBJC_IVAR____TtC7Journal18MediaAssetGridView_playbackButton];
      [v6 setHidden:v5];
      [v6 alpha];
      if (v7 == a1) {
        return;
      }
      uint64_t v8 = self;
      uint64_t v9 = swift_allocObject();
      *(void *)(v9 + 16) = v2;
      *(double *)(v9 + 24) = a1;
      id v24 = sub_100223250;
      uint64_t v25 = v9;
      id v20 = _NSConcreteStackBlock;
      uint64_t v21 = 1107296256;
      id v22 = sub_10017D530;
      id v23 = &unk_10079FBE0;
      uint64_t v10 = _Block_copy(&v20);
      id v11 = v2;
      swift_release();
      [v8 animateWithDuration:0 delay:v10 options:0 animations:a2 completion:0.0];
      _Block_release(v10);
    }
  }
  id v12 = *(void **)&v2[OBJC_IVAR____TtC7Journal18MediaAssetGridView_mediaIndicator];
  if (v12)
  {
    BOOL v13 = a2 == 0.0 && a1 == 0.0;
    id v14 = v12;
    [v14 setHidden:v13];
    [v14 alpha];
    if (v15 == a1)
    {
    }
    else
    {
      id v16 = self;
      uint64_t v17 = swift_allocObject();
      *(void *)(v17 + 16) = v14;
      *(double *)(v17 + 24) = a1;
      id v24 = sub_100223224;
      uint64_t v25 = v17;
      id v20 = _NSConcreteStackBlock;
      uint64_t v21 = 1107296256;
      id v22 = sub_10017D530;
      id v23 = &unk_10079FB90;
      id v18 = _Block_copy(&v20);
      id v19 = v14;
      swift_release();
      [v16 animateWithDuration:0 delay:v18 options:0 animations:a2 completion:0.0];

      _Block_release(v18);
    }
  }
}

id sub_100222D74(uint64_t a1)
{
  return [*(id *)(a1 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_artBlurView) setAlpha:];
}

id sub_100222D8C()
{
  return *(id *)(v0 + OBJC_IVAR____TtC7Journal14MediaAssetView_assetImageView);
}

void sub_100222DA0()
{
  int v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal18MediaAssetGridView_artBlurView);
}

id sub_100222E20()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MediaAssetGridView();
  return [super dealloc];
}

uint64_t sub_100222EE4()
{
  return type metadata accessor for MediaAssetGridView();
}

uint64_t type metadata accessor for MediaAssetGridView()
{
  uint64_t result = qword_100803D48;
  if (!qword_100803D48) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100222F38()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100222FB0()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v5 = static MainActor.shared.getter();
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = v5;
  v6[3] = &protocol witness table for MainActor;
  v6[4] = v4;
  swift_release();
  sub_100328A60((uint64_t)v2, (uint64_t)&unk_100803D60, (uint64_t)v6);
  return swift_release();
}

uint64_t sub_1002230F4()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100223130(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  double v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *double v7 = v2;
  v7[1] = sub_100052588;
  return sub_100222760(a1, v4, v5, v6);
}

uint64_t sub_1002231EC()
{
  return swift_deallocObject();
}

id sub_100223224()
{
  return [*(id *)(v0 + 16) setAlpha:*(double *)(v0 + 24)];
}

uint64_t sub_100223238(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100223248()
{
  return swift_release();
}

id sub_100223250()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal18MediaAssetGridView_playbackButton) setAlpha:*(double *)(v0 + 24)];
}

uint64_t sub_100223270(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_1002232D8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100223338(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100223384()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002233C4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  double v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *double v7 = v2;
  v7[1] = sub_100052588;
  return sub_1002219C4(a1, v4, v5, v6);
}

uint64_t sub_10022347C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  double v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *double v7 = v2;
  v7[1] = sub_100052588;
  return sub_10022230C(a1, v4, v5, v6);
}

uint64_t sub_100223534(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  double v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *double v7 = v2;
  v7[1] = sub_10002C194;
  return sub_1001EEDCC(a1, v4, v5, v6);
}

void sub_1002235F8()
{
  uint64_t v1 = v0;
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for RTFEditingViewController();
  [super viewDidLoad];
  id v2 = [v0 view];
  if (v2)
  {
    uint64_t v3 = v2;
    uint64_t v4 = *(void **)&v1[OBJC_IVAR____TtC7JournalP33_52B12D7015364A2A97B4965365E27BCB24RTFEditingViewController_cleanTextView];
    [v2 addSubview:v4];

    sub_1001DCF60(0.0);
    swift_bridgeObjectRelease();
    id v5 = [self preferredFontForTextStyle:UIFontTextStyleBody];
    [v4 setFont:v5];

    uint64_t v6 = self;
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = [v6 __systemImageNamedSwift:v7];

    id v9 = objc_allocWithZone((Class)UIBarButtonItem);
    uint64_t v10 = v1;
    id v11 = [v9 initWithImage:v8 style:0 target:v10 action:"showRTFSheet"];

    id v12 = [v10 navigationItem];
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1006D6D00;
    *(void *)(v13 + 32) = v11;
    specialized Array._endMutation()();
    sub_10001B284(0, (unint64_t *)&qword_100803F80);
    id v14 = v11;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v12 setRightBarButtonItems:isa];
  }
  else
  {
    __break(1u);
  }
}

id sub_1002238CC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = OBJC_IVAR____TtC7JournalP33_52B12D7015364A2A97B4965365E27BCB24RTFEditingViewController_cleanTextView;
  type metadata accessor for CleanRTFTextView();
  id v7 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v8 = v3;
  *(void *)&v3[v6] = [v7 init];

  if (a2)
  {
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v9 = 0;
  }
  v12.receiver = v8;
  v12.super_class = (Class)type metadata accessor for RTFEditingViewController();
  id v10 = [super initWithNibName:v9 bundle:a3];

  return v10;
}

id sub_100223AB4()
{
  return sub_100223CDC((uint64_t (*)(void))type metadata accessor for RTFEditingViewController);
}

uint64_t type metadata accessor for RTFEditingViewController()
{
  return self;
}

id sub_100223CC4()
{
  return sub_100223CDC((uint64_t (*)(void))type metadata accessor for CleanRTFTextView);
}

id sub_100223CDC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return [super dealloc];
}

uint64_t type metadata accessor for CleanRTFTextView()
{
  return self;
}

id sub_100223D40()
{
  type metadata accessor for RTFEditingViewController();
  id v0 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v1 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v0];

  return v1;
}

uint64_t sub_100223DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10022403C();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100223E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_10022403C();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100223E6C()
{
}

id sub_100223E94()
{
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1006D6D00;
  sub_10001B284(0, (unint64_t *)&unk_100812580);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1006D6D30;
  sub_10001B284(0, &qword_100803DF8);
  *(void *)(v1 + 32) = static UITextFormattingViewControllerComponent.component(_:_:)();
  *(void *)(v1 + 40) = static UITextFormattingViewControllerComponent.component(_:_:)();
  *(void *)(v1 + 48) = static UITextFormattingViewControllerComponent.component(_:_:)();
  *(void *)(v1 + 56) = static UITextFormattingViewControllerComponent.component(_:_:)();
  specialized Array._endMutation()();
  uint64_t v2 = static UITextFormattingViewControllerComponentGroup.group(_:)();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 32) = v2;
  specialized Array._endMutation()();
  id v3 = objc_allocWithZone((Class)UITextFormattingViewControllerConfiguration);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithGroups:isa];

  return v5;
}

ValueMetadata *type metadata accessor for RTFEditingSwiftUIVC()
{
  return &type metadata for RTFEditingSwiftUIVC;
}

unint64_t sub_10022403C()
{
  unint64_t result = qword_100803E00;
  if (!qword_100803E00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100803E00);
  }
  return result;
}

uint64_t sub_100224090()
{
  static AnyTransition.opacity.getter();
  static Animation.easeIn(duration:)();
  Animation.delay(_:)();
  swift_release();
  AnyTransition.animation(_:)();
  swift_release();
  swift_release();
  static AnyTransition.opacity.getter();
  static Animation.easeOut(duration:)();
  AnyTransition.animation(_:)();
  swift_release();
  swift_release();
  uint64_t v0 = static AnyTransition.asymmetric(insertion:removal:)();
  swift_release();
  uint64_t result = swift_release();
  qword_10083D1C8 = v0;
  return result;
}

uint64_t sub_100224164()
{
  if (qword_1007F6BD0 != -1) {
    swift_once();
  }
  static AnyTransition.offset(x:y:)();
  uint64_t v0 = AnyTransition.combined(with:)();
  uint64_t result = swift_release();
  qword_10083D1D0 = v0;
  return result;
}

uint64_t sub_1002241E4()
{
  static AnyTransition.identity.getter();
  static AnyTransition.opacity.getter();
  uint64_t v0 = static AnyTransition.asymmetric(insertion:removal:)();
  swift_release();
  uint64_t result = swift_release();
  qword_10083D1D8 = v0;
  return result;
}

id sub_1002242F8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PlaceholderAssetView();
  return [super dealloc];
}

uint64_t type metadata accessor for PlaceholderAssetView()
{
  return self;
}

void sub_100224350()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal20CanvasViewController_pickerToolbar;
  if (*(void *)&v0[OBJC_IVAR____TtC7Journal20CanvasViewController_pickerToolbar]) {
    return;
  }
  objc_super v2 = v0;
  id v3 = &v0[OBJC_IVAR____TtC7Journal20CanvasViewController_startingState];
  LOBYTE(v3) = v3[*(int *)(type metadata accessor for CanvasStartingState() + 28)];
  uint64_t v4 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v5 = objc_allocWithZone((Class)type metadata accessor for CanvasPickerToolbar());
  id v6 = sub_1001969FC(v3, (uint64_t)sub_10022A8D0, v4);
  id v7 = *(void **)&v2[v1];
  *(void *)&v2[v1] = v6;
  id v8 = v6;

  id v9 = [objc_allocWithZone((Class)UILargeContentViewerInteraction) initWithDelegate:v2];
  [v8 addInteraction:v9];

  [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v10 = [v2 view];
  if (!v10)
  {
    __break(1u);
    goto LABEL_13;
  }
  id v11 = v10;
  [v10 addSubview:v8];

  objc_super v12 = self;
  id v13 = [v12 effectWithStyle:10];
  id v14 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v13];
  double v15 = self;
  id v16 = v14;
  id v17 = [v15 clearColor];
  [v16 setBackgroundColor:v17];

  id v18 = v16;
  [v8 bounds];
  [v18 setFrame:];

  [v18 setAutoresizingMask:18];
  [v18 setUserInteractionEnabled:0];
  [v8 insertSubview:v18 atIndex:0];

  id v19 = [objc_allocWithZone((Class)UIView) init];
  id v20 = [v8 barTintColor];
  [v19 setBackgroundColor:v20];

  id v21 = [v12 effectWithStyle:10];
  id v22 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v21];
  id v23 = [v15 clearColor];
  [v22 setBackgroundColor:v23];

  id v24 = v22;
  [v19 bounds];
  [v24 setFrame:];

  [v24 setAutoresizingMask:18];
  [v24 setUserInteractionEnabled:0];
  [v19 insertSubview:v24 atIndex:0];

  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v25 = [v2 view];
  if (!v25)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  id v26 = v25;
  [v25 insertSubview:v19 belowSubview:v8];

  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1006DF580;
  id v28 = [v8 leadingAnchor];
  id v29 = [v2 view];
  if (!v29)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  id v30 = v29;
  id v31 = [v29 leadingAnchor];

  id v32 = [v28 constraintEqualToAnchor:v31];
  *(void *)(v27 + 32) = v32;
  id v33 = [v8 trailingAnchor];
  id v34 = [v2 view];
  if (!v34)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v35 = v34;
  id v36 = [v34 trailingAnchor];

  id v37 = [v33 constraintEqualToAnchor:v36];
  *(void *)(v27 + 40) = v37;
  id v38 = [v19 leadingAnchor];
  id v39 = [v2 view];
  if (!v39)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  id v40 = v39;
  id v41 = [v39 leadingAnchor];

  id v42 = [v38 constraintEqualToAnchor:v41];
  *(void *)(v27 + 48) = v42;
  id v43 = [v19 topAnchor];
  id v44 = [v8 bottomAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44];

  *(void *)(v27 + 56) = v45;
  id v46 = [v19 trailingAnchor];
  id v47 = [v2 view];
  if (!v47)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v48 = v47;
  id v49 = [v47 trailingAnchor];

  id v50 = [v46 constraintEqualToAnchor:v49];
  *(void *)(v27 + 64) = v50;
  id v51 = [v19 bottomAnchor];
  id v52 = [v2 view];
  if (!v52)
  {
LABEL_18:
    __break(1u);
    return;
  }
  id v53 = v52;
  id v54 = self;
  id v55 = [v53 bottomAnchor];

  id v56 = [v51 constraintEqualToAnchor:v55];
  *(void *)(v27 + 72) = v56;
  specialized Array._endMutation()();
  sub_10001B284(0, (unint64_t *)&qword_1008059B0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v54 activateConstraints:isa];
}

void sub_100224AEC(unsigned __int8 a1)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v3 = (void *)Strong;
    sub_100224B48(a1);
  }
}

void sub_100224B48(unsigned __int8 a1)
{
  objc_super v2 = v1;
  switch(a1 >> 5)
  {
    case 1:
      sub_100226954(a1 & 1);
      break;
    case 2:
      if (a1 == 64)
      {
        sub_100225834();
      }
      else
      {
        sub_100225D80();
      }
      break;
    case 3:
      if (a1 == 96)
      {
        sub_100226044();
      }
      else
      {
        sub_100226458();
      }
      break;
    case 4:
      if (a1 == 128)
      {
        id v4 = [v1 presentedViewController];
        if (!v4
          || (id v5 = v4,
              type metadata accessor for LocationPickerCollectionViewController(0),
              uint64_t v6 = swift_dynamicCastClass(),
              v5,
              !v6))
        {
          type metadata accessor for LocationPickerCollectionViewController(0);
          id v9 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
          *(void *)&v9[OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_pickerDelegate + 8] = &off_10079FD00;
          swift_unknownObjectWeakAssign();
          *(void *)&v9[OBJC_IVAR____TtC7Journal38LocationPickerCollectionViewController_journalEntry] = *(void *)&v2[OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry];
          swift_retain_n();
          swift_release();
          sub_1004C5414();
          swift_release();
          sub_100077298(v9, 1, 1, 0, 1, *(void *)&v2[OBJC_IVAR____TtC7Journal20CanvasViewController_coordinator]);
          goto LABEL_36;
        }
      }
      else
      {
        sub_100226CF4();
      }
      break;
    case 5:
      uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC7Journal20CanvasViewController_coordinator];
      uint64_t v8 = swift_allocObject();
      swift_unknownObjectWeakInit();
      sub_10007AEF8(1, v7, v8);
      swift_release();
      break;
    default:
      if ((a1 & 1) == 0 && (uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong()) != 0
        || (uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong()) != 0)
      {
        id v9 = Strong;
        if (![Strong isFirstResponder]
          && [v9 canBecomeFirstResponder])
        {
          [v9 becomeFirstResponder];
        }
LABEL_36:
      }
      break;
  }
}

void sub_100224F38()
{
  uint64_t v1 = v0;
  uint64_t v2 = _s10PhotoAssetC9PhotoDataVMa(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v58 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218((uint64_t *)&unk_100804080);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (double *)((char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v74 = _s10VideoAssetC9VideoDataVMa(0);
  unint64_t v9 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  id v11 = (char *)&v58 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218(&qword_1007F9E10);
  __chkstk_darwin(v12 - 8);
  uint64_t v72 = (uint64_t)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = _s14LivePhotoAssetC13LivePhotoDataVMa(0);
  uint64_t v14 = *(void *)(v77 - 8);
  __chkstk_darwin(v77);
  id v73 = (uint64_t *)((char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_100010218((uint64_t *)&unk_100804090);
  __chkstk_darwin(v16 - 8);
  id v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for PHPickerConfiguration.Update();
  uint64_t v67 = *(void *)(v19 - 8);
  uint64_t v68 = v19;
  *(void *)&double v20 = __chkstk_darwin(v19).n128_u64[0];
  id v69 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = [v1 presentedViewController];
  if (!v22) {
    return;
  }
  id v71 = v22;
  self;
  id v65 = (id)swift_dynamicCastObjCClass();
  if (!v65)
  {
    id v56 = v71;

    return;
  }
  unint64_t v70 = v9;
  uint64_t v23 = v3;
  PHPickerConfiguration.Update.init()();
  if (__OFSUB__(14, sub_1005D763C()))
  {
    __break(1u);
LABEL_41:
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    if (v27) {
      goto LABEL_6;
    }
LABEL_42:
    id v30 = (char *)_swiftEmptyArrayStorage;
LABEL_43:
    swift_bridgeObjectRelease_n();
    if (*((void *)v30 + 2))
    {
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v65 deselectAssetsWithIdentifiers:isa];

      (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v68);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v68);
      swift_bridgeObjectRelease();
    }
    return;
  }
  id v63 = (uint64_t *)v11;
  id v64 = v8;
  PHPickerConfiguration.Update.selectionLimit.setter();
  PHPickerViewController.updatePicker(using:)();
  id v24 = (unint64_t *)(*(void *)&v1[OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry]
                           + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll);
  swift_beginAccess();
  unint64_t v25 = *v24;
  swift_beginAccess();
  swift_bridgeObjectRetain();
  unint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_100229D74(v26, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((unint64_t)v8 >> 62) {
    goto LABEL_41;
  }
  uint64_t v27 = *(void *)(((unint64_t)v8 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (!v27) {
    goto LABEL_42;
  }
LABEL_6:
  uint64_t v75 = v27;
  if (v27 >= 1)
  {
    id v60 = (uint64_t *)v5;
    uint64_t v62 = v2;
    uint64_t v28 = 0;
    unint64_t v29 = (unint64_t)v8 & 0xC000000000000001;
    id v76 = (unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    id v66 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
    id v61 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v23 + 48);
    id v30 = (char *)_swiftEmptyArrayStorage;
    uint64_t v31 = v72;
    unint64_t v70 = (unint64_t)v8 & 0xC000000000000001;
    uint64_t v32 = v75;
    while (1)
    {
      id v33 = v29 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)&v8[v28 + 4];
      id v34 = v33;
      _s14LivePhotoAssetCMa(0);
      uint64_t v35 = swift_dynamicCastClass();
      if (!v35) {
        break;
      }
      if (!*(void *)(v35 + OBJC_IVAR____TtCC7Journal10Journaling14LivePhotoAsset_metadata)) {
        goto LABEL_8;
      }
      id v36 = v34;
      swift_retain();
      sub_1000398E0((uint64_t)v18);

      swift_release();
      if (!(*v76)(v18, 1, v77))
      {
        id v41 = _s14LivePhotoAssetC13LivePhotoDataVMa;
        id v42 = v30;
        id v43 = v73;
        sub_10022A808((uint64_t)v18, (uint64_t)v73, _s14LivePhotoAssetC13LivePhotoDataVMa);
        sub_10001457C((uint64_t)v18, (uint64_t *)&unk_100804090);
        uint64_t v45 = *v43;
        uint64_t v44 = v43[1];
        swift_bridgeObjectRetain();
        uint64_t v46 = (uint64_t)v43;
        id v30 = v42;
        unint64_t v29 = v70;
LABEL_28:
        id v51 = v41;
LABEL_29:
        sub_10022A870(v46, v51);

        if (v44)
        {
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v30 = sub_1002A54A0(0, *((void *)v30 + 2) + 1, 1, v30);
          }
          unint64_t v53 = *((void *)v30 + 2);
          unint64_t v52 = *((void *)v30 + 3);
          if (v53 >= v52 >> 1) {
            id v30 = sub_1002A54A0((char *)(v52 > 1), v53 + 1, 1, v30);
          }
          *((void *)v30 + 2) = v53 + 1;
          id v54 = &v30[16 * v53];
          *((void *)v54 + 4) = v45;
          *((void *)v54 + 5) = v44;
        }
        uint64_t v32 = v75;
        goto LABEL_9;
      }
      sub_10001457C((uint64_t)v18, (uint64_t *)&unk_100804090);

LABEL_9:
      if (v32 == ++v28) {
        goto LABEL_43;
      }
    }
    _s10VideoAssetCMa(0);
    uint64_t v37 = swift_dynamicCastClass();
    if (v37)
    {
      if (*(void *)(v37 + OBJC_IVAR____TtCC7Journal10Journaling10VideoAsset_metadata))
      {
        id v38 = v34;
        swift_retain();
        sub_100039C14(v31);

        swift_release();
        if (!(*v66)(v31, 1, v74))
        {
          id v41 = _s10VideoAssetC9VideoDataVMa;
          id v49 = v30;
          id v50 = v63;
          sub_10022A808(v31, (uint64_t)v63, _s10VideoAssetC9VideoDataVMa);
          sub_10001457C(v72, &qword_1007F9E10);
          uint64_t v45 = *v50;
          uint64_t v44 = v50[1];
          swift_bridgeObjectRetain();
          uint64_t v46 = (uint64_t)v50;
          id v30 = v49;
          unint64_t v29 = v70;
          uint64_t v31 = v72;
          goto LABEL_28;
        }
        uint64_t v39 = v31;
        id v40 = &qword_1007F9E10;
        goto LABEL_26;
      }
    }
    else
    {
      _s10PhotoAssetCMa(0);
      uint64_t v47 = swift_dynamicCastClass();
      if (v47 && *(void *)(v47 + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata))
      {
        id v38 = v34;
        swift_retain();
        uint64_t v48 = (uint64_t)v64;
        sub_1000395AC((uint64_t)v64);

        swift_release();
        if (!(*v61)(v48, 1, v62))
        {
          id v59 = _s10PhotoAssetC9PhotoDataVMa;
          id v55 = v60;
          sub_10022A808(v48, (uint64_t)v60, _s10PhotoAssetC9PhotoDataVMa);
          sub_10001457C(v48, (uint64_t *)&unk_100804080);
          uint64_t v45 = *v55;
          uint64_t v44 = v55[1];
          swift_bridgeObjectRetain();
          uint64_t v46 = (uint64_t)v55;
          id v51 = v59;
          goto LABEL_29;
        }
        uint64_t v39 = v48;
        id v40 = (uint64_t *)&unk_100804080;
LABEL_26:
        sub_10001457C(v39, v40);

        uint64_t v32 = v75;
        goto LABEL_9;
      }
    }
LABEL_8:

    goto LABEL_9;
  }
  __break(1u);
}

void sub_100225834()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = &type metadata for JournalFeatureFlags;
  unint64_t v47 = sub_10005F364();
  v45[0] = 6;
  char v6 = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v45);
  id v7 = [v1 presentedViewController];
  uint64_t v8 = v7;
  if (v6)
  {
    if (!v7
      || (type metadata accessor for JurassicNavigationController(), uint64_t v9 = swift_dynamicCastClass(),
                                                                     v8,
                                                                     !v9))
    {
      id v10 = objc_allocWithZone((Class)type metadata accessor for EditDateViewController());
      uint64_t v11 = swift_retain();
      uint64_t v12 = (char *)sub_100064C64(v11);
      swift_release();
      *(void *)&v12[OBJC_IVAR____TtC7Journal22EditDateViewController_delegate + 8] = &off_10079FCF0;
      swift_unknownObjectWeakAssign();
      uint64_t v13 = (char *)[objc_allocWithZone((Class)type metadata accessor for JurassicNavigationController()) initWithRootViewController:v12];
      sub_100077298(v13, 0, 1, 0, 1, *(void *)&v1[OBJC_IVAR____TtC7Journal20CanvasViewController_coordinator]);

LABEL_15:
    }
  }
  else if (!v7 {
         || (type metadata accessor for CanvasDatePicker(), uint64_t v14 = swift_dynamicCastClass(), v8, !v14))
  }
  {
    uint64_t v15 = *(void *)&v1[OBJC_IVAR____TtC7Journal20CanvasViewController_journalEntry]
        + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_date;
    swift_beginAccess();
    uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v16(v5, v15, v2);
    uint64_t v17 = (objc_class *)type metadata accessor for CanvasDatePicker();
    id v18 = (char *)objc_allocWithZone(v17);
    id v42 = v1;
    uint64_t v19 = OBJC_IVAR____TtC7Journal16CanvasDatePicker_datePicker;
    id v20 = objc_allocWithZone((Class)UIDatePicker);
    uint64_t v21 = v18;
    *(void *)&v18[v19] = [v20 init];
    *(void *)&v21[OBJC_IVAR____TtC7Journal16CanvasDatePicker_delegate + 8] = 0;
    swift_unknownObjectWeakInit();
    v16(&v21[OBJC_IVAR____TtC7Journal16CanvasDatePicker_preselectedDate], (uint64_t)v5, v2);

    v44.receiver = v21;
    v44.super_class = v17;
    uint64_t v13 = (char *)[super initWithNibName:0 bundle:0];
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    id v22 = v42;
    *(void *)&v13[OBJC_IVAR____TtC7Journal16CanvasDatePicker_delegate + 8] = &off_10079FCF0;
    swift_unknownObjectWeakAssign();
    id v23 = [v13 sheetPresentationController];
    if (v23)
    {
      id v24 = v23;
      id v25 = [self sharedApplication];
      id v26 = [v25 preferredContentSizeCategory];

      LOBYTE(v25) = UIContentSizeCategory.isAccessibilityCategory.getter();
      if (v25)
      {
        double v27 = 0.9;
      }
      else
      {
        id v28 = [self mainScreen];
        [v28 bounds];
        CGFloat v30 = v29;
        CGFloat v32 = v31;
        CGFloat v34 = v33;
        CGFloat v36 = v35;

        v48.origin.x = v30;
        v48.origin.y = v32;
        v48.size.width = v34;
        v48.size.height = v36;
        double v37 = fmax(570.0 / CGRectGetHeight(v48), 0.65);
        if (v37 <= 0.9) {
          double v27 = v37;
        }
        else {
          double v27 = 0.9;
        }
      }
      sub_100010218((uint64_t *)&unk_1007FA1C0);
      uint64_t v38 = swift_allocObject();
      *(_OWORD *)(v38 + 16) = xmmword_1006D6D00;
      sub_10001B284(0, (unint64_t *)&qword_1007FB5F0);
      *(double *)(swift_allocObject() + 16) = v27;
      uint64_t v39 = static UISheetPresentationControllerDetent.custom(identifier:resolver:)();
      swift_release();
      *(void *)(v38 + 32) = v39;
      uint64_t v43 = v38;
      specialized Array._endMutation()();
      Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [v24 setDetents:isa];
    }
    sub_100077298(v13, 0, 1, 0, 1, *(void *)&v22[OBJC_IVAR____TtC7Journal20CanvasViewController_coordinator]);
    goto LABEL_15;
  }
}

void sub_100225D80()
{
  uint64_t v1 = v0;
  id v2 = [self sharedInstance];
  id v3 = [v2 onboardingFlowCompletionStatus];

  char v4 = sub_1003981A0();
  char v5 = v4;
  if (v3 == (id)1 || (v4 & 1) != 0)
  {
    id v9 = [v1 presentedViewController];
    if (v9)
    {
      id v10 = v9;
      type metadata accessor for PermissionViewController();
      uint64_t v11 = swift_dynamicCastClass();
      if (v11)
      {
        int v12 = *(unsigned __int8 *)(v11 + OBJC_IVAR____TtC7Journal24PermissionViewController_permissionViewType);

        if (v12 == 7)
        {
          if (v3 == (id)1) {
            return;
          }
        }
        else if (v12 == 6 && (v5 & 1) != 0)
        {
          return;
        }
      }
      else
      {
      }
    }
    type metadata accessor for PermissionViewController();
    uint64_t v15 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    *(void *)&v15[OBJC_IVAR____TtC7Journal24PermissionViewController_delegate + 8] = &off_10079FD50;
    swift_unknownObjectWeakAssign();
    if (v3 == (id)1) {
      char v14 = 7;
    }
    else {
      char v14 = 6;
    }
    v15[OBJC_IVAR____TtC7Journal24PermissionViewController_permissionViewType] = v14;
    sub_10047C534();
    sub_10047C7A0();
    sub_100077298(v15, 1, 0, 0, 1, *(void *)&v1[OBJC_IVAR____TtC7Journal20CanvasViewController_coordinator]);
  }
  else
  {
    int v6 = *(unsigned __int8 *)(*(void *)&v1[OBJC_IVAR____TtC7Journal20CanvasViewController_coordinator]
                            + OBJC_IVAR____TtC7Journal23CanvasLayoutCoordinator_focusedControl);
    sub_100078758(v6 != 3);
    if (qword_1007F6C18 != -1) {
      swift_once();
    }
    *(void *)(qword_10083D208 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_delegate + 8) = &off_10079FD38;
    swift_unknownObjectWeakAssign();
    double v7 = 0.0;
    if (UIAccessibilityIsVoiceOverRunning() || UIAccessibilityIsSwitchControlRunning())
    {
      uint64_t v8 = 1;
    }
    else
    {
      sub_100074EA8(0);
      double v7 = v13;
      uint64_t v8 = 0;
    }
    uint64_t v15 = [objc_allocWithZone((Class)MOSuggestionSheetOptions) initWithShowCancelButton:v8 showBlankEntryButton:0 peekDetentRatio:v8 presentFullScreen:v6 != 3 presentationIsAnimated:1 selectedTabIsRecommended:0 selectedSuggestionId:v7];
    sub_1002417E8(v15);
  }
}

void sub_100226044()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for PHPickerConfiguration.AssetRepresentationMode();
  uint64_t v29 = *(void *)(v2 - 8);
  uint64_t v30 = v2;
  __chkstk_darwin(v2);
  char v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_100803F70);
  __chkstk_darwin(v5 - 8);
  double v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for PHPickerConfiguration.Selection();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PHPickerConfiguration();
  uint64_t v31 = *(void *)(v12 - 8);
  uint64_t v32 = v12;
  __chkstk_darwin(v12);
  char v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v16 = __chkstk_darwin(v15).n128_u64[0];
  id v18 = (char *)&v28 - v17;
  id v19 = [v0 presentedViewController];
  if (!v19 || (id v20 = v19, self, v21 = swift_dynamicCastObjCClass(), v20, !v21))
  {
    id v22 = [self sharedPhotoLibrary];
    PHPickerConfiguration.init(photoLibrary:)();
    if (__OFSUB__(14, sub_1005D763C()))
    {
      __break(1u);
    }
    else
    {
      PHPickerConfiguration.selectionLimit.setter();
      (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for PHPickerConfiguration.Selection.continuous(_:), v8);
      PHPickerConfiguration.selection.setter();
      uint64_t v23 = type metadata accessor for PHPickerFilter();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v7, 1, 1, v23);
      PHPickerConfiguration.filter.setter();
      (*(void (**)(char *, void, uint64_t))(v29 + 104))(v4, enum case for PHPickerConfiguration.AssetRepresentationMode.current(_:), v30);
      PHPickerConfiguration.preferredAssetRepresentationMode.setter();
      id v24 = &v1[OBJC_IVAR____TtC7Journal20CanvasViewController_photoPickerLatestAssetAdditions];
      swift_beginAccess();
      *(void *)id v24 = _swiftEmptyArrayStorage;
      swift_bridgeObjectRelease();
      sub_10001B284(0, &qword_100803F78);
      uint64_t v26 = v31;
      uint64_t v25 = v32;
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v14, v18, v32);
      double v27 = (void *)PHPickerViewController.init(configuration:)();
      [v27 setDelegate:v1];
      sub_100077298(v27, 1, 1, 0, 1, *(void *)&v1[OBJC_IVAR____TtC7Journal20CanvasViewController_coordinator]);

      (*(void (**)(char *, uint64_t))(v26 + 8))(v18, v25);
    }
  }
}

void sub_100226458()
{
  uint64_t v1 = v0;
  id v2 = [self authorizationStatusForMediaType:AVMediaTypeVideo];
  id v3 = [v1 presentedViewController];
  char v4 = v3;
  if (v2 != (id)3)
  {
    if (v3)
    {
      type metadata accessor for PermissionViewController();
      uint64_t v11 = swift_dynamicCastClass();
      if (v11)
      {
        char v12 = *(unsigned char *)(v11 + OBJC_IVAR____TtC7Journal24PermissionViewController_permissionViewType);

        if ((v12 & 0xFE) == 2) {
          return;
        }
      }
      else
      {
      }
    }
    type metadata accessor for PermissionViewController();
    uint64_t v26 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    *(void *)&v26[OBJC_IVAR____TtC7Journal24PermissionViewController_delegate + 8] = &off_10079FD50;
    swift_unknownObjectWeakAssign();
    if (v2) {
      char v25 = 3;
    }
    else {
      char v25 = 2;
    }
    v26[OBJC_IVAR____TtC7Journal24PermissionViewController_permissionViewType] = v25;
    sub_10047C534();
    sub_10047C7A0();
    sub_100077298(v26, 1, 0, 0, 1, *(void *)&v1[OBJC_IVAR____TtC7Journal20CanvasViewController_coordinator]);
    goto LABEL_36;
  }
  if (!v3 || (self, uint64_t v5 = swift_dynamicCastObjCClass(), v4, !v5))
  {
    uint64_t v6 = self;
    if ([v6 isSourceTypeAvailable:1])
    {
      id v7 = [v6 availableMediaTypesForSourceType:1];
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v26 = [objc_allocWithZone((Class)UIImagePickerController) init];
        [v26 setMediaTypes:v8];

        [v26 setSourceType:1];
        [v26 setAllowsEditing:0];
        [v26 setDelegate:v1];
        [v26 setModalPresentationStyle:0];
        [v26 setShowsCameraControls:1];
        [v26 setVideoMaximumDuration:1.79769313e308];
        [v26 setVideoQuality:0];
        uint64_t v9 = sub_10022A020();
        if ((v10 & 1) == 0) {
          [v26 setCameraDevice:v9];
        }
        sub_100077298(v26, 0, 1, 0, 1, *(void *)&v1[OBJC_IVAR____TtC7Journal20CanvasViewController_coordinator]);
        if (*(void *)&v1[OBJC_IVAR____TtC7Journal20CanvasViewController_canvasIdleTracker])
        {
          swift_retain();
          sub_10023F010();
          swift_release();
        }
LABEL_36:

        return;
      }
    }
  }
  uint64_t v13 = *(void **)&v1[OBJC_IVAR____TtC7Journal20CanvasViewController_pickerToolbar];
  if (!v13) {
    return;
  }
  uint64_t v26 = v13;
  id v14 = [v26 items];
  if (!v14) {
    goto LABEL_36;
  }
  uint64_t v15 = v14;
  sub_10001B284(0, (unint64_t *)&qword_100803F80);
  unint64_t v16 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v16 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17)
    {
LABEL_18:
      if (v17 < 1)
      {
        __break(1u);
        return;
      }
      for (uint64_t i = 0; i != v17; ++i)
      {
        if ((v16 & 0xC000000000000001) != 0) {
          id v20 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v20 = *(id *)(v16 + 8 * i + 32);
        }
        id v19 = v20;
        id v21 = [v20 customView];
        if (v21)
        {
          id v22 = v21;
          self;
          uint64_t v23 = swift_dynamicCastObjCClass();
          if (v23)
          {
            id v24 = (void *)v23;
            id v22 = v22;
            [v24 setSelected:0];
            if ([v24 tag] == (id)9) {
              [v24 setEnabled:0];
            }

            id v19 = v22;
          }

          id v19 = v22;
        }
      }
    }
  }

  swift_bridgeObjectRelease();
}

void sub_100226954(char a1)
{
  id v2 = v1;
  id v4 = [self sharedInstance];
  id v5 = [v4 recordPermission];

  if (v5 == (id)1735552628)
  {
    id v22 = &type metadata for JournalFeatureFlags;
    unint64_t v23 = sub_10005F364();
    v21[0] = 10;
    char v6 = isFeatureEnabled(_:)();
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v21);
    id v7 = [v2 presentedViewController];
    uint64_t v8 = v7;
    if (v6)
    {
      if (!v7
        || (type metadata accessor for CanvasTranscribingAudioPickerController(),
            uint64_t v9 = swift_dynamicCastClass(),
            v8,
            !v9))
      {
        id v10 = objc_allocWithZone((Class)type metadata accessor for CanvasTranscribingAudioPickerController());
        id v11 = sub_100316A48(0, a1 & 1);
        uint64_t v12 = *(void *)(sub_100313330() + 48);
        swift_retain();
        swift_release();
        if (v12)
        {
          if (*(void *)&v2[OBJC_IVAR____TtC7Journal20CanvasViewController_autosaveManager])
          {
            swift_retain();
            swift_retain();
            id v13 = sub_10010A584();
            [v13 addObject:v12];
            swift_release();
            swift_release();
          }
          *(void *)(v12 + OBJC_IVAR____TtC7Journal29AudioAssetPersistenceStrategy_pickerDelegate + 8) = &off_10079FD10;
          swift_unknownObjectWeakAssign();
          swift_release();
        }
        sub_100077298(v11, 1, 1, 0, 1, *(void *)&v2[OBJC_IVAR____TtC7Journal20CanvasViewController_coordinator]);
      }
    }
    else if (!v7 {
           || (type metadata accessor for CanvasAudioPickerController(),
    }
               uint64_t v18 = swift_dynamicCastClass(),
               v8,
               !v18))
    {
      type metadata accessor for CanvasAudioPickerController();
      id v19 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
      *(void *)&v19[OBJC_IVAR____TtC7Journal27CanvasAudioPickerController_pickerDelegate + 8] = &off_10079FD10;
      swift_unknownObjectWeakAssign();
      sub_100077298(v19, 1, 0, 0, 1, *(void *)&v2[OBJC_IVAR____TtC7Journal20CanvasViewController_coordinator]);
    }
  }
  else
  {
    id v14 = [v2 presentedViewController];
    if (v14)
    {
      uint64_t v15 = v14;
      type metadata accessor for PermissionViewController();
      uint64_t v16 = swift_dynamicCastClass();
      if (v16)
      {
        unsigned int v17 = *(unsigned __int8 *)(v16 + OBJC_IVAR____TtC7Journal24PermissionViewController_permissionViewType);

        if (v17 < 2) {
          return;
        }
      }
      else
      {
      }
    }
    type metadata accessor for PermissionViewController();
    id v20 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    *(void *)&v20[OBJC_IVAR____TtC7Journal24PermissionViewController_delegate + 8] = &off_10079FD50;
    swift_unknownObjectWeakAssign();
    v20[OBJC_IVAR____TtC7Journal24PermissionViewController_permissionViewType] = v5 != (id)1970168948;
    sub_10047C534();
    sub_10047C7A0();
    sub_100077298(v20, 1, 0, 0, 1, *(void *)&v2[OBJC_IVAR____TtC7Journal20CanvasViewController_coordinator]);
  }
}

void sub_100226CF4()
{
  uint64_t v1 = v0;
  if (qword_1007F6930 != -1) {
    swift_once();
  }
  id v2 = sub_10004D528(0);
  char v4 = v3;
  id v5 = [v1 presentedViewController];
  char v6 = v5;
  if ((v4 & 1) != 0 || v2 != (id)2)
  {
    if (v5)
    {
      type metadata accessor for PermissionViewController();
      uint64_t v8 = swift_dynamicCastClass();
      if (v8)
      {
        int v9 = *(unsigned __int8 *)(v8 + OBJC_IVAR____TtC7Journal24PermissionViewController_permissionViewType);

        if (v9 == 5)
        {
          if ((v4 & 1) == 0 && !v2) {
            return;
          }
        }
        else if (v9 == 4 && (v4 & 1) == 0 && v2 == (id)1)
        {
          return;
        }
      }
      else
      {
      }
    }
    int v16 = v4 & 1;
    type metadata accessor for PermissionViewController();
    id v19 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    *(void *)&v19[OBJC_IVAR____TtC7Journal24PermissionViewController_delegate + 8] = &off_10079FD50;
    swift_unknownObjectWeakAssign();
    if (v2) {
      BOOL v17 = 0;
    }
    else {
      BOOL v17 = v16 == 0;
    }
    if (v17) {
      char v18 = 5;
    }
    else {
      char v18 = 4;
    }
    v19[OBJC_IVAR____TtC7Journal24PermissionViewController_permissionViewType] = v18;
    sub_10047C534();
    sub_10047C7A0();
    uint64_t v15 = *(void *)&v1[OBJC_IVAR____TtC7Journal20CanvasViewController_coordinator];
    id v13 = v19;
    char v14 = 0;
  }
  else
  {
    if (v5)
    {
      type metadata accessor for CanvasStateOfMindPicker();
      uint64_t v7 = swift_dynamicCastClass();

      if (v7) {
        return;
      }
    }
    uint64_t v10 = *(void *)&v1[OBJC_IVAR____TtC7Journal20CanvasViewController_coordinator];
    uint64_t v11 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v12 = objc_allocWithZone((Class)type metadata accessor for CanvasStateOfMindPicker());
    id v13 = sub_1004D5FC8((uint64_t)sub_100229C60, v11);
    id v19 = v13;
    char v14 = 1;
    uint64_t v15 = v10;
  }
  sub_100077298(v13, 1, v14, 0, 1, v15);
}

uint64_t sub_100226F68(void *a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    char v6 = (void *)result;
    uint64_t v7 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    type metadata accessor for MainActor();
    id v8 = v6;
    id v9 = a1;
    uint64_t v10 = static MainActor.shared.getter();
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = v8;
    v11[5] = v9;
    sub_100328A60((uint64_t)v4, (uint64_t)&unk_100803F60, (uint64_t)v11);

    return swift_release();
  }
  return result;
}

void sub_1002270D0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = *(id *)(Strong + OBJC_IVAR____TtC7Journal20CanvasViewController_textView);

    uint64_t v3 = (void *)swift_dynamicCastObjCProtocolConditional();
    if (v3)
    {
      [v3 _showTextFormattingOptions:0];
      v2[OBJC_IVAR____TtC7Journal14CanvasTextView_isShowingFormattingController] = 1;
    }
  }
  swift_beginAccess();
  uint64_t v4 = swift_unknownObjectWeakLoadStrong();
  if (v4)
  {
    id v5 = (void *)v4;
    char v6 = *(void **)(v4 + OBJC_IVAR____TtC7Journal20CanvasViewController_pickerToolbar);
    id v7 = v6;

    if (v6)
    {
      id v8 = [v7 items];

      if (v8)
      {
        sub_10001B284(0, (unint64_t *)&qword_100803F80);
        unint64_t v9 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v9 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
          if (v10) {
            goto LABEL_10;
          }
        }
        else
        {
          uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v10)
          {
LABEL_10:
            if (v10 < 1)
            {
              __break(1u);
              return;
            }
            for (uint64_t i = 0; i != v10; ++i)
            {
              if ((v9 & 0xC000000000000001) != 0) {
                id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
              }
              else {
                id v12 = *(id *)(v9 + 8 * i + 32);
              }
              id v13 = v12;
              [v12 setIsAccessibilityElement:0];
            }
          }
        }
        swift_bridgeObjectRelease_n();
      }
    }
  }
}

void sub_1002272C8()
{
}

void sub_1002272DC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  char v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  id v8 = Strong;
  if (a1 == (void *)1)
  {
    if (Strong)
    {
      if (([Strong isFirstResponder] & 1) == 0
        && [v8 canBecomeFirstResponder])
      {
        [v8 becomeFirstResponder];
      }
    }
    goto LABEL_14;
  }
  id v9 = a1;
  if (v8)
  {
    if (([v8 isFirstResponder] & 1) == 0
      && ([v8 canBecomeFirstResponder] & 1) != 0)
    {
      [v8 becomeFirstResponder];
    }
  }
  if (a1)
  {
    uint64_t v10 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v6, 1, 1, v10);
    type metadata accessor for MainActor();
    sub_1000D5E74(a1);
    sub_1000D5E74(a1);
    uint64_t v11 = v2;
    uint64_t v12 = static MainActor.shared.getter();
    id v13 = (void *)swift_allocObject();
    v13[2] = v12;
    v13[3] = &protocol witness table for MainActor;
    v13[4] = v11;
    v13[5] = v9;
    sub_100328A60((uint64_t)v6, (uint64_t)&unk_100803FF0, (uint64_t)v13);
    swift_release();
    sub_1000D39C0(a1);
    sub_1000D39C0(a1);
LABEL_14:
    if (*(void *)&v2[OBJC_IVAR____TtC7Journal20CanvasViewController_canvasIdleTracker])
    {
      swift_retain();
      sub_10023ED44();
      swift_release();
    }
  }
}

void sub_1002275FC(void *a1)
{
  id v2 = [a1 cameraDevice];
  id v3 = [self standardUserDefaults];
  NSString v4 = String._bridgeToObjectiveC()();
  [v3 setInteger:v2 forKey:v4];

  uint64_t v5 = *(void *)&v1[OBJC_IVAR____TtC7Journal20CanvasViewController_coordinator];
  char v6 = v1;
  sub_10007B324(1, v5, v6);

  if (*(void *)&v6[OBJC_IVAR____TtC7Journal20CanvasViewController_canvasIdleTracker])
  {
    swift_retain();
    sub_10023F034();
    swift_release();
  }
}

void sub_100227704()
{
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v1 = Strong;
    if (([Strong isFirstResponder] & 1) == 0
      && ([v1 canBecomeFirstResponder] & 1) != 0)
    {
      [v1 becomeFirstResponder];
    }
  }
}

uint64_t sub_1002278E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[23] = a6;
  v7[24] = v6;
  v7[21] = a4;
  v7[22] = a5;
  v7[19] = a2;
  v7[20] = a3;
  v7[18] = a1;
  sub_100010218(&qword_1007FA1D0);
  v7[25] = swift_task_alloc();
  v7[26] = type metadata accessor for MainActor();
  v7[27] = static MainActor.shared.getter();
  uint64_t v9 = dispatch thunk of Actor.unownedExecutor.getter();
  v7[28] = v9;
  v7[29] = v8;
  return _swift_task_switch(sub_1002279BC, v9, v8);
}

uint64_t sub_1002279BC()
{
  id v1 = *(void **)(v0 + 168);
  if (v1)
  {
    id v3 = *(void **)(v0 + 192);
    uint64_t v2 = *(void *)(v0 + 200);
    id v4 = v1;
    swift_release();
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    uint64_t v6 = type metadata accessor for TaskPriority();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v2, 1, 1, v6);
    id v7 = v3;
    id v8 = v4;
    id v9 = v7;
    swift_retain();
    uint64_t v10 = static MainActor.shared.getter();
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = v9;
    v11[5] = v8;
    v11[6] = sub_10022A5E4;
    v11[7] = v5;
    sub_100328A60(v2, (uint64_t)&unk_100804060, (uint64_t)v11);
    swift_release();
    swift_release();

    goto LABEL_3;
  }
  unint64_t v23 = *(void **)(v0 + 160);
  if (!v23)
  {
    swift_release();
LABEL_3:
    uint64_t v12 = *(void *)(v0 + 192);
    uint64_t v14 = *(void *)(v0 + 144);
    uint64_t v13 = *(void *)(v0 + 152);
    uint64_t v15 = *(void *)(v12 + OBJC_IVAR____TtC7Journal20CanvasViewController_assetsGridView);
    long long v26 = *(_OWORD *)(v0 + 176);
    *(_OWORD *)(v0 + 40) = v26;
    int v16 = sub_100062E54((uint64_t *)(v0 + 16));
    (*(void (**)(uint64_t *, uint64_t))(*(void *)(v26 - 8) + 16))(v16, v14);
    uint64_t v17 = v15 + OBJC_IVAR____TtC7Journal14CanvasGridView_audioRecorder;
    swift_beginAccess();
    sub_100041190(v0 + 16, v17, &qword_100804048);
    swift_endAccess();
    sub_10001B220(v13, v0 + 56, (uint64_t *)&unk_100804050);
    uint64_t v18 = v15 + OBJC_IVAR____TtC7Journal14CanvasGridView_waveformProvider;
    swift_beginAccess();
    sub_100041190(v0 + 56, v18, (uint64_t *)&unk_100804050);
    swift_endAccess();
    uint64_t v19 = OBJC_IVAR____TtC7Journal20CanvasViewController_canvasIdleTracker;
    if (*(void *)(v12 + OBJC_IVAR____TtC7Journal20CanvasViewController_canvasIdleTracker))
    {
      swift_retain();
      sub_10023ED44();
      swift_release();
      if (*(void *)(v12 + v19))
      {
        swift_retain();
        sub_10023F010();
        swift_release();
      }
    }
    uint64_t v20 = *(void *)(v0 + 192);
    *(void *)(swift_task_alloc() + 16) = v20;
    sub_100010218((uint64_t *)&unk_10080CF10);
    withObservationTracking<A>(_:onChange:)();
    swift_task_dealloc();
    swift_task_dealloc();
    id v21 = *(uint64_t (**)(void))(v0 + 8);
    return v21();
  }
  id v24 = v23;
  char v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 240) = v25;
  *char v25 = v0;
  v25[1] = sub_100227D9C;
  return sub_100417B98((uint64_t)v24);
}

uint64_t sub_100227D9C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 232);
  uint64_t v3 = *(void *)(v1 + 224);
  return _swift_task_switch(sub_100227EBC, v3, v2);
}

uint64_t sub_100227EBC()
{
  uint64_t v1 = *(void **)(v0 + 160);
  swift_release();

  uint64_t v2 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 152);
  uint64_t v5 = *(void *)(v2 + OBJC_IVAR____TtC7Journal20CanvasViewController_assetsGridView);
  long long v13 = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 40) = v13;
  uint64_t v6 = sub_100062E54((uint64_t *)(v0 + 16));
  (*(void (**)(uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(v6, v4);
  uint64_t v7 = v5 + OBJC_IVAR____TtC7Journal14CanvasGridView_audioRecorder;
  swift_beginAccess();
  sub_100041190(v0 + 16, v7, &qword_100804048);
  swift_endAccess();
  sub_10001B220(v3, v0 + 56, (uint64_t *)&unk_100804050);
  uint64_t v8 = v5 + OBJC_IVAR____TtC7Journal14CanvasGridView_waveformProvider;
  swift_beginAccess();
  sub_100041190(v0 + 56, v8, (uint64_t *)&unk_100804050);
  swift_endAccess();
  uint64_t v9 = OBJC_IVAR____TtC7Journal20CanvasViewController_canvasIdleTracker;
  if (*(void *)(v2 + OBJC_IVAR____TtC7Journal20CanvasViewController_canvasIdleTracker))
  {
    swift_retain();
    sub_10023ED44();
    swift_release();
    if (*(void *)(v2 + v9))
    {
      swift_retain();
      sub_10023F010();
      swift_release();
    }
  }
  uint64_t v10 = *(void *)(v0 + 192);
  *(void *)(swift_task_alloc() + 16) = v10;
  sub_100010218((uint64_t *)&unk_10080CF10);
  withObservationTracking<A>(_:onChange:)();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1002280FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[5] = v7;
  v5[6] = v6;
  return _swift_task_switch(sub_100228194, v7, v6);
}

uint64_t sub_100228194()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  void *v1 = v0;
  v1[1] = sub_10022823C;
  uint64_t v2 = *(void *)(v0 + 24);
  return sub_1000E99A4(v2);
}

uint64_t sub_10022823C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_100193204, v3, v2);
}

uint64_t sub_10022835C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  v4[3] = type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  return _swift_task_switch(sub_1002283D8, 0, 0);
}

uint64_t sub_1002283D8()
{
  uint64_t v1 = (void *)v0[2];
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = v1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    id v6 = v1;
    uint64_t v7 = (void *)swift_task_alloc();
    v0[5] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_10022854C;
    return sub_10058DF1C(ObjectType, v3);
  }
  else
  {
    uint64_t v10 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
    uint64_t v9 = (void *)swift_task_alloc();
    v0[6] = v9;
    void *v9 = v0;
    v9[1] = sub_1002286F4;
    return v10();
  }
}

uint64_t sub_10022854C()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100228648, 0, 0);
}

uint64_t sub_100228648()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_1002286F4;
  return v3();
}

uint64_t sub_1002286F4()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100193204, v1, v0);
}

void sub_100228830(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    id v9 = a1;
    id v10 = a2;
    id v11 = [v3 presentedViewController];
    if (v11)
    {
      uint64_t v12 = v11;
      type metadata accessor for CanvasAudioPickerController();
      id v11 = (id)swift_dynamicCastClass();
      if (!v11)
      {

        id v11 = 0;
      }
    }
    BOOL v13 = v11 != 0;

    uint64_t v14 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 1, 1, v14);
    type metadata accessor for MainActor();
    id v15 = v9;
    id v16 = v10;
    id v17 = v3;
    uint64_t v18 = static MainActor.shared.getter();
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = v18;
    *(void *)(v19 + 24) = &protocol witness table for MainActor;
    *(void *)(v19 + 32) = v17;
    *(void *)(v19 + 40) = v16;
    *(void *)(v19 + 48) = v15;
    *(unsigned char *)(v19 + 56) = v13;
    sub_100328A60((uint64_t)v8, (uint64_t)&unk_100804018, v19);

    swift_release();
  }
  else
  {
    sub_100418450(a1);
  }
  id v20 = [self sharedApplication];
  id v21 = [v20 connectedScenes];
  sub_10001B284(0, (unint64_t *)&qword_10080CF00);
  sub_1000872E4();
  uint64_t v22 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v23 = sub_1003F1F90(v22);
  swift_bridgeObjectRelease();
  if (v23)
  {
    self;
    id v24 = (void *)swift_dynamicCastObjCClass();

    if (!v24)
    {
LABEL_11:
      id v20 = (id)v23;
      goto LABEL_12;
    }
    id v20 = (id)v23;
    if ([v24 activationState] == (id)2)
    {
      uint64_t v25 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v8, 1, 1, v25);
      type metadata accessor for MainActor();
      id v26 = v3;
      uint64_t v27 = static MainActor.shared.getter();
      uint64_t v28 = (void *)swift_allocObject();
      v28[2] = v27;
      v28[3] = &protocol witness table for MainActor;
      v28[4] = v26;
      sub_100328A60((uint64_t)v8, (uint64_t)&unk_100804010, (uint64_t)v28);
      swift_release();
      goto LABEL_11;
    }
  }
LABEL_12:
}

uint64_t sub_100228B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for Date();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v7;
  v4[8] = v6;
  return _swift_task_switch(sub_100228C68, v7, v6);
}

uint64_t sub_100228C68()
{
  uint64_t v1 = *(void *)(v0[2] + OBJC_IVAR____TtC7Journal20CanvasViewController_mindfulnessManager);
  v0[9] = v1;
  if (v1)
  {
    swift_retain();
    static Date.now.getter();
    uint64_t v2 = (void *)swift_task_alloc();
    v0[10] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_100228D9C;
    uint64_t v3 = v0[5];
    return sub_1003B7F8C(v3, 0);
  }
  else
  {
    swift_release();
    if (*(void *)(v0[2] + OBJC_IVAR____TtC7Journal20CanvasViewController_canvasIdleTracker))
    {
      swift_retain();
      sub_10023F278();
      swift_release();
    }
    swift_task_dealloc();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5();
  }
}

uint64_t sub_100228D9C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 40);
  uint64_t v3 = *(void *)(*v0 + 32);
  uint64_t v4 = *(void *)(*v0 + 24);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 64);
  uint64_t v6 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_100228F3C, v6, v5);
}

uint64_t sub_100228F3C()
{
  swift_release();
  if (*(void *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal20CanvasViewController_canvasIdleTracker))
  {
    swift_retain();
    sub_10023F278();
    swift_release();
  }
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100228FD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  void *v13 = v6;
  v13[1] = sub_100052588;
  return sub_1002278E4(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1002290A4(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  type metadata accessor for MainActor();
  id v7 = v1;
  id v8 = a1;
  uint64_t v9 = static MainActor.shared.getter();
  id v10 = (void *)swift_allocObject();
  v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  v10[4] = v7;
  v10[5] = v8;
  sub_100328A60((uint64_t)v5, (uint64_t)&unk_100804038, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_1002291D0(void *a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  type metadata accessor for MainActor();
  id v6 = a1;
  uint64_t v7 = static MainActor.shared.getter();
  id v8 = (void *)swift_allocObject();
  v8[2] = v7;
  v8[3] = &protocol witness table for MainActor;
  v8[4] = v6;
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_100804028, (uint64_t)v8);
  return swift_release();
}

void sub_1002292EC(uint64_t a1, int a2)
{
  int v34 = a2;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  __chkstk_darwin(v4);
  uint64_t v32 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_1007FABA8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218((uint64_t *)&unk_100804070);
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  id v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v33 = v2;
  if (*(void *)&v2[OBJC_IVAR____TtC7Journal20CanvasViewController_canvasIdleTracker])
  {
    swift_retain();
    sub_10023ED44();
    swift_release();
  }
  sub_10001B220(a1, (uint64_t)v12, &qword_1007FABA8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_10001457C((uint64_t)v12, &qword_1007FABA8);
    id v17 = v33;
  }
  else
  {
    uint64_t v18 = *(int *)(v13 + 48);
    uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v31(v16, v12, v4);
    int v30 = v12[v18];
    v16[v18] = v30;
    uint64_t v19 = type metadata accessor for TaskPriority();
    id v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
    uint64_t v29 = v9;
    v20(v9, 1, 1, v19);
    id v21 = v32;
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v32, v16, v4);
    type metadata accessor for MainActor();
    id v17 = v33;
    uint64_t v22 = v33;
    uint64_t v23 = static MainActor.shared.getter();
    unint64_t v24 = (*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v25 = v24 + v6;
    id v26 = (char *)swift_allocObject();
    *((void *)v26 + 2) = v23;
    *((void *)v26 + 3) = &protocol witness table for MainActor;
    *((void *)v26 + 4) = v22;
    v31(&v26[v24], v21, v4);
    v26[v25] = v30;
    sub_100328A60((uint64_t)v29, (uint64_t)&unk_10080CED0, (uint64_t)v26);
    swift_release();
    sub_10001457C((uint64_t)v16, (uint64_t *)&unk_100804070);
  }
  uint64_t v27 = *(void *)&v17[OBJC_IVAR____TtC7Journal20CanvasViewController_coordinator];
  uint64_t v28 = v17;
  sub_10007AB14(1, v27, v34 & 1, v28);
}

void sub_1002296BC(char a1, void *a2)
{
  if (a1)
  {
    type metadata accessor for JurassicAlertController();
    if (qword_1007F78C8 != -1) {
      swift_once();
    }
    uint64_t v3 = qword_1007F78D0;
    swift_bridgeObjectRetain();
    if (v3 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    NSString v5 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v6 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v4 message:v5 preferredStyle:1];

    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = a2;
    uint64_t v8 = qword_1007F78D8;
    id v17 = a2;
    if (v8 != -1) {
      swift_once();
    }
    swift_bridgeObjectRetain();
    swift_retain();
    NSString v9 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_10022A7E8;
    uint64_t v24 = v7;
    aBlock = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    id v21 = sub_10007453C;
    uint64_t v22 = &unk_10079FF58;
    uint64_t v10 = _Block_copy(&aBlock);
    swift_release();
    uint64_t v11 = self;
    id v12 = [v11 actionWithTitle:v9 style:0 handler:v10];
    _Block_release(v10);

    [v6 addAction:v12];
    if (qword_1007F78E0 != -1) {
      swift_once();
    }
    swift_retain();
    swift_bridgeObjectRetain();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    uint64_t v23 = sub_10022A7E8;
    uint64_t v24 = v7;
    aBlock = _NSConcreteStackBlock;
    uint64_t v20 = 1107296256;
    id v21 = sub_10007453C;
    uint64_t v22 = &unk_10079FF80;
    uint64_t v14 = _Block_copy(&aBlock);
    swift_release();
    id v15 = [v11 actionWithTitle:v13 style:1 handler:v14];
    _Block_release(v14);

    [v6 addAction:v15];
    [v17 presentViewController:v6 animated:1 completion:0];

    swift_release();
  }
  else
  {
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      id v18 = Strong;
      if (([Strong isFirstResponder] & 1) == 0
        && [v18 canBecomeFirstResponder])
      {
        [v18 becomeFirstResponder];
      }
    }
  }
}

void sub_100229B18(void *a1)
{
  if (![a1 style])
  {
    if (qword_1007F6E48 != -1) {
      swift_once();
    }
    [(id)qword_10083D3C0 setBool:1 forKey:@"ALWAYS_USE_MOMENT_DATE"];
  }
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v2 = Strong;
    if (([Strong isFirstResponder] & 1) == 0
      && ([v2 canBecomeFirstResponder] & 1) != 0)
    {
      [v2 becomeFirstResponder];
    }
  }
}

uint64_t sub_100229C28()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100229C60(void *a1)
{
  return sub_100226F68(a1);
}

uint64_t sub_100229C6C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100052588;
  return sub_10042D34C(a1, v4, v5, v7, v6);
}

uint64_t sub_100229D2C()
{
  return swift_deallocObject();
}

double sub_100229D3C(void *a1)
{
  double v2 = *(double *)(v1 + 16);
  [a1 maximumDetentValue];
  return v2 * v3;
}

double *sub_100229D74(unint64_t a1, unint64_t a2)
{
  uint64_t v3 = a1;
  uint64_t v27 = _swiftEmptyArrayStorage;
  if (a1 >> 62) {
    goto LABEL_39;
  }
  for (uint64_t i = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10); i; uint64_t i = _CocoaArrayWrapper.endIndex.getter())
  {
    unint64_t v5 = 0;
    unint64_t v6 = v3 & 0xC000000000000001;
    uint64_t v25 = v3 + 32;
    uint64_t v26 = v3 & 0xFFFFFFFFFFFFFF8;
    uint64_t v23 = i;
    unint64_t v24 = a2 & 0xC000000000000001;
    unint64_t v22 = v3 & 0xC000000000000001;
    while (1)
    {
      if (v6)
      {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else
      {
        if (v5 >= *(void *)(v26 + 16)) {
          goto LABEL_36;
        }
        id v7 = *(id *)(v25 + 8 * v5);
      }
      uint64_t v8 = v7;
      if (__OFADD__(v5++, 1)) {
        goto LABEL_37;
      }
      if (a2 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
        if (!v10) {
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v10 = *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10);
        swift_bridgeObjectRetain();
        if (!v10) {
          goto LABEL_16;
        }
      }
      id v11 = v24 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(a2 + 32);
      id v12 = v11;
      uint64_t v3 = _s5AssetCMa();
      char v13 = static NSObject.== infix(_:_:)();

      if ((v13 & 1) == 0) {
        break;
      }

      swift_bridgeObjectRelease();
LABEL_5:
      if (v5 == i) {
        return v27;
      }
    }
    if (v10 == 1)
    {
LABEL_16:
      swift_bridgeObjectRelease();
LABEL_17:
      uint64_t v3 = (uint64_t)&v27;
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized ContiguousArray._endMutation()();
      goto LABEL_5;
    }
    if (v24)
    {
      uint64_t v14 = 1;
      while (1)
      {
        specialized _ArrayBuffer._getElementSlowPath(_:)();
        uint64_t v15 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          break;
        }
        char v16 = static NSObject.== infix(_:_:)();
        swift_unknownObjectRelease();
        if (v16) {
          goto LABEL_29;
        }
        ++v14;
        if (v15 == v10) {
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    uint64_t v17 = 5;
    while (1)
    {
      uint64_t v18 = v17 - 3;
      if (__OFADD__(v17 - 4, 1)) {
        break;
      }
      id v19 = *(id *)(a2 + 8 * v17);
      char v20 = static NSObject.== infix(_:_:)();

      if (v20)
      {
LABEL_29:

        swift_bridgeObjectRelease();
        unint64_t v6 = v22;
        uint64_t i = v23;
        goto LABEL_5;
      }
      ++v17;
      if (v18 == v10)
      {
LABEL_28:
        swift_bridgeObjectRelease();
        unint64_t v6 = v22;
        uint64_t i = v23;
        goto LABEL_17;
      }
    }
LABEL_38:
    __break(1u);
LABEL_39:
    ;
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_10022A020()
{
  id v0 = [self standardUserDefaults];
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [v0 objectForKey:v1];

  if (v2)
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_1000685B8((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    if (swift_dynamicCast()) {
      return v4;
    }
  }
  else
  {
    sub_10001457C((uint64_t)v6, &qword_1007FAD50);
  }
  return 0;
}

uint64_t sub_10022A140(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100052588;
  return sub_1004190F0(a1, v4, v5, v7, v6);
}

uint64_t sub_10022A204(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_100228B74(a1, v4, v5, v6);
}

uint64_t sub_10022A2B8()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10022A308(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  char v9 = *(unsigned char *)(v1 + 56);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100052588;
  return sub_1004291D4(a1, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_10022A3E4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_10022835C(a1, v4, v5, v6);
}

uint64_t sub_10022A49C()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10022A4E4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100052588;
  return sub_1002280FC(a1, v4, v5, v7, v6);
}

uint64_t (*sub_10022A5A4())()
{
  return sub_1004518CC();
}

uint64_t sub_10022A5AC()
{
  return swift_deallocObject();
}

void sub_10022A5E4()
{
  sub_10042789C(*(void *)(v0 + 16));
}

uint64_t sub_10022A5EC()
{
  swift_unknownObjectRelease();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10022A63C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_100052588;
  return sub_10042794C(a1, v4, v5, v6, v7, v9, v8);
}

uint64_t sub_10022A710()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_10022A7E8(void *a1)
{
}

uint64_t sub_10022A7F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10022A800()
{
  return swift_release();
}

uint64_t sub_10022A808(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10022A870(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_10022A8D0(unsigned __int8 a1)
{
}

unint64_t sub_10022A8D8()
{
  unint64_t result = qword_1008040A0;
  if (!qword_1008040A0)
  {
    type metadata accessor for InfoKey(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008040A0);
  }
  return result;
}

id sub_10022A93C(uint64_t a1)
{
  id v1 = [(id)swift_getObjCClassFromMetadata() traitCollectionWithUserInterfaceStyle:a1];

  return v1;
}

uint64_t sub_10022A988()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1008040B0);
  sub_100026A54(v0, (uint64_t)qword_1008040B0);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10022AA7C(uint64_t a1, uint64_t a2)
{
  v2[10] = a1;
  v2[11] = a2;
  uint64_t v3 = sub_100010218((uint64_t *)&unk_100804220);
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  return _swift_task_switch(sub_10022AB40, 0, 0);
}

uint64_t sub_10022AB40()
{
  static Date.timeIntervalSinceReferenceDate.getter();
  double v2 = v1;
  id v3 = sub_100049F54();
  uint64_t v5 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v6 = *(void *)(v0 + 96);
  *(void *)(v0 + 16) = v3;
  *(void *)(v0 + 24) = v7;
  long long v17 = *(_OWORD *)(v0 + 80);
  Regex.init(_regexString:version:)();
  *(_OWORD *)(swift_task_alloc() + 16) = v17;
  sub_10022BBA0();
  sub_10022BBF4();
  sub_1000D3A90();
  RangeReplaceableCollection<>.replace<A, B, C>(_:maxReplacements:with:)();
  swift_task_dealloc();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(v4, v6);
  Regex.init(_regexString:version:)();
  _StringGuts.grow(_:)(19);
  uint64_t v9 = sub_10022BC48();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  v12._object = (void *)0x8000000100690A60;
  v12._countAndFlagsBits = 0xD000000000000011;
  String.append(_:)(v12);
  *(void *)(v0 + 32) = v9;
  *(void *)(v0 + 40) = v11;
  RangeReplaceableCollection<>.replace<A, B>(_:with:maxReplacements:)();
  swift_bridgeObjectRelease();
  v8(v4, v6);
  *(void *)(v0 + 48) = 0x3E6C6D74683CLL;
  *(void *)(v0 + 64) = 0xD000000000000011;
  *(void *)(v0 + 56) = 0xE600000000000000;
  *(void *)(v0 + 72) = 0x8000000100690A80;
  sub_10022C144();
  RangeReplaceableCollection<>.replace<A, B>(_:with:maxReplacements:)();
  uint64_t v13 = *(void *)(v0 + 16);
  uint64_t v14 = *(void *)(v0 + 24);
  sub_10022B520("ExportPackage.renderHTML executed in %ss", v2);
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return v15(v13, v14);
}

uint64_t sub_10022AE94@<X0>(uint64_t a1@<X2>, unint64_t *a2@<X8>)
{
  sub_100010218((uint64_t *)&unk_100804250);
  Regex.Match.output.getter();
  uint64_t v4 = static String._fromSubstring(_:)();
  uint64_t v6 = v5;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16) && (unint64_t v7 = sub_10001B5D0(v4, v6), (v8 & 1) != 0))
  {
    uint64_t v9 = (unint64_t *)(*(void *)(a1 + 56) + 16 * v7);
    unint64_t v11 = *v9;
    unint64_t v10 = v9[1];
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    Regex.Match.output.getter();
    char v13 = sub_10022C198(v15, v16, v17, v18, 0xD000000000000013, 0x80000001006926D0);
    uint64_t result = swift_bridgeObjectRelease();
    BOOL v14 = (v13 & 1) == 0;
    if (v13) {
      unint64_t v11 = 0xD000000000000022;
    }
    else {
      unint64_t v11 = 0;
    }
    if (v14) {
      unint64_t v10 = 0xE000000000000000;
    }
    else {
      unint64_t v10 = 0x80000001006926F0;
    }
  }
  *a2 = v11;
  a2[1] = v10;
  return result;
}

uint64_t type metadata accessor for HTMLUtilities()
{
  return self;
}

char *sub_10022AFFC()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal30PrintableHTMLContentController_webView;
  id v2 = objc_allocWithZone((Class)WKWebView);
  id v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  uint64_t v4 = &v3[OBJC_IVAR____TtC7Journal30PrintableHTMLContentController_continuation];
  uint64_t v5 = sub_100010218(&qword_100804210);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);

  v8.receiver = v3;
  v8.super_class = (Class)type metadata accessor for PrintableHTMLContentController();
  uint64_t v6 = (char *)[super init];
  [*(id *)&v6[OBJC_IVAR____TtC7Journal30PrintableHTMLContentController_webView] setNavigationDelegate:v6];
  return v6;
}

uint64_t sub_10022B114(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  v3[6] = type metadata accessor for MainActor();
  v3[7] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v3[8] = v5;
  v3[9] = v4;
  return _swift_task_switch(sub_10022B1B4, v5, v4);
}

uint64_t sub_10022B1B4()
{
  long long v8 = *(_OWORD *)(v0 + 24);
  static Date.timeIntervalSinceReferenceDate.getter();
  *(void *)(v0 + 80) = v1;
  uint64_t v2 = static MainActor.shared.getter();
  *(void *)(v0 + 88) = v2;
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 96) = v3;
  swift_unknownObjectWeakInit();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 104) = v4;
  *(void *)(v4 + 16) = v3;
  *(_OWORD *)(v4 + 24) = v8;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 112) = v5;
  uint64_t v6 = sub_10001B284(0, &qword_100804260);
  *uint64_t v5 = v0;
  v5[1] = sub_10022B320;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 16, v2, &protocol witness table for MainActor, 0xD000000000000026, 0x8000000100692720, sub_10022C248, v4, v6);
}

uint64_t sub_10022B320()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_10022B4A4, v3, v2);
}

uint64_t sub_10022B4A4()
{
  double v1 = v0[10];
  swift_release();
  uint64_t v2 = *((void *)v0 + 2);
  sub_10022B520("PrintableHTMLContentController.loadWebView executed in %ss", v1);
  uint64_t v3 = (uint64_t (*)(uint64_t))*((void *)v0 + 1);
  return v3(v2);
}

void sub_10022B520(const char *a1, double a2)
{
  if (qword_1007F6BE8 != -1) {
    swift_once();
  }
  uint64_t v4 = type metadata accessor for Logger();
  sub_100026A54(v4, (uint64_t)qword_1008040B0);
  oslog = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(oslog, v5))
  {
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315138;
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1006D6280;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    *(void *)(v7 + 56) = &type metadata for Double;
    *(void *)(v7 + 64) = &protocol witness table for Double;
    *(CFAbsoluteTime *)(v7 + 32) = Current - a2;
    uint64_t v9 = String.init(format:_:)();
    sub_10011EA98(v9, v10, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, oslog, v5, a1, v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
}

void sub_10022B730(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_100804268);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v20[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = (void *)Strong;
    uint64_t v7 = sub_100010218(&qword_100804210);
    uint64_t v8 = *(void *)(v7 - 8);
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(v8 + 16))(v4, a1, v7);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(v4, 0, 1, v7);
    uint64_t v9 = (uint64_t)v6 + OBJC_IVAR____TtC7Journal30PrintableHTMLContentController_continuation;
    swift_beginAccess();
    sub_10022C254((uint64_t)v4, v9);
    swift_endAccess();
  }
  swift_beginAccess();
  uint64_t v10 = swift_unknownObjectWeakLoadStrong();
  if (v10)
  {
    unint64_t v11 = (void *)v10;
    id v12 = *(id *)(v10 + OBJC_IVAR____TtC7Journal30PrintableHTMLContentController_webView);

    URL._bridgeToObjectiveC()(v13);
    unint64_t v15 = v14;
    URL._bridgeToObjectiveC()(v16);
    uint64_t v18 = v17;
    id v19 = [v12 loadFileURL:v15 allowingReadAccessToURL:v17];
  }
}

id sub_10022B9B0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PrintableHTMLContentController();
  return [super dealloc];
}

uint64_t sub_10022BA34()
{
  return type metadata accessor for PrintableHTMLContentController();
}

uint64_t type metadata accessor for PrintableHTMLContentController()
{
  uint64_t result = qword_1008041F0;
  if (!qword_1008041F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10022BA88()
{
  sub_10022BB28();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10022BB28()
{
  if (!qword_100804208)
  {
    sub_100014440(&qword_100804210);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100804208);
    }
  }
}

uint64_t sub_10022BB84@<X0>(unint64_t *a1@<X8>)
{
  return sub_10022AE94(*(void *)(v1 + 24), a1);
}

unint64_t sub_10022BBA0()
{
  unint64_t result = qword_100811220;
  if (!qword_100811220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100811220);
  }
  return result;
}

unint64_t sub_10022BBF4()
{
  unint64_t result = qword_100804230;
  if (!qword_100804230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100804230);
  }
  return result;
}

uint64_t sub_10022BC48()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v51 = v0;
  uint64_t v52 = v1;
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = 0;
  unint64_t v54 = 0xE000000000000000;
  _StringGuts.grow(_:)(7178);
  v4._countAndFlagsBits = 0xD0000000000007F0;
  v4._object = (void *)0x8000000100690AA0;
  String.append(_:)(v4);
  os_log_type_t v5 = self;
  id v6 = [v5 tertiarySystemFillColor];
  uint64_t v7 = self;
  id v8 = [v7 traitCollectionWithUserInterfaceStyle:1];
  id v9 = [v6 resolvedColorWithTraitCollection:v8];

  uint64_t v10 = sub_100256794();
  id v12 = v11;

  v13._countAndFlagsBits = v10;
  v13._object = v12;
  String.append(_:)(v13);
  swift_bridgeObjectRelease();
  v14._object = (void *)0x80000001006912A0;
  v14._countAndFlagsBits = 0xD00000000000129FLL;
  String.append(_:)(v14);
  id v15 = [v5 blackColor];
  id v16 = [v15 colorWithAlphaComponent:0.6];

  uint64_t v17 = sub_100256794();
  id v19 = v18;

  v20._countAndFlagsBits = v17;
  v20._object = v19;
  String.append(_:)(v20);
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = 0xD00000000000005FLL;
  v21._object = (void *)0x8000000100692540;
  String.append(_:)(v21);
  id v22 = [v5 labelColor];
  id v23 = [v7 traitCollectionWithUserInterfaceStyle:1];
  id v24 = [v22 resolvedColorWithTraitCollection:v23];

  id v25 = [v24 colorWithAlphaComponent:0.6];
  uint64_t v26 = sub_100256794();
  uint64_t v28 = v27;

  v29._countAndFlagsBits = v26;
  v29._object = v28;
  String.append(_:)(v29);
  swift_bridgeObjectRelease();
  v30._countAndFlagsBits = 0xD000000000000048;
  v30._object = (void *)0x80000001006925A0;
  String.append(_:)(v30);
  id v31 = [v5 secondaryLabelColor];
  id v32 = [v7 traitCollectionWithUserInterfaceStyle:1];
  id v33 = [v31 resolvedColorWithTraitCollection:v32];

  id v34 = [v33 colorWithAlphaComponent:0.4];
  uint64_t v35 = sub_100256794();
  double v37 = v36;

  v38._countAndFlagsBits = v35;
  v38._object = v37;
  String.append(_:)(v38);
  swift_bridgeObjectRelease();
  v39._object = (void *)0x80000001006925F0;
  v39._countAndFlagsBits = 0xD000000000000042;
  String.append(_:)(v39);
  sub_10001B284(0, (unint64_t *)&qword_1007FC140);
  if (qword_1007F7F20 != -1) {
    swift_once();
  }
  uint64_t v40 = v51;
  uint64_t v41 = sub_100026A54(v51, (uint64_t)qword_10083EE80);
  (*(void (**)(char *, uint64_t, uint64_t))(v52 + 16))(v3, v41, v40);
  id v42 = (void *)UIColor.init(resource:)();
  id v43 = [v7 traitCollectionWithUserInterfaceStyle:1];
  id v44 = [v42 resolvedColorWithTraitCollection:v43];

  uint64_t v45 = sub_100256794();
  unint64_t v47 = v46;

  v48._countAndFlagsBits = v45;
  v48._object = v47;
  String.append(_:)(v48);
  swift_bridgeObjectRelease();
  v49._countAndFlagsBits = 0xD000000000000088;
  v49._object = (void *)0x8000000100692640;
  String.append(_:)(v49);
  return v53;
}

unint64_t sub_10022C144()
{
  unint64_t result = qword_100804240;
  if (!qword_100804240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100804240);
  }
  return result;
}

uint64_t sub_10022C198(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0) {
    uint64_t v6 = HIBYTE(a6) & 0xF;
  }
  else {
    uint64_t v6 = a5 & 0xFFFFFFFFFFFFLL;
  }
  if (a3 == a5 && a4 == a6 && !(a1 >> 16) && a2 >> 16 == v6) {
    return 1;
  }
  else {
    return _stringCompareInternal(_:_:_:_:expecting:)() & 1;
  }
}

uint64_t sub_10022C210()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10022C248(uint64_t a1)
{
}

uint64_t sub_10022C254(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100804268);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10022C2BC(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_100804210);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100804268);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  id v12 = (char *)v16 - v11;
  uint64_t v13 = v1 + OBJC_IVAR____TtC7Journal30PrintableHTMLContentController_continuation;
  swift_beginAccess();
  sub_10022C4E0(v13, (uint64_t)v12);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v3))
  {
    sub_10022C548((uint64_t)v12);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v12, v3);
    sub_10022C548((uint64_t)v12);
    v16[0] = a1;
    id v14 = a1;
    CheckedContinuation.resume(returning:)();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
  swift_beginAccess();
  sub_10022C254((uint64_t)v9, v13);
  return swift_endAccess();
}

uint64_t sub_10022C4E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100804268);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10022C548(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_100804268);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10022C5A8(char a1)
{
  *(void *)(v2 + 16) = v1;
  *(unsigned char *)(v2 + 88) = a1;
  *(void *)(v2 + 24) = type metadata accessor for MainActor();
  *(void *)(v2 + 32) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v2 + 40) = v4;
  *(void *)(v2 + 48) = v3;
  return _swift_task_switch(sub_10022C648, v4, v3);
}

uint64_t sub_10022C648()
{
  char v1 = *(unsigned char *)(v0 + 88);
  uint64_t v2 = static MainActor.shared.getter();
  *(void *)(v0 + 56) = v2;
  uint64_t v3 = swift_allocObject();
  *(void *)(v0 + 64) = v3;
  swift_unknownObjectWeakInit();
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *(void *)(v4 + 16) = v3;
  *(unsigned char *)(v4 + 24) = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_10022C77C;
  return withCheckedContinuation<A>(isolation:function:_:)(v5, v2, &protocol witness table for MainActor, 0xD000000000000017, 0x8000000100692750, sub_10022CB24, v4, (char *)&type metadata for () + 8);
}

uint64_t sub_10022C77C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_100193204, v3, v2);
}

uint64_t sub_10022C900()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10022C938(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v5 = sub_100010218(&qword_1007FA5C0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  __chkstk_darwin(v5);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v9 = (void *)Strong;
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
    unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v11 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v11 + v10, (char *)&aBlock[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
    aBlock[4] = sub_100052058;
    void aBlock[5] = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    aBlock[3] = &unk_1007A0020;
    id v12 = _Block_copy(aBlock);
    swift_release();
    [v9 dismissViewControllerAnimated:a3 & 1 completion:v12];
    _Block_release(v12);
  }
  else
  {
    CheckedContinuation.resume(returning:)();
  }
}

void sub_10022CB24(uint64_t a1)
{
  sub_10022C938(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_10022CB30()
{
  uint64_t v1 = sub_100010218(&qword_1007FA5C0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_10022CBC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10022CBD4()
{
  return swift_release();
}

uint64_t sub_10022CBDC(char *a1, char *a2)
{
  return sub_10017D0C8(*a1, *a2);
}

Swift::Int sub_10022CBE8()
{
  return Hasher._finalize()();
}

uint64_t sub_10022CC70()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10022CCE4()
{
  return Hasher._finalize()();
}

uint64_t sub_10022CD68@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100793B00, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_10022CDC8(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x647261646E617473;
  if (*v1) {
    unint64_t v2 = 0xD000000000000019;
  }
  unint64_t v3 = 0x80000001006857D0;
  if (!*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

id sub_10022CF40()
{
  return sub_10022D644(type metadata accessor for SettingsHeaderView);
}

uint64_t type metadata accessor for SettingsHeaderView()
{
  return self;
}

void sub_10022D134()
{
  uint64_t v1 = v0;
  unint64_t v2 = *(void **)&v0[OBJC_IVAR____TtC7Journal18SettingsFooterView_footerLabel];
  [v1 addSubview:v2];
  if (qword_1007F72F8 != -1) {
    swift_once();
  }
  double v3 = *(double *)&qword_10083D908;
  id v4 = [v2 superview];
  if (v4)
  {
    char v5 = v4;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v2 leadingAnchor];
    id v7 = [v5 leadingAnchor];
    id v8 = [v6 constraintEqualToAnchor:v7];

    [v8 setConstant:v3];
    if (v8)
    {
      id v9 = v8;
      [v9 setActive:1];
    }
  }
  double v10 = *(double *)&qword_10083D908;
  id v11 = [v2 superview];
  if (v11)
  {
    id v12 = v11;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v13 = [v2 trailingAnchor];
    id v14 = [v12 trailingAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    [v15 setConstant:-v10];
    if (v15)
    {
      id v16 = v15;
      [v16 setActive:1];
    }
  }
  id v17 = [v2 superview];
  if (v17)
  {
    uint64_t v18 = v17;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v19 = [v2 topAnchor];
    id v20 = [v18 topAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20];

    [v21 setConstant:8.0];
    if (v21)
    {
      id v22 = v21;
      [v22 setActive:1];
    }
  }
  id v23 = sub_1001DD438(0, 1, 7.0);
}

id sub_10022D43C()
{
  return sub_10022D644(type metadata accessor for SettingsFooterView);
}

uint64_t type metadata accessor for SettingsFooterView()
{
  return self;
}

id sub_10022D488(double a1, double a2, double a3, double a4)
{
  v12.receiver = v4;
  v12.super_class = (Class)type metadata accessor for SettingsHeaderFooterLabel();
  [super initWithFrame:a1, a2, a3, a4];
  [v9 setNumberOfLines:0];
  [v9 setLineBreakMode:0];
  if (qword_1007F7290 != -1) {
    swift_once();
  }
  [v9 setFont:qword_10083D858];
  id v10 = [self secondaryLabelColor];
  [v9 setTextColor:v10];

  return v9;
}

id sub_10022D62C()
{
  return sub_10022D644(type metadata accessor for SettingsHeaderFooterLabel);
}

id sub_10022D644(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for SettingsHeaderFooterLabel()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for HeaderType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10022D76CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HeaderType()
{
  return &type metadata for HeaderType;
}

unint64_t sub_10022D7A8()
{
  unint64_t result = qword_100804310;
  if (!qword_100804310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100804310);
  }
  return result;
}

__n128 sub_10022D7FC@<Q0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t ObjectType = swift_getObjectType();
  v12.receiver = v2;
  v12.super_class = (Class)type metadata accessor for MosaicLayout.Attributes();
  [super copyWithZone:a1];
  _bridgeAnyObjectToAny(_:)();
  swift_unknownObjectRelease();
  swift_dynamicCast();
  uint64_t v6 = v11 + OBJC_IVAR____TtCC7Journal12MosaicLayout10Attributes_cornerRadii;
  __n128 result = *(__n128 *)&v2[OBJC_IVAR____TtCC7Journal12MosaicLayout10Attributes_cornerRadii];
  long long v8 = *(_OWORD *)&v2[OBJC_IVAR____TtCC7Journal12MosaicLayout10Attributes_cornerRadii + 16];
  long long v9 = *(_OWORD *)&v2[OBJC_IVAR____TtCC7Journal12MosaicLayout10Attributes_cornerRadii + 32];
  long long v10 = *(_OWORD *)&v2[OBJC_IVAR____TtCC7Journal12MosaicLayout10Attributes_cornerRadii + 48];
  *(__n128 *)uint64_t v6 = result;
  *(_OWORD *)(v6 + 16) = v8;
  *(_OWORD *)(v6 + 32) = v9;
  *(_OWORD *)(v6 + 48) = v10;
  a2[3] = ObjectType;
  *a2 = v11;
  return result;
}

uint64_t sub_10022D920(uint64_t a1)
{
  swift_getObjectType();
  sub_1001C71EC(a1, (uint64_t)&v21);
  uint64_t v3 = *((void *)&v22 + 1);
  if (*((void *)&v22 + 1))
  {
    unsigned int v4 = sub_10002E0BC(&v21, *((uint64_t *)&v22 + 1));
    uint64_t v5 = *(void *)(v3 - 8);
    __n128 v6 = __chkstk_darwin(v4);
    long long v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v5 + 16))(v8, v6);
    uint64_t v9 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v3);
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v21);
  }
  else
  {
    uint64_t v9 = 0;
  }
  long long v10 = (objc_class *)type metadata accessor for MosaicLayout.Attributes();
  v25.receiver = v1;
  v25.super_class = v10;
  unsigned int v11 = [super isEqual:v9];
  swift_unknownObjectRelease();
  if (v11)
  {
    sub_1001C71EC(a1, (uint64_t)&v21);
    if (*((void *)&v22 + 1))
    {
      if (swift_dynamicCast())
      {
        objc_super v12 = *(void **)&v20[0];
        long long v13 = *(_OWORD *)(*(void *)&v20[0] + OBJC_IVAR____TtCC7Journal12MosaicLayout10Attributes_cornerRadii + 16);
        long long v14 = *(_OWORD *)(*(void *)&v20[0] + OBJC_IVAR____TtCC7Journal12MosaicLayout10Attributes_cornerRadii + 32);
        long long v15 = *(_OWORD *)(*(void *)&v20[0] + OBJC_IVAR____TtCC7Journal12MosaicLayout10Attributes_cornerRadii + 48);
        long long v21 = *(_OWORD *)(*(void *)&v20[0] + OBJC_IVAR____TtCC7Journal12MosaicLayout10Attributes_cornerRadii);
        long long v22 = v13;
        long long v23 = v14;
        long long v24 = v15;
        long long v16 = *(_OWORD *)&v1[OBJC_IVAR____TtCC7Journal12MosaicLayout10Attributes_cornerRadii + 16];
        v20[0] = *(_OWORD *)&v1[OBJC_IVAR____TtCC7Journal12MosaicLayout10Attributes_cornerRadii];
        v20[1] = v16;
        long long v17 = *(_OWORD *)&v1[OBJC_IVAR____TtCC7Journal12MosaicLayout10Attributes_cornerRadii + 48];
        v20[2] = *(_OWORD *)&v1[OBJC_IVAR____TtCC7Journal12MosaicLayout10Attributes_cornerRadii + 32];
        v20[3] = v17;
        char v18 = CACornerRadiiEqualToRadii();

        if (v18) {
          return 1;
        }
      }
    }
    else
    {
      sub_10001B418((uint64_t)&v21);
    }
  }
  return 0;
}

id sub_10022DBEC()
{
  return sub_1002314C0(type metadata accessor for MosaicLayout.Attributes);
}

void sub_10022DC2C()
{
  v486.receiver = v0;
  v486.super_class = (Class)type metadata accessor for MosaicLayout();
  [super prepareLayout];
  id v1 = [v0 collectionView];
  if (v1)
  {
    unint64_t v2 = v1;
    uint64_t v3 = &v0[OBJC_IVAR____TtC7Journal12MosaicLayout_cachedAttributes];
    swift_beginAccess();
    *(void *)uint64_t v3 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRelease();
    [v2 bounds];
    CGFloat Width = CGRectGetWidth(v487);
    uint64_t v5 = &v0[OBJC_IVAR____TtC7Journal12MosaicLayout_contentBounds];
    *(void *)uint64_t v5 = 0;
    *((void *)v5 + 1) = 0;
    *((CGFloat *)v5 + 2) = Width;
    *((void *)v5 + 3) = 0;
    if ((uint64_t)[v2 numberOfSections] >= 1)
    {
      uint64_t v6 = (uint64_t)[v2 numberOfItemsInSection:0];
      [v2 bounds];
      double v477 = v7;
      if (qword_1007F7380 != -1) {
        swift_once();
      }
      double v8 = (v477 - (*(double *)&qword_10083D990 + *(double *)&qword_10083D990)) * 0.5;
      if (qword_1007F7390 != -1) {
        swift_once();
      }
      double v9 = v8 + *(double *)&qword_10083D9A0;
      if (v6 > 5) {
        double v9 = v9 + v9;
      }
      double v476 = v9;
      if (v6 == 1)
      {
        switch(v0[OBJC_IVAR____TtC7Journal12MosaicLayout_sizeType])
        {
          case 1:
            swift_bridgeObjectRelease();
            goto LABEL_13;
          default:
            char v10 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v10) {
LABEL_13:
            }
              double v476 = v476 * 0.5;
            break;
        }
      }
      uint64_t v11 = swift_allocObject();
      *(void *)(v11 + 16) = 0;
      objc_super v12 = (uint64_t *)(v11 + 16);
      long long v13 = (double *)&v0[OBJC_IVAR____TtC7Journal12MosaicLayout_outerTopCornerRadius];
      double v474 = 4.0;
      double v475 = 4.0;
      double v473 = 4.0;
      if ((v0[OBJC_IVAR____TtC7Journal12MosaicLayout_outerTopCornerRadius + 16] & 1) == 0)
      {
        double v473 = *v13;
        double v474 = v13[1];
      }
      long long v14 = (double *)&v0[OBJC_IVAR____TtC7Journal12MosaicLayout_outerBottomCornerRadius];
      double v472 = 4.0;
      if ((v0[OBJC_IVAR____TtC7Journal12MosaicLayout_outerBottomCornerRadius + 16] & 1) == 0)
      {
        double v475 = v14[1];
        double v472 = *v14;
      }
      uint64_t v15 = OBJC_IVAR____TtC7Journal12MosaicLayout_isExpanded;
      swift_beginAccess();
      while (*v12 < v6)
      {
        if (v6 != 1)
        {
          switch(v6)
          {
            case 2:
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              double v51 = v482;
              double v52 = v483;
              double v53 = v484;
              double v54 = v485;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              sub_100230564(1, 1, 0, 0, v11, (uint64_t)v0, v478, v479, v480, v481, v472, v475, 4.0, 4.0, v473, v474);
              double v211 = v473;
              double v212 = v474;
              double v40 = 4.0;
              double v41 = 4.0;
              CGFloat v42 = v51;
              CGFloat v43 = v52;
              CGFloat v44 = v53;
              CGFloat v45 = v54;
              char v46 = 0;
              char v47 = 0;
              double v48 = v472;
              double v49 = v475;
              goto LABEL_29;
            case 3:
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v55 = v482;
              CGFloat v56 = v483;
              CGFloat v57 = v484;
              CGFloat v58 = v485;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v59 = v478;
              CGFloat v60 = v479;
              CGFloat v61 = v480;
              CGFloat v62 = v481;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v55, v56, v57, v58);
              CGFloat v63 = v480;
              CGFloat v378 = v479;
              CGFloat v394 = v478;
              CGFloat v64 = v481;
              double v442 = v483;
              double v458 = v482;
              double v410 = v485;
              double v426 = v484;
              sub_100230564(1, 1, 0, 0, v11, (uint64_t)v0, v59, v60, v61, v62, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 1, 0, v11, (uint64_t)v0, v394, v378, v63, v64, v472, v475, 4.0, 4.0, v473, v474);
              double v211 = v473;
              double v212 = v474;
              double v40 = 4.0;
              double v41 = 4.0;
              CGFloat v43 = v442;
              CGFloat v42 = v458;
              CGFloat v45 = v410;
              CGFloat v44 = v426;
              char v46 = 0;
              char v47 = 0;
              double v48 = v472;
              double v49 = v475;
              goto LABEL_25;
            case 4:
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v65 = v482;
              CGFloat v66 = v483;
              CGFloat v67 = v484;
              CGFloat v68 = v485;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v69 = v478;
              CGFloat v70 = v479;
              double v71 = v480;
              CGFloat v72 = v481;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v65, v66, v67, v68);
              CGFloat v73 = v480;
              CGFloat v316 = v479;
              CGFloat v332 = v478;
              CGFloat v74 = v481;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v379 = v479;
              CGFloat v395 = v478;
              CGFloat v348 = v481;
              CGFloat v363 = v480;
              double v443 = v483;
              double v459 = v482;
              double v411 = v485;
              double v427 = v484;
              CGFloat v75 = v71;
              double v31 = v475;
              sub_100230564(1, 1, 0, 0, v11, (uint64_t)v0, v69, v70, v75, v72, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 1, 0, v11, (uint64_t)v0, v332, v316, v73, v74, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v395, v379, v363, v348, v472, v475, 4.0, 4.0, v473, v474);
              double v211 = v473;
              double v212 = v474;
              double v40 = 4.0;
              double v41 = 4.0;
              CGFloat v43 = v443;
              CGFloat v42 = v459;
              CGFloat v45 = v411;
              CGFloat v44 = v427;
              char v46 = 0;
              char v47 = 0;
              double v48 = v472;
              goto LABEL_24;
            case 5:
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v333 = v478;
              CGFloat v301 = v479;
              CGFloat v273 = v480;
              CGFloat v247 = v481;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v76 = v482;
              CGFloat v77 = v483;
              CGFloat v78 = v484;
              CGFloat v79 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v80 = v478;
              CGFloat v81 = v479;
              CGFloat v82 = v480;
              CGFloat v83 = v481;
              CGFloat v317 = v482;
              CGFloat v286 = v483;
              CGFloat v260 = v484;
              CGFloat v234 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v76, v77, v78, v79);
              CGFloat v380 = v479;
              CGFloat v396 = v478;
              CGFloat v349 = v481;
              CGFloat v364 = v480;
              double v444 = v483;
              double v460 = v482;
              double v412 = v485;
              double v428 = v484;
              sub_100230564(1, 1, 0, 0, v11, (uint64_t)v0, v333, v301, v273, v247, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v80, v81, v82, v83, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v317, v286, v260, v234, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 1, 0, v11, (uint64_t)v0, v396, v380, v364, v349, v472, v475, 4.0, 4.0, v473, v474);
              double v211 = v473;
              double v212 = v474;
              double v40 = 4.0;
              double v41 = 4.0;
              CGFloat v43 = v444;
              CGFloat v42 = v460;
              CGFloat v45 = v412;
              CGFloat v44 = v428;
              char v46 = 0;
              char v47 = 0;
              double v48 = v472;
              double v49 = v475;
              goto LABEL_25;
            case 6:
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              double v445 = v483;
              double v461 = v482;
              double v413 = v485;
              double v429 = v484;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v274 = v478;
              CGFloat v248 = v479;
              CGFloat v225 = v480;
              CGFloat v214 = v481;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v84 = v482;
              CGFloat v85 = v483;
              CGFloat v86 = v484;
              CGFloat v87 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v88 = v478;
              CGFloat v89 = v479;
              CGFloat v90 = v480;
              CGFloat v91 = v481;
              CGFloat v261 = v482;
              CGFloat v235 = v483;
              CGFloat v217 = v484;
              CGFloat v213 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v84, v85, v86, v87);
              CGFloat v318 = v479;
              CGFloat v334 = v478;
              CGFloat v287 = v481;
              CGFloat v302 = v480;
              CGFloat v381 = v483;
              CGFloat v397 = v482;
              CGFloat v350 = v485;
              CGFloat v365 = v484;
              sub_100230564(1, (v0[v15] & 1) == 0, 0, 0, v11, (uint64_t)v0, v274, v248, v225, v214, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v88, v89, v90, v91, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v261, v235, v217, v213, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 1, 0, v11, (uint64_t)v0, v334, v318, v302, v287, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, (v0[v15] & 1) == 0, v11, (uint64_t)v0, v397, v381, v365, v350, v472, v475, 4.0, 4.0, v473, v474);
              double v211 = v473;
              double v212 = v474;
              double v40 = 4.0;
              double v41 = 4.0;
              CGFloat v43 = v445;
              CGFloat v42 = v461;
              CGFloat v45 = v413;
              CGFloat v44 = v429;
              char v46 = 0;
              char v47 = 1;
              double v48 = v472;
              double v49 = v475;
              goto LABEL_25;
            case 7:
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v446 = v483;
              CGFloat v462 = v482;
              CGFloat v414 = v485;
              CGFloat v430 = v484;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              double v92 = v478;
              double v93 = v479;
              CGFloat v303 = v480;
              CGFloat v275 = v481;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v94 = v482;
              CGFloat v95 = v483;
              CGFloat v96 = v484;
              CGFloat v97 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v236 = v479;
              CGFloat v249 = v478;
              CGFloat v218 = v481;
              CGFloat v226 = v480;
              CGFloat v319 = v483;
              CGFloat v335 = v482;
              CGFloat v288 = v484;
              CGFloat v262 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v94, v95, v96, v97);
              CGFloat v382 = v479;
              CGFloat v398 = v478;
              CGFloat v98 = v482;
              CGFloat v351 = v481;
              CGFloat v366 = v480;
              CGFloat v99 = v483;
              CGFloat v100 = v484;
              CGFloat v101 = v485;
              double v103 = v473;
              double v102 = v474;
              CGFloat v104 = v92;
              CGFloat v105 = v93;
              double v30 = v472;
              double v31 = v475;
              sub_100230564(1, (v0[v15] & 1) == 0, 0, 0, v11, (uint64_t)v0, v104, v105, v303, v275, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v249, v236, v226, v218, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v335, v319, v288, v262, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 1, 0, v11, (uint64_t)v0, v398, v382, v366, v351, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, (v0[v15] & 1) == 0, v11, (uint64_t)v0, v98, v99, v100, v101, v472, v475, 4.0, 4.0, v473, v474);
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v462, v446, v430, v414);
              double v106 = v482;
              double v107 = v483;
              double v108 = v484;
              double v109 = v485;
              sub_100230564(0, 1, 0, 0, v11, (uint64_t)v0, v478, v479, v480, v481, v472, v475, 4.0, 4.0, v473, v474);
              goto LABEL_40;
            case 8:
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v447 = v483;
              CGFloat v463 = v482;
              CGFloat v415 = v485;
              CGFloat v431 = v484;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v110 = v478;
              CGFloat v289 = v479;
              CGFloat v263 = v480;
              CGFloat v237 = v481;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v111 = v482;
              CGFloat v112 = v483;
              CGFloat v113 = v484;
              CGFloat v114 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v115 = v480;
              CGFloat v215 = v479;
              CGFloat v219 = v478;
              CGFloat v116 = v481;
              CGFloat v304 = v482;
              CGFloat v276 = v483;
              CGFloat v250 = v484;
              CGFloat v227 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v111, v112, v113, v114);
              CGFloat v352 = v479;
              CGFloat v367 = v478;
              CGFloat v117 = v482;
              CGFloat v320 = v481;
              CGFloat v336 = v480;
              CGFloat v118 = v483;
              CGFloat v383 = v485;
              CGFloat v399 = v484;
              sub_100230564(1, (v0[v15] & 1) == 0, 0, 0, v11, (uint64_t)v0, v110, v289, v263, v237, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v219, v215, v115, v116, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v304, v276, v250, v227, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 1, 0, v11, (uint64_t)v0, v367, v352, v336, v320, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, (v0[v15] & 1) == 0, v11, (uint64_t)v0, v117, v118, v399, v383, v472, v475, 4.0, 4.0, v473, v474);
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v463, v447, v431, v415);
              double v464 = v482;
              double v448 = v483;
              double v432 = v484;
              double v416 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v119 = v482;
              CGFloat v120 = v483;
              CGFloat v121 = v484;
              CGFloat v122 = v485;
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v478, v479, v480, v481, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 1, 0, 0, v11, (uint64_t)v0, v119, v120, v121, v122, v472, v475, 4.0, 4.0, v473, v474);
              double v211 = v473;
              double v212 = v474;
              double v40 = 4.0;
              double v41 = 4.0;
              CGFloat v43 = v448;
              CGFloat v42 = v464;
              CGFloat v45 = v416;
              CGFloat v44 = v432;
              char v46 = 0;
              char v47 = 0;
              double v48 = v472;
              double v49 = v475;
              goto LABEL_25;
            case 9:
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v449 = v483;
              CGFloat v465 = v482;
              CGFloat v417 = v485;
              CGFloat v433 = v484;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              double v123 = v478;
              double v124 = v479;
              CGFloat v305 = v480;
              CGFloat v277 = v481;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v125 = v482;
              CGFloat v126 = v483;
              CGFloat v127 = v484;
              CGFloat v128 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v238 = v479;
              CGFloat v251 = v478;
              CGFloat v220 = v481;
              CGFloat v228 = v480;
              CGFloat v321 = v483;
              CGFloat v337 = v482;
              CGFloat v290 = v484;
              CGFloat v264 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v125, v126, v127, v128);
              CGFloat v384 = v479;
              CGFloat v400 = v478;
              CGFloat v129 = v482;
              CGFloat v353 = v481;
              CGFloat v368 = v480;
              CGFloat v130 = v483;
              CGFloat v131 = v484;
              CGFloat v132 = v485;
              double v27 = v473;
              double v26 = v474;
              CGFloat v133 = v123;
              CGFloat v134 = v124;
              double v30 = v472;
              double v31 = v475;
              sub_100230564(1, (v0[v15] & 1) == 0, 0, 0, v11, (uint64_t)v0, v133, v134, v305, v277, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v251, v238, v228, v220, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v337, v321, v290, v264, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 1, 0, v11, (uint64_t)v0, v400, v384, v368, v353, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, (v0[v15] & 1) == 0, v11, (uint64_t)v0, v129, v130, v131, v132, v472, v475, 4.0, 4.0, v473, v474);
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v465, v449, v433, v417);
              double v457 = v482;
              double v441 = v483;
              double v425 = v484;
              double v409 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v135 = v478;
              CGFloat v136 = v479;
              CGFloat v137 = v480;
              CGFloat v138 = v481;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v338 = v478;
              CGFloat v322 = v479;
              CGFloat v306 = v480;
              CGFloat v291 = v481;
              CGFloat v393 = v482;
              CGFloat v377 = v483;
              CGFloat v362 = v484;
              CGFloat v347 = v485;
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v135, v136, v137, v138, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 1, 0, 0, v11, (uint64_t)v0, v338, v322, v306, v291, v472, v475, 4.0, 4.0, v473, v474);
              goto LABEL_21;
            case 10:
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v440 = v483;
              CGFloat v456 = v482;
              CGFloat v408 = v485;
              CGFloat v424 = v484;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              double v16 = v478;
              double v17 = v479;
              CGFloat v299 = v480;
              CGFloat v271 = v481;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v18 = v482;
              CGFloat v19 = v483;
              CGFloat v20 = v484;
              CGFloat v21 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v232 = v479;
              CGFloat v245 = v478;
              CGFloat v216 = v481;
              CGFloat v224 = v480;
              CGFloat v314 = v483;
              CGFloat v330 = v482;
              CGFloat v284 = v484;
              CGFloat v258 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v18, v19, v20, v21);
              CGFloat v376 = v479;
              CGFloat v392 = v478;
              CGFloat v22 = v482;
              CGFloat v346 = v481;
              CGFloat v361 = v480;
              CGFloat v23 = v483;
              CGFloat v24 = v484;
              CGFloat v25 = v485;
              double v27 = v473;
              double v26 = v474;
              CGFloat v28 = v16;
              CGFloat v29 = v17;
              double v30 = v472;
              double v31 = v475;
              sub_100230564(1, (v0[v15] & 1) == 0, 0, 0, v11, (uint64_t)v0, v28, v29, v299, v271, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v245, v232, v224, v216, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v330, v314, v284, v258, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 1, 0, v11, (uint64_t)v0, v392, v376, v361, v346, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, (v0[v15] & 1) == 0, v11, (uint64_t)v0, v22, v23, v24, v25, v472, v475, 4.0, 4.0, v473, v474);
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v456, v440, v424, v408);
              double v457 = v482;
              double v441 = v483;
              double v425 = v484;
              double v409 = v485;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v32 = v482;
              CGFloat v33 = v483;
              CGFloat v34 = v484;
              CGFloat v35 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v272 = v478;
              CGFloat v259 = v479;
              CGFloat v246 = v480;
              CGFloat v233 = v481;
              CGFloat v331 = v482;
              CGFloat v315 = v483;
              CGFloat v300 = v484;
              CGFloat v285 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v32, v33, v34, v35);
              CGFloat v36 = v478;
              CGFloat v37 = v479;
              CGFloat v38 = v480;
              CGFloat v39 = v481;
              CGFloat v393 = v482;
              CGFloat v377 = v483;
              CGFloat v362 = v484;
              CGFloat v347 = v485;
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v272, v259, v246, v233, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 1, 0, 0, v11, (uint64_t)v0, v331, v315, v300, v285, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v36, v37, v38, v39, v472, v475, 4.0, 4.0, v473, v474);
LABEL_21:
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v393, v377, v362, v347, v30, v31, 4.0, 4.0, v27, v26);
              goto LABEL_22;
            case 11:
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v450 = v483;
              CGFloat v466 = v482;
              CGFloat v418 = v485;
              CGFloat v434 = v484;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              double v139 = v478;
              double v140 = v479;
              CGFloat v307 = v480;
              CGFloat v278 = v481;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v141 = v482;
              CGFloat v142 = v483;
              CGFloat v143 = v484;
              CGFloat v144 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v239 = v479;
              CGFloat v252 = v478;
              CGFloat v221 = v481;
              CGFloat v229 = v480;
              CGFloat v323 = v483;
              CGFloat v339 = v482;
              CGFloat v292 = v484;
              CGFloat v265 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v141, v142, v143, v144);
              CGFloat v385 = v479;
              CGFloat v401 = v478;
              CGFloat v145 = v482;
              CGFloat v354 = v481;
              CGFloat v369 = v480;
              CGFloat v146 = v483;
              CGFloat v147 = v484;
              CGFloat v148 = v485;
              double v103 = v473;
              double v102 = v474;
              CGFloat v149 = v139;
              CGFloat v150 = v140;
              double v30 = v472;
              double v31 = v475;
              sub_100230564(1, (v0[v15] & 1) == 0, 0, 0, v11, (uint64_t)v0, v149, v150, v307, v278, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v252, v239, v229, v221, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v339, v323, v292, v265, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 1, 0, v11, (uint64_t)v0, v401, v385, v369, v354, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, (v0[v15] & 1) == 0, v11, (uint64_t)v0, v145, v146, v147, v148, v472, v475, 4.0, 4.0, v473, v474);
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v466, v450, v434, v418);
              CGFloat v467 = v482;
              CGFloat v451 = v483;
              CGFloat v435 = v484;
              CGFloat v419 = v485;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v151 = v482;
              CGFloat v152 = v483;
              CGFloat v153 = v484;
              CGFloat v154 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v279 = v478;
              CGFloat v266 = v479;
              CGFloat v253 = v480;
              CGFloat v240 = v481;
              CGFloat v340 = v482;
              CGFloat v324 = v483;
              CGFloat v308 = v484;
              CGFloat v293 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v151, v152, v153, v154);
              CGFloat v155 = v478;
              CGFloat v156 = v479;
              CGFloat v157 = v480;
              CGFloat v158 = v481;
              CGFloat v402 = v482;
              CGFloat v386 = v483;
              CGFloat v370 = v484;
              CGFloat v355 = v485;
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v279, v266, v253, v240, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 1, 0, 0, v11, (uint64_t)v0, v340, v324, v308, v293, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v155, v156, v157, v158, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v402, v386, v370, v355, v472, v475, 4.0, 4.0, v473, v474);
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v467, v451, v435, v419);
              double v106 = v482;
              double v107 = v483;
              double v108 = v484;
              double v109 = v485;
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v478, v479, v480, v481, v472, v475, 4.0, 4.0, v473, v474);
LABEL_40:
              double v211 = v103;
              double v212 = v102;
              double v40 = 4.0;
              double v41 = 4.0;
              CGFloat v42 = v106;
              CGFloat v43 = v107;
              CGFloat v44 = v108;
              CGFloat v45 = v109;
              goto LABEL_23;
            case 12:
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v452 = v483;
              CGFloat v468 = v482;
              CGFloat v420 = v485;
              CGFloat v436 = v484;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              double v159 = v478;
              double v160 = v479;
              CGFloat v309 = v480;
              CGFloat v280 = v481;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v161 = v482;
              CGFloat v162 = v483;
              CGFloat v163 = v484;
              CGFloat v164 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v241 = v479;
              CGFloat v254 = v478;
              CGFloat v222 = v481;
              CGFloat v230 = v480;
              CGFloat v325 = v483;
              CGFloat v341 = v482;
              CGFloat v294 = v484;
              CGFloat v267 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v161, v162, v163, v164);
              CGFloat v387 = v479;
              CGFloat v403 = v478;
              CGFloat v165 = v482;
              CGFloat v356 = v481;
              CGFloat v371 = v480;
              CGFloat v166 = v483;
              CGFloat v167 = v484;
              CGFloat v168 = v485;
              double v27 = v473;
              double v26 = v474;
              CGFloat v169 = v159;
              CGFloat v170 = v160;
              double v30 = v472;
              double v31 = v475;
              sub_100230564(1, (v0[v15] & 1) == 0, 0, 0, v11, (uint64_t)v0, v169, v170, v309, v280, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v254, v241, v230, v222, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v341, v325, v294, v267, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 1, 0, v11, (uint64_t)v0, v403, v387, v371, v356, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, (v0[v15] & 1) == 0, v11, (uint64_t)v0, v165, v166, v167, v168, v472, v475, 4.0, 4.0, v473, v474);
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v468, v452, v436, v420);
              CGFloat v469 = v482;
              CGFloat v453 = v483;
              CGFloat v437 = v484;
              CGFloat v421 = v485;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v171 = v482;
              CGFloat v172 = v483;
              CGFloat v173 = v484;
              CGFloat v174 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v281 = v478;
              CGFloat v268 = v479;
              CGFloat v255 = v480;
              CGFloat v242 = v481;
              CGFloat v342 = v482;
              CGFloat v326 = v483;
              CGFloat v310 = v484;
              CGFloat v295 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v171, v172, v173, v174);
              CGFloat v175 = v478;
              CGFloat v176 = v479;
              CGFloat v177 = v480;
              CGFloat v178 = v481;
              CGFloat v404 = v482;
              CGFloat v388 = v483;
              CGFloat v372 = v484;
              CGFloat v357 = v485;
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v281, v268, v255, v242, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 1, 0, 0, v11, (uint64_t)v0, v342, v326, v310, v295, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v175, v176, v177, v178, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v404, v388, v372, v357, v472, v475, 4.0, 4.0, v473, v474);
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v469, v453, v437, v421);
              double v457 = v482;
              double v441 = v483;
              double v425 = v484;
              double v409 = v485;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v179 = v482;
              CGFloat v180 = v483;
              CGFloat v181 = v484;
              CGFloat v182 = v485;
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v478, v479, v480, v481, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v179, v180, v181, v182, v472, v475, 4.0, 4.0, v473, v474);
              goto LABEL_22;
            case 13:
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, 0.0, 0.0, v477, v476);
              CGFloat v454 = v483;
              CGFloat v470 = v482;
              CGFloat v422 = v485;
              CGFloat v438 = v484;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              double v183 = v478;
              double v184 = v479;
              CGFloat v311 = v480;
              CGFloat v282 = v481;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v482, v483, v484, v485);
              CGFloat v185 = v482;
              CGFloat v186 = v483;
              CGFloat v187 = v484;
              CGFloat v188 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v243 = v479;
              CGFloat v256 = v478;
              CGFloat v223 = v481;
              CGFloat v231 = v480;
              CGFloat v327 = v483;
              CGFloat v343 = v482;
              CGFloat v296 = v484;
              CGFloat v269 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v185, v186, v187, v188);
              CGFloat v389 = v479;
              CGFloat v405 = v478;
              CGFloat v189 = v482;
              CGFloat v358 = v481;
              CGFloat v373 = v480;
              CGFloat v190 = v483;
              CGFloat v191 = v484;
              CGFloat v192 = v485;
              double v27 = v473;
              double v26 = v474;
              CGFloat v193 = v183;
              CGFloat v194 = v184;
              double v30 = v472;
              double v31 = v475;
              sub_100230564(1, (v0[v15] & 1) == 0, 0, 0, v11, (uint64_t)v0, v193, v194, v311, v282, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v256, v243, v231, v223, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v343, v327, v296, v269, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 1, 0, v11, (uint64_t)v0, v405, v389, v373, v358, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, (v0[v15] & 1) == 0, v11, (uint64_t)v0, v189, v190, v191, v192, v472, v475, 4.0, 4.0, v473, v474);
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v470, v454, v438, v422);
              CGFloat v471 = v482;
              CGFloat v455 = v483;
              CGFloat v439 = v484;
              CGFloat v423 = v485;
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v195 = v482;
              CGFloat v196 = v483;
              CGFloat v197 = v484;
              CGFloat v198 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v283 = v478;
              CGFloat v270 = v479;
              CGFloat v257 = v480;
              CGFloat v244 = v481;
              CGFloat v344 = v482;
              CGFloat v328 = v483;
              CGFloat v312 = v484;
              CGFloat v297 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v195, v196, v197, v198);
              CGFloat v199 = v478;
              CGFloat v200 = v479;
              CGFloat v201 = v480;
              CGFloat v202 = v481;
              CGFloat v406 = v482;
              CGFloat v390 = v483;
              CGFloat v374 = v484;
              CGFloat v359 = v485;
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v283, v270, v257, v244, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 1, 0, 0, v11, (uint64_t)v0, v344, v328, v312, v297, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v199, v200, v201, v202, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v406, v390, v374, v359, v472, v475, 4.0, 4.0, v473, v474);
              sub_100495F54(CGRectMinXEdge, (uint64_t)&v478, 0.5, v471, v455, v439, v423);
              CGFloat v203 = v482;
              CGFloat v204 = v483;
              CGFloat v205 = v484;
              CGFloat v206 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v478, v479, v480, v481);
              CGFloat v345 = v478;
              CGFloat v329 = v479;
              CGFloat v313 = v480;
              CGFloat v298 = v481;
              CGFloat v407 = v482;
              CGFloat v391 = v483;
              CGFloat v375 = v484;
              CGFloat v360 = v485;
              sub_100495F54(CGRectMinYEdge, (uint64_t)&v478, 0.5, v203, v204, v205, v206);
              CGFloat v207 = v478;
              CGFloat v208 = v479;
              CGFloat v209 = v480;
              CGFloat v210 = v481;
              double v457 = v482;
              double v441 = v483;
              double v425 = v484;
              double v409 = v485;
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v345, v329, v313, v298, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v407, v391, v375, v360, v472, v475, 4.0, 4.0, v473, v474);
              sub_100230564(0, 0, 0, 0, v11, (uint64_t)v0, v207, v208, v209, v210, v472, v475, 4.0, 4.0, v473, v474);
LABEL_22:
              double v211 = v27;
              double v212 = v26;
              double v40 = 4.0;
              double v41 = 4.0;
              CGFloat v43 = v441;
              CGFloat v42 = v457;
              CGFloat v45 = v409;
              CGFloat v44 = v425;
LABEL_23:
              char v46 = 0;
              char v47 = 0;
              double v48 = v30;
LABEL_24:
              double v49 = v31;
LABEL_25:
              int v50 = 0;
              goto LABEL_26;
            default:
              goto LABEL_43;
          }
        }
        double v49 = v475;
        double v48 = v472;
        double v211 = v473;
        double v212 = v474;
        CGFloat v42 = 0.0;
        CGFloat v43 = 0.0;
        double v40 = 4.0;
        double v41 = 4.0;
        CGFloat v45 = v476;
        CGFloat v44 = v477;
        char v46 = 1;
        char v47 = 1;
LABEL_29:
        int v50 = 1;
LABEL_26:
        sub_100230564(v46, v47, v50, 1, v11, (uint64_t)v0, v42, v43, v44, v45, v48, v49, v40, v41, v211, v212);
      }
LABEL_43:
      swift_release();
    }
  }
}

uint64_t sub_100230564(char a1, char a2, int a3, int a4, uint64_t a5, uint64_t a6, CGFloat a7, CGFloat a8, CGFloat a9, CGFloat a10, double a11, double a12, double a13, double a14, double a15, double a16)
{
  int v56 = a4;
  int v57 = a3;
  double v54 = a11;
  double v55 = a12;
  uint64_t v28 = type metadata accessor for IndexPath();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  double v31 = (char *)&v53 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGFloat v32 = (void *)(a5 + 16);
  type metadata accessor for MosaicLayout.Attributes();
  sub_100010218(&qword_1007FC110);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_1006D6270;
  *(void *)(v33 + 32) = 0;
  swift_beginAccess();
  *(void *)(v33 + 40) = *(void *)(a5 + 16);
  IndexPath.init(arrayLiteral:)();
  Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
  CGFloat v35 = (char *)[(id)swift_getObjCClassFromMetadata() layoutAttributesForCellWithIndexPath:isa];

  (*(void (**)(char *, uint64_t))(v29 + 8))(v31, v28);
  CGFloat v58 = a7;
  CGFloat v59 = a8;
  CGFloat v60 = a9;
  [v35 setFrame:a7, a8, a9, a10];
  double v36 = v54;
  double v37 = v55;
  if (a2) {
    double v38 = v54;
  }
  else {
    double v38 = a13;
  }
  if (a2) {
    double v39 = v55;
  }
  else {
    double v39 = a14;
  }
  if ((v56 & 1) == 0)
  {
    double v36 = a13;
    double v37 = a14;
  }
  if (v57) {
    double v40 = a15;
  }
  else {
    double v40 = a13;
  }
  if (v57) {
    double v41 = a16;
  }
  else {
    double v41 = a14;
  }
  if (a1) {
    double v42 = a15;
  }
  else {
    double v42 = a13;
  }
  if (a1) {
    double v43 = a16;
  }
  else {
    double v43 = a14;
  }
  CGFloat v44 = (double *)&v35[OBJC_IVAR____TtCC7Journal12MosaicLayout10Attributes_cornerRadii];
  *CGFloat v44 = v38;
  v44[1] = v39;
  v44[2] = v36;
  v44[3] = v37;
  v44[4] = v40;
  v44[5] = v41;
  v44[6] = v42;
  v44[7] = v43;
  CGFloat v45 = (void *)(a6 + OBJC_IVAR____TtC7Journal12MosaicLayout_cachedAttributes);
  swift_beginAccess();
  char v46 = v35;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((*v45 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v45 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  swift_endAccess();
  char v47 = (CGFloat *)(a6 + OBJC_IVAR____TtC7Journal12MosaicLayout_contentBounds);
  v62.origin.CGFloat x = v58;
  v62.origin.CGFloat y = v59;
  v62.size.CGFloat width = v60;
  v62.size.CGFloat height = a10;
  CGRect v61 = CGRectUnion(*(CGRect *)(a6 + OBJC_IVAR____TtC7Journal12MosaicLayout_contentBounds), v62);
  CGFloat x = v61.origin.x;
  CGFloat y = v61.origin.y;
  CGFloat width = v61.size.width;
  CGFloat height = v61.size.height;

  CGFloat *v47 = x;
  v47[1] = y;
  v47[2] = width;
  v47[3] = height;
  uint64_t result = swift_beginAccess();
  if (__OFADD__(*v32, 1)) {
    __break(1u);
  }
  else {
    ++*v32;
  }
  return result;
}

unint64_t sub_100230974()
{
  id v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC7Journal12MosaicLayout_cachedAttributes);
  swift_beginAccess();
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (IndexPath.item.getter() >= v2) {
    return 0;
  }
  unint64_t result = IndexPath.item.getter();
  uint64_t v4 = *v1;
  if ((v4 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    uint64_t v5 = *(void **)(v4 + 8 * result + 32);
    id v6 = v5;
    return (unint64_t)v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_100230B80(CGFloat a1, CGFloat a2, CGFloat a3, CGFloat a4)
{
  unint64_t v42 = (unint64_t)_swiftEmptyArrayStorage;
  uint64_t v11 = (unint64_t *)(v4 + OBJC_IVAR____TtC7Journal12MosaicLayout_cachedAttributes);
  swift_beginAccess();
  Swift::Int v12 = *v11;
  if (!(*v11 >> 62))
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    goto LABEL_3;
  }
  while (1)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v13 < 0) {
      break;
    }
LABEL_3:
    if (!v13) {
      return v42;
    }
    uint64_t v14 = sub_100231124(0, v13 - 1, a1, a2, a3, a4);
    if (v15) {
      return v42;
    }
    Swift::Int v6 = v14;
    if (v14 < 0) {
      goto LABEL_54;
    }
    unint64_t v4 = *v11;
    Swift::Int v12 = *v11 >> 62;
    if (v12) {
      goto LABEL_55;
    }
    Swift::Int v16 = *(void *)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v16 < v6) {
      goto LABEL_57;
    }
LABEL_8:
    if (v6) {
      BOOL v17 = (v4 & 0xC000000000000001) == 0;
    }
    else {
      BOOL v17 = 1;
    }
    if (!v17)
    {
      sub_100231550();
      Swift::Int v18 = 0;
      do
      {
        Swift::Int v19 = v18 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v18);
        Swift::Int v18 = v19;
      }
      while (v6 != v19);
    }
    if (v12)
    {
      swift_bridgeObjectRetain();
      _CocoaArrayWrapper.subscript.getter();
      uint64_t v5 = v21;
      CGFloat v20 = v22;
      unint64_t v24 = v23;
      swift_bridgeObjectRelease_n();
      Swift::Int v12 = v24 >> 1;
    }
    else
    {
      CGFloat v20 = 0;
      uint64_t v5 = (id *)((v4 & 0xFFFFFFFFFFFFFF8) + 32);
      Swift::Int v12 = v6;
    }
    if ((double **)v12 != v20)
    {
      uint64_t v25 = v12;
      while (!__OFSUB__(v25--, 1))
      {
        if (v25 < (uint64_t)v20 || v25 >= v12) {
          goto LABEL_50;
        }
        id v27 = v5[v25];
        [v27 frame];
        double MaxY = CGRectGetMaxY(v43);
        v44.origin.CGFloat x = a1;
        v44.origin.CGFloat y = a2;
        v44.size.CGFloat width = a3;
        v44.size.CGFloat height = a4;
        if (CGRectGetMinY(v44) > MaxY)
        {

          goto LABEL_28;
        }
        id v29 = v27;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        unint64_t v4 = (unint64_t)&v42;
        specialized Array._endMutation()();

        if ((double **)v25 == v20) {
          goto LABEL_28;
        }
      }
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
LABEL_28:
    uint64_t result = swift_unknownObjectRelease();
    unint64_t v4 = *v11;
    uint64_t v5 = (id *)(*v11 >> 62);
    if (v5) {
      goto LABEL_58;
    }
    uint64_t v11 = *(unint64_t **)((*v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if ((uint64_t)v11 < v6) {
      goto LABEL_62;
    }
    uint64_t result = swift_bridgeObjectRetain();
LABEL_31:
    if ((v4 & 0xC000000000000001) != 0 && (unint64_t *)v6 != v11)
    {
      if (v6 >= (uint64_t)v11) {
        goto LABEL_63;
      }
      sub_100231550();
      Swift::Int v31 = v6;
      do
      {
        Swift::Int v12 = v31 + 1;
        _ArrayBuffer._typeCheckSlowPath(_:)(v31);
        Swift::Int v31 = v12;
      }
      while (v11 != (unint64_t *)v12);
    }
    if (!v5)
    {
      uint64_t v32 = (v4 & 0xFFFFFFFFFFFFFF8) + 32;
      if ((unint64_t *)v6 != v11) {
        goto LABEL_40;
      }
LABEL_47:
      swift_unknownObjectRelease();
      return v42;
    }
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.subscript.getter();
    uint64_t v32 = v33;
    Swift::Int v6 = v34;
    unint64_t v36 = v35;
    swift_bridgeObjectRelease_n();
    uint64_t v11 = (unint64_t *)(v36 >> 1);
    if ((unint64_t *)v6 == v11) {
      goto LABEL_47;
    }
LABEL_40:
    while (v6 < (uint64_t)v11)
    {
      id v37 = *(id *)(v32 + 8 * v6);
      [v37 frame];
      double MinY = CGRectGetMinY(v45);
      v46.origin.CGFloat x = a1;
      v46.origin.CGFloat y = a2;
      v46.size.CGFloat width = a3;
      v46.size.CGFloat height = a4;
      if (MinY > CGRectGetMaxY(v46))
      {

        goto LABEL_47;
      }
      uint64_t v5 = (id *)v37;
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      ++v6;
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      unint64_t v4 = (unint64_t)&v42;
      specialized Array._endMutation()();

      if (v11 == (unint64_t *)v6) {
        goto LABEL_47;
      }
    }
LABEL_51:
    __break(1u);
  }
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  swift_bridgeObjectRetain();
  uint64_t result = _CocoaArrayWrapper.endIndex.getter();
  if (result < 0) {
    goto LABEL_64;
  }
  swift_bridgeObjectRetain();
  uint64_t v39 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v39 >= v6) {
    goto LABEL_8;
  }
LABEL_57:
  __break(1u);
LABEL_58:
  swift_bridgeObjectRetain_n();
  uint64_t v11 = (unint64_t *)_CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if ((uint64_t)v11 < v6) {
    goto LABEL_65;
  }
  swift_bridgeObjectRetain();
  uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v40 < v6) {
    goto LABEL_66;
  }
  swift_bridgeObjectRetain();
  uint64_t v41 = _CocoaArrayWrapper.endIndex.getter();
  uint64_t result = swift_bridgeObjectRelease();
  if (v41 >= (uint64_t)v11) {
    goto LABEL_31;
  }
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
  return result;
}

uint64_t sub_100231124(uint64_t a1, uint64_t a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  if (a2 < a1) {
    return 0;
  }
  uint64_t v14 = a1 + a2;
  if (__OFADD__(a1, a2))
  {
    __break(1u);
LABEL_19:
    swift_bridgeObjectRetain();
    id v19 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    swift_bridgeObjectRelease();
LABEL_11:
    [v19 frame];
    v30.origin.CGFloat x = v11;
    v30.origin.CGFloat y = v10;
    v30.size.CGFloat width = v9;
    v30.size.CGFloat height = v8;
    if (CGRectIntersectsRect(v27, v30))
    {
    }
    else
    {
      [v19 frame];
      double MaxY = CGRectGetMaxY(v28);
      v29.origin.CGFloat x = v11;
      v29.origin.CGFloat y = v10;
      v29.size.CGFloat width = v9;
      v29.size.CGFloat height = v8;
      if (MaxY >= CGRectGetMinY(v29))
      {
        uint64_t v26 = v6 - 1;
        v21.n128_f64[0] = v11;
        v22.n128_f64[0] = v10;
        v23.n128_f64[0] = v9;
        v24.n128_f64[0] = v8;
        uint64_t v25 = a1;
      }
      else
      {
        uint64_t v25 = v6 + 1;
        v21.n128_f64[0] = v11;
        v22.n128_f64[0] = v10;
        v23.n128_f64[0] = v9;
        v24.n128_f64[0] = v8;
        uint64_t v26 = a2;
      }
      uint64_t v6 = sub_100231124(v25, v26, v21, v22, v23, v24);
    }
    return v6;
  }
  CGFloat v8 = a6;
  CGFloat v9 = a5;
  CGFloat v10 = a4;
  CGFloat v11 = a3;
  if (v14 >= 0) {
    uint64_t v15 = a1 + a2;
  }
  else {
    uint64_t v15 = v14 + 1;
  }
  uint64_t v6 = v15 >> 1;
  Swift::Int v16 = (uint64_t *)(v7 + OBJC_IVAR____TtC7Journal12MosaicLayout_cachedAttributes);
  uint64_t result = swift_beginAccess();
  uint64_t v18 = *v16;
  if ((*v16 & 0xC000000000000001) != 0) {
    goto LABEL_19;
  }
  if (v14 < -1)
  {
    __break(1u);
  }
  else if (v6 < *(void *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v19 = *(id *)(v18 + 8 * v6 + 32);
    goto LABEL_11;
  }
  __break(1u);
  return result;
}

id sub_1002312E8()
{
  *(void *)&v0[OBJC_IVAR____TtC7Journal12MosaicLayout_cachedAttributes] = _swiftEmptyArrayStorage;
  id v1 = &v0[OBJC_IVAR____TtC7Journal12MosaicLayout_contentBounds];
  _OWORD *v1 = 0u;
  v1[1] = 0u;
  v0[OBJC_IVAR____TtC7Journal12MosaicLayout_sizeType] = 1;
  uint64_t v2 = &v0[OBJC_IVAR____TtC7Journal12MosaicLayout_outerTopCornerRadius];
  *(void *)uint64_t v2 = 0;
  *((void *)v2 + 1) = 0;
  v2[16] = 1;
  uint64_t v3 = &v0[OBJC_IVAR____TtC7Journal12MosaicLayout_outerBottomCornerRadius];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  v3[16] = 1;
  v0[OBJC_IVAR____TtC7Journal12MosaicLayout_isExpanded] = 0;
  v0[OBJC_IVAR____TtC7Journal12MosaicLayout_skipLayoutInvalidation] = 0;
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for MosaicLayout();
  return [super init];
}

id sub_1002313B8(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal12MosaicLayout_cachedAttributes] = _swiftEmptyArrayStorage;
  uint64_t v3 = &v1[OBJC_IVAR____TtC7Journal12MosaicLayout_contentBounds];
  *uint64_t v3 = 0u;
  v3[1] = 0u;
  v1[OBJC_IVAR____TtC7Journal12MosaicLayout_sizeType] = 1;
  unint64_t v4 = &v1[OBJC_IVAR____TtC7Journal12MosaicLayout_outerTopCornerRadius];
  *(void *)unint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  v4[16] = 1;
  objc_super v5 = &v1[OBJC_IVAR____TtC7Journal12MosaicLayout_outerBottomCornerRadius];
  *(void *)objc_super v5 = 0;
  *((void *)v5 + 1) = 0;
  v5[16] = 1;
  v1[OBJC_IVAR____TtC7Journal12MosaicLayout_isExpanded] = 0;
  v1[OBJC_IVAR____TtC7Journal12MosaicLayout_skipLayoutInvalidation] = 0;
  v8.receiver = v1;
  v8.super_class = (Class)type metadata accessor for MosaicLayout();
  [super initWithCoder:a1];

  return v6;
}

id sub_1002314A8()
{
  return sub_1002314C0(type metadata accessor for MosaicLayout);
}

id sub_1002314C0(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for MosaicLayout()
{
  return self;
}

uint64_t type metadata accessor for MosaicLayout.Attributes()
{
  return self;
}

unint64_t sub_100231550()
{
  unint64_t result = qword_1008043A8;
  if (!qword_1008043A8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1008043A8);
  }
  return result;
}

uint64_t sub_100231590()
{
  return swift_deallocObject();
}

Swift::Int sub_1002315A0()
{
  return Hasher._finalize()();
}

Swift::Int sub_100231648()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002316D0()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002317DC()
{
  return Hasher._finalize()();
}

Swift::Int sub_1002318DC()
{
  return Hasher._finalize()();
}

uint64_t sub_1002319D0()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100231B14()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100231C00()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100231C90()
{
  return Hasher._finalize()();
}

Swift::Int sub_100231D14()
{
  return Hasher._finalize()();
}

Swift::Int sub_100231DB8()
{
  return Hasher._finalize()();
}

Swift::Int sub_100231EC0()
{
  return Hasher._finalize()();
}

Swift::Int sub_100231FBC()
{
  return Hasher._finalize()();
}

uint64_t sub_1002320AC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1008043B0);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1008043B0);
  if (qword_1007F7D78 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EC68);
  objc_super v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100232174(char *a1, char *a2)
{
  return sub_10017D3E8(*a1, *a2);
}

Swift::Int sub_100232180()
{
  return sub_100231648();
}

uint64_t sub_100232188()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002321FC()
{
  return sub_100231C90();
}

uint64_t sub_100232204@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100793BA0, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100232264(unint64_t *a1@<X8>)
{
  if (*v1) {
    unint64_t v2 = 0xD00000000000001CLL;
  }
  else {
    unint64_t v2 = 0xD00000000000001ALL;
  }
  unint64_t v3 = 0x8000000100685850;
  if (*v1) {
    unint64_t v3 = 0x8000000100685870;
  }
  *a1 = v2;
  a1[1] = v3;
}

id sub_1002322A8()
{
  id result = [objc_allocWithZone((Class)type metadata accessor for JournalNotificationsManager()) init];
  qword_10083D1E8 = (uint64_t)result;
  return result;
}

objc_class *sub_1002322D8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v1 = type metadata accessor for Locale();
  __chkstk_darwin(v1 - 8);
  CGFloat v73 = (char *)&v65 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v3 - 8);
  CGFloat v72 = (char *)&v65 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v5 = (void *)type metadata accessor for URL();
  uint64_t v6 = *(v5 - 1);
  id v69 = v5;
  uint64_t v70 = v6;
  __chkstk_darwin(v5);
  objc_super v8 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = OBJC_IVAR____TtC7Journal27JournalNotificationsManager_promptManager;
  id v10 = objc_allocWithZone((Class)MOPromptManager);
  CGFloat v11 = v0;
  *(void *)&v0[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal27JournalNotificationsManager_defaults;
  if (qword_1007F6E48 != -1) {
    swift_once();
  }
  uint64_t v13 = (void *)qword_10083D3C0;
  *(void *)&v11[v12] = qword_10083D3C0;
  uint64_t v14 = &v11[OBJC_IVAR____TtC7Journal27JournalNotificationsManager_actionHandler];
  *(void *)uint64_t v14 = 0;
  *((void *)v14 + 1) = 0;
  uint64_t v15 = self;
  id v16 = v13;
  id v17 = [v15 mainBundle];
  id v18 = [v17 bundleIdentifier];

  if (v18)
  {
    uint64_t v19 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v21 = v20;

    if (v19 == 0xD000000000000011 && v21 == 0x80000001006876D0)
    {
      swift_bridgeObjectRelease();
LABEL_8:
      id v23 = [self currentNotificationCenter];
      *(void *)&v11[OBJC_IVAR____TtC7Journal27JournalNotificationsManager_notificationCenter] = v23;
      id v24 = [v15 mainBundle];
      *(void *)&v11[OBJC_IVAR____TtC7Journal27JournalNotificationsManager_bundle] = v24;
      goto LABEL_10;
    }
    char v22 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v22) {
      goto LABEL_8;
    }
  }
  id v25 = objc_allocWithZone((Class)UNUserNotificationCenter);
  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v25 initWithBundleIdentifier:v26];

  *(void *)&v11[OBJC_IVAR____TtC7Journal27JournalNotificationsManager_notificationCenter] = v27;
  id v28 = objc_allocWithZone((Class)LSApplicationRecord);
  id v29 = sub_10023723C(0xD000000000000011, 0x80000001006876D0, 0);
  id v30 = [v29 URL];

  static URL._unconditionallyBridgeFromObjectiveC(_:)();
  id v31 = objc_allocWithZone((Class)NSBundle);
  URL._bridgeToObjectiveC()(v32);
  Swift::Int v34 = v33;
  id v35 = [v31 initWithURL:v33];

  (*(void (**)(char *, id))(v70 + 8))(v8, v69);
  *(void *)&v11[OBJC_IVAR____TtC7Journal27JournalNotificationsManager_bundle] = v35;
LABEL_10:

  v75.receiver = v11;
  v75.super_class = ObjectType;
  unint64_t v36 = (objc_class *)[v75 init];
  uint64_t v70 = OBJC_IVAR____TtC7Journal27JournalNotificationsManager_notificationCenter;
  id v37 = *(void **)((char *)v36 + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_notificationCenter);
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6D00;
  uint64_t v66 = swift_allocObject();
  *(_OWORD *)(v66 + 16) = xmmword_1006D6D10;
  uint64_t ObjectType = v36;
  double v38 = v36;
  id v69 = v37;
  unint64_t v67 = 0xD000000000000010;
  String.LocalizationValue.init(stringLiteral:)();
  uint64_t v65 = OBJC_IVAR____TtC7Journal27JournalNotificationsManager_bundle;
  id v39 = *(id *)((char *)v38 + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_bundle);
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  NSString v40 = String._bridgeToObjectiveC()();
  uint64_t v41 = self;
  id v42 = [v41 iconWithSystemImageName:v40];

  NSString v43 = String._bridgeToObjectiveC()();
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  CGRect v45 = self;
  id v46 = [v45 actionWithIdentifier:v43 title:v44 options:5 icon:v42];

  uint64_t v47 = v66;
  *(void *)(v66 + 32) = v46;
  String.LocalizationValue.init(stringLiteral:)();
  id v48 = *(id *)((char *)v38 + v65);
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  NSString v49 = String._bridgeToObjectiveC()();
  id v50 = [v41 iconWithSystemImageName:v49];

  NSString v51 = String._bridgeToObjectiveC()();
  NSString v52 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v53 = [v45 actionWithIdentifier:v51 title:v52 options:1 icon:v50];

  *(void *)(v47 + 40) = v53;
  unint64_t v74 = v47;
  specialized Array._endMutation()();
  NSString v54 = String._bridgeToObjectiveC()();
  sub_10001B284(0, (unint64_t *)&unk_100804580);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  Class v56 = Array._bridgeToObjectiveC()().super.isa;
  id v57 = [self categoryWithIdentifier:v54 actions:isa intentIdentifiers:v56 options:0];

  uint64_t v58 = inited;
  *(void *)(inited + 32) = v57;
  unint64_t v74 = v58;
  specialized Array._endMutation()();
  unint64_t v59 = v74;
  if (v74 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v60 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v60) {
      goto LABEL_14;
    }
    goto LABEL_12;
  }
  if (*(void *)((v74 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
LABEL_12:
  }
    sub_1000F90F0(v59);
LABEL_14:
  swift_bridgeObjectRelease();
  sub_10001B284(0, &qword_1007FDD58);
  sub_100237FDC();
  Class v61 = Set._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v62 = v69;
  [v69 setNotificationCategories:v61];

  id v63 = *(id *)((char *)ObjectType + v70);
  [v63 setDelegate:v38];

  return v38;
}

uint64_t sub_100232BB4(uint64_t a1, void *a2)
{
  **(void **)(*(void *)(*(void *)(a1 + 32) + 64) + 40) = a2;
  id v2 = a2;

  return swift_continuation_resume();
}

uint64_t sub_100232C08(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    **(unsigned char **)(*(void *)(v3 + 64) + 40) = a2;
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_100232CBC(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  *(unsigned char *)(v5 + 144) = a4;
  *(void *)(v5 + 48) = a3;
  *(void *)(v5 + 56) = v4;
  *(void *)(v5 + 32) = a1;
  *(void *)(v5 + 40) = a2;
  return _swift_task_switch(sub_100232CE4, 0, 0);
}

uint64_t sub_100232CE4()
{
  uint64_t v1 = *(unsigned __int8 *)(v0 + 144);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = *(void **)(*(void *)(v0 + 56) + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_defaults);
  *(void *)(v0 + 64) = v3;
  [v3 setIsJournalingScheduleEnabled:v1];
  if (v2)
  {
    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v4 = *(void *)(v0 + 48);
    uint64_t v6 = *(void *)(v0 + 32);
  }
  else
  {
    id v7 = [v3 journalingScheduleData];
    if (!v7) {
      goto LABEL_5;
    }
    objc_super v8 = v7;
    uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v11 = v10;

    uint64_t v6 = sub_100040544();
    uint64_t v5 = v12;
    uint64_t v4 = v13;
    sub_100040DD0(v9, v11);
    if (!v6)
    {
LABEL_5:
      uint64_t v6 = sub_1000F6CD0((uint64_t)&off_100791C90);
      swift_bridgeObjectRelease();
      uint64_t v4 = 0;
      uint64_t v5 = 20;
    }
  }
  *(void *)(v0 + 80) = v5;
  *(void *)(v0 + 88) = v4;
  *(void *)(v0 + 72) = v6;
  int v14 = *(unsigned __int8 *)(v0 + 144);
  id v15 = objc_allocWithZone((Class)NSNumber);
  swift_bridgeObjectRetain();
  double v16 = COERCE_DOUBLE([v15 initWithInteger:v5]);
  *(double *)(v0 + 96) = v16;
  id v17 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v4];
  id v18 = v17;
  *(void *)(v0 + 104) = v17;
  if (v14 == 1)
  {
    uint64_t v19 = *(void *)(v6 + 16);
    if (v19)
    {
      id v44 = v17;
      double v45 = v16;
      uint64_t v46 = v0;
      swift_bridgeObjectRetain();
      specialized ContiguousArray.reserveCapacity(_:)();
      int64_t v20 = sub_10023731C(v6);
      int v22 = v21;
      char v24 = v23 & 1;
      id v25 = (char *)(v6 + 56);
      uint64_t v0 = 1;
      while ((v20 & 0x8000000000000000) == 0 && v20 < 1 << *(unsigned char *)(v6 + 32))
      {
        if (((*(void *)&v25[((unint64_t)v20 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v20) & 1) == 0) {
          goto LABEL_28;
        }
        if (*(_DWORD *)(v6 + 36) != v22) {
          goto LABEL_29;
        }
        uint64_t v26 = *(void *)(*(void *)(v6 + 48) + 8 * v20);
        if (__OFADD__(v26, 1)) {
          goto LABEL_30;
        }
        [objc_allocWithZone((Class)NSNumber) initWithInteger:v26 + 1];
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        double v16 = _swiftEmptyArrayStorage[2];
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
        int64_t v27 = sub_1002373C0(v20, v22, v24 & 1, v6);
        int64_t v20 = v27;
        int v22 = v28;
        char v24 = v29 & 1;
        if (!--v19)
        {
          sub_1000733B8(v27, v28, v29 & 1);
          swift_bridgeObjectRelease();
          double v16 = v45;
          uint64_t v0 = v46;
          id v18 = v44;
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      swift_once();
      goto LABEL_21;
    }
  }
LABEL_16:
  id v30 = objc_allocWithZone((Class)MONotificationScheduleItem);
  sub_10001B284(0, (unint64_t *)&qword_1007FEB30);
  double v16 = COERCE_DOUBLE(*(id *)&v16);
  id v25 = v18;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v32 = [v30 initScheduleWithHour:*(void *)&v16 minute:v25 weekdays:isa];
  *(void *)(v0 + 112) = v32;

  if (v32)
  {
    uint64_t v33 = *(void *)(v0 + 56);
    uint64_t v34 = swift_task_alloc();
    *(void *)(v0 + 120) = v34;
    *(void *)(v34 + 16) = v33;
    *(void *)(v34 + 24) = v32;
    id v35 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v35;
    uint64_t v36 = sub_100010218((uint64_t *)&unk_100804490);
    *id v35 = v0;
    v35[1] = sub_100233204;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 16, 0, 0, 0xD000000000000028, 0x8000000100692AD0, sub_1002374A4, v34, v36);
  }
  swift_bridgeObjectRelease();
  if (qword_1007F6BF0 != -1) {
    goto LABEL_31;
  }
LABEL_21:
  uint64_t v37 = type metadata accessor for Logger();
  sub_100026A54(v37, (uint64_t)qword_1008043B0);
  *(double *)&double v38 = COERCE_DOUBLE(Logger.logObject.getter());
  os_log_type_t v39 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v38, v39))
  {
    NSString v40 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)NSString v40 = 0;
    _os_log_impl((void *)&_mh_execute_header, v38, v39, "Invalid notification schedule components", v40, 2u);
    swift_slowDealloc();
    double v41 = *(double *)&v38;
  }
  else
  {
    double v41 = v16;
    double v16 = *(double *)&v38;
  }

  id v42 = *(uint64_t (**)(void))(v0 + 8);
  return v42();
}

uint64_t sub_100233204()
{
  *(void *)(*(void *)v1 + 136) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    uint64_t v2 = sub_100233504;
  }
  else
  {
    swift_errorRelease();
    swift_task_dealloc();
    uint64_t v2 = sub_100233340;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100233340()
{
  if (qword_1007F6BF0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_1008043B0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Notification registered successfully", v4, 2u);
    swift_slowDealloc();
  }
  int v5 = *(unsigned __int8 *)(v0 + 144);

  if (v5 == 1)
  {
    uint64_t v6 = sub_1000EF078();
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    if (v8 >> 60 == 15)
    {
      Class isa = 0;
    }
    else
    {
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      sub_100040DBC(v6, v8);
    }
    uint64_t v13 = *(void **)(v0 + 104);
    uint64_t v12 = *(void **)(v0 + 112);
    int v14 = *(void **)(v0 + 96);
    [*(id *)(v0 + 64) setJournalingScheduleData:isa];
  }
  else
  {
    unint64_t v11 = *(void **)(v0 + 104);
    unint64_t v10 = *(void **)(v0 + 112);

    swift_bridgeObjectRelease();
  }
  id v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_100233504()
{
  if (qword_1007F6BF0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_1008043B0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    int v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[3] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *int v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Error registering notification: %@", v4, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  unint64_t v8 = (void *)v0[13];
  unint64_t v7 = (void *)v0[14];
  uint64_t v9 = (void *)v0[12];

  swift_willThrow();
  unint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_100233714(char a1)
{
  *(void *)(v2 + 232) = v1;
  *(unsigned char *)(v2 + 289) = a1;
  return _swift_task_switch(sub_100233738, 0, 0);
}

uint64_t sub_100233738()
{
  uint64_t v1 = *(void **)(v0[29] + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_notificationCenter);
  v0[30] = v1;
  v0[2] = v0;
  v0[7] = v0 + 28;
  v0[3] = sub_100233844;
  uint64_t v2 = swift_continuation_init();
  v0[18] = _NSConcreteStackBlock;
  v0[19] = 0x40000000;
  v0[20] = sub_100232BB4;
  v0[21] = &unk_1007A0190;
  v0[22] = v2;
  [v1 getNotificationSettingsWithCompletionHandler:v0 + 18];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_100233844()
{
  return _swift_task_switch(sub_100233924, 0, 0);
}

uint64_t sub_100233924()
{
  uint64_t v1 = *(void **)(v0 + 224);
  id v2 = [v1 authorizationStatus];
  *(void *)(v0 + 248) = v2;

  if (v2 == (id)1) {
    goto LABEL_10;
  }
  if (!v2)
  {
    os_log_type_t v3 = *(void **)(v0 + 240);
    *(void *)(v0 + 80) = v0;
    *(void *)(v0 + 120) = v0 + 288;
    *(void *)(v0 + 88) = sub_100233B2C;
    uint64_t v4 = swift_continuation_init();
    *(void *)(v0 + 184) = _NSConcreteStackBlock;
    *(void *)(v0 + 192) = 0x40000000;
    *(void *)(v0 + 200) = sub_100232C08;
    *(void *)(v0 + 208) = &unk_1007A01A8;
    *(void *)(v0 + 216) = v4;
    [v3 requestAuthorizationWithOptions:6 completionHandler:v0 + 184];
    return _swift_continuation_await(v0 + 80);
  }
  if (*(unsigned char *)(v0 + 289) != 1)
  {
LABEL_10:
    unint64_t v7 = *(uint64_t (**)(id, void))(v0 + 8);
    return v7(v2, 0);
  }
  else
  {
    uint64_t v5 = swift_task_alloc();
    *(void *)(v0 + 280) = v5;
    *(void *)uint64_t v5 = v0;
    *(void *)(v5 + 8) = sub_100234080;
    uint64_t v6 = *(void *)(v0 + 232);
    *(void *)(v5 + 48) = 0;
    *(void *)(v5 + 56) = v6;
    *(unsigned char *)(v5 + 144) = 1;
    *(void *)(v5 + 32) = 0;
    *(void *)(v5 + 40) = 0;
    return _swift_task_switch(sub_100232CE4, 0, 0);
  }
}

uint64_t sub_100233B2C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 112);
  *(void *)(*(void *)v0 + 256) = v1;
  if (v1) {
    id v2 = sub_100233E44;
  }
  else {
    id v2 = sub_100233C3C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100233C3C()
{
  int v1 = *(unsigned __int8 *)(v0 + 289);
  int v2 = *(unsigned __int8 *)(v0 + 288);
  os_log_type_t v3 = *(void **)(*(void *)(v0 + 232) + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_defaults);
  [v3 setIsJournalingScheduleEnabled:0];
  [v3 setIsStreakReminderEnabled:0];
  if (v2 != 1 || v1 == 0)
  {
    if (v2) {
      uint64_t v5 = 2;
    }
    else {
      uint64_t v5 = 1;
    }
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
    return v6(v5, 1);
  }
  else
  {
    if (qword_1007F6BF0 != -1) {
      swift_once();
    }
    uint64_t v8 = type metadata accessor for Logger();
    sub_100026A54(v8, (uint64_t)qword_1008043B0);
    uint64_t v9 = Logger.logObject.getter();
    os_log_type_t v10 = static os_log_type_t.info.getter();
    if (os_log_type_enabled(v9, v10))
    {
      unint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "😊 notifications authorization granted 😊", v11, 2u);
      swift_slowDealloc();
    }

    uint64_t v12 = swift_task_alloc();
    *(void *)(v0 + 264) = v12;
    *(void *)uint64_t v12 = v0;
    *(void *)(v12 + 8) = sub_100233EC8;
    uint64_t v13 = *(void *)(v0 + 232);
    *(void *)(v12 + 48) = 0;
    *(void *)(v12 + 56) = v13;
    *(unsigned char *)(v12 + 144) = 1;
    *(void *)(v12 + 32) = 0;
    *(void *)(v12 + 40) = 0;
    return _swift_task_switch(sub_100232CE4, 0, 0);
  }
}

uint64_t sub_100233E44()
{
  swift_willThrow();
  swift_willThrow();
  swift_errorRelease();
  int v1 = *(uint64_t (**)(void, uint64_t))(v0 + 8);
  return v1(0, 1);
}

uint64_t sub_100233EC8()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 272) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_100234004, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8);
    return v3(2, 1);
  }
}

uint64_t sub_100234004()
{
  swift_willThrow();
  swift_errorRelease();
  int v1 = *(uint64_t (**)(void, uint64_t))(v0 + 8);
  return v1(0, 1);
}

uint64_t sub_100234080()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v2 + 248);
  if (v0) {
    swift_errorRelease();
  }
  uint64_t v5 = *(uint64_t (**)(uint64_t, void))(v3 + 8);
  return v5(v4, 0);
}

void sub_1002341A8(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = sub_100010218((uint64_t *)&unk_1008044A0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = *(void **)(a2 + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_promptManager);
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1006D6D00;
  *(void *)(v10 + 32) = a3;
  aBlock[0] = v10;
  specialized Array._endMutation()();
  sub_10001B284(0, &qword_1008044B0);
  id v11 = a3;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  unint64_t v13 = (*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v14 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v14 + v13, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = sub_100237540;
  *(void *)(v15 + 24) = v14;
  aBlock[4] = sub_100237604;
  void aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10023440C;
  aBlock[3] = &unk_1007A0210;
  double v16 = _Block_copy(aBlock);
  swift_release();
  [v9 setupMomentsNotificationsWithSchedule:isa options:0 handler:v16];
  _Block_release(v16);
}

void sub_10023440C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_100234478(uint64_t a1, char a2)
{
  *(unsigned char *)(v3 + 384) = a2;
  *(void *)(v3 + 176) = a1;
  *(void *)(v3 + 184) = v2;
  uint64_t v4 = type metadata accessor for Calendar();
  *(void *)(v3 + 192) = v4;
  *(void *)(v3 + 200) = *(void *)(v4 - 8);
  *(void *)(v3 + 208) = swift_task_alloc();
  uint64_t v5 = type metadata accessor for DateComponents();
  *(void *)(v3 + 216) = v5;
  *(void *)(v3 + 224) = *(void *)(v5 - 8);
  *(void *)(v3 + 232) = swift_task_alloc();
  type metadata accessor for String.LocalizationValue.StringInterpolation();
  *(void *)(v3 + 240) = swift_task_alloc();
  type metadata accessor for Locale();
  *(void *)(v3 + 248) = swift_task_alloc();
  type metadata accessor for String.LocalizationValue();
  *(void *)(v3 + 256) = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_1007FC470);
  *(void *)(v3 + 264) = swift_task_alloc();
  *(void *)(v3 + 272) = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Date();
  *(void *)(v3 + 280) = v6;
  *(void *)(v3 + 288) = *(void *)(v6 - 8);
  *(void *)(v3 + 296) = swift_task_alloc();
  *(void *)(v3 + 304) = swift_task_alloc();
  return _swift_task_switch(sub_1002346C8, 0, 0);
}

uint64_t sub_1002346C8()
{
  uint64_t v1 = *(void *)(v0 + 176);
  uint64_t v2 = type metadata accessor for StreakSummary();
  uint64_t v3 = *(void *)(v1 + *(int *)(v2 + 28));
  if (v3 < 2)
  {
LABEL_4:
    uint64_t v8 = *(void **)(*(void *)(v0 + 184) + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_notificationCenter);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    [v8 removePendingNotificationRequestsWithIdentifiers:isa];

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  uint64_t v4 = *(void *)(v0 + 280);
  uint64_t v5 = *(void *)(v0 + 288);
  uint64_t v6 = *(void *)(v0 + 272);
  sub_100045944(v1 + *(int *)(v2 + 24), v6);
  uint64_t v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  *(void *)(v0 + 312) = v7;
  *(void *)(v0 + 320) = (v5 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v7(v6, 1, v4) == 1)
  {
    sub_1000AC7D4(*(void *)(v0 + 272));
    goto LABEL_4;
  }
  uint64_t v12 = *(void *)(v0 + 304);
  uint64_t v13 = *(void *)(v0 + 280);
  uint64_t v14 = *(void *)(v0 + 288);
  uint64_t v15 = *(void *)(v0 + 272);
  uint64_t v16 = *(void *)(v0 + 184);
  char v17 = *(unsigned char *)(v0 + 384);
  id v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 32);
  *(void *)(v0 + 328) = v18;
  *(void *)(v0 + 336) = (v14 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  v18(v12, v15, v13);
  id v19 = [objc_allocWithZone((Class)UNMutableNotificationContent) init];
  *(void *)(v0 + 344) = v19;
  String.LocalizationValue.init(stringLiteral:)();
  id v20 = *(id *)(v16 + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_bundle);
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v19 setTitle:v21];

  NSString v22 = String._bridgeToObjectiveC()();
  [v19 setCategoryIdentifier:v22];

  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v23._object = (void *)0x8000000100692B50;
  v23._countAndFlagsBits = 0x1000000000000017;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v23);
  if (v17)
  {
    *(void *)(v0 + 152) = v3;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    unint64_t v24 = 0xD00000000000003CLL;
    id v25 = " weeks in a row. Keep your streak going by journaling today.";
  }
  else
  {
    *(void *)(v0 + 168) = v3;
    String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
    unint64_t v24 = 0xD00000000000003BLL;
    id v25 = " days in a row. Keep your streak going by journaling today.";
  }
  unint64_t v26 = (unint64_t)(v25 - 32) | 0x8000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(*(Swift::String *)&v24);
  String.LocalizationValue.init(stringInterpolation:)();
  id v27 = v20;
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v19 setBody:v28];

  if (qword_1007F7EC8 != -1) {
    swift_once();
  }
  uint64_t v30 = *(void *)(v0 + 200);
  uint64_t v29 = *(void *)(v0 + 208);
  uint64_t v31 = *(void *)(v0 + 192);
  uint64_t v32 = sub_100026A54(v31, (uint64_t)qword_10083EE28);
  *(void *)(v0 + 352) = v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v29, v32, v31);
  if (qword_1007F7ED0 != -1) {
    swift_once();
  }
  uint64_t v34 = *(void *)(v0 + 200);
  uint64_t v33 = *(void *)(v0 + 208);
  uint64_t v35 = *(void *)(v0 + 192);
  Calendar.dateComponents(_:from:)();
  (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v33, v35);
  uint64_t v36 = DateComponents.day.getter();
  if ((v37 & 1) == 0 && (v38 = __OFSUB__(v36, 1), uint64_t v39 = v36 - 1, v38))
  {
    __break(1u);
  }
  else
  {
    uint64_t v40 = *(void *)(v0 + 184);
    DateComponents.day.setter();
    double v41 = *(void **)(v40 + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_defaults);
    [v41 streakReminderHour];
    DateComponents.hour.setter();
    [v41 streakReminderMinute];
    DateComponents.minute.setter();
    Class v42 = DateComponents._bridgeToObjectiveC()().super.isa;
    id v43 = [self triggerWithDateMatchingComponents:v42 repeats:0];
    *(void *)(v0 + 360) = v43;

    id v44 = v19;
    id v45 = v43;
    NSString v46 = String._bridgeToObjectiveC()();
    id v47 = [self requestWithIdentifier:v46 content:v44 trigger:v45];
    *(void *)(v0 + 368) = v47;

    id v48 = *(void **)(v40 + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_notificationCenter);
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 24) = sub_100234D7C;
    uint64_t v49 = swift_continuation_init();
    *(void *)(v0 + 80) = _NSConcreteStackBlock;
    *(void *)(v0 + 88) = 0x40000000;
    *(void *)(v0 + 96) = sub_10004F958;
    *(void *)(v0 + 104) = &unk_1007A0238;
    *(void *)(v0 + 112) = v49;
    [v48 addNotificationRequest:v47 withCompletionHandler:v0 + 80];
    uint64_t v39 = v0 + 16;
  }
  return _swift_continuation_await(v39);
}

uint64_t sub_100234D7C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 376) = v1;
  if (v1) {
    uint64_t v2 = sub_100235220;
  }
  else {
    uint64_t v2 = sub_100234E8C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100234E8C()
{
  uint64_t v35 = v0;
  if (qword_1007F6BF0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_1008043B0);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v33 = v3;
    uint64_t v4 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 312);
    uint64_t v5 = *(void *)(v0 + 280);
    uint64_t v6 = *(void *)(v0 + 264);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_beginAccess();
    Calendar.date(from:)();
    if (v4(v6, 1, v5) == 1)
    {
      uint64_t v8 = *(void *)(v0 + 264);
      static Date.distantFuture.getter();
      sub_1000AC7D4(v8);
    }
    else
    {
      (*(void (**)(void, void, void))(v0 + 328))(*(void *)(v0 + 296), *(void *)(v0 + 264), *(void *)(v0 + 280));
    }
    id v27 = *(void **)(v0 + 368);
    NSString v28 = *(void **)(v0 + 360);
    uint64_t v17 = *(void *)(v0 + 296);
    uint64_t v29 = *(void **)(v0 + 344);
    uint64_t v30 = *(void *)(v0 + 304);
    uint64_t v19 = *(void *)(v0 + 280);
    uint64_t v18 = *(void *)(v0 + 288);
    uint64_t v20 = *(void *)(v0 + 224);
    uint64_t v31 = *(void *)(v0 + 216);
    uint64_t v32 = *(void *)(v0 + 232);
    sub_100237774();
    uint64_t v21 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v23 = v22;
    unint64_t v24 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v24(v17, v19);
    *(void *)(v0 + 160) = sub_10011EA98(v21, v23, &v34);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v33, "Scheduled next streak reminder notification for %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    v24(v30, v19);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v32, v31);
  }
  else
  {
    uint64_t v9 = *(void **)(v0 + 360);
    uint64_t v10 = *(void **)(v0 + 344);
    uint64_t v11 = *(void *)(v0 + 304);
    uint64_t v12 = *(void *)(v0 + 280);
    uint64_t v13 = *(void *)(v0 + 288);
    uint64_t v15 = *(void *)(v0 + 224);
    uint64_t v14 = *(void *)(v0 + 232);
    uint64_t v16 = *(void *)(v0 + 216);

    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v11, v12);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v25 = *(uint64_t (**)(void))(v0 + 8);
  return v25();
}

uint64_t sub_100235220()
{
  swift_willThrow();
  if (qword_1007F6BF0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_1008043B0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    v0[18] = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Failed to schedule streak reminder: %@", v4, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = v2;
  uint64_t v8 = (void *)v0[46];
  uint64_t v9 = (void *)v0[45];
  uint64_t v10 = (void *)v0[43];
  uint64_t v11 = v0[38];
  uint64_t v12 = v0[36];
  uint64_t v18 = v0[35];
  uint64_t v13 = v0[29];
  uint64_t v15 = v0[27];
  uint64_t v14 = v0[28];

  swift_willThrow();
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v18);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v16 = (uint64_t (*)(void))v0[1];
  return v16();
}

uint64_t sub_1002354E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  type metadata accessor for StreakSummary();
  v4[4] = swift_task_alloc();
  sub_100010218(&qword_1008044C0);
  v4[5] = swift_task_alloc();
  uint64_t v5 = sub_100010218(&qword_1008044C8);
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  uint64_t v6 = sub_100010218(&qword_1008044D0);
  v4[9] = v6;
  v4[10] = *(void *)(v6 - 8);
  v4[11] = swift_task_alloc();
  uint64_t v7 = sub_100010218(&qword_1008044D8);
  v4[12] = v7;
  v4[13] = *(void *)(v7 - 8);
  v4[14] = swift_task_alloc();
  uint64_t v8 = sub_100010218(&qword_1008044E0);
  v4[15] = v8;
  v4[16] = *(void *)(v8 - 8);
  v4[17] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Publishers.PrefetchStrategy();
  v4[18] = v9;
  v4[19] = *(void *)(v9 - 8);
  v4[20] = swift_task_alloc();
  uint64_t v10 = sub_100010218(&qword_1008044E8);
  v4[21] = v10;
  v4[22] = *(void *)(v10 - 8);
  v4[23] = swift_task_alloc();
  uint64_t v11 = sub_100010218(&qword_1008044F0);
  v4[24] = v11;
  v4[25] = *(void *)(v11 - 8);
  v4[26] = swift_task_alloc();
  uint64_t v12 = sub_100010218(&qword_1008044F8);
  v4[27] = v12;
  v4[28] = *(void *)(v12 - 8);
  v4[29] = swift_task_alloc();
  uint64_t v13 = sub_100010218(&qword_100804500);
  v4[30] = v13;
  v4[31] = *(void *)(v13 - 8);
  v4[32] = swift_task_alloc();
  return _swift_task_switch(sub_100235904, 0, 0);
}

uint64_t sub_100235904()
{
  uint64_t v1 = v0;
  uint64_t v20 = v0[28];
  uint64_t v21 = (char *)v0 + 348;
  uint64_t v19 = v0[27];
  uint64_t v17 = v0[29];
  uint64_t v18 = v0[25];
  uint64_t v16 = v0[24];
  uint64_t v13 = v0[23];
  uint64_t v14 = v0[26];
  uint64_t v2 = v0[21];
  uint64_t v15 = v0[22];
  uint64_t v3 = v0[19];
  uint64_t v4 = v0[20];
  uint64_t v5 = v0[18];
  uint64_t v6 = v1[16];
  uint64_t v7 = v1[17];
  uint64_t v8 = v1[15];
  swift_getKeyPath();
  _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v4, enum case for Publishers.PrefetchStrategy.byRequest(_:), v5);
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v7, enum case for Publishers.BufferingStrategy.dropOldest<A>(_:), v8);
  sub_100014488(&qword_100804508, &qword_1008044E8);
  Publisher.buffer(size:prefetch:whenFull:)();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v2);
  sub_100014488(&qword_100804510, &qword_1008044F0);
  Publisher<>.values.getter();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v14, v16);
  swift_release();
  AsyncPublisher.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v17, v19);
  *((_DWORD *)v1 + 86) = enum case for AsyncStream.Continuation.BufferingPolicy.bufferingNewest<A>(_:);
  uint64_t v9 = sub_100014488(&qword_100804518, &qword_100804500);
  uint64_t v10 = (void *)swift_task_alloc();
  v1[33] = v10;
  *uint64_t v10 = v1;
  v10[1] = sub_100235BF4;
  uint64_t v11 = v1[30];
  return dispatch thunk of AsyncIteratorProtocol.next()(v21, v11, v9);
}

uint64_t sub_100235BF4()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_100235F8C;
  }
  else {
    uint64_t v2 = sub_100235D08;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100235D08()
{
  *(unsigned char *)(v0 + 349) = *(unsigned char *)(v0 + 348);
  return _swift_task_switch(sub_100235D2C, 0, 0);
}

uint64_t sub_100235D2C()
{
  int v1 = *(unsigned __int8 *)(v0 + 349);
  if (v1 == 2)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 248) + 8))(*(void *)(v0 + 256), *(void *)(v0 + 240));
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else if (v1)
  {
    *(void *)(v0 + 280) = type metadata accessor for MainActor();
    *(void *)(v0 + 288) = static MainActor.shared.getter();
    uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100236010, v8, v7);
  }
  else
  {
    uint64_t v4 = sub_100014488(&qword_100804518, &qword_100804500);
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_100235BF4;
    uint64_t v6 = *(void *)(v0 + 240);
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 348, v6, v4);
  }
}

uint64_t sub_100235F8C()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 272);
  sub_100010218((uint64_t *)&unk_1007FC0D0);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_100236010()
{
  swift_release();
  if (qword_1007F6FC0 != -1) {
    swift_once();
  }
  return _swift_task_switch(sub_1002360A8, 0, 0);
}

uint64_t sub_1002360A8()
{
  *(void *)(v0 + 296) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100236134, v2, v1);
}

uint64_t sub_100236134()
{
  swift_release();
  *(void *)(v0 + 304) = qword_10083D540;
  return _swift_task_switch(sub_1002361A8, 0, 0);
}

uint64_t sub_1002361A8()
{
  *(void *)(v0 + 312) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100236234, v2, v1);
}

uint64_t sub_100236234()
{
  uint64_t v1 = *(unsigned int *)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v2 = *(void **)(v0 + 64);
  uint64_t v4 = *(void *)(v0 + 48);
  swift_release();
  *uint64_t v2 = 1;
  (*(void (**)(void *, uint64_t, uint64_t))(v3 + 104))(v2, v1, v4);
  *(void *)(v0 + 320) = sub_100010218(&qword_100804520);
  AsyncStream.init(_:bufferingPolicy:_:)();
  return _swift_task_switch(sub_100236318, 0, 0);
}

uint64_t sub_100236318()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[9];
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v4 = (void *)swift_task_alloc();
  v0[41] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002363F4;
  uint64_t v5 = v0[12];
  uint64_t v6 = v0[5];
  return AsyncStream.Iterator.next(isolation:)(v6, 0, 0, v5);
}

uint64_t sub_1002363F4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002364F0, 0, 0);
}

uint64_t sub_1002364F0()
{
  uint64_t v1 = v0[40];
  uint64_t v2 = (char *)v0[5];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(v2, 1, v1) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v0[13] + 8))(v0[14], v0[12]);
    uint64_t v3 = sub_100014488(&qword_100804518, &qword_100804500);
    uint64_t v4 = (void *)swift_task_alloc();
    v0[33] = (uint64_t)v4;
    *uint64_t v4 = v0;
    v4[1] = sub_100235BF4;
    uint64_t v5 = v0[30];
    return dispatch thunk of AsyncIteratorProtocol.next()((char *)v0 + 348, v5, v3);
  }
  else
  {
    char v6 = *v2;
    sub_1002376B4((uint64_t)&v2[*(int *)(v1 + 48)], v0[4]);
    uint64_t v7 = (void *)swift_task_alloc();
    v0[42] = (uint64_t)v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1002366B0;
    uint64_t v8 = v0[4];
    return sub_100234478(v8, v6);
  }
}

uint64_t sub_1002366B0()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = sub_100238044;
  }
  else
  {
    uint64_t v1 = sub_1002367C8;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1002367C8()
{
  sub_100237718(v0[4]);
  uint64_t v1 = (void *)swift_task_alloc();
  v0[41] = (uint64_t)v1;
  void *v1 = v0;
  v1[1] = sub_1002363F4;
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[5];
  return AsyncStream.Iterator.next(isolation:)(v3, 0, 0, v2);
}

uint64_t sub_1002369FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  type metadata accessor for MainActor();
  v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100236A98, v6, v5);
}

uint64_t sub_100236A98()
{
  uint64_t v1 = (void *)v0[5];
  uint64_t v3 = (void *)v0[3];
  uint64_t v2 = (const void *)v0[4];
  uint64_t v4 = (void *)v0[2];
  swift_release();
  v0[7] = _Block_copy(v2);
  uint64_t v11 = (uint64_t (*)(uint64_t))((char *)&dword_100804578 + dword_100804578);
  id v5 = v4;
  id v6 = v3;
  id v7 = v1;
  uint64_t v8 = (void *)swift_task_alloc();
  v0[8] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100236B7C;
  uint64_t v9 = v0[3];
  return v11(v9);
}

uint64_t sub_100236B7C()
{
  uint64_t v1 = *(void (***)(void))(*v0 + 56);
  uint64_t v2 = *(void **)(*v0 + 40);
  uint64_t v3 = *(void **)(*v0 + 24);
  uint64_t v4 = *(void **)(*v0 + 16);
  uint64_t v7 = *v0;
  swift_task_dealloc();

  v1[2](v1);
  _Block_release(v1);
  id v5 = *(uint64_t (**)(void))(v7 + 8);
  return v5();
}

uint64_t sub_100236E70(void *a1, void *a2, void *aBlock, void *a4)
{
  v4[3] = a2;
  v4[4] = a4;
  v4[2] = a1;
  v4[5] = _Block_copy(aBlock);
  id v8 = a1;
  id v9 = a2;
  id v10 = a4;
  return _swift_task_switch(sub_100236F08, 0, 0);
}

uint64_t sub_100236F08()
{
  uint64_t v2 = (void *)v0[4];
  uint64_t v1 = (void (**)(void, void))v0[5];
  uint64_t v4 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  id v5 = [v3 request];
  id v6 = [v5 content];

  id v7 = [v6 categoryIdentifier];
  uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v10 = v9;

  v11._countAndFlagsBits = v8;
  v11._object = v10;
  Swift::Int v12 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100793B50, v11);
  swift_bridgeObjectRelease();

  if (v12 == 1) {
    uint64_t v13 = 26;
  }
  else {
    uint64_t v13 = 0;
  }
  v1[2](v1, v13);
  _Block_release(v1);
  uint64_t v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t type metadata accessor for JournalNotificationsManager()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for JournalNotificationsManager.Action(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *id result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002371ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JournalNotificationsManager.Action()
{
  return &type metadata for JournalNotificationsManager.Action;
}

unint64_t sub_1002371E8()
{
  unint64_t result = qword_100804478;
  if (!qword_100804478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100804478);
  }
  return result;
}

id sub_10023723C(uint64_t a1, uint64_t a2, char a3)
{
  NSString v5 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = 0;
  id v6 = [v3 initWithBundleIdentifier:v5 allowPlaceholder:a3 & 1 error:&v10];

  if (v6)
  {
    id v7 = v10;
  }
  else
  {
    id v8 = v10;
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_10023731C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  id v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_1002373C0(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (unint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

void sub_1002374A4(uint64_t a1)
{
  sub_1002341A8(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_1002374AC()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_1008044A0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_100237540()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_1002375CC()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100237604(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v1 + 16);
  swift_errorRetain();
  return v3(a1);
}

uint64_t sub_100237640(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100237650()
{
  return swift_release();
}

const char *sub_100237658()
{
  return "isStreakReminderEnabled";
}

id sub_100237664@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isStreakReminderEnabled];
  *a2 = (_BYTE)result;
  return result;
}

id sub_100237698(unsigned __int8 *a1, id *a2)
{
  return [*a2 setIsStreakReminderEnabled:*a1];
}

uint64_t sub_1002376AC()
{
  return sub_1004BA8F8();
}

uint64_t sub_1002376B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StreakSummary();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_100237718(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StreakSummary();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_100237774()
{
  unint64_t result = qword_1007FC490;
  if (!qword_1007FC490)
  {
    type metadata accessor for Date();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FC490);
  }
  return result;
}

uint64_t sub_1002377D0()
{
  uint64_t v2 = (void *)v0[2];
  uint64_t v3 = (void *)v0[3];
  unint64_t v5 = (void *)v0[4];
  uint64_t v4 = (void *)v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_100052588;
  unint64_t v7 = (uint64_t (*)(void *, void *, void *, void *))((char *)&dword_100804538 + dword_100804538);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_10023789C()
{
  _Block_release(*(const void **)(v0 + 32));

  return swift_deallocObject();
}

uint64_t sub_1002378EC()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v4 = v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_10002C194;
  unint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_100804558 + dword_100804558);
  return v7(v2, v3, v5, v4);
}

uint64_t sub_1002379B4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  type metadata accessor for MainActor();
  v2[4] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[5] = v4;
  v2[6] = v3;
  return _swift_task_switch(sub_100237A4C, v4, v3);
}

uint64_t sub_100237A4C()
{
  uint64_t v1 = *(void *)(v0 + 24) + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_actionHandler;
  uint64_t v2 = *(int **)v1;
  *(void *)(v0 + 56) = *(void *)v1;
  *(void *)(v0 + 64) = *(void *)(v1 + 8);
  if (!v2)
  {
    swift_release();
    if (qword_1007F6BF0 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_100026A54(v17, (uint64_t)qword_1008043B0);
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v20 = 0;
      _os_log_impl((void *)&_mh_execute_header, v18, v19, "Received a notification response from outside the main app; ignoring.",
        v20,
        2u);
      swift_slowDealloc();
    }

    goto LABEL_21;
  }
  uint64_t v3 = *(void **)(v0 + 16);
  swift_retain();
  id v4 = [v3 actionIdentifier];
  uint64_t v5 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v7 = v6;

  v8._countAndFlagsBits = v5;
  v8._object = v7;
  unint64_t v9 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100793BA0, v8);
  swift_bridgeObjectRelease();
  if (v9 >= 2)
  {
    id v10 = [*(id *)(v0 + 16) actionIdentifier];
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v13 = v12;

    if (v11 == static String._unconditionallyBridgeFromObjectiveC(_:)() && v13 == v14)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v16 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0) {
        goto LABEL_20;
      }
    }
    id v21 = [*(id *)(v0 + 16) notification];
    id v22 = [v21 request];

    id v23 = [v22 content];
    id v24 = [v23 categoryIdentifier];

    uint64_t v25 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v27 = v26;

    v28._countAndFlagsBits = v25;
    v28._object = v27;
    Swift::Int v29 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100793B50, v28);
    swift_bridgeObjectRelease();
    if (v29 != 1)
    {
LABEL_20:
      sub_10001ABB8((uint64_t)v2);
      swift_release();
LABEL_21:
      os_log_type_t v33 = *(uint64_t (**)(void))(v0 + 8);
      return v33();
    }
    unint64_t v9 = 0;
  }
  id v30 = [*(id *)(v0 + 16) notification];
  *(void *)(v0 + 72) = v30;
  uint64_t v34 = (uint64_t (*)(id, unint64_t))((char *)v2 + *v2);
  uint64_t v31 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v31;
  *uint64_t v31 = v0;
  v31[1] = sub_100237E30;
  return v34(v30, v9);
}

uint64_t sub_100237E30()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 72);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_100237F70, v4, v3);
}

uint64_t sub_100237F70()
{
  sub_10001ABB8(*(void *)(v0 + 56));
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_100237FDC()
{
  unint64_t result = qword_100804590;
  if (!qword_100804590)
  {
    sub_10001B284(255, &qword_1007FDD58);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100804590);
  }
  return result;
}

uint64_t sub_100238048()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CloudKitStackConfiguration()
{
  return self;
}

id sub_100238288()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LiveActivitySceneDelegate();
  return [super dealloc];
}

uint64_t sub_100238350()
{
  return type metadata accessor for LiveActivitySceneDelegate();
}

uint64_t type metadata accessor for LiveActivitySceneDelegate()
{
  uint64_t result = qword_100804760;
  if (!qword_100804760) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002383A4()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_100238440(void *a1)
{
  uint64_t v2 = v1;
  type metadata accessor for ActivityScene();
  uint64_t v4 = swift_dynamicCastClass();
  if (v4)
  {
    uint64_t v5 = (void *)v4;
    uint64_t v35 = a1;
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v6, v7))
    {
      Swift::String v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "connecting scene", v8, 2u);
      swift_slowDealloc();
    }

    unsigned int v9 = [v5 SBUI_isHostedBySystemAperture];
    if (qword_1007F6DC8 != -1) {
      swift_once();
    }
    uint64_t v10 = qword_10083D360;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v12 = Strong;
      uint64_t v13 = *(void *)(v10 + 24);
      if (v9)
      {
        id v14 = objc_allocWithZone((Class)type metadata accessor for AudioRecordingDynamicIslandViewController());
        uint64_t v15 = swift_unknownObjectRetain();
        id v16 = sub_1005C5A54(v15, v13);
        uint64_t v17 = *(void **)(v2 + OBJC_IVAR____TtC7Journal25LiveActivitySceneDelegate_systemApertureElementProvider);
        *(void *)(v2 + OBJC_IVAR____TtC7Journal25LiveActivitySceneDelegate_systemApertureElementProvider) = v16;
        id v18 = v16;

        id v19 = v18;
        [v5 setSystemApertureElementViewControllerProvider:v19];

        swift_unknownObjectRelease();
        return;
      }
      id v22 = objc_allocWithZone((Class)type metadata accessor for ActivitySceneMetrics());
      ActivitySceneMetrics.init(size:cornerRadius:)();
      dispatch thunk of ActivityScene.resolvedMetrics.setter();
      id v23 = [self systemBlackColor];
      id v24 = [v23 colorWithAlphaComponent:0.9];

      dispatch thunk of ActivityScene.backgroundTintColor.setter();
      id v25 = [objc_allocWithZone((Class)UIWindow) initWithWindowScene:v5];
      uint64_t v26 = OBJC_IVAR____TtC7Journal25LiveActivitySceneDelegate_window;
      id v27 = *(void **)(v2 + OBJC_IVAR____TtC7Journal25LiveActivitySceneDelegate_window);
      *(void *)(v2 + OBJC_IVAR____TtC7Journal25LiveActivitySceneDelegate_window) = v25;

      Swift::String v28 = *(void **)(v2 + v26);
      if (v28)
      {
        Swift::Int v29 = (objc_class *)type metadata accessor for AudioRecordingLiveActivityBannerViewController();
        uint64_t ObjectType = swift_getObjectType();
        swift_unknownObjectRetain();
        id v31 = v28;
        id v32 = sub_10002695C(v12, v29, ObjectType, v13);
        [v31 setRootViewController:v32];

        os_log_type_t v33 = *(void **)(v2 + v26);
      }
      else
      {
        os_log_type_t v33 = 0;
      }
      id v34 = v33;
      [v34 makeKeyAndVisible];

      swift_unknownObjectRelease();
    }
  }
  else
  {
    uint64_t v35 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v35, v20))
    {
      id v21 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v21 = 0;
      _os_log_impl((void *)&_mh_execute_header, v35, v20, "not an activity scene", v21, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_1002387DC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v12 = a4;
  uint64_t v13 = a5;
  uint64_t v7 = sub_100010218(&qword_100804800);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_10023931C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v14) = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v5)
  {
    uint64_t v14 = v12;
    uint64_t v15 = v13;
    char v16 = 1;
    sub_100090E8C();
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

uint64_t sub_10023896C()
{
  if (*v0) {
    return 0x74706D6F7270;
  }
  else {
    return 1701869940;
  }
}

uint64_t sub_10023899C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100238EA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1002389C4(uint64_t a1)
{
  unint64_t v2 = sub_10023931C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100238A00(uint64_t a1)
{
  unint64_t v2 = sub_10023931C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100238A3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = sub_100238F80(a1);
  if (!v2)
  {
    *(void *)a2 = result;
    *(unsigned char *)(a2 + 8) = v5 & 1;
    *(void *)(a2 + 16) = v6;
    *(void *)(a2 + 24) = v7;
  }
  return result;
}

uint64_t sub_100238A74(void *a1)
{
  return sub_1002387DC(a1, *(void *)v1, *(unsigned __int8 *)(v1 + 8), *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t sub_100238AA0()
{
  return swift_release();
}

id sub_100238AB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s15ReflectionAssetCMa();
  return [super dealloc];
}

uint64_t sub_100238AF8()
{
  return _s15ReflectionAssetCMa();
}

uint64_t _s15ReflectionAssetCMa()
{
  uint64_t result = qword_100804798;
  if (!qword_100804798) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100238B4C()
{
  return swift_updateClassMetadata2();
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwxx(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 24);
  if (v1 >> 60 != 15) {
    return sub_100040DD0(*(void *)(result + 16), v1);
  }
  return result;
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = (uint64_t *)(a2 + 16);
  unint64_t v4 = *(void *)(a2 + 24);
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v3;
  }
  else
  {
    uint64_t v5 = *v3;
    sub_100040D64(*v3, *(void *)(a2 + 24));
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v4;
  }
  return a1;
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  unint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = a2 + 2;
  unint64_t v6 = a2[3];
  if (*(void *)(a1 + 24) >> 60 != 15)
  {
    if (v6 >> 60 != 15)
    {
      uint64_t v8 = *v5;
      sub_100040D64(*v5, a2[3]);
      uint64_t v9 = *(void *)(a1 + 16);
      unint64_t v10 = *(void *)(a1 + 24);
      *(void *)(a1 + 16) = v8;
      *(void *)(a1 + 24) = v6;
      sub_100040DD0(v9, v10);
      return a1;
    }
    sub_1001F2560(a1 + 16);
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
LABEL_6:
    *unint64_t v4 = *(_OWORD *)v5;
    return a1;
  }
  uint64_t v7 = *v5;
  sub_100040D64(*v5, a2[3]);
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v6;
  return a1;
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  unint64_t v4 = (_OWORD *)(a1 + 16);
  uint64_t v5 = (void *)(a2 + 16);
  unint64_t v6 = *(void *)(a1 + 24);
  if (v6 >> 60 != 15)
  {
    unint64_t v7 = *(void *)(a2 + 24);
    if (v7 >> 60 != 15)
    {
      uint64_t v8 = *(void *)(a1 + 16);
      *(void *)(a1 + 16) = *v5;
      *(void *)(a1 + 24) = v7;
      sub_100040DD0(v8, v6);
      return a1;
    }
    sub_1001F2560(a1 + 16);
  }
  *unint64_t v4 = *(_OWORD *)v5;
  return a1;
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 12);
  }
  uint64_t v3 = *(void *)(a1 + 24) >> 60;
  if (((4 * v3) & 0xC) != 0) {
    int v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s15ReflectionAssetC14ReflectionDataVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 12;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2)
    {
      *(void *)(result + 16) = 0;
      *(void *)(result + 24) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *_s15ReflectionAssetC14ReflectionDataVMa()
{
  return &_s15ReflectionAssetC14ReflectionDataVN;
}

unint64_t sub_100238E28()
{
  unint64_t result = qword_1008047A8;
  if (!qword_1008047A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008047A8);
  }
  return result;
}

uint64_t sub_100238E7C()
{
  return swift_retain();
}

uint64_t sub_100238E8C(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling15ReflectionAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_100238EA4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x74706D6F7270 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_100238F80(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_1008047F0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = a1[3];
  sub_10002E0BC(a1, v7);
  sub_10023931C();
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (!v1)
  {
    v9[16] = 0;
    uint64_t v7 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
    v9[15] = 1;
    sub_100090D2C();
    KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  }
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  return v7;
}

char *sub_100239148(char a1, uint64_t a2, void *a3)
{
  uint64_t v6 = type metadata accessor for UUID();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v20 - v11;
  UUID.init()();
  *(void *)((char *)objc_allocWithZone((Class)_s15ReflectionAssetCMa())
            + OBJC_IVAR____TtCC7Journal10Journaling15ReflectionAsset_metadata) = 0;
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v12, v6);
  id v13 = sub_1001817C4((uint64_t)v9, 14, a1);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
  uint64_t v14 = (char *)v13;
  uint64_t v15 = sub_10004243C();
  uint64_t v17 = v16;

  sub_100010218(&qword_1008047E8);
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 72) = 0;
  *(void *)(v18 + 80) = v15;
  *(void *)(v18 + 88) = v17;
  *(unsigned char *)(v18 + 96) = 1;
  *(void *)(v18 + 24) = 0;
  *(void *)(v18 + 32) = 0;
  *(void *)(v18 + 16) = 0;
  *(_OWORD *)(v18 + 40) = xmmword_1006DF8C0;
  *(void *)(v18 + 56) = 0xB000000000000000;
  *(void *)(v18 + 64) = a2;
  *(void *)&v14[OBJC_IVAR____TtCC7Journal10Journaling15ReflectionAsset_metadata] = v18;

  swift_release();
  return v14;
}

unint64_t sub_10023931C()
{
  unint64_t result = qword_1008047F8;
  if (!qword_1008047F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008047F8);
  }
  return result;
}

unsigned char *_s15ReflectionAssetC14ReflectionDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10023943CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s15ReflectionAssetC14ReflectionDataV10CodingKeysOMa()
{
  return &_s15ReflectionAssetC14ReflectionDataV10CodingKeysON;
}

unint64_t sub_100239478()
{
  unint64_t result = qword_100804808;
  if (!qword_100804808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100804808);
  }
  return result;
}

unint64_t sub_1002394D0()
{
  unint64_t result = qword_100804810;
  if (!qword_100804810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100804810);
  }
  return result;
}

unint64_t sub_100239528()
{
  unint64_t result = qword_100804818;
  if (!qword_100804818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100804818);
  }
  return result;
}

uint64_t sub_10023957C(uint64_t a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  uint64_t v3 = type metadata accessor for URL();
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  return _swift_task_switch(sub_10023963C, 0, 0);
}

uint64_t sub_10023963C()
{
  if (URL.pathExtension.getter() == 6709603 && v1 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v3 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v3 & 1) == 0)
    {
      sub_100239B2C();
      swift_allocError();
      *unsigned int v4 = 2;
      swift_willThrow();
LABEL_13:
      swift_task_dealloc();
      id v21 = (uint64_t (*)(void))v0[1];
      return v21();
    }
  }
  id v5 = objc_allocWithZone((Class)AVURLAsset);
  URL._bridgeToObjectiveC()(v6);
  uint64_t v8 = v7;
  id v9 = [v5 initWithURL:v7 options:0];
  v0[7] = v9;

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v10 = objc_allocWithZone((Class)AVAssetExportSession);
  id v11 = v9;
  NSString v12 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v13 = [v10 initWithAsset:v11 presetName:v12];
  v0[8] = v13;

  if (!v13)
  {
    sub_100239B2C();
    swift_allocError();
    *uint64_t v20 = 2;
    swift_willThrow();

    goto LABEL_13;
  }
  uint64_t v15 = v0[5];
  uint64_t v14 = v0[6];
  uint64_t v16 = v0[4];
  URL.deletingPathExtension()();
  URL.appendingPathExtension(_:)();
  uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
  v0[9] = v17;
  v0[10] = (v15 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v17(v14, v16);
  uint64_t v18 = (void *)swift_task_alloc();
  v0[11] = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_10023990C;
  uint64_t v19 = v0[2];
  return AVAssetExportSession.export(to:as:isolation:)(v19, AVFileTypeAppleM4A, 0, 0);
}

uint64_t sub_10023990C()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0) {
    BOOL v2 = sub_100239A94;
  }
  else {
    BOOL v2 = sub_100239A20;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_100239A20()
{
  uint64_t v1 = *(void **)(v0 + 64);

  swift_task_dealloc();
  BOOL v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_100239A94()
{
  uint64_t v1 = *(void (**)(uint64_t, uint64_t))(v0 + 72);
  BOOL v2 = *(void **)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v4 = *(void *)(v0 + 16);

  v1(v4, v3);
  swift_task_dealloc();
  id v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

unint64_t sub_100239B2C()
{
  unint64_t result = qword_100804828;
  if (!qword_100804828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100804828);
  }
  return result;
}

double *sub_100239B80(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_100095F50(0, v1, 0);
  unint64_t result = (double *)sub_10023D6D8(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = 0;
  char v8 = v7 & 1;
  uint64_t v9 = a1 + 64;
  uint64_t v25 = v4;
  int64_t v26 = v1;
  uint64_t v27 = a1 + 64;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v12 = (unint64_t)v5 >> 6;
    if ((*(void *)(v9 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_31;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_32;
    }
    uint64_t v28 = v4;
    char v24 = v8;
    id v13 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v5);
    uint64_t v14 = *v13;
    uint64_t v15 = (void *)v13[1];
    swift_bridgeObjectRetain();
    v29._countAndFlagsBits = v14;
    v29._object = v15;
    unint64_t result = (double *)sub_10023D788(v29);
    if (result == 12) {
      char v16 = 11;
    }
    else {
      char v16 = (char)result;
    }
    double v18 = _swiftEmptyArrayStorage[2];
    double v17 = _swiftEmptyArrayStorage[3];
    if (*(void *)&v18 >= *(void *)&v17 >> 1) {
      unint64_t result = (double *)sub_100095F50(*(void *)&v17 > 1uLL, *(void *)&v18 + 1, 1);
    }
    *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v18 + 1;
    *((unsigned char *)&_swiftEmptyArrayStorage[4] + *(void *)&v18) = v16;
    int64_t v10 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v10) {
      goto LABEL_33;
    }
    uint64_t v9 = a1 + 64;
    uint64_t v19 = *(void *)(v27 + 8 * v12);
    if ((v19 & (1 << v5)) == 0) {
      goto LABEL_34;
    }
    if (*(_DWORD *)(a1 + 36) != v28) {
      goto LABEL_35;
    }
    unint64_t v20 = v19 & (-2 << (v5 & 0x3F));
    if (v20)
    {
      int64_t v10 = __clz(__rbit64(v20)) | v5 & 0xFFFFFFFFFFFFFFC0;
      int64_t v11 = v26;
    }
    else
    {
      unint64_t v21 = v12 + 1;
      unint64_t v22 = (unint64_t)(v10 + 63) >> 6;
      int64_t v11 = v26;
      if (v12 + 1 < v22)
      {
        unint64_t v23 = *(void *)(v27 + 8 * v21);
        if (!v23)
        {
          unint64_t v21 = v12 + 2;
          if (v12 + 2 >= v22) {
            goto LABEL_4;
          }
          unint64_t v23 = *(void *)(v27 + 8 * v21);
          if (!v23)
          {
            unint64_t v21 = v12 + 3;
            if (v12 + 3 >= v22) {
              goto LABEL_4;
            }
            unint64_t v23 = *(void *)(v27 + 8 * v21);
            if (!v23)
            {
              while (v22 - 4 != v12)
              {
                unint64_t v23 = *(void *)(a1 + 96 + 8 * v12++);
                if (v23)
                {
                  unint64_t result = (double *)sub_1000733B8(v5, v28, v24 & 1);
                  unint64_t v21 = v12 + 3;
                  goto LABEL_20;
                }
              }
              unint64_t result = (double *)sub_1000733B8(v5, v28, v24 & 1);
              goto LABEL_4;
            }
          }
        }
LABEL_20:
        int64_t v10 = __clz(__rbit64(v23)) + (v21 << 6);
      }
    }
LABEL_4:
    char v8 = 0;
    ++v6;
    uint64_t v4 = v25;
    uint64_t v5 = v10;
    if (v6 == v11) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_100239E14()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100804830);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100804830);
  if (qword_1007F7D18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB48);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_100239EDC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Logger();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  CGFloat v359 = (char *)&v327 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v7 - 8);
  CGFloat v351 = (char *)&v327 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  CGFloat v361 = (char *)&v327 - v10;
  uint64_t v365 = type metadata accessor for Date();
  int64_t v11 = *(char **)(v365 - 8);
  __chkstk_darwin(v365);
  CGFloat v341 = (char *)&v327 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  CGFloat v354 = (char *)&v327 - v14;
  __chkstk_darwin(v15);
  CGFloat v342 = (char *)&v327 - v16;
  uint64_t v386 = 0;
  uint64_t v17 = type metadata accessor for UUID();
  uint64_t v338 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v327 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  CGFloat v344 = (char *)&v327 - v21;
  __chkstk_darwin(v22);
  CGFloat v362 = (char *)&v327 - v23;
  uint64_t v378 = sub_100010218((uint64_t *)&unk_1007FEB40);
  __chkstk_darwin(v378);
  CGFloat v364 = (char *)&v327 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v377 = (uint64_t)&v327 - v26;
  uint64_t v27 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v27 - 8);
  CGFloat v340 = (char *)&v327 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  id v31 = (char *)&v327 - v30;
  __chkstk_darwin(v32);
  id v34 = (char *)&v327 - v33;
  __chkstk_darwin(v35);
  uint64_t v367 = (uint64_t)&v327 - v36;
  __chkstk_darwin(v37);
  CGFloat v356 = (char *)&v327 - v38;
  __chkstk_darwin(v39);
  uint64_t v379 = (uint64_t)&v327 - v40;
  __chkstk_darwin(v41);
  CGFloat v381 = (char *)&v327 - v42;
  __chkstk_darwin(v43);
  uint64_t v372 = (uint64_t)&v327 - v44;
  *(void *)&double v46 = __chkstk_darwin(v45).n128_u64[0];
  uint64_t v382 = (uint64_t)&v327 - v47;
  id result = [a1 userInfo:v46];
  if (!result) {
    return result;
  }
  uint64_t v49 = result;
  CGFloat v360 = v34;
  CGFloat v348 = v31;
  uint64_t v50 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v397 = 0xD000000000000027;
  unint64_t v398 = 0x8000000100692D60;
  CGFloat v396 = &_swiftEmptySetSingleton;
  uint64_t v404 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v405 = v51;
  AnyHashable.init<A>(_:)();
  uint64_t v52 = *(void *)(v50 + 16);
  uint64_t v339 = v50;
  if (v52 && (unint64_t v53 = sub_10001B738((uint64_t)&v390), (v54 & 1) != 0))
  {
    sub_10001B648(*(void *)(v50 + 56) + 32 * v53, (uint64_t)&v393);
  }
  else
  {
    Swift::String v393 = (Swift::String)0;
    v394[0] = 0u;
  }
  sub_10001DF0C((uint64_t)&v390);
  uint64_t v385 = v2;
  uint64_t v346 = v5;
  uint64_t v347 = v4;
  uint64_t v380 = v17;
  CGFloat v330 = v19;
  if (*((void *)&v394[0] + 1))
  {
    sub_100010218(&qword_1007FB910);
    if (swift_dynamicCast())
    {
      uint64_t v55 = v404;
      if ((v404 & 0xC000000000000001) != 0)
      {
        if (__CocoaSet.count.getter() > 0)
        {
          v390._id countAndFlagsBits = 40;
          v390._object = (void *)0xE100000000000000;
          uint64_t v56 = __CocoaSet.count.getter();
LABEL_14:
          CGFloat v383 = v11;
          v393._id countAndFlagsBits = v56;
          v57._id countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
          String.append(_:)(v57);
          swift_bridgeObjectRelease();
          v58._id countAndFlagsBits = 0x73747265736E6920;
          v58._object = (void *)0xEB00000000203A29;
          String.append(_:)(v58);
          String.append(_:)(v390);
          swift_bridgeObjectRelease();
          if ((v55 & 0xC000000000000001) != 0)
          {
            __CocoaSet.makeIterator()();
            sub_10001B284(0, &qword_1008113A0);
            sub_100082CD4();
            Set.Iterator.init(_cocoa:)();
            uint64_t v55 = v399;
            uint64_t v59 = v400;
            uint64_t v60 = v401;
            Class v61 = v402;
            unint64_t v62 = v403;
          }
          else
          {
            Class v61 = 0;
            uint64_t v245 = -1 << *(unsigned char *)(v55 + 32);
            uint64_t v59 = v55 + 56;
            uint64_t v246 = ~v245;
            uint64_t v247 = -v245;
            if (v247 < 64) {
              uint64_t v248 = ~(-1 << v247);
            }
            else {
              uint64_t v248 = -1;
            }
            unint64_t v62 = v248 & *(void *)(v55 + 56);
            uint64_t v60 = (char *)v246;
          }
          CGFloat v387 = (void (**)(void, void, void, void))(v55 & 0x7FFFFFFFFFFFFFFFLL);
          CGFloat v376 = v60;
          int64_t v249 = (unint64_t)(v60 + 64) >> 6;
          CGFloat v250 = &selRef_drawMapRect_zoomScale_inContext_;
          CGFloat v384 = (char *)&type metadata for Swift.AnyObject + 8;
          if ((v55 & 0x8000000000000000) == 0) {
            goto LABEL_226;
          }
LABEL_219:
          uint64_t v251 = __CocoaSet.Iterator.next()();
          if (!v251) {
            goto LABEL_305;
          }
          v393._id countAndFlagsBits = v251;
          sub_10001B284(0, &qword_1008113A0);
          swift_unknownObjectRetain();
          swift_dynamicCast();
          id countAndFlagsBits = (id)v390._countAndFlagsBits;
          swift_unknownObjectRelease();
          CGFloat v253 = v61;
          CGFloat v389 = v62;
          if (!countAndFlagsBits) {
            goto LABEL_305;
          }
          while (1)
          {
            CGFloat v388 = v253;
            v390._id countAndFlagsBits = 2107914;
            v390._object = (void *)0xE300000000000000;
            v258._id countAndFlagsBits = sub_1001903F4();
            String.append(_:)(v258);
            swift_bridgeObjectRelease();
            String.append(_:)(v390);
            swift_bridgeObjectRelease();
            type metadata accessor for JournalEntryAssetMO();
            uint64_t v259 = swift_dynamicCastClass();
            if (!v259) {
              goto LABEL_224;
            }
            CGFloat v260 = (void *)v259;
            id v261 = countAndFlagsBits;
            id v262 = [v260 entry];
            if (v262)
            {
              CGFloat v263 = v262;
              id v264 = [v262 v250[457]];
            }
            else
            {
              id v264 = 0;
            }
            id v265 = [*(id *)(v385 + 32) v250[457]];
            id countAndFlagsBits = v265;
            if (v264)
            {
              if (!v265)
              {

                goto LABEL_225;
              }
              sub_10001B284(0, (unint64_t *)&qword_100800A40);
              id v266 = v264;
              char v267 = static NSObject.== infix(_:_:)();

              CGFloat v250 = &selRef_drawMapRect_zoomScale_inContext_;
              if ((v267 & 1) == 0)
              {

                goto LABEL_225;
              }
            }
            else if (v265)
            {

LABEL_224:
LABEL_225:
              Class v61 = v388;
              unint64_t v62 = (unint64_t)v389;
              if (v55 < 0) {
                goto LABEL_219;
              }
              goto LABEL_226;
            }
            id v268 = [v260 assetType];
            if (v268)
            {
              CGFloat v269 = v268;
              uint64_t v270 = static String._unconditionallyBridgeFromObjectiveC(_:)();
              uint64_t v272 = v271;

              if (v270 == 0x697463656C666572 && v272 == 0xEA00000000006E6FLL)
              {
                swift_bridgeObjectRelease();
LABEL_257:
                Swift::Int v274 = 4;
                goto LABEL_259;
              }
              char v273 = _stringCompareWithSmolCheck(_:_:expecting:)();
              swift_bridgeObjectRelease();
              if (v273) {
                goto LABEL_257;
              }
            }
            Swift::Int v274 = 1;
LABEL_259:
            sub_10054DCC4(&v390, v274);

            Class v61 = v388;
            unint64_t v62 = (unint64_t)v389;
            CGFloat v250 = &selRef_drawMapRect_zoomScale_inContext_;
            if (v55 < 0) {
              goto LABEL_219;
            }
LABEL_226:
            if (v62)
            {
              CGFloat v389 = ((v62 - 1) & v62);
              unint64_t v254 = __clz(__rbit64(v62)) | ((void)v61 << 6);
              CGFloat v253 = v61;
            }
            else
            {
              int64_t v255 = (int64_t)(v61 + 1);
              if (__OFADD__(v61, 1))
              {
                __break(1u);
                goto LABEL_319;
              }
              if (v255 >= v249) {
                goto LABEL_305;
              }
              unint64_t v256 = *(void *)(v59 + 8 * v255);
              CGFloat v253 = v61 + 1;
              if (!v256)
              {
                CGFloat v253 = v61 + 2;
                if ((uint64_t)(v61 + 2) >= v249) {
                  goto LABEL_305;
                }
                unint64_t v256 = *(void *)(v59 + 8 * (void)v253);
                if (!v256)
                {
                  CGFloat v253 = v61 + 3;
                  if ((uint64_t)(v61 + 3) >= v249) {
                    goto LABEL_305;
                  }
                  unint64_t v256 = *(void *)(v59 + 8 * (void)v253);
                  if (!v256)
                  {
                    CGFloat v253 = v61 + 4;
                    if ((uint64_t)(v61 + 4) >= v249) {
                      goto LABEL_305;
                    }
                    unint64_t v256 = *(void *)(v59 + 8 * (void)v253);
                    if (!v256)
                    {
                      CGFloat v257 = v61 + 5;
                      do
                      {
                        if ((char *)v249 == v257) {
                          goto LABEL_305;
                        }
                        unint64_t v256 = *(void *)(v59 + 8 * (void)v257++);
                      }
                      while (!v256);
                      CGFloat v253 = v257 - 1;
                    }
                  }
                }
              }
              CGFloat v389 = ((v256 - 1) & v256);
              unint64_t v254 = __clz(__rbit64(v256)) + ((void)v253 << 6);
            }
            id countAndFlagsBits = *(id *)(*(void *)(v55 + 48) + 8 * v254);
            if (!countAndFlagsBits) {
              goto LABEL_305;
            }
          }
        }
      }
      else
      {
        uint64_t v56 = *(void *)(v404 + 16);
        if (v56)
        {
          v390._id countAndFlagsBits = 40;
          v390._object = (void *)0xE100000000000000;
          goto LABEL_14;
        }
      }
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_10001457C((uint64_t)&v393, &qword_1007FAD50);
  }
  uint64_t v63 = v339;
  while (1)
  {
    v393._id countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v393._object = v64;
    AnyHashable.init<A>(_:)();
    sub_1003F2608((uint64_t)&v390, v63, &v393);
    sub_10001DF0C((uint64_t)&v390);
    if (*((void *)&v394[0] + 1))
    {
      sub_100010218(&qword_1007FB910);
      if (swift_dynamicCast())
      {
        uint64_t v65 = (void *)v404;
        goto LABEL_23;
      }
    }
    else
    {
      sub_10001457C((uint64_t)&v393, &qword_1007FAD50);
    }
    uint64_t v65 = &_swiftEmptySetSingleton;
LABEL_23:
    v393._id countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
    v393._object = v66;
    AnyHashable.init<A>(_:)();
    sub_1003F2608((uint64_t)&v390, v63, &v393);
    sub_10001DF0C((uint64_t)&v390);
    if (!*((void *)&v394[0] + 1))
    {
      sub_10001457C((uint64_t)&v393, &qword_1007FAD50);
LABEL_27:
      unint64_t v67 = &_swiftEmptySetSingleton;
      goto LABEL_28;
    }
    sub_100010218(&qword_1007FB910);
    if (!swift_dynamicCast()) {
      goto LABEL_27;
    }
    unint64_t v67 = (void *)v404;
LABEL_28:
    sub_10023CF34((unint64_t)v67, v65);
    uint64_t v69 = v68;
    unint64_t v70 = v68 & 0xC000000000000001;
    if ((v68 & 0xC000000000000001) != 0)
    {
      if (__CocoaSet.count.getter() < 1) {
        goto LABEL_33;
      }
    }
    else if (*(uint64_t *)(v68 + 16) < 1)
    {
LABEL_33:
      swift_bridgeObjectRelease();
      CGFloat v72 = v359;
      goto LABEL_203;
    }
    v390._id countAndFlagsBits = 0;
    v390._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(22);
    swift_bridgeObjectRelease();
    v390._id countAndFlagsBits = 10;
    v390._object = (void *)0xE100000000000000;
    uint64_t v71 = v70 ? __CocoaSet.count.getter() : *(void *)(v69 + 16);
    v393._id countAndFlagsBits = v71;
    v73._id countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v73);
    swift_bridgeObjectRelease();
    v74._object = (void *)0x8000000100692DB0;
    v74._id countAndFlagsBits = 0xD000000000000013;
    String.append(_:)(v74);
    String.append(_:)(v390);
    swift_bridgeObjectRelease();
    if (v70)
    {
      __CocoaSet.makeIterator()();
      sub_10001B284(0, &qword_1008113A0);
      sub_100082CD4();
      Set.Iterator.init(_cocoa:)();
      uint64_t v69 = v404;
      uint64_t v358 = v405;
      uint64_t v76 = v406;
      int64_t v75 = (int64_t)v407;
      unint64_t v77 = v408;
    }
    else
    {
      int64_t v75 = 0;
      uint64_t v78 = -1 << *(unsigned char *)(v69 + 32);
      uint64_t v79 = *(void *)(v69 + 56);
      uint64_t v358 = v69 + 56;
      uint64_t v76 = ~v78;
      uint64_t v80 = -v78;
      uint64_t v81 = v80 < 64 ? ~(-1 << v80) : -1;
      unint64_t v77 = v81 & v79;
    }
    uint64_t v337 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text;
    uint64_t v328 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_textChanged;
    uint64_t v336 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_dateSource;
    uint64_t v345 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked;
    uint64_t v366 = v2 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_date;
    swift_beginAccess();
    uint64_t v355 = v69 & 0x7FFFFFFFFFFFFFFFLL;
    int64_t v357 = (unint64_t)(v76 + 64) >> 6;
    CGFloat v389 = v394;
    CGFloat v72 = (char *)&v391;
    CGFloat v387 = (void (**)(void, void, void, void))(v338 + 56);
    CGFloat v374 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v338 + 48);
    CGFloat v363 = (void (**)(uint64_t, uint64_t))(v338 + 8);
    CGFloat v349 = (void (**)(char *, uint64_t, uint64_t))(v338 + 32);
    CGFloat v350 = (void (**)(void))(v11 + 32);
    CGFloat v352 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56);
    CGFloat v343 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
    CGFloat v331 = (void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    CGFloat v332 = (void (**)(char *, uint64_t))(v11 + 8);
    CGFloat v333 = (void (**)(uint64_t, char *, uint64_t))(v11 + 40);
    CGFloat v329 = (void (**)(uint64_t, char *, uint64_t))(v11 + 24);
    CGFloat v370 = (char *)&type metadata for Any + 8;
    CGFloat v334 = "";
    CGFloat v335 = "reakEvent";
    CGFloat v353 = (char *)&type metadata for Swift.AnyObject + 8;
    uint64_t v371 = v76;
    uint64_t v373 = v69;
LABEL_43:
    if (v69 < 0) {
      break;
    }
    if (!v77)
    {
      int64_t v83 = v75 + 1;
      if (!__OFADD__(v75, 1))
      {
        if (v83 >= v357) {
          goto LABEL_202;
        }
        unint64_t v86 = *(void *)(v358 + 8 * v83);
        if (!v86)
        {
          int64_t v87 = v75 + 2;
          if (v75 + 2 >= v357) {
            goto LABEL_202;
          }
          unint64_t v86 = *(void *)(v358 + 8 * v87);
          if (v86) {
            goto LABEL_56;
          }
          int64_t v87 = v75 + 3;
          if (v75 + 3 >= v357) {
            goto LABEL_202;
          }
          unint64_t v86 = *(void *)(v358 + 8 * v87);
          if (v86)
          {
LABEL_56:
            int64_t v83 = v87;
          }
          else
          {
            int64_t v83 = v75 + 4;
            if (v75 + 4 >= v357) {
              goto LABEL_202;
            }
            unint64_t v86 = *(void *)(v358 + 8 * v83);
            if (!v86)
            {
              CGFloat v173 = (char *)(v75 + 5);
              do
              {
                if ((char *)v357 == v173) {
                  goto LABEL_202;
                }
                unint64_t v86 = *(void *)(v358 + 8 * (void)v173++);
              }
              while (!v86);
              int64_t v83 = (int64_t)(v173 - 1);
            }
          }
        }
        CGFloat v384 = (char *)((v86 - 1) & v86);
        unint64_t v82 = __clz(__rbit64(v86)) + (v83 << 6);
        goto LABEL_58;
      }
      __break(1u);
LABEL_316:
      __break(1u);
LABEL_317:
      swift_once();
      goto LABEL_308;
    }
    CGFloat v384 = (char *)((v77 - 1) & v77);
    unint64_t v82 = __clz(__rbit64(v77)) | (v75 << 6);
    int64_t v83 = v75;
LABEL_58:
    CGFloat v85 = (char *)*(id *)(*(void *)(v69 + 48) + 8 * v82);
    if (!v85) {
      goto LABEL_202;
    }
LABEL_59:
    CGFloat v383 = (char *)v83;
    v390._id countAndFlagsBits = 2107914;
    v390._object = (void *)0xE300000000000000;
    v88._id countAndFlagsBits = sub_1001903F4();
    String.append(_:)(v88);
    swift_bridgeObjectRelease();
    v89._id countAndFlagsBits = 58;
    v89._object = (void *)0xE100000000000000;
    String.append(_:)(v89);
    String.append(_:)(v390);
    swift_bridgeObjectRelease();
    CGFloat v388 = v85;
    id v90 = [v85 changedValuesForCurrentEvent];
    uint64_t v91 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    int64_t v92 = 0;
    uint64_t v93 = v91 + 64;
    uint64_t v94 = 1 << *(unsigned char *)(v91 + 32);
    if (v94 < 64) {
      uint64_t v95 = ~(-1 << v94);
    }
    else {
      uint64_t v95 = -1;
    }
    unint64_t v96 = v95 & *(void *)(v91 + 64);
    int64_t v97 = (unint64_t)(v94 + 63) >> 6;
    CGFloat v376 = (char *)(v97 - 1);
    if (v96)
    {
LABEL_63:
      unint64_t v98 = __clz(__rbit64(v96));
      v96 &= v96 - 1;
      unint64_t v99 = v98 | (v92 << 6);
LABEL_64:
      uint64_t v100 = *(void *)(v91 + 56);
      CGFloat v101 = (uint64_t *)(*(void *)(v91 + 48) + 16 * v99);
      double v102 = (void *)v101[1];
      v393._id countAndFlagsBits = *v101;
      v393._object = v102;
      sub_10001B648(v100 + 32 * v99, (uint64_t)v389);
      swift_bridgeObjectRetain();
      goto LABEL_74;
    }
    while (1)
    {
      int64_t v103 = v92 + 1;
      if (__OFADD__(v92, 1)) {
        break;
      }
      if (v103 < v97)
      {
        unint64_t v104 = *(void *)(v93 + 8 * v103);
        if (v104) {
          goto LABEL_68;
        }
        v92 += 2;
        if (v103 + 1 >= v97)
        {
          int64_t v92 = v103;
        }
        else
        {
          unint64_t v104 = *(void *)(v93 + 8 * v92);
          if (v104)
          {
            ++v103;
LABEL_68:
            unint64_t v96 = (v104 - 1) & v104;
            unint64_t v99 = __clz(__rbit64(v104)) + (v103 << 6);
            int64_t v92 = v103;
            goto LABEL_64;
          }
          if (v103 + 2 < v97)
          {
            unint64_t v104 = *(void *)(v93 + 8 * (v103 + 2));
            if (v104)
            {
              v103 += 2;
              goto LABEL_68;
            }
            int64_t v110 = v103 + 3;
            if (v103 + 3 >= v97)
            {
              int64_t v92 = v103 + 2;
            }
            else
            {
              unint64_t v104 = *(void *)(v93 + 8 * v110);
              if (v104)
              {
                v103 += 3;
                goto LABEL_68;
              }
              while (1)
              {
                int64_t v103 = v110 + 1;
                if (__OFADD__(v110, 1)) {
                  goto LABEL_316;
                }
                if (v103 >= v97) {
                  break;
                }
                unint64_t v104 = *(void *)(v93 + 8 * v103);
                ++v110;
                if (v104) {
                  goto LABEL_68;
                }
              }
              int64_t v92 = (int64_t)v376;
            }
          }
        }
      }
      unint64_t v96 = 0;
      memset(v394, 0, sizeof(v394));
      Swift::String v393 = (Swift::String)0;
LABEL_74:
      sub_10002C4EC((uint64_t)&v393, (uint64_t)&v390, &qword_100804850);
      object = v390._object;
      if (!v390._object)
      {
        swift_release();
        CGFloat v111 = v388;
        id v112 = [v388 changedValuesForCurrentEvent];
        uint64_t v113 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v114 = v386;
        CGFloat v115 = sub_100239B80(v113);
        uint64_t v386 = v114;
        swift_bridgeObjectRelease();
        uint64_t v116 = sub_100388DD4((uint64_t)v115);
        swift_bridgeObjectRelease();
        type metadata accessor for JournalEntryMO();
        uint64_t v117 = swift_dynamicCastClass();
        uint64_t v118 = v385;
        uint64_t v120 = v380;
        uint64_t v119 = (uint64_t)v381;
        if (!v117) {
          goto LABEL_111;
        }
        CGFloat v121 = (void *)v117;
        CGFloat v376 = v111;
        id v368 = v121;
        id v122 = [v121 id];
        if (v122)
        {
          double v123 = v122;
          uint64_t v124 = v382;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          CGFloat v125 = *v387;
          (*v387)(v124, 0, 1, v120);
        }
        else
        {
          CGFloat v125 = *v387;
          (*v387)(v382, 1, 1, v120);
        }
        id v369 = *(id *)(v118 + 32);
        id v126 = [v369 id];
        uint64_t v375 = v116;
        if (v126)
        {
          CGFloat v127 = v126;
          uint64_t v128 = v372;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          uint64_t v129 = 0;
        }
        else
        {
          uint64_t v129 = 1;
          uint64_t v128 = v372;
        }
        v125(v128, v129, 1, v120);
        uint64_t v130 = v377;
        uint64_t v131 = v377 + *(int *)(v378 + 48);
        uint64_t v132 = v382;
        sub_10023D7D4(v382, v377);
        sub_10023D7D4(v128, v131);
        CGFloat v133 = *v374;
        if ((*v374)(v130, 1, v120) != 1)
        {
          sub_10023D7D4(v130, v119);
          if (v133(v131, 1, v120) == 1)
          {
            sub_10001457C(v372, &qword_100800950);
            sub_10001457C(v382, &qword_100800950);
            (*v363)(v119, v120);
            uint64_t v118 = v385;
LABEL_101:
            sub_10001457C(v377, (uint64_t *)&unk_1007FEB40);
          }
          else
          {
            CGFloat v136 = v362;
            (*v349)(v362, v131, v120);
            sub_10023D83C((unint64_t *)&qword_1007FEB50, (void (*)(uint64_t))&type metadata accessor for UUID);
            char v137 = dispatch thunk of static Equatable.== infix(_:_:)();
            CGFloat v138 = *v363;
            (*v363)((uint64_t)v136, v120);
            sub_10001457C(v372, &qword_100800950);
            sub_10001457C(v382, &qword_100800950);
            v138((uint64_t)v381, v120);
            sub_10001457C(v130, &qword_100800950);
            uint64_t v118 = v385;
            uint64_t v135 = v375;
            if (v137) {
              goto LABEL_103;
            }
          }

          CGFloat v111 = v388;
LABEL_111:
          swift_bridgeObjectRelease();
          type metadata accessor for JournalEntryAssetMO();
          uint64_t v144 = swift_dynamicCastClass();
          if (!v144)
          {

            int64_t v75 = (int64_t)v383;
            unint64_t v77 = (unint64_t)v384;
            uint64_t v69 = v373;
            goto LABEL_43;
          }
          CGFloat v145 = (char *)v144;
          CGFloat v146 = v111;
          CGFloat v376 = v145;
          id v147 = [v145 entry];
          if (v147)
          {
            CGFloat v148 = v147;
            id v149 = [v147 id];

            if (v149)
            {
              uint64_t v150 = (uint64_t)v356;
              static UUID._unconditionallyBridgeFromObjectiveC(_:)();

              CGFloat v151 = *v387;
              (*v387)(v150, 0, 1, v120);
            }
            else
            {
              CGFloat v151 = *v387;
              uint64_t v150 = (uint64_t)v356;
              (*v387)(v356, 1, 1, v120);
            }
            sub_10002C4EC(v150, v379, &qword_100800950);
          }
          else
          {
            CGFloat v151 = *v387;
            (*v387)(v379, 1, 1, v120);
          }
          id v152 = [*(id *)(v118 + 32) id];
          CGFloat v388 = v146;
          if (v152)
          {
            CGFloat v153 = v152;
            uint64_t v154 = v367;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v155 = 0;
            uint64_t v156 = (uint64_t)v364;
            uint64_t v157 = (uint64_t)v360;
          }
          else
          {
            uint64_t v155 = 1;
            uint64_t v156 = (uint64_t)v364;
            uint64_t v157 = (uint64_t)v360;
            uint64_t v154 = v367;
          }
          v151(v154, v155, 1, v120);
          uint64_t v158 = v379;
          uint64_t v159 = v156 + *(int *)(v378 + 48);
          sub_10023D7D4(v379, v156);
          sub_10023D7D4(v154, v159);
          double v160 = *v374;
          if ((*v374)(v156, 1, v120) == 1)
          {
            sub_10001457C(v154, &qword_100800950);
            sub_10001457C(v158, &qword_100800950);
            unsigned int v161 = v160(v159, 1, v120);
            CGFloat v162 = v388;
            if (v161 == 1)
            {
              sub_10001457C(v156, &qword_100800950);
              uint64_t v69 = v373;
              goto LABEL_128;
            }
LABEL_126:
            sub_10001457C(v156, (uint64_t *)&unk_1007FEB40);
            uint64_t v69 = v373;
            goto LABEL_136;
          }
          sub_10023D7D4(v156, v157);
          if (v160(v159, 1, v120) == 1)
          {
            sub_10001457C(v367, &qword_100800950);
            sub_10001457C(v379, &qword_100800950);
            (*v363)(v157, v120);
            CGFloat v162 = v388;
            goto LABEL_126;
          }
          CGFloat v163 = v362;
          (*v349)(v362, v159, v120);
          sub_10023D83C((unint64_t *)&qword_1007FEB50, (void (*)(uint64_t))&type metadata accessor for UUID);
          char v164 = dispatch thunk of static Equatable.== infix(_:_:)();
          CGFloat v165 = *v363;
          (*v363)((uint64_t)v163, v120);
          sub_10001457C(v367, &qword_100800950);
          sub_10001457C(v379, &qword_100800950);
          v165(v157, v120);
          sub_10001457C(v156, &qword_100800950);
          uint64_t v69 = v373;
          CGFloat v162 = v388;
          if ((v164 & 1) == 0)
          {
LABEL_136:

            int64_t v75 = (int64_t)v383;
            unint64_t v77 = (unint64_t)v384;
            goto LABEL_43;
          }
LABEL_128:
          id v166 = [v376 assetType];
          if (!v166) {
            goto LABEL_134;
          }
          CGFloat v167 = v166;
          uint64_t v168 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v170 = v169;

          if (v168 == 0x697463656C666572 && v170 == 0xEA00000000006E6FLL)
          {
            swift_bridgeObjectRelease();
            goto LABEL_133;
          }
          char v171 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v171) {
LABEL_133:
          }
            Swift::Int v172 = 4;
          else {
LABEL_134:
          }
            Swift::Int v172 = 1;
          sub_10054DCC4(&v390, v172);
          goto LABEL_136;
        }
        sub_10001457C(v128, &qword_100800950);
        sub_10001457C(v132, &qword_100800950);
        unsigned int v134 = v133(v131, 1, v120);
        uint64_t v118 = v385;
        uint64_t v135 = v375;
        if (v134 != 1) {
          goto LABEL_101;
        }
        sub_10001457C(v377, &qword_100800950);
LABEL_103:
        if (*(void *)(v135 + 16))
        {
          Hasher.init(_seed:)();
          String.hash(into:)();
          Swift::Int v139 = Hasher._finalize()();
          uint64_t v140 = -1 << *(unsigned char *)(v135 + 32);
          unint64_t v141 = v139 & ~v140;
          if ((*(void *)(v135 + 56 + ((v141 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v141))
          {
            uint64_t v142 = ~v140;
            while (1)
            {
              switch(*(unsigned char *)(*(void *)(v135 + 48) + v141))
              {
                case 1:
                  swift_bridgeObjectRelease();
                  goto LABEL_144;
                default:
                  char v143 = _stringCompareWithSmolCheck(_:_:expecting:)();
                  swift_bridgeObjectRelease();
                  if (v143)
                  {
LABEL_144:
                    sub_10054DCC4(&v390, 1);
                    goto LABEL_145;
                  }
                  unint64_t v141 = (v141 + 1) & v142;
                  if (((*(void *)(v135 + 56 + ((v141 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v141) & 1) == 0) {
                    goto LABEL_145;
                  }
                  break;
              }
            }
          }
        }
LABEL_145:
        char v174 = sub_100542494(0, v135);
        uint64_t v175 = (uint64_t)v361;
        uint64_t v69 = v373;
        uint64_t v176 = v366;
        id v177 = v368;
        if (v174)
        {
          id v178 = [v368 text];
          if (v178)
          {
            uint64_t v179 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v181 = v180;

            id v178 = sub_100041F24(v179, v181);
            sub_100040DD0(v179, v181);
            if (v178 && *(void *)(v118 + v337))
            {
              unsigned __int8 v182 = [v178 isEqualToAttributedString:];
              uint64_t v175 = (uint64_t)v361;
              uint64_t v176 = v366;
              if ((v182 & 1) == 0) {
                *(unsigned char *)(v118 + v328) = 1;
              }
            }
            else
            {
              uint64_t v175 = (uint64_t)v361;
              uint64_t v176 = v366;
            }
          }
          double v183 = *(void **)(v118 + v337);
          *(void *)(v118 + v337) = v178;

          sub_10054DCC4(&v390, 0);
        }
        if (sub_100542494(3u, v135))
        {
          id v184 = [v177 title];
          if (v184)
          {
            CGFloat v185 = v184;
            uint64_t v186 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v188 = v187;

            id v189 = sub_100041F24(v186, v188);
            sub_100040DD0(v186, v188);
          }
          else
          {
            id v189 = 0;
          }
          sub_100586EEC(v189);

          sub_10054DCC4(&v390, 2);
          uint64_t v175 = (uint64_t)v361;
          uint64_t v176 = v366;
        }
        if (sub_100542494(4u, v135))
        {
          id v190 = [v369 entryDate];
          if (v190)
          {
            CGFloat v191 = v190;
            CGFloat v192 = v354;
            static Date._unconditionallyBridgeFromObjectiveC(_:)();

            CGFloat v193 = *v350;
            CGFloat v194 = v192;
            uint64_t v195 = v365;
            ((void (*)(uint64_t, char *, uint64_t))*v350)(v175, v194, v365);
            (*v352)(v175, 0, 1, v195);
            uint64_t v196 = v195;
            uint64_t v176 = v366;
            if ((*v343)(v175, 1, v196) != 1)
            {
              CGFloat v197 = v342;
              ((void (*)(char *, uint64_t, uint64_t))v193)(v342, v175, v365);
              CGFloat v198 = v197;
              uint64_t v176 = v366;
              goto LABEL_164;
            }
          }
          else
          {
            (*v352)(v175, 1, 1, v365);
          }
          CGFloat v198 = v342;
          Date.init()();
          sub_10001457C(v175, (uint64_t *)&unk_1007FC470);
LABEL_164:
          swift_beginAccess();
          (*v333)(v176, v198, v365);
          swift_endAccess();
          sub_10054DCC4(&v390, 3);
        }
        if (sub_100542494(7u, v135))
        {
          id v199 = [v369 dateSource];
          if (v199)
          {
            CGFloat v200 = v199;
            uint64_t v201 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            CGFloat v203 = v202;
          }
          else
          {
            uint64_t v201 = 0;
            CGFloat v203 = (void *)0xE000000000000000;
          }
          v409._id countAndFlagsBits = v201;
          v409._object = v203;
          *(unsigned char *)(v118 + v336) = sub_100044F1C(v409);
          sub_10054DCC4(&v390, 3);
        }
        if (sub_100542494(9u, v135))
        {
          id v204 = [v369 prompt];
          if (v204)
          {
            CGFloat v205 = v204;
            uint64_t v206 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
            unint64_t v208 = v207;

            id v209 = sub_100041F24(v206, v208);
            sub_100040DD0(v206, v208);
          }
          else
          {
            id v209 = 0;
          }
          sub_100586F14(v209);

          sub_10054DCC4(&v390, 6);
        }
        if (sub_100542494(8u, v135)) {
          sub_10054DCC4(&v390, 7);
        }
        if (sub_100542494(5u, v135))
        {
          swift_bridgeObjectRelease();
          goto LABEL_180;
        }
        char v210 = sub_100542494(6u, v135);
        swift_bridgeObjectRelease();
        if (v210) {
LABEL_180:
        }
          sub_10054DCC4(&v390, 8);
        unsigned __int8 v211 = [v177 isRemovedFromCloud];
        uint64_t v212 = (uint64_t)v351;
        uint64_t v213 = v365;
        if ((v211 & 1) != 0 || [v177 isFullyRemoved]) {
          sub_10054DCC4(&v390, 9);
        }
        id v214 = [v177 entryDate];
        if (!v214)
        {
          (*v352)(v212, 1, 1, v213);
LABEL_189:
          sub_10001457C(v212, (uint64_t *)&unk_1007FC470);
          goto LABEL_190;
        }
        CGFloat v215 = v214;
        CGFloat v216 = v354;
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        CGFloat v217 = *v350;
        ((void (*)(uint64_t, char *, uint64_t))*v350)(v212, v216, v213);
        (*v352)(v212, 0, 1, v213);
        if ((*v343)(v212, 1, v213) == 1) {
          goto LABEL_189;
        }
        CGFloat v218 = v341;
        v217();
        CGFloat v219 = v354;
        uint64_t v220 = v366;
        (*v331)(v354, v366, v213);
        sub_10023D83C((unint64_t *)&qword_1007FABD0, (void (*)(uint64_t))&type metadata accessor for Date);
        char v221 = dispatch thunk of static Equatable.== infix(_:_:)();
        CGFloat v222 = *v332;
        (*v332)(v219, v213);
        if (v221)
        {
          v222(v218, v213);
          uint64_t v69 = v373;
          id v177 = v368;
        }
        else
        {
          swift_beginAccess();
          (*v329)(v220, v218, v213);
          swift_endAccess();
          id v232 = [v369 dateSource];
          if (v232)
          {
            CGFloat v233 = v232;
            uint64_t v234 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            CGFloat v236 = v235;
          }
          else
          {
            uint64_t v234 = 0;
            CGFloat v236 = (void *)0xE000000000000000;
          }
          id v177 = v368;
          v410._id countAndFlagsBits = v234;
          v410._object = v236;
          *(unsigned char *)(v118 + v336) = sub_100044F1C(v410);
          sub_10054DCC4(&v390, 3);
          v222(v341, v213);
          uint64_t v69 = v373;
        }
LABEL_190:
        int v223 = *(unsigned __int8 *)(v118 + v345);
        if (v223 != [v177 flagged])
        {
          sub_100584CA4((uint64_t)[v177 flagged]);
          sub_10054DCC4(&v390, 7);
        }
        id v224 = [v177 text];
        if (v224)
        {
          CGFloat v225 = v224;
          uint64_t v226 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
          unint64_t v228 = v227;

          id v229 = sub_100041F24(v226, v228);
          sub_100040DD0(v226, v228);
        }
        else
        {
          id v229 = 0;
        }
        unint64_t v77 = (unint64_t)v384;
        char v230 = sub_100582AB8(v229);

        if (v230) {
          sub_10054DCC4(&v390, 0);
        }
        CGFloat v231 = v376;

        int64_t v75 = (int64_t)v383;
        goto LABEL_43;
      }
      uint64_t v106 = v390._countAndFlagsBits;
      sub_10002102C(&v391, &v393);
      v395._id countAndFlagsBits = 0;
      v395._object = (void *)0xE000000000000000;
      v107._id countAndFlagsBits = 0x20202020200ALL;
      v107._object = (void *)0xE600000000000000;
      String.append(_:)(v107);
      v108._id countAndFlagsBits = v106;
      v108._object = object;
      String.append(_:)(v108);
      swift_bridgeObjectRelease();
      v109._id countAndFlagsBits = 8250;
      v109._object = (void *)0xE200000000000000;
      String.append(_:)(v109);
      _print_unlocked<A, B>(_:_:)();
      String.append(_:)(v395);
      swift_bridgeObjectRelease();
      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v393);
      if (v96) {
        goto LABEL_63;
      }
    }
    __break(1u);
LABEL_305:
    sub_100082D3C();
    uint64_t v2 = v385;
    uint64_t v63 = v339;
    int64_t v11 = v383;
  }
  uint64_t v84 = __CocoaSet.Iterator.next()();
  if (v84)
  {
    v393._id countAndFlagsBits = v84;
    sub_10001B284(0, &qword_1008113A0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    CGFloat v85 = (char *)v390._countAndFlagsBits;
    swift_unknownObjectRelease();
    int64_t v83 = v75;
    CGFloat v384 = (char *)v77;
    if (v85) {
      goto LABEL_59;
    }
  }
LABEL_202:
  sub_100082D3C();
  CGFloat v72 = v359;
  uint64_t v63 = v339;
LABEL_203:
  v395._id countAndFlagsBits = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v395._object = v237;
  AnyHashable.init<A>(_:)();
  sub_1003F2608((uint64_t)&v390, v63, &v393);
  swift_bridgeObjectRelease();
  sub_10001DF0C((uint64_t)&v390);
  if (!*((void *)&v394[0] + 1))
  {
    sub_10001457C((uint64_t)&v393, &qword_1007FAD50);
    goto LABEL_307;
  }
  sub_100010218(&qword_1007FB910);
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_307;
  }
  uint64_t v238 = v395._countAndFlagsBits;
  unint64_t v239 = v395._countAndFlagsBits & 0xC000000000000001;
  if ((v395._countAndFlagsBits & 0xC000000000000001) != 0)
  {
    if (__CocoaSet.count.getter() > 0)
    {
      v390._id countAndFlagsBits = 10;
      v390._object = (void *)0xE100000000000000;
      uint64_t v240 = __CocoaSet.count.getter();
      goto LABEL_211;
    }
LABEL_213:
    swift_bridgeObjectRelease();
    goto LABEL_307;
  }
  uint64_t v240 = *(void *)(v395._countAndFlagsBits + 16);
  if (!v240) {
    goto LABEL_213;
  }
  v390._id countAndFlagsBits = 10;
  v390._object = (void *)0xE100000000000000;
LABEL_211:
  v393._id countAndFlagsBits = v240;
  v241._id countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v241);
  swift_bridgeObjectRelease();
  v242._id countAndFlagsBits = 0x736574656C656420;
  v242._object = (void *)0xE90000000000003ALL;
  String.append(_:)(v242);
  String.append(_:)(v390);
  swift_bridgeObjectRelease();
  if (v239)
  {
    __CocoaSet.makeIterator()();
    sub_10001B284(0, &qword_1008113A0);
    sub_100082CD4();
    Set.Iterator.init(_cocoa:)();
    uint64_t v238 = v390._countAndFlagsBits;
    CGFloat v383 = (char *)v390._object;
    unint64_t v239 = *((void *)&v391 + 1);
    uint64_t v243 = v391;
    unint64_t v244 = v392;
  }
  else
  {
    uint64_t v275 = -1 << *(unsigned char *)(v238 + 32);
    uint64_t v276 = *(void *)(v238 + 56);
    CGFloat v383 = (char *)(v238 + 56);
    uint64_t v277 = ~v275;
    uint64_t v278 = -v275;
    if (v278 < 64) {
      uint64_t v279 = ~(-1 << v278);
    }
    else {
      uint64_t v279 = -1;
    }
    unint64_t v244 = v279 & v276;
    uint64_t v243 = v277;
  }
  uint64_t v377 = v243;
  CGFloat v381 = (char *)(v238 & 0x7FFFFFFFFFFFFFFFLL);
  uint64_t v382 = (unint64_t)(v243 + 64) >> 6;
  CGFloat v388 = (char *)(v338 + 32);
  CGFloat v389 = (v338 + 56);
  CGFloat v384 = (char *)(v338 + 48);
  uint64_t v378 = v338 + 8;
  uint64_t v379 = (uint64_t)&type metadata for Swift.AnyObject + 8;
  CGFloat v387 = (void (**)(void, void, void, void))v238;
  while (2)
  {
    if (v238 < 0)
    {
      uint64_t v284 = __CocoaSet.Iterator.next()();
      if (!v284) {
        goto LABEL_306;
      }
      v395._id countAndFlagsBits = v284;
      sub_10001B284(0, &qword_1008113A0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v285 = (id)v393._countAndFlagsBits;
      swift_unknownObjectRelease();
      uint64_t v283 = v239;
      uint64_t v281 = v244;
      if (!v285) {
        goto LABEL_306;
      }
      goto LABEL_284;
    }
    if (v244)
    {
      uint64_t v281 = (v244 - 1) & v244;
      unint64_t v282 = __clz(__rbit64(v244)) | (v239 << 6);
      uint64_t v283 = v239;
LABEL_283:
      id v285 = *(id *)(*(void *)(v238 + 48) + 8 * v282);
      if (!v285) {
        goto LABEL_306;
      }
LABEL_284:
      v393._id countAndFlagsBits = 2107914;
      v393._object = (void *)0xE300000000000000;
      v288._id countAndFlagsBits = sub_1001903F4();
      String.append(_:)(v288);
      swift_bridgeObjectRelease();
      String.append(_:)(v393);
      swift_bridgeObjectRelease();
      type metadata accessor for JournalEntryMO();
      uint64_t v289 = swift_dynamicCastClass();
      if (!v289)
      {
        type metadata accessor for JournalEntryAssetMO();
        if (swift_dynamicCastClass())
        {
          sub_10054DCC4(&v393, 4);
          sub_10054DCC4(&v393, 1);
        }

        unint64_t v239 = v283;
        unint64_t v244 = v281;
        continue;
      }
      CGFloat v290 = (void *)v289;
      id v291 = v285;
      id v292 = [v290 id];
      if (!v292)
      {
        uint64_t v280 = (uint64_t)v348;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v389->isa)(v348, 1, 1, v380);
LABEL_267:

        sub_10001457C(v280, &qword_100800950);
        unint64_t v239 = v283;
        unint64_t v244 = v281;
        CGFloat v72 = v359;
        uint64_t v238 = (uint64_t)v387;
        continue;
      }
      CGFloat v293 = v292;
      CGFloat v294 = v362;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      CGFloat v295 = *(void (**)(void, void, void))v388;
      uint64_t v280 = (uint64_t)v348;
      uint64_t v296 = v380;
      (*(void (**)(char *, char *, uint64_t))v388)(v348, v294, v380);
      Class isa = (void (*)(void, void, void, void))v389->isa;
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v389->isa)(v280, 0, 1, v296);
      CGFloat v298 = *(uint64_t (**)(void, void, void))v384;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))v384)(v280, 1, v296) == 1) {
        goto LABEL_267;
      }
      uint64_t v299 = v380;
      v295(v344, v280, v380);
      id v300 = [v290 id];
      if (v300)
      {
        CGFloat v301 = v300;
        CGFloat v302 = v362;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v303 = (uint64_t)v340;
        v295(v340, v302, v299);
        isa(v303, 0, 1, v299);
        int v304 = v298(v303, 1, v299);
        CGFloat v72 = v359;
        if (v304 != 1)
        {
          CGFloat v305 = v330;
          v295(v330, v303, v299);
          CGFloat v306 = v344;
          if (static UUID.== infix(_:_:)()) {
            sub_10054DCC4(&v393, 9);
          }

          CGFloat v307 = *(void (**)(void, void))v378;
          (*(void (**)(char *, uint64_t))v378)(v305, v299);
          v307(v306, v299);
          goto LABEL_297;
        }
      }
      else
      {
        uint64_t v303 = (uint64_t)v340;
        isa(v340, 1, 1, v299);
        CGFloat v72 = v359;
      }

      (*(void (**)(char *, uint64_t))v378)(v344, v299);
      sub_10001457C(v303, &qword_100800950);
LABEL_297:
      unint64_t v239 = v283;
      unint64_t v244 = v281;
      uint64_t v238 = (uint64_t)v387;
      continue;
    }
    break;
  }
  uint64_t v283 = v239 + 1;
  if (__OFADD__(v239, 1))
  {
LABEL_319:
    __break(1u);
    JUMPOUT(0x10023CF04);
  }
  if (v283 >= v382) {
    goto LABEL_306;
  }
  unint64_t v286 = *(void *)&v383[8 * v283];
  if (v286)
  {
LABEL_282:
    uint64_t v281 = (v286 - 1) & v286;
    unint64_t v282 = __clz(__rbit64(v286)) + (v283 << 6);
    goto LABEL_283;
  }
  uint64_t v287 = v239 + 2;
  if ((uint64_t)(v239 + 2) >= v382) {
    goto LABEL_306;
  }
  unint64_t v286 = *(void *)&v383[8 * v287];
  if (v286) {
    goto LABEL_281;
  }
  uint64_t v287 = v239 + 3;
  if ((uint64_t)(v239 + 3) >= v382) {
    goto LABEL_306;
  }
  unint64_t v286 = *(void *)&v383[8 * v287];
  if (v286)
  {
LABEL_281:
    uint64_t v283 = v287;
    goto LABEL_282;
  }
  uint64_t v283 = v239 + 4;
  if ((uint64_t)(v239 + 4) >= v382) {
    goto LABEL_306;
  }
  unint64_t v286 = *(void *)&v383[8 * v283];
  if (v286) {
    goto LABEL_282;
  }
  unint64_t v308 = v239 + 5;
  while (v382 != v308)
  {
    unint64_t v286 = *(void *)&v383[8 * v308++];
    if (v286)
    {
      uint64_t v283 = v308 - 1;
      goto LABEL_282;
    }
  }
LABEL_306:
  sub_100082D3C();
LABEL_307:
  v393._id countAndFlagsBits = 0;
  v393._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  v393._id countAndFlagsBits = 0xD000000000000013;
  v393._object = (void *)0x8000000100692D90;
  sub_10023D5AC();
  swift_bridgeObjectRetain();
  v309._id countAndFlagsBits = Set.description.getter();
  String.append(_:)(v309);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v310._id countAndFlagsBits = 10;
  v310._object = (void *)0xE100000000000000;
  String.append(_:)(v310);
  String.append(_:)(v393);
  swift_bridgeObjectRelease();
  if (qword_1007F6C00 != -1) {
    goto LABEL_317;
  }
LABEL_308:
  uint64_t v311 = v347;
  uint64_t v312 = sub_100026A54(v347, (uint64_t)qword_100804830);
  (*(void (**)(char *, uint64_t, uint64_t))(v346 + 16))(v72, v312, v311);
  CGFloat v313 = (char *)v397;
  unint64_t v314 = v398;
  uint64_t v315 = swift_allocObject();
  CGFloat v388 = v313;
  *(void *)(v315 + 16) = v313;
  *(void *)(v315 + 24) = v314;
  swift_bridgeObjectRetain();
  CGFloat v316 = Logger.logObject.getter();
  os_log_type_t v317 = static os_log_type_t.debug.getter();
  uint64_t v318 = swift_allocObject();
  *(unsigned char *)(v318 + 16) = 32;
  uint64_t v319 = swift_allocObject();
  *(unsigned char *)(v319 + 16) = 8;
  uint64_t v320 = swift_allocObject();
  *(void *)(v320 + 16) = sub_10023D638;
  *(void *)(v320 + 24) = v315;
  uint64_t v321 = swift_allocObject();
  *(void *)(v321 + 16) = sub_10023D690;
  *(void *)(v321 + 24) = v320;
  sub_100010218(&qword_100811830);
  uint64_t v322 = swift_allocObject();
  sub_1001F3A0C(v322, 3);
  *CGFloat v323 = sub_10023D678;
  v323[1] = v318;
  v323[2] = sub_10023D9E0;
  v323[3] = v319;
  v323[4] = sub_10023D6D0;
  v323[5] = v321;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  os_log_type_t v324 = v317;
  CGFloat v389 = v316;
  if (os_log_type_enabled(v316, v317))
  {
    CGFloat v325 = (uint8_t *)swift_slowAlloc();
    v393._id countAndFlagsBits = swift_slowAlloc();
    *(_WORD *)CGFloat v325 = 258;
    v325[2] = 32;
    swift_release();
    v325[3] = 8;
    swift_release();
    swift_bridgeObjectRetain();
    v395._id countAndFlagsBits = sub_10011EA98((uint64_t)v388, v314, &v393._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease_n();
    CGFloat v326 = v389;
    _os_log_impl((void *)&_mh_execute_header, v389, v324, "%s", v325, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v346 + 8))(v359, v347);
  if (v396[2])
  {
    v393._id countAndFlagsBits = (uint64_t)v396;
    PassthroughSubject.send(_:)();
  }
  return (id)swift_bridgeObjectRelease();
}

void sub_10023CF34(unint64_t a1, void *a2)
{
  unint64_t v2 = a1;
  v18[1] = a2;
  if ((a1 & 0xC000000000000001) != 0)
  {
    __CocoaSet.makeIterator()();
    sub_10001B284(0, &qword_1008113A0);
    sub_100082CD4();
    Set.Iterator.init(_cocoa:)();
    unint64_t v2 = (unint64_t)v18[2];
    uint64_t v17 = v18[3];
    uint64_t v3 = (uint64_t)v18[4];
    id v4 = v18[5];
    unint64_t v5 = (unint64_t)v18[6];
  }
  else
  {
    id v4 = 0;
    uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v17 = (void *)(a1 + 56);
    uint64_t v3 = ~v6;
    uint64_t v7 = -v6;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v5 = v8 & *(void *)(a1 + 56);
  }
  int64_t v9 = (unint64_t)(v3 + 64) >> 6;
  if ((v2 & 0x8000000000000000) != 0) {
    goto LABEL_10;
  }
  while (1)
  {
    if (v5)
    {
      uint64_t v10 = (v5 - 1) & v5;
      unint64_t v11 = __clz(__rbit64(v5)) | ((void)v4 << 6);
      uint64_t v12 = (char *)v4;
      goto LABEL_29;
    }
    uint64_t v14 = (uint64_t)v4 + 1;
    if (__OFADD__(v4, 1)) {
      break;
    }
    if (v14 >= v9) {
      goto LABEL_32;
    }
    unint64_t v15 = v17[v14];
    uint64_t v12 = (char *)v4 + 1;
    if (!v15)
    {
      uint64_t v12 = (char *)v4 + 2;
      if ((uint64_t)v4 + 2 >= v9) {
        goto LABEL_32;
      }
      unint64_t v15 = v17[(void)v12];
      if (!v15)
      {
        uint64_t v12 = (char *)v4 + 3;
        if ((uint64_t)v4 + 3 >= v9) {
          goto LABEL_32;
        }
        unint64_t v15 = v17[(void)v12];
        if (!v15)
        {
          uint64_t v12 = (char *)v4 + 4;
          if ((uint64_t)v4 + 4 >= v9) {
            goto LABEL_32;
          }
          unint64_t v15 = v17[(void)v12];
          if (!v15)
          {
            uint64_t v12 = (char *)v4 + 5;
            if ((uint64_t)v4 + 5 >= v9) {
              goto LABEL_32;
            }
            unint64_t v15 = v17[(void)v12];
            if (!v15)
            {
              uint64_t v16 = (char *)v4 + 6;
              while ((char *)v9 != v16)
              {
                unint64_t v15 = v17[(void)v16++];
                if (v15)
                {
                  uint64_t v12 = v16 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_100082D3C();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v10 = (v15 - 1) & v15;
    unint64_t v11 = __clz(__rbit64(v15)) + ((void)v12 << 6);
LABEL_29:
    id v13 = *(id *)(*(void *)(v2 + 48) + 8 * v11);
    if (!v13) {
      goto LABEL_32;
    }
    while (1)
    {
      sub_10054D4CC(v18, v13);

      id v4 = v12;
      unint64_t v5 = v10;
      if ((v2 & 0x8000000000000000) == 0) {
        break;
      }
LABEL_10:
      if (__CocoaSet.Iterator.next()())
      {
        sub_10001B284(0, &qword_1008113A0);
        swift_unknownObjectRetain();
        swift_dynamicCast();
        id v13 = v18[0];
        swift_unknownObjectRelease();
        uint64_t v12 = (char *)v4;
        uint64_t v10 = v5;
        if (v13) {
          continue;
        }
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

unint64_t sub_10023D224(char a1)
{
  unint64_t result = 1954047348;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x64724F7465737361;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x656C746974;
      break;
    case 4:
      unint64_t result = 0x7461447972746E65;
      break;
    case 5:
      unint64_t result = 0x6449656C646E7562;
      break;
    case 6:
      unint64_t result = 0x6144656C646E7562;
      break;
    case 7:
      unint64_t result = 0x72756F5365746164;
      break;
    case 8:
      unint64_t result = 0x64656767616C66;
      break;
    case 9:
      unint64_t result = 0x74706D6F7270;
      break;
    case 10:
      unint64_t result = 0xD000000000000011;
      break;
    case 11:
      unint64_t result = 0x726568746FLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_10023D3AC(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_10023D224(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_10023D224(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = _stringCompareWithSmolCheck(_:_:expecting:)();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

Swift::Int sub_10023D438()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_10023D224(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

uint64_t sub_10023D49C()
{
  sub_10023D224(*v0);
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10023D4F0()
{
  char v1 = *v0;
  Hasher.init(_seed:)();
  sub_10023D224(v1);
  String.hash(into:)();
  swift_bridgeObjectRelease();
  return Hasher._finalize()();
}

unint64_t sub_10023D550@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_10023D788(*a1);
  *a2 = result;
  return result;
}

unint64_t sub_10023D580@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_10023D224(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_10023D5AC()
{
  unint64_t result = qword_100804848;
  if (!qword_100804848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100804848);
  }
  return result;
}

uint64_t sub_10023D600()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10023D638()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_10023D668()
{
  return swift_deallocObject();
}

unsigned char **sub_10023D678(unsigned char **a1, uint64_t a2, uint64_t a3)
{
  return sub_10011E9E8(a1, a2, a3, *(unsigned char *)(v3 + 16));
}

uint64_t sub_10023D680()
{
  return swift_deallocObject();
}

uint64_t sub_10023D690()
{
  return sub_10011E9F8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_10023D698()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10023D6D0(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  return sub_10011EA20(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_10023D6D8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  int64_t v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

unint64_t sub_10023D788(Swift::String string)
{
  object = string._object;
  v2._id countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100791710, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 0xC) {
    return 12;
  }
  else {
    return v3;
  }
}

uint64_t sub_10023D7D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100800950);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10023D83C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s6FieldsOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10023D950);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6FieldsOMa()
{
  return &_s6FieldsON;
}

unint64_t sub_10023D98C()
{
  unint64_t result = qword_100804858[0];
  if (!qword_100804858[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100804858);
  }
  return result;
}

uint64_t sub_10023D9E8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10023DA38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(a3 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = (unint64_t *)(a3 + 40);
    unsigned int v6 = (char *)_swiftEmptyArrayStorage;
    do
    {
      unint64_t v8 = *v5;
      if (*v5)
      {
        uint64_t v9 = *(v5 - 1);
        uint64_t v10 = HIBYTE(v8) & 0xF;
        if ((v8 & 0x2000000000000000) == 0) {
          uint64_t v10 = v9 & 0xFFFFFFFFFFFFLL;
        }
        if (v10)
        {
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unsigned int v6 = sub_1002A54A0(0, *((void *)v6 + 2) + 1, 1, v6);
          }
          unint64_t v12 = *((void *)v6 + 2);
          unint64_t v11 = *((void *)v6 + 3);
          if (v12 >= v11 >> 1) {
            unsigned int v6 = sub_1002A54A0((char *)(v11 > 1), v12 + 1, 1, v6);
          }
          *((void *)v6 + 2) = v12 + 1;
          unint64_t v7 = &v6[16 * v12];
          *((void *)v7 + 4) = v9;
          *((void *)v7 + 5) = v8;
        }
      }
      v5 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    if (*((void *)v6 + 2)) {
      goto LABEL_14;
    }
LABEL_16:
    swift_bridgeObjectRelease();
    return 0;
  }
  if (!_swiftEmptyArrayStorage[2]) {
    goto LABEL_16;
  }
LABEL_14:
  sub_100010218(&qword_100800A70);
  sub_1000245BC();
  uint64_t v13 = BidirectionalCollection<>.joined(separator:)();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t type metadata accessor for ThreadSafeSet()
{
  return sub_100073C20();
}

uint64_t sub_10023DBDC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_10023DC2C()
{
  return sub_1000698D8();
}

uint64_t sub_10023DC48()
{
  swift_bridgeObjectRelease();
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t type metadata accessor for ThreadSafeArray()
{
  return sub_100073C20();
}

uint64_t sub_10023DC98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v22 = a1;
  uint64_t v1 = sub_100010218(&qword_100804960);
  __chkstk_darwin(v1 - 8);
  uint64_t v21 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for AttributedString.Index();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unsigned int v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v26 = (char *)&v20 - v8;
  __chkstk_darwin(v9);
  unint64_t v11 = (char *)&v20 - v10;
  type metadata accessor for AttributedString.CharacterView();
  sub_10023E074(&qword_1007F8EA8, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
  dispatch thunk of Collection.endIndex.getter();
  unint64_t v12 = (uint64_t (**)(char *, uint64_t))(v4 + 8);
  uint64_t v20 = v4;
  uint64_t v23 = (void (**)(char *, char *, uint64_t))(v4 + 32);
  uint64_t v24 = (uint64_t (**)(char *, uint64_t))(v4 + 8);
  for (uint64_t i = v6; ; (*v23)(v11, i, v3))
  {
    uint64_t v14 = v26;
    dispatch thunk of Collection.startIndex.getter();
    uint64_t v25 = sub_10023E074(&qword_100804968, (void (*)(uint64_t))&type metadata accessor for AttributedString.Index);
    char v15 = dispatch thunk of static Equatable.== infix(_:_:)();
    uint64_t v16 = *v12;
    (*v12)(v14, v3);
    if (v15) {
      break;
    }
    uint64_t v27 = v16;
    sub_10023E074(&qword_100804970, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
    dispatch thunk of BidirectionalCollection.index(before:)();
    uint64_t v17 = dispatch thunk of Collection.subscript.read();
    swift_bridgeObjectRetain();
    ((void (*)(char *, void))v17)(v28, 0);
    LOBYTE(v17) = Character.isWhitespace.getter();
    swift_bridgeObjectRelease();
    if ((v17 & 1) == 0)
    {
      uint64_t v16 = v27;
      v27(i, v3);
      break;
    }
    unint64_t v12 = v24;
    v27(v11, v3);
  }
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    uint64_t v19 = (uint64_t)v21;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v21, v11, v3);
    sub_100013878(v19, v22);
    sub_10023E0BC(v19);
    return v16(v11, v3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10023E074(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10023E0BC(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_100804960);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

NSString sub_10023E120()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10083D1F8 = (uint64_t)result;
  return result;
}

NSString sub_10023E158()
{
  NSString result = String._bridgeToObjectiveC()();
  qword_10083D200 = (uint64_t)result;
  return result;
}

uint64_t sub_10023E190()
{
  uint64_t v1 = v0;
  v10[0] = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v2 = *(void *)(v10[0] - 8);
  __chkstk_darwin(v10[0]);
  uint64_t v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v5);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6 - 8);
  sub_100010218(&qword_100803900);
  swift_allocObject();
  *(void *)(v0 + 16) = PassthroughSubject.init()();
  *(void *)(v0 + 24) = 0;
  sub_10001FB8C();
  static DispatchQoS.background.getter();
  v10[1] = _swiftEmptyArrayStorage;
  sub_10023FC98((unint64_t *)&unk_100804D90, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100010218((uint64_t *)&unk_100803980);
  sub_100014488(&qword_100804DA0, (uint64_t *)&unk_100803980);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, void))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v10[0]);
  *(void *)(v0 + 32) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 48) = 0;
  id v7 = [self mainBundle];
  id v8 = [v7 bundleIdentifier];

  if (v8)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  Logger.init(subsystem:category:)();
  sub_10023E4B4();
  return v1;
}

uint64_t sub_10023E4B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_100800F90);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for OS_dispatch_queue.SchedulerTimeType.Stride();
  uint64_t v5 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100010218(&qword_1008038F8);
  uint64_t v8 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void *)(v0 + 16);
  swift_retain();
  static OS_dispatch_queue.SchedulerTimeType.Stride.seconds(_:)();
  unint64_t v11 = *(void **)(v0 + 32);
  id v19 = v11;
  uint64_t v12 = type metadata accessor for OS_dispatch_queue.SchedulerOptions();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v4, 1, 1, v12);
  id v13 = v11;
  sub_100010218(&qword_100803900);
  sub_10001FB8C();
  sub_100014488(&qword_100803908, &qword_100803900);
  sub_10023FC98((unint64_t *)&qword_100803910, (void (*)(uint64_t))sub_10001FB8C);
  Publisher.debounce<A>(for:scheduler:options:)();
  sub_10023FCE0((uint64_t)v4);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v17);
  swift_release();
  swift_allocObject();
  swift_weakInit();
  sub_100014488(&qword_100803918, &qword_1008038F8);
  uint64_t v14 = v18;
  uint64_t v15 = Publisher<>.sink(receiveValue:)();
  swift_release();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v14);
  *(void *)(v1 + 24) = v15;
  return swift_release();
}

uint64_t sub_10023E818()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10023E870();
    return swift_release();
  }
  return result;
}

uint64_t sub_10023E870()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v11 = swift_slowAlloc();
    uint64_t v22 = v0;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v21 = v4;
    uint64_t v24 = v13;
    *(_DWORD *)uint64_t v12 = 136315138;
    v20[1] = v12 + 4;
    static Date.now.getter();
    uint64_t v14 = Date.debugDescription.getter();
    unint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v23 = sub_10011EA98(v14, v16, &v24);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "🫀 Reset inactivity timer at %s", v12, 0xCu);
    swift_arrayDestroy();
    uint64_t v4 = v21;
    swift_slowDealloc();
    uint64_t v1 = v22;
    swift_slowDealloc();
  }

  uint64_t v17 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v4, 1, 1, v17);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = 0;
  v18[3] = 0;
  v18[4] = v1;
  swift_retain();
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_100804AF0, (uint64_t)v18);
  return swift_release();
}

uint64_t sub_10023EB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 24) = a1;
  *(void *)(v4 + 32) = a4;
  return _swift_task_switch(sub_10023EB64, 0, 0);
}

uint64_t sub_10023EB64()
{
  swift_weakInit();
  type metadata accessor for MainActor();
  *(void *)(v0 + 40) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10023EC04, v2, v1);
}

uint64_t sub_10023EC04()
{
  swift_release();
  sub_10023EC8C();
  swift_weakDestroy();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10023EC8C()
{
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    [*(id *)(Strong + 40) invalidate];
    id v2 = [self scheduledTimerWithTimeInterval:v1 target:"inactivityTimerDidFire" selector:0 userInfo:0 repeats:60.0];
    uint64_t v3 = *(void **)(v1 + 40);
    *(void *)(v1 + 40) = v2;
    swift_release();
  }
}

void sub_10023ED44()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned char *)(v0 + 48) & 1) == 0)
  {
    uint64_t v6 = Logger.logObject.getter();
    os_log_type_t v7 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v6, v7))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v16 = v14;
      *(_DWORD *)uint64_t v8 = 136315138;
      uint64_t v13 = v8 + 4;
      static Date.now.getter();
      uint64_t v9 = Date.debugDescription.getter();
      unint64_t v11 = v10;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      uint64_t v15 = sub_10011EA98(v9, v11, &v16);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "🫀 Keep alive called at %s", v8, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    if (!*(void *)(v1 + 24))
    {
      sub_10023E4B4();
      id v12 = [self defaultCenter];
      if (qword_1007F6C08 != -1) {
        swift_once();
      }
      [v12 postNotificationName:qword_10083D1F8 object:0 userInfo:0];
    }
    sub_100010218(&qword_100803900);
    sub_100014488((unint64_t *)&unk_100803970, &qword_100803900);
    Subject<>.send()();
  }
}

uint64_t sub_10023F010()
{
  return sub_10023F058("🫀 Started recording, pausing the debouncer at %s", sub_10023F278, 1);
}

uint64_t sub_10023F034()
{
  return sub_10023F058("🫀 Stopped recording, resuming the debouncer at %s", sub_10023E4B4, 0);
}

uint64_t sub_10023F058(const char *a1, uint64_t (*a2)(void), int a3)
{
  LODWORD(v4) = a3;
  uint64_t v7 = v3;
  uint64_t v8 = type metadata accessor for Date();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = Logger.logObject.getter();
  os_log_type_t v13 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = swift_slowAlloc();
    int v23 = (int)v4;
    uint64_t v4 = (uint8_t *)v14;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v25 = v21;
    uint64_t v20 = a1;
    *(_DWORD *)uint64_t v4 = 136315138;
    v19[1] = v4 + 4;
    static Date.now.getter();
    uint64_t v15 = Date.debugDescription.getter();
    uint64_t v22 = a2;
    unint64_t v17 = v16;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v24 = sub_10011EA98(v15, v17, &v25);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    a2 = v22;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v12, v13, v20, v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    LOBYTE(v4) = v23;
    swift_slowDealloc();
  }

  uint64_t result = a2();
  *(unsigned char *)(v7 + 48) = (_BYTE)v4;
  return result;
}

uint64_t sub_10023F278()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = Logger.logObject.getter();
  os_log_type_t v10 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v9, v10))
  {
    unint64_t v11 = (uint8_t *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    uint64_t v22 = v19;
    *(_DWORD *)unint64_t v11 = 136315138;
    v18[1] = v11 + 4;
    static Date.now.getter();
    uint64_t v12 = Date.debugDescription.getter();
    uint64_t v20 = v4;
    unint64_t v14 = v13;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v21 = sub_10011EA98(v12, v14, &v22);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    uint64_t v4 = v20;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v9, v10, "🫀 End session at %s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  if (*(void *)(v1 + 24))
  {
    swift_retain();
    AnyCancellable.cancel()();
    swift_release();
  }
  *(void *)(v1 + 24) = 0;
  swift_release();
  uint64_t v15 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  unint64_t v16 = (void *)swift_allocObject();
  v16[2] = 0;
  void v16[3] = 0;
  v16[4] = v1;
  swift_retain();
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_100804AE0, (uint64_t)v16);
  return swift_release();
}

uint64_t sub_10023F578(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  return _swift_task_switch(sub_10023F598, 0, 0);
}

uint64_t sub_10023F598()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 24) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10023F62C, v2, v1);
}

uint64_t sub_10023F62C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  uint64_t v2 = *(void **)(v1 + 40);
  if (v2)
  {
    [v2 invalidate];
    uint64_t v3 = *(void **)(v1 + 40);
    *(void *)(v1 + 40) = 0;
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_10023F6AC()
{
  uint64_t v1 = type metadata accessor for Date();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.info.getter();
  if (os_log_type_enabled(v5, v6))
  {
    v12[1] = v0;
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    v12[0] = v7 + 4;
    static Date.now.getter();
    uint64_t v8 = Date.debugDescription.getter();
    unint64_t v10 = v9;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    v12[2] = sub_10011EA98(v8, v10, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "🫀 User became inactive at %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  sub_10023F278();
  id v11 = [self defaultCenter];
  if (qword_1007F6C10 != -1) {
    swift_once();
  }
  [v11 postNotificationName:qword_10083D200 object:0 userInfo:0];
}

uint64_t sub_10023F960()
{
  swift_release();
  swift_release();

  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal17CanvasIdleTracker_logger;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10023FA20()
{
  return type metadata accessor for CanvasIdleTracker();
}

uint64_t type metadata accessor for CanvasIdleTracker()
{
  uint64_t result = qword_1008049A8;
  if (!qword_1008049A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10023FA74()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_10023FB3C()
{
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_10002C194;
  v3[2] = v2;
  return _swift_task_switch(sub_10023F598, 0, 0);
}

uint64_t sub_10023FBE8(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100052588;
  v5[3] = a1;
  v5[4] = v4;
  return _swift_task_switch(sub_10023EB64, 0, 0);
}

uint64_t sub_10023FC98(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10023FCE0(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_100800F90);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10023FD40()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10023FD78()
{
  return sub_10023E818();
}

uint64_t sub_10023FD80()
{
  type metadata accessor for SuggestionAngelManager();
  uint64_t v0 = swift_allocObject();
  uint64_t result = sub_100242FC0();
  qword_10083D208 = v0;
  return result;
}

uint64_t sub_10023FDC0()
{
  return sub_10023FE20("onCancel: hasDelegate=%{BOOL}d", (uint64_t)&unk_1007A09E8, (uint64_t)sub_100243824, (uint64_t)&unk_1007A0A00);
}

uint64_t sub_10023FDF0()
{
  return sub_10023FE20("onCreateBlankEntry: hasDelegate=%{BOOL}d", (uint64_t)&unk_1007A0998, (uint64_t)sub_100243818, (uint64_t)&unk_1007A09B0);
}

uint64_t sub_10023FE20(const char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = v4;
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  id v34 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchQoS();
  uint64_t v35 = *(void *)(v12 - 8);
  uint64_t v36 = v12;
  __chkstk_darwin(v12);
  uint64_t v33 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_retain_n();
  unint64_t v14 = Logger.logObject.getter();
  os_log_type_t v15 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v14, v15))
  {
    uint64_t v29 = a1;
    unint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = a4;
    uint64_t v32 = a3;
    uint64_t v30 = v9;
    uint64_t v17 = v10;
    uint64_t v18 = v16;
    *(_DWORD *)unint64_t v16 = 67109120;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    swift_release();
    swift_unknownObjectRelease();
    LODWORD(aBlock[0]) = Strong != 0;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v14, v15, v29, v18, 8u);
    uint64_t v10 = v17;
    uint64_t v9 = v30;
    a4 = v31;
    a3 = v32;
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  uint64_t v20 = v8 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v23 = *(void *)(v20 + 8);
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    uint64_t v24 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v22;
    *(void *)(v25 + 24) = v23;
    aBlock[4] = a3;
    void aBlock[5] = v25;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    aBlock[3] = a4;
    uint64_t v26 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t v27 = v33;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10021B228((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    sub_10011AE0C((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
    uint64_t v28 = v34;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v26);
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v10 + 8))(v28, v9);
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v27, v36);
  }
  return result;
}

uint64_t sub_100240238(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v35 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v33 = v7;
  uint64_t v34 = v8;
  __chkstk_darwin(v7);
  uint64_t v32 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v31 = v4;
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    uint64_t v30 = v1;
    *(_DWORD *)uint64_t v12 = 136315138;
    uint64_t v13 = sub_100240790(a1);
    uint64_t v36 = sub_10011EA98(v13, v14, aBlock);
    uint64_t v2 = v30;
    uint64_t v4 = v31;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "onDidTransitionTo: %s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  uint64_t v15 = OBJC_IVAR____TtC7Journal22SuggestionAngelManager_lastReportedViewState;
  *(void *)(v2 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_lastReportedViewState) = a1;
  if (a1)
  {
    *(unsigned char *)(v2 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_needsToBeTerminated) = 1;
  }
  else
  {
    if (qword_1007F6F60 != -1) {
      swift_once();
    }
    swift_beginAccess();
    if (!*((void *)off_10080C390 + 2) && !*(void *)(v2 + v15))
    {
      uint64_t v16 = OBJC_IVAR____TtC7Journal22SuggestionAngelManager_needsToBeTerminated;
      if (*(unsigned char *)(v2 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_needsToBeTerminated) == 1)
      {
        uint64_t v17 = Logger.logObject.getter();
        os_log_type_t v18 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v17, v18))
        {
          uint64_t v19 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v19 = 0;
          _os_log_impl((void *)&_mh_execute_header, v17, v18, "Auto-terminating after dismissed sheet.", v19, 2u);
          swift_slowDealloc();
        }

        *(unsigned char *)(v2 + v16) = 0;
        [*(id *)(v2 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_controller) terminate];
      }
    }
  }
  uint64_t v20 = v2 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_delegate;
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v22 = result;
    uint64_t v23 = *(void *)(v20 + 8);
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    uint64_t v24 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v25 = (void *)swift_allocObject();
    v25[2] = a1;
    v25[3] = v22;
    v25[4] = v23;
    aBlock[4] = (uint64_t)sub_1002437D4;
    void aBlock[5] = (uint64_t)v25;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10017D530;
    aBlock[3] = (uint64_t)&unk_1007A0960;
    uint64_t v26 = _Block_copy(aBlock);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t v27 = v32;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_10021B228((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    sub_10011AE0C((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
    uint64_t v28 = v35;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v26);
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v5 + 8))(v28, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v27, v33);
  }
  return result;
}

uint64_t sub_100240790(uint64_t a1)
{
  switch(a1)
  {
    case 0:
      return 0x657373696D736964;
    case 2:
      return 0x657263536C6C7566;
    case 1:
      return 1801807216;
  }
  _StringGuts.grow(_:)(27);
  v2._object = (void *)0x8000000100693120;
  v2._id countAndFlagsBits = 0xD000000000000019;
  String.append(_:)(v2);
  type metadata accessor for MOSuggestionSheetViewState(0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002408A4(unint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = [self sharedApplication];
  sub_10031F2EC();
  uint64_t v7 = v6;

  if (!v7) {
    goto LABEL_16;
  }
  id v8 = [v7 viewIfLoaded];
  if (v8)
  {
    uint64_t v9 = v8;
    if (a1 >= 2)
    {
      if (a1 != 2)
      {
        _StringGuts.grow(_:)(27);
        v16._object = (void *)0x8000000100693120;
        v16._id countAndFlagsBits = 0xD000000000000019;
        String.append(_:)(v16);
        type metadata accessor for MOSuggestionSheetViewState(0);
        _print_unlocked<A, B>(_:_:)();
        uint64_t result = _assertionFailure(_:_:file:line:flags:)();
        __break(1u);
        return result;
      }
      [v8 setAccessibilityElementsHidden:1];
      id v13 = [v7 presentedViewController];
      if (!v13) {
        goto LABEL_14;
      }
      unint64_t v14 = v13;
      id v12 = [v13 view];

      if (!v12) {
        goto LABEL_14;
      }
      [v12 setAccessibilityElementsHidden:1];
    }
    else
    {
      [v8 setAccessibilityElementsHidden:0];
      id v10 = [v7 presentedViewController];
      if (!v10) {
        goto LABEL_14;
      }
      os_log_type_t v11 = v10;
      id v12 = [v10 viewIfLoaded];

      if (!v12) {
        goto LABEL_14;
      }
      [v12 setAccessibilityElementsHidden:0];
    }

LABEL_14:
    UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0);

    goto LABEL_15;
  }
  uint64_t v9 = v7;
LABEL_15:

LABEL_16:
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(a3 + 8))(a1, ObjectType, a3);
}

void sub_100240B08()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = OBJC_IVAR____TtC7Journal22SuggestionAngelManager_angelDelegateHandler;
  if (*(void *)((char *)v0 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_angelDelegateHandler)
    || *(void *)((char *)v0 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_controller))
  {
    return;
  }
  uint64_t v32 = v7;
  id v11 = [self sharedApplication];
  id v12 = [v11 connectedScenes];
  sub_10001B284(0, (unint64_t *)&qword_10080CF00);
  sub_1000872E4();
  uint64_t v13 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  unint64_t v14 = (void *)sub_1003F1F90(v13);
  swift_bridgeObjectRelease();
  if (!v14)
  {
LABEL_10:

    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return;
  }
  self;
  uint64_t v15 = swift_dynamicCastObjCClass();

  if (!v15)
  {
    id v11 = v14;
    goto LABEL_10;
  }
  uint64_t v33 = v6;
  uint64_t v34 = v3;
  Swift::String v16 = Logger.logObject.getter();
  os_log_type_t v17 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v16, v17))
  {
    os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v18 = 0;
    _os_log_impl((void *)&_mh_execute_header, v16, v17, "activate", v18, 2u);
    swift_slowDealloc();
  }

  uint64_t v19 = (objc_class *)type metadata accessor for AngelControllerDelegateHandler();
  uint64_t v20 = (char *)objc_allocWithZone(v19);
  uint64_t v21 = (uint64_t (**)(uint64_t))&v20[OBJC_IVAR____TtC7JournalP33_C5BE6988A08BB0DB179AC7EC1D49D5B530AngelControllerDelegateHandler_onDidTransitionTo];
  *uint64_t v21 = sub_100243694;
  v21[1] = v1;
  uint64_t v22 = (uint64_t (**)())&v20[OBJC_IVAR____TtC7JournalP33_C5BE6988A08BB0DB179AC7EC1D49D5B530AngelControllerDelegateHandler_onCancel];
  *uint64_t v22 = sub_100243698;
  v22[1] = (uint64_t (*)())v1;
  uint64_t v23 = (uint64_t (**)())&v20[OBJC_IVAR____TtC7JournalP33_C5BE6988A08BB0DB179AC7EC1D49D5B530AngelControllerDelegateHandler_onCreateBlankEntry];
  *uint64_t v23 = sub_10024369C;
  v23[1] = (uint64_t (*)())v1;
  uint64_t v24 = (void (**)(uint64_t, void *))&v20[OBJC_IVAR____TtC7JournalP33_C5BE6988A08BB0DB179AC7EC1D49D5B530AngelControllerDelegateHandler_onPerformTask];
  *uint64_t v24 = sub_1002436A0;
  v24[1] = (void (*)(uint64_t, void *))v1;
  v37.receiver = v20;
  v37.super_class = v19;
  swift_retain_n();
  id v25 = [super init];
  uint64_t v26 = *(void **)((char *)v1 + v10);
  *(void *)((char *)v1 + v10) = v25;
  id v27 = v25;

  uint64_t v28 = (void *)swift_allocObject();
  v28[2] = v15;
  v28[3] = v1;
  v28[4] = v27;
  aBlock[4] = sub_1002436F0;
  void aBlock[5] = v28;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007A08C0;
  uint64_t v29 = _Block_copy(aBlock);
  swift_retain();
  id v30 = v27;
  id v31 = v14;
  static DispatchQoS.unspecified.getter();
  uint64_t v35 = _swiftEmptyArrayStorage;
  sub_10021B228((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10011AE0C((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v29);

  (*(void (**)(char *, uint64_t))(v34 + 8))(v5, v2);
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v33);
  swift_release();
}

void sub_10024104C(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchQoS();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((unint64_t)(a1 - 1) <= 1)
  {
    uint64_t v14 = a3 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_delegate;
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v16 = Strong;
      uint64_t v23 = v7;
      uint64_t v17 = *(void *)(v14 + 8);
      sub_10001B284(0, (unint64_t *)&qword_100805AB0);
      uint64_t v22 = static OS_dispatch_queue.main.getter();
      os_log_type_t v18 = (void *)swift_allocObject();
      void v18[2] = v16;
      v18[3] = v17;
      v18[4] = a2;
      v18[5] = a1;
      aBlock[4] = sub_10024373C;
      void aBlock[5] = v18;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10017D530;
      aBlock[3] = &unk_1007A0910;
      uint64_t v19 = _Block_copy(aBlock);
      swift_unknownObjectRetain();
      id v20 = a2;
      swift_release();
      static DispatchQoS.unspecified.getter();
      aBlock[0] = _swiftEmptyArrayStorage;
      sub_10021B228((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100010218(&qword_100804DB0);
      sub_10011AE0C((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v21 = (void *)v22;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v19);
      swift_unknownObjectRelease();

      (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v6);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
  }
}

void sub_100241368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v5 = [objc_allocWithZone((Class)MOSuggestionSheetController) initForScene:a1];
  uint64_t v6 = *(void **)(a2 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_controller);
  *(void *)(a2 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_controller) = v5;
  id v7 = v5;

  [v7 setDelegate:a3];
  [v7 activate];
}

void sub_100241410()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_controller);
  if (v10)
  {
    uint64_t v11 = qword_1007F6F60;
    id v12 = v10;
    if (v11 != -1) {
      swift_once();
    }
    swift_beginAccess();
    if (*((void *)off_10080C390 + 2)
      || *(void *)(v1 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_lastReportedViewState)
      || (uint64_t v13 = OBJC_IVAR____TtC7Journal22SuggestionAngelManager_needsToBeTerminated,
          (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_needsToBeTerminated) & 1) == 0))
    {
    }
    else
    {
      uint64_t v14 = Logger.logObject.getter();
      os_log_type_t v15 = static os_log_type_t.default.getter();
      uint64_t v23 = v14;
      uint64_t v16 = v14;
      os_log_type_t v17 = v15;
      if (os_log_type_enabled(v16, v15))
      {
        os_log_type_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)os_log_type_t v18 = 0;
        _os_log_impl((void *)&_mh_execute_header, v23, v17, "Manual termination requested.", v18, 2u);
        swift_slowDealloc();
      }

      *(unsigned char *)(v1 + v13) = 0;
      uint64_t v23 = *(NSObject **)(v1 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_controllerQueue);
      uint64_t v19 = swift_allocObject();
      *(void *)(v19 + 16) = v12;
      aBlock[4] = sub_100243684;
      void aBlock[5] = v19;
      aBlock[0] = _NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = sub_10017D530;
      aBlock[3] = &unk_1007A0870;
      uint64_t v22 = _Block_copy(aBlock);
      id v20 = v12;
      static DispatchQoS.unspecified.getter();
      uint64_t v24 = _swiftEmptyArrayStorage;
      sub_10021B228((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100010218(&qword_100804DB0);
      sub_10011AE0C((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
      dispatch thunk of SetAlgebra.init<A>(_:)();
      uint64_t v21 = v22;
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v21);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      swift_release();
    }
  }
}

void sub_1002417E8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  os_log_t v53 = *(os_log_t *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v45 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v45 - v15;
  os_log_type_t v17 = *(void **)(v2 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_controller);
  if (v17)
  {
    uint64_t v51 = v7;
    uint64_t v52 = v8;
    id v18 = a1;
    id v19 = v17;
    id v20 = Logger.logObject.getter();
    int v21 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v20, (os_log_type_t)v21))
    {
      int v49 = v21;
      os_log_t v50 = v20;
      id v45 = v19;
      uint64_t v46 = v5;
      uint64_t v47 = v4;
      uint64_t v22 = swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      aBlock[0] = v48;
      *(_DWORD *)uint64_t v22 = 67110658;
      unsigned int v23 = [v18 showCancelButton];

      LODWORD(v54) = v23;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      *(_WORD *)(v22 + 8) = 1024;
      unsigned int v24 = [v18 showBlankEntryButton];

      LODWORD(v54) = v24;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      *(_WORD *)(v22 + 14) = 2048;
      [v18 peekDetentRatio];
      char v54 = v25;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      *(_WORD *)(v22 + 24) = 1024;
      unsigned int v26 = [v18 presentFullScreen];

      LODWORD(v54) = v26;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      *(_WORD *)(v22 + 30) = 1024;
      unsigned int v27 = [v18 presentationIsAnimated];

      LODWORD(v54) = v27;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      *(_WORD *)(v22 + 36) = 1024;
      unsigned int v28 = [v18 selectedTabIsRecommended];

      LODWORD(v54) = v28;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      *(_WORD *)(v22 + 42) = 2080;
      id v29 = [v18 selectedSuggestionId];
      if (v29)
      {
        id v30 = v29;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v31 = type metadata accessor for UUID();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v13, 0, 1, v31);
      }
      else
      {
        uint64_t v31 = type metadata accessor for UUID();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v13, 1, 1, v31);
      }
      sub_10018750C((uint64_t)v13, (uint64_t)v16);
      type metadata accessor for UUID();
      uint64_t v35 = *(void *)(v31 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v16, 1, v31) == 1)
      {
        sub_1000ADA74((uint64_t)v16);
        unint64_t v36 = 0xE300000000000000;
        uint64_t v37 = 7104878;
      }
      else
      {
        uint64_t v37 = UUID.uuidString.getter();
        unint64_t v36 = v38;
        (*(void (**)(char *, uint64_t))(v35 + 8))(v16, v31);
      }
      uint64_t v5 = v46;
      uint64_t v4 = v47;
      id v19 = v45;
      char v54 = (double *)sub_10011EA98(v37, v36, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      os_log_t v39 = v50;
      _os_log_impl((void *)&_mh_execute_header, v50, (os_log_type_t)v49, "presentSheetWithOptions: showCancelButton=%{BOOL}d showBlankEntryButton=%{BOOL}d peekDetentRatio=%f presentFullScreen=%{BOOL}d presentationIsAnimated=%{BOOL}d selectedTabIsRecommended=%{BOOL}d selectedSuggestionId=%s", (uint8_t *)v22, 0x34u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v40 = swift_allocObject();
    *(void *)(v40 + 16) = v19;
    *(void *)(v40 + 24) = v18;
    aBlock[4] = (uint64_t)sub_10024363C;
    void aBlock[5] = v40;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10017D530;
    aBlock[3] = (uint64_t)&unk_1007A0820;
    uint64_t v41 = _Block_copy(aBlock);
    id v42 = v18;
    id v43 = v19;
    static DispatchQoS.unspecified.getter();
    char v54 = _swiftEmptyArrayStorage;
    sub_10021B228((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    sub_10011AE0C((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
    uint64_t v44 = v51;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v41);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v44, v4);
    ((void (*)(char *, uint64_t))v53[1].isa)(v10, v52);
    swift_release();
  }
  else
  {
    os_log_t v53 = (os_log_t)Logger.logObject.getter();
    uint64_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v53, (os_log_type_t)v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v33 = 0;
      _os_log_impl((void *)&_mh_execute_header, v53, (os_log_type_t)v32, "Attempted to present a sheet w/o a controller.", v33, 2u);
      swift_slowDealloc();
    }
    os_log_t v34 = v53;
  }
}

void sub_100242018(uint64_t a1, char a2)
{
  uint64_t v5 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void **)(v2 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_controller);
  if (v14)
  {
    uint64_t v33 = v11;
    os_log_t v34 = v10;
    id v15 = v14;
    uint64_t v16 = Logger.logObject.getter();
    os_log_type_t v17 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v32 = v6;
      uint64_t v19 = v18;
      uint64_t v29 = swift_slowAlloc();
      aBlock[0] = v29;
      *(_DWORD *)uint64_t v19 = 136315394;
      uint64_t v31 = v8;
      uint64_t v20 = sub_100240790(a1);
      id v30 = v13;
      uint64_t v35 = (void *)sub_10011EA98(v20, v21, aBlock);
      uint64_t v8 = v31;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      uint64_t v13 = v30;
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 1024;
      LODWORD(v35) = a2 & 1;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v16, v17, "updateSheet: state=%s animated=%{BOOL}d", (uint8_t *)v19, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v6 = v32;
      swift_slowDealloc();
    }

    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v15;
    *(void *)(v22 + 24) = a1;
    *(unsigned char *)(v22 + 32) = a2 & 1;
    aBlock[4] = (uint64_t)sub_1002435D0;
    void aBlock[5] = v22;
    aBlock[0] = (uint64_t)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_10017D530;
    aBlock[3] = (uint64_t)&unk_1007A07D0;
    unsigned int v23 = _Block_copy(aBlock);
    id v24 = v15;
    static DispatchQoS.unspecified.getter();
    uint64_t v35 = _swiftEmptyArrayStorage;
    sub_10021B228((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    sub_10011AE0C((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v23);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, os_log_t))(v33 + 8))(v13, v34);
    swift_release();
  }
  else
  {
    os_log_t v34 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v25 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v34, v25))
    {
      unsigned int v26 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unsigned int v26 = 0;
      _os_log_impl((void *)&_mh_execute_header, v34, v25, "Attempted to update a sheet w/o a controller.", v26, 2u);
      swift_slowDealloc();
    }
    os_log_t v27 = v34;
  }
}

uint64_t sub_1002424F8(uint64_t a1)
{
  *(void *)(v2 + 168) = a1;
  *(void *)(v2 + 176) = v1;
  return _swift_task_switch(sub_100242518, 0, 0);
}

uint64_t sub_100242518()
{
  uint64_t v1 = v0[22];
  swift_weakInit();
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_controller);
  v0[23] = v2;
  if (v2)
  {
    uint64_t v3 = v0[21];
    v0[2] = v0;
    v0[7] = v0 + 19;
    v0[3] = sub_1002426A8;
    uint64_t v4 = swift_continuation_init();
    v0[10] = _NSConcreteStackBlock;
    v0[11] = 0x40000000;
    v0[12] = sub_100242CF0;
    v0[13] = &unk_1007A0790;
    v0[14] = v4;
    [v2 getAssetsForSuggestion:v3 withTypes:0 onAssetsCallback:v0 + 10];
    return _swift_continuation_await(v0 + 2);
  }
  else
  {
    sub_100242958(0xD000000000000027, 0x8000000100693080, (uint64_t)(v0 + 18), (void *)v0[21]);
    swift_weakDestroy();
    uint64_t v5 = (uint64_t (*)(void))v0[1];
    return v5(0);
  }
}

uint64_t sub_1002426A8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 48);
  *(void *)(*(void *)v0 + 192) = v1;
  if (v1) {
    uint64_t v2 = sub_100242828;
  }
  else {
    uint64_t v2 = sub_1002427B8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002427B8()
{
  swift_weakDestroy();
  uint64_t v1 = *(void *)(v0 + 152);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_100242828()
{
  uint64_t v1 = (void *)v0[23];
  uint64_t v2 = (void *)v0[21];
  swift_willThrow();
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  swift_getErrorValue();
  v3._id countAndFlagsBits = Error.localizedDescription.getter();
  String.append(_:)(v3);
  swift_bridgeObjectRelease();
  sub_100242958(0xD000000000000019, 0x80000001006930D0, (uint64_t)(v0 + 18), v2);

  swift_bridgeObjectRelease();
  swift_errorRelease();
  swift_weakDestroy();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4(0);
}

uint64_t sub_100242958(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = type metadata accessor for UUID();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for Logger();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v35 = v8;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, result + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_logger, v11);
    swift_release();
    id v16 = a4;
    swift_bridgeObjectRetain_n();
    id v17 = v16;
    uint64_t v18 = Logger.logObject.getter();
    os_log_type_t v19 = static os_log_type_t.error.getter();
    int v20 = v19;
    if (os_log_type_enabled(v18, v19))
    {
      uint64_t v21 = swift_slowAlloc();
      unint64_t v32 = a2;
      uint64_t v22 = v21;
      uint64_t v34 = swift_slowAlloc();
      uint64_t v37 = v34;
      *(_DWORD *)uint64_t v22 = 136315394;
      uint64_t v31 = v22 + 4;
      id v23 = [v17 suggestionIdentifier];
      int v33 = v20;
      id v24 = v23;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v25 = UUID.uuidString.getter();
      uint64_t v30 = a1;
      unint64_t v27 = v26;
      (*(void (**)(char *, uint64_t))(v35 + 8))(v10, v7);
      uint64_t v36 = sub_10011EA98(v25, v27, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      unint64_t v28 = v32;
      swift_bridgeObjectRetain();
      uint64_t v36 = sub_10011EA98(v30, v28, &v37);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v18, (os_log_type_t)v33, "fetchAssets: [%s] %s", (uint8_t *)v22, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
  return result;
}

uint64_t sub_100242CF0(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  if (a3)
  {
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    uint64_t v5 = swift_allocError();
    *uint64_t v6 = a3;
    id v7 = a3;
    return _swift_continuation_throwingResumeWithError(v3, v5);
  }
  else
  {
    sub_100010218(&qword_100804DA8);
    **(void **)(*(void *)(v3 + 64) + 40) = static Array._unconditionallyBridgeFromObjectiveC(_:)();
    return swift_continuation_throwingResume();
  }
}

uint64_t sub_100242DC0()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_logger;
  uint64_t v2 = type metadata accessor for Logger();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  sub_1000109BC(v0 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_delegate);

  return swift_deallocClassInstance();
}

uint64_t sub_100242EA0()
{
  return type metadata accessor for SuggestionAngelManager();
}

uint64_t type metadata accessor for SuggestionAngelManager()
{
  uint64_t result = qword_100804B58;
  if (!qword_100804B58) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100242EF4()
{
  uint64_t result = type metadata accessor for Logger();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_100242FC0()
{
  uint64_t v1 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v11 = *(void *)(v1 - 8);
  uint64_t v12 = v1;
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v4);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v5 - 8);
  id v6 = [self mainBundle];
  id v7 = [v6 bundleIdentifier];

  if (v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  Logger.init(subsystem:category:)();
  uint64_t v8 = OBJC_IVAR____TtC7Journal22SuggestionAngelManager_controllerQueue;
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  static DispatchQoS.unspecified.getter();
  uint64_t v13 = _swiftEmptyArrayStorage;
  sub_10021B228((unint64_t *)&unk_100804D90, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100010218((uint64_t *)&unk_100803980);
  sub_10011AE0C(&qword_100804DA0, (uint64_t *)&unk_100803980);
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v3, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v12);
  *(void *)(v0 + v8) = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)(v0 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_angelDelegateHandler) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_controller) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_lastReportedViewState) = 0;
  *(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_needsToBeTerminated) = 0;
  *(void *)(v0 + OBJC_IVAR____TtC7Journal22SuggestionAngelManager_delegate + 8) = 0;
  swift_unknownObjectWeakInit();
  return v0;
}

void sub_100243390(char *a1, uint64_t a2, void *a3, void *a4)
{
  uint64_t v5 = *(void (**)(void))&a1[*a4];
  id v6 = a3;
  id v7 = a1;
  v5();
}

id sub_1002434C0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AngelControllerDelegateHandler();
  return [super dealloc];
}

uint64_t type metadata accessor for AngelControllerDelegateHandler()
{
  return self;
}

uint64_t sub_100243598()
{
  return swift_deallocObject();
}

id sub_1002435D0()
{
  return [*(id *)(v0 + 16) updatePickerState:*(void *)(v0 + 24) animated:*(unsigned __int8 *)(v0 + 32)];
}

uint64_t sub_1002435E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1002435F4()
{
  return swift_release();
}

uint64_t sub_1002435FC()
{
  return swift_deallocObject();
}

id sub_10024363C()
{
  return [*(id *)(v0 + 16) requestPickerWithOptions:*(void *)(v0 + 24)];
}

uint64_t sub_10024364C()
{
  return swift_deallocObject();
}

id sub_100243684()
{
  return [*(id *)(v0 + 16) terminate];
}

void sub_1002436A0(uint64_t a1, void *a2)
{
  sub_10024104C(a1, a2, v2);
}

uint64_t sub_1002436A8()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1002436F0()
{
  sub_100241368(v0[2], v0[3], v0[4]);
}

uint64_t sub_1002436FC()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10024373C()
{
  uint64_t v1 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v2 = v0[5];
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, BOOL, uint64_t, uint64_t))(v1 + 16))(v3, v2 != 2, ObjectType, v1);
}

uint64_t sub_10024379C()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002437D4()
{
  return sub_1002408A4(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32));
}

uint64_t sub_1002437E0()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100243818()
{
  return sub_100243830(0, 1);
}

uint64_t sub_100243824()
{
  return sub_100243830(1, 0);
}

uint64_t sub_100243830(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, ObjectType, v5);
}

uint64_t sub_1002438D4(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

void sub_1002438FC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

id sub_1002439AC()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal16VariableBlurView_blurFilter;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v2 = objc_allocWithZone((Class)CAFilter);
  id v3 = v0;
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v2 initWithType:v4];

  *(void *)&v0[v1] = v5;
  *(int64x2_t *)&v3[OBJC_IVAR____TtC7Journal16VariableBlurView_maskSize] = vdupq_n_s64(0x4059000000000000uLL);
  uint64_t v6 = OBJC_IVAR____TtC7Journal16VariableBlurView_alphaColorGradients;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1006D6D10;
  uint64_t v8 = self;
  id v9 = [v8 whiteColor];
  id v10 = [v9 colorWithAlphaComponent:0.0];

  id v11 = [v10 CGColor];
  *(void *)(v7 + 32) = v11;
  id v12 = [v8 whiteColor];
  id v13 = [v12 CGColor];

  *(void *)(v7 + 40) = v13;
  uint64_t v22 = v7;
  specialized Array._endMutation()();
  *(void *)&v3[v6] = v7;
  *(void *)&v3[OBJC_IVAR____TtC7Journal16VariableBlurView_blurRadius] = 2;
  uint64_t v14 = &v3[OBJC_IVAR____TtC7Journal16VariableBlurView_inputMaskImage];
  strcpy(&v3[OBJC_IVAR____TtC7Journal16VariableBlurView_inputMaskImage], "inputMaskImage");
  v14[15] = -18;
  id v15 = &v3[OBJC_IVAR____TtC7Journal16VariableBlurView_inputNormalizeEdges];
  *(void *)id v15 = 0xD000000000000013;
  *((void *)v15 + 1) = 0x80000001006931F0;
  id v16 = &v3[OBJC_IVAR____TtC7Journal16VariableBlurView_inputDither];
  *(void *)id v16 = 0x7469447475706E69;
  *((void *)v16 + 1) = 0xEB00000000726568;
  id v17 = &v3[OBJC_IVAR____TtC7Journal16VariableBlurView_blurRadiusKey];
  *(void *)id v17 = 0xD000000000000020;
  *((void *)v17 + 1) = 0x8000000100693250;
  uint64_t v18 = &v3[OBJC_IVAR____TtC7Journal16VariableBlurView_filterName];
  strcpy(&v3[OBJC_IVAR____TtC7Journal16VariableBlurView_filterName], "variableBlur");
  v18[13] = 0;
  *((_WORD *)v18 + 7) = -5120;

  v21.receiver = v3;
  v21.super_class = (Class)type metadata accessor for VariableBlurView();
  id v19 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
  sub_100243C98();

  return v19;
}

void sub_100243C98()
{
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC7Journal16VariableBlurView_blurFilter];
  id v2 = (void *)sub_100243F74();
  NSString v3 = String._bridgeToObjectiveC()();
  [v1 setValue:v2 forKey:v3];

  Class isa = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v5 = String._bridgeToObjectiveC()();
  [v1 setValue:isa forKey:v5];

  Class v6 = Bool._bridgeToObjectiveC()().super.super.isa;
  NSString v7 = String._bridgeToObjectiveC()();
  [v1 setValue:v6 forKey:v7];

  NSString v8 = String._bridgeToObjectiveC()();
  [v1 setName:v8];

  id v9 = [v0 layer];
  self;
  id v10 = (void *)swift_dynamicCastObjCClassUnconditional();
  sub_100010218((uint64_t *)&unk_1007FC0F0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1006D6280;
  *(void *)(v11 + 56) = sub_10001B284(0, &qword_100804E28);
  *(void *)(v11 + 32) = v1;
  id v12 = v1;
  Class v13 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v10 setFilters:v13];

  id v14 = [v0 layer];
  Class v15 = Int._bridgeToObjectiveC()().super.super.isa;
  NSString v16 = String._bridgeToObjectiveC()();
  [v14 setValue:v15 forKeyPath:v16];

  id v17 = [v0 layer];
  [v17 setAllowsHitTesting:0];

  id v18 = [self clearColor];
  [v0 setBackgroundColor:v18];
}

uint64_t sub_100243F74()
{
  id v1 = [objc_allocWithZone((Class)UIGraphicsImageRendererFormat) init];
  [v1 setScale:1.0];
  [v1 setPreferredRange:2];
  double v2 = *(double *)&v0[OBJC_IVAR____TtC7Journal16VariableBlurView_maskSize];
  double v3 = *(double *)&v0[OBJC_IVAR____TtC7Journal16VariableBlurView_maskSize + 8];
  id v4 = [objc_allocWithZone((Class)UIGraphicsImageRenderer) initWithBounds:v1 format:0.0, 0.0, v2, v3];
  NSString v5 = (double *)swift_allocObject();
  _OWORD v5[2] = 0.0;
  v5[3] = 0.0;
  v5[4] = v2;
  v5[5] = v3;
  *((void *)v5 + 6) = v0;
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = sub_100244434;
  *(void *)(v6 + 24) = v5;
  v12[4] = sub_100244454;
  v12[5] = v6;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_1002438FC;
  void v12[3] = &unk_1007A0A78;
  NSString v7 = _Block_copy(v12);
  NSString v8 = v0;
  swift_retain();
  swift_release();
  id v9 = [v4 imageWithActions:v7];

  _Block_release(v7);
  LOBYTE(v4) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v4)
  {
    __break(1u);
  }
  else
  {
    id v11 = [v9 CGImage];
    swift_release();

    return (uint64_t)v11;
  }
  return result;
}

void sub_100244194(void *a1, double a2, double a3, double a4, double a5)
{
  id v10 = [objc_allocWithZone((Class)CAGradientLayer) init];
  [v10 setBounds:a2, a3, a4, a5];
  unint64_t v11 = swift_bridgeObjectRetain();
  sub_100091570(v11);
  swift_bridgeObjectRelease();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v10 setColors:isa];

  id v13 = [a1 CGContext];
  [v10 renderInContext:v13];
}

id sub_1002442F4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for VariableBlurView();
  [super dealloc];
}

uint64_t type metadata accessor for VariableBlurView()
{
  return self;
}

uint64_t sub_1002443FC()
{
  return swift_deallocObject();
}

void sub_100244434(void *a1)
{
  sub_100244194(a1, v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_100244444()
{
  return swift_deallocObject();
}

uint64_t sub_100244454()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_10024447C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10024448C()
{
  return swift_release();
}

id sub_100244494()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for VariableBlurView());

  return [v0 init];
}

uint64_t sub_1002444D8()
{
  return UIViewRepresentable.sizeThatFits(_:uiView:context:)();
}

uint64_t sub_10024451C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100244928();

  return static UIViewRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100244580(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100244928();

  return static UIViewRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1002445E4()
{
}

void sub_10024460C()
{
  id v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Journal16VariableBlurView_blurFilter;
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v3 = objc_allocWithZone((Class)CAFilter);
  NSString v4 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v5 = [v3 initWithType:v4];

  *(void *)&v1[v2] = v5;
  *(int64x2_t *)&v1[OBJC_IVAR____TtC7Journal16VariableBlurView_maskSize] = vdupq_n_s64(0x4059000000000000uLL);
  uint64_t v6 = OBJC_IVAR____TtC7Journal16VariableBlurView_alphaColorGradients;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1006D6D10;
  NSString v8 = self;
  id v9 = [v8 whiteColor];
  id v10 = [v9 colorWithAlphaComponent:0.0];

  id v11 = [v10 CGColor];
  *(void *)(v7 + 32) = v11;
  id v12 = [v8 whiteColor];
  id v13 = [v12 CGColor];

  *(void *)(v7 + 40) = v13;
  specialized Array._endMutation()();
  *(void *)&v1[v6] = v7;
  *(void *)&v1[OBJC_IVAR____TtC7Journal16VariableBlurView_blurRadius] = 2;
  id v14 = &v1[OBJC_IVAR____TtC7Journal16VariableBlurView_inputMaskImage];
  strcpy(&v1[OBJC_IVAR____TtC7Journal16VariableBlurView_inputMaskImage], "inputMaskImage");
  v14[15] = -18;
  Class v15 = &v1[OBJC_IVAR____TtC7Journal16VariableBlurView_inputNormalizeEdges];
  *(void *)Class v15 = 0xD000000000000013;
  *((void *)v15 + 1) = 0x80000001006931F0;
  NSString v16 = &v1[OBJC_IVAR____TtC7Journal16VariableBlurView_inputDither];
  *(void *)NSString v16 = 0x7469447475706E69;
  *((void *)v16 + 1) = 0xEB00000000726568;
  id v17 = &v1[OBJC_IVAR____TtC7Journal16VariableBlurView_blurRadiusKey];
  *(void *)id v17 = 0xD000000000000020;
  *((void *)v17 + 1) = 0x8000000100693250;
  id v18 = &v1[OBJC_IVAR____TtC7Journal16VariableBlurView_filterName];
  strcpy(&v1[OBJC_IVAR____TtC7Journal16VariableBlurView_filterName], "variableBlur");
  v18[13] = 0;
  *((_WORD *)v18 + 7) = -5120;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

ValueMetadata *type metadata accessor for RepresentedVariableBlurView()
{
  return &type metadata for RepresentedVariableBlurView;
}

unint64_t sub_1002448D4()
{
  unint64_t result = qword_100804E38;
  if (!qword_100804E38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100804E38);
  }
  return result;
}

unint64_t sub_100244928()
{
  unint64_t result = qword_100804E40;
  if (!qword_100804E40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100804E40);
  }
  return result;
}

void sub_10024497C()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v21 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  NSString v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v20 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v8 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView);
  uint64_t v9 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
  id v10 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v8) + 0x58);
  uint64_t v11 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
  id v12 = v8;
  v10(8, v11);

  sub_1000E2818();
  int v13 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7Journal22MotionActivityGridView_previousSizeType);
  if (v13 == 6 || (sub_10017CB6C(*(unsigned char *)(v1 + v9), v13) & 1) == 0)
  {
    id v14 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                + OBJC_IVAR____TtC7Journal23MotionActivityAssetView_motionImageView), "superview"));

    if (v14)
    {
      id v15 = [*(id *)(v1 + OBJC_IVAR____TtC7Journal23MotionActivityAssetView_exerciseNameLabel) superview];

      if (v15)
      {
        id v16 = [*(id *)(v1 + OBJC_IVAR____TtC7Journal23MotionActivityAssetView_workoutDataLabel) superview];

        if (v16)
        {
          sub_10001FB8C();
          id v17 = (void *)static OS_dispatch_queue.main.getter();
          uint64_t v18 = swift_allocObject();
          swift_unknownObjectWeakInit();
          aBlock[4] = sub_100246C18;
          void aBlock[5] = v18;
          aBlock[0] = _NSConcreteStackBlock;
          aBlock[1] = 1107296256;
          aBlock[2] = sub_10017D530;
          aBlock[3] = &unk_1007A0AE8;
          id v19 = _Block_copy(aBlock);
          swift_release();
          static DispatchQoS.unspecified.getter();
          aBlock[0] = _swiftEmptyArrayStorage;
          sub_10004F6A0();
          sub_100010218(&qword_100804DB0);
          sub_10001B1BC();
          dispatch thunk of SetAlgebra.init<A>(_:)();
          OS_dispatch_queue.async(group:qos:flags:execute:)();
          _Block_release(v19);

          (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v2);
          (*(void (**)(char *, uint64_t))(v20 + 8))(v7, v5);
        }
      }
    }
  }
}

void sub_100244D20()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (unsigned char *)Strong;
    sub_1000E2818();
    sub_1000E412C();
    uint64_t v2 = OBJC_IVAR____TtC7Journal23MotionActivityAssetView_exerciseNameLabel;
    id v3 = *(id *)&v1[OBJC_IVAR____TtC7Journal23MotionActivityAssetView_exerciseNameLabel];
    UIView.removeAllConstraints()();

    uint64_t v4 = OBJC_IVAR____TtC7Journal23MotionActivityAssetView_workoutDataLabel;
    id v5 = *(id *)&v1[OBJC_IVAR____TtC7Journal23MotionActivityAssetView_workoutDataLabel];
    UIView.removeAllConstraints()();

    uint64_t v6 = OBJC_IVAR____TtC7Journal23MotionActivityAssetView_motionImageView;
    id v7 = *(id *)&v1[OBJC_IVAR____TtC7Journal23MotionActivityAssetView_motionImageView];
    UIView.removeAllConstraints()();

    uint64_t v8 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
    switch(v1[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType])
    {
      case 2:
        sub_100245838();
        break;
      case 4:
        [*(id *)&v1[v2] setHidden:1];
        [*(id *)&v1[v4] setHidden:1];
        id v9 = *(id *)&v1[v6];
        sub_1001DCF60(8.0);

        swift_bridgeObjectRelease();
        break;
      case 5:
        sub_1002460E0();
        break;
      default:
        sub_100244EEC();
        break;
    }
    v1[OBJC_IVAR____TtC7Journal22MotionActivityGridView_previousSizeType] = v1[v8];
    [v1 layoutIfNeeded];
    [*(id *)&v1[v2] layoutIfNeeded];
    [*(id *)&v1[v4] layoutIfNeeded];
    [*(id *)&v1[v6] layoutIfNeeded];
  }
}

id sub_100244EEC()
{
  uint64_t v1 = v0;
  uint64_t v71 = OBJC_IVAR____TtC7Journal23MotionActivityAssetView_exerciseNameLabel;
  [*(id *)&v0[OBJC_IVAR____TtC7Journal23MotionActivityAssetView_exerciseNameLabel] setHidden:0];
  uint64_t v70 = OBJC_IVAR____TtC7Journal23MotionActivityAssetView_workoutDataLabel;
  [*(id *)&v0[OBJC_IVAR____TtC7Journal23MotionActivityAssetView_workoutDataLabel] setHidden:0];
  uint64_t v2 = OBJC_IVAR____TtC7Journal23MotionActivityAssetView_motionImageView;
  id v3 = *(id *)&v0[OBJC_IVAR____TtC7Journal23MotionActivityAssetView_motionImageView];
  id v4 = [v3 superview];
  if (v4)
  {
    id v5 = v4;
    [v3 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v6 = [v3 leadingAnchor];
    id v7 = [v5 leadingAnchor];
    id v8 = [v6 constraintEqualToAnchor:v7];

    [v8 setConstant:8.0];
    if (v8)
    {
      id v8 = v8;
      [v8 setActive:1];

      id v3 = v8;
    }
  }
  else
  {
    id v8 = 0;
    id v5 = v3;
  }

  id v9 = *(id *)&v1[v2];
  id v10 = [v9 superview];
  if (v10)
  {
    uint64_t v11 = v10;
    [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v12 = [v9 topAnchor];
    id v13 = [v11 topAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13];

    [v14 setConstant:8.0];
    if (v14)
    {
      id v14 = v14;
      [v14 setActive:1];

      id v9 = v14;
    }
  }
  else
  {
    id v14 = 0;
    uint64_t v11 = v9;
  }

  id v15 = *(id *)&v1[v2];
  [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v16 = [v15 heightAnchor];
  id v17 = [v15 widthAnchor];
  id v18 = [v16 constraintEqualToAnchor:v17 multiplier:1.0];

  [v18 setActive:1];
  id v19 = *(id *)&v1[v2];
  [v1 frame];
  double v21 = v20 + -16.0;
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v22 = [v19 widthAnchor];
  id v23 = [v22 constraintEqualToConstant:v21];

  [v23 setActive:1];
  id v24 = *(id *)&v1[v2];
  id v25 = sub_1001DD438(0, 1, 8.0);

  unint64_t v26 = *(void **)&v1[v2];
  id v27 = *(id *)&v1[v71];
  id v28 = v26;
  [v27 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v29 = [v27 leadingAnchor];
  id v30 = [v28 trailingAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  [v31 setConstant:8.0];
  [v31 setActive:1];

  id v32 = [*(id *)&v1[v71] bottomAnchor];
  id v33 = [*(id *)&v1[v2] centerYAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  [v34 setActive:1];
  id v35 = *(id *)&v1[v71];
  id v36 = [v35 superview];
  if (v36)
  {
    uint64_t v37 = v36;
    [v35 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v38 = [v35 trailingAnchor];
    id v39 = [v37 trailingAnchor];
    id v40 = [v38 constraintLessThanOrEqualToAnchor:v39];

    [v40 setConstant:-8.0];
    if (v40)
    {
      id v40 = v40;
      [v40 setActive:1];

      id v35 = v40;
    }
    uint64_t v41 = v70;
    id v42 = &stru_1007D7000;
  }
  else
  {
    id v40 = 0;
    uint64_t v37 = v35;
    uint64_t v41 = v70;
    id v42 = &stru_1007D7000;
  }

  [*(id *)&v1[v71] setTextAlignment:0];
  id v43 = *(id *)&v1[v71];
  id v44 = [v43 superview];
  if (v44)
  {
    id v45 = v44;
    [v43 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v46 = [v43 topAnchor];
    id v47 = [v45 topAnchor];
    id v48 = [v46 constraintGreaterThanOrEqualToAnchor:v47];

    [v48 setConstant:8.0];
    if (v48)
    {
      id v48 = v48;
      [v48 setActive:1];

      id v43 = v48;
    }
  }
  else
  {
    id v48 = 0;
    id v45 = v43;
  }

  int v49 = *(void **)&v1[v2];
  id v50 = *(id *)&v1[v41];
  id v51 = v49;
  [v50 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v52 = [v50 v42[79].name];
  id v53 = [v51 trailingAnchor];
  id v54 = [v52 constraintEqualToAnchor:v53];

  [v54 setConstant:8.0];
  [v54 setActive:1];

  id v55 = [*(id *)&v1[v41] topAnchor];
  id v56 = [*(id *)&v1[v2] centerYAnchor];
  id v57 = [v55 constraintEqualToAnchor:v56];

  [v57 setActive:1];
  id v58 = *(id *)&v1[v41];
  id v59 = [v58 superview];
  if (v59)
  {
    uint64_t v60 = v59;
    [v58 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v61 = [v58 trailingAnchor];
    id v62 = [v60 trailingAnchor];
    id v63 = [v61 constraintLessThanOrEqualToAnchor:v62];

    [v63 setConstant:-8.0];
    if (v63)
    {
      id v63 = v63;
      [v63 setActive:1];

      id v58 = v63;
    }
    CGFloat v64 = &selRef_drawMapRect_zoomScale_inContext_;
  }
  else
  {
    id v63 = 0;
    uint64_t v60 = v58;
    CGFloat v64 = &selRef_drawMapRect_zoomScale_inContext_;
  }

  id v65 = *(id *)&v1[v41];
  id v66 = sub_1001DD438(2, 1, 8.0);

  unint64_t v67 = *(void **)&v1[v41];
  uint64_t v68 = v64[133];

  return [v67 v68];
}

void sub_100245838()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Journal23MotionActivityAssetView_exerciseNameLabel;
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal23MotionActivityAssetView_exerciseNameLabel) setHidden:0];
  uint64_t v3 = OBJC_IVAR____TtC7Journal23MotionActivityAssetView_workoutDataLabel;
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal23MotionActivityAssetView_workoutDataLabel) setHidden:0];
  id v61 = (char *)v3;
  [*(id *)(v0 + v3) setTextAlignment:1];
  [*(id *)(v0 + v2) setTextAlignment:1];
  id v4 = *(id *)(v0 + v2);
  id v5 = [v4 superview];
  if (v5)
  {
    id v6 = v5;
    [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v7 = [v4 topAnchor];
    id v8 = [v6 topAnchor];
    id v9 = [v7 constraintEqualToAnchor:v8];

    [v9 setConstant:12.0];
    if (v9)
    {
      id v9 = v9;
      [v9 setActive:1];

      id v4 = v9;
    }
  }
  else
  {
    id v9 = 0;
    id v6 = v4;
  }

  id v10 = *(id *)(v1 + v2);
  id v11 = [v10 superview];
  if (v11)
  {
    id v12 = v11;
    [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v13 = [v10 leadingAnchor];
    id v14 = [v12 leadingAnchor];
    id v15 = [v13 constraintEqualToAnchor:v14];

    [v15 setConstant:8.0];
    if (v15)
    {
      id v15 = v15;
      [v15 setActive:1];

      id v10 = v15;
    }
  }
  else
  {
    id v15 = 0;
    id v12 = v10;
  }

  id v16 = *(id *)(v1 + v2);
  id v17 = [v16 superview];
  if (v17)
  {
    id v18 = v17;
    [v16 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v19 = [v16 trailingAnchor];
    id v20 = [v18 trailingAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20];

    [v21 setConstant:-8.0];
    if (v21)
    {
      id v21 = v21;
      [v21 setActive:1];

      id v16 = v21;
    }
  }
  else
  {
    id v21 = 0;
    id v18 = v16;
  }

  id v22 = *(id *)&v61[v1];
  id v23 = sub_1001DD438(0, 1, 12.0);

  id v24 = *(id *)&v61[v1];
  id v25 = [v24 superview];
  if (v25)
  {
    unint64_t v26 = v25;
    [v24 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v27 = [v24 leadingAnchor];
    id v28 = [v26 leadingAnchor];
    id v29 = [v27 constraintEqualToAnchor:v28];

    [v29 setConstant:12.0];
    if (v29)
    {
      id v29 = v29;
      [v29 setActive:1];

      id v24 = v29;
    }
  }
  else
  {
    id v29 = 0;
    unint64_t v26 = v24;
  }

  id v30 = *(id *)&v61[v1];
  id v31 = [v30 superview];
  if (v31)
  {
    id v32 = v31;
    [v30 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v33 = [v30 trailingAnchor];
    id v34 = [v32 trailingAnchor];
    id v35 = [v33 constraintEqualToAnchor:v34];

    [v35 setConstant:-12.0];
    if (v35)
    {
      id v35 = v35;
      [v35 setActive:1];

      id v30 = v35;
    }
  }
  else
  {
    id v35 = 0;
    id v32 = v30;
  }

  uint64_t v36 = OBJC_IVAR____TtC7Journal23MotionActivityAssetView_motionImageView;
  uint64_t v37 = *(void **)(v1 + v2);
  id v38 = *(id *)(v1 + OBJC_IVAR____TtC7Journal23MotionActivityAssetView_motionImageView);
  id v39 = v37;
  [v38 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v40 = [v38 topAnchor];
  id v41 = [v39 bottomAnchor];
  id v42 = [v40 constraintEqualToAnchor:v41];

  [v42 setConstant:5.0];
  [v42 setActive:1];

  id v43 = *(void **)&v61[v1];
  id v44 = *(id *)(v1 + v36);
  id v45 = v43;
  [v44 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v46 = [v44 bottomAnchor];
  id v47 = [v45 topAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47];

  [v48 setConstant:-5.0];
  [v48 setActive:1];

  id v49 = *(id *)(v1 + v36);
  id v50 = [v49 superview];
  if (v50)
  {
    id v51 = v50;
    [v49 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v52 = [v49 leadingAnchor];
    id v53 = [v51 leadingAnchor];
    id v54 = [v52 constraintEqualToAnchor:v53];

    [v54 setConstant:12.0];
    if (v54)
    {
      id v54 = v54;
      [v54 setActive:1];

      id v49 = v54;
    }
  }
  else
  {
    id v54 = 0;
    id v51 = v49;
  }

  id v55 = *(id *)(v1 + v36);
  id v56 = [v55 superview];
  if (v56)
  {
    id v57 = v56;
    [v55 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v58 = [v55 trailingAnchor];
    id v59 = [v57 trailingAnchor];
    id v60 = [v58 constraintEqualToAnchor:v59];

    [v60 setConstant:-12.0];
    if (v60)
    {
      id v62 = v60;
      [v62 setActive:1];

      id v55 = v62;
    }
    else
    {
      id v62 = 0;
    }
  }
  else
  {
    id v62 = 0;
    id v57 = v55;
  }
}

void sub_1002460E0()
{
  uint64_t v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Journal23MotionActivityAssetView_exerciseNameLabel;
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal23MotionActivityAssetView_exerciseNameLabel) setHidden:0];
  uint64_t v3 = OBJC_IVAR____TtC7Journal23MotionActivityAssetView_workoutDataLabel;
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal23MotionActivityAssetView_workoutDataLabel) setHidden:0];
  [*(id *)(v0 + v2) setTextAlignment:1];
  [*(id *)(v0 + v3) setTextAlignment:1];
  uint64_t v4 = qword_1007F7268;
  id v5 = *(id *)(v0 + v2);
  if (v4 != -1) {
    swift_once();
  }
  [v5 setFont:qword_10083D830];

  id v66 = (char *)v3;
  id v6 = *(void **)(v1 + v3);
  uint64_t v7 = qword_1007F7210;
  id v8 = v6;
  if (v7 != -1) {
    swift_once();
  }
  [v8 setFont:qword_10083D7D8];

  id v9 = *(id *)(v1 + v2);
  id v10 = [v9 superview];
  if (v10)
  {
    id v11 = v10;
    [v9 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v12 = [v9 topAnchor];
    id v13 = [v11 topAnchor];
    id v14 = [v12 constraintEqualToAnchor:v13];

    [v14 setConstant:25.0];
    if (v14)
    {
      id v14 = v14;
      [v14 setActive:1];

      id v9 = v14;
    }
  }
  else
  {
    id v14 = 0;
    id v11 = v9;
  }

  id v15 = *(id *)(v1 + v2);
  id v16 = [v15 superview];
  if (v16)
  {
    id v17 = v16;
    [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v18 = [v15 leadingAnchor];
    id v19 = [v17 leadingAnchor];
    id v20 = [v18 constraintEqualToAnchor:v19];

    [v20 setConstant:20.0];
    if (v20)
    {
      id v20 = v20;
      [v20 setActive:1];

      id v15 = v20;
    }
  }
  else
  {
    id v20 = 0;
    id v17 = v15;
  }

  id v21 = *(id *)(v1 + v2);
  id v22 = [v21 superview];
  if (v22)
  {
    id v23 = v22;
    [v21 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v24 = [v21 trailingAnchor];
    id v25 = [v23 trailingAnchor];
    id v26 = [v24 constraintEqualToAnchor:v25];

    [v26 setConstant:-20.0];
    if (v26)
    {
      id v26 = v26;
      [v26 setActive:1];

      id v21 = v26;
    }
  }
  else
  {
    id v26 = 0;
    id v23 = v21;
  }

  id v27 = *(id *)&v66[v1];
  id v28 = sub_1001DD438(0, 1, 25.0);

  id v29 = *(id *)&v66[v1];
  id v30 = [v29 superview];
  if (v30)
  {
    id v31 = v30;
    [v29 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v32 = [v29 leadingAnchor];
    id v33 = [v31 leadingAnchor];
    id v34 = [v32 constraintEqualToAnchor:v33];

    [v34 setConstant:20.0];
    if (v34)
    {
      id v34 = v34;
      [v34 setActive:1];

      id v29 = v34;
    }
  }
  else
  {
    id v34 = 0;
    id v31 = v29;
  }

  id v35 = *(id *)&v66[v1];
  id v36 = [v35 superview];
  if (v36)
  {
    uint64_t v37 = v36;
    [v35 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v38 = [v35 trailingAnchor];
    id v39 = [v37 trailingAnchor];
    id v40 = [v38 constraintEqualToAnchor:v39];

    [v40 setConstant:-20.0];
    if (v40)
    {
      id v40 = v40;
      [v40 setActive:1];

      id v35 = v40;
    }
  }
  else
  {
    id v40 = 0;
    uint64_t v37 = v35;
  }

  uint64_t v41 = OBJC_IVAR____TtC7Journal23MotionActivityAssetView_motionImageView;
  id v42 = *(void **)(v1 + v2);
  id v43 = *(id *)(v1 + OBJC_IVAR____TtC7Journal23MotionActivityAssetView_motionImageView);
  id v44 = v42;
  [v43 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v45 = [v43 topAnchor];
  id v46 = [v44 bottomAnchor];
  id v47 = [v45 constraintEqualToAnchor:v46];

  [v47 setConstant:15.0];
  [v47 setActive:1];

  id v48 = *(void **)&v66[v1];
  id v49 = *(id *)(v1 + v41);
  id v50 = v48;
  [v49 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v51 = [v49 bottomAnchor];
  id v52 = [v50 topAnchor];
  id v53 = [v51 constraintEqualToAnchor:v52];

  [v53 setConstant:-15.0];
  [v53 setActive:1];

  id v54 = *(id *)(v1 + v41);
  id v55 = [v54 superview];
  if (v55)
  {
    id v56 = v55;
    [v54 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v57 = [v54 leadingAnchor];
    id v58 = [v56 leadingAnchor];
    id v59 = [v57 constraintEqualToAnchor:v58];

    [v59 setConstant:12.0];
    if (v59)
    {
      id v59 = v59;
      [v59 setActive:1];

      id v54 = v59;
    }
  }
  else
  {
    id v59 = 0;
    id v56 = v54;
  }

  id v60 = *(id *)(v1 + v41);
  id v61 = [v60 superview];
  if (v61)
  {
    id v62 = v61;
    [v60 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v63 = [v60 trailingAnchor];
    id v64 = [v62 trailingAnchor];
    id v65 = [v63 constraintEqualToAnchor:v64];

    [v65 setConstant:-12.0];
    if (v65)
    {
      id v67 = v65;
      [v67 setActive:1];

      id v60 = v67;
    }
    else
    {
      id v67 = 0;
    }
  }
  else
  {
    id v67 = 0;
    id v62 = v60;
  }
}

id sub_100246B10()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MotionActivityGridView();
  return [super dealloc];
}

uint64_t sub_100246B48()
{
  return type metadata accessor for MotionActivityGridView();
}

uint64_t type metadata accessor for MotionActivityGridView()
{
  uint64_t result = qword_100804E78;
  if (!qword_100804E78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_100246B9C()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_100246BE0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100246C18()
{
}

uint64_t sub_100246C20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100246C30()
{
  return swift_release();
}

uint64_t sub_100246C38()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100804E88);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100804E88);
  if (qword_1007F7D38 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EBA8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_100246D00(char a1)
{
  unint64_t v1 = 0xD00000000000001ALL;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v2 = 0x80000001006932F0;
    }
    else {
      unint64_t v2 = 0x80000001006932D0;
    }
  }
  else
  {
    unint64_t v1 = 0xD000000000000016;
    unint64_t v2 = 0x8000000100693310;
  }
  uint64_t v45 = v1;
  unint64_t v46 = v2;
  v3._id countAndFlagsBits = 0x292B645C282A735CLL;
  v3._object = (void *)0xEB000000002A735CLL;
  String.append(_:)(v3);
  id v4 = objc_allocWithZone((Class)NSRegularExpression);
  id v5 = sub_10004A408(v45, v46, 0);
  NSString v6 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRetain();
  uint64_t v7 = String.UTF16View.count.getter();
  swift_bridgeObjectRelease();
  id v8 = [v5 firstMatchInString:v6 options:0 range:0];

  if (!v8) {
    goto LABEL_16;
  }
  id v9 = [v8 rangeAtIndex:1];
  uint64_t v11 = v10;
  NSString v12 = String._bridgeToObjectiveC()();
  id v13 = [v12 substringWithRange:v9, v11];

  uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v16 = v15;

  uint64_t v17 = HIBYTE(v16) & 0xF;
  uint64_t v18 = v14 & 0xFFFFFFFFFFFFLL;
  if ((v16 & 0x2000000000000000) != 0) {
    uint64_t v19 = HIBYTE(v16) & 0xF;
  }
  else {
    uint64_t v19 = v14 & 0xFFFFFFFFFFFFLL;
  }
  if (!v19)
  {
    swift_bridgeObjectRelease();
LABEL_61:
    if (qword_1007F6C20 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    sub_100026A54(v39, (uint64_t)qword_100804E88);
    id v40 = Logger.logObject.getter();
    os_log_type_t v41 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v40, v41))
    {
      id v42 = (uint8_t *)swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      *(_DWORD *)id v42 = 136315138;
      uint64_t v43 = _NSRange.description.getter();
      sub_10011EA98(v43, v44, &v45);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v40, v41, "Unable to get index from indexRange: %s", v42, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }

LABEL_16:
    return;
  }
  if ((v16 & 0x1000000000000000) != 0)
  {
    int v38 = sub_1004B51D0(v14, v16, 10);
    swift_bridgeObjectRelease();
    if ((v38 & 0x10000) == 0) {
      goto LABEL_52;
    }
    goto LABEL_61;
  }
  if ((v16 & 0x2000000000000000) == 0)
  {
    if ((v14 & 0x1000000000000000) != 0) {
      id v20 = (unsigned __int8 *)((v16 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      id v20 = (unsigned __int8 *)_StringObject.sharedUTF8.getter();
    }
    unsigned int v21 = (sub_1004B51A0(v20, v18, 10) >> 16) & 1;
LABEL_51:
    swift_bridgeObjectRelease();
    if (!v21)
    {
LABEL_52:

      return;
    }
    goto LABEL_61;
  }
  uint64_t v45 = v14;
  unint64_t v46 = v16 & 0xFFFFFFFFFFFFFFLL;
  if (v14 == 43)
  {
    if (!v17) {
      goto LABEL_68;
    }
    if (v17 == 1) {
      goto LABEL_38;
    }
    unsigned int v23 = (BYTE1(v14) - 48);
    if (v23 > 9) {
      goto LABEL_38;
    }
    if (v17 != 2)
    {
      if ((BYTE2(v14) - 48) > 9u) {
        goto LABEL_38;
      }
      LOWORD(v23) = 10 * v23 + (BYTE2(v14) - 48);
      uint64_t v24 = v17 - 3;
      if (v24)
      {
        id v25 = (unsigned __int8 *)&v45 + 3;
        while (1)
        {
          unsigned int v26 = *v25 - 48;
          if (v26 > 9) {
            goto LABEL_38;
          }
          int v27 = (__int16)(10 * v23);
          if (v27 != 10 * (__int16)v23) {
            goto LABEL_38;
          }
          unsigned int v23 = v27 + v26;
          if ((__int16)(v27 + v26) != v23) {
            goto LABEL_38;
          }
          unsigned int v21 = 0;
          ++v25;
          if (!--v24) {
            goto LABEL_51;
          }
        }
      }
    }
LABEL_50:
    unsigned int v21 = 0;
    goto LABEL_51;
  }
  if (v14 != 45)
  {
    if (!v17) {
      goto LABEL_38;
    }
    unsigned int v28 = (v14 - 48);
    if (v28 > 9) {
      goto LABEL_38;
    }
    if (v17 != 1)
    {
      if ((BYTE1(v14) - 48) > 9u) {
        goto LABEL_38;
      }
      LOWORD(v28) = 10 * v28 + (BYTE1(v14) - 48);
      uint64_t v29 = v17 - 2;
      if (v29)
      {
        id v30 = (unsigned __int8 *)&v45 + 2;
        while (1)
        {
          unsigned int v31 = *v30 - 48;
          if (v31 > 9) {
            goto LABEL_38;
          }
          int v32 = (__int16)(10 * v28);
          if (v32 != 10 * (__int16)v28) {
            goto LABEL_38;
          }
          unsigned int v28 = v32 + v31;
          if ((__int16)(v32 + v31) != v28) {
            goto LABEL_38;
          }
          unsigned int v21 = 0;
          ++v30;
          if (!--v29) {
            goto LABEL_51;
          }
        }
      }
    }
    goto LABEL_50;
  }
  if (v17)
  {
    if (v17 != 1)
    {
      unsigned int v22 = (BYTE1(v14) - 48);
      if (v22 <= 9)
      {
        if (v17 == 2)
        {
          unsigned int v21 = 0;
          goto LABEL_51;
        }
        if ((BYTE2(v14) - 48) <= 9u)
        {
          LOWORD(v33) = -10 * v22 - (BYTE2(v14) - 48);
          uint64_t v34 = v17 - 3;
          if (!v34) {
            goto LABEL_50;
          }
          id v35 = (unsigned __int8 *)&v45 + 3;
          while (1)
          {
            unsigned int v36 = *v35 - 48;
            if (v36 > 9) {
              break;
            }
            int v37 = (__int16)(10 * v33);
            if (v37 != 10 * (__int16)v33) {
              break;
            }
            int v33 = v37 - v36;
            if ((__int16)(v37 - v36) != v33) {
              break;
            }
            unsigned int v21 = 0;
            ++v35;
            if (!--v34) {
              goto LABEL_51;
            }
          }
        }
      }
    }
LABEL_38:
    unsigned int v21 = 1;
    goto LABEL_51;
  }
  __break(1u);
LABEL_68:
  __break(1u);
}

uint64_t sub_100247484(void *a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v9 = (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001FB8C();
  uint64_t v10 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v11 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v11;
  *(void *)(v12 + 24) = a1;
  aBlock[4] = sub_1002487B4;
  void aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007A0B78;
  id v13 = _Block_copy(aBlock);
  id v14 = a1;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_100247728(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (char *)Strong;
    id v5 = [objc_allocWithZone((Class)UIStackView) init];
    id v6 = [objc_allocWithZone((Class)UIStackView) init];
    id v7 = [objc_allocWithZone((Class)UILabel) init];
    uint64_t v97 = OBJC_IVAR____TtC7Journal21FullScreenContactView_backgroundView;
    id v8 = *(id *)&v4[OBJC_IVAR____TtC7Journal21FullScreenContactView_backgroundView];
    UIView.removeAllConstraints()();

    uint64_t v98 = OBJC_IVAR____TtC7Journal21FullScreenContactView_dropShadowView;
    id v9 = *(id *)&v4[OBJC_IVAR____TtC7Journal21FullScreenContactView_dropShadowView];
    UIView.removeAllConstraints()();

    [v5 setUserInteractionEnabled:1];
    [v5 setAxis:1];
    [v5 setAlignment:3];
    if (qword_1007F72F8 != -1) {
      swift_once();
    }
    [v5 setSpacing:*(double *)&qword_10083D908];
    id v10 = [self mainBundle];
    v103._object = (void *)0x80000001006933A0;
    v11._id countAndFlagsBits = 0x697463656E6E6F43;
    v11._object = (void *)0xEB00000000736E6FLL;
    v12._id countAndFlagsBits = 0;
    v12._object = (void *)0xE000000000000000;
    v103._id countAndFlagsBits = 0xD00000000000001FLL;
    NSLocalizedString(_:tableName:bundle:value:comment:)(v11, (Swift::String_optional)0, (NSBundle)v10, v12, v103);

    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v7 setText:v13];

    id v14 = [objc_allocWithZone((Class)UILabel) init];
    id v15 = [objc_allocWithZone((Class)UILabel) init];
    id v16 = [objc_allocWithZone((Class)UIButton) init];
    unint64_t v96 = v7;
    sub_100540B38(v6, v14, v15, v7, 0, v16);

    uint64_t v17 = OBJC_IVAR____TtC7Journal21FullScreenContactView_contactAssetView;
    uint64_t v18 = *(unsigned char **)&v4[OBJC_IVAR____TtC7Journal21FullScreenContactView_contactAssetView];
    uint64_t v19 = v18[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType];
    v18[OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType] = 5;
    uint64_t v20 = OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated;
    id v95 = v6;
    if (v18[OBJC_IVAR____TtC7Journal16JournalAssetView_hasCalledSizeTypeUpdated] == 1)
    {
      switch(v19)
      {
        case 5:
          swift_bridgeObjectRelease();
          uint64_t v22 = v97;
          break;
        default:
          char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v24 = v18;
          swift_bridgeObjectRelease();
          uint64_t v22 = v97;
          if ((v23 & 1) == 0) {
            goto LABEL_9;
          }

          break;
      }
    }
    else
    {
      unsigned int v21 = v18;
      uint64_t v22 = v97;
LABEL_9:
      sub_1001E8268();
      v18[v20] = 1;
    }
    id v25 = *(char **)&v4[v17];
    uint64_t v26 = OBJC_IVAR____TtC7Journal16ContactAssetView_contactAsset;
    int v27 = *(void **)&v25[OBJC_IVAR____TtC7Journal16ContactAssetView_contactAsset];
    *(void *)&v25[OBJC_IVAR____TtC7Journal16ContactAssetView_contactAsset] = a2;
    id v28 = a2;
    uint64_t v29 = v25;

    sub_100521E54();
    sub_100521BC0();
    uint64_t v30 = *(void *)&v25[v26];
    if (v30)
    {
      uint64_t v31 = swift_allocObject();
      swift_unknownObjectWeakInit();
      int v32 = (void (**)())(v30 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
      uint64_t v33 = *(void *)(v30 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
      *int v32 = sub_1002487D4;
      v32[1] = (void (*)())v31;
      sub_10001ABB8(v33);
    }

    [v5 addArrangedSubview:*(void *)&v4[v22]];
    id v34 = *(id *)&v4[v98];
    sub_1005412A4(v34);

    id v35 = [*(id *)&v4[v98] layer];
    if (qword_1007F7CA0 != -1) {
      swift_once();
    }
    long long v99 = xmmword_10083E9C0;
    long long v100 = *(_OWORD *)&qword_10083E9D0;
    long long v101 = xmmword_10083E9E0;
    long long v102 = *(_OWORD *)&qword_10083E9F0;
    [v35 setCornerRadii:&v99];

    id v36 = [*(id *)&v4[v17] layer];
    long long v99 = xmmword_10083E9C0;
    long long v100 = *(_OWORD *)&qword_10083E9D0;
    long long v101 = xmmword_10083E9E0;
    long long v102 = *(_OWORD *)&qword_10083E9F0;
    [v36 setCornerRadii:&v99];

    [*(id *)&v4[v17] setClipsToBounds:1];
    int v37 = *(void **)&v4[v22];
    [v37 addSubview:*(void *)&v4[v98]];
    [v37 addSubview:*(void *)&v4[v17]];
    uint64_t v38 = qword_1007F7300;
    id v39 = v37;
    if (v38 != -1) {
      swift_once();
    }
    double v40 = *(double *)&qword_10083D910;
    id v41 = [v39 superview];
    id v42 = &stru_1007D7000;
    if (v41)
    {
      uint64_t v43 = v41;
      [v39 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v44 = [v39 leadingAnchor];
      id v45 = [v43 leadingAnchor];
      id v46 = [v44 constraintEqualToAnchor:v45];

      [v46 setConstant:v40];
      if (v46)
      {
        id v46 = v46;
        [v46 setActive:1];

        id v39 = v46;
      }
      uint64_t v47 = v97;

      id v42 = &stru_1007D7000;
    }
    else
    {
      id v46 = 0;
      uint64_t v43 = v39;
      uint64_t v47 = v97;
    }

    double v48 = *(double *)&qword_10083D910;
    id v49 = *(id *)&v4[v47];
    id v50 = [v49 superview];
    if (v50)
    {
      id v51 = v50;
      [v49 v42[96].name];
      id v52 = [v49 trailingAnchor];
      id v53 = [v51 trailingAnchor];
      id v54 = [v52 constraintEqualToAnchor:v53];

      [v54 setConstant:-v48];
      uint64_t v55 = v98;
      if (v54)
      {
        id v54 = v54;
        [v54 setActive:1];

        id v49 = v54;
      }
      id v56 = v95;

      id v42 = &stru_1007D7000;
    }
    else
    {
      id v54 = 0;
      id v51 = v49;
      id v56 = v95;
      uint64_t v55 = v98;
    }

    id v57 = *(id *)&v4[v47];
    [v57 v42[96].name];
    id v58 = [v57 heightAnchor];
    id v59 = [v57 widthAnchor];
    id v60 = [v58 constraintEqualToAnchor:v59 multiplier:1.0];

    [v60 setActive:1];
    id v61 = *(id *)&v4[v17];
    sub_1001DCF60(0.0);

    swift_bridgeObjectRelease();
    id v62 = *(id *)&v4[v55];
    sub_1001DCF60(0.0);

    swift_bridgeObjectRelease();
    [v5 addArrangedSubview:v56];
    if (qword_1007F7368 != -1) {
      swift_once();
    }
    double v63 = *(double *)&qword_10083D978;
    id v64 = [v56 superview];
    if (v64)
    {
      id v65 = v64;
      [v56 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v66 = [v56 leadingAnchor];
      id v67 = [v65 leadingAnchor];
      id v68 = [v66 constraintEqualToAnchor:v67];

      [v68 setConstant:v63];
      id v69 = v68;
      [v69 setActive:1];
    }
    double v70 = *(double *)&qword_10083D978;
    id v71 = [v56 superview];
    if (v71)
    {
      CGFloat v72 = v71;
      [v56 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v73 = [v56 trailingAnchor];
      id v74 = [v72 trailingAnchor];
      id v75 = [v73 constraintEqualToAnchor:v74];

      [v75 setConstant:-v70];
      id v76 = v75;
      [v76 setActive:1];
    }
    [v4 addSubview:v5];
    id v77 = [v5 superview];
    if (v77)
    {
      uint64_t v78 = v77;
      [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v79 = [v5 centerYAnchor];
      id v80 = [v78 centerYAnchor];
      id v81 = [v79 constraintEqualToAnchor:v80];

      [v81 setConstant:0.0];
      id v82 = v81;
      [v82 setActive:1];
    }
    id v83 = [v5 superview];
    if (v83)
    {
      uint64_t v84 = v83;
      [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v85 = [v5 leadingAnchor];
      id v86 = [v84 leadingAnchor];
      id v87 = [v85 constraintEqualToAnchor:v86];

      [v87 setConstant:0.0];
      id v88 = v87;
      [v88 setActive:1];
    }
    id v89 = [v5 superview];
    if (v89)
    {
      id v90 = v89;
      [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v91 = [v5 trailingAnchor];
      id v92 = [v90 trailingAnchor];
      id v93 = [v91 constraintEqualToAnchor:v92];

      [v93 setConstant:0.0];
      id v94 = v93;
      [v94 setActive:1];
    }
    [v4 layoutIfNeeded];
    [v5 layoutIfNeeded];
    [*(id *)&v4[v17] layoutIfNeeded];
  }
}

id sub_100248448(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC7Journal21FullScreenContactView_contactAsset] = 0;
  uint64_t v9 = OBJC_IVAR____TtC7Journal21FullScreenContactView_contactAssetView;
  type metadata accessor for ContactAssetGridView();
  id v10 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  Swift::String v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal21FullScreenContactView_backgroundView;
  *(void *)&v11[v12] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal21FullScreenContactView_dropShadowView;
  *(void *)&v11[v13] = [objc_allocWithZone((Class)UIView) init];

  v15.receiver = v11;
  v15.super_class = (Class)type metadata accessor for FullScreenContactView();
  return [super initWithFrame:a1, a2, a3, a4];
}

id sub_10024856C(void *a1)
{
  *(void *)&v1[OBJC_IVAR____TtC7Journal21FullScreenContactView_contactAsset] = 0;
  uint64_t v3 = OBJC_IVAR____TtC7Journal21FullScreenContactView_contactAssetView;
  type metadata accessor for ContactAssetGridView();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC7Journal21FullScreenContactView_backgroundView;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UIView) init];
  uint64_t v7 = OBJC_IVAR____TtC7Journal21FullScreenContactView_dropShadowView;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UIView) init];

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for FullScreenContactView();
  [super initWithCoder:a1];

  return v8;
}

id sub_100248678()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullScreenContactView();
  return [super dealloc];
}

uint64_t type metadata accessor for FullScreenContactView()
{
  return self;
}

uint64_t sub_10024873C()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100248774()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1002487B4()
{
  sub_100247728(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1002487BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1002487CC()
{
  return swift_release();
}

void sub_1002487D4()
{
}

unint64_t sub_1002487E0()
{
  unint64_t result = sub_1003976D4((uint64_t)_swiftEmptyArrayStorage);
  qword_10083D218 = result;
  return result;
}

uint64_t type metadata accessor for CachedPlaces()
{
  return self;
}

id sub_10024882C()
{
  unint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = (objc_class *)type metadata accessor for TitleValueTableViewController();
  v20.receiver = v0;
  v20.super_class = v5;
  [super viewDidLoad];
  id v6 = [v0 navigationItem];
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1006D6D00;
  sub_10001B284(0, (unint64_t *)&qword_100803F80);
  sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  v21.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v8.value._id countAndFlagsBits = 0x65736F6C43;
  v8.value._object = (void *)0xE500000000000000;
  v21.value.super.Class isa = 0;
  v22.value.super.super.Class isa = 0;
  *(UIBarButtonItem *)(v7 + 32) = UIBarButtonItem.init(title:image:primaryAction:menu:)(v8, v21, v22, v23);
  v19[1] = v7;
  specialized Array._endMutation()();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v6 setLeftBarButtonItems:isa];

  id result = [v0 tableView];
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  Swift::String v11 = result;
  id v12 = [objc_allocWithZone((Class)UIRefreshControl) init];
  [v11 setRefreshControl:v12];

  id result = [v1 tableView];
  if (!result)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v13 = result;
  id v14 = [result refreshControl];

  if (v14)
  {
    [v14 addTarget:v1 action:"refreshData" forControlEvents:4096];
  }
  (*(void (**)(void))((swift_isaMask & *v1) + 0x78))();
  uint64_t v15 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v4, 1, 1, v15);
  type metadata accessor for MainActor();
  id v16 = v1;
  uint64_t v17 = static MainActor.shared.getter();
  uint64_t v18 = (void *)swift_allocObject();
  void v18[2] = v17;
  v18[3] = &protocol witness table for MainActor;
  v18[4] = v16;
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_100804FC8, (uint64_t)v18);
  return (id)swift_release();
}

void sub_100248BB8()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    unint64_t v1 = Strong;
    [Strong dismissViewControllerAnimated:1 completion:0];
  }
}

uint64_t sub_100248C64(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v4[2] = a4;
  v4[3] = type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  Swift::String_optional v8 = (uint64_t (*)(void))(*(void *)((swift_isaMask & *a4) + 0x80) + **(int **)((swift_isaMask & *a4) + 0x80));
  id v6 = (void *)swift_task_alloc();
  v4[5] = v6;
  *id v6 = v4;
  v6[1] = sub_100248D94;
  return v8();
}

uint64_t sub_100248D94(uint64_t a1)
{
  *(void *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100248ED8, v3, v2);
}

id sub_100248ED8()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = (char *)v0[2];
  swift_release();
  *(void *)&v2[OBJC_IVAR____TtC7Journal29TitleValueTableViewController_data] = v1;
  swift_bridgeObjectRelease();
  id result = [v2 tableView];
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  id v4 = result;
  uint64_t v5 = (void *)v0[2];
  [result reloadData];

  id result = [v5 tableView];
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  id v6 = result;
  uint64_t v7 = (void *)v0[2];
  [result reloadData];

  id result = [v7 tableView];
  if (!result)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  Swift::String_optional v8 = result;
  id v9 = [result refreshControl];

  [v9 endRefreshing];
  objc_super v10 = (uint64_t (*)(void))v0[1];
  return (id)v10();
}

uint64_t sub_100249178()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 16) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10024920C, v2, v1);
}

uint64_t sub_10024920C()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(double *))(v0 + 8);
  return v1(_swiftEmptyArrayStorage);
}

id sub_100249704()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for TitleValueTableViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for TitleValueTableViewController()
{
  return self;
}

uint64_t sub_10024976C(uint64_t a1)
{
  uint64_t result = 0;
  if ((a1 & 0x8000000000000000) == 0)
  {
    uint64_t v4 = *(void *)(v1 + OBJC_IVAR____TtC7Journal29TitleValueTableViewController_data);
    if (*(void *)(v4 + 16) > a1) {
      return *(void *)(*(void *)(v4 + 24 * a1 + 48) + 16);
    }
  }
  return result;
}

uint64_t sub_1002497A4(uint64_t a1)
{
  uint64_t v2 = 0;
  if ((a1 & 0x8000000000000000) == 0)
  {
    uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC7Journal29TitleValueTableViewController_data);
    if (*(void *)(v3 + 16) > a1)
    {
      uint64_t v2 = *(void *)(v3 + 24 * a1 + 32);
      swift_bridgeObjectRetain();
    }
  }
  return v2;
}

id sub_100249808()
{
  id v1 = [objc_allocWithZone((Class)UITableViewCell) initWithStyle:3 reuseIdentifier:0];
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Journal29TitleValueTableViewController_data);
  swift_bridgeObjectRetain();
  uint64_t v3 = IndexPath.section.getter();
  if (v3 < 0) {
    goto LABEL_19;
  }
  if (v3 >= *(void *)(v2 + 16)) {
    goto LABEL_19;
  }
  uint64_t v4 = *(void *)(v2 + 24 * v3 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = IndexPath.row.getter();
  if (v5 < 0 || v5 >= *(void *)(v4 + 16)) {
    goto LABEL_19;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v6 = [v1 textLabel];
  if (v6)
  {
    uint64_t v7 = v6;
    id v8 = [self boldSystemFontOfSize:18.0];
    [v7 setFont:v8];
  }
  id v9 = [v1 textLabel];
  if (v9)
  {
    objc_super v10 = v9;
    [v9 setNumberOfLines:0];
  }
  id v11 = [v1 textLabel];
  if (v11)
  {
    id v12 = v11;
    swift_bridgeObjectRetain();
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v12 setText:v13];
  }
  id v14 = [v1 detailTextLabel];
  if (v14)
  {
    uint64_t v15 = v14;
    id v16 = [self systemFontOfSize:14.0];
    [v15 setFont:v16];
  }
  id v17 = [v1 detailTextLabel];
  if (v17)
  {
    uint64_t v18 = v17;
    [v17 setNumberOfLines:0];
  }
  id v19 = [v1 detailTextLabel];
  if (!v19)
  {
    swift_bridgeObjectRelease();
LABEL_19:
    swift_bridgeObjectRelease();
    return v1;
  }
  objc_super v20 = v19;
  swift_bridgeObjectRelease();
  NSString v21 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v20 setText:v21];

  return v1;
}

uint64_t sub_100249AE0()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Journal29TitleValueTableViewController_data);
  swift_bridgeObjectRetain();
  uint64_t v2 = IndexPath.section.getter();
  if ((v2 & 0x8000000000000000) == 0 && v2 < *(void *)(v1 + 16))
  {
    uint64_t v3 = *(void *)(v1 + 24 * v2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v4 = IndexPath.row.getter();
    if ((v4 & 0x8000000000000000) == 0 && v4 < *(void *)(v3 + 16))
    {
      uint64_t v5 = v3 + 32 * v4;
      uint64_t v6 = *(void *)(v5 + 48);
      uint64_t v7 = *(void *)(v5 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      id v8 = [self generalPasteboard];
      NSString v9 = String._bridgeToObjectiveC()();
      [v8 setString:v9];
    }
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100249C38(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (void *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_100248C64(a1, v4, v5, v6);
}

uint64_t sub_100249CEC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100249D24()
{
}

uint64_t sub_100249D30(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (void *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_100248C64(a1, v4, v5, v6);
}

void sub_100249DE4()
{
  sub_100249E08();
  byte_10083D220 = v0 & 1;
}

void sub_100249E08()
{
  id v0 = [self processInfo];
  id v1 = [v0 arguments];

  uint64_t v2 = (void *)static Array._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v3 = v2[2];
  if (v3)
  {
    if (v3 == 1)
    {
LABEL_13:
      swift_bridgeObjectRelease();
      return;
    }
    if ((v2[4] != 0xD000000000000017 || v2[5] != 0x8000000100693430)
      && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
    {
      uint64_t v9 = v2 + 7;
      uint64_t v10 = 2;
      while (v3 != v10)
      {
        unint64_t v4 = v10;
        if (*(v9 - 1) != 0xD000000000000017 || *v9 != 0x8000000100693430)
        {
          char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
          uint64_t v10 = v4 + 1;
          v9 += 2;
          if ((v11 & 1) == 0) {
            continue;
          }
        }
        goto LABEL_7;
      }
      goto LABEL_13;
    }
    unint64_t v4 = 1;
LABEL_7:
    if (v4 < v3)
    {
      uint64_t v5 = &v2[2 * v4 + 4];
      uint64_t v7 = *v5;
      uint64_t v6 = v5[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v7 != 49 || v6 != 0xE100000000000000) {
        _stringCompareWithSmolCheck(_:_:expecting:)();
      }
      goto LABEL_13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void static NSPersistentCloudKitContainer.defaultDirectoryURL()()
{
  v2.receiver = (id)swift_getObjCClassFromMetadata();
  v2.super_class = (Class)&OBJC_METACLASS___NSPersistentCloudKitContainer;
  id v0 = [super defaultDirectoryURL];
  static URL._unconditionallyBridgeFromObjectiveC(_:)();

  if (qword_1007F6C30 != -1) {
    swift_once();
  }
  if (byte_10083D220 == 1)
  {
    v1._id countAndFlagsBits = 0x726F745374736554;
    v1._object = (void *)0xEA00000000007365;
    URL.appendPathComponent(_:)(v1);
  }
}

char *sub_10024A24C()
{
  id v0 = objc_allocWithZone((Class)type metadata accessor for InsightsCalendarDecorationView());
  return sub_10024A284();
}

char *sub_10024A284()
{
  uint64_t v1 = type metadata accessor for Locale();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = OBJC_IVAR____TtC7JournalP33_FE1AF9319DABE2D117B2C08623B665DB30InsightsCalendarDecorationView_imageView;
  id v5 = objc_allocWithZone((Class)UIImageView);
  uint64_t v6 = v0;
  *(void *)&v0[v4] = [v5 init];

  v34.receiver = v6;
  v34.super_class = (Class)type metadata accessor for InsightsCalendarDecorationView();
  uint64_t v7 = (char *)objc_msgSendSuper2(&v34, "initWithFrame:", 0.0, 0.0, 0.0, 0.0);
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v8._id countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v8);
  String.LocalizationValue.StringInterpolation.appendInterpolation<A>(_:specifier:)();
  v9._id countAndFlagsBits = 0x73656972746E4520;
  v9._object = (void *)0xE800000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v9);
  String.LocalizationValue.init(stringInterpolation:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  NSString v10 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v7 setAccessibilityLabel:v10];

  uint64_t v11 = OBJC_IVAR____TtC7JournalP33_FE1AF9319DABE2D117B2C08623B665DB30InsightsCalendarDecorationView_imageView;
  id v12 = *(void **)&v7[OBJC_IVAR____TtC7JournalP33_FE1AF9319DABE2D117B2C08623B665DB30InsightsCalendarDecorationView_imageView];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v13 = v12;
  NSString v14 = String._bridgeToObjectiveC()();
  id v15 = [self systemImageNamed:v14];

  [v13 setImage:v15];
  id v16 = *(void **)&v7[v11];
  id v17 = self;
  id v18 = v16;
  id v19 = [v17 configurationWithTextStyle:UIFontTextStyleCaption2 scale:1];
  [v18 setPreferredSymbolConfiguration:v19];

  objc_super v20 = *(void **)&v7[v11];
  [v7 addSubview:v20];
  NSString v21 = self;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1006D6D20;
  id v23 = [v20 topAnchor];
  id v24 = [v7 topAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24 constant:-3.0];

  *(void *)(v22 + 32) = v25;
  id v26 = [*(id *)&v7[v11] bottomAnchor];
  id v27 = [v7 bottomAnchor];
  id v28 = [v26 constraintLessThanOrEqualToAnchor:v27];

  *(void *)(v22 + 40) = v28;
  id v29 = [*(id *)&v7[v11] centerXAnchor];
  id v30 = [v7 centerXAnchor];
  id v31 = [v29 constraintEqualToAnchor:v30];

  *(void *)(v22 + 48) = v31;
  specialized Array._endMutation()();
  sub_1001E3DF8();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v21 activateConstraints:isa];

  return v7;
}

id sub_10024A850()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InsightsCalendarDecorationView();
  return [super dealloc];
}

uint64_t type metadata accessor for InsightsCalendarDecorationView()
{
  return self;
}

ValueMetadata *type metadata accessor for VisitDateFormatStyle()
{
  return &type metadata for VisitDateFormatStyle;
}

uint64_t sub_10024A8CC(uint64_t a1)
{
  unint64_t v2 = sub_10024BE24();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_10024A908(uint64_t a1)
{
  unint64_t v2 = sub_10024BE24();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_10024A944@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_10024BA78(a1);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_10024A970(void *a1)
{
  uint64_t v2 = sub_100010218(&qword_100805020);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_10024BE24();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_10024AA84()
{
  unint64_t result = qword_100805000;
  if (!qword_100805000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805000);
  }
  return result;
}

unint64_t sub_10024AADC()
{
  unint64_t result = qword_100805008;
  if (!qword_100805008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805008);
  }
  return result;
}

unint64_t sub_10024AB34()
{
  unint64_t result = qword_100805010;
  if (!qword_100805010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805010);
  }
  return result;
}

unint64_t sub_10024AB8C()
{
  unint64_t result = qword_100805018;
  if (!qword_100805018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805018);
  }
  return result;
}

uint64_t sub_10024ABE0()
{
  uint64_t v0 = type metadata accessor for Locale();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = type metadata accessor for Calendar.Component();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  id v5 = &v12[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for Calendar();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::String v9 = &v12[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static Calendar.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v3 + 104))(v5, enum case for Calendar.Component.weekday(_:), v2);
  uint64_t v10 = Calendar.component(_:from:)();
  (*(void (**)(unsigned char *, uint64_t))(v3 + 8))(v5, v2);
  (*(void (**)(unsigned char *, uint64_t))(v7 + 8))(v9, v6);
  switch(v10)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t result = String.init(localized:table:bundle:locale:comment:)();
      break;
    default:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_10024B030(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for Date.FormatStyle.TimeStyle();
  uint64_t v68 = *(void *)(v3 - 8);
  uint64_t v69 = v3;
  __chkstk_darwin(v3);
  id v66 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v67 = type metadata accessor for Date.FormatStyle.DateStyle();
  uint64_t v65 = *(void *)(v67 - 8);
  __chkstk_darwin(v67);
  id v64 = (char *)&v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for Date.FormatStyle.Symbol.Day();
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  id v61 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = type metadata accessor for Date.FormatStyle.Symbol.Month();
  uint64_t v56 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  id v54 = (char *)&v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = type metadata accessor for Date.FormatStyle();
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  id v53 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v55 = (char *)&v52 - v10;
  __chkstk_darwin(v11);
  id v57 = (char *)&v52 - v12;
  uint64_t v13 = type metadata accessor for Date();
  uint64_t v76 = *(void *)(v13 - 8);
  uint64_t v77 = v13;
  __chkstk_darwin(v13);
  id v74 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = type metadata accessor for Locale();
  __chkstk_darwin(v15 - 8);
  id v17 = (char *)&v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v18 - 8);
  id v80 = (char *)&v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for Calendar.Component();
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  id v23 = (char *)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Calendar();
  uint64_t v25 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  id v27 = (char *)&v52 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  id v73 = *(void (**)(char *, void, uint64_t))(v21 + 104);
  v73(v23, enum case for Calendar.Component.weekday(_:), v20);
  uint64_t v79 = a1;
  uint64_t v28 = Calendar.component(_:from:)();
  id v71 = *(void (**)(char *, uint64_t))(v21 + 8);
  v71(v23, v20);
  id v29 = *(void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v75 = v24;
  CGFloat v72 = v29;
  v29(v27, v24);
  uint64_t v78 = v17;
  switch(v28)
  {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      String.LocalizationValue.init(stringLiteral:)();
      static Locale.current.getter();
      uint64_t v70 = String.init(localized:table:bundle:locale:comment:)();
      id v30 = v31;
      break;
    default:
      uint64_t v70 = 0;
      id v30 = (void *)0xE000000000000000;
      break;
  }
  static Calendar.current.getter();
  int v32 = v74;
  static Date.now.getter();
  v73(v23, enum case for Calendar.Component.year(_:), v20);
  uint64_t v33 = Calendar.compare(_:to:toGranularity:)();
  v71(v23, v20);
  (*(void (**)(char *, uint64_t))(v76 + 8))(v32, v77);
  v72(v27, v75);
  if (v33)
  {
    objc_super v34 = v64;
    static Date.FormatStyle.DateStyle.abbreviated.getter();
    id v35 = v66;
    static Date.FormatStyle.TimeStyle.omitted.getter();
    uint64_t v36 = Date.formatted(date:time:)();
    uint64_t v38 = v37;
    (*(void (**)(char *, uint64_t))(v68 + 8))(v35, v69);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v34, v67);
  }
  else
  {
    id v39 = v53;
    static FormatStyle<>.dateTime.getter();
    double v40 = v54;
    static Date.FormatStyle.Symbol.Month.abbreviated.getter();
    id v41 = v55;
    Date.FormatStyle.month(_:)();
    (*(void (**)(char *, uint64_t))(v56 + 8))(v40, v58);
    id v42 = *(void (**)(char *, uint64_t))(v59 + 8);
    uint64_t v43 = v60;
    v42(v39, v60);
    id v44 = v61;
    static Date.FormatStyle.Symbol.Day.defaultDigits.getter();
    id v45 = v57;
    Date.FormatStyle.day(_:)();
    (*(void (**)(char *, uint64_t))(v62 + 8))(v44, v63);
    v42(v41, v43);
    sub_10024BDCC();
    Date.formatted<A>(_:)();
    v42(v45, v43);
    uint64_t v36 = v81;
    uint64_t v38 = v82;
  }
  String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
  v46._id countAndFlagsBits = 0;
  v46._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v46);
  v47._id countAndFlagsBits = v70;
  v47._object = v30;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v47);
  swift_bridgeObjectRelease();
  v48._id countAndFlagsBits = 8236;
  v48._object = (void *)0xE200000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v48);
  v49._id countAndFlagsBits = v36;
  v49._object = v38;
  String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v49);
  swift_bridgeObjectRelease();
  v50._id countAndFlagsBits = 0;
  v50._object = (void *)0xE000000000000000;
  String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v50);
  String.LocalizationValue.init(stringInterpolation:)();
  static Locale.current.getter();
  return String.init(localized:table:bundle:locale:comment:)();
}

uint64_t sub_10024BA78(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for String.LocalizationValue.StringInterpolation();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for Locale();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for Calendar();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  char v9 = Calendar.isDateInToday(_:)();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v6 + 8);
  v10(v8, v5);
  if ((v9 & 1) != 0
    || (static Calendar.current.getter(), char v11 = Calendar.isDateInYesterday(_:)(), v10(v8, v5), (v11 & 1) != 0))
  {
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    return String.init(localized:table:bundle:locale:comment:)();
  }
  if (sub_1002AAAC8()) {
    return sub_10024ABE0();
  }
  uint64_t v13 = sub_1002AAEE8();
  if ((v14 & 1) == 0 && (unint64_t)(v13 - 2) <= 0x1B)
  {
    String.LocalizationValue.StringInterpolation.init(literalCapacity:interpolationCount:)();
    v15._id countAndFlagsBits = 0x2064657469736956;
    v15._object = (void *)0xE800000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v15);
    v16._id countAndFlagsBits = sub_1002AB2D8();
    String.LocalizationValue.StringInterpolation.appendInterpolation(_:)(v16);
    swift_bridgeObjectRelease();
    v17._id countAndFlagsBits = 0;
    v17._object = (void *)0xE000000000000000;
    String.LocalizationValue.StringInterpolation.appendLiteral(_:)(v17);
    String.LocalizationValue.init(stringInterpolation:)();
    static Locale.current.getter();
    return String.init(localized:table:bundle:locale:comment:)();
  }
  return sub_10024B030(a1);
}

unint64_t sub_10024BDCC()
{
  unint64_t result = qword_1007F9588;
  if (!qword_1007F9588)
  {
    type metadata accessor for Date.FormatStyle();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007F9588);
  }
  return result;
}

unint64_t sub_10024BE24()
{
  unint64_t result = qword_100805028;
  if (!qword_100805028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805028);
  }
  return result;
}

ValueMetadata *type metadata accessor for VisitDateFormatStyle.CodingKeys()
{
  return &type metadata for VisitDateFormatStyle.CodingKeys;
}

unint64_t sub_10024BE8C()
{
  unint64_t result = qword_100805030;
  if (!qword_100805030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805030);
  }
  return result;
}

unint64_t sub_10024BEE4()
{
  unint64_t result = qword_100805038;
  if (!qword_100805038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805038);
  }
  return result;
}

id sub_10024BF38()
{
  id v0 = [objc_allocWithZone((Class)UILabel) init];
  id v1 = [self secondaryLabelColor];
  [v0 setTextColor:v1];

  if (qword_1007F7260 != -1) {
    swift_once();
  }
  [v0 setFont:qword_10083D828];
  [v0 setTextAlignment:0];
  [v0 setAdjustsFontForContentSizeCategory:1];
  [v0 setMaximumContentSizeCategory:UIContentSizeCategoryAccessibilityLarge];
  return v0;
}

id sub_10024C03C(double a1, double a2, double a3, double a4)
{
  char v9 = &v4[OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_locationOptionChanged];
  *(void *)char v9 = 0;
  *((void *)v9 + 1) = 0;
  uint64_t v10 = &v4[OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_nearImageryTabTitle];
  *(void *)uint64_t v10 = 0;
  *((void *)v10 + 1) = 0;
  uint64_t v11 = OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_segmentedControl;
  id v12 = objc_allocWithZone((Class)UISegmentedControl);
  uint64_t v13 = v4;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v15 = [v12 initWithItems:isa];

  Swift::String v16 = self;
  id v17 = v15;
  id v18 = [v16 secondarySystemBackgroundColor];
  [v17 setBackgroundColor:v18];

  [v17 setSelectedSegmentIndex:0];
  [v17 setApportionsSegmentWidthsByContent:1];
  *(void *)&v4[v11] = v17;
  uint64_t v19 = OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_titleLabel;
  *(void *)&v13[v19] = sub_10024BF38();

  v23.receiver = v13;
  v23.super_class = (Class)type metadata accessor for LocationPickerTitleCell();
  id v20 = [super initWithFrame:a1, a2, a3, a4];
  [v20 setAccessibilityContainerType:4];
  if (qword_1007F7A88 != -1) {
    swift_once();
  }
  NSString v21 = String._bridgeToObjectiveC()();
  [v20 setAccessibilityLabel:v21];

  return v20;
}

id sub_10024C260(void *a1)
{
  uint64_t v3 = &v1[OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_locationOptionChanged];
  *(void *)uint64_t v3 = 0;
  *((void *)v3 + 1) = 0;
  uint64_t v4 = &v1[OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_nearImageryTabTitle];
  *(void *)uint64_t v4 = 0;
  *((void *)v4 + 1) = 0;
  uint64_t v5 = OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_segmentedControl;
  id v6 = objc_allocWithZone((Class)UISegmentedControl);
  uint64_t v7 = v1;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  id v9 = [v6 initWithItems:isa];

  uint64_t v10 = self;
  id v11 = v9;
  id v12 = [v10 secondarySystemBackgroundColor];
  [v11 setBackgroundColor:v12];

  [v11 setSelectedSegmentIndex:0];
  [v11 setApportionsSegmentWidthsByContent:1];
  *(void *)&v1[v5] = v11;
  uint64_t v13 = OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_titleLabel;
  *(void *)&v7[v13] = sub_10024BF38();

  v19.receiver = v7;
  v19.super_class = (Class)type metadata accessor for LocationPickerTitleCell();
  id v14 = [super initWithCoder:a1];
  id v15 = v14;
  if (v14)
  {
    id v16 = v14;
    [v16 setAccessibilityContainerType:4];
    if (qword_1007F7A88 != -1) {
      swift_once();
    }
    NSString v17 = String._bridgeToObjectiveC()();
    [v16 setAccessibilityLabel:v17];

    a1 = v17;
  }

  return v15;
}

void sub_10024C470()
{
  id v1 = v0;
  id v2 = [v0 subviews];
  sub_1000108BC();
  unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v4) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      goto LABEL_10;
    }
  }
  if (v4 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v4; ++i)
  {
    if ((v3 & 0xC000000000000001) != 0) {
      id v6 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v6 = *(id *)(v3 + 8 * i + 32);
    }
    uint64_t v7 = v6;
    [v6 removeFromSuperview];
  }
LABEL_10:
  swift_bridgeObjectRelease();
  uint64_t v8 = OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_titleLabel;
  [v1 addSubview:*(void *)&v1[OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_titleLabel]];
  uint64_t v9 = qword_1007F7340;
  id v10 = *(id *)&v1[v8];
  if (v9 != -1) {
    swift_once();
  }
  double v11 = *(double *)&qword_10083D950;
  id v12 = [v10 superview];
  if (v12)
  {
    uint64_t v13 = v12;
    [v10 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v14 = [v10 leadingAnchor];
    id v15 = [v13 leadingAnchor];
    id v16 = [v14 constraintEqualToAnchor:v15];

    [v16 setConstant:v11];
    if (v16)
    {
      id v16 = v16;
      [v16 setActive:1];

      id v10 = v16;
    }
  }
  else
  {
    id v16 = 0;
    uint64_t v13 = v10;
  }

  uint64_t v17 = qword_1007F7328;
  id v18 = *(id *)&v1[v8];
  if (v17 != -1) {
    swift_once();
  }
  id v19 = sub_1001DD438(0, 1, *(double *)&qword_10083D938);

  id v20 = *(id *)&v1[v8];
  NSString v21 = String._bridgeToObjectiveC()();
  [v20 setText:v21];
}

void sub_10024C784(uint64_t a1, uint64_t a2, char a3, char a4, int a5)
{
  id v6 = v5;
  id v10 = [self clearColor];
  [v6 setBackgroundColor:v10];

  id v11 = [v6 subviews];
  sub_1000108BC();
  unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (!v13) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v13) {
      goto LABEL_10;
    }
  }
  if (v13 < 1)
  {
    __break(1u);
    return;
  }
  for (uint64_t i = 0; i != v13; ++i)
  {
    if ((v12 & 0xC000000000000001) != 0) {
      id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v15 = *(id *)(v12 + 8 * i + 32);
    }
    id v16 = v15;
    [v15 removeFromSuperview];
  }
LABEL_10:
  char v51 = a3;
  char v52 = a4;
  int v50 = a5;
  swift_bridgeObjectRelease();
  uint64_t v17 = OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_segmentedControl;
  [v6 addSubview:*(void *)&v6[OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_segmentedControl]];
  [*(id *)&v6[v17] addTarget:v6 action:"tapSegmentedControl" forControlEvents:4096];
  uint64_t v18 = qword_1007F7358;
  id v19 = *(id *)&v6[v17];
  if (v18 != -1) {
    swift_once();
  }
  double v20 = *(double *)&qword_10083D968;
  NSString v21 = &selRef_drawMapRect_zoomScale_inContext_;
  id v22 = [v19 superview];
  objc_super v23 = &stru_1007D7000;
  if (v22)
  {
    uint64_t v24 = v22;
    [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v25 = [v19 leadingAnchor];
    id v26 = [v24 leadingAnchor];
    id v27 = [v25 constraintEqualToAnchor:v26];

    [v27 setConstant:v20];
    if (v27)
    {
      id v27 = v27;
      [v27 setActive:1];

      id v19 = v27;
    }

    objc_super v23 = &stru_1007D7000;
  }
  else
  {
    id v27 = 0;
    uint64_t v24 = v19;
  }

  double v28 = *(double *)&qword_10083D968;
  id v29 = *(id *)&v6[v17];
  id v30 = [v29 superview];
  if (v30)
  {
    id v31 = v30;
    [v29 v23[96].name];
    id v32 = [v29 trailingAnchor];
    id v33 = [v31 trailingAnchor];
    id v34 = [v32 constraintEqualToAnchor:v33];

    [v34 setConstant:-v28];
    if (v34)
    {
      id v34 = v34;
      [v34 setActive:1];

      id v29 = v34;
    }
    int v35 = v50;

    NSString v21 = &selRef_drawMapRect_zoomScale_inContext_;
  }
  else
  {
    id v34 = 0;
    id v31 = v29;
    int v35 = v50;
  }

  id v36 = *(id *)&v6[v17];
  id v37 = [v36 v21[77]];
  if (v37)
  {
    uint64_t v38 = v37;
    [v36 v23[96].name];
    id v39 = [v36 topAnchor];
    id v40 = [v38 topAnchor];
    id v41 = [v39 constraintEqualToAnchor:v40];

    [v41 setConstant:0.0];
    if (v41)
    {
      id v41 = v41;
      [v41 setActive:1];

      id v36 = v41;
    }
    char v42 = v51;
  }
  else
  {
    id v41 = 0;
    uint64_t v38 = v36;
    char v42 = v51;
  }

  uint64_t v43 = qword_1007F7328;
  id v44 = *(id *)&v6[v17];
  if (v43 != -1) {
    swift_once();
  }
  id v45 = sub_1001DD438(0, 1, *(double *)&qword_10083D938);

  Swift::String v46 = &v6[OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_nearImageryTabTitle];
  *(void *)Swift::String v46 = a1;
  *((void *)v46 + 1) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  sub_100010218(&qword_100805088);
  if (v42)
  {
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_1006D6270;
    *(unsigned char *)(v47 + 32) = 0;
    Swift::String v48 = (unsigned char *)(v47 + 33);
    uint64_t v49 = 2;
  }
  else
  {
    uint64_t v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = xmmword_1006D6280;
    Swift::String v48 = (unsigned char *)(v47 + 32);
    uint64_t v49 = 1;
  }
  unsigned char *v48 = 1;
  if (v52)
  {
    uint64_t v47 = (uint64_t)sub_1002A69A0((void *)1, v49 + 1, 1, (void *)v47);
    *(void *)(v47 + 16) = v49 + 1;
    *(unsigned char *)(v47 + v49 + 32) = 2;
  }
  sub_10024CF40(v47, v35);

  swift_bridgeObjectRelease();
}

void sub_10024CD94()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_segmentedControl);
  id v2 = [v1 titleForSegmentAtIndex:[v1 selectedSegmentIndex]];

  if (v2)
  {
    unint64_t v3 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v5 = v4;

    uint64_t v6 = *(void *)(v0 + OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_nearImageryTabTitle + 8);
    if (v6
      && (v3 == *(void *)(v0 + OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_nearImageryTabTitle)
        ? (BOOL v7 = v6 == v5)
        : (BOOL v7 = 0),
          v7 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0))
    {
      swift_bridgeObjectRelease();
      uint64_t v8 = *(void (**)(void))(v0 + OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_locationOptionChanged);
      if (!v8) {
        return;
      }
      swift_retain();
      v8(0);
      uint64_t v9 = (uint64_t)v8;
    }
    else
    {
      uint64_t v10 = _s7Journal14LocationOptionO3forACSgSS_tcfC_0(v3, v5);
      if (v10 == 3) {
        return;
      }
      id v11 = *(void (**)(uint64_t))(v0 + OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_locationOptionChanged);
      if (!v11) {
        return;
      }
      uint64_t v12 = v10;
      swift_retain();
      v11(v12);
      uint64_t v9 = (uint64_t)v11;
    }
    sub_10001ABB8(v9);
  }
}

id sub_10024CF40(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  LODWORD(v4) = a2;
  uint64_t v6 = OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_segmentedControl;
  id v28 = [*(id *)(v3 + OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_segmentedControl) numberOfSegments];
  [*(id *)(v3 + v6) removeAllSegments];
  uint64_t v7 = *(void *)(a1 + 16);
  if (v7)
  {
    uint64_t v8 = v3 + OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_nearImageryTabTitle;
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    while (1)
    {
      if (*(unsigned char *)(a1 + v9 + 32))
      {
        uint64_t v13 = *(void **)(v3 + v6);
        if (*(unsigned char *)(a1 + v9 + 32) != 2)
        {
          uint64_t v14 = qword_1007F7748;
          id v11 = v13;
          if (v14 == -1) {
            goto LABEL_4;
          }
LABEL_13:
          swift_once();
          goto LABEL_4;
        }
        uint64_t v10 = qword_1007F7740;
        id v11 = v13;
        if (v10 != -1) {
          goto LABEL_13;
        }
      }
      else
      {
        if (*(void *)(v8 + 8))
        {
          id v15 = *(void **)(v3 + v6);
          swift_bridgeObjectRetain();
          id v11 = v15;
          goto LABEL_5;
        }
        uint64_t v16 = qword_1007F7750;
        id v11 = *(id *)(v3 + v6);
        if (v16 != -1) {
          goto LABEL_13;
        }
      }
LABEL_4:
      swift_bridgeObjectRetain();
LABEL_5:
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v11 insertSegmentWithTitle:v12 atIndex:v9 animated:0];

      if (v7 == ++v9)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  if (v4 == 3)
  {
    uint64_t v17 = 0;
  }
  else
  {
    id v18 = *(id *)(v3 + v6);
    id v19 = sub_10024D314();

    if ((_BYTE)v4)
    {
      if (v4 == 1)
      {
        if (qword_1007F7748 != -1) {
          swift_once();
        }
        double v20 = &xmmword_10083E038;
      }
      else
      {
        if (qword_1007F7740 != -1) {
          swift_once();
        }
        double v20 = &xmmword_10083E028;
      }
    }
    else
    {
      if (qword_1007F7750 != -1) {
        swift_once();
      }
      double v20 = &xmmword_10083E048;
    }
    uint64_t v22 = *(void *)v20;
    uint64_t v21 = *((void *)v20 + 1);
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_100464E78(v22, v21, v19);
    char v25 = v24;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v25) {
      uint64_t v17 = 0;
    }
    else {
      uint64_t v17 = v23;
    }
  }
  [*(id *)(v3 + v6) setSelectedSegmentIndex:v17];
  id result = [*(id *)(v3 + v6) numberOfSegments];
  if (v28 != result)
  {
    id v27 = *(void (**)(uint64_t))(v3 + OBJC_IVAR____TtC7Journal23LocationPickerTitleCell_locationOptionChanged);
    if (v27)
    {
      if (v4 == 3) {
        uint64_t v4 = 1;
      }
      else {
        uint64_t v4 = v4;
      }
      swift_retain();
      v27(v4);
      return (id)sub_10001ABB8((uint64_t)v27);
    }
  }
  return result;
}

double *sub_10024D314()
{
  id result = (double *)[v0 numberOfSegments];
  if (((unint64_t)result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v2 = result;
    if (!result) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v3 = 0;
    uint64_t v4 = (char *)_swiftEmptyArrayStorage;
    do
    {
      id v6 = [v0 titleForSegmentAtIndex:v3];
      if (v6)
      {
        uint64_t v7 = v6;
        uint64_t v8 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v10 = v9;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v4 = sub_1002A54A0(0, *((void *)v4 + 2) + 1, 1, v4);
        }
        unint64_t v12 = *((void *)v4 + 2);
        unint64_t v11 = *((void *)v4 + 3);
        if (v12 >= v11 >> 1) {
          uint64_t v4 = sub_1002A54A0((char *)(v11 > 1), v12 + 1, 1, v4);
        }
        *((void *)v4 + 2) = v12 + 1;
        unint64_t v5 = &v4[16 * v12];
        *((void *)v5 + 4) = v8;
        *((void *)v5 + 5) = v10;
      }
      uint64_t v3 = (double *)((char *)v3 + 1);
    }
    while (v2 != v3);
    return (double *)v4;
  }
  return result;
}

id sub_10024D434()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocationPickerTitleCell();
  [super dealloc];
}

uint64_t type metadata accessor for LocationPickerTitleCell()
{
  return self;
}

uint64_t (*sub_10024D500())()
{
  return j__swift_endAccess_0;
}

id sub_10024D560()
{
  return sub_10024D590(&OBJC_IVAR____TtC7Journal15BatchSettingsVC____lazy_storage___view1);
}

id sub_10024D56C()
{
  return sub_10024D590(&OBJC_IVAR____TtC7Journal15BatchSettingsVC____lazy_storage___view2);
}

id sub_10024D578()
{
  return sub_10024D590(&OBJC_IVAR____TtC7Journal15BatchSettingsVC____lazy_storage___view3);
}

id sub_10024D584()
{
  return sub_10024D590(&OBJC_IVAR____TtC7Journal15BatchSettingsVC____lazy_storage___view4);
}

id sub_10024D590(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = [objc_allocWithZone((Class)UIView) init];
    id v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    uint64_t v3 = 0;
  }
  id v7 = v3;
  return v4;
}

void sub_10024D600()
{
  uint64_t v1 = v0;
  id v2 = [objc_allocWithZone((Class)UIView) init];
  [v1 setView:v2];

  id v3 = [v1 view];
  if (!v3)
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  id v4 = v3;
  id v5 = self;
  id v6 = [v5 whiteColor];
  [v4 setBackgroundColor:v6];

  id v7 = (uint64_t *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings];
  swift_beginAccess();
  uint64_t v8 = v7[4];
  if (v8 == 2)
  {
    sub_100010218((uint64_t *)&unk_1007FC0F0);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1006D6280;
    *(void *)(v9 + 56) = &type metadata for String;
    *(void *)(v9 + 32) = 0x100000000000001ELL;
    *(void *)(v9 + 40) = 0x8000000100693C70;
    print(_:separator:terminator:)();
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v11 = *v7;
  uint64_t v10 = v7[1];
  uint64_t v13 = v7[2];
  uint64_t v12 = v7[3];
  uint64_t v281 = v7[5];
  id v14 = [v1 view];
  if (!v14) {
    goto LABEL_15;
  }
  id v15 = v14;
  uint64_t v275 = v13;
  uint64_t v277 = v12;
  id v285 = v5;
  uint64_t v279 = v11;
  uint64_t v280 = v10;
  uint64_t v16 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_scrollView];
  [v14 addSubview:v16];

  uint64_t v17 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_scrollViewContainer];
  [v16 addSubview:v17];
  id v18 = sub_10024D560();
  [v17 addArrangedSubview:v18];

  id v19 = sub_10024D56C();
  [v17 addArrangedSubview:v19];

  id v20 = sub_10024D578();
  [v17 addArrangedSubview:v20];

  id v21 = sub_10024D584();
  [v17 addArrangedSubview:v21];

  id v22 = [v16 leadingAnchor];
  id v23 = [v1 view];
  if (!v23)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  char v24 = v23;
  id v25 = [v23 leadingAnchor];

  id v26 = [v22 constraintEqualToAnchor:v25 constant:20.0];
  [v26 setActive:1];

  id v27 = [v16 trailingAnchor];
  id v28 = [v1 view];
  if (!v28)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  id v29 = v28;
  uint64_t v283 = v8;
  id v30 = [v28 trailingAnchor];

  id v31 = [v27 constraintEqualToAnchor:v30 constant:-20.0];
  [v31 setActive:1];

  id v32 = [v16 topAnchor];
  id v33 = [v1 view];
  if (!v33)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  id v34 = v33;
  id v35 = [v33 topAnchor];

  id v36 = [v32 constraintEqualToAnchor:v35 constant:20.0];
  [v36 setActive:1];

  id v37 = [v16 bottomAnchor];
  id v38 = [v1 view];
  if (!v38)
  {
LABEL_19:
    __break(1u);
    return;
  }
  id v39 = v38;
  id v40 = [v38 bottomAnchor];

  id v41 = [v37 constraintEqualToAnchor:v40 constant:-20.0];
  [v41 setActive:1];

  id v42 = [v17 leadingAnchor];
  id v43 = [v16 leadingAnchor];
  id v44 = [v42 constraintEqualToAnchor:v43];

  [v44 setActive:1];
  id v45 = [v17 trailingAnchor];
  id v46 = [v16 trailingAnchor];
  id v47 = [v45 constraintEqualToAnchor:v46];

  [v47 setActive:1];
  id v48 = [v17 topAnchor];
  id v49 = [v16 topAnchor];
  id v50 = [v48 constraintEqualToAnchor:v49];

  [v50 setActive:1];
  id v51 = [v17 bottomAnchor];
  id v52 = [v16 bottomAnchor];
  id v53 = [v51 constraintEqualToAnchor:v52];

  [v53 setActive:1];
  id v54 = [v17 widthAnchor];
  id v55 = [v16 widthAnchor];
  id v56 = [v54 constraintEqualToAnchor:v55];

  [v56 setActive:1];
  id v57 = [objc_allocWithZone((Class)UILabel) init];
  [v57 setTextAlignment:0];
  uint64_t v284 = self;
  id v58 = [v284 systemFontOfSize:20.0];
  [v57 setFont:v58];

  id v59 = [v285 blackColor];
  [v57 setTextColor:v59];

  NSString v60 = String._bridgeToObjectiveC()();
  [v57 setText:v60];

  [v57 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v61 = sub_10024D560();
  [v61 addSubview:v57];

  id v282 = v57;
  id v62 = [v57 topAnchor];
  id v63 = sub_10024D560();
  id v64 = [v63 topAnchor];

  id v65 = [v62 constraintEqualToAnchor:v64];
  [v65 setActive:1];

  uint64_t v66 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchSyncEnable;
  [*(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchSyncEnable] addTarget:v1 action:"actionSyncEnableSwitchStateDidChangeWithSender:" forControlEvents:4096];
  uint64_t v67 = qword_1007F6D38;
  id v68 = *(id *)&v1[v66];
  if (v67 != -1) {
    swift_once();
  }
  [v68 setOn:sub_1001FE410() & 1];

  uint64_t v69 = *(void *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_tintColor];
  uint64_t v262 = v69;
  [*(id *)&v1[v66] setTintColor:v69];
  [*(id *)&v1[v66] setOnTintColor:v69];
  [*(id *)&v1[v66] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v70 = sub_10024D560();
  [v70 addSubview:*(void *)&v1[v66]];

  id v71 = [*(id *)&v1[v66] topAnchor];
  id v72 = sub_10024D560();
  id v73 = [v72 topAnchor];

  id v74 = [v71 constraintEqualToAnchor:v73];
  [v74 setActive:1];

  id v75 = [*(id *)&v1[v66] heightAnchor];
  id v76 = [v75 constraintEqualToConstant:30.0];

  [v76 setActive:1];
  id v77 = [v282 widthAnchor];
  id v78 = sub_10024D560();
  id v79 = [v78 widthAnchor];

  id v80 = [v77 constraintEqualToAnchor:v79];
  [v80 setActive:1];

  id v81 = [v282 heightAnchor];
  id v82 = [v81 constraintEqualToConstant:30.0];

  [v82 setActive:1];
  id v83 = [v282 leadingAnchor];
  id v84 = [*(id *)&v1[v66] trailingAnchor];
  id v85 = [v83 constraintEqualToAnchor:v84 constant:20.0];

  [v85 setActive:1];
  id v86 = [v282 topAnchor];
  id v87 = sub_10024D560();
  id v88 = [v87 topAnchor];

  id v89 = [v86 constraintEqualToAnchor:v88];
  [v89 setActive:1];

  id v90 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelEntries];
  [v90 setTextAlignment:0];
  id v91 = [v284 systemFontOfSize:20.0];
  [v90 setFont:v91];

  id v92 = [v285 blackColor];
  [v90 setTextColor:v92];

  NSString v93 = String._bridgeToObjectiveC()();
  [v90 setText:v93];

  [v90 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v94 = sub_10024D560();
  [v94 addSubview:v90];

  id v95 = [v90 topAnchor];
  id v96 = [*(id *)&v1[v66] bottomAnchor];
  id v97 = [v95 constraintEqualToAnchor:v96 constant:10.0];

  [v97 setActive:1];
  uint64_t v98 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderBatchCount];
  id v99 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelBatchCount];
  id v100 = v98;
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  v101._id countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v101);
  swift_bridgeObjectRelease();
  id v102 = sub_10024D560();
  Swift::String v103 = sub_100254CBC(v99, v100, (float)v275, 1.0, 300.0, 0xD000000000000014, 0x8000000100693C50, v102, v90, (uint64_t)"actionBatchCountSliderValueDidChangeWithSender:");

  swift_bridgeObjectRelease();
  unint64_t v104 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderDatesDaysCount];
  id v105 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelDatesDaysCount];
  id v106 = v104;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  v107._id countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v107);
  swift_bridgeObjectRelease();
  id v108 = sub_10024D560();
  id v109 = v103;
  sub_100254CBC(v105, v106, (float)v277, 0.0, 100.0, 0xD000000000000019, 0x8000000100693C30, v108, v103, (uint64_t)"actionLastRandomDaysSliderValueDidChangeWithSender:");

  swift_bridgeObjectRelease();
  uint64_t v278 = v109;

  id v110 = sub_10024D560();
  id v111 = [v110 heightAnchor];

  id v112 = [v111 constraintEqualToConstant:220.0];
  [v112 setActive:1];

  uint64_t v113 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelAssetsNeeded];
  [v113 setTextAlignment:0];
  id v114 = [v284 systemFontOfSize:20.0];
  [v113 setFont:v114];

  id v115 = [v285 blackColor];
  [v113 setTextColor:v115];

  NSString v116 = String._bridgeToObjectiveC()();
  [v113 setText:v116];

  [v113 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v117 = sub_10024D56C();
  [v117 addSubview:v113];

  uint64_t v118 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchAssetsNeeded;
  [*(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchAssetsNeeded] addTarget:v1 action:"actionAssetsNeededSwitchStateDidChangeWithSender:" forControlEvents:4096];
  [*(id *)&v1[v118] setOn:v283 & 1];
  [*(id *)&v1[v118] setTintColor:v262];
  [*(id *)&v1[v118] setOnTintColor:v262];
  [*(id *)&v1[v118] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v119 = sub_10024D56C();
  [v119 addSubview:*(void *)&v1[v118]];

  id v120 = [*(id *)&v1[v118] heightAnchor];
  id v121 = [v120 constraintEqualToConstant:30.0];

  [v121 setActive:1];
  id v122 = [v113 widthAnchor];
  id v123 = sub_10024D56C();
  id v124 = [v123 widthAnchor];

  id v125 = [v122 constraintEqualToAnchor:v124];
  [v125 setActive:1];

  id v126 = [v113 heightAnchor];
  id v127 = [v126 constraintEqualToConstant:30.0];

  [v127 setActive:1];
  id v128 = [v113 leadingAnchor];
  id v129 = [*(id *)&v1[v118] trailingAnchor];
  id v130 = [v128 constraintEqualToAnchor:v129 constant:20.0];

  [v130 setActive:1];
  id v131 = [v113 topAnchor];
  id v132 = sub_10024D56C();
  id v133 = [v132 topAnchor];

  id v134 = [v131 constraintEqualToAnchor:v133];
  [v134 setActive:1];

  id v135 = sub_10024D56C();
  id v136 = [v135 heightAnchor];

  id v137 = [v136 constraintEqualToConstant:30.0];
  [v137 setActive:1];

  CGFloat v138 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelAssetsToGen];
  [v138 setTextAlignment:0];
  id v139 = [v284 systemFontOfSize:20.0];
  [v138 setFont:v139];

  id v140 = [v285 blackColor];
  [v138 setTextColor:v140];

  NSString v141 = String._bridgeToObjectiveC()();
  [v138 setText:v141];

  [v138 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v142 = sub_10024D578();
  [v142 addSubview:v138];

  id v143 = [v138 widthAnchor];
  id v144 = sub_10024D578();
  id v145 = [v144 widthAnchor];

  id v146 = [v143 constraintEqualToAnchor:v145];
  [v146 setActive:1];

  id v147 = [v138 topAnchor];
  id v148 = sub_10024D578();
  id v149 = [v148 topAnchor];

  id v150 = [v147 constraintEqualToAnchor:v149];
  [v150 setActive:1];

  id v151 = sub_10024D578();
  id v152 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelPhotos];
  id v153 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchPhotos];
  id v154 = v152;
  id v155 = sub_100255184(1953458256, 0, BYTE1(v283) & 1, v151, v153, v154, v138, (uint64_t)"actionAssetTypePhotosSwitchStateDidChangeWithSender:");

  id v156 = sub_10024D578();
  uint64_t v157 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMusic];
  id v158 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchMusic];
  id v159 = v157;
  uint64_t v276 = v155;
  id v160 = sub_100255184(1769174349, 0, BYTE2(v283) & 1, v156, v158, v159, v155, (uint64_t)"actionAssetTypeMusicSwitchStateDidChangeWithSender:");

  id v161 = sub_10024D578();
  CGFloat v162 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelPodcasts];
  id v163 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchPodcasts];
  id v164 = v162;
  id v264 = v160;
  id v165 = sub_100255184(1667526480, 0, BYTE3(v283) & 1, v161, v163, v164, v160, (uint64_t)"actionAssetTypePodcastsSwitchStateDidChangeWithSender:");

  id v166 = sub_10024D578();
  CGFloat v167 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelBooks];
  id v168 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchBooks];
  id v169 = v167;
  id v265 = v165;
  id v170 = sub_100255184(1802465090, 0, BYTE4(v283) & 1, v166, v168, v169, v165, (uint64_t)"actionAssetTypeBooksSwitchStateDidChangeWithSender:");

  id v171 = sub_10024D578();
  Swift::Int v172 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelVisit];
  id v173 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchVisit];
  id v174 = v172;
  CGFloat v263 = v170;
  id v175 = sub_100255184(1769171286, 0, BYTE5(v283) & 1, v171, v173, v174, v170, (uint64_t)"actionAssetTypeVisitSwitchStateDidChangeWithSender:");

  id v176 = sub_10024D578();
  id v177 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMultiPinMap];
  id v178 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchMultiPinMap];
  id v179 = v177;
  id v266 = v175;
  id v180 = sub_100255184(1953264973, 7364941, BYTE5(v283) & 1, v176, v178, v179, v175, (uint64_t)"actionAssetTypeMultiPinMapSwitchStateDidChangeWithSender:");

  id v181 = sub_10024D578();
  unsigned __int8 v182 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelVideo];
  id v183 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchVideo];
  id v184 = v182;
  char v267 = v180;
  id v185 = sub_100255184(1701079382, 0, v281 & 1, v181, v183, v184, v180, (uint64_t)"actionAssetTypeVideoSwitchStateDidChangeWithSender:");

  id v186 = sub_10024D578();
  unint64_t v187 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelAudio];
  id v188 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchAudio];
  id v189 = v187;
  id v268 = v185;
  id v190 = sub_100255184(1768191297, 0, HIBYTE(v283) & 1, v186, v188, v189, v185, (uint64_t)"actionAssetTypeAudioSwitchStateDidChangeWithSender:");

  id v191 = sub_10024D578();
  CGFloat v192 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelActivity];
  id v193 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchActivity];
  id v194 = v192;
  CGFloat v269 = v190;
  id v195 = sub_100255184(1769235265, 0, BYTE1(v281) & 1, v191, v193, v194, v190, (uint64_t)"actionAssetTypeActivitySwitchStateDidChangeWithSender:");

  id v196 = sub_10024D578();
  CGFloat v197 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelRoute];
  id v198 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchRoute];
  id v199 = v197;
  uint64_t v270 = v195;
  id v200 = sub_100255184(1953853266, 0, BYTE2(v281) & 1, v196, v198, v199, v195, (uint64_t)"actionAssetTypeRouteSwitchStateDidChangeWithSender:");

  id v201 = sub_10024D578();
  CGFloat v202 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelLink];
  id v203 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchLink];
  id v204 = v202;
  uint64_t v271 = v200;
  id v205 = sub_100255184(1802398028, 0, BYTE3(v281) & 1, v201, v203, v204, v200, (uint64_t)"actionAssetTypeLinkSwitchStateDidChangeWithSender:");

  id v206 = sub_10024D578();
  unint64_t v207 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelContact];
  id v208 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchContact];
  id v209 = v207;
  uint64_t v272 = v205;
  id v210 = sub_100255184(1953394499, 0, BYTE4(v281) & 1, v206, v208, v209, v205, (uint64_t)"actionAssetTypeContactSwitchStateDidChangeWithSender:");

  id v211 = sub_10024D578();
  uint64_t v212 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelWorkoutRoute];
  id v213 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchWorkoutRoute];
  id v214 = v212;
  char v273 = v210;
  id v215 = sub_100255184(1802661751, 1702131055, BYTE5(v281) & 1, v211, v213, v214, v210, (uint64_t)"actionAssetTypeWorkoutRouteSwitchStateDidChangeWithSender:");

  id v216 = sub_10024D578();
  CGFloat v217 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelWorkoutIcon];
  id v218 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchWorkoutIcon];
  id v219 = v217;
  Swift::Int v274 = v215;
  id v220 = sub_100255184(1802661751, 7237475, BYTE6(v281) & 1, v216, v218, v219, v215, (uint64_t)"actionAssetTypeWorkoutIconSwitchStateDidChangeWithSender:");

  id v221 = sub_10024D578();
  CGFloat v222 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMotionActivity];
  id v223 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchMotionActivity];
  id v224 = v222;
  sub_100255184(1769238381, 1769367924, HIBYTE(v281) & 1, v221, v223, v224, v220, (uint64_t)"actionAssetTypeMotionActivitySwitchStateDidChangeWithSender:");

  id v225 = sub_10024D578();
  id v226 = [v225 heightAnchor];

  id v227 = [v226 constraintEqualToConstant:*(double *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_view3SwitchesHeight]];
  [v227 setActive:1];

  unint64_t v228 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelRand];
  [v228 setTextAlignment:0];
  id v229 = [v284 systemFontOfSize:20.0];
  [v228 setFont:v229];

  id v230 = [v285 blackColor];
  [v228 setTextColor:v230];

  NSString v231 = String._bridgeToObjectiveC()();
  [v228 setText:v231];

  [v228 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v232 = sub_10024D584();
  [v232 addSubview:v228];

  id v233 = [v228 widthAnchor];
  id v234 = sub_10024D584();
  id v235 = [v234 widthAnchor];

  id v236 = [v233 constraintEqualToAnchor:v235];
  [v236 setActive:1];

  id v237 = [v228 topAnchor];
  id v238 = sub_10024D584();
  id v239 = [v238 topAnchor];

  id v240 = [v237 constraintEqualToAnchor:v239];
  [v240 setActive:1];

  id v241 = [v228 widthAnchor];
  id v242 = sub_10024D584();
  id v243 = [v242 widthAnchor];

  id v244 = [v241 constraintEqualToAnchor:v243];
  [v244 setActive:1];

  id v245 = [v228 heightAnchor];
  id v246 = [v245 constraintEqualToConstant:30.0];

  [v246 setActive:1];
  uint64_t v247 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMin];
  id v248 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMin];
  id v249 = v247;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  v250._id countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v250);
  swift_bridgeObjectRelease();
  id v251 = sub_10024D584();
  CGFloat v252 = sub_100254CBC(v248, v249, (float)v279, 1.0, 10.0, 0xD000000000000017, 0x8000000100693BB0, v251, v228, (uint64_t)"actionMinRangeSliderValueDidChangeWithSender:");

  swift_bridgeObjectRelease();
  CGFloat v253 = *(void **)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMax];
  id v254 = *(id *)&v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMax];
  id v255 = v253;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  v256._id countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v256);
  swift_bridgeObjectRelease();
  id v257 = sub_10024D584();
  id v258 = v252;
  sub_100254CBC(v254, v255, (float)v280, 1.0, 10.0, 0xD000000000000017, 0x8000000100693BD0, v257, v252, (uint64_t)"actionMaxRangeSliderValueDidChangeWithSender:");

  swift_bridgeObjectRelease();
  id v259 = sub_10024D584();
  id v260 = [v259 heightAnchor];

  id v261 = [v260 constraintEqualToConstant:240.0];
  [v261 setActive:1];

  sub_10024FF64(v283 & 1);
  if ((v283 & 1) == 0) {
    sub_10024FA54();
  }
}

id sub_10024FA54()
{
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchAssetsNeeded) setOn:0 animated:1];
  id v2 = sub_10024D500();
  if (*(unsigned char *)(v1 + 32) != 2) {
    *(unsigned char *)(v1 + 33) = 0;
  }
  ((void (*)(unint64_t *, void))v2)(&v30, 0);
  id v4 = sub_10024D500();
  if (*(unsigned char *)(v3 + 32) != 2) {
    *(unsigned char *)(v3 + 34) = 0;
  }
  ((void (*)(unint64_t *, void))v4)(&v30, 0);
  id v6 = sub_10024D500();
  if (*(unsigned char *)(v5 + 32) != 2) {
    *(unsigned char *)(v5 + 35) = 0;
  }
  ((void (*)(unint64_t *, void))v6)(&v30, 0);
  uint64_t v8 = sub_10024D500();
  if (*(unsigned char *)(v7 + 32) != 2) {
    *(unsigned char *)(v7 + 36) = 0;
  }
  ((void (*)(unint64_t *, void))v8)(&v30, 0);
  uint64_t v10 = sub_10024D500();
  if (*(unsigned char *)(v9 + 32) != 2) {
    *(unsigned char *)(v9 + 37) = 0;
  }
  ((void (*)(unint64_t *, void))v10)(&v30, 0);
  uint64_t v12 = sub_10024D500();
  if (*(unsigned char *)(v11 + 32) != 2) {
    *(unsigned char *)(v11 + 40) = 0;
  }
  ((void (*)(unint64_t *, void))v12)(&v30, 0);
  id v14 = sub_10024D500();
  if (*(unsigned char *)(v13 + 32) != 2) {
    *(unsigned char *)(v13 + 39) = 0;
  }
  ((void (*)(unint64_t *, void))v14)(&v30, 0);
  uint64_t v16 = sub_10024D500();
  if (*(unsigned char *)(v15 + 32) != 2) {
    *(void *)(v15 + 8) = 1;
  }
  ((void (*)(unint64_t *, void))v16)(&v30, 0);
  id v18 = sub_10024D500();
  if (*(unsigned char *)(v17 + 32) != 2) {
    *(void *)uint64_t v17 = 1;
  }
  ((void (*)(unint64_t *, void))v18)(&v30, 0);
  LODWORD(v19) = 1.0;
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMax) setValue:1 animated:v19];
  LODWORD(v20) = 1.0;
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMin) setValue:1 animated:v20];
  id v21 = *(void **)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMin);
  unint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  id v22 = v21;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  unint64_t v30 = 0xD000000000000017;
  unint64_t v31 = 0x8000000100693BB0;
  v23._id countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v23);
  swift_bridgeObjectRelease();
  NSString v24 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v22 setText:v24];

  id v25 = *(void **)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMax);
  unint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  id v26 = v25;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  unint64_t v30 = 0xD000000000000017;
  unint64_t v31 = 0x8000000100693BD0;
  v27._id countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v27);
  swift_bridgeObjectRelease();
  NSString v28 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v26 setText:v28];

  [*(id *)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchPhotos) setOn:0 animated:1];
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchMusic) setOn:0 animated:1];
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchPodcasts) setOn:0 animated:1];
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchBooks) setOn:0 animated:1];
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchVisit) setOn:0 animated:1];
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchVideo) setOn:0 animated:1];
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchAudio) setOn:0 animated:1];
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchActivity) setOn:0 animated:1];
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchRoute) setOn:0 animated:1];
  return [*(id *)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchLink) setOn:0 animated:1];
}

id sub_10024FF64(char a1)
{
  double v3 = 1.0;
  if ((a1 & 1) == 0)
  {
    sub_10024FA54();
    double v3 = 0.05;
  }
  uint64_t v23 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMax;
  uint64_t v4 = a1 & 1;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMax) setUserInteractionEnabled:v4];
  uint64_t v22 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMin;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMin) setUserInteractionEnabled:v4];
  uint64_t v21 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchPhotos;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchPhotos) setUserInteractionEnabled:v4];
  uint64_t v19 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchMusic;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchMusic) setUserInteractionEnabled:v4];
  uint64_t v17 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchPodcasts;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchPodcasts) setUserInteractionEnabled:v4];
  uint64_t v15 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchBooks;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchBooks) setUserInteractionEnabled:v4];
  uint64_t v5 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchVisit;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchVisit) setUserInteractionEnabled:v4];
  uint64_t v20 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchVideo;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchVideo) setUserInteractionEnabled:v4];
  uint64_t v18 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchAudio;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchAudio) setUserInteractionEnabled:v4];
  uint64_t v16 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchActivity;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchActivity) setUserInteractionEnabled:v4];
  uint64_t v14 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchRoute;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchRoute) setUserInteractionEnabled:v4];
  uint64_t v6 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchLink;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchLink) setUserInteractionEnabled:v4];
  uint64_t v7 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchContact;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchContact) setUserInteractionEnabled:v4];
  uint64_t v8 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchWorkoutRoute;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchWorkoutRoute) setUserInteractionEnabled:v4];
  uint64_t v9 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchWorkoutIcon;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchWorkoutIcon) setUserInteractionEnabled:v4];
  uint64_t v10 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchWorkoutActivity;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchWorkoutActivity) setUserInteractionEnabled:v4];
  uint64_t v11 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchMotionActivity;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchMotionActivity) setUserInteractionEnabled:v4];
  [*(id *)(v1 + v23) setAlpha:v3];
  [*(id *)(v1 + v22) setAlpha:v3];
  [*(id *)(v1 + v21) setAlpha:v3];
  [*(id *)(v1 + v19) setAlpha:v3];
  [*(id *)(v1 + v17) setAlpha:v3];
  [*(id *)(v1 + v15) setAlpha:v3];
  [*(id *)(v1 + v5) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchMultiPinMap) setAlpha:v3];
  [*(id *)(v1 + v20) setAlpha:v3];
  [*(id *)(v1 + v18) setAlpha:v3];
  [*(id *)(v1 + v16) setAlpha:v3];
  [*(id *)(v1 + v14) setAlpha:v3];
  [*(id *)(v1 + v6) setAlpha:v3];
  [*(id *)(v1 + v7) setAlpha:v3];
  [*(id *)(v1 + v8) setAlpha:v3];
  [*(id *)(v1 + v9) setAlpha:v3];
  [*(id *)(v1 + v10) setAlpha:v3];
  [*(id *)(v1 + v11) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelPhotos) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMusic) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelPodcasts) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelBooks) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelVisit) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMultiPinMap) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelVideo) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelAudio) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelActivity) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelRoute) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelLink) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelContact) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelWorkoutRoute) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelWorkoutIcon) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMotionActivity) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelAssetsToGen) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelRand) setAlpha:v3];
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMin) setAlpha:v3];
  uint64_t v12 = *(void **)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMax);

  return [v12 setAlpha:v3];
}

void *sub_1002504B8(void *result)
{
  if (result)
  {
    if ([result isOn])
    {
      if (qword_1007F6D38 != -1) {
        swift_once();
      }
      id v1 = [self standardUserDefaults];
      NSString v2 = String._bridgeToObjectiveC()();
      [v1 setBool:1 forKey:v2];

      sub_100202AB8();
      double v3 = *(char **)(qword_10083D2F8 + 24);
      uint64_t v4 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v5 = *(void **)&v3[OBJC_IVAR____TtC7Journal13CloudKitStack_ckContainer];
      uint64_t v6 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v7 = (void *)swift_allocObject();
      _OWORD v7[2] = v6;
      v7[3] = sub_100254BDC;
      v7[4] = v4;
      v12[4] = sub_100219334;
      v12[5] = v7;
      v12[0] = _NSConcreteStackBlock;
      v12[1] = 1107296256;
      v12[2] = sub_100254C24;
      void v12[3] = &unk_1007A0CF8;
      uint64_t v8 = _Block_copy(v12);
      uint64_t v9 = v3;
      swift_retain_n();
      swift_release();
      [v5 accountStatusWithCompletionHandler:v8];
      _Block_release(v8);

      return (void *)swift_release_n();
    }
    else
    {
      if (qword_1007F6D38 != -1) {
        swift_once();
      }
      id v10 = [self standardUserDefaults];
      NSString v11 = String._bridgeToObjectiveC()();
      [v10 setBool:0 forKey:v11];

      return (void *)sub_10020B09C(0, 0, 1, 0);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_10025079C(char a1)
{
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchQoS();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&aBlock[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a1 & 1) == 0)
  {
    sub_10001FB8C();
    id v10 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v11 = swift_allocObject();
    swift_beginAccess();
    uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
    swift_unknownObjectWeakInit();

    aBlock[4] = sub_100254CB4;
    void aBlock[5] = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    aBlock[3] = &unk_1007A0D20;
    uint64_t v13 = _Block_copy(aBlock);
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10004F6A0();
    sub_100010218(&qword_100804DB0);
    sub_10001B1BC();
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v13);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
}

void sub_100250A50()
{
  type metadata accessor for JurassicAlertController();
  NSString v0 = String._bridgeToObjectiveC()();
  NSString v1 = String._bridgeToObjectiveC()();
  id v2 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v0 message:v1 preferredStyle:1];

  NSString v3 = String._bridgeToObjectiveC()();
  id v4 = [self actionWithTitle:v3 style:0 handler:0];

  [v2 addAction:v4];
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v6 = Strong;
    [Strong presentViewController:v2 animated:1 completion:0];
  }
}

void (*sub_100250CD4(void *a1))(_OWORD *, void)
{
  id result = (void (*)(_OWORD *, void))sub_10024D500();
  uint64_t v5 = result;
  if (*(unsigned char *)(v4 + 32) == 2)
  {
    id result = (void (*)(_OWORD *, void))((uint64_t (*)(_OWORD *, void))result)(v15, 0);
    if (a1) {
      goto LABEL_6;
    }
    __break(1u);
  }
  if (!a1)
  {
    __break(1u);
    return result;
  }
  *(unsigned char *)(v4 + 32) = [a1 isOn];
  v5(v15, 0);
LABEL_6:
  id result = (void (*)(_OWORD *, void))sub_10024FF64((char)[a1 isOn]);
  uint64_t v6 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (void (*)(_OWORD *, void))swift_beginAccess();
    unint64_t v8 = *(void *)(v7 + 32);
    if (v8 != 2)
    {
      unint64_t v9 = *(void *)(v7 + 40);
      long long v10 = *(_OWORD *)(v7 + 16);
      v15[0] = *(_OWORD *)v7;
      v15[1] = v10;
      uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v8);
      char v16 = v8 & 1;
      int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
      unsigned __int32 v17 = vmovn_s16(v12).u32[0];
      char v18 = BYTE5(v8) & 1;
      char v19 = BYTE6(v8) & 1;
      char v20 = HIBYTE(v8) & 1;
      char v21 = v9 & 1;
      uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v9);
      int16x8_t v14 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v14.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v14), (int8x8_t)0x1000100010001);
      unsigned __int32 v22 = vmovn_s16(v14).u32[0];
      char v23 = BYTE5(v9) & 1;
      char v24 = BYTE6(v9) & 1;
      char v25 = HIBYTE(v9) & 1;
      swift_retain();
      v6(v15);
      return (void (*)(_OWORD *, void))sub_10001ABB8((uint64_t)v6);
    }
  }
  return result;
}

uint64_t (*sub_100250F04(void *a1))(_OWORD *, void)
{
  id result = (uint64_t (*)(_OWORD *, void))sub_10024D500();
  uint64_t v5 = result;
  if (*(unsigned char *)(v4 + 32) == 2)
  {
    id result = (uint64_t (*)(_OWORD *, void))result(v15, 0);
  }
  else
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    *(unsigned char *)(v4 + 33) = [a1 isOn];
    id result = (uint64_t (*)(_OWORD *, void))v5(v15, 0);
  }
  uint64_t v6 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (uint64_t (*)(_OWORD *, void))swift_beginAccess();
    unint64_t v8 = *(void *)(v7 + 32);
    if (v8 != 2)
    {
      unint64_t v9 = *(void *)(v7 + 40);
      long long v10 = *(_OWORD *)(v7 + 16);
      v15[0] = *(_OWORD *)v7;
      v15[1] = v10;
      uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v8);
      char v16 = v8 & 1;
      int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
      unsigned __int32 v17 = vmovn_s16(v12).u32[0];
      char v18 = BYTE5(v8) & 1;
      char v19 = BYTE6(v8) & 1;
      char v20 = HIBYTE(v8) & 1;
      char v21 = v9 & 1;
      uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v9);
      int16x8_t v14 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v14.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v14), (int8x8_t)0x1000100010001);
      unsigned __int32 v22 = vmovn_s16(v14).u32[0];
      char v23 = BYTE5(v9) & 1;
      char v24 = BYTE6(v9) & 1;
      char v25 = HIBYTE(v9) & 1;
      swift_retain();
      v6(v15);
      return (uint64_t (*)(_OWORD *, void))sub_10001ABB8((uint64_t)v6);
    }
  }
  return result;
}

uint64_t (*sub_100251120(void *a1))(_OWORD *, void)
{
  id result = (uint64_t (*)(_OWORD *, void))sub_10024D500();
  uint64_t v5 = result;
  if (*(unsigned char *)(v4 + 32) == 2)
  {
    id result = (uint64_t (*)(_OWORD *, void))result(v15, 0);
  }
  else
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    *(unsigned char *)(v4 + 34) = [a1 isOn];
    id result = (uint64_t (*)(_OWORD *, void))v5(v15, 0);
  }
  uint64_t v6 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (uint64_t (*)(_OWORD *, void))swift_beginAccess();
    unint64_t v8 = *(void *)(v7 + 32);
    if (v8 != 2)
    {
      unint64_t v9 = *(void *)(v7 + 40);
      long long v10 = *(_OWORD *)(v7 + 16);
      v15[0] = *(_OWORD *)v7;
      v15[1] = v10;
      uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v8);
      char v16 = v8 & 1;
      int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
      unsigned __int32 v17 = vmovn_s16(v12).u32[0];
      char v18 = BYTE5(v8) & 1;
      char v19 = BYTE6(v8) & 1;
      char v20 = HIBYTE(v8) & 1;
      char v21 = v9 & 1;
      uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v9);
      int16x8_t v14 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v14.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v14), (int8x8_t)0x1000100010001);
      unsigned __int32 v22 = vmovn_s16(v14).u32[0];
      char v23 = BYTE5(v9) & 1;
      char v24 = BYTE6(v9) & 1;
      char v25 = HIBYTE(v9) & 1;
      swift_retain();
      v6(v15);
      return (uint64_t (*)(_OWORD *, void))sub_10001ABB8((uint64_t)v6);
    }
  }
  return result;
}

uint64_t (*sub_10025133C(void *a1))(_OWORD *, void)
{
  id result = (uint64_t (*)(_OWORD *, void))sub_10024D500();
  uint64_t v5 = result;
  if (*(unsigned char *)(v4 + 32) == 2)
  {
    id result = (uint64_t (*)(_OWORD *, void))result(v15, 0);
  }
  else
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    *(unsigned char *)(v4 + 35) = [a1 isOn];
    id result = (uint64_t (*)(_OWORD *, void))v5(v15, 0);
  }
  uint64_t v6 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (uint64_t (*)(_OWORD *, void))swift_beginAccess();
    unint64_t v8 = *(void *)(v7 + 32);
    if (v8 != 2)
    {
      unint64_t v9 = *(void *)(v7 + 40);
      long long v10 = *(_OWORD *)(v7 + 16);
      v15[0] = *(_OWORD *)v7;
      v15[1] = v10;
      uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v8);
      char v16 = v8 & 1;
      int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
      unsigned __int32 v17 = vmovn_s16(v12).u32[0];
      char v18 = BYTE5(v8) & 1;
      char v19 = BYTE6(v8) & 1;
      char v20 = HIBYTE(v8) & 1;
      char v21 = v9 & 1;
      uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v9);
      int16x8_t v14 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v14.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v14), (int8x8_t)0x1000100010001);
      unsigned __int32 v22 = vmovn_s16(v14).u32[0];
      char v23 = BYTE5(v9) & 1;
      char v24 = BYTE6(v9) & 1;
      char v25 = HIBYTE(v9) & 1;
      swift_retain();
      v6(v15);
      return (uint64_t (*)(_OWORD *, void))sub_10001ABB8((uint64_t)v6);
    }
  }
  return result;
}

uint64_t (*sub_100251558(void *a1))(_OWORD *, void)
{
  id result = (uint64_t (*)(_OWORD *, void))sub_10024D500();
  uint64_t v5 = result;
  if (*(unsigned char *)(v4 + 32) == 2)
  {
    id result = (uint64_t (*)(_OWORD *, void))result(v15, 0);
  }
  else
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    *(unsigned char *)(v4 + 36) = [a1 isOn];
    id result = (uint64_t (*)(_OWORD *, void))v5(v15, 0);
  }
  uint64_t v6 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (uint64_t (*)(_OWORD *, void))swift_beginAccess();
    unint64_t v8 = *(void *)(v7 + 32);
    if (v8 != 2)
    {
      unint64_t v9 = *(void *)(v7 + 40);
      long long v10 = *(_OWORD *)(v7 + 16);
      v15[0] = *(_OWORD *)v7;
      v15[1] = v10;
      uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v8);
      char v16 = v8 & 1;
      int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
      unsigned __int32 v17 = vmovn_s16(v12).u32[0];
      char v18 = BYTE5(v8) & 1;
      char v19 = BYTE6(v8) & 1;
      char v20 = HIBYTE(v8) & 1;
      char v21 = v9 & 1;
      uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v9);
      int16x8_t v14 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v14.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v14), (int8x8_t)0x1000100010001);
      unsigned __int32 v22 = vmovn_s16(v14).u32[0];
      char v23 = BYTE5(v9) & 1;
      char v24 = BYTE6(v9) & 1;
      char v25 = HIBYTE(v9) & 1;
      swift_retain();
      v6(v15);
      return (uint64_t (*)(_OWORD *, void))sub_10001ABB8((uint64_t)v6);
    }
  }
  return result;
}

uint64_t (*sub_100251774(void *a1))(_OWORD *, void)
{
  id result = (uint64_t (*)(_OWORD *, void))sub_10024D500();
  uint64_t v5 = result;
  if (*(unsigned char *)(v4 + 32) == 2)
  {
    id result = (uint64_t (*)(_OWORD *, void))result(v15, 0);
  }
  else
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    *(unsigned char *)(v4 + 37) = [a1 isOn];
    id result = (uint64_t (*)(_OWORD *, void))v5(v15, 0);
  }
  uint64_t v6 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (uint64_t (*)(_OWORD *, void))swift_beginAccess();
    unint64_t v8 = *(void *)(v7 + 32);
    if (v8 != 2)
    {
      unint64_t v9 = *(void *)(v7 + 40);
      long long v10 = *(_OWORD *)(v7 + 16);
      v15[0] = *(_OWORD *)v7;
      v15[1] = v10;
      uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v8);
      char v16 = v8 & 1;
      int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
      unsigned __int32 v17 = vmovn_s16(v12).u32[0];
      char v18 = BYTE5(v8) & 1;
      char v19 = BYTE6(v8) & 1;
      char v20 = HIBYTE(v8) & 1;
      char v21 = v9 & 1;
      uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v9);
      int16x8_t v14 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v14.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v14), (int8x8_t)0x1000100010001);
      unsigned __int32 v22 = vmovn_s16(v14).u32[0];
      char v23 = BYTE5(v9) & 1;
      char v24 = BYTE6(v9) & 1;
      char v25 = HIBYTE(v9) & 1;
      swift_retain();
      v6(v15);
      return (uint64_t (*)(_OWORD *, void))sub_10001ABB8((uint64_t)v6);
    }
  }
  return result;
}

uint64_t (*sub_100251990(void *a1))(_OWORD *, void)
{
  id result = (uint64_t (*)(_OWORD *, void))sub_10024D500();
  uint64_t v5 = result;
  if (*(unsigned char *)(v4 + 32) == 2)
  {
    id result = (uint64_t (*)(_OWORD *, void))result(v15, 0);
  }
  else
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    *(unsigned char *)(v4 + 38) = [a1 isOn];
    id result = (uint64_t (*)(_OWORD *, void))v5(v15, 0);
  }
  uint64_t v6 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (uint64_t (*)(_OWORD *, void))swift_beginAccess();
    unint64_t v8 = *(void *)(v7 + 32);
    if (v8 != 2)
    {
      unint64_t v9 = *(void *)(v7 + 40);
      long long v10 = *(_OWORD *)(v7 + 16);
      v15[0] = *(_OWORD *)v7;
      v15[1] = v10;
      uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v8);
      char v16 = v8 & 1;
      int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
      unsigned __int32 v17 = vmovn_s16(v12).u32[0];
      char v18 = BYTE5(v8) & 1;
      char v19 = BYTE6(v8) & 1;
      char v20 = HIBYTE(v8) & 1;
      char v21 = v9 & 1;
      uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v9);
      int16x8_t v14 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v14.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v14), (int8x8_t)0x1000100010001);
      unsigned __int32 v22 = vmovn_s16(v14).u32[0];
      char v23 = BYTE5(v9) & 1;
      char v24 = BYTE6(v9) & 1;
      char v25 = HIBYTE(v9) & 1;
      swift_retain();
      v6(v15);
      return (uint64_t (*)(_OWORD *, void))sub_10001ABB8((uint64_t)v6);
    }
  }
  return result;
}

uint64_t (*sub_100251BAC(void *a1))(_OWORD *, void)
{
  id result = (uint64_t (*)(_OWORD *, void))sub_10024D500();
  uint64_t v5 = result;
  if (*(unsigned char *)(v4 + 32) == 2)
  {
    id result = (uint64_t (*)(_OWORD *, void))result(v15, 0);
  }
  else
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    *(unsigned char *)(v4 + 40) = [a1 isOn];
    id result = (uint64_t (*)(_OWORD *, void))v5(v15, 0);
  }
  uint64_t v6 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (uint64_t (*)(_OWORD *, void))swift_beginAccess();
    unint64_t v8 = *(void *)(v7 + 32);
    if (v8 != 2)
    {
      unint64_t v9 = *(void *)(v7 + 40);
      long long v10 = *(_OWORD *)(v7 + 16);
      v15[0] = *(_OWORD *)v7;
      v15[1] = v10;
      uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v8);
      char v16 = v8 & 1;
      int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
      unsigned __int32 v17 = vmovn_s16(v12).u32[0];
      char v18 = BYTE5(v8) & 1;
      char v19 = BYTE6(v8) & 1;
      char v20 = HIBYTE(v8) & 1;
      char v21 = v9 & 1;
      uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v9);
      int16x8_t v14 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v14.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v14), (int8x8_t)0x1000100010001);
      unsigned __int32 v22 = vmovn_s16(v14).u32[0];
      char v23 = BYTE5(v9) & 1;
      char v24 = BYTE6(v9) & 1;
      char v25 = HIBYTE(v9) & 1;
      swift_retain();
      v6(v15);
      return (uint64_t (*)(_OWORD *, void))sub_10001ABB8((uint64_t)v6);
    }
  }
  return result;
}

uint64_t (*sub_100251DC8(void *a1))(_OWORD *, void)
{
  id result = (uint64_t (*)(_OWORD *, void))sub_10024D500();
  uint64_t v5 = result;
  if (*(unsigned char *)(v4 + 32) == 2)
  {
    id result = (uint64_t (*)(_OWORD *, void))result(v15, 0);
  }
  else
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    *(unsigned char *)(v4 + 39) = [a1 isOn];
    id result = (uint64_t (*)(_OWORD *, void))v5(v15, 0);
  }
  uint64_t v6 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (uint64_t (*)(_OWORD *, void))swift_beginAccess();
    unint64_t v8 = *(void *)(v7 + 32);
    if (v8 != 2)
    {
      unint64_t v9 = *(void *)(v7 + 40);
      long long v10 = *(_OWORD *)(v7 + 16);
      v15[0] = *(_OWORD *)v7;
      v15[1] = v10;
      uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v8);
      char v16 = v8 & 1;
      int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
      unsigned __int32 v17 = vmovn_s16(v12).u32[0];
      char v18 = BYTE5(v8) & 1;
      char v19 = BYTE6(v8) & 1;
      char v20 = HIBYTE(v8) & 1;
      char v21 = v9 & 1;
      uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v9);
      int16x8_t v14 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v14.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v14), (int8x8_t)0x1000100010001);
      unsigned __int32 v22 = vmovn_s16(v14).u32[0];
      char v23 = BYTE5(v9) & 1;
      char v24 = BYTE6(v9) & 1;
      char v25 = HIBYTE(v9) & 1;
      swift_retain();
      v6(v15);
      return (uint64_t (*)(_OWORD *, void))sub_10001ABB8((uint64_t)v6);
    }
  }
  return result;
}

uint64_t (*sub_100251FE4(void *a1))(_OWORD *, void)
{
  id result = (uint64_t (*)(_OWORD *, void))sub_10024D500();
  uint64_t v5 = result;
  if (*(unsigned char *)(v4 + 32) == 2)
  {
    id result = (uint64_t (*)(_OWORD *, void))result(v15, 0);
  }
  else
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    *(unsigned char *)(v4 + 41) = [a1 isOn];
    id result = (uint64_t (*)(_OWORD *, void))v5(v15, 0);
  }
  uint64_t v6 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (uint64_t (*)(_OWORD *, void))swift_beginAccess();
    unint64_t v8 = *(void *)(v7 + 32);
    if (v8 != 2)
    {
      unint64_t v9 = *(void *)(v7 + 40);
      long long v10 = *(_OWORD *)(v7 + 16);
      v15[0] = *(_OWORD *)v7;
      v15[1] = v10;
      uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v8);
      char v16 = v8 & 1;
      int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
      unsigned __int32 v17 = vmovn_s16(v12).u32[0];
      char v18 = BYTE5(v8) & 1;
      char v19 = BYTE6(v8) & 1;
      char v20 = HIBYTE(v8) & 1;
      char v21 = v9 & 1;
      uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v9);
      int16x8_t v14 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v14.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v14), (int8x8_t)0x1000100010001);
      unsigned __int32 v22 = vmovn_s16(v14).u32[0];
      char v23 = BYTE5(v9) & 1;
      char v24 = BYTE6(v9) & 1;
      char v25 = HIBYTE(v9) & 1;
      swift_retain();
      v6(v15);
      return (uint64_t (*)(_OWORD *, void))sub_10001ABB8((uint64_t)v6);
    }
  }
  return result;
}

uint64_t (*sub_100252200(void *a1))(_OWORD *, void)
{
  id result = (uint64_t (*)(_OWORD *, void))sub_10024D500();
  uint64_t v5 = result;
  if (*(unsigned char *)(v4 + 32) == 2)
  {
    id result = (uint64_t (*)(_OWORD *, void))result(v15, 0);
  }
  else
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    *(unsigned char *)(v4 + 42) = [a1 isOn];
    id result = (uint64_t (*)(_OWORD *, void))v5(v15, 0);
  }
  uint64_t v6 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (uint64_t (*)(_OWORD *, void))swift_beginAccess();
    unint64_t v8 = *(void *)(v7 + 32);
    if (v8 != 2)
    {
      unint64_t v9 = *(void *)(v7 + 40);
      long long v10 = *(_OWORD *)(v7 + 16);
      v15[0] = *(_OWORD *)v7;
      v15[1] = v10;
      uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v8);
      char v16 = v8 & 1;
      int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
      unsigned __int32 v17 = vmovn_s16(v12).u32[0];
      char v18 = BYTE5(v8) & 1;
      char v19 = BYTE6(v8) & 1;
      char v20 = HIBYTE(v8) & 1;
      char v21 = v9 & 1;
      uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v9);
      int16x8_t v14 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v14.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v14), (int8x8_t)0x1000100010001);
      unsigned __int32 v22 = vmovn_s16(v14).u32[0];
      char v23 = BYTE5(v9) & 1;
      char v24 = BYTE6(v9) & 1;
      char v25 = HIBYTE(v9) & 1;
      swift_retain();
      v6(v15);
      return (uint64_t (*)(_OWORD *, void))sub_10001ABB8((uint64_t)v6);
    }
  }
  return result;
}

uint64_t (*sub_10025241C(void *a1))(_OWORD *, void)
{
  id result = (uint64_t (*)(_OWORD *, void))sub_10024D500();
  uint64_t v5 = result;
  if (*(unsigned char *)(v4 + 32) == 2)
  {
    id result = (uint64_t (*)(_OWORD *, void))result(v15, 0);
  }
  else
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    *(unsigned char *)(v4 + 43) = [a1 isOn];
    id result = (uint64_t (*)(_OWORD *, void))v5(v15, 0);
  }
  uint64_t v6 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (uint64_t (*)(_OWORD *, void))swift_beginAccess();
    unint64_t v8 = *(void *)(v7 + 32);
    if (v8 != 2)
    {
      unint64_t v9 = *(void *)(v7 + 40);
      long long v10 = *(_OWORD *)(v7 + 16);
      v15[0] = *(_OWORD *)v7;
      v15[1] = v10;
      uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v8);
      char v16 = v8 & 1;
      int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
      unsigned __int32 v17 = vmovn_s16(v12).u32[0];
      char v18 = BYTE5(v8) & 1;
      char v19 = BYTE6(v8) & 1;
      char v20 = HIBYTE(v8) & 1;
      char v21 = v9 & 1;
      uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v9);
      int16x8_t v14 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v14.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v14), (int8x8_t)0x1000100010001);
      unsigned __int32 v22 = vmovn_s16(v14).u32[0];
      char v23 = BYTE5(v9) & 1;
      char v24 = BYTE6(v9) & 1;
      char v25 = HIBYTE(v9) & 1;
      swift_retain();
      v6(v15);
      return (uint64_t (*)(_OWORD *, void))sub_10001ABB8((uint64_t)v6);
    }
  }
  return result;
}

uint64_t (*sub_100252638(void *a1))(_OWORD *, void)
{
  id result = (uint64_t (*)(_OWORD *, void))sub_10024D500();
  uint64_t v5 = result;
  if (*(unsigned char *)(v4 + 32) == 2)
  {
    id result = (uint64_t (*)(_OWORD *, void))result(v15, 0);
  }
  else
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    *(unsigned char *)(v4 + 44) = [a1 isOn];
    id result = (uint64_t (*)(_OWORD *, void))v5(v15, 0);
  }
  uint64_t v6 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (uint64_t (*)(_OWORD *, void))swift_beginAccess();
    unint64_t v8 = *(void *)(v7 + 32);
    if (v8 != 2)
    {
      unint64_t v9 = *(void *)(v7 + 40);
      long long v10 = *(_OWORD *)(v7 + 16);
      v15[0] = *(_OWORD *)v7;
      v15[1] = v10;
      uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v8);
      char v16 = v8 & 1;
      int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
      unsigned __int32 v17 = vmovn_s16(v12).u32[0];
      char v18 = BYTE5(v8) & 1;
      char v19 = BYTE6(v8) & 1;
      char v20 = HIBYTE(v8) & 1;
      char v21 = v9 & 1;
      uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v9);
      int16x8_t v14 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v14.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v14), (int8x8_t)0x1000100010001);
      unsigned __int32 v22 = vmovn_s16(v14).u32[0];
      char v23 = BYTE5(v9) & 1;
      char v24 = BYTE6(v9) & 1;
      char v25 = HIBYTE(v9) & 1;
      swift_retain();
      v6(v15);
      return (uint64_t (*)(_OWORD *, void))sub_10001ABB8((uint64_t)v6);
    }
  }
  return result;
}

uint64_t (*sub_100252854(void *a1))(_OWORD *, void)
{
  id result = (uint64_t (*)(_OWORD *, void))sub_10024D500();
  uint64_t v5 = result;
  if (*(unsigned char *)(v4 + 32) == 2)
  {
    id result = (uint64_t (*)(_OWORD *, void))result(v15, 0);
  }
  else
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    *(unsigned char *)(v4 + 45) = [a1 isOn];
    id result = (uint64_t (*)(_OWORD *, void))v5(v15, 0);
  }
  uint64_t v6 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (uint64_t (*)(_OWORD *, void))swift_beginAccess();
    unint64_t v8 = *(void *)(v7 + 32);
    if (v8 != 2)
    {
      unint64_t v9 = *(void *)(v7 + 40);
      long long v10 = *(_OWORD *)(v7 + 16);
      v15[0] = *(_OWORD *)v7;
      v15[1] = v10;
      uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v8);
      char v16 = v8 & 1;
      int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
      unsigned __int32 v17 = vmovn_s16(v12).u32[0];
      char v18 = BYTE5(v8) & 1;
      char v19 = BYTE6(v8) & 1;
      char v20 = HIBYTE(v8) & 1;
      char v21 = v9 & 1;
      uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v9);
      int16x8_t v14 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v14.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v14), (int8x8_t)0x1000100010001);
      unsigned __int32 v22 = vmovn_s16(v14).u32[0];
      char v23 = BYTE5(v9) & 1;
      char v24 = BYTE6(v9) & 1;
      char v25 = HIBYTE(v9) & 1;
      swift_retain();
      v6(v15);
      return (uint64_t (*)(_OWORD *, void))sub_10001ABB8((uint64_t)v6);
    }
  }
  return result;
}

uint64_t (*sub_100252A70(void *a1))(_OWORD *, void)
{
  id result = (uint64_t (*)(_OWORD *, void))sub_10024D500();
  uint64_t v5 = result;
  if (*(unsigned char *)(v4 + 32) == 2)
  {
    id result = (uint64_t (*)(_OWORD *, void))result(v15, 0);
  }
  else
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    *(unsigned char *)(v4 + 46) = [a1 isOn];
    id result = (uint64_t (*)(_OWORD *, void))v5(v15, 0);
  }
  uint64_t v6 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (uint64_t (*)(_OWORD *, void))swift_beginAccess();
    unint64_t v8 = *(void *)(v7 + 32);
    if (v8 != 2)
    {
      unint64_t v9 = *(void *)(v7 + 40);
      long long v10 = *(_OWORD *)(v7 + 16);
      v15[0] = *(_OWORD *)v7;
      v15[1] = v10;
      uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v8);
      char v16 = v8 & 1;
      int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
      unsigned __int32 v17 = vmovn_s16(v12).u32[0];
      char v18 = BYTE5(v8) & 1;
      char v19 = BYTE6(v8) & 1;
      char v20 = HIBYTE(v8) & 1;
      char v21 = v9 & 1;
      uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v9);
      int16x8_t v14 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v14.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v14), (int8x8_t)0x1000100010001);
      unsigned __int32 v22 = vmovn_s16(v14).u32[0];
      char v23 = BYTE5(v9) & 1;
      char v24 = BYTE6(v9) & 1;
      char v25 = HIBYTE(v9) & 1;
      swift_retain();
      v6(v15);
      return (uint64_t (*)(_OWORD *, void))sub_10001ABB8((uint64_t)v6);
    }
  }
  return result;
}

uint64_t (*sub_100252C8C(void *a1))(_OWORD *, void)
{
  id result = (uint64_t (*)(_OWORD *, void))sub_10024D500();
  uint64_t v5 = result;
  if (*(unsigned char *)(v4 + 32) == 2)
  {
    id result = (uint64_t (*)(_OWORD *, void))result(v15, 0);
  }
  else
  {
    if (!a1)
    {
      __break(1u);
      return result;
    }
    *(unsigned char *)(v4 + 47) = [a1 isOn];
    id result = (uint64_t (*)(_OWORD *, void))v5(v15, 0);
  }
  uint64_t v6 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v6)
  {
    uint64_t v7 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (uint64_t (*)(_OWORD *, void))swift_beginAccess();
    unint64_t v8 = *(void *)(v7 + 32);
    if (v8 != 2)
    {
      unint64_t v9 = *(void *)(v7 + 40);
      long long v10 = *(_OWORD *)(v7 + 16);
      v15[0] = *(_OWORD *)v7;
      v15[1] = v10;
      uint64x2_t v11 = (uint64x2_t)vdupq_n_s64(v8);
      char v16 = v8 & 1;
      int16x8_t v12 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v11, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v12.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v12), (int8x8_t)0x1000100010001);
      unsigned __int32 v17 = vmovn_s16(v12).u32[0];
      char v18 = BYTE5(v8) & 1;
      char v19 = BYTE6(v8) & 1;
      char v20 = HIBYTE(v8) & 1;
      char v21 = v9 & 1;
      uint64x2_t v13 = (uint64x2_t)vdupq_n_s64(v9);
      int16x8_t v14 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v13, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v14.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v14), (int8x8_t)0x1000100010001);
      unsigned __int32 v22 = vmovn_s16(v14).u32[0];
      char v23 = BYTE5(v9) & 1;
      char v24 = BYTE6(v9) & 1;
      char v25 = HIBYTE(v9) & 1;
      swift_retain();
      v6(v15);
      return (uint64_t (*)(_OWORD *, void))sub_10001ABB8((uint64_t)v6);
    }
  }
  return result;
}

void sub_100252EA8(void *a1)
{
  uint64_t v2 = v1;
  id v4 = *(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMax);
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  *(void *)&v36[0] = 0xD000000000000017;
  *((void *)&v36[0] + 1) = 0x8000000100693BD0;
  uint64_t v5 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMax;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMax) value];
  if ((~LODWORD(v6) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v6 <= -9.2234e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v6 >= 9.2234e18)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v7._id countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 setText:v8];

  long long v10 = sub_10024D500();
  if (*(unsigned char *)(v9 + 32) == 2)
  {
    ((void (*)(_OWORD *, void))v10)(v36, 0);
    goto LABEL_10;
  }
  uint64_t v11 = v9;
  [*(id *)(v2 + v5) value];
  if ((~LODWORD(v12) & 0x7F800000) == 0) {
    goto LABEL_29;
  }
  if (v12 <= -9.2234e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v12 >= 9.2234e18)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  *(void *)(v11 + 8) = (uint64_t)v12;
  ((void (*)(_OWORD *, void))v10)(v36, 0);
LABEL_10:
  [*(id *)(v2 + v5) value];
  float v14 = v13;
  uint64_t v15 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMin;
  [*(id *)(v2 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMin) value];
  if (v14 >= v16) {
    goto LABEL_22;
  }
  char v18 = sub_10024D500();
  if (*(unsigned char *)(v17 + 32) == 2)
  {
    ((void (*)(_OWORD *, void))v18)(v36, 0);
  }
  else
  {
    char v19 = (void *)v17;
    [*(id *)(v2 + v5) value];
    if ((~LODWORD(v20) & 0x7F800000) == 0)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v20 <= -9.2234e18)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= 9.2234e18)
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    *char v19 = (uint64_t)v20;
    ((void (*)(_OWORD *, void))v18)(v36, 0);
  }
  char v21 = *(void **)(v2 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMin);
  *(void *)&v36[0] = 0;
  *((void *)&v36[0] + 1) = 0xE000000000000000;
  id v22 = v21;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  *(void *)&v36[0] = 0xD000000000000017;
  *((void *)&v36[0] + 1) = 0x8000000100693BB0;
  [*(id *)(v2 + v5) value];
  if ((~LODWORD(v23) & 0x7F800000) == 0) {
    goto LABEL_32;
  }
  if (v23 <= -9.2234e18)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v23 >= 9.2234e18)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v24._id countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v22 setText:v25];

  if (!a1)
  {
LABEL_38:
    __break(1u);
    return;
  }
  id v26 = *(id *)(v2 + v15);
  [a1 value];
  [v26 setValue:];

LABEL_22:
  Swift::String v27 = *(void (**)(_OWORD *))(v2 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v27)
  {
    uint64_t v28 = v2 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    swift_beginAccess();
    unint64_t v29 = *(void *)(v28 + 32);
    if (v29 != 2)
    {
      unint64_t v30 = *(void *)(v28 + 40);
      long long v31 = *(_OWORD *)(v28 + 16);
      v36[0] = *(_OWORD *)v28;
      v36[1] = v31;
      uint64x2_t v32 = (uint64x2_t)vdupq_n_s64(v29);
      char v37 = v29 & 1;
      int16x8_t v33 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v32, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v32, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v33.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v33), (int8x8_t)0x1000100010001);
      unsigned __int32 v38 = vmovn_s16(v33).u32[0];
      char v39 = BYTE5(v29) & 1;
      char v40 = BYTE6(v29) & 1;
      char v41 = HIBYTE(v29) & 1;
      char v42 = v30 & 1;
      uint64x2_t v34 = (uint64x2_t)vdupq_n_s64(v30);
      int16x8_t v35 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v34, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v34, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v35.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v35), (int8x8_t)0x1000100010001);
      unsigned __int32 v43 = vmovn_s16(v35).u32[0];
      char v44 = BYTE5(v30) & 1;
      char v45 = BYTE6(v30) & 1;
      char v46 = HIBYTE(v30) & 1;
      swift_retain();
      v27(v36);
      sub_10001ABB8((uint64_t)v27);
    }
  }
}

void sub_100253410(void *a1)
{
  uint64_t v2 = v1;
  id v4 = *(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMin);
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  *(void *)&v36[0] = 0xD000000000000017;
  *((void *)&v36[0] + 1) = 0x8000000100693BB0;
  uint64_t v5 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMin;
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMin) value];
  if ((~LODWORD(v6) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v6 <= -9.2234e18)
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v6 >= 9.2234e18)
  {
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v7._id countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v7);
  swift_bridgeObjectRelease();
  NSString v8 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v4 setText:v8];

  long long v10 = sub_10024D500();
  if (*(unsigned char *)(v9 + 32) == 2)
  {
    ((void (*)(_OWORD *, void))v10)(v36, 0);
    goto LABEL_10;
  }
  uint64_t v11 = (void *)v9;
  [*(id *)(v2 + v5) value];
  if ((~LODWORD(v12) & 0x7F800000) == 0) {
    goto LABEL_29;
  }
  if (v12 <= -9.2234e18)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  if (v12 >= 9.2234e18)
  {
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  *uint64_t v11 = (uint64_t)v12;
  ((void (*)(_OWORD *, void))v10)(v36, 0);
LABEL_10:
  [*(id *)(v2 + v5) value];
  float v14 = v13;
  uint64_t v15 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMax;
  [*(id *)(v2 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMax) value];
  if (v16 >= v14) {
    goto LABEL_22;
  }
  char v18 = sub_10024D500();
  if (*(unsigned char *)(v17 + 32) == 2)
  {
    ((void (*)(_OWORD *, void))v18)(v36, 0);
  }
  else
  {
    uint64_t v19 = v17;
    [*(id *)(v2 + v5) value];
    if ((~LODWORD(v20) & 0x7F800000) == 0)
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
    if (v20 <= -9.2234e18)
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= 9.2234e18)
    {
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
    *(void *)(v19 + 8) = (uint64_t)v20;
    ((void (*)(_OWORD *, void))v18)(v36, 0);
  }
  char v21 = *(void **)(v2 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMax);
  *(void *)&v36[0] = 0;
  *((void *)&v36[0] + 1) = 0xE000000000000000;
  id v22 = v21;
  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  *(void *)&v36[0] = 0xD000000000000017;
  *((void *)&v36[0] + 1) = 0x8000000100693BD0;
  [*(id *)(v2 + v5) value];
  if ((~LODWORD(v23) & 0x7F800000) == 0) {
    goto LABEL_32;
  }
  if (v23 <= -9.2234e18)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  if (v23 >= 9.2234e18)
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  v24._id countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v22 setText:v25];

  if (!a1)
  {
LABEL_38:
    __break(1u);
    return;
  }
  id v26 = *(id *)(v2 + v15);
  [a1 value];
  [v26 setValue:];

LABEL_22:
  Swift::String v27 = *(void (**)(_OWORD *))(v2 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v27)
  {
    uint64_t v28 = v2 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    swift_beginAccess();
    unint64_t v29 = *(void *)(v28 + 32);
    if (v29 != 2)
    {
      unint64_t v30 = *(void *)(v28 + 40);
      long long v31 = *(_OWORD *)(v28 + 16);
      v36[0] = *(_OWORD *)v28;
      v36[1] = v31;
      uint64x2_t v32 = (uint64x2_t)vdupq_n_s64(v29);
      char v37 = v29 & 1;
      int16x8_t v33 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v32, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v32, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v33.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v33), (int8x8_t)0x1000100010001);
      unsigned __int32 v38 = vmovn_s16(v33).u32[0];
      char v39 = BYTE5(v29) & 1;
      char v40 = BYTE6(v29) & 1;
      char v41 = HIBYTE(v29) & 1;
      char v42 = v30 & 1;
      uint64x2_t v34 = (uint64x2_t)vdupq_n_s64(v30);
      int16x8_t v35 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v34, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v34, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v35.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v35), (int8x8_t)0x1000100010001);
      unsigned __int32 v43 = vmovn_s16(v35).u32[0];
      char v44 = BYTE5(v30) & 1;
      char v45 = BYTE6(v30) & 1;
      char v46 = HIBYTE(v30) & 1;
      swift_retain();
      v27(v36);
      sub_10001ABB8((uint64_t)v27);
    }
  }
}

id sub_100253978(uint64_t a1, uint64_t a2, void *a3)
{
  float v6 = &v3[OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass];
  *(void *)float v6 = 0;
  *((void *)v6 + 1) = 0;
  Swift::String v7 = &v3[OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings];
  *(_OWORD *)Swift::String v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_OWORD *)v7 + 2) = xmmword_1006D6E40;
  uint64_t v8 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelEntries;
  id v9 = objc_allocWithZone((Class)UILabel);
  long long v10 = v3;
  *(void *)&v3[v8] = [v9 init];
  uint64_t v11 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelBatchCount;
  *(void *)&v10[v11] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderBatchCount;
  *(void *)&v10[v12] = [objc_allocWithZone((Class)UISlider) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelDatesDaysCount;
  *(void *)&v10[v13] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v14 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderDatesDaysCount;
  *(void *)&v10[v14] = [objc_allocWithZone((Class)UISlider) init];
  uint64_t v15 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchSyncEnable;
  *(void *)&v10[v15] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v16 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelAssetsNeeded;
  *(void *)&v10[v16] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v17 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchAssetsNeeded;
  *(void *)&v10[v17] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v18 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchPhotos;
  *(void *)&v10[v18] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v19 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchMusic;
  *(void *)&v10[v19] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v20 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchPodcasts;
  *(void *)&v10[v20] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v21 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchBooks;
  *(void *)&v10[v21] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v22 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchVisit;
  *(void *)&v10[v22] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v23 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchMultiPinMap;
  *(void *)&v10[v23] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v24 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchVideo;
  *(void *)&v10[v24] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v25 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchAudio;
  *(void *)&v10[v25] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v26 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchActivity;
  *(void *)&v10[v26] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v27 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchRoute;
  *(void *)&v10[v27] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v28 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchLink;
  *(void *)&v10[v28] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v29 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchContact;
  *(void *)&v10[v29] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v30 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchWorkoutRoute;
  *(void *)&v10[v30] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v31 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchWorkoutIcon;
  *(void *)&v10[v31] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v32 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchWorkoutActivity;
  *(void *)&v10[v32] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v33 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchMotionActivity;
  *(void *)&v10[v33] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v34 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMax;
  *(void *)&v10[v34] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v35 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMax;
  *(void *)&v10[v35] = [objc_allocWithZone((Class)UISlider) init];
  uint64_t v36 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMin;
  *(void *)&v10[v36] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v37 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMin;
  *(void *)&v10[v37] = [objc_allocWithZone((Class)UISlider) init];
  uint64_t v38 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelPhotos;
  *(void *)&v10[v38] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v39 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMusic;
  *(void *)&v10[v39] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v40 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelPodcasts;
  *(void *)&v10[v40] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v41 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelBooks;
  *(void *)&v10[v41] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v42 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelVisit;
  *(void *)&v10[v42] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v43 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMultiPinMap;
  *(void *)&v10[v43] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v44 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelVideo;
  *(void *)&v10[v44] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v45 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelAudio;
  *(void *)&v10[v45] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v46 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelActivity;
  *(void *)&v10[v46] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v47 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelRoute;
  *(void *)&v10[v47] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v48 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelLink;
  *(void *)&v10[v48] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v49 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelContact;
  *(void *)&v10[v49] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v50 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelWorkoutRoute;
  *(void *)&v10[v50] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v51 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelWorkoutIcon;
  *(void *)&v10[v51] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v52 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMotionActivity;
  *(void *)&v10[v52] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v53 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelAssetsToGen;
  *(void *)&v10[v53] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v54 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelRand;
  *(void *)&v10[v54] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v55 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_tintColor;
  *(void *)&v10[v55] = [self blueColor];
  *(void *)&v10[OBJC_IVAR____TtC7Journal15BatchSettingsVC_dimmedAlpha] = 0x3FA999999999999ALL;
  uint64_t v56 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_scrollView;
  id v57 = [objc_allocWithZone((Class)UIScrollView) init];
  [v57 setShowsVerticalScrollIndicator:0];
  [v57 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v10[v56] = v57;
  uint64_t v58 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_scrollViewContainer;
  id v59 = [objc_allocWithZone((Class)UIStackView) init];
  [v59 setAxis:1];
  [v59 setSpacing:10.0];
  [v59 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v10[v58] = v59;
  *(void *)&v10[OBJC_IVAR____TtC7Journal15BatchSettingsVC____lazy_storage___view1] = 0;
  *(void *)&v10[OBJC_IVAR____TtC7Journal15BatchSettingsVC____lazy_storage___view2] = 0;
  *(void *)&v10[OBJC_IVAR____TtC7Journal15BatchSettingsVC____lazy_storage___view3] = 0;
  *(void *)&v10[OBJC_IVAR____TtC7Journal15BatchSettingsVC____lazy_storage___view4] = 0;
  *(void *)&v10[OBJC_IVAR____TtC7Journal15BatchSettingsVC_view3SwitchesHeight] = 0;

  if (a2)
  {
    NSString v60 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v60 = 0;
  }
  v63.receiver = v10;
  v63.super_class = (Class)type metadata accessor for BatchSettingsVC();
  id v61 = [super initWithNibName:v60 bundle:a3];

  return v61;
}

id sub_1002540DC(void *a1)
{
  NSString v3 = &v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass];
  *(void *)NSString v3 = 0;
  *((void *)v3 + 1) = 0;
  id v4 = &v1[OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings];
  *(_OWORD *)id v4 = 0u;
  *((_OWORD *)v4 + 1) = 0u;
  *((_OWORD *)v4 + 2) = xmmword_1006D6E40;
  uint64_t v5 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelEntries;
  id v6 = objc_allocWithZone((Class)UILabel);
  Swift::String v7 = v1;
  *(void *)&v1[v5] = [v6 init];
  uint64_t v8 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelBatchCount;
  *(void *)&v7[v8] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v9 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderBatchCount;
  *(void *)&v7[v9] = [objc_allocWithZone((Class)UISlider) init];
  uint64_t v10 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelDatesDaysCount;
  *(void *)&v7[v10] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v11 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderDatesDaysCount;
  *(void *)&v7[v11] = [objc_allocWithZone((Class)UISlider) init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchSyncEnable;
  *(void *)&v7[v12] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v13 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelAssetsNeeded;
  *(void *)&v7[v13] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v14 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchAssetsNeeded;
  *(void *)&v7[v14] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v15 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchPhotos;
  *(void *)&v7[v15] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v16 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchMusic;
  *(void *)&v7[v16] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v17 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchPodcasts;
  *(void *)&v7[v17] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v18 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchBooks;
  *(void *)&v7[v18] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v19 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchVisit;
  *(void *)&v7[v19] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v20 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchMultiPinMap;
  *(void *)&v7[v20] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v21 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchVideo;
  *(void *)&v7[v21] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v22 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchAudio;
  *(void *)&v7[v22] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v23 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchActivity;
  *(void *)&v7[v23] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v24 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchRoute;
  *(void *)&v7[v24] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v25 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchLink;
  *(void *)&v7[v25] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v26 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchContact;
  *(void *)&v7[v26] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v27 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchWorkoutRoute;
  *(void *)&v7[v27] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v28 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchWorkoutIcon;
  *(void *)&v7[v28] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v29 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchWorkoutActivity;
  *(void *)&v7[v29] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v30 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_switchMotionActivity;
  *(void *)&v7[v30] = [objc_allocWithZone((Class)UISwitch) init];
  uint64_t v31 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMax;
  *(void *)&v7[v31] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v32 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMax;
  *(void *)&v7[v32] = [objc_allocWithZone((Class)UISlider) init];
  uint64_t v33 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMin;
  *(void *)&v7[v33] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v34 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderMin;
  *(void *)&v7[v34] = [objc_allocWithZone((Class)UISlider) init];
  uint64_t v35 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelPhotos;
  *(void *)&v7[v35] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v36 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMusic;
  *(void *)&v7[v36] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v37 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelPodcasts;
  *(void *)&v7[v37] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v38 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelBooks;
  *(void *)&v7[v38] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v39 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelVisit;
  *(void *)&v7[v39] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v40 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMultiPinMap;
  *(void *)&v7[v40] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v41 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelVideo;
  *(void *)&v7[v41] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v42 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelAudio;
  *(void *)&v7[v42] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v43 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelActivity;
  *(void *)&v7[v43] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v44 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelRoute;
  *(void *)&v7[v44] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v45 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelLink;
  *(void *)&v7[v45] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v46 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelContact;
  *(void *)&v7[v46] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v47 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelWorkoutRoute;
  *(void *)&v7[v47] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v48 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelWorkoutIcon;
  *(void *)&v7[v48] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v49 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelMotionActivity;
  *(void *)&v7[v49] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v50 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelAssetsToGen;
  *(void *)&v7[v50] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v51 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelRand;
  *(void *)&v7[v51] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v52 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_tintColor;
  *(void *)&v7[v52] = [self blueColor];
  *(void *)&v7[OBJC_IVAR____TtC7Journal15BatchSettingsVC_dimmedAlpha] = 0x3FA999999999999ALL;
  uint64_t v53 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_scrollView;
  id v54 = [objc_allocWithZone((Class)UIScrollView) init];
  [v54 setShowsVerticalScrollIndicator:0];
  [v54 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v7[v53] = v54;
  uint64_t v55 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_scrollViewContainer;
  id v56 = [objc_allocWithZone((Class)UIStackView) init];
  [v56 setAxis:1];
  [v56 setSpacing:10.0];
  [v56 setTranslatesAutoresizingMaskIntoConstraints:0];
  *(void *)&v7[v55] = v56;
  *(void *)&v7[OBJC_IVAR____TtC7Journal15BatchSettingsVC____lazy_storage___view1] = 0;
  *(void *)&v7[OBJC_IVAR____TtC7Journal15BatchSettingsVC____lazy_storage___view2] = 0;
  *(void *)&v7[OBJC_IVAR____TtC7Journal15BatchSettingsVC____lazy_storage___view3] = 0;
  *(void *)&v7[OBJC_IVAR____TtC7Journal15BatchSettingsVC____lazy_storage___view4] = 0;
  *(void *)&v7[OBJC_IVAR____TtC7Journal15BatchSettingsVC_view3SwitchesHeight] = 0;

  v59.receiver = v7;
  v59.super_class = (Class)type metadata accessor for BatchSettingsVC();
  [super initWithCoder:a1];

  return v57;
}

id sub_1002547CC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BatchSettingsVC();
  return [super dealloc];
}

uint64_t type metadata accessor for BatchSettingsVC()
{
  return self;
}

uint64_t sub_100254BA4()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100254BDC(char a1)
{
}

uint64_t sub_100254BE4()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_100254C24(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  swift_retain();
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_100254C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100254CAC()
{
  return swift_release();
}

void sub_100254CB4()
{
}

void *sub_100254CBC(void *a1, void *a2, float a3, float a4, float a5, uint64_t a6, uint64_t a7, void *a8, void *a9, uint64_t a10)
{
  uint64_t v11 = v10;
  [a1 setTextAlignment:0];
  id v19 = [self systemFontOfSize:13.0];
  [a1 setFont:v19];

  uint64_t v20 = self;
  id v21 = [v20 blackColor];
  [a1 setTextColor:v21];

  id v22 = [v20 clearColor];
  [a1 setBackgroundColor:v22];

  [a1 setTranslatesAutoresizingMaskIntoConstraints:0];
  [a8 addSubview:a1];
  *(float *)&double v23 = a4;
  [a2 setMinimumValue:v23];
  *(float *)&double v24 = a5;
  [a2 setMaximumValue:v24];
  [a2 setContinuous:1];
  [a2 setTintColor:*(void *)(v11 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_tintColor)];
  id v25 = [v20 clearColor];
  [a2 setBackgroundColor:v25];

  *(float *)&double v26 = a3;
  [a2 setValue:v26];
  [a2 addTarget:v11 action:a10 forControlEvents:4096];
  NSString v27 = String._bridgeToObjectiveC()();
  [a1 setText:v27];

  [a2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [a8 addSubview:a2];
  if (a9)
  {
    id v28 = a9;
    id v29 = [a1 topAnchor];
    id v30 = [v28 bottomAnchor];
    id v31 = [v29 constraintEqualToAnchor:v30];

    [v31 setActive:1];
  }
  id v32 = [a1 widthAnchor];
  id v33 = [a8 widthAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33];

  [v34 setActive:1];
  id v35 = [a1 heightAnchor];
  id v36 = [v35 constraintEqualToConstant:30.0];

  [v36 setActive:1];
  id v37 = [a2 topAnchor];
  id v38 = [a1 bottomAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38];

  [v39 setActive:1];
  id v40 = [a2 widthAnchor];
  id v41 = [a8 widthAnchor];
  id v42 = [v40 constraintEqualToAnchor:v41];

  [v42 setActive:1];
  id v43 = [a2 heightAnchor];
  id v44 = [v43 constraintEqualToConstant:30.0];

  [v44 setActive:1];
  return a2;
}

id sub_100255184(int a1, int a2, char a3, void *a4, void *a5, id a6, void *a7, uint64_t a8)
{
  [a6 setTextAlignment:0];
  id v14 = [self systemFontOfSize:13.0];
  [a6 setFont:v14];

  id v15 = [self blackColor];
  [a6 setTextColor:v15];

  NSString v16 = String._bridgeToObjectiveC()();
  [a6 setText:v16];

  [a6 setTranslatesAutoresizingMaskIntoConstraints:0];
  [a4 addSubview:a6];
  [a5 addTarget:v8 action:a8 forControlEvents:4096];
  [a5 setOn:a3 & 1];
  uint64_t v17 = *(void *)(v8 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_tintColor);
  [a5 setTintColor:v17];
  [a5 setOnTintColor:v17];
  [a5 setTranslatesAutoresizingMaskIntoConstraints:0];
  [a4 addSubview:a5];
  id v18 = [a5 heightAnchor];
  id v19 = [v18 constraintEqualToConstant:30.0];

  [v19 setActive:1];
  id v20 = [a6 widthAnchor];
  id v21 = [a4 widthAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21];

  [v22 setActive:1];
  id v23 = [a6 heightAnchor];
  id v24 = [v23 constraintEqualToConstant:30.0];

  [v24 setActive:1];
  id v25 = [a6 leadingAnchor];
  id v26 = [a5 trailingAnchor];
  id v27 = [v25 constraintEqualToAnchor:v26 constant:20.0];

  [v27 setActive:1];
  id v28 = [a5 topAnchor];
  id v29 = [a7 bottomAnchor];
  id v30 = [v28 constraintEqualToAnchor:v29];

  [v30 setActive:1];
  id v31 = [a6 topAnchor];
  id v32 = [a7 bottomAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32];

  [v33 setActive:1];
  *(double *)(v8 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_view3SwitchesHeight) = *(double *)(v8
                                                                                              + OBJC_IVAR____TtC7Journal15BatchSettingsVC_view3SwitchesHeight)
                                                                                  + 34.0;
  return a6;
}

id sub_1002555CC()
{
  uint64_t v1 = v0;
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelBatchCount);
  _StringGuts.grow(_:)(22);
  swift_bridgeObjectRelease();
  *(void *)&v21[0] = 0xD000000000000014;
  *((void *)&v21[0] + 1) = 0x8000000100693C50;
  uint64_t v3 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderBatchCount;
  id result = [*(id *)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderBatchCount) value];
  if ((~LODWORD(v5) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v5 <= -9.2234e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v5 >= 9.2234e18)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v6._id countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setText:v7];

  uint64_t v9 = sub_10024D500();
  if (*(unsigned char *)(v8 + 32) == 2)
  {
    id result = (id)((uint64_t (*)(_OWORD *, void))v9)(v21, 0);
    goto LABEL_10;
  }
  uint64_t v10 = v8;
  id result = [*(id *)(v1 + v3) value];
  if ((~LODWORD(v11) & 0x7F800000) == 0) {
    goto LABEL_17;
  }
  if (v11 <= -9.2234e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v11 >= 9.2234e18)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  *(void *)(v10 + 16) = (uint64_t)v11;
  id result = (id)((uint64_t (*)(_OWORD *, void))v9)(v21, 0);
LABEL_10:
  uint64_t v12 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v12)
  {
    uint64_t v13 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (id)swift_beginAccess();
    unint64_t v14 = *(void *)(v13 + 32);
    if (v14 != 2)
    {
      unint64_t v15 = *(void *)(v13 + 40);
      long long v16 = *(_OWORD *)(v13 + 16);
      v21[0] = *(_OWORD *)v13;
      v21[1] = v16;
      uint64x2_t v17 = (uint64x2_t)vdupq_n_s64(v14);
      char v22 = v14 & 1;
      int16x8_t v18 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v17, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v17, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v18.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v18), (int8x8_t)0x1000100010001);
      unsigned __int32 v23 = vmovn_s16(v18).u32[0];
      char v24 = BYTE5(v14) & 1;
      char v25 = BYTE6(v14) & 1;
      char v26 = HIBYTE(v14) & 1;
      char v27 = v15 & 1;
      uint64x2_t v19 = (uint64x2_t)vdupq_n_s64(v15);
      int16x8_t v20 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v19, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v19, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v20.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v20), (int8x8_t)0x1000100010001);
      unsigned __int32 v28 = vmovn_s16(v20).u32[0];
      char v29 = BYTE5(v15) & 1;
      char v30 = BYTE6(v15) & 1;
      char v31 = HIBYTE(v15) & 1;
      swift_retain();
      v12(v21);
      return (id)sub_10001ABB8((uint64_t)v12);
    }
  }
  return result;
}

id sub_1002558B8()
{
  uint64_t v1 = v0;
  id v2 = *(id *)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_labelDatesDaysCount);
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  *(void *)&v21[0] = 0xD000000000000019;
  *((void *)&v21[0] + 1) = 0x8000000100693C30;
  uint64_t v3 = OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderDatesDaysCount;
  id result = [*(id *)(v0 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_sliderDatesDaysCount) value];
  if ((~LODWORD(v5) & 0x7F800000) == 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  if (v5 <= -9.2234e18)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v5 >= 9.2234e18)
  {
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v6._id countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v6);
  swift_bridgeObjectRelease();
  NSString v7 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v2 setText:v7];

  uint64_t v9 = sub_10024D500();
  if (*(unsigned char *)(v8 + 32) == 2)
  {
    id result = (id)((uint64_t (*)(_OWORD *, void))v9)(v21, 0);
    goto LABEL_10;
  }
  uint64_t v10 = v8;
  id result = [*(id *)(v1 + v3) value];
  if ((~LODWORD(v11) & 0x7F800000) == 0) {
    goto LABEL_17;
  }
  if (v11 <= -9.2234e18)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (v11 >= 9.2234e18)
  {
LABEL_19:
    __break(1u);
    return result;
  }
  *(void *)(v10 + 24) = (uint64_t)v11;
  id result = (id)((uint64_t (*)(_OWORD *, void))v9)(v21, 0);
LABEL_10:
  uint64_t v12 = *(void (**)(_OWORD *))(v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass);
  if (v12)
  {
    uint64_t v13 = v1 + OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings;
    id result = (id)swift_beginAccess();
    unint64_t v14 = *(void *)(v13 + 32);
    if (v14 != 2)
    {
      unint64_t v15 = *(void *)(v13 + 40);
      long long v16 = *(_OWORD *)(v13 + 16);
      v21[0] = *(_OWORD *)v13;
      v21[1] = v16;
      uint64x2_t v17 = (uint64x2_t)vdupq_n_s64(v14);
      char v22 = v14 & 1;
      int16x8_t v18 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v17, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v17, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v18.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v18), (int8x8_t)0x1000100010001);
      unsigned __int32 v23 = vmovn_s16(v18).u32[0];
      char v24 = BYTE5(v14) & 1;
      char v25 = BYTE6(v14) & 1;
      char v26 = HIBYTE(v14) & 1;
      char v27 = v15 & 1;
      uint64x2_t v19 = (uint64x2_t)vdupq_n_s64(v15);
      int16x8_t v20 = (int16x8_t)vuzp1q_s32((int32x4_t)vshlq_u64(v19, (uint64x2_t)xmmword_1006E0120), (int32x4_t)vshlq_u64(v19, (uint64x2_t)xmmword_1006E0110));
      *(int8x8_t *)v20.i8 = vand_s8((int8x8_t)vmovn_s32((int32x4_t)v20), (int8x8_t)0x1000100010001);
      unsigned __int32 v28 = vmovn_s16(v20).u32[0];
      char v29 = BYTE5(v15) & 1;
      char v30 = BYTE6(v15) & 1;
      char v31 = HIBYTE(v15) & 1;
      swift_retain();
      v12(v21);
      return (id)sub_10001ABB8((uint64_t)v12);
    }
  }
  return result;
}

uint64_t sub_100255BB0(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v27 = a4;
  unsigned __int32 v28 = a3;
  uint64_t v23 = a2;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v26 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::String v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for DispatchTime();
  uint64_t v22 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  long long v16 = (char *)&v21 - v15;
  sub_10001FB8C();
  uint64x2_t v17 = (void *)static OS_dispatch_queue.main.getter();
  static DispatchTime.now()();
  + infix(_:_:)();
  int16x8_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v13, v10);
  aBlock[4] = sub_1002565E0;
  void aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = &unk_1007A0DE8;
  uint64x2_t v19 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_10004F6A0();
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
  _Block_release(v19);

  (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v25);
  v18(v16, v22);
  return v28(1);
}

uint64_t sub_100255F10(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  Swift::String v6 = (int *)type metadata accessor for UserEngagement.StateSnapshot();
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Date.now.getter();
  uint64_t v9 = *(void **)(a1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
  if (v9)
  {
    id v10 = *(id *)(a1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
  }
  else
  {
    id v11 = objc_allocWithZone((Class)NSAttributedString);
    NSString v12 = String._bridgeToObjectiveC()();
    id v10 = [v11 initWithString:v12];

    uint64_t v9 = 0;
  }
  id v13 = v9;
  uint64_t v14 = sub_1000CE544(a1);
  char v15 = *(unsigned char *)(a1 + 40);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v8, v5, v2);
  *(void *)&v8[v6[5]] = v10;
  *(void *)&v8[v6[6]] = v14;
  v8[v6[7]] = v15;
  sub_1000CEFAC((uint64_t)v8, (uint64_t)v8, (void *)3);
  return sub_1002565E8((uint64_t)v8);
}

uint64_t type metadata accessor for JournalDialogs()
{
  return self;
}

void sub_1002560F8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  type metadata accessor for JurassicAlertController();
  uint64_t v7 = self;
  id v8 = [v7 mainBundle];
  v35._id countAndFlagsBits = 0xD000000000000014;
  v35._object = (void *)0x8000000100693D80;
  v9._object = (void *)0x8000000100693D30;
  v9._id countAndFlagsBits = 0x100000000000004ALL;
  v10._id countAndFlagsBits = 0;
  v10._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v9, (Swift::String_optional)0, (NSBundle)v8, v10, v35);

  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v12 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:0 message:v11 preferredStyle:0];

  id v13 = [v7 mainBundle];
  v36._id countAndFlagsBits = 0xD000000000000019;
  v36._object = (void *)0x8000000100693DA0;
  v14._id countAndFlagsBits = 0x45206574656C6544;
  v14._object = (void *)0xEC0000007972746ELL;
  v15._id countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v14, (Swift::String_optional)0, (NSBundle)v13, v15, v36);

  long long v16 = (void *)swift_allocObject();
  v16[2] = a1;
  void v16[3] = a3;
  v16[4] = a4;
  swift_retain();
  swift_retain();
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v33 = sub_100256558;
  id v34 = v16;
  aBlock = _NSConcreteStackBlock;
  uint64_t v30 = 1107296256;
  char v31 = sub_10007453C;
  id v32 = &unk_1007A0D70;
  int16x8_t v18 = _Block_copy(&aBlock);
  swift_release();
  uint64x2_t v19 = self;
  id v20 = [v19 actionWithTitle:v17 style:2 handler:v18];
  _Block_release(v18);

  id v21 = [v7 mainBundle];
  v37._object = (void *)0x8000000100693DC0;
  v22._id countAndFlagsBits = 0x6C65636E6143;
  v22._object = (void *)0xE600000000000000;
  v23._id countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v37._id countAndFlagsBits = 0xD000000000000013;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v37);

  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = a3;
  *(void *)(v24 + 24) = a4;
  swift_retain();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v33 = sub_1002565B4;
  id v34 = (void *)v24;
  aBlock = _NSConcreteStackBlock;
  uint64_t v30 = 1107296256;
  char v31 = sub_10007453C;
  id v32 = &unk_1007A0DC0;
  uint64_t v26 = _Block_copy(&aBlock);
  swift_release();
  id v27 = [v19 actionWithTitle:v25 style:1 handler:v26];
  _Block_release(v26);

  [v12 addAction:v20];
  [v12 addAction:v27];
  [a2 presentViewController:v12 animated:1 completion:0];
}

uint64_t sub_100256518()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100256558(uint64_t a1)
{
  return sub_100255BB0(a1, *(void *)(v1 + 16), *(uint64_t (**)(uint64_t))(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_100256564(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100256574()
{
  return swift_release();
}

uint64_t sub_10025657C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002565B4()
{
  return (*(uint64_t (**)(void))(v0 + 16))(0);
}

uint64_t sub_1002565E0()
{
  return sub_100255F10(v0);
}

uint64_t sub_1002565E8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserEngagement.StateSnapshot();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_100256654()
{
  double v6 = 0.0;
  double v4 = 0.0;
  double v5 = 0.0;
  uint64_t v3 = 0;
  [v0 getRed:&v6 green:&v5 blue:&v4 alpha:&v3];
  BOOL v1 = v6 <= 0.001;
  if (v5 > 0.001) {
    BOOL v1 = 0;
  }
  return v4 <= 0.001 && v1;
}

BOOL sub_1002566F4()
{
  double v6 = 0.0;
  double v4 = 0.0;
  double v5 = 0.0;
  uint64_t v3 = 0;
  [v0 getRed:&v6 green:&v5 blue:&v4 alpha:&v3];
  BOOL v1 = v6 >= 0.99;
  if (v5 < 0.99) {
    BOOL v1 = 0;
  }
  return v4 >= 0.99 && v1;
}

uint64_t sub_100256794()
{
  double v20 = 0.0;
  double v21 = 0.0;
  double v18 = 0.0;
  double v19 = 0.0;
  [v0 getRed:&v21 green:&v20 blue:&v19 alpha:&v18];
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1006D7C30;
  float v2 = v21 * 255.0;
  uint64_t v3 = lroundf(v2);
  *(void *)(v1 + 56) = &type metadata for Int;
  *(void *)(v1 + 64) = &protocol witness table for Int;
  *(void *)(v1 + 32) = v3;
  float v4 = v20 * 255.0;
  uint64_t v5 = lroundf(v4);
  *(void *)(v1 + 96) = &type metadata for Int;
  *(void *)(v1 + 104) = &protocol witness table for Int;
  *(void *)(v1 + 72) = v5;
  float v6 = v19 * 255.0;
  uint64_t v7 = lroundf(v6);
  *(void *)(v1 + 136) = &type metadata for Int;
  *(void *)(v1 + 144) = &protocol witness table for Int;
  *(void *)(v1 + 112) = v7;
  uint64_t v8 = String.init(format:_:)();
  double v9 = v18;
  if (v18 < 1.0)
  {
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1006D6280;
    float v11 = v9 * 255.0;
    uint64_t v12 = lroundf(v11);
    *(void *)(v10 + 56) = &type metadata for Int;
    *(void *)(v10 + 64) = &protocol witness table for Int;
    *(void *)(v10 + 32) = v12;
    uint64_t v13 = String.init(format:_:)();
    Swift::String v15 = v14;
    swift_bridgeObjectRetain();
    v16._id countAndFlagsBits = v13;
    v16._object = v15;
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

id sub_100256984(void *a1)
{
  double v10 = 0.0;
  double v11 = 0.0;
  uint64_t v8 = 0;
  double v9 = 0.0;
  double v6 = 0.0;
  double v7 = 0.0;
  double v4 = 0.0;
  double v5 = 0.0;
  [v1 getRed:&v11 green:&v10 blue:&v9 alpha:&v8];
  [a1 getRed:&v7 green:&v6 blue:&v5 alpha:&v4];
  return [objc_allocWithZone((Class)UIColor) initWithRed:v4 * v7 + (1.0 - v4) * v11 green:v4 * v6 + (1.0 - v4) * v10 blue:v4 * v5 + (1.0 - v4) * v9 alpha:1.0];
}

id sub_100256AAC(void *a1, void *a2, void *a3)
{
  if ([a1 userInterfaceStyle] == (id)2) {
    double v5 = a2;
  }
  else {
    double v5 = a3;
  }

  return v5;
}

double sub_100256AF4()
{
  uint64_t v3 = 0;
  double v4 = 0.0;
  uint64_t v2 = 0;
  [v0 getRed:&v4 green:&v3 blue:&v2 alpha:0];
  return v4;
}

void sub_100256B7C(int a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  double v7 = (char *)v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DispatchQoS();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)v50 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for DispatchTime();
  __chkstk_darwin(v12);
  __chkstk_darwin(v13);
  if (*(unsigned __int8 *)(v2 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController_currentFilterOption) != a1)
  {
    uint64_t v52 = v17;
    uint64_t v55 = (char *)v50 - v15;
    uint64_t v56 = v16;
    uint64_t v57 = v14;
    uint64_t v58 = v11;
    uint64_t v59 = v9;
    NSString v60 = v7;
    uint64_t v61 = v8;
    uint64_t v62 = v5;
    uint64_t v63 = v4;
    *(unsigned char *)(v2 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController_currentFilterOption) = a1;
    id v18 = sub_100257A14();
    sub_1000C355C(a1, 1);
    sub_10036DA10(a1);

    uint64_t v53 = v2;
    uint64_t v51 = (char *)sub_1002579F4();
    double v19 = *(unsigned char **)&v51[OBJC_IVAR____TtC7Journal18TimelineFilterView_timelineFilterButton];
    uint64_t v66 = (void (*)(uint64_t, uint64_t))OBJC_IVAR____TtC7Journal20TimelineFilterButton_selectedFilter;
    v19[OBJC_IVAR____TtC7Journal20TimelineFilterButton_selectedFilter] = a1;
    int v54 = a1;
    [v19 setSelected:a1 != 0];
    sub_1000C39B8();
    v50[1] = v50;
    uint64_t v20 = *(void *)&v19[OBJC_IVAR____TtC7Journal20TimelineFilterButton_availableFilters];
    aBlock[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    specialized ContiguousArray.reserveCapacity(_:)();
    uint64_t v21 = *(void *)(v20 + 16);
    uint64_t v64 = v20;
    swift_bridgeObjectRetain();
    if (v21)
    {
      uint64_t v65 = v64 + 32;
      sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
      uint64_t v22 = 0;
      UIAccessibilityTraits v23 = UIAccessibilityTraitSelected;
      do
      {
        int v24 = *(unsigned __int8 *)(v65 + v22);
        FilterOption.description.getter(*(unsigned char *)(v65 + v22));
        void aBlock[6] = v22;
        dispatch thunk of CustomStringConvertible.description.getter();
        String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        *(void *)(swift_allocObject() + 16) = v19;
        NSString v25 = v19;
        uint64_t v26 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
        if (v24 == *((unsigned __int8 *)v66 + (void)v19))
        {
          NSString v27 = String._bridgeToObjectiveC()();
          id v28 = [self systemImageNamed:v27];

          [v26 setImage:v28];
          id v29 = v26;
          unint64_t v30 = (unint64_t)[v29 accessibilityTraits];
          if ((v23 & ~v30) != 0) {
            UIAccessibilityTraits v31 = v23;
          }
          else {
            UIAccessibilityTraits v31 = 0;
          }
          [v29 setAccessibilityTraits:v31 | v30];
        }
        ++v22;
        specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
        specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
        specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
        specialized ContiguousArray._endMutation()();
      }
      while (v21 != v22);
    }
    swift_bridgeObjectRelease();
    UIMenuElementSize v32 = aBlock[0];
    swift_bridgeObjectRelease();
    if (v32 < 0 || (v32 & 0x4000000000000000) != 0)
    {
      sub_10001B284(0, (unint64_t *)&unk_100807680);
      swift_bridgeObjectRetain();
      UIMenuElementSize v33 = _bridgeCocoaArray<A>(_:)();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRetain();
      dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
      sub_10001B284(0, (unint64_t *)&unk_100807680);
      UIMenuElementSize v33 = v32;
    }
    char v34 = v54;
    swift_release();
    sub_10001B284(0, (unint64_t *)&unk_100809EE0);
    v35._id countAndFlagsBits = 0;
    v35._object = (void *)0xE000000000000000;
    v68.value.super.Class isa = 0;
    v68.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v35, (Swift::String_optional)0, v68, 0, 0xFFFFFFFFFFFFFFFFLL, v33, v49).super.super.isa;
    [v19 setMenu:isa];

    FilterOption.description.getter(*((unsigned char *)v66 + (void)v19));
    NSString v37 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v19 setAccessibilityValue:v37];

    id v38 = v51;
    sub_10036DA10(v34);

    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    id v39 = (void *)static OS_dispatch_queue.main.getter();
    uint64_t v40 = v52;
    static DispatchTime.now()();
    id v41 = v55;
    + infix(_:_:)();
    uint64_t v42 = v57;
    uint64_t v66 = *(void (**)(uint64_t, uint64_t))(v56 + 8);
    v66(v40, v57);
    uint64_t v43 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v44 = swift_allocObject();
    *(void *)(v44 + 16) = v43;
    *(unsigned char *)(v44 + 24) = v34;
    aBlock[4] = sub_10025F5B8;
    void aBlock[5] = v44;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    aBlock[3] = &unk_1007A1068;
    uint64_t v45 = _Block_copy(aBlock);
    swift_release();
    uint64_t v46 = v58;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10025F8C0((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
    uint64_t v47 = v60;
    uint64_t v48 = v63;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v45);

    (*(void (**)(char *, uint64_t))(v62 + 8))(v47, v48);
    (*(void (**)(char *, uint64_t))(v59 + 8))(v46, v61);
    v66((uint64_t)v41, v42);
  }
}

uint64_t sub_1002573B0()
{
  uint64_t v0 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for DispatchQoS();
  uint64_t v32 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  UIAccessibilityTraits v31 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = type metadata accessor for DispatchTime();
  uint64_t v6 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  double v11 = (char *)&v26 - v10;
  uint64_t v12 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v16 = result;
    uint64_t v17 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v14, 1, 1, v17);
    type metadata accessor for MainActor();
    uint64_t v29 = v0;
    uint64_t v30 = v4;
    swift_retain();
    uint64_t v18 = static MainActor.shared.getter();
    double v19 = (void *)swift_allocObject();
    void v19[2] = v18;
    v19[3] = &protocol witness table for MainActor;
    v19[4] = v16;
    sub_100328A8C((uint64_t)v14, (uint64_t)&unk_100805440, (uint64_t)v19);
    swift_release();
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    uint64_t v27 = static OS_dispatch_queue.main.getter();
    static DispatchTime.now()();
    + infix(_:_:)();
    id v28 = *(void (**)(char *, uint64_t))(v6 + 8);
    v28(v8, v33);
    uint64_t v20 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_10025FACC;
    void aBlock[5] = v20;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    aBlock[3] = &unk_1007A1298;
    uint64_t v21 = _Block_copy(aBlock);
    swift_release();
    uint64_t v22 = v31;
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10025F8C0((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    UIAccessibilityTraits v23 = v3;
    sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
    uint64_t v24 = v29;
    dispatch thunk of SetAlgebra.init<A>(_:)();
    NSString v25 = (void *)v27;
    OS_dispatch_queue.asyncAfter(deadline:qos:flags:execute:)();
    _Block_release(v21);
    swift_release();

    (*(void (**)(char *, uint64_t))(v1 + 8))(v23, v24);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v22, v30);
    return ((uint64_t (*)(char *, uint64_t))v28)(v11, v33);
  }
  return result;
}

id sub_1002578A8()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___accessoryContainerView;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___accessoryContainerView);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___accessoryContainerView);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = sub_10025792C();
    id v6 = objc_allocWithZone((Class)type metadata accessor for NavigationLargeTitleAccessoryContainerView());
    id v7 = sub_1005DE6EC(v5);
    uint64_t v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_10025792C()
{
  return sub_100257944(&OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___accessoryView);
}

id sub_100257938()
{
  return sub_100257944(&OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___accessoryViewForNavBar);
}

id sub_100257944(uint64_t *a1)
{
  uint64_t v2 = *a1;
  id v3 = *(void **)(v1 + *a1);
  if (v3)
  {
    id v4 = *(id *)(v1 + *a1);
  }
  else
  {
    id v5 = [objc_allocWithZone((Class)UIStackView) init];
    id v6 = *(void **)(v1 + v2);
    *(void *)(v1 + v2) = v5;
    id v4 = v5;

    id v3 = 0;
  }
  id v7 = v3;
  return v4;
}

id sub_1002579B4()
{
  return sub_100257A34(&OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___syncSpinner, (void (*)(void))type metadata accessor for CloudSyncLoadingView);
}

id sub_1002579D4()
{
  return sub_100257A34(&OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___syncSpinnerForNavBar, (void (*)(void))type metadata accessor for CloudSyncLoadingView);
}

id sub_1002579F4()
{
  return sub_100257A34(&OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___filtersView, (void (*)(void))type metadata accessor for TimelineFilterView);
}

id sub_100257A14()
{
  return sub_100257A34(&OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___filtersViewForNavBar, (void (*)(void))type metadata accessor for TimelineFilterView);
}

id sub_100257A34(uint64_t *a1, void (*a2)(void))
{
  uint64_t v3 = *a1;
  id v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    a2(0);
    id v6 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
    id v7 = *(void **)(v2 + v3);
    *(void *)(v2 + v3) = v6;
    id v5 = v6;

    id v4 = 0;
  }
  id v8 = v4;
  return v5;
}

id sub_100257AAC()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___searchButton;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___searchButton);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___searchButton);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = (objc_class *)type metadata accessor for JournalSearchButton();
    id v6 = objc_allocWithZone(v5);
    *(void *)&v6[OBJC_IVAR____TtC7Journal19JournalSearchButton_delegate + 8] = 0;
    swift_unknownObjectWeakInit();
    v6[OBJC_IVAR____TtC7Journal19JournalSearchButton_placement] = 1;
    v11.receiver = v6;
    v11.super_class = v5;
    [super initWithFrame:0.0, 0.0, 0.0, 0.0];
    sub_10032049C();

    id v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_100257B88()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___searchButtonForNavBar;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___searchButtonForNavBar);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___searchButtonForNavBar);
  }
  else
  {
    uint64_t v4 = v0;
    id v5 = (objc_class *)type metadata accessor for JournalSearchButton();
    id v6 = objc_allocWithZone(v5);
    *(void *)&v6[OBJC_IVAR____TtC7Journal19JournalSearchButton_delegate + 8] = 0;
    swift_unknownObjectWeakInit();
    v6[OBJC_IVAR____TtC7Journal19JournalSearchButton_placement] = 0;
    v11.receiver = v6;
    v11.super_class = v5;
    id v7 = [super initWithFrame:0.0, 0.0, 0.0, 0.0];
    sub_10032049C();

    id v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_100257C60()
{
  return sub_100257C80(&OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___overflowButton, 1);
}

id sub_100257C70()
{
  return sub_100257C80(&OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___overflowButtonForNavBar, 0);
}

id sub_100257C80(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = *(void **)(v2 + *a1);
  if (v4)
  {
    id v5 = *(id *)(v2 + *a1);
  }
  else
  {
    uint64_t v7 = v2;
    id v8 = objc_allocWithZone((Class)type metadata accessor for TimelineOverflowButton());
    id v9 = sub_10039A538(a2);
    uint64_t v10 = *(void **)(v2 + v3);
    *(void *)(v7 + v3) = v9;
    id v5 = v9;

    uint64_t v4 = 0;
  }
  id v11 = v4;
  return v5;
}

id sub_100257CF8(uint64_t a1)
{
  v1[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_currentFilterOption] = 0;
  uint64_t v3 = OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController;
  type metadata accessor for JournalEntryCollectionViewController();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v5 = v1;
  *(void *)&v1[v3] = [v4 init];
  uint64_t v6 = OBJC_IVAR____TtC7Journal29JournalTimelineViewController_composeButtonsView;
  type metadata accessor for ComposeButtonsView();
  *(void *)&v5[v6] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v5[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_composeButtonsViewBottomConstraint] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___accessoryContainerView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___accessoryView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___accessoryViewForNavBar] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___syncSpinner] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___syncSpinnerForNavBar] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___filtersView] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___filtersViewForNavBar] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___searchButton] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___searchButtonForNavBar] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___overflowButton] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___overflowButtonForNavBar] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_tipsTask] = 0;
  *(void *)&v5[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_insightsTask] = 0;
  swift_weakInit();
  *(void *)&v5[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_model] = a1;
  swift_retain();

  v14.receiver = v5;
  v14.super_class = (Class)type metadata accessor for JournalTimelineViewController();
  id v7 = [super initWithNibName:0 bundle:0];
  id v8 = self;
  id v9 = v7;
  id v10 = [v8 defaultCenter];
  uint64_t v11 = qword_1007F6960;
  id v12 = v9;
  if (v11 != -1) {
    swift_once();
  }
  [v10 addObserver:v12 selector:"onAppUnlock" name:qword_10083CEC8 object:0];

  swift_release();
  return v12;
}

id sub_100257F68()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ColorResource();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v6 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = &stru_1007D7000;
  id result = [v1 view:v4];
  if (result)
  {
    id v9 = result;
    sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    if (qword_1007F8000 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_100026A54(v2, (uint64_t)qword_10083F120);
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, v10, v2);
    uint64_t v11 = (void *)UIColor.init(resource:)();
    [v9 setBackgroundColor:v11];

    id v12 = (objc_class *)type metadata accessor for JournalTimelineViewController();
    v59.receiver = v1;
    v59.super_class = v12;
    [super viewDidLoad];
    sub_100258F5C();
    uint64_t v13 = (char *)sub_100257C60();
    *(void *)&v13[OBJC_IVAR____TtC7Journal22TimelineOverflowButton_delegate + 8] = &off_1007A0E10;
    swift_unknownObjectWeakAssign();

    id v14 = sub_100257C60();
    swift_weakAssign();

    uint64_t v15 = (char *)sub_100257C70();
    *(void *)&v15[OBJC_IVAR____TtC7Journal22TimelineOverflowButton_delegate + 8] = &off_1007A0E10;
    swift_unknownObjectWeakAssign();

    uint64_t v16 = OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController;
    *(void *)(*(void *)&v1[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController]
              + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_delegate
              + 8) = &off_1007A0E60;
    swift_unknownObjectWeakAssign();
    swift_weakLoadStrong();
    swift_weakAssign();
    swift_release();
    uint64_t v17 = *(char **)&v1[v16];
    *(void *)&v17[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_timelineScrollDelegate + 8] = &off_1007A0E50;
    swift_unknownObjectWeakAssign();
    uint64_t v18 = qword_1007F68B0;
    double v19 = v17;
    if (v18 != -1) {
      swift_once();
    }
    [v19 additionalSafeAreaInsets];
    [v19 setAdditionalSafeAreaInsets:];

    uint64_t v20 = *(void **)&v1[v16];
    uint64_t v56 = &type metadata for JournalFeatureFlags;
    unint64_t v21 = sub_10005F364();
    uint64_t v57 = (uint64_t (*)())v21;
    LOBYTE(aBlock) = 1;
    uint64_t v22 = v20;
    char v23 = isFeatureEnabled(_:)();
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&aBlock);
    if ((v23 & 1) == 0)
    {
      unsigned __int8 v24 = 0;
      goto LABEL_10;
    }
    if (qword_1007F6E48 != -1) {
      goto LABEL_31;
    }
    while (1)
    {
      unsigned __int8 v24 = [(id)qword_10083D3C0 showSummaryInTimeline];
LABEL_10:
      char v25 = *((unsigned char *)&v22->name + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_showsInsights);
      *((unsigned char *)&v22->name + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_showsInsights) = v24;
      sub_10062F654(v25);

      id result = [v1 (SEL)v7[102].imp];
      if (!result) {
        break;
      }
      uint64_t v26 = result;
      uint64_t v27 = OBJC_IVAR____TtC7Journal29JournalTimelineViewController_composeButtonsView;
      [result addSubview:*(void *)&v1[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_composeButtonsView]];

      id v28 = *(id *)&v1[v27];
      id v29 = sub_1001DD438(0, 1, 0.0);

      uint64_t v30 = *(void **)&v1[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_composeButtonsViewBottomConstraint];
      *(void *)&v1[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_composeButtonsViewBottomConstraint] = v29;

      id v31 = *(id *)&v1[v27];
      uint64_t v32 = &selRef_drawMapRect_zoomScale_inContext_;
      id v33 = [v31 superview];
      char v34 = &stru_1007D7000;
      Swift::String v35 = &stru_1007D7000;
      if (v33)
      {
        Swift::String v36 = v33;
        [v31 setTranslatesAutoresizingMaskIntoConstraints:0];
        id v37 = [v31 leadingAnchor];
        id v38 = [v36 leadingAnchor];
        id v39 = [v37 constraintEqualToAnchor:v38];

        [v39 setConstant:0.0];
        if (v39)
        {
          id v39 = v39;
          [v39 setActive:1];

          id v31 = v39;
        }

        Swift::String v35 = &stru_1007D7000;
        char v34 = &stru_1007D7000;
        uint64_t v32 = &selRef_drawMapRect_zoomScale_inContext_;
      }
      else
      {
        id v39 = 0;
        Swift::String v36 = v31;
      }

      id v40 = *(id *)&v1[v27];
      id v41 = [v40 v32[77]];
      if (v41)
      {
        uint64_t v42 = v41;
        [v40 v34[96].name];
        id v43 = [v40 trailingAnchor];
        id v44 = [v42 trailingAnchor];
        id v45 = [v43 v35[68].types v44];

        [v45 setConstant:0.0];
        if (v45)
        {
          id v45 = v45;
          [v45 setActive:1];

          id v40 = v45;
        }
      }
      else
      {
        id v45 = 0;
        uint64_t v42 = v40;
      }

      *(void *)(*(void *)&v1[v27] + OBJC_IVAR____TtC7Journal18ComposeButtonsView_delegate + 8) = &off_1007A0EB0;
      swift_unknownObjectWeakAssign();
      uint64_t v56 = &type metadata for JournalFeatureFlags;
      uint64_t v57 = (uint64_t (*)())v21;
      LOBYTE(aBlock) = 0;
      char v46 = isFeatureEnabled(_:)();
      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&aBlock);
      if (v46)
      {
        id v47 = [objc_allocWithZone((Class)UILongPressGestureRecognizer) initWithTarget:v1 action:"adminLongPressWithSender:"];
        [*(id *)&v1[v27] addGestureRecognizer:v47];
      }
      uint64_t v48 = self;
      unint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v1;
      uint64_t v22 = (__objc2_meth *)swift_allocObject();
      v22->imp = sub_10025FDE4;
      v22[1].name = (char *)v21;
      uint64_t v57 = sub_10001AC84;
      uint64_t v58 = v22;
      aBlock = _NSConcreteStackBlock;
      uint64_t v54 = 1107296256;
      uint64_t v55 = sub_1003F44E4;
      uint64_t v56 = (ValueMetadata *)&unk_1007A13D8;
      Swift::OpaquePointer v49 = _Block_copy(&aBlock);
      id v7 = v58;
      uint64_t v1 = v1;
      swift_retain();
      swift_release();
      [(id)v48 performWithoutAnimation:v49];
      _Block_release(v49);
      LOBYTE(v48) = swift_isEscapingClosureAtFileLocation();
      swift_release();
      if ((v48 & 1) == 0)
      {
        if (os_variant_has_internal_ui())
        {
          if (qword_1007F6D38 != -1) {
            swift_once();
          }
          uint64_t v50 = *(void *)(*(void *)(qword_10083D2F8 + 16)
                          + OBJC_IVAR____TtC7Journal13CoreDataStack_persistentStoreLoadingError);
          if (v50)
          {
            aBlock = 0;
            uint64_t v54 = 0xE000000000000000;
            swift_errorRetain();
            _StringGuts.grow(_:)(30);
            v51._object = (void *)0x8000000100694220;
            v51._id countAndFlagsBits = 0xD00000000000001CLL;
            String.append(_:)(v51);
            v52[1] = v50;
            sub_100010218((uint64_t *)&unk_1007FC0D0);
            _print_unlocked<A, B>(_:_:)();
            sub_100395664(0xD00000000000001CLL, 0x80000001006941B0, 0xD00000000000002DLL, 0x80000001006941D0, 0xD000000000000017, 0x8000000100694200, (uint64_t)aBlock, v54);
            swift_bridgeObjectRelease();
            swift_errorRelease();
          }
        }
        return (id)swift_release();
      }
      __break(1u);
LABEL_31:
      swift_once();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002588E0(char a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = (objc_class *)type metadata accessor for JournalTimelineViewController();
  v14.receiver = v2;
  v14.super_class = v7;
  [super viewDidAppear:a1 & 1];
  [v2 setNeedsStatusBarAppearanceUpdate];
  uint64_t v8 = OBJC_IVAR____TtC7Journal29JournalTimelineViewController_tipsTask;
  if (*(void *)&v2[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_tipsTask])
  {
    swift_retain();
    Task.cancel()();
    swift_release();
  }
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
  type metadata accessor for MainActor();
  uint64_t v10 = v2;
  uint64_t v11 = static MainActor.shared.getter();
  id v12 = (void *)swift_allocObject();
  v12[2] = v11;
  void v12[3] = &protocol witness table for MainActor;
  v12[4] = v10;
  *(void *)&v2[v8] = sub_100328A60((uint64_t)v6, (uint64_t)&unk_100805460, (uint64_t)v12);
  swift_release();
  return sub_10025AC30();
}

uint64_t sub_100258ADC(char a1)
{
  v4.receiver = v1;
  v4.super_class = (Class)type metadata accessor for JournalTimelineViewController();
  uint64_t result = (uint64_t)[super viewWillDisappear:a1 & 1];
  if (*(void *)&v1[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_tipsTask])
  {
    swift_retain();
    Task.cancel()();
    uint64_t result = swift_release();
  }
  if (*(void *)&v1[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_insightsTask])
  {
    swift_retain();
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    Task.cancel()();
    return swift_release();
  }
  return result;
}

uint64_t sub_100258C00()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_super v4 = *(void **)(v0 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController);
  if (!*(void *)((char *)v4 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_viewModel))
  {
    uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController_model);
    uint64_t v6 = *(void (**)(uint64_t, void))((swift_isaMask & *v4) + 0x2B8);
    id v7 = v4;
    v6(v5, 0);
  }
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
  uint64_t v9 = swift_allocObject();
  swift_unknownObjectWeakInit();
  type metadata accessor for MainActor();
  swift_retain();
  uint64_t v10 = static MainActor.shared.getter();
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = v10;
  v11[3] = &protocol witness table for MainActor;
  v11[4] = v9;
  swift_release();
  sub_100328A60((uint64_t)v3, (uint64_t)&unk_100805430, (uint64_t)v11);
  return swift_release();
}

uint64_t sub_100258DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 40) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 48) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100258E68, v6, v5);
}

uint64_t sub_100258E68()
{
  swift_release();
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v2 = (void *)Strong;
    id v3 = objc_retain(*(id *)(Strong
                           + OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController));
    sub_1001C824C();
  }
  uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

void sub_100258F5C()
{
  id v1 = [v0 navigationController];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [objc_allocWithZone((Class)UINavigationBarAppearance) init];
    sub_100010218(&qword_100802498);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1006D6280;
    *(void *)(inited + 32) = NSForegroundColorAttributeName;
    uint64_t v5 = self;
    uint64_t v6 = NSForegroundColorAttributeName;
    id v7 = [v5 labelColor];
    *(void *)(inited + 64) = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    *(void *)(inited + 40) = v7;
    sub_100396DBC(inited);
    type metadata accessor for Key(0);
    sub_10025F8C0((unint64_t *)&qword_10080A680, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v3 setLargeTitleTextAttributes:isa];

    id v9 = [v0 view];
    if (v9)
    {
      uint64_t v10 = v9;
      id v11 = [v9 effectiveUserInterfaceLayoutDirection];

      double v12 = 1.79769313e308;
      if (!v11) {
        double v12 = -1.79769313e308;
      }
      [v3 setTitlePositionAdjustment:v12];
      id v13 = [v2 navigationBar];
      [v13 setStandardAppearance:v3];

      id v14 = [v0 navigationItem];
      id v15 = [self mainBundle];
      v21._object = (void *)0xE700000000000000;
      v16._id countAndFlagsBits = 0x6C616E72756F4ALL;
      v16._object = (void *)0xE700000000000000;
      v17._id countAndFlagsBits = 0;
      v17._object = (void *)0xE000000000000000;
      v21._id countAndFlagsBits = 0x6C616E72756F4ALL;
      NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v21);

      NSString v18 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v14 setTitle:v18];

      id v19 = [v2 navigationBar];
      [v19 setPrefersLargeTitles:1];

      id v20 = [v2 navigationBar];
      [v20 setMaximumContentSizeCategory:UIContentSizeCategoryLarge];

      sub_1002592A8();
    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1002592A8()
{
  id v1 = sub_10025792C();
  [v1 setAlignment:3];

  id v2 = sub_10025792C();
  [v2 setSpacing:16.0];

  id v3 = sub_10025792C();
  id v4 = sub_1002579B4();
  [v3 addArrangedSubview:v4];

  id v5 = [v0 navigationItem];
  id v6 = sub_1002578A8();
  [v5 _setLargeTitleAccessoryView:v6 alignToBaseline:0];

  id v7 = sub_100257938();
  [v7 setTranslatesAutoresizingMaskIntoConstraints:0];

  id v8 = sub_100257938();
  [v8 setAlignment:3];

  id v9 = sub_100257938();
  [v9 setSpacing:20.0];

  id v10 = sub_100257938();
  id v11 = sub_1002579D4();
  [v10 addArrangedSubview:v11];

  id v12 = [v0 navigationItem];
  id v13 = sub_100257938();
  id v14 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v13];

  [v12 setRightBarButtonItem:v14];
  id v15 = sub_100257938();
  [v15 setAlpha:0.0];

  Swift::String v36 = &type metadata for JournalFeatureFlags;
  unint64_t v37 = sub_10005F364();
  v35[0] = 3;
  LOBYTE(v13) = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v35);
  id v16 = sub_10025792C();
  if (v13)
  {
    id v17 = sub_100257AAC();
    [v16 addArrangedSubview:v17];

    NSString v18 = (char *)sub_100257AAC();
    *(void *)&v18[OBJC_IVAR____TtC7Journal19JournalSearchButton_delegate + 8] = &off_1007A0E30;
    swift_unknownObjectWeakAssign();

    id v19 = sub_100257938();
    id v20 = sub_100257B88();
    [v19 addArrangedSubview:v20];

    Swift::String v21 = (char *)sub_100257B88();
    *(void *)&v21[OBJC_IVAR____TtC7Journal19JournalSearchButton_delegate + 8] = &off_1007A0E30;
  }
  else
  {
    id v22 = sub_1002579F4();
    [v16 addArrangedSubview:v22];

    char v23 = (char *)sub_1002579F4();
    uint64_t v24 = *(void *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_model];
    uint64_t v25 = OBJC_IVAR____TtC7Journal18TimelineFilterView_entryModel;
    *(void *)&v23[OBJC_IVAR____TtC7Journal18TimelineFilterView_entryModel] = v24;
    swift_retain_n();
    swift_release();
    *(void *)(*(void *)&v23[OBJC_IVAR____TtC7Journal18TimelineFilterView_timelineFilterButton]
              + OBJC_IVAR____TtC7Journal20TimelineFilterButton_entryModel) = *(void *)&v23[v25];
    swift_retain();

    swift_release();
    swift_release();
    uint64_t v26 = (char *)sub_1002579F4();
    *(void *)&v26[OBJC_IVAR____TtC7Journal18TimelineFilterView_delegate + 8] = &off_1007A0E40;
    swift_unknownObjectWeakAssign();
    *(void *)(*(void *)&v26[OBJC_IVAR____TtC7Journal18TimelineFilterView_timelineFilterButton]
              + OBJC_IVAR____TtC7Journal20TimelineFilterButton_filtersDelegate
              + 8) = &off_1007A7570;
    swift_unknownObjectWeakAssign();

    id v27 = sub_100257938();
    id v28 = sub_100257A14();
    [v27 addArrangedSubview:v28];

    id v29 = (char *)sub_100257A14();
    uint64_t v30 = OBJC_IVAR____TtC7Journal18TimelineFilterView_entryModel;
    *(void *)&v29[OBJC_IVAR____TtC7Journal18TimelineFilterView_entryModel] = v24;
    swift_retain_n();
    swift_release();
    *(void *)(*(void *)&v29[OBJC_IVAR____TtC7Journal18TimelineFilterView_timelineFilterButton]
              + OBJC_IVAR____TtC7Journal20TimelineFilterButton_entryModel) = *(void *)&v29[v30];
    swift_retain();

    swift_release();
    swift_release();
    Swift::String v21 = (char *)sub_100257A14();
    *(void *)&v21[OBJC_IVAR____TtC7Journal18TimelineFilterView_delegate + 8] = &off_1007A0E40;
    swift_unknownObjectWeakAssign();
    *(void *)(*(void *)&v21[OBJC_IVAR____TtC7Journal18TimelineFilterView_timelineFilterButton]
              + OBJC_IVAR____TtC7Journal20TimelineFilterButton_filtersDelegate
              + 8) = &off_1007A7570;
  }
  swift_unknownObjectWeakAssign();

  id v31 = sub_10025792C();
  id v32 = sub_100257C60();
  [v31 addArrangedSubview:v32];

  id v33 = sub_100257938();
  id v34 = sub_100257C70();
  [v33 addArrangedSubview:v34];
}

void sub_10025975C(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = (void *)Strong;
    id v5 = sub_100257938();

    double v6 = 0.0;
    if (a2) {
      double v6 = 1.0;
    }
    [v5 setAlpha:v6];
  }
}

uint64_t sub_1002597E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[27] = a4;
  uint64_t v5 = sub_100010218(&qword_100805468);
  v4[28] = v5;
  v4[29] = *(void *)(v5 - 8);
  v4[30] = swift_task_alloc();
  sub_100010218(&qword_1008026B8);
  v4[31] = swift_task_alloc();
  uint64_t v6 = sub_100010218(&qword_100805470);
  v4[32] = v6;
  v4[33] = *(void *)(v6 - 8);
  v4[34] = swift_task_alloc();
  uint64_t v7 = sub_100010218(&qword_100805478);
  v4[35] = v7;
  v4[36] = *(void *)(v7 - 8);
  v4[37] = swift_task_alloc();
  uint64_t v8 = sub_100010218(&qword_100805480);
  v4[38] = v8;
  v4[39] = *(void *)(v8 - 8);
  v4[40] = swift_task_alloc();
  v4[41] = type metadata accessor for MainActor();
  v4[42] = static MainActor.shared.getter();
  uint64_t v10 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[43] = v10;
  v4[44] = v9;
  return _swift_task_switch(sub_100259A30, v10, v9);
}

uint64_t sub_100259A30()
{
  sub_100010218(&qword_100805488);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1006D6280;
  *(void *)(v0 + 40) = &type metadata for JournalFeatureFlags;
  unint64_t v2 = sub_10005F364();
  *(unsigned char *)(v0 + 16) = 8;
  *(void *)(v0 + 48) = v2;
  char v3 = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0(v0 + 16);
  if (v3)
  {
    unint64_t v4 = sub_1001D591C();
    uint64_t v5 = &type metadata for MindfulMinutesTip;
  }
  else
  {
    uint64_t v5 = 0;
    unint64_t v4 = 0;
    *(void *)(v1 + 32) = 0;
    *(void *)(v1 + 40) = 0;
    *(void *)(v1 + 48) = 0;
  }
  uint64_t v6 = *(void *)(v0 + 288);
  uint64_t v7 = *(void *)(v0 + 296);
  uint64_t v9 = *(void *)(v0 + 272);
  uint64_t v8 = *(void *)(v0 + 280);
  uint64_t v11 = *(void *)(v0 + 256);
  uint64_t v10 = *(void *)(v0 + 264);
  *(void *)(v1 + 56) = v5;
  *(void *)(v1 + 64) = v4;
  sub_100010218(&qword_100805490);
  *(void *)(swift_task_alloc() + 16) = v1;
  (*(void (**)(uint64_t, void, uint64_t))(v10 + 104))(v9, enum case for AsyncStream.Continuation.BufferingPolicy.unbounded<A>(_:), v11);
  AsyncStream.init(_:bufferingPolicy:_:)();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  AsyncStream.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v7, v8);
  *(void *)(v0 + 360) = OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController;
  uint64_t v12 = static MainActor.shared.getter();
  *(void *)(v0 + 368) = v12;
  id v13 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v13;
  void *v13 = v0;
  v13[1] = sub_100259C5C;
  uint64_t v14 = *(void *)(v0 + 304);
  return AsyncStream.Iterator.next(isolation:)(v0 + 56, v12, &protocol witness table for MainActor, v14);
}

uint64_t sub_100259C5C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 352);
  uint64_t v3 = *(void *)(v1 + 344);
  return _swift_task_switch(sub_100259DA0, v3, v2);
}

uint64_t sub_100259DA0()
{
  if (*(void *)(v0 + 80) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 312) + 8))(*(void *)(v0 + 320), *(void *)(v0 + 304));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  sub_10002C4EC(v0 + 56, v0 + 96, &qword_100805490);
  if (!*(void *)(v0 + 120)) {
    goto LABEL_9;
  }
  sub_10001B220(v0 + 96, v0 + 136, &qword_100805490);
  sub_100010218(&qword_100805498);
  if (!swift_dynamicCast())
  {
    _s7Journal19DynamicWaveformViewVwxx_0(v0 + 136);
LABEL_9:
    uint64_t v4 = *(void *)(v0 + 248);
    uint64_t v5 = *(void **)(*(void *)(v0 + 216) + *(void *)(v0 + 360));
    uint64_t v6 = type metadata accessor for AnyTip();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v4, 1, 1, v6);
    uint64_t v7 = (uint64_t)v5 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_tip;
    swift_beginAccess();
    uint64_t v8 = v5;
    sub_10025FC94(v4, v7);
    swift_endAccess();
    uint64_t v9 = &v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_tipActionHandler];
    *(void *)uint64_t v9 = AudioRecordingActivityState.hash(into:);
    *((void *)v9 + 1) = 0;
    swift_release();
    sub_1000D886C();
    NSDiffableDataSourceSectionSnapshot.init()();
    uint64_t v10 = *(void **)&v8[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_dataSource];
    uint64_t v11 = *(void *)(v0 + 240);
    uint64_t v12 = *(void *)(v0 + 224);
    id v13 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 232) + 8);
    if (v10)
    {
      *(_OWORD *)(v0 + 200) = xmmword_1006DD040;
      id v14 = v10;
      UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)();
    }
    (*v13)(v11, v12);

    goto LABEL_12;
  }
  id v3 = *(id *)(*(void *)(v0 + 216) + *(void *)(v0 + 360));
  sub_10025A980((uint64_t)sub_10025FCFC, 0);

  _s7Journal19DynamicWaveformViewVwxx_0(v0 + 136);
LABEL_12:
  sub_10001457C(v0 + 96, &qword_100805490);
  uint64_t v15 = static MainActor.shared.getter();
  *(void *)(v0 + 368) = v15;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v0 + 376) = v16;
  *uint64_t v16 = v0;
  v16[1] = sub_100259C5C;
  uint64_t v17 = *(void *)(v0 + 304);
  return AsyncStream.Iterator.next(isolation:)(v0 + 56, v15, &protocol witness table for MainActor, v17);
}

uint64_t sub_10025A11C()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  type metadata accessor for MainActor();
  uint64_t v4 = static MainActor.shared.getter();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = &protocol witness table for MainActor;
  sub_100328A60((uint64_t)v2, (uint64_t)&unk_1008054A8, v5);
  return swift_release();
}

uint64_t sub_10025A21C()
{
  uint64_t v1 = type metadata accessor for Tips.InvalidationReason();
  v0[5] = v1;
  v0[6] = *(void *)(v1 - 8);
  v0[7] = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_100800A60);
  v0[8] = swift_task_alloc();
  v0[9] = swift_task_alloc();
  v0[10] = swift_task_alloc();
  type metadata accessor for MainActor();
  v0[11] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[12] = v3;
  v0[13] = v2;
  return _swift_task_switch(sub_10025A358, v3, v2);
}

id sub_10025A358()
{
  if (qword_1007F7158 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_100010218(&qword_100801138);
  sub_100026A54(v1, (uint64_t)qword_10083D738);
  swift_beginAccess();
  Tips.Parameter.wrappedValue.getter();
  int v2 = *(unsigned __int8 *)(v0 + 120);
  swift_endAccess();
  if (v2 == 1)
  {
    swift_release();
    id v3 = [objc_allocWithZone((Class)HealthAppAuthorizationManagementLinkBuilder) init];
    id v4 = [v3 URLForAuthorizationManagementFromLocation:2 bundleIdentifier:@"com.apple.journal"];
    uint64_t v5 = *(void *)(v0 + 72);
    if (v4)
    {
      uint64_t v6 = v4;
      static URL._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v7 = type metadata accessor for URL();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v5, 0, 1, v7);
    }
    else
    {
      uint64_t v10 = type metadata accessor for URL();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
    }
    sub_10002C4EC(*(void *)(v0 + 72), *(void *)(v0 + 80), (uint64_t *)&unk_100800A60);
    id result = [self defaultWorkspace];
    if (result)
    {
      uint64_t v11 = result;
      uint64_t v12 = *(void *)(v0 + 64);
      sub_10001B220(*(void *)(v0 + 80), v12, (uint64_t *)&unk_100800A60);
      uint64_t v13 = type metadata accessor for URL();
      uint64_t v14 = *(void *)(v13 - 8);
      int v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
      uint64_t v17 = 0;
      if (v15 != 1)
      {
        uint64_t v18 = *(void *)(v0 + 64);
        URL._bridgeToObjectiveC()(v16);
        uint64_t v17 = v19;
        (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v18, v13);
      }
      uint64_t v20 = *(void *)(v0 + 80);
      uint64_t v22 = *(void *)(v0 + 48);
      uint64_t v21 = *(void *)(v0 + 56);
      uint64_t v23 = *(void *)(v0 + 40);
      [v11 openSensitiveURL:v17 withOptions:0];

      (*(void (**)(uint64_t, void, uint64_t))(v22 + 104))(v21, enum case for Tips.InvalidationReason.actionPerformed(_:), v23);
      sub_1001D591C();
      Tip.invalidate(reason:)();

      (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v21, v23);
      sub_10001457C(v20, (uint64_t *)&unk_100800A60);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v24 = *(uint64_t (**)(void))(v0 + 8);
      return (id)v24();
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    if (qword_1007F6930 != -1) {
      swift_once();
    }
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 112) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_10025A774;
    return (id)sub_10004D7C0((uint64_t)&off_100793C48);
  }
  return result;
}

uint64_t sub_10025A774()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_10025A894, v3, v2);
}

uint64_t sub_10025A894()
{
  uint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = v0[5];
  swift_release();
  (*(void (**)(uint64_t, void, uint64_t))(v2 + 104))(v1, enum case for Tips.InvalidationReason.actionPerformed(_:), v3);
  sub_1001D591C();
  Tip.invalidate(reason:)();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_10025A980(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100010218(&qword_100805468);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_1008026B8);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1001D591C();
  AnyTip.init<A>(_:)();
  uint64_t v13 = type metadata accessor for AnyTip();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 0, 1, v13);
  uint64_t v14 = v3 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_tip;
  swift_beginAccess();
  sub_10025FC94((uint64_t)v12, v14);
  swift_endAccess();
  int v15 = (void *)(v3 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_tipActionHandler);
  *int v15 = a1;
  v15[1] = a2;
  swift_retain();
  swift_release();
  sub_1000D886C();
  NSDiffableDataSourceSectionSnapshot.init()();
  sub_100010218(&qword_1007FC218);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_1006D6280;
  *(void *)(v16 + 32) = dispatch thunk of Tip.id.getter();
  *(void *)(v16 + 40) = v17;
  *(unsigned char *)(v16 + 48) = 1;
  long long v21 = 0uLL;
  char v22 = -1;
  NSDiffableDataSourceSectionSnapshot.append(_:to:)();
  swift_bridgeObjectRelease();
  uint64_t v18 = *(void **)(v3 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_dataSource);
  if (v18)
  {
    long long v21 = xmmword_1006DD040;
    id v19 = v18;
    UICollectionViewDiffableDataSource.apply(_:to:animatingDifferences:completion:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_10025AC30()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  id v4 = &v13[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v14 = &type metadata for JournalFeatureFlags;
  unint64_t v15 = sub_10005F364();
  v13[0] = 1;
  char v5 = isFeatureEnabled(_:)();
  uint64_t result = _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v13);
  if (v5)
  {
    uint64_t v7 = OBJC_IVAR____TtC7Journal29JournalTimelineViewController_insightsTask;
    if (*(void *)&v1[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_insightsTask])
    {
      swift_retain();
      sub_100010218((uint64_t *)&unk_1007FC0D0);
      Task.cancel()();
      swift_release();
    }
    uint64_t v8 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v4, 1, 1, v8);
    type metadata accessor for MainActor();
    uint64_t v9 = v1;
    uint64_t v10 = static MainActor.shared.getter();
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = v9;
    *(void *)&v1[v7] = sub_1005D74B4((uint64_t)v4, (uint64_t)&unk_100805420, (uint64_t)v11);
    return swift_release();
  }
  return result;
}

uint64_t sub_10025ADE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[3] = a4;
  uint64_t v5 = sub_100010218(&qword_1008044E0);
  v4[4] = v5;
  v4[5] = *(void *)(v5 - 8);
  v4[6] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Publishers.PrefetchStrategy();
  v4[7] = v6;
  v4[8] = *(void *)(v6 - 8);
  v4[9] = swift_task_alloc();
  uint64_t v7 = sub_100010218(&qword_1008044E8);
  v4[10] = v7;
  v4[11] = *(void *)(v7 - 8);
  v4[12] = swift_task_alloc();
  uint64_t v8 = sub_100010218(&qword_1008044F0);
  v4[13] = v8;
  v4[14] = *(void *)(v8 - 8);
  v4[15] = swift_task_alloc();
  uint64_t v9 = sub_100010218(&qword_1008044F8);
  v4[16] = v9;
  v4[17] = *(void *)(v9 - 8);
  v4[18] = swift_task_alloc();
  uint64_t v10 = sub_100010218(&qword_100804500);
  v4[19] = v10;
  v4[20] = *(void *)(v10 - 8);
  v4[21] = swift_task_alloc();
  v4[22] = type metadata accessor for MainActor();
  v4[23] = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[24] = v12;
  v4[25] = v11;
  return _swift_task_switch(sub_10025B0B8, v12, v11);
}

uint64_t sub_10025B0B8()
{
  if (qword_1007F6E48 != -1) {
    swift_once();
  }
  uint64_t v19 = v0[17];
  uint64_t v18 = v0[16];
  uint64_t v16 = v0[18];
  uint64_t v17 = v0[14];
  uint64_t v1 = v0[12];
  uint64_t v15 = v0[13];
  uint64_t v2 = v0[10];
  uint64_t v13 = v0[15];
  uint64_t v14 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v6 = v0[6];
  uint64_t v5 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[5];
  swift_getKeyPath();
  _KeyValueCodingAndObservingPublishing<>.publisher<A>(for:options:)();
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v4, enum case for Publishers.PrefetchStrategy.byRequest(_:), v5);
  (*(void (**)(uint64_t, void, uint64_t))(v8 + 104))(v6, enum case for Publishers.BufferingStrategy.dropOldest<A>(_:), v7);
  sub_100014488(&qword_100804508, &qword_1008044E8);
  Publisher.buffer(size:prefetch:whenFull:)();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v5);
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v1, v2);
  sub_100014488(&qword_100804510, &qword_1008044F0);
  Publisher<>.values.getter();
  (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v13, v15);
  swift_release();
  AsyncPublisher.makeAsyncIterator()();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v16, v18);
  v0[26] = OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController;
  v0[27] = static MainActor.shared.getter();
  uint64_t v9 = sub_100014488(&qword_100804518, &qword_100804500);
  uint64_t v10 = (void *)swift_task_alloc();
  v0[28] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_10025B3D8;
  uint64_t v11 = v0[19];
  return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 30, v11, v9);
}

uint64_t sub_10025B3D8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 232) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 216);
  if (v0)
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v6 = v5;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_10025B7C8;
  }
  else
  {
    if (v3)
    {
      swift_getObjectType();
      uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v6 = v8;
    }
    else
    {
      uint64_t v4 = 0;
      uint64_t v6 = 0;
    }
    uint64_t v7 = sub_10025B570;
  }
  return _swift_task_switch(v7, v4, v6);
}

uint64_t sub_10025B570()
{
  swift_release();
  *(unsigned char *)(v0 + 241) = *(unsigned char *)(v0 + 240);
  uint64_t v1 = *(void *)(v0 + 192);
  uint64_t v2 = *(void *)(v0 + 200);
  return _swift_task_switch(sub_10025B5DC, v1, v2);
}

uint64_t sub_10025B5DC()
{
  int v1 = *(unsigned __int8 *)(v0 + 241);
  if (v1 == 2)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 160) + 8))(*(void *)(v0 + 168), *(void *)(v0 + 152));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
    return v2();
  }
  else
  {
    uint64_t v4 = *(unsigned char **)(*(void *)(v0 + 24) + *(void *)(v0 + 208));
    char v5 = v4[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_showsInsights];
    v4[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_showsInsights] = v1 & 1;
    uint64_t v6 = v4;
    sub_10062F654(v5);

    *(void *)(v0 + 216) = static MainActor.shared.getter();
    uint64_t v7 = sub_100014488(&qword_100804518, &qword_100804500);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 224) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_10025B3D8;
    uint64_t v9 = *(void *)(v0 + 152);
    return dispatch thunk of AsyncIteratorProtocol.next()(v0 + 240, v9, v7);
  }
}

uint64_t sub_10025B7C8()
{
  *(void *)(v0 + 16) = *(void *)(v0 + 232);
  sub_100010218((uint64_t *)&unk_1007FC0D0);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

void sub_10025B84C()
{
  int v1 = v0;
  uint64_t v2 = type metadata accessor for UIBackgroundConfiguration();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for ImageResource();
  uint64_t v4 = *(void *)(v3 - 8);
  *(void *)&double v5 = __chkstk_darwin(v3).n128_u64[0];
  uint64_t v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController;
  if (*(unsigned char *)(*(void *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController]
                + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_hasPerformedInitialFetch) != 1)
    goto LABEL_10;
  uint64_t v9 = *(void **)(*(void *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_model]
                + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController);
  if (v9)
  {
    id v10 = [v9 sections:v5];
    if (v10)
    {
      uint64_t v11 = v10;
      sub_100010218(&qword_1007F9BD0);
      unint64_t v12 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v13 > 0) {
        goto LABEL_10;
      }
    }
  }
  uint64_t v14 = (char *)sub_1002579F4();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)&v14[OBJC_IVAR____TtC7Journal18TimelineFilterView_entryModel];
  if (v16)
  {
    uint64_t v17 = *(void *)(v16 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_currentFilters);
    swift_bridgeObjectRetain();

    if (v17)
    {
      swift_bridgeObjectRelease();
LABEL_10:
      uint64_t v18 = *(void **)&v1[v8];
      uint64_t v53 = 0;
      long long aBlock = 0u;
      long long v52 = 0u;
      id v19 = v18;
      UIViewController.contentUnavailableConfiguration.setter();

      id v20 = sub_100257AAC();
      [v20 setEnabled:1];

      id v21 = sub_100257B88();
      [v21 setEnabled:1];

      char v22 = sub_1002579F4();
      uint64_t v23 = OBJC_IVAR____TtC7Journal18TimelineFilterView_isEnabled;
      char v24 = v22[OBJC_IVAR____TtC7Journal18TimelineFilterView_isEnabled];
      v22[OBJC_IVAR____TtC7Journal18TimelineFilterView_isEnabled] = 1;
      if ((v24 & 1) == 0)
      {
        uint64_t v50 = (uint64_t)v22;
        [*(id *)&v22[OBJC_IVAR____TtC7Journal18TimelineFilterView_timelineFilterButton] setEnabled:1];
        [*(id *)(v50 + OBJC_IVAR____TtC7Journal18TimelineFilterView_showingLabel) setEnabled:*(unsigned __int8 *)(v50 + v23)];
        [*(id *)(v50 + OBJC_IVAR____TtC7Journal18TimelineFilterView_filterNameLabel) setEnabled:*(unsigned __int8 *)(v50 + v23)];
        char v22 = (unsigned char *)v50;
      }

      return;
    }
  }
  else
  {
  }
  uint64_t v49 = v4;
  type metadata accessor for UIContentUnavailableConfiguration();
  uint64_t v50 = swift_allocBox();
  static UIContentUnavailableConfiguration.empty()();
  uint64_t v25 = self;
  id v26 = [v25 mainBundle];
  v56._id countAndFlagsBits = 0xD00000000000002FLL;
  v56._object = (void *)0x80000001006940F0;
  v27._object = (void *)0x80000001006940D0;
  v27._id countAndFlagsBits = 0xD000000000000010;
  v28._id countAndFlagsBits = 0;
  v28._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v27, (Swift::String_optional)0, (NSBundle)v26, v28, v56);

  UIContentUnavailableConfiguration.text.setter();
  id v29 = [v25 mainBundle];
  v57._id countAndFlagsBits = 0xD00000000000003ELL;
  v30._id countAndFlagsBits = 0xD000000000000042;
  v57._object = (void *)0x8000000100694170;
  v30._object = (void *)0x8000000100694120;
  v31._id countAndFlagsBits = 0;
  v31._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v30, (Swift::String_optional)0, (NSBundle)v29, v31, v57);

  UIContentUnavailableConfiguration.secondaryText.setter();
  sub_10001B284(0, (unint64_t *)&qword_10080A1F0);
  if (qword_1007F8008 != -1) {
    swift_once();
  }
  uint64_t v32 = sub_100026A54(v3, (uint64_t)qword_10083F138);
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v7, v32, v3);
  UIImage.init(resource:)();
  UIContentUnavailableConfiguration.image.setter();
  UIContentUnavailableConfiguration.imageToTextPadding.setter();
  if (qword_1007F72D8 != -1) {
    swift_once();
  }
  uint64_t v33 = qword_10083D8A0;
  id v34 = (void (*)(long long *, void))UIContentUnavailableConfiguration.directionalLayoutMargins.modify();
  *(void *)(v35 + 8) = v33;
  v34(&aBlock, 0);
  Swift::String v36 = (void (*)(long long *, void))UIContentUnavailableConfiguration.directionalLayoutMargins.modify();
  *(void *)(v37 + 24) = v33;
  v36(&aBlock, 0);
  static UIBackgroundConfiguration.clear()();
  UIContentUnavailableConfiguration.background.setter();
  id v38 = self;
  uint64_t v39 = swift_allocObject();
  uint64_t v40 = v50;
  *(void *)(v39 + 16) = v1;
  *(void *)(v39 + 24) = v40;
  uint64_t v53 = sub_10025FBCC;
  uint64_t v54 = v39;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v52 = sub_10017D530;
  *((void *)&v52 + 1) = &unk_1007A1310;
  id v41 = _Block_copy(&aBlock);
  uint64_t v42 = v1;
  swift_retain();
  swift_release();
  [v38 animateWithDuration:0 delay:v41 options:0 animations:0.44 completion:0.0];
  _Block_release(v41);
  id v43 = sub_100257AAC();
  [v43 setEnabled:0];

  id v44 = sub_100257B88();
  [v44 setEnabled:0];

  id v45 = (char *)sub_1002579F4();
  char v46 = v45;
  uint64_t v47 = OBJC_IVAR____TtC7Journal18TimelineFilterView_isEnabled;
  int v48 = v45[OBJC_IVAR____TtC7Journal18TimelineFilterView_isEnabled];
  v45[OBJC_IVAR____TtC7Journal18TimelineFilterView_isEnabled] = 0;
  if (v48 == 1)
  {
    [*(id *)&v45[OBJC_IVAR____TtC7Journal18TimelineFilterView_timelineFilterButton] setEnabled:0];
    [*(id *)&v46[OBJC_IVAR____TtC7Journal18TimelineFilterView_showingLabel] setEnabled:v46[v47]];
    [*(id *)&v46[OBJC_IVAR____TtC7Journal18TimelineFilterView_filterNameLabel] setEnabled:v46[v47]];
  }
  swift_release();
}

void sub_10025BF6C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UIContentUnavailableConfiguration();
  uint64_t v3 = swift_projectBox();
  uint64_t v4 = *(void **)(a1 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController);
  swift_beginAccess();
  v7[3] = v2;
  v7[4] = (uint64_t)&protocol witness table for UIContentUnavailableConfiguration;
  double v5 = sub_100062E54(v7);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(v5, v3, v2);
  id v6 = v4;
  UIViewController.contentUnavailableConfiguration.setter();
}

uint64_t sub_10025C110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a1;
  v4[3] = a4;
  type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[5] = v6;
  v4[6] = v5;
  return _swift_task_switch(sub_10025C1A8, v6, v5);
}

uint64_t sub_10025C1A8()
{
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 56) = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    *(void *)(v0 + 64) = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_10025C298;
    return sub_100056A08();
  }
  else
  {
    swift_release();
    **(unsigned char **)(v0 + 16) = 2;
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
}

uint64_t sub_10025C298(char a1)
{
  uint64_t v2 = *v1;
  *(unsigned char *)(*v1 + 72) = a1;
  swift_task_dealloc();
  swift_release();
  uint64_t v3 = *(void *)(v2 + 48);
  uint64_t v4 = *(void *)(v2 + 40);
  return _swift_task_switch(sub_10025C3E4, v4, v3);
}

uint64_t sub_10025C3E4()
{
  char v1 = *(unsigned char *)(v0 + 72);
  swift_release();
  **(unsigned char **)(v0 + 16) = v1;
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_10025C658()
{
  char v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController;
  id v3 = [*(id *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController] parentViewController];

  if (!v3)
  {
    [v1 addChildViewController:*(void *)&v1[v2]];
    id v4 = [*(id *)&v1[v2] view];
    if (v4)
    {
      uint64_t v5 = v4;
      [v4 setAlpha:0.0];

      id v6 = [v1 view];
      if (v6)
      {
        uint64_t v7 = v6;
        id v8 = [*(id *)&v1[v2] view];
        if (v8)
        {
          uint64_t v9 = v8;
          [v7 insertSubview:v8 belowSubview:*(void *)&v1[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_composeButtonsView]];

          id v10 = [*(id *)&v1[v2] view];
          if (v10)
          {
            uint64_t v11 = v10;
            sub_1001DCF60(0.0);

            swift_bridgeObjectRelease();
            unint64_t v12 = *(void **)(*(void *)&v1[v2]
                           + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
            id v13 = v12;
            v27.value.super.super.super.Class isa = (Class)v12;
            UIViewController.setContentScrollView(_:)(v27);

            uint64_t v14 = self;
            uint64_t v15 = swift_allocObject();
            *(void *)(v15 + 16) = v1;
            uint64_t v25 = sub_10025F790;
            uint64_t v26 = v15;
            id v21 = _NSConcreteStackBlock;
            uint64_t v22 = 1107296256;
            uint64_t v23 = sub_10017D530;
            char v24 = &unk_1007A11A8;
            uint64_t v16 = _Block_copy(&v21);
            uint64_t v17 = v1;
            swift_release();
            uint64_t v18 = swift_allocObject();
            *(void *)(v18 + 16) = v17;
            uint64_t v25 = sub_10025F798;
            uint64_t v26 = v18;
            id v21 = _NSConcreteStackBlock;
            uint64_t v22 = 1107296256;
            uint64_t v23 = sub_1001C7318;
            char v24 = &unk_1007A11F8;
            id v19 = _Block_copy(&v21);
            id v20 = v17;
            swift_release();
            [v14 animateWithDuration:4 delay:v16 options:v19 animations:0.3 completion:0.0];
            _Block_release(v19);
            _Block_release(v16);
            return;
          }
LABEL_11:
          __break(1u);
          return;
        }
LABEL_10:
        __break(1u);
        goto LABEL_11;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_10;
  }
}

void sub_10025C934(uint64_t a1)
{
  id v1 = [*(id *)(a1 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController) view];
  if (v1)
  {
    id v2 = v1;
    [v1 setAlpha:1.0];
  }
  else
  {
    __break(1u);
  }
}

void sub_10025C9A0()
{
  id v1 = *(char **)(v0 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController);
  id v2 = *(void **)&v1[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView];
  if (v2)
  {
    id v3 = v1;
    id v4 = v2;
    id v5 = [v4 visibleCells];
    sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
    unint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v6 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v7 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v7) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v7 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v7)
      {
LABEL_4:
        if (v7 < 1)
        {
          __break(1u);
          return;
        }
        uint64_t v16 = v4;
        uint64_t v17 = v3;
        for (uint64_t i = 0; i != v7; ++i)
        {
          if ((v6 & 0xC000000000000001) != 0) {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else {
            id v10 = *(id *)(v6 + 8 * i + 32);
          }
          uint64_t v11 = v10;
          type metadata accessor for JournalEntryCollectionViewCell();
          uint64_t v12 = swift_dynamicCastClass();
          if (v12)
          {
            id v13 = *(void **)(*(void *)(v12 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView)
                           + OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView);
            if (v13)
            {
              id v14 = [v13 visibleCells];
              unint64_t v15 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

              if (v15 >> 62)
              {
                sub_10001B284(0, (unint64_t *)&qword_100802730);
                swift_bridgeObjectRetain();
                unint64_t v9 = _bridgeCocoaArray<A>(_:)();
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_bridgeObjectRetain();
                dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
                sub_10001B284(0, (unint64_t *)&qword_100802730);
                unint64_t v9 = v15;
              }
              swift_bridgeObjectRelease();
              sub_1000C89E4(v9);
            }
          }
        }
        swift_bridgeObjectRelease();
        id v3 = v17;
        goto LABEL_19;
      }
    }

    swift_bridgeObjectRelease();
LABEL_19:
  }
}

void sub_10025CC1C(char a1)
{
  uint64_t v3 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for DispatchQoS();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(char **)(v1 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController);
  id v13 = *(void **)&v12[OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView];
  if (v13)
  {
    uint64_t v24 = v9;
    sub_10001B284(0, (unint64_t *)&qword_100805AB0);
    uint64_t v23 = v12;
    uint64_t v14 = v4;
    id v15 = v13;
    uint64_t v22 = static OS_dispatch_queue.main.getter();
    uint64_t v16 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v17 = swift_allocObject();
    *(unsigned char *)(v17 + 16) = a1 & 1;
    *(void *)(v17 + 24) = v16;
    *(void *)(v17 + 32) = v15;
    *(void *)(v17 + 40) = AudioRecordingActivityState.hash(into:);
    *(void *)(v17 + 48) = 0;
    aBlock[4] = sub_1001D5A8C;
    void aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    aBlock[3] = &unk_1007A1158;
    uint64_t v18 = _Block_copy(aBlock);
    id v19 = v15;
    swift_release();
    static DispatchQoS.unspecified.getter();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10025F8C0((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100010218(&qword_100804DB0);
    sub_100014488((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
    dispatch thunk of SetAlgebra.init<A>(_:)();
    id v20 = (void *)v22;
    OS_dispatch_queue.async(group:qos:flags:execute:)();
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v14 + 8))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v24);
  }
}

id sub_10025CFB8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalTimelineViewController();
  return [super dealloc];
}

uint64_t type metadata accessor for JournalTimelineViewController()
{
  return self;
}

void *sub_10025D15C(char *a1)
{
  id v3 = *(id *)(v1 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController);
  uint64_t v4 = sub_1001CA324(a1);

  return v4;
}

id sub_10025D1B4()
{
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController);
  id v2 = sub_1001CABB4();

  return v2;
}

void sub_10025D200(char a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  unint64_t v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    uint64_t v7 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v8 = static MainActor.shared.getter();
    uint64_t v9 = (void *)swift_allocObject();
    v9[2] = v8;
    v9[3] = &protocol witness table for MainActor;
    void v9[4] = a2;
    sub_100328A60((uint64_t)v6, (uint64_t)&unk_1008053D8, (uint64_t)v9);
    swift_release();
  }
}

uint64_t sub_10025D320(uint64_t result)
{
  if (result)
  {
    uint64_t v2 = swift_retain_n();
    sub_1002560F8(v2, v1, (uint64_t)sub_10025F098, v2);
    return swift_release_n();
  }
  return result;
}

uint64_t sub_10025D378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[8] = a1;
  v4[9] = a4;
  sub_100010218(&qword_100800950);
  v4[10] = swift_task_alloc();
  v4[11] = type metadata accessor for CanvasStartingState();
  v4[12] = swift_task_alloc();
  type metadata accessor for MainActor();
  v4[13] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[14] = v6;
  v4[15] = v5;
  return _swift_task_switch(sub_10025D470, v6, v5);
}

uint64_t sub_10025D470()
{
  id v1 = self;
  id v2 = [v1 sharedInstance];
  id v3 = [v2 onboardingFlowCompletionStatus];

  if (v3)
  {
    id v4 = [v1 sharedInstance];
    id v5 = [v4 onboardingFlowCompletionStatus];

    if (v5 == (id)1 || (sub_1003981A0() & 1) != 0) {
      goto LABEL_7;
    }
    if (qword_1007F6E48 != -1) {
      swift_once();
    }
    if ([(id)qword_10083D3C0 BOOLForKey:@"SKIP_JOURNALING_SUGGESTIONS"])
    {
LABEL_7:
      uint64_t v7 = (int *)v0[11];
      uint64_t v6 = v0[12];
      uint64_t v8 = type metadata accessor for WidgetFamily();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v6, 1, 1, v8);
      uint64_t v9 = (void *)(v6 + v7[5]);
      void *v9 = 0;
      v9[1] = 0;
      uint64_t v10 = v6 + v7[6];
      uint64_t v11 = type metadata accessor for Date();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
      *(unsigned char *)(v6 + v7[7]) = 1;
      uint64_t v12 = (void *)swift_task_alloc();
      v0[17] = v12;
      *uint64_t v12 = v0;
      v12[1] = sub_10025D964;
      uint64_t v13 = v0[12];
      return sub_100059E88(0, v13);
    }
    else
    {
      uint64_t v16 = v0[10];
      uint64_t v17 = type metadata accessor for UUID();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
      uint64_t v18 = (void *)swift_task_alloc();
      v0[18] = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_10025DB38;
      uint64_t v19 = v0[10];
      return sub_100059380(v19);
    }
  }
  else
  {
    id v15 = (void *)swift_task_alloc();
    v0[16] = v15;
    *id v15 = v0;
    v15[1] = sub_10025D7B4;
    return sub_10005C0CC(1);
  }
}

uint64_t sub_10025D7B4(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  *(unsigned char *)(v3 + 24) = a1;
  *(void *)(v3 + 16) = v1;
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v2 + 120);
  uint64_t v5 = *(void *)(v2 + 112);
  return _swift_task_switch(sub_10025D8DC, v5, v4);
}

uint64_t sub_10025D8DC()
{
  char v1 = *(unsigned char *)(v0 + 24);
  uint64_t v2 = *(unsigned char **)(v0 + 64);
  swift_release();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10025D964(char a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  *((unsigned char *)v3 + 40) = a1;
  v3[4] = v1;
  uint64_t v4 = v2[12];
  swift_task_dealloc();
  sub_10006272C(v4);
  uint64_t v5 = v2[15];
  uint64_t v6 = v2[14];
  return _swift_task_switch(sub_10025DAB0, v6, v5);
}

uint64_t sub_10025DAB0()
{
  char v1 = *(unsigned char *)(v0 + 40);
  uint64_t v2 = *(unsigned char **)(v0 + 64);
  swift_release();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_10025DB38(char a1)
{
  uint64_t v2 = (void *)*v1;
  uint64_t v3 = (void *)*v1;
  *((unsigned char *)v3 + 56) = a1;
  v3[6] = v1;
  uint64_t v4 = v2[10];
  swift_task_dealloc();
  sub_10001457C(v4, &qword_100800950);
  uint64_t v5 = v2[15];
  uint64_t v6 = v2[14];
  return _swift_task_switch(sub_10025DC8C, v6, v5);
}

uint64_t sub_10025DC8C()
{
  char v1 = *(unsigned char *)(v0 + 56);
  uint64_t v2 = *(unsigned char **)(v0 + 64);
  swift_release();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_10025DD14()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    char v1 = (void *)Strong;
    id v2 = objc_retain(*(id *)(Strong
                           + OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController));

    sub_1001C979C(0, (uint64_t)AudioRecordingActivityState.hash(into:), 0);
  }
}

uint64_t sub_10025DD9C(uint64_t a1, char a2)
{
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    type metadata accessor for MainActor();
    swift_retain();
    swift_retain();
    uint64_t v10 = static MainActor.shared.getter();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = &protocol witness table for MainActor;
    *(void *)(v11 + 32) = v8;
    *(void *)(v11 + 40) = a1;
    *(unsigned char *)(v11 + 48) = a2 & 1;
    sub_100328A8C((uint64_t)v6, (uint64_t)&unk_1008053F8, v11);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10025DEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  *(unsigned char *)(v6 + 88) = a6;
  *(void *)(v6 + 24) = a4;
  *(void *)(v6 + 32) = a5;
  *(void *)(v6 + 16) = a1;
  *(void *)(v6 + 40) = type metadata accessor for CanvasStartingState();
  *(void *)(v6 + 48) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v6 + 56) = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v6 + 64) = v8;
  *(void *)(v6 + 72) = v7;
  return _swift_task_switch(sub_10025DFC0, v8, v7);
}

uint64_t sub_10025DFC0()
{
  uint64_t v1 = *(void *)(v0 + 48);
  int v2 = *(unsigned __int8 *)(v0 + 88);
  uint64_t v3 = type metadata accessor for WidgetFamily();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v1, 1, 1, v3);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v4 = *(void *)(v0 + 48);
  if (v2 == 1)
  {
    uint64_t v6 = (void *)(v4 + *(int *)(v5 + 20));
    *uint64_t v6 = 0;
    v6[1] = 0;
    uint64_t v7 = v4 + *(int *)(v5 + 24);
    uint64_t v8 = type metadata accessor for Date();
    char v9 = 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  }
  else
  {
    uint64_t v10 = v4 + *(int *)(v5 + 24);
    uint64_t v11 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v10, 1, 1, v11);
    uint64_t v12 = (void *)(v4 + *(int *)(v5 + 20));
    *uint64_t v12 = 0;
    v12[1] = 0;
    char v9 = -2;
  }
  uint64_t v13 = *(void *)(v0 + 32);
  *(unsigned char *)(*(void *)(v0 + 48) + *(int *)(*(void *)(v0 + 40) + 28)) = v9;
  uint64_t v14 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v14;
  *uint64_t v14 = v0;
  v14[1] = sub_10025E178;
  uint64_t v15 = *(void *)(v0 + 48);
  return sub_100059E88(v13, v15);
}

uint64_t sub_10025E178(char a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 48);
  *(unsigned char *)(*v1 + 89) = a1;
  swift_task_dealloc();
  sub_10006272C(v3);
  uint64_t v4 = *(void *)(v2 + 72);
  uint64_t v5 = *(void *)(v2 + 64);
  return _swift_task_switch(sub_10025E2C4, v5, v4);
}

uint64_t sub_10025E2C4()
{
  char v1 = *(unsigned char *)(v0 + 89);
  uint64_t v2 = *(unsigned char **)(v0 + 16);
  swift_release();
  *uint64_t v2 = v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_10025E340()
{
  if (UIAccessibilityIsVoiceOverRunning())
  {
    id v1 = [v0 navigationController];
    if (v1)
    {
      uint64_t v2 = v1;
      id v3 = [v1 navigationBar];

      [v3 setAccessibilityElementsHidden:1];
    }
    id v4 = [v0 view];
    if (v4)
    {
      id v5 = v4;
      [v4 setAccessibilityViewIsModal:1];
    }
    else
    {
      __break(1u);
    }
  }
}

id sub_10025E424()
{
  id v1 = [v0 navigationController];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [v1 navigationBar];

    [v3 setAccessibilityElementsHidden:0];
  }
  id result = [v0 view];
  if (result)
  {
    id v5 = result;
    [result setAccessibilityViewIsModal:0];

    uint64_t v6 = *(void **)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_composeButtonsView];
    return [v6 setAccessibilityElementsHidden:0];
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_10025E4F8(char a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v8 = static MainActor.shared.getter();
    uint64_t v9 = swift_allocObject();
    *(void *)(v9 + 16) = v8;
    *(void *)(v9 + 24) = &protocol witness table for MainActor;
    *(void *)(v9 + 32) = v6;
    *(unsigned char *)(v9 + 40) = a1;
    sub_100328A8C((uint64_t)v4, (uint64_t)&unk_1008053E8, v9);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10025E634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  _OWORD v5[2] = a1;
  v5[3] = type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_task_alloc();
  v5[5] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_10025E6F4;
  return sub_100058864(a5);
}

uint64_t sub_10025E6F4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10025FFA8, v3, v2);
}

void sub_10025E844()
{
  if (!*((unsigned char *)v0 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController_currentFilterOption))
  {
    sub_10025C658();
    [v0 setNeedsUpdateContentUnavailableConfiguration];
  }
}

id sub_10025E890()
{
  sub_10025C658();

  return [v0 setNeedsUpdateContentUnavailableConfiguration];
}

void sub_10025E8C8(double a1)
{
  BOOL v2 = a1 >= -12.0;
  id v3 = sub_100257938();
  [v3 alpha];
  double v5 = v4;

  if (((v2 ^ (v5 != 1.0)) & 1) == 0)
  {
    BOOL v6 = a1 >= -12.0;
    if (a1 < -12.0) {
      double v7 = 0.0;
    }
    else {
      double v7 = 0.1;
    }
    uint64_t v8 = self;
    uint64_t v9 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v9;
    *(unsigned char *)(v10 + 24) = v6;
    v12[4] = sub_10025F58C;
    v12[5] = v10;
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 1107296256;
    v12[2] = sub_10017D530;
    void v12[3] = &unk_1007A0FF0;
    uint64_t v11 = _Block_copy(v12);
    swift_release();
    [v8 animateWithDuration:4 delay:v11 options:0 animations:v7 completion:0.0];
    _Block_release(v11);
  }
}

void sub_10025EA48(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = (char *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    double v4 = Strong;
    double v5 = *(void **)(*(void *)&Strong[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController]
                  + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
    if (v5)
    {
      type metadata accessor for FadeBlurTransition();
      uint64_t v6 = swift_allocObject();
      swift_unknownObjectWeakInit();
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v6;
      *(unsigned char *)(v7 + 24) = a2;
      id v8 = v5;
      swift_retain();
      sub_1001EB620(v8, (uint64_t)sub_10025F5C4, v7);

      swift_release();
      swift_release();
    }
    else
    {
    }
  }
}

uint64_t sub_10025EB6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v9 = (void *)result;
    id v10 = objc_retain(*(id *)(result
                            + OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController));

    sub_100010218(&qword_1007FC1C0);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1006D6280;
    *(unsigned char *)(v11 + 32) = a4;
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = a1;
    void v12[3] = a2;
    v12[4] = a3;
    swift_retain();
    swift_retain();
    sub_1001C9F74(v11, 0, (uint64_t (*)(uint64_t))sub_10025F610, (uint64_t)v12);

    swift_bridgeObjectRelease();
    return swift_release();
  }
  return result;
}

void sub_10025EC88(void (*a1)(void))
{
  a1();
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    BOOL v2 = Strong;
    [Strong setNeedsUpdateContentUnavailableConfiguration];
  }
}

uint64_t sub_10025ECF4()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  BOOL v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v6 = static MainActor.shared.getter();
    uint64_t v7 = (void *)swift_allocObject();
    _OWORD v7[2] = v6;
    v7[3] = &protocol witness table for MainActor;
    v7[4] = v4;
    sub_100328A8C((uint64_t)v2, (uint64_t)&unk_100805408, (uint64_t)v7);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_10025EE28(uint64_t a1)
{
  v1[2] = a1;
  v1[3] = type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  BOOL v2 = (void *)swift_task_alloc();
  v1[5] = v2;
  *BOOL v2 = v1;
  v2[1] = sub_10025EEE4;
  return sub_100057AAC(0, 0, 0);
}

uint64_t sub_10025EEE4(char a1)
{
  *(unsigned char *)(*(void *)v1 + 48) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10025F028, v3, v2);
}

uint64_t sub_10025F028()
{
  char v1 = *(unsigned char *)(v0 + 48);
  uint64_t v2 = *(unsigned char **)(v0 + 16);
  swift_release();
  *uint64_t v2 = v1;
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

void sub_10025F098(char a1)
{
  sub_10025D200(a1, v1);
}

void sub_10025F0A0()
{
  uint64_t v1 = v0;
  if (qword_1007F6CD8 != -1) {
    swift_once();
  }
  swift_retain();
  AppStorage.wrappedValue.setter();
  swift_release();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController_model);
  swift_retain();
  AppStorage.wrappedValue.getter();
  swift_release();
  *(unsigned char *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_sortOrder) = v8;
  sub_100036B8C();
  uint64_t v3 = OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController;
  uint64_t v4 = *(void **)(v1 + OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v4) + 0x2B8);
  uint64_t v6 = v4;
  v5(v2, 1);

  id v7 = *(id *)(v1 + v3);
  sub_1001C889C();
}

uint64_t sub_10025F208(uint64_t a1)
{
  v1[2] = a1;
  v1[3] = type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  uint64_t v2 = (void *)swift_task_alloc();
  v1[5] = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_10025E6F4;
  return sub_100058864(9);
}

uint64_t sub_10025F2BC()
{
  return sub_10025F9CC();
}

uint64_t sub_10025F2C4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_100052588;
  return sub_10005BB6C(a1, v4, v5, v6);
}

uint64_t sub_10025F378()
{
  return sub_10025F9CC();
}

uint64_t sub_10025F380(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  char v7 = *(unsigned char *)(v1 + 40);
  char v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *char v8 = v2;
  v8[1] = sub_100052588;
  return sub_10025E634(a1, v4, v5, v6, v7);
}

uint64_t sub_10025F444()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10025F48C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100052588;
  return sub_10025DEF0(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_10025F554()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10025F58C()
{
  sub_10025975C(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_10025F598(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10025F5A8()
{
  return swift_release();
}

void sub_10025F5B0(void *a1)
{
}

void sub_10025F5B8()
{
  sub_10025EA48(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_10025F5C4(uint64_t a1, uint64_t a2)
{
  return sub_10025EB6C(a1, a2, *(void *)(v2 + 16), *(unsigned char *)(v2 + 24));
}

uint64_t sub_10025F5D0()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

void sub_10025F610()
{
  sub_10025EC88(*(void (**)(void))(v0 + 16));
}

uint64_t sub_10025F61C()
{
  return sub_10025F9CC();
}

uint64_t sub_10025F624(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100052588;
  return sub_10025EE28(a1);
}

uint64_t sub_10025F6D8()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10025F710()
{
  swift_release();

  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10025F758()
{
  return swift_deallocObject();
}

void sub_10025F790()
{
  sub_10025C934(*(void *)(v0 + 16));
}

id sub_10025F798()
{
  return [*(id *)(*(void *)(v0 + 16)+ OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController) didMoveToParentViewController:];
}

uint64_t sub_10025F7B8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_10025ADE0(a1, v4, v5, v6);
}

const char *sub_10025F86C()
{
  return "showSummaryInTimeline";
}

id sub_10025F878@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 showSummaryInTimeline];
  *a2 = (_BYTE)result;
  return result;
}

id sub_10025F8AC(unsigned __int8 *a1, id *a2)
{
  return [*a2 setShowSummaryInTimeline:*a1];
}

uint64_t sub_10025F8C0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_10025F908()
{
  return sub_10025F9CC();
}

uint64_t sub_10025F910(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_100258DD0(a1, v4, v5, v6);
}

uint64_t sub_10025F9C4()
{
  return sub_10025F9CC();
}

uint64_t sub_10025F9CC()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10025FA18(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_10025D378(a1, v4, v5, v6);
}

void sub_10025FACC()
{
}

uint64_t sub_10025FAD8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_10025C110(a1, v4, v5, v6);
}

uint64_t sub_10025FB8C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10025FBCC()
{
  sub_10025BF6C(*(void *)(v0 + 16));
}

uint64_t sub_10025FBD8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_1002597E4(a1, v4, v5, v6);
}

uint64_t sub_10025FC8C(uint64_t a1)
{
  return sub_100325108(a1, *(void *)(v1 + 16));
}

uint64_t sub_10025FC94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1008026B8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10025FD00()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10025FD38()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100052588;
  return sub_10025A21C();
}

void sub_10025FDE4()
{
}

uint64_t sub_10025FE08()
{
  return swift_deallocObject();
}

void sub_10025FE18()
{
  v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_currentFilterOption] = 0;
  uint64_t v1 = OBJC_IVAR____TtC7Journal29JournalTimelineViewController_entryCollectionViewController;
  type metadata accessor for JournalEntryCollectionViewController();
  *(void *)&v0[v1] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v2 = OBJC_IVAR____TtC7Journal29JournalTimelineViewController_composeButtonsView;
  type metadata accessor for ComposeButtonsView();
  *(void *)&v0[v2] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  *(void *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_composeButtonsViewBottomConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___accessoryContainerView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___accessoryView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___accessoryViewForNavBar] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___syncSpinner] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___syncSpinnerForNavBar] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___filtersView] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___filtersViewForNavBar] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___searchButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___searchButtonForNavBar] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___overflowButton] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController____lazy_storage___overflowButtonForNavBar] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_tipsTask] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal29JournalTimelineViewController_insightsTask] = 0;
  swift_weakInit();

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_10025FFE8(uint64_t result)
{
  v1[OBJC_IVAR____TtC7Journal14AudioAssetView_waveformLoaded] = result;
  if (result)
  {
    uint64_t result = (uint64_t)[v1 frame];
    if (v2 > 0.0)
    {
      uint64_t result = (uint64_t)[v1 frame];
      if (v3 > 0.0)
      {
        char v4 = v1[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading];
        v1[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading] = 1;
        if ((v4 & 1) == 0)
        {
          uint64_t result = swift_unknownObjectWeakLoadStrong();
          if (result)
          {
            sub_100491AF4();
            return swift_unknownObjectRelease();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_10026009C()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal14AudioAssetView_audioAsset;
  double v2 = *(void **)((char *)v0 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioAsset);
  if (v2)
  {
    id v3 = v2;
    id v5 = sub_100379914(v3);
    uint64_t v6 = (void *)((char *)v0 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer);
    if (v5 != *(id *)((char *)v0 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer))
    {
      uint64_t v15 = v4;
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v8 = v6[1];
      uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v8 + 128);
      swift_unknownObjectRetain();
      v9(ObjectType, v8);
      swift_unknownObjectRelease();
      *uint64_t v6 = v5;
      v6[1] = v15;
    }

    swift_unknownObjectRelease();
  }
  uint64_t result = (*(uint64_t (**)(void))((swift_isaMask & *v0) + 0x1D8))();
  uint64_t v11 = *(void *)((char *)v0 + v1);
  if (v11)
  {
    uint64_t v12 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v13 = (void (**)())(v11 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
    uint64_t v14 = *(void *)(v11 + OBJC_IVAR____TtCC7Journal10Journaling5Asset_didUpdate);
    void *v13 = sub_100261D58;
    v13[1] = (void (*)())v12;
    return sub_10001ABB8(v14);
  }
  return result;
}

void sub_10026023C()
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = Strong;
    (*(void (**)(void))((swift_isaMask & *Strong) + 0x1D8))();
  }
}

char *sub_1002602C8(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = (uint64_t *)&v4[OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer];
  type metadata accessor for AudioPlayer();
  swift_allocObject();
  uint64_t v10 = v4;
  uint64_t v11 = sub_1002D7DAC();
  uint64_t v12 = sub_100261E3C(&qword_100805568, (void (*)(uint64_t))type metadata accessor for AudioPlayer);
  uint64_t *v9 = v11;
  v9[1] = v12;
  uint64_t v13 = OBJC_IVAR____TtC7Journal14AudioAssetView_waveformView;
  type metadata accessor for SelfSizingWaveformView();
  *(void *)&v10[v13] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  v10[OBJC_IVAR____TtC7Journal14AudioAssetView_enableScrubber] = 0;
  *(void *)&v10[OBJC_IVAR____TtC7Journal14AudioAssetView_audioManagerDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v10[OBJC_IVAR____TtC7Journal14AudioAssetView_waveformLoaded] = 0;
  *(void *)&v10[OBJC_IVAR____TtC7Journal14AudioAssetView_audioAsset] = 0;

  v21.receiver = v10;
  v21.super_class = (Class)type metadata accessor for AudioAssetView();
  uint64_t v14 = (char *)[super initWithFrame:a1, a2, a3, a4];
  uint64_t v15 = OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView;
  uint64_t v16 = *(void *)&v14[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView];
  uint64_t v17 = v14;
  [v17 addSubview:v16];
  id v18 = *(id *)&v14[v15];
  sub_1001DCF60(0.0);

  swift_bridgeObjectRelease();
  [v17 addSubview:*(void *)&v17[OBJC_IVAR____TtC7Journal14AudioAssetView_waveformView]];
  id v19 = [self defaultCenter];
  if (qword_1007F6BB8 != -1) {
    swift_once();
  }
  [v19 addObserver:v17 selector:"audioDidFinishPlaying:" name:qword_10083D1A0 object:0];

  return v17;
}

char *sub_10026052C(void *a1)
{
  id v3 = (uint64_t *)&v1[OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer];
  type metadata accessor for AudioPlayer();
  swift_allocObject();
  uint64_t v4 = v1;
  uint64_t v5 = sub_1002D7DAC();
  uint64_t v6 = sub_100261E3C(&qword_100805568, (void (*)(uint64_t))type metadata accessor for AudioPlayer);
  *id v3 = v5;
  v3[1] = v6;
  uint64_t v7 = OBJC_IVAR____TtC7Journal14AudioAssetView_waveformView;
  type metadata accessor for SelfSizingWaveformView();
  *(void *)&v4[v7] = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  v4[OBJC_IVAR____TtC7Journal14AudioAssetView_enableScrubber] = 0;
  *(void *)&v4[OBJC_IVAR____TtC7Journal14AudioAssetView_audioManagerDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  v4[OBJC_IVAR____TtC7Journal14AudioAssetView_waveformLoaded] = 0;
  *(void *)&v4[OBJC_IVAR____TtC7Journal14AudioAssetView_audioAsset] = 0;

  v16.receiver = v4;
  v16.super_class = (Class)type metadata accessor for AudioAssetView();
  uint64_t v8 = (char *)[super initWithCoder:a1];
  uint64_t v9 = v8;
  if (v8)
  {
    uint64_t v10 = OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView;
    uint64_t v11 = *(void *)&v8[OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView];
    uint64_t v12 = v8;
    [v12 addSubview:v11];
    id v13 = *(id *)&v9[v10];
    sub_1001DCF60(0.0);

    swift_bridgeObjectRelease();
    [v12 addSubview:*(void *)&v12[OBJC_IVAR____TtC7Journal14AudioAssetView_waveformView]];
    id v14 = [self defaultCenter];
    if (qword_1007F6BB8 != -1) {
      swift_once();
    }
    [v14 addObserver:v12 selector:"audioDidFinishPlaying:" name:qword_10083D1A0 object:0];
  }
  else
  {
    id v14 = a1;
  }

  return v9;
}

void sub_100260784()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView);
  double v2 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v1) + 0x58);
  uint64_t v3 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
  uint64_t v4 = v1;
  v2(5, v3);
}

void *sub_100260830()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioAsset);
  id v2 = v1;
  return v1;
}

id sub_100260860()
{
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for AudioAssetView();
  id result = [super layoutSubviews];
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC7Journal14AudioAssetView_waveformLoaded) == 1)
  {
    id result = [v0 frame];
    if (v2 > 0.0)
    {
      id result = [v0 frame];
      if (v3 > 0.0)
      {
        char v4 = *((unsigned char *)v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading);
        *((unsigned char *)v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading) = 1;
        if ((v4 & 1) == 0)
        {
          id result = (id)swift_unknownObjectWeakLoadStrong();
          if (result)
          {
            sub_100491AF4();
            return (id)swift_unknownObjectRelease();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_100260968()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioAsset);
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer);
  uint64_t v3 = *(void *)(v0 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer + 8);
  int v4 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal14AudioAssetView_enableScrubber);
  id v5 = v1;
  swift_unknownObjectRetain();
  sub_10026114C(v1, v2, v3, v4);

  swift_unknownObjectRelease();

  return sub_10025FFE8(1);
}

id sub_100260A18(uint64_t a1)
{
  return [*(id *)(a1 + OBJC_IVAR____TtC7Journal14AudioAssetView_waveformView) setAlpha:];
}

void sub_100260A30()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer + 8);
  uint64_t v3 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioAsset);
  if (v3)
  {
    *((void *)&v13 + 1) = _s10AudioAssetCMa(0);
    id v14 = &off_1007B7DC8;
    *(void *)&long long v12 = v3;
  }
  else
  {
    id v14 = 0;
    long long v12 = 0u;
    long long v13 = 0u;
  }
  uint64_t ObjectType = swift_getObjectType();
  swift_unknownObjectRetain();
  id v5 = v3;
  sub_10021A2D0((uint64_t)&v12, ObjectType, v2);
  swift_unknownObjectRelease();
  sub_10001457C((uint64_t)&v12, &qword_1007F9470);
  uint64_t v6 = *(void *)(v1 + 8);
  uint64_t v7 = swift_getObjectType();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 24);
  swift_unknownObjectRetain();
  LOBYTE(v6) = v8(v7, v6);
  swift_unknownObjectRelease();
  if ((v6 & 1) == 0)
  {
    uint64_t v9 = *(void *)(v1 + 8);
    uint64_t v10 = swift_getObjectType();
    uint64_t v11 = *(void (**)(uint64_t, uint64_t))(v9 + 120);
    swift_unknownObjectRetain();
    v11(v10, v9);
    swift_unknownObjectRelease();
  }
  sub_100260B80();
}

void sub_100260B80()
{
  void (*v11)(void *__return_ptr, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  double v17;
  NSString v18;
  id v19;
  NSString v20;
  void v21[3];
  uint64_t v22;
  uint64_t v23;
  uint64_t vars8;

  uint64_t v1 = v0;
  uint64_t v2 = &v0[OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer];
  uint64_t v3 = *(void *)&v0[OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer + 8];
  uint64_t ObjectType = swift_getObjectType();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 32);
  swift_unknownObjectRetain();
  LOBYTE(v3) = v5(ObjectType, v3);
  swift_unknownObjectRelease();
  if (v3)
  {
    if (qword_1007F7AB0 == -1) {
      goto LABEL_6;
    }
    goto LABEL_18;
  }
  uint64_t v6 = *((void *)v2 + 1);
  uint64_t v7 = swift_getObjectType();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 24);
  swift_unknownObjectRetain();
  LOBYTE(v6) = v8(v7, v6);
  swift_unknownObjectRelease();
  if (v6)
  {
    if (qword_1007F7AC8 == -1)
    {
LABEL_6:
      uint64_t v20 = String._bridgeToObjectiveC()();
      [v0 setAccessibilityValue:v20];

      return;
    }
LABEL_18:
    swift_once();
    goto LABEL_6;
  }
  uint64_t v9 = *((void *)v2 + 1);
  uint64_t v10 = swift_getObjectType();
  uint64_t v11 = *(void (**)(void *__return_ptr, uint64_t, uint64_t))(v9 + 88);
  swift_unknownObjectRetain();
  v11(v21, v10, v9);
  swift_unknownObjectRelease();
  long long v12 = v22;
  if (v22)
  {
    long long v13 = v23;
    sub_10002E0BC(v21, v22);
    id v14 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 40))(v12, v13);
    objc_super v16 = v15;
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v21);
    if ((v16 & 1) == 0)
    {
      uint64_t v17 = *(double *)&v14;
      if (qword_1007F7170 != -1)
      {
        id v19 = (id)v14;
        swift_once();
        uint64_t v17 = *(double *)&v14;
      }
      id v18 = [qword_100810AD8 stringFromTimeInterval:v17 + 0.5 v19];
      if (v18)
      {
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        id v18 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
      }
      [v1 setAccessibilityValue:v18];
    }
  }
  else
  {
    sub_10001457C((uint64_t)v21, &qword_1007F9470);
  }
}

uint64_t sub_100260E64()
{
  Notification.object.getter();
  if (!v7) {
    return sub_10001457C((uint64_t)v6, &qword_1007FAD50);
  }
  sub_100010218(&qword_100805560);
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    if (v5 == *(void *)(v0 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer)
      && (uint64_t v2 = v0 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioManagerDelegate, swift_unknownObjectWeakLoadStrong()))
    {
      uint64_t v3 = *(void *)(v2 + 8);
      uint64_t ObjectType = swift_getObjectType();
      (*(void (**)(uint64_t, uint64_t))(v3 + 8))(ObjectType, v3);
      swift_unknownObjectRelease();
      return swift_unknownObjectRelease();
    }
    else
    {
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

void sub_100261044()
{
  swift_unknownObjectRelease();

  sub_1000109BC(v0 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioManagerDelegate);
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioAsset);
}

id sub_1002610A4()
{
  return sub_100261958(type metadata accessor for AudioAssetView);
}

uint64_t type metadata accessor for AudioAssetView()
{
  return self;
}

id sub_10026114C(void *a1, uint64_t a2, uint64_t a3, int a4)
{
  LODWORD(v53) = a4;
  uint64_t v51 = a2;
  uint64_t v52 = a3;
  uint64_t v6 = sub_100010218(&qword_100805548);
  uint64_t v54 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v49 - v10;
  uint64_t v12 = sub_100010218(&qword_1007F9E38);
  __chkstk_darwin(v12 - 8);
  id v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = _s10AudioAssetC9AudioDataVMa(0);
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  id v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_100010218((uint64_t *)&unk_100800A60);
  *(void *)&double v20 = __chkstk_darwin(v19 - 8).n128_u64[0];
  uint64_t v22 = (char *)&v49 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1) {
    goto LABEL_7;
  }
  uint64_t v55 = v4;
  id v23 = a1;
  sub_1003B2D58(v22);
  uint64_t v24 = type metadata accessor for URL();
  int v25 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v22, 1, v24);
  sub_10001457C((uint64_t)v22, (uint64_t *)&unk_100800A60);
  if (v25 == 1) {
    goto LABEL_3;
  }
  sub_1003F2894((uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {

    sub_10001457C((uint64_t)v14, &qword_1007F9E38);
    goto LABEL_6;
  }
  uint64_t v27 = sub_100261DD4((uint64_t)v14, (uint64_t)v18, _s10AudioAssetC9AudioDataVMa);
  uint64_t v28 = *((void *)v18 + 2);
  if (!v28)
  {
    sub_10010F294((uint64_t)v18);
LABEL_3:

LABEL_6:
    int v4 = v55;
LABEL_7:
    id result = *(id *)&v4[OBJC_IVAR____TtC7Journal22SelfSizingWaveformView_waveformContainerView];
    if (result) {
      return [result setHidden:1 v20];
    }
    return result;
  }
  int64_t v29 = *(void *)(v28 + 16);
  Swift::String v30 = _swiftEmptyArrayStorage;
  if (v29)
  {
    uint64_t v50 = v11;
    v56[0] = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_100095C00(0, v29, 0);
    uint64_t v31 = 0;
    Swift::String v30 = (double *)v56[0];
    unint64_t v32 = *(void *)(v56[0] + 16);
    do
    {
      double v33 = *(double *)(v28 + 8 * v31 + 32);
      v56[0] = (uint64_t)v30;
      unint64_t v34 = *((void *)v30 + 3);
      if (v32 >= v34 >> 1)
      {
        sub_100095C00(v34 > 1, v32 + 1, 1);
        Swift::String v30 = (double *)v56[0];
      }
      ++v31;
      *((void *)v30 + 2) = v32 + 1;
      v30[v32++ + 4] = v33;
    }
    while (v29 != v31);
    uint64_t v27 = swift_bridgeObjectRelease();
    uint64_t v11 = v50;
  }
  __chkstk_darwin(v27);
  uint64_t v35 = v52;
  *(&v49 - 4) = v51;
  *(&v49 - 3) = v35;
  *((unsigned char *)&v49 - 16) = v53 & 1;
  *(&v49 - 1) = (uint64_t)v30;
  type metadata accessor for StaticWaveformView();
  sub_100261E3C(&qword_100805550, (void (*)(uint64_t))type metadata accessor for StaticWaveformView);
  UIHostingConfiguration<>.init(content:)();
  swift_bridgeObjectRelease();
  static Edge.Set.all.getter();
  UIHostingConfiguration.margins(_:_:)();
  uint64_t v36 = v54;
  uint64_t v53 = *(void (**)(char *, uint64_t))(v54 + 8);
  v53(v8, v6);
  uint64_t v37 = v55;
  id v38 = &v55[OBJC_IVAR____TtC7Journal22SelfSizingWaveformView_waveformContainerView];
  uint64_t v39 = *(void **)&v55[OBJC_IVAR____TtC7Journal22SelfSizingWaveformView_waveformContainerView];
  if (v39)
  {
    uint64_t v40 = v11;
    swift_getObjectType();
    v56[3] = v6;
    v56[4] = sub_100261D70();
    id v41 = sub_100062E54(v56);
    (*(void (**)(uint64_t *, char *, uint64_t))(v36 + 16))(v41, v11, v6);
    id v42 = v39;
    dispatch thunk of UIContentView.configuration.setter();
    [v42 setHidden:0];
  }
  else
  {
    id v43 = (void *)UIHostingConfiguration.makeContentView()();
    uint64_t v45 = v44;
    [v37 addSubview:v43];
    uint64_t v40 = v11;
    id v46 = v43;
    sub_1001DCF60(0.0);

    swift_bridgeObjectRelease();
    LODWORD(v47) = 1112014848;
    [v46 setContentHuggingPriority:0 forAxis:v47];
    LODWORD(v48) = 1112014848;
    [v46 setContentHuggingPriority:1 forAxis:v48];
    id v42 = *(id *)v38;
    *(void *)id v38 = v46;
    *((void *)v38 + 1) = v45;
  }

  v53(v40, v6);
  return (id)sub_10010F294((uint64_t)v18);
}

uint64_t sub_100261738@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = type metadata accessor for StaticWaveformView();
  uint64_t v11 = (int *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (uint64_t *)((char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v15 = *(void *)(a2 + 8);
  uint64_t v19 = ObjectType;
  uint64_t v20 = v15;
  *(void *)&long long v18 = a1;
  uint64_t *v13 = swift_getKeyPath();
  sub_100010218((uint64_t *)&unk_1008156B0);
  swift_storeEnumTagMultiPayload();
  sub_10001B3BC(&v18, (uint64_t)v13 + v11[9]);
  *((unsigned char *)v13 + v11[7]) = a3;
  *(uint64_t *)((char *)v13 + v11[8]) = a4;
  sub_100261DD4((uint64_t)v13, a5, (uint64_t (*)(void))type metadata accessor for StaticWaveformView);
  swift_unknownObjectRetain();
  return swift_bridgeObjectRetain();
}

id sub_100261940()
{
  return sub_100261958(type metadata accessor for SelfSizingWaveformView);
}

id sub_100261958(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for SelfSizingWaveformView()
{
  return self;
}

uint64_t sub_1002619C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100261A5C, v6, v5);
}

uint64_t sub_100261A5C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  uint64_t v2 = *(void *)(v1 + OBJC_IVAR____TtC7Journal14AudioAssetView_audioPlayer + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t))(v2 + 128);
  swift_unknownObjectRetain();
  v4(ObjectType, v2);
  swift_unknownObjectRelease();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100261B14()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  objc_super v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  type metadata accessor for MainActor();
  id v5 = v0;
  uint64_t v6 = static MainActor.shared.getter();
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v6;
  v7[3] = &protocol witness table for MainActor;
  v7[4] = v5;
  sub_100328A60((uint64_t)v3, (uint64_t)&unk_100805540, (uint64_t)v7);
  return swift_release();
}

uint64_t sub_100261C2C()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100261C6C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_1002619C4(a1, v4, v5, v6);
}

uint64_t sub_100261D20()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100261D58()
{
}

uint64_t sub_100261D60@<X0>(uint64_t a1@<X8>)
{
  return sub_100261738(*(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned char *)(v1 + 32), *(void *)(v1 + 40), a1);
}

unint64_t sub_100261D70()
{
  unint64_t result = qword_100805558;
  if (!qword_100805558)
  {
    sub_100014440(&qword_100805548);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805558);
  }
  return result;
}

uint64_t sub_100261DD4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_100261E3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

double sub_100261E84()
{
  if (qword_1007F68F0 != -1) {
    swift_once();
  }
  double result = *(double *)&xmmword_10083CE30 + 18.0;
  *(double *)&qword_100805570 = *(double *)&xmmword_10083CE30 + 18.0;
  return result;
}

uint64_t sub_100261EE0()
{
  id v0 = [objc_allocWithZone((Class)UIColor) initWithRed:0.450980392 green:0.435294118 blue:0.674509804 alpha:1.0];
  id v1 = [objc_allocWithZone((Class)UIColor) initWithRed:0.349019608 green:0.333333333 blue:0.57254902 alpha:1.0];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0;
  id v3 = objc_allocWithZone((Class)UIColor);
  void v9[4] = sub_10026415C;
  v9[5] = v2;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1002640B4;
  v9[3] = &unk_1007A14C8;
  uint64_t v4 = _Block_copy(v9);
  id v5 = v1;
  id v6 = v0;
  id v7 = [v3 initWithDynamicProvider:v4];
  _Block_release(v4);

  uint64_t result = swift_release();
  qword_100805578 = (uint64_t)v7;
  return result;
}

uint64_t sub_100262050()
{
  id v0 = [objc_allocWithZone((Class)UIColor) initWithRed:0.866666667 green:0.352941176 blue:0.345098039 alpha:1.0];
  id v1 = [objc_allocWithZone((Class)UIColor) initWithRed:0.764705882 green:0.250980392 blue:0.243137255 alpha:1.0];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0;
  id v3 = objc_allocWithZone((Class)UIColor);
  void v9[4] = sub_1002642B8;
  v9[5] = v2;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1002640B4;
  v9[3] = &unk_1007A1518;
  uint64_t v4 = _Block_copy(v9);
  id v5 = v1;
  id v6 = v0;
  id v7 = [v3 initWithDynamicProvider:v4];
  _Block_release(v4);

  uint64_t result = swift_release();
  qword_100805580 = (uint64_t)v7;
  return result;
}

uint64_t sub_1002621C8()
{
  id v0 = [objc_allocWithZone((Class)UIColor) initWithRed:0.537254902 green:0.611764706 blue:0.968627451 alpha:1.0];
  id v1 = [objc_allocWithZone((Class)UIColor) initWithRed:0.435294118 green:0.509803922 blue:0.866666667 alpha:1.0];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0;
  id v3 = objc_allocWithZone((Class)UIColor);
  void v9[4] = sub_1002642B8;
  v9[5] = v2;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1002640B4;
  v9[3] = &unk_1007A1568;
  uint64_t v4 = _Block_copy(v9);
  id v5 = v1;
  id v6 = v0;
  id v7 = [v3 initWithDynamicProvider:v4];
  _Block_release(v4);

  uint64_t result = swift_release();
  qword_100805588 = (uint64_t)v7;
  return result;
}

uint64_t sub_100262334()
{
  id v0 = [objc_allocWithZone((Class)UIColor) initWithRed:0.854901961 green:0.533333333 blue:0.533333333 alpha:1.0];
  id v1 = [objc_allocWithZone((Class)UIColor) initWithRed:0.752941176 green:0.431372549 blue:0.431372549 alpha:1.0];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0;
  id v3 = objc_allocWithZone((Class)UIColor);
  void v9[4] = sub_1002642B8;
  v9[5] = v2;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1002640B4;
  v9[3] = &unk_1007A15B8;
  uint64_t v4 = _Block_copy(v9);
  id v5 = v1;
  id v6 = v0;
  id v7 = [v3 initWithDynamicProvider:v4];
  _Block_release(v4);

  uint64_t result = swift_release();
  qword_100805590 = (uint64_t)v7;
  return result;
}

uint64_t sub_1002624A0()
{
  id v0 = [objc_allocWithZone((Class)UIColor) initWithRed:0.568627451 green:0.31372549 blue:0.447058824 alpha:1.0];
  id v1 = [objc_allocWithZone((Class)UIColor) initWithRed:0.466666667 green:0.211764706 blue:0.345098039 alpha:1.0];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0;
  id v3 = objc_allocWithZone((Class)UIColor);
  void v9[4] = sub_1002642B8;
  v9[5] = v2;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1002640B4;
  v9[3] = &unk_1007A1608;
  uint64_t v4 = _Block_copy(v9);
  id v5 = v1;
  id v6 = v0;
  id v7 = [v3 initWithDynamicProvider:v4];
  _Block_release(v4);

  uint64_t result = swift_release();
  qword_100805598 = (uint64_t)v7;
  return result;
}

uint64_t sub_10026260C()
{
  id v0 = [objc_allocWithZone((Class)UIColor) initWithRed:0.129411765 green:0.141176471 blue:0.219607843 alpha:1.0];
  id v1 = [objc_allocWithZone((Class)UIColor) initWithRed:0.231372549 green:0.243137255 blue:0.321568627 alpha:1.0];
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0;
  id v3 = objc_allocWithZone((Class)UIColor);
  void v9[4] = sub_1002642B8;
  v9[5] = v2;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 1107296256;
  v9[2] = sub_1002640B4;
  v9[3] = &unk_1007A1658;
  uint64_t v4 = _Block_copy(v9);
  id v5 = v1;
  id v6 = v0;
  id v7 = [v3 initWithDynamicProvider:v4];
  _Block_release(v4);

  uint64_t result = swift_release();
  qword_1008055A0 = (uint64_t)v7;
  return result;
}

uint64_t sub_100262780()
{
  id v0 = objc_allocWithZone((Class)UIColor);
  v4[4] = sub_100262848;
  v4[5] = 0;
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 1107296256;
  v4[2] = sub_1002640B4;
  v4[3] = &unk_1007A1680;
  id v1 = _Block_copy(v4);
  id v2 = [v0 initWithDynamicProvider:v1];
  _Block_release(v1);
  uint64_t result = swift_release();
  qword_1008055A8 = (uint64_t)v2;
  return result;
}

id sub_100262848(void *a1)
{
  id v1 = [a1 accessibilityContrast];
  id result = [self whiteColor];
  id v3 = result;
  if (v1 != (id)1)
  {
    id v4 = [result colorWithAlphaComponent:1.0];

    return v4;
  }
  return result;
}

id sub_1002628D0()
{
  id result = [objc_allocWithZone((Class)UIColor) initWithRed:0.952941176 green:0.882352941 blue:0.847058824 alpha:1.0];
  qword_1008055B0 = (uint64_t)result;
  return result;
}

void sub_100262928(char a1)
{
  id v3 = *(void **)(v1 + OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_promptLabelTrailingConstraint);
  if (v3)
  {
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_isEditing) == 1)
    {
      uint64_t v4 = qword_1007F6C38;
      id v5 = v3;
      if (v4 != -1) {
        swift_once();
      }
      double v6 = -*(double *)&qword_100805570;
    }
    else
    {
      id v7 = v3;
      double v6 = -12.0;
    }
    [v3 setConstant:v6];
  }
  [*(id *)(v1 + OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_promptLabel) setAdjustsFontForContentSizeCategory:1];
  sub_100262EF8();
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_isEditing) != (a1 & 1))
  {
    if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_isEditing))
    {
      sub_100263A2C();
    }
    else
    {
      uint64_t v8 = OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_xPlatterView;
      uint64_t v9 = *(void **)(v1 + OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_xPlatterView);
      if (v9)
      {
        [v9 removeFromSuperview];
        uint64_t v9 = *(void **)(v1 + v8);
      }
      *(void *)(v1 + v8) = 0;
    }
  }
}

id sub_100262A80(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_promptLabel;
  id v10 = objc_allocWithZone((Class)UILabel);
  uint64_t v11 = v4;
  *(void *)&v4[v9] = [v10 init];
  *(void *)&v11[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_promptLabelTrailingConstraint] = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_xPlatterView] = 0;
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)&v11[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_outerCornerRadius] = _Q0;
  uint64_t v17 = &v11[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_deletePrompt];
  *(void *)uint64_t v17 = AudioRecordingActivityState.hash(into:);
  *((void *)v17 + 1) = 0;
  *(void *)&v11[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_journalEntry] = 0;
  v11[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_isEditing] = 0;

  v20.receiver = v11;
  v20.super_class = (Class)type metadata accessor for CanvasReflectionPromptView();
  id v18 = [super initWithFrame:a1, a2, a3, a4];
  [v18 setClipsToBounds:1];
  sub_1002631E8();

  return v18;
}

void sub_100262BFC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_journalEntry];
  if (v2)
  {
    swift_retain();
    id v3 = &stru_1007D7000;
    id v4 = [v1 layer];
    if (qword_1007F7C98 != -1) {
      swift_once();
    }
    long long v27 = xmmword_10083E980;
    long long v28 = *(_OWORD *)&qword_10083E990;
    long long v29 = xmmword_10083E9A0;
    long long v30 = *(_OWORD *)&qword_10083E9B0;
    [v4 setCornerRadii:&v27];

    if ((*(unsigned char *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_showPhotoMemoryBanner) & 1) == 0)
    {
      id v5 = [v1 layer];
      double v6 = &v1[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_outerCornerRadius];
      uint64_t v7 = *(void *)&v1[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_outerCornerRadius];
      uint64_t v8 = *(void *)&v1[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_outerCornerRadius + 8];
      [v5 cornerRadii];
      *(void *)&long long v30 = v7;
      *((void *)&v30 + 1) = v8;
      [v5 setCornerRadii:&v27];

      id v9 = [v1 layer];
      uint64_t v10 = *(void *)v6;
      uint64_t v11 = *((void *)v6 + 1);
      [v9 cornerRadii];
      *(void *)&long long v29 = v10;
      *((void *)&v29 + 1) = v11;
      [v9 setCornerRadii:&v27];
    }
    uint64_t v12 = (void *)sub_100339674();
    if (v12)
    {
      sub_10033AA5C(v12);

      if ((sub_10018AF68() & 1) == 0) {
        goto LABEL_12;
      }
    }
    id v14 = (void *)sub_100339674();
    if (v14)
    {
      sub_10033AA5C(v14);

      uint64_t v16 = (unint64_t *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
      swift_beginAccess();
      unint64_t v17 = *v16;
      if (v17 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v25 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
        uint64_t v26 = v25;
        id v3 = &stru_1007D7000;
        if (v26) {
          goto LABEL_13;
        }
      }
      else if (*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_13;
      }
      if ((sub_10018B188() & 1) == 0)
      {
LABEL_12:
        id v18 = [v1 (SEL)v3[78].imp];
        uint64_t v19 = &v1[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_outerCornerRadius];
        uint64_t v20 = *(void *)&v1[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_outerCornerRadius];
        uint64_t v21 = *(void *)&v1[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_outerCornerRadius + 8];
        [v18 cornerRadii];
        *(void *)&long long v27 = v20;
        *((void *)&v27 + 1) = v21;
        [v18 setCornerRadii:&v27];

        id v22 = [v1 (SEL)v3[78].imp];
        uint64_t v23 = *(void *)v19;
        uint64_t v24 = *((void *)v19 + 1);
        [v22 cornerRadii];
        *(void *)&long long v28 = v23;
        *((void *)&v28 + 1) = v24;
        [v22 setCornerRadii:&v27];
      }
    }
LABEL_13:
    swift_release();
  }
}

void sub_100262EF8()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_isEditing) == 1)
  {
    if (qword_1007F79C0 != -1) {
      swift_once();
    }
    uint64_t v1 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v2 = objc_allocWithZone((Class)UIAccessibilityCustomAction);
    swift_bridgeObjectRetain();
    swift_retain();
    NSString v3 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    v11[4] = sub_10026417C;
    v11[5] = v1;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    void v11[2] = sub_1005D2A64;
    v11[3] = &unk_1007A16A8;
    id v4 = _Block_copy(v11);
    id v5 = [v2 initWithName:v3 actionHandler:v4];

    _Block_release(v4);
    swift_release();
    swift_release();
    double v6 = *(void **)(v0 + OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_promptLabel);
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1006D6D00;
    *(void *)(v7 + 32) = v5;
    v11[0] = v7;
    specialized Array._endMutation()();
    sub_10001B284(0, (unint64_t *)&unk_10080C360);
    id v8 = v5;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v6 setAccessibilityCustomActions:isa];
  }
  else
  {
    uint64_t v10 = *(void **)(v0 + OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_promptLabel);
    [v10 setAccessibilityCustomActions:0];
  }
}

BOOL sub_100263160()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  uint64_t v1 = (void *)Strong;
  if (Strong)
  {
    id v2 = *(void (**)(uint64_t))(Strong + OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_deletePrompt);
    uint64_t v3 = swift_retain();
    v2(v3);
    swift_release();
  }
  return v1 != 0;
}

void sub_1002631E8()
{
  uint64_t v1 = v0;
  id v2 = *(void **)&v0[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_promptLabel];
  [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v2 setNumberOfLines:0];
  [v2 setLineBreakMode:0];
  if (qword_1007F7218 != -1) {
    swift_once();
  }
  [v2 setFont:qword_10083D7E0];
  [v1 addSubview:v2];
  id v3 = [v2 superview];
  if (v3)
  {
    id v4 = v3;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v5 = [v2 leadingAnchor];
    id v6 = [v4 leadingAnchor];
    id v7 = [v5 constraintEqualToAnchor:v6];

    [v7 setConstant:12.0];
    if (v7)
    {
      id v8 = v7;
      [v8 setActive:1];
    }
  }
  id v9 = [v2 superview];
  if (v9)
  {
    uint64_t v10 = v9;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v11 = [v2 topAnchor];
    id v12 = [v10 topAnchor];
    id v13 = [v11 constraintEqualToAnchor:v12];

    [v13 setConstant:12.0];
    if (v13)
    {
      id v14 = v13;
      [v14 setActive:1];
    }
  }

  id v15 = [v2 superview];
  if (v15)
  {
    uint64_t v16 = v15;
    [v2 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v17 = [v2 trailingAnchor];
    id v18 = [v16 trailingAnchor];
    id v19 = [v17 constraintEqualToAnchor:v18];

    [v19 setConstant:-12.0];
    if (v19)
    {
      id v20 = v19;
      [v20 setActive:1];
    }
  }
  else
  {
    id v19 = 0;
  }
  uint64_t v21 = *(void **)&v1[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_promptLabelTrailingConstraint];
  *(void *)&v1[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_promptLabelTrailingConstraint] = v19;

  sub_100262EF8();
}

void sub_100263548()
{
  if (*(void *)&v0[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_journalEntry])
  {
    uint64_t v1 = v0;
    swift_retain();
    id v2 = (void *)sub_100339674();
    if (v2)
    {
      uint64_t v3 = sub_10033AA5C(v2);
      char v5 = v4;
      id v7 = v6;
      swift_release();
      if (qword_1007F6C70 != -1) {
        swift_once();
      }
      if (v5)
      {
        switch(v3)
        {
          case 1:
            uint64_t v9 = qword_1007F6C68;
            id v10 = (id)qword_1008055A8;
            if (v9 != -1) {
              swift_once();
            }
            [v1 setBackgroundColor:qword_1008055A0];
            if (qword_1007F6C78 != -1) {
              swift_once();
            }
            id v8 = (id)qword_1008055B0;

            break;
          case 2:
            uint64_t v11 = qword_1007F6C48;
            id v8 = (id)qword_1008055A8;
            if (v11 != -1) {
              swift_once();
            }
            uint64_t v12 = qword_100805580;
            goto LABEL_31;
          case 3:
            uint64_t v13 = qword_1007F6C58;
            id v8 = (id)qword_1008055A8;
            if (v13 != -1) {
              swift_once();
            }
            uint64_t v12 = qword_100805590;
            goto LABEL_31;
          case 4:
            uint64_t v14 = qword_1007F6C50;
            id v8 = (id)qword_1008055A8;
            if (v14 != -1) {
              swift_once();
            }
            uint64_t v12 = qword_100805588;
            goto LABEL_31;
          case 5:
            uint64_t v15 = qword_1007F6C40;
            id v8 = (id)qword_1008055A8;
            if (v15 != -1) {
              swift_once();
            }
            uint64_t v12 = qword_100805578;
            goto LABEL_31;
          case 6:
            uint64_t v16 = qword_1007F6C60;
            id v8 = (id)qword_1008055A8;
            if (v16 != -1) {
              swift_once();
            }
            uint64_t v12 = qword_100805598;
LABEL_31:
            [v1 setBackgroundColor:v12];
            break;
          default:
            goto LABEL_6;
        }
      }
      else
      {
LABEL_6:
        id v8 = (id)qword_1008055A8;
      }
      if (v7)
      {
        id v17 = [v7 string];
        uint64_t v18 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v20 = v19;

        uint64_t v21 = HIBYTE(v20) & 0xF;
        if ((v20 & 0x2000000000000000) == 0) {
          uint64_t v21 = v18 & 0xFFFFFFFFFFFFLL;
        }
        if (v21)
        {
          sub_100010218(&qword_100802498);
          uint64_t inited = swift_initStackObject();
          *(_OWORD *)(inited + 16) = xmmword_1006D6280;
          *(void *)(inited + 32) = NSForegroundColorAttributeName;
          *(void *)(inited + 64) = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
          *(void *)(inited + 40) = v8;
          swift_bridgeObjectRetain();
          uint64_t v23 = NSForegroundColorAttributeName;
          id v24 = v8;
          sub_100396DBC(inited);
          id v25 = objc_allocWithZone((Class)NSMutableAttributedString);
          NSString v26 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          type metadata accessor for Key(0);
          sub_10002103C();
          Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v28 = [v25 initWithString:v26 attributes:isa];

          [*(id *)&v1[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_promptLabel] setAttributedText:v28];
          swift_bridgeObjectRelease();

          long long v29 = *(void **)&v1[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_xPlatterView];
          if (v29) {
            [v29 setAccessibilityElementsHidden:0];
          }
LABEL_41:
          sub_100262BFC();

          return;
        }
        swift_bridgeObjectRelease();
      }
      long long v30 = *(void **)&v1[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_xPlatterView];
      if (v30) {
        [v30 setAccessibilityElementsHidden:1];
      }
      goto LABEL_41;
    }
    swift_release();
  }
}

void sub_100263A2C()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_xPlatterView;
  if (*(void *)&v0[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_xPlatterView]) {
    return;
  }
  type metadata accessor for CanvasAssetDeleteView();
  id v2 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  uint64_t v3 = *(void **)&v0[v1];
  *(void *)&v0[v1] = v2;

  char v4 = *(void **)&v0[v1];
  if (!v4) {
    return;
  }
  char v5 = v4;
  [v0 addSubview:v5];
  if (qword_1007F70D8 != -1) {
    swift_once();
  }
  double v6 = *(double *)&xmmword_10083D680;
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v7 = [v5 widthAnchor];
  id v8 = [v7 constraintEqualToConstant:v6];

  [v8 setActive:1];
  double v9 = *((double *)&xmmword_10083D680 + 1);
  [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v10 = [v5 heightAnchor];
  id v11 = [v10 constraintEqualToConstant:v9];

  [v11 setActive:1];
  id v12 = [v5 superview];
  uint64_t v13 = &selRef_drawMapRect_zoomScale_inContext_;
  if (v12)
  {
    uint64_t v14 = v12;
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v15 = [v5 topAnchor];
    id v16 = [v14 topAnchor];
    id v17 = [v15 constraintEqualToAnchor:v16];

    uint64_t v13 = &selRef_drawMapRect_zoomScale_inContext_;
    [v17 setConstant:0.0];
    id v18 = v17;
    [v18 setActive:1];
  }
  id v19 = [v5 superview];
  if (v19)
  {
    unint64_t v20 = v19;
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    uint64_t v21 = v13;
    id v22 = [v5 trailingAnchor];
    id v23 = [v20 trailingAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    [v24 v21[86]:0.0];
    id v25 = v24;
    [v25 setActive:1];
  }
  uint64_t v26 = swift_allocObject();
  swift_unknownObjectWeakInit();
  long long v27 = (uint64_t (**)())&v5[OBJC_IVAR____TtC7Journal21CanvasAssetDeleteView_tapCompletion];
  *long long v27 = sub_1002640AC;
  v27[1] = (uint64_t (*)())v26;
  swift_release();
  uint64_t v28 = qword_1007F79F0;
  id v41 = v5;
  if (v28 != -1) {
    swift_once();
  }
  NSString v29 = String._bridgeToObjectiveC()();
  [v41 setAccessibilityLabel:v29];

  if (*(void *)&v0[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_journalEntry])
  {
    long long v30 = v41;
    swift_retain();
    uint64_t v31 = (void *)sub_100339674();
    if (v31)
    {
      sub_10033AA5C(v31);
      double v33 = v32;
      swift_release();
      if (v33)
      {
        id v34 = [v33 string];

        uint64_t v35 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v37 = v36;

        swift_bridgeObjectRelease();
        uint64_t v38 = HIBYTE(v37) & 0xF;
        if ((v37 & 0x2000000000000000) == 0) {
          uint64_t v38 = v35 & 0xFFFFFFFFFFFFLL;
        }
        BOOL v39 = v38 == 0;
        goto LABEL_21;
      }
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    uint64_t v40 = v41;
  }
  BOOL v39 = 1;
LABEL_21:
  [v41 setAccessibilityElementsHidden:v39];
}

uint64_t sub_100263F1C()
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)result;
    id v2 = *(void (**)(void))(result + OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_deletePrompt);
    swift_retain();

    v2();
    return swift_release();
  }
  return result;
}

id sub_100263F9C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CanvasReflectionPromptView();
  return [super dealloc];
}

uint64_t type metadata accessor for CanvasReflectionPromptView()
{
  return self;
}

uint64_t sub_100264074()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002640AC()
{
  return sub_100263F1C();
}

id sub_1002640B4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(uint64_t (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  char v5 = (void *)v3();
  swift_release();

  return v5;
}

uint64_t sub_10026411C()
{
  return swift_deallocObject();
}

id sub_10026415C(void *a1)
{
  return sub_100256AAC(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100264164(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100264174()
{
  return swift_release();
}

BOOL sub_10026417C()
{
  return sub_100263160();
}

void sub_100264184()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_promptLabel;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UILabel) init];
  *(void *)&v0[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_promptLabelTrailingConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_xPlatterView] = 0;
  __asm { FMOV            V0.2D, #8.0 }
  *(_OWORD *)&v0[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_outerCornerRadius] = _Q0;
  id v7 = &v0[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_deletePrompt];
  *id v7 = AudioRecordingActivityState.hash(into:);
  v7[1] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_journalEntry] = 0;
  v0[OBJC_IVAR____TtC7Journal26CanvasReflectionPromptView_isEditing] = 0;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1002642BC(void *a1)
{
  id v3 = [a1 view];
  if (!v3) {
    return;
  }
  id v30 = v3;
  [a1 translationInView:];
  double v5 = v4;
  double v7 = v6;
  double v8 = sqrt(v4 * v4 + v6 * v6);
  id v9 = [self mainScreen];
  [v9 bounds];
  double v11 = v10;

  if (v11 * 0.2 >= v8) {
    double v12 = v8;
  }
  else {
    double v12 = v11 * 0.2;
  }
  double v13 = v12 / (v11 * 0.2);
  id v14 = [a1 state];
  if (v14 == (id)3)
  {
    int v22 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_dismissIsCanceling);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    id v24 = (char *)Strong;
    if (v22 != 1 || v13 >= 1.0)
    {
      if (Strong)
      {
        uint64_t v28 = swift_allocObject();
        swift_unknownObjectWeakInit();
        aBlock[4] = sub_100264F8C;
        void aBlock[5] = v28;
        aBlock[0] = _NSConcreteStackBlock;
        aBlock[1] = 1107296256;
        aBlock[2] = sub_10017D530;
        aBlock[3] = &unk_1007A16F8;
        NSString v29 = _Block_copy(aBlock);
        swift_release();
        [v24 dismissViewControllerAnimated:1 completion:v29];
        _Block_release(v29);
        [*(id *)&v24[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_interactiveCoordinator] finishInteractiveTransition];
        v24[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_isInteractivelyDismissing] = 0;
        swift_unknownObjectRelease();

        return;
      }
      goto LABEL_15;
    }
    if (Strong)
    {
      sub_1004E598C(v30, *(double *)(v1 + OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_panningViewOriginalFrame), *(double *)(v1 + OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_panningViewOriginalFrame + 8), *(double *)(v1 + OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_panningViewOriginalFrame + 16), *(double *)(v1 + OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_panningViewOriginalFrame + 24));
      v24[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_isInteractivelyDismissing] = 0;
      goto LABEL_14;
    }
LABEL_15:

    return;
  }
  if (v14 == (id)2)
  {
    [v30 setFrame:v5 + *(double *)(v1 + OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_panningViewOriginalFrame), v7+ *(double *)(v1 + OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_panningViewOriginalFrame + 8), *(double *)(v1 + OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_panningViewOriginalFrame + 16), *(double *)(v1 + OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_panningViewOriginalFrame + 24)];
    uint64_t v25 = OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_previousDismissPercentComplete;
    *(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_dismissIsCanceling) = v13 <= *(double *)(v1 + OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_previousDismissPercentComplete);
    uint64_t v26 = swift_unknownObjectWeakLoadStrong();
    if (v26)
    {
      [*(id *)(v26 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_interactiveCoordinator) updateInteractiveTransition:v13];
      swift_unknownObjectRelease();
    }

    *(double *)(v1 + v25) = v13;
  }
  else
  {
    if (v14 == (id)1)
    {
      [v30 frame];
      id v15 = (void *)(v1 + OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_panningViewOriginalFrame);
      *id v15 = v16;
      v15[1] = v17;
      _OWORD v15[2] = v18;
      v15[3] = v19;
      unint64_t v20 = (unsigned char *)swift_unknownObjectWeakLoadStrong();
      if (v20)
      {
        uint64_t v21 = v20;
        v20[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_isInteractivelyDismissing] = 1;
        [v20 dismissViewControllerAnimated:1 completion:0];
        [*(id *)&v21[OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_interactiveCoordinator] updateInteractiveTransition:v13];
LABEL_14:
        swift_unknownObjectRelease();
        goto LABEL_15;
      }
      goto LABEL_15;
    }
    uint64_t v27 = swift_unknownObjectWeakLoadStrong();

    if (v27)
    {
      *(unsigned char *)(v27 + OBJC_IVAR____TtC7Journal34FullScreenCollectionViewController_isInteractivelyDismissing) = 0;
      swift_unknownObjectRelease();
    }
  }
}

id sub_100264744(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_dismissalDelegate + 8] = 0;
  swift_unknownObjectWeakInit();
  double v5 = &v2[OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_panningViewOriginalFrame];
  *double v5 = 0u;
  v5[1] = 0u;
  v2[OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_dismissIsCanceling] = 0;
  *(void *)&v2[OBJC_IVAR____TtC7Journal37InteractiveDismissalGestureRecognizer_previousDismissPercentComplete] = 0;
  sub_1001C71EC(a1, (uint64_t)v17);
  uint64_t v6 = v18;
  if (v18)
  {
    double v7 = sub_10002E0BC(v17, v18);
    uint64_t v8 = *(void *)(v6 - 8);
    __n128 v9 = __chkstk_darwin(v7);
    double v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, __n128))(v8 + 16))(v11, v9);
    uint64_t v12 = _bridgeAnythingToObjectiveC<A>(_:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v6);
    _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v17);
  }
  else
  {
    uint64_t v12 = 0;
  }
  double v13 = (objc_class *)type metadata accessor for InteractiveDismissalGestureRecognizer();
  v16.receiver = v2;
  v16.super_class = v13;
  id v14 = [super initWithTarget:v12 action:a2];
  swift_unknownObjectRelease();
  sub_10001B418(a1);
  return v14;
}

id sub_10026495C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for InteractiveDismissalGestureRecognizer();
  return [super dealloc];
}

uint64_t type metadata accessor for InteractiveDismissalGestureRecognizer()
{
  return self;
}

uint64_t sub_100264A74(void *a1)
{
  id v1 = [a1 gestureRecognizers];
  if (v1)
  {
    objc_super v2 = v1;
    sub_100073BE0();
    unint64_t v3 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v3 >> 62) {
      goto LABEL_16;
    }
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    while (v4)
    {
      uint64_t v5 = 4;
      while (1)
      {
        id v6 = (v3 & 0xC000000000000001) != 0
           ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)()
           : *(id *)(v3 + 8 * v5);
        double v7 = v6;
        uint64_t v8 = v5 - 3;
        if (__OFADD__(v5 - 4, 1)) {
          break;
        }
        type metadata accessor for InteractiveDismissalGestureRecognizer();
        uint64_t v9 = swift_dynamicCastClass();
        if (v9)
        {
          uint64_t v10 = v9;
          swift_bridgeObjectRelease();
          return v10;
        }

        ++v5;
        if (v8 == v4) {
          goto LABEL_11;
        }
      }
      __break(1u);
LABEL_16:
      swift_bridgeObjectRetain();
      uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
LABEL_11:
    swift_bridgeObjectRelease();
  }
  return 0;
}

void sub_100264BA0(void *a1)
{
  type metadata accessor for InteractiveDismissalGestureRecognizer();
  uint64_t v2 = swift_dynamicCastClass();
  if (!v2)
  {
LABEL_7:
    self;
    uint64_t v9 = swift_dynamicCastObjCClass();
    if (v9)
    {
      uint64_t v10 = (void *)v9;
      id v11 = a1;
      id v12 = [v10 view];
      [v10 translationInView:v12];
      double v14 = v13;

      if (v14 > 0.0) {
        [v10 numberOfTouches];
      }
    }
    return;
  }
  unint64_t v3 = (void *)v2;
  id v4 = a1;
  id v5 = [v3 view];
  if (!v5)
  {

    goto LABEL_7;
  }
  id v6 = v5;
  [v3 translationInView:v5];
  double v8 = v7;
  if ([v3 numberOfTouches] != (id)1 || v8 == 0.0)
  {

    return;
  }
  id v15 = [v6 superview];
  if (!v15) {
    goto LABEL_28;
  }
  objc_super v16 = v15;
  self;
  uint64_t v17 = (void *)swift_dynamicCastObjCClass();
  if (!v17)
  {

LABEL_28:
    return;
  }
  uint64_t v18 = v17;
  [v17 zoomScale];
  double v20 = v19;
  id v21 = [v6 superview];
  if (v21)
  {
    int v22 = v21;
    type metadata accessor for StateOfMindAssetGridView();
    uint64_t v23 = swift_dynamicCastClass();

    if (v23)
    {
      if (v20 <= 1.0)
      {

        return;
      }
    }
  }
  [v18 contentOffset];
  if ((~*(void *)&v24 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_35;
  }
  if (v24 <= -9.22337204e18)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  if (v24 >= 9.22337204e18)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  if (v8 > 0.0)
  {
    [v18 contentInset];
    double v26 = v25;

    if ((~*(void *)&v26 & 0x7FF0000000000000) != 0)
    {
      if (v26 > -9.22337204e18)
      {
        if (v26 < 9.22337204e18)
        {
          if (!__OFSUB__(0, (uint64_t)v26)) {
            return;
          }
          goto LABEL_40;
        }
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        goto LABEL_41;
      }
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  [v18 contentSize];
  double v28 = v27;
  [v18 contentInset];
  double v30 = v28 + v29;
  id v31 = v16;
  [v18 frame];
  double v33 = v32;

  double v34 = v30 - v33;
  if ((~COERCE__INT64(v30 - v33) & 0x7FF0000000000000) == 0)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v34 <= -9.22337204e18)
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v34 >= 9.22337204e18) {
LABEL_43:
  }
    __break(1u);
}

uint64_t sub_100264F54()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100264F8C()
{
  return sub_1002F1138(v0);
}

uint64_t sub_100264F94(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100264FA4()
{
  return swift_release();
}

uint64_t sub_100264FAC()
{
  sub_100010218(&qword_100805678);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006DC550;
  *(void *)(inited + 32) = String._bridgeToObjectiveC()();
  *(void *)(inited + 40) = String._bridgeToObjectiveC()();
  *(void *)(inited + 48) = String._bridgeToObjectiveC()();
  *(void *)(inited + 56) = String._bridgeToObjectiveC()();
  *(void *)(inited + 64) = String._bridgeToObjectiveC()();
  *(void *)(inited + 72) = String._bridgeToObjectiveC()();
  uint64_t v1 = sub_100388E88(inited);
  swift_setDeallocating();
  type metadata accessor for NLTag(0);
  uint64_t result = swift_arrayDestroy();
  qword_100805668 = v1;
  return result;
}

uint64_t sub_1002650AC()
{
  uint64_t v0 = sub_100388F44((uint64_t)&off_100793C70);
  uint64_t result = swift_arrayDestroy();
  qword_100805670 = v0;
  return result;
}

uint64_t sub_1002650F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10 = NLTagger.tag(at:unit:scheme:)();
  if (v10)
  {
    id v11 = (void *)v10;
    if (qword_1007F6C80 != -1) {
      swift_once();
    }
    if (sub_10054208C(v11, qword_100805668))
    {
      String.subscript.getter();
      a8 = v12;
      uint64_t v13 = Substring.distance(from:to:)();
      swift_bridgeObjectRelease();

      uint64_t v14 = *a6 + v13;
      if (!__OFADD__(*a6, v13)) {
        goto LABEL_14;
      }
      __break(1u);
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = String.subscript.getter();
  unint64_t v17 = v16;
  swift_bridgeObjectRelease();
  if ((v15 ^ v17) >> 14)
  {
    Substring.index(before:)();
    uint64_t v15 = Substring.subscript.getter();
    a8 = v18;
    swift_bridgeObjectRelease();
    if (qword_1007F6C88 != -1) {
      goto LABEL_17;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  while (1)
  {
    uint64_t v14 = *a6 + 1;
    if (!__OFADD__(*a6, 1)) {
      break;
    }
    __break(1u);
LABEL_17:
    swift_once();
LABEL_12:
    char v19 = sub_100542904(v15, a8, qword_100805670);
    swift_bridgeObjectRelease();
    if (v19) {
      return 1;
    }
  }
LABEL_14:
  *a6 = v14;
  return 1;
}

double sub_1002652E0()
{
  if (qword_1007F73F8 != -1) {
    swift_once();
  }
  double result = *(double *)&qword_10083DA08;
  qword_100805680 = qword_10083DA08;
  return result;
}

double sub_100265334()
{
  if (qword_1007F6C90 != -1) {
    swift_once();
  }
  double result = -4.0 - *(double *)&qword_100805680;
  *(double *)&qword_100805688 = -4.0 - *(double *)&qword_100805680;
  return result;
}

void sub_100265478()
{
  id v1 = [v0 textLineFragments];
  sub_100265D10();
  unint64_t v2 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (v2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  CGFloat x = CGRectNull.origin.x;
  CGFloat y = CGRectNull.origin.y;
  CGFloat width = CGRectNull.size.width;
  CGFloat height = CGRectNull.size.height;
  if (!v3)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  if (v3 >= 1)
  {
    uint64_t v8 = 0;
    do
    {
      if ((v2 & 0xC000000000000001) != 0) {
        id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v9 = *(id *)(v2 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      [v9 typographicBounds];
      CGFloat v12 = v11;
      CGFloat v14 = v13;
      CGFloat v16 = v15;
      CGFloat v18 = v17;
      v19.origin.CGFloat x = x;
      v19.origin.CGFloat y = y;
      v19.size.CGFloat width = width;
      v19.size.CGFloat height = height;
      if (!CGRectIsNull(v19))
      {
        v20.origin.CGFloat x = x;
        v20.origin.CGFloat y = y;
        v20.size.CGFloat width = width;
        v20.size.CGFloat height = height;
        v22.origin.CGFloat x = v12;
        v22.origin.CGFloat y = v14;
        v22.size.CGFloat width = v16;
        v22.size.CGFloat height = v18;
        CGRect v21 = CGRectUnion(v20, v22);
        CGFloat v12 = v21.origin.x;
        CGFloat v14 = v21.origin.y;
        CGFloat v16 = v21.size.width;
        CGFloat v18 = v21.size.height;
      }

      ++v8;
      CGFloat x = v12;
      CGFloat y = v14;
      CGFloat width = v16;
      CGFloat height = v18;
    }
    while (v3 != v8);
    goto LABEL_12;
  }
  __break(1u);
}

double sub_10026563C()
{
  id v1 = [self mainScreen];
  [v1 scale];

  sub_100265478();
  sub_100265478();
  if (*((unsigned char *)v0 + OBJC_IVAR____TtC7Journal18BlockQuoteFragment_prevHasBlockQuote) == 1)
  {
    if (*((unsigned char *)v0 + OBJC_IVAR____TtC7Journal18BlockQuoteFragment_nextHasBlockQuote) == 1)
    {
      v3.receiver = v0;
      v3.super_class = (Class)type metadata accessor for BlockQuoteFragment();
      [super renderingSurfaceBounds];
    }
    else
    {
      sub_100265478();
      sub_100265478();
    }
  }
  else if (*((unsigned char *)v0 + OBJC_IVAR____TtC7Journal18BlockQuoteFragment_nextHasBlockQuote) == 1)
  {
    v4.receiver = v0;
    v4.super_class = (Class)type metadata accessor for BlockQuoteFragment();
    [super renderingSurfaceBounds];
    sub_100265478();
  }
  if (qword_1007F6C98 != -1) {
    swift_once();
  }
  return *(double *)&qword_100805688;
}

void sub_100265864(CGContext *a1, double a2, double a3)
{
  objc_super v4 = v3;
  uint64_t v8 = type metadata accessor for CGPathFillRule();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  double v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  CGContextSaveGState(a1);
  uint64_t v12 = 12;
  if (v3[OBJC_IVAR____TtC7Journal18BlockQuoteFragment_nextHasBlockQuote]) {
    uint64_t v12 = 0;
  }
  uint64_t v13 = 3;
  if (!v3[OBJC_IVAR____TtC7Journal18BlockQuoteFragment_nextHasBlockQuote]) {
    uint64_t v13 = -1;
  }
  if (v3[OBJC_IVAR____TtC7Journal18BlockQuoteFragment_prevHasBlockQuote]) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v13;
  }
  double v15 = sub_10026563C();
  id v18 = [self bezierPathWithRoundedRect:v14 byRoundingCorners:v15 cornerRadii:v16 4.0 v17 2.0 2.0];
  CGRect v19 = (const CGPath *)[v18 CGPath];

  CGContextAddPath(a1, v19);
  if (qword_1007F7200 != -1) {
    swift_once();
  }
  id v20 = [(id)qword_10083D7C8 colorWithAlphaComponent:0.45];
  CGRect v21 = *(void **)&v4[OBJC_IVAR____TtC7Journal18BlockQuoteFragment_customColor];
  if (v21)
  {
    id v22 = v21;
    id v23 = [v22 colorWithAlphaComponent:0.45];

    id v20 = v23;
  }
  double v24 = (CGColor *)[v20 CGColor];
  CGContextSetFillColorWithColor(a1, v24);

  (*(void (**)(char *, void, uint64_t))(v9 + 104))(v11, enum case for CGPathFillRule.winding(_:), v8);
  CGContextRef.fillPath(using:)();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  CGContextRestoreGState(a1);
  double v25 = (objc_class *)type metadata accessor for BlockQuoteFragment();
  v26.receiver = v4;
  v26.super_class = v25;
  -[CGContext drawAtPoint:inContext:](&v26, "drawAtPoint:inContext:", a1, a2, a3);
}

id sub_100265CA8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for BlockQuoteFragment();
  [super dealloc];
}

uint64_t type metadata accessor for BlockQuoteFragment()
{
  return self;
}

unint64_t sub_100265D10()
{
  unint64_t result = qword_1007FF308;
  if (!qword_1007FF308)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1007FF308);
  }
  return result;
}

uint64_t sub_100265D50()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1008056D0);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1008056D0);
  if (qword_1007F7D10 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB30);
  objc_super v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

char *sub_100265E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6 = objc_allocWithZone((Class)UILabel);
  double v7 = v3;
  id v8 = [v6 init];
  uint64_t v9 = OBJC_IVAR____TtCC7Journal18SyncStatsDisplayVC13SyncStatsCell_titleLabel;
  *(void *)&v7[OBJC_IVAR____TtCC7Journal18SyncStatsDisplayVC13SyncStatsCell_titleLabel] = v8;
  uint64_t v10 = self;
  id v11 = v8;
  id v12 = [v10 boldSystemFontOfSize:16.0];
  [v11 setFont:v12];

  [*(id *)&v7[v9] setNumberOfLines:0];
  id v13 = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v14 = OBJC_IVAR____TtCC7Journal18SyncStatsDisplayVC13SyncStatsCell_descriptionLabel;
  *(void *)&v7[OBJC_IVAR____TtCC7Journal18SyncStatsDisplayVC13SyncStatsCell_descriptionLabel] = v13;
  id v15 = v13;
  id v16 = [v10 systemFontOfSize:14.0];
  [v15 setFont:v16];

  id v17 = *(id *)&v7[v14];
  [v17 setNumberOfLines:0];

  if (a3)
  {
    NSString v18 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v18 = 0;
  }
  v57.receiver = v7;
  v57.super_class = (Class)type metadata accessor for SyncStatsDisplayVC.SyncStatsCell();
  id v19 = [super initWithStyle:a1 reuseIdentifier:v18];

  id v20 = (char *)v19;
  id v21 = [v20 contentView];
  uint64_t v22 = OBJC_IVAR____TtCC7Journal18SyncStatsDisplayVC13SyncStatsCell_titleLabel;
  [v21 addSubview:*(void *)&v20[OBJC_IVAR____TtCC7Journal18SyncStatsDisplayVC13SyncStatsCell_titleLabel]];

  id v23 = [v20 contentView];
  uint64_t v24 = OBJC_IVAR____TtCC7Journal18SyncStatsDisplayVC13SyncStatsCell_descriptionLabel;
  [v23 addSubview:*(void *)&v20[OBJC_IVAR____TtCC7Journal18SyncStatsDisplayVC13SyncStatsCell_descriptionLabel]];

  double v25 = *(void **)&v20[v22];
  [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
  [*(id *)&v20[v24] setTranslatesAutoresizingMaskIntoConstraints:0];
  id v56 = self;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1006E0460;
  id v27 = [v25 topAnchor];
  id v28 = [v20 contentView];
  id v29 = [v28 topAnchor];

  id v30 = [v27 constraintEqualToAnchor:v29 constant:8.0];
  *(void *)(v26 + 32) = v30;
  id v31 = [*(id *)&v20[v22] leadingAnchor];
  id v32 = [v20 contentView];
  id v33 = [v32 leadingAnchor];

  id v34 = [v31 constraintEqualToAnchor:v33 constant:8.0];
  *(void *)(v26 + 40) = v34;
  id v35 = [*(id *)&v20[v22] trailingAnchor];
  id v36 = [v20 contentView];
  id v37 = [v36 trailingAnchor];

  id v38 = [v35 constraintEqualToAnchor:v37 constant:-8.0];
  *(void *)(v26 + 48) = v38;
  id v39 = [*(id *)&v20[v24] topAnchor];
  id v40 = [*(id *)&v20[v22] bottomAnchor];
  id v41 = [v39 constraintEqualToAnchor:v40 constant:8.0];

  *(void *)(v26 + 56) = v41;
  id v42 = [*(id *)&v20[v24] leadingAnchor];
  id v43 = [v20 contentView];
  id v44 = [v43 leadingAnchor];

  id v45 = [v42 constraintEqualToAnchor:v44 constant:8.0];
  *(void *)(v26 + 64) = v45;
  id v46 = [*(id *)&v20[v24] trailingAnchor];
  id v47 = [v20 contentView];
  id v48 = [v47 trailingAnchor];

  id v49 = [v46 constraintEqualToAnchor:v48 constant:-8.0];
  *(void *)(v26 + 72) = v49;
  id v50 = [*(id *)&v20[v24] bottomAnchor];
  id v51 = [v20 contentView];
  id v52 = [v51 bottomAnchor];

  id v53 = [v50 constraintEqualToAnchor:v52 constant:-8.0];
  *(void *)(v26 + 80) = v53;
  specialized Array._endMutation()();
  sub_10001B284(0, (unint64_t *)&qword_1008059B0);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v56 activateConstraints:isa];

  return v20;
}

id sub_1002664DC()
{
  return sub_10026A8D4(type metadata accessor for SyncStatsDisplayVC.SyncStatsCell);
}

id sub_100266540()
{
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for SyncStatsDisplayVC();
  [super viewDidLoad];
  id result = [v0 tableView];
  if (result)
  {
    uint64_t v2 = result;
    NSString v3 = String._bridgeToObjectiveC()();
    id v4 = [self nibWithNibName:v3 bundle:0];

    NSString v5 = String._bridgeToObjectiveC()();
    [v2 registerNib:v4 forCellReuseIdentifier:v5];

    *(void *)&v0[OBJC_IVAR____TtC7Journal18SyncStatsDisplayVC_dataObjects] = sub_100266AE8();
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1002667C8(void *a1)
{
  unint64_t v3 = IndexPath.row.getter();
  if ((v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(void *)(*(void *)(v1 + OBJC_IVAR____TtC7Journal18SyncStatsDisplayVC_dataObjects) + 16))
  {
    swift_bridgeObjectRetain();
    NSString v4 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [a1 frame];
    double Width = CGRectGetWidth(v19);
    sub_100010218(&qword_100802498);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1006D6280;
    *(void *)(inited + 32) = NSFontAttributeName;
    double v7 = self;
    id v8 = NSFontAttributeName;
    id v9 = [v7 systemFontOfSize:16.0];
    *(void *)(inited + 64) = sub_10001B284(0, (unint64_t *)&unk_10080A670);
    *(void *)(inited + 40) = v9;
    sub_100396DBC(inited);
    type metadata accessor for Key(0);
    sub_10026AA20((unint64_t *)&qword_10080A680, type metadata accessor for Key);
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    [v4 boundingRectWithSize:3 isa:Width options:1.79769313e308];
    CGFloat v12 = v11;
    CGFloat v14 = v13;
    CGFloat v16 = v15;
    CGFloat v18 = v17;

    v20.origin.CGFloat x = v12;
    v20.origin.CGFloat y = v14;
    v20.size.CGFloat width = v16;
    v20.size.CGFloat height = v18;
    CGRectGetHeight(v20);
    return;
  }
  __break(1u);
}

uint64_t sub_100266AE8()
{
  uint64_t v0 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v0 - 8);
  char v273 = (char *)&v241 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v271 = (void (*)(char *, uint64_t, uint64_t))((char *)&v241 - v3);
  __chkstk_darwin(v4);
  CGFloat v269 = (char *)&v241 - v5;
  uint64_t v263 = type metadata accessor for URL.DirectoryHint();
  uint64_t v266 = *(void *)(v263 - 8);
  __chkstk_darwin(v263);
  id v258 = (char *)&v241 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v268 = type metadata accessor for URL();
  uint64_t v274 = *(void *)(v268 - 8);
  __chkstk_darwin(v268);
  Swift::String v256 = (char *)&v241 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v270 = (char *)&v241 - v9;
  __chkstk_darwin(v10);
  id v264 = (char *)&v241 - v11;
  __chkstk_darwin(v12);
  uint64_t v267 = (uint64_t)&v241 - v13;
  __chkstk_darwin(v14);
  uint64_t v272 = (uint64_t (*)(__n128))((char *)&v241 - v15);
  __chkstk_darwin(v16);
  id v257 = (uint64_t (*)(__n128))((char *)&v241 - v17);
  CGFloat v18 = _swiftEmptyArrayStorage;
  uint64_t v279 = 0;
  unint64_t v280 = 0xE000000000000000;
  uint64_t v281 = _swiftEmptyArrayStorage;
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  CGRect v19 = *(char **)(qword_10083D2F8 + 16);
  id v20 = *(id *)&v19[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate];
  id v21 = v19;
  uint64_t v22 = (void *)sub_10029F7D0(v20);

  if (v22)
  {
    id v23 = [v22 userId];
    if (v23)
    {
      uint64_t v24 = v23;
      id v25 = v20;
      uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v28 = v27;

      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v281 = _swiftEmptyArrayStorage;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        CGFloat v18 = sub_1002A6AA4(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
        uint64_t v281 = v18;
      }
      unint64_t v31 = *((void *)v18 + 2);
      unint64_t v30 = *((void *)v18 + 3);
      if (v31 >= v30 >> 1)
      {
        CGFloat v18 = sub_1002A6AA4((double *)(v30 > 1), v31 + 1, 1, v18);
        uint64_t v281 = v18;
      }
      *((void *)v18 + 2) = v31 + 1;
      id v32 = &v18[4 * v31];
      v32[4] = 1.46113623e-307;
      v32[5] = -1.39234638e188;
      *((void *)v32 + 6) = v26;
      *((void *)v32 + 7) = v28;
      v33._uint64_t countAndFlagsBits = 0xD000000000000011;
      v33._object = (void *)0x8000000100694970;
      String.append(_:)(v33);
      id v20 = v25;
    }
    else
    {
      char v34 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v281 = _swiftEmptyArrayStorage;
      if ((v34 & 1) == 0)
      {
        CGFloat v18 = sub_1002A6AA4(0, *(void *)&_swiftEmptyArrayStorage[2] + 1, 1, _swiftEmptyArrayStorage);
        uint64_t v281 = v18;
      }
      unint64_t v36 = *((void *)v18 + 2);
      unint64_t v35 = *((void *)v18 + 3);
      if (v36 >= v35 >> 1)
      {
        CGFloat v18 = sub_1002A6AA4((double *)(v35 > 1), v36 + 1, 1, v18);
        uint64_t v281 = v18;
      }
      *((void *)v18 + 2) = v36 + 1;
      id v37 = &v18[4 * v36];
      v37[4] = 1.46113623e-307;
      v37[5] = -1.39234638e188;
      *((void *)v37 + 6) = 0x7974706D65;
      v37[7] = -3.24180904e178;
      v38._uint64_t countAndFlagsBits = 0x203A444972657375;
      v38._object = (void *)0xED00007974706D65;
      String.append(_:)(v38);
    }
    id v39 = [v22 metadata];
    if (v39)
    {
      id v40 = v39;
      uint64_t v41 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v43 = v42;

      sub_100040D64(v41, v43);
      sub_100040D64(v41, v43);
      Class isa = Data._bridgeToObjectiveC()().super.isa;
      id v45 = [(objc_class *)isa description];
      uint64_t v46 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v275 = v47;

      sub_100040DD0(v41, v43);
      sub_100040DD0(v41, v43);
      id v48 = v281;
      char v49 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v281 = v48;
      id v50 = v20;
      if ((v49 & 1) == 0)
      {
        id v48 = sub_1002A6AA4(0, *((void *)v48 + 2) + 1, 1, v48);
        uint64_t v281 = v48;
      }
      unint64_t v52 = *((void *)v48 + 2);
      unint64_t v51 = *((void *)v48 + 3);
      if (v52 >= v51 >> 1)
      {
        id v48 = sub_1002A6AA4((double *)(v51 > 1), v52 + 1, 1, v48);
        uint64_t v281 = v48;
      }
      *((void *)v48 + 2) = v52 + 1;
      id v53 = &v48[4 * v52];
      v53[4] = 2.86530729e161;
      v53[5] = -5.98008217e197;
      *((void *)v53 + 6) = v46;
      *((void *)v53 + 7) = v275;
      v54._uint64_t countAndFlagsBits = 0xD000000000000014;
      v54._object = (void *)0x8000000100694950;
      String.append(_:)(v54);

      sub_100040DD0(v41, v43);
      id v20 = v50;
    }
    else
    {
      uint64_t v55 = v281;
      char v56 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v281 = v55;
      if ((v56 & 1) == 0)
      {
        uint64_t v55 = sub_1002A6AA4(0, *((void *)v55 + 2) + 1, 1, v55);
        uint64_t v281 = v55;
      }
      unint64_t v58 = *((void *)v55 + 2);
      unint64_t v57 = *((void *)v55 + 3);
      if (v58 >= v57 >> 1)
      {
        uint64_t v55 = sub_1002A6AA4((double *)(v57 > 1), v58 + 1, 1, v55);
        uint64_t v281 = v55;
      }
      *((void *)v55 + 2) = v58 + 1;
      objc_super v59 = &v55[4 * v58];
      v59[4] = 2.86530729e161;
      v59[5] = -5.98008217e197;
      *((void *)v59 + 6) = 0x7974706D65;
      v59[7] = -3.24180904e178;
      v60._uint64_t countAndFlagsBits = 0xD000000000000010;
      v60._object = (void *)0x8000000100694930;
      String.append(_:)(v60);
    }
  }
  uint64_t v61 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v62 = (void *)swift_allocObject();
  v62[2] = v61;
  v62[3] = v20;
  v62[4] = &v281;
  v62[5] = &v279;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = sub_10026A9EC;
  *(void *)(v63 + 24) = v62;
  unint64_t v286 = sub_10001AC84;
  uint64_t v287 = v63;
  aBlock._uint64_t countAndFlagsBits = (uint64_t)_NSConcreteStackBlock;
  aBlock._object = (void *)1107296256;
  uint64_t v284 = sub_1003F44E4;
  id v285 = &unk_1007A1818;
  uint64_t v64 = _Block_copy(&aBlock);
  uint64_t countAndFlagsBits = v287;
  id v66 = v20;
  swift_retain();
  swift_release();
  [v66 performBlockAndWait:v64];
  _Block_release(v64);
  uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    id v252 = v66;
    CGFloat v253 = v62;
    UIImage_optional v68 = sub_10020821C();
    uint64_t v69 = sub_100208228();
    aBlock._uint64_t countAndFlagsBits = 0;
    aBlock._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(25);
    swift_bridgeObjectRelease();
    aBlock._uint64_t countAndFlagsBits = 0x3A65766153206F54;
    aBlock._object = (void *)0xE900000000000020;
    uint64_t v70 = *((void *)v68 + 2);
    swift_bridgeObjectRelease();
    v278._uint64_t countAndFlagsBits = v70;
    v71._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v71);
    swift_bridgeObjectRelease();
    v72._uint64_t countAndFlagsBits = 0x6C6544206F540920;
    v72._object = (void *)0xEC0000003A657465;
    String.append(_:)(v72);
    uint64_t v73 = *((void *)v69 + 2);
    swift_bridgeObjectRelease();
    v278._uint64_t countAndFlagsBits = v73;
    v74._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v74);
    swift_bridgeObjectRelease();
    uint64_t countAndFlagsBits = aBlock._countAndFlagsBits;
    uint64_t isEscapingClosureAtFileLocation = (uint64_t)aBlock._object;
    uint64_t v63 = (uint64_t)v281;
    swift_bridgeObjectRetain();
    char v75 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v281 = (double *)v63;
    if (v75) {
      goto LABEL_28;
    }
  }
  uint64_t v63 = (uint64_t)sub_1002A6AA4(0, *(void *)(v63 + 16) + 1, 1, (double *)v63);
  uint64_t v281 = (double *)v63;
LABEL_28:
  uint64_t v76 = v268;
  unint64_t v78 = *(void *)(v63 + 16);
  unint64_t v77 = *(void *)(v63 + 24);
  if (v78 >= v77 >> 1)
  {
    uint64_t v63 = (uint64_t)sub_1002A6AA4((double *)(v77 > 1), v78 + 1, 1, (double *)v63);
    uint64_t v281 = (double *)v63;
  }
  *(void *)(v63 + 16) = v78 + 1;
  id v79 = (void *)(v63 + 32 * v78);
  v79[4] = 0xD000000000000019;
  v79[5] = 0x8000000100694730;
  v79[6] = countAndFlagsBits;
  v79[7] = isEscapingClosureAtFileLocation;
  aBlock._uint64_t countAndFlagsBits = 0;
  aBlock._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  aBlock._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  aBlock._object = (void *)0x8000000100694750;
  v80._uint64_t countAndFlagsBits = countAndFlagsBits;
  v80._object = (void *)isEscapingClosureAtFileLocation;
  String.append(_:)(v80);
  swift_bridgeObjectRelease();
  String.append(_:)(aBlock);
  swift_bridgeObjectRelease();
  id v81 = [self standardUserDefaults];
  NSString v82 = String._bridgeToObjectiveC()();
  unsigned int v83 = [v81 BOOLForKey:v82];

  BOOL v84 = v83 == 0;
  if (v83) {
    uint64_t v85 = 1702195828;
  }
  else {
    uint64_t v85 = 0x65736C6166;
  }
  if (v84) {
    id v86 = (void *)0xE500000000000000;
  }
  else {
    id v86 = (void *)0xE400000000000000;
  }
  id v87 = v281;
  swift_bridgeObjectRetain();
  char v88 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v281 = v87;
  if ((v88 & 1) == 0)
  {
    id v87 = sub_1002A6AA4(0, *((void *)v87 + 2) + 1, 1, v87);
    uint64_t v281 = v87;
  }
  unint64_t v90 = *((void *)v87 + 2);
  unint64_t v89 = *((void *)v87 + 3);
  if (v90 >= v89 >> 1)
  {
    id v87 = sub_1002A6AA4((double *)(v89 > 1), v90 + 1, 1, v87);
    uint64_t v281 = v87;
  }
  *((void *)v87 + 2) = v90 + 1;
  id v91 = &v87[4 * v90];
  v91[4] = -2.31584178e77;
  *((void *)v91 + 5) = 0x8000000100694770;
  *((void *)v91 + 6) = v85;
  *((void *)v91 + 7) = v86;
  aBlock._uint64_t countAndFlagsBits = 0;
  aBlock._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(27);
  swift_bridgeObjectRelease();
  aBlock._uint64_t countAndFlagsBits = 0xD000000000000019;
  aBlock._object = (void *)0x8000000100694790;
  v92._uint64_t countAndFlagsBits = v85;
  v92._object = v86;
  String.append(_:)(v92);
  swift_bridgeObjectRelease();
  String.append(_:)(aBlock);
  swift_bridgeObjectRelease();
  NSString v93 = NSURLFileProtectionCompleteUnlessOpen;
  id v94 = v257;
  Swift::String v250 = (void **)0x80000001006947B0;
  id v254 = v93;
  sub_1004FD498(0xD000000000000017, (void *)0x80000001006947B0, (uint64_t)v257);
  uint64_t v243 = sub_100269FC0();
  id v242 = v95;
  uint64_t v96 = v274 + 8;
  id v97 = *(void (**)(uint64_t (*)(__n128), uint64_t))(v274 + 8);
  v97(v94, v76);
  uint64_t v98 = v272;
  sub_1004FD498(0xD000000000000017, (void *)0x80000001006947B0, (uint64_t)v272);
  unsigned int v262 = enum case for URL.DirectoryHint.inferFromPath(_:);
  uint64_t v99 = v266;
  id v260 = *(void (**)(char *))(v266 + 104);
  uint64_t v261 = v266 + 104;
  id v100 = v258;
  uint64_t v101 = v263;
  v260(v258);
  unint64_t v265 = sub_100014344();
  URL.appending<A>(components:directoryHint:)();
  id v259 = *(void (**)(char *, uint64_t))(v99 + 8);
  v259(v100, v101);
  uint64_t v266 = v99 + 8;
  v97(v98, v76);
  uint64_t v245 = sub_100269FC0();
  id v244 = v102;
  v97(v94, v76);
  Swift::String v103 = v250;
  sub_1004FD498(0xD000000000000017, v250, (uint64_t)v98);
  ((void (*)(char *, void, uint64_t))v260)(v100, v262, v101);
  URL.appending<A>(components:directoryHint:)();
  v259(v100, v101);
  v97(v98, v76);
  uint64_t v247 = sub_100269FC0();
  id v246 = v104;
  v97(v94, v76);
  sub_1004FCB90(0xD000000000000017, v103, v94);
  uint64_t v249 = sub_100269FC0();
  id v248 = v105;
  v97(v94, v76);
  uint64_t v275 = (void (*)(uint64_t, uint64_t))v97;
  sub_1004FCBB8(0xD000000000000017, v103, v94);
  *(void *)&long long v255 = sub_100269FC0();
  NSURLFileProtectionType v251 = v106;
  v97(v94, v76);
  uint64_t v107 = v267;
  sub_1004FD498(0xD000000000000017, v103, v267);
  uint64_t v108 = v262;
  uint64_t v109 = v263;
  id v110 = (void (*)(char *, uint64_t, uint64_t))v260;
  ((void (*)(char *, void, uint64_t))v260)(v100, v262, v263);
  URL.appending<A>(components:directoryHint:)();
  id v111 = v259;
  v259(v100, v109);
  v275(v107, v268);
  v110(v100, v108, v109);
  id v112 = v272;
  URL.appending<A>(components:directoryHint:)();
  v111(v100, v109);
  uint64_t v113 = v268;
  id v114 = (void (*)(uint64_t (*)(__n128), uint64_t))v275;
  v275((uint64_t)v112, v268);
  uint64_t v272 = (uint64_t (*)(__n128))sub_100269FC0();
  Swift::String v250 = v115;
  uint64_t v267 = v96;
  v114(v94, v113);
  aBlock._uint64_t countAndFlagsBits = 47;
  aBlock._object = (void *)0xE100000000000000;
  v278._uint64_t countAndFlagsBits = 46;
  v278._object = (void *)0xE100000000000000;
  uint64_t v116 = StringProtocol.padding<A>(toLength:withPad:startingAt:)();
  uint64_t v118 = v117;
  aBlock._uint64_t countAndFlagsBits = v243;
  aBlock._object = v242;
  v119._uint64_t countAndFlagsBits = 10;
  v119._object = (void *)0xE100000000000000;
  String.append(_:)(v119);
  uint64_t v120 = aBlock._countAndFlagsBits;
  object = aBlock._object;
  aBlock._uint64_t countAndFlagsBits = v116;
  aBlock._object = v118;
  swift_bridgeObjectRetain();
  v122._uint64_t countAndFlagsBits = v120;
  v122._object = object;
  String.append(_:)(v122);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Swift::String v278 = aBlock;
  aBlock._uint64_t countAndFlagsBits = 1886221359;
  aBlock._object = (void *)0xE400000000000000;
  v277._uint64_t countAndFlagsBits = 46;
  v277._object = (void *)0xE100000000000000;
  uint64_t v123 = StringProtocol.padding<A>(toLength:withPad:startingAt:)();
  id v125 = v124;
  aBlock._uint64_t countAndFlagsBits = v245;
  aBlock._object = v244;
  v126._uint64_t countAndFlagsBits = 10;
  v126._object = (void *)0xE100000000000000;
  String.append(_:)(v126);
  uint64_t v127 = aBlock._countAndFlagsBits;
  id v128 = aBlock._object;
  aBlock._uint64_t countAndFlagsBits = v123;
  aBlock._object = v125;
  swift_bridgeObjectRetain();
  v129._uint64_t countAndFlagsBits = v127;
  v129._object = v128;
  String.append(_:)(v129);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  String.append(_:)(aBlock);
  swift_bridgeObjectRelease();
  aBlock._uint64_t countAndFlagsBits = 0x7972617262694C2FLL;
  aBlock._object = (void *)0xE800000000000000;
  v277._uint64_t countAndFlagsBits = 46;
  v277._object = (void *)0xE100000000000000;
  uint64_t v130 = StringProtocol.padding<A>(toLength:withPad:startingAt:)();
  id v132 = v131;
  aBlock._uint64_t countAndFlagsBits = v247;
  aBlock._object = v246;
  v133._uint64_t countAndFlagsBits = 10;
  v133._object = (void *)0xE100000000000000;
  String.append(_:)(v133);
  uint64_t v134 = aBlock._countAndFlagsBits;
  id v135 = aBlock._object;
  aBlock._uint64_t countAndFlagsBits = v130;
  aBlock._object = v132;
  swift_bridgeObjectRetain();
  v136._uint64_t countAndFlagsBits = v134;
  v136._object = v135;
  String.append(_:)(v136);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  String.append(_:)(aBlock);
  swift_bridgeObjectRelease();
  aBlock._uint64_t countAndFlagsBits = 0x7972617262694C2FLL;
  aBlock._object = (void *)0xEF7365686361432FLL;
  v277._uint64_t countAndFlagsBits = 46;
  v277._object = (void *)0xE100000000000000;
  uint64_t v137 = StringProtocol.padding<A>(toLength:withPad:startingAt:)();
  id v139 = v138;
  aBlock._uint64_t countAndFlagsBits = v249;
  aBlock._object = v248;
  v140._uint64_t countAndFlagsBits = 10;
  v140._object = (void *)0xE100000000000000;
  String.append(_:)(v140);
  uint64_t v141 = aBlock._countAndFlagsBits;
  id v142 = aBlock._object;
  aBlock._uint64_t countAndFlagsBits = v137;
  aBlock._object = v139;
  swift_bridgeObjectRetain();
  v143._uint64_t countAndFlagsBits = v141;
  v143._object = v142;
  String.append(_:)(v143);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  String.append(_:)(aBlock);
  swift_bridgeObjectRelease();
  aBlock._uint64_t countAndFlagsBits = 0xD00000000000001CLL;
  aBlock._object = (void *)0x80000001006947D0;
  v277._uint64_t countAndFlagsBits = 46;
  v277._object = (void *)0xE100000000000000;
  uint64_t v144 = StringProtocol.padding<A>(toLength:withPad:startingAt:)();
  id v146 = v145;
  aBlock._uint64_t countAndFlagsBits = v255;
  aBlock._object = v251;
  v147._uint64_t countAndFlagsBits = 10;
  v147._object = (void *)0xE100000000000000;
  String.append(_:)(v147);
  uint64_t v148 = aBlock._countAndFlagsBits;
  id v149 = aBlock._object;
  aBlock._uint64_t countAndFlagsBits = v144;
  aBlock._object = v146;
  swift_bridgeObjectRetain();
  v150._uint64_t countAndFlagsBits = v148;
  v150._object = v149;
  String.append(_:)(v150);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  String.append(_:)(aBlock);
  swift_bridgeObjectRelease();
  aBlock._uint64_t countAndFlagsBits = 0xD000000000000014;
  aBlock._object = (void *)0x80000001006947F0;
  v277._uint64_t countAndFlagsBits = 46;
  v277._object = (void *)0xE100000000000000;
  uint64_t v151 = StringProtocol.padding<A>(toLength:withPad:startingAt:)();
  id v153 = v152;
  aBlock._uint64_t countAndFlagsBits = (uint64_t)v272;
  aBlock._object = v250;
  v154._uint64_t countAndFlagsBits = 10;
  v154._object = (void *)0xE100000000000000;
  String.append(_:)(v154);
  uint64_t v155 = aBlock._countAndFlagsBits;
  id v156 = aBlock._object;
  aBlock._uint64_t countAndFlagsBits = v151;
  aBlock._object = v153;
  swift_bridgeObjectRetain();
  v157._uint64_t countAndFlagsBits = v155;
  v157._object = v156;
  String.append(_:)(v157);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  String.append(_:)(aBlock);
  swift_bridgeObjectRelease();
  Swift::String v158 = v278;
  id v159 = v281;
  swift_bridgeObjectRetain();
  char v160 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v281 = v159;
  if ((v160 & 1) == 0)
  {
    id v159 = sub_1002A6AA4(0, *((void *)v159 + 2) + 1, 1, v159);
    uint64_t v281 = v159;
  }
  unint64_t v162 = *((void *)v159 + 2);
  unint64_t v161 = *((void *)v159 + 3);
  uint64_t v163 = v268;
  if (v162 >= v161 >> 1)
  {
    id v159 = sub_1002A6AA4((double *)(v161 > 1), v162 + 1, 1, v159);
    uint64_t v281 = v159;
  }
  *((void *)v159 + 2) = v162 + 1;
  id v164 = (Swift::String *)&v159[4 * v162];
  v164[2]._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v164[2]._object = (void *)0x8000000100694810;
  v164[3] = v158;
  aBlock._uint64_t countAndFlagsBits = 0;
  aBlock._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(37);
  swift_bridgeObjectRelease();
  aBlock._uint64_t countAndFlagsBits = 0xD000000000000023;
  aBlock._object = (void *)0x8000000100694830;
  String.append(_:)(v158);
  swift_bridgeObjectRelease();
  String.append(_:)(aBlock);
  swift_bridgeObjectRelease();
  NSURLFileProtectionType v251 = NSURLFileProtectionNone;
  id v165 = NSHomeDirectory();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v166 = (uint64_t)v269;
  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v167 = v274;
  id v169 = (char *)(v274 + 48);
  id v168 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v274 + 48);
  if (v168(v166, 1, v163) == 1) {
    goto LABEL_74;
  }
  Swift::Int v172 = *(char **)(v167 + 32);
  uint64_t v171 = v167 + 32;
  id v170 = v172;
  ((void (*)(char *, uint64_t, uint64_t))v172)(v264, v166, v163);
  id v173 = NSHomeDirectory();
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v166 = (uint64_t)v271;
  URL.init(string:)();
  swift_bridgeObjectRelease();
  uint64_t v272 = (uint64_t (*)(__n128))v168;
  if (v168(v166, 1, v163) == 1)
  {
LABEL_74:
    sub_10001457C(v166, (uint64_t *)&unk_100800A60);
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  id v174 = v270;
  uint64_t v271 = (void (*)(char *, uint64_t, uint64_t))v170;
  uint64_t v274 = v171;
  ((void (*)(char *, uint64_t, uint64_t))v170)(v270, v166, v163);
  uint64_t v175 = sub_100269FC0();
  id v177 = v176;
  v275((uint64_t)v174, v163);
  aBlock._uint64_t countAndFlagsBits = 47;
  aBlock._object = (void *)0xE100000000000000;
  v277._uint64_t countAndFlagsBits = 46;
  v277._object = (void *)0xE100000000000000;
  uint64_t v178 = StringProtocol.padding<A>(toLength:withPad:startingAt:)();
  id v180 = v179;
  aBlock._uint64_t countAndFlagsBits = v175;
  aBlock._object = v177;
  v181._uint64_t countAndFlagsBits = 10;
  v181._object = (void *)0xE100000000000000;
  String.append(_:)(v181);
  uint64_t v182 = aBlock._countAndFlagsBits;
  id v183 = aBlock._object;
  aBlock._uint64_t countAndFlagsBits = v178;
  aBlock._object = v180;
  swift_bridgeObjectRetain();
  v184._uint64_t countAndFlagsBits = v182;
  v184._object = v183;
  String.append(_:)(v184);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  Swift::String v277 = aBlock;
  uint64_t v270 = (char *)self;
  id v185 = [v270 defaultManager];
  URL.path.getter();
  NSString v186 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  aBlock._uint64_t countAndFlagsBits = 0;
  id v187 = [v185 contentsOfDirectoryAtPath:v186 error:&aBlock];

  id v188 = (void *)aBlock._countAndFlagsBits;
  id v189 = &off_1007F6000;
  if (v187)
  {
    id v190 = (void **)static Array._unconditionallyBridgeFromObjectiveC(_:)();
    id v191 = v188;

    CGFloat v192 = (char *)v190[2];
    if (v192)
    {
      CGFloat v269 = v169;
      Swift::String v250 = v190;
      id v193 = v190 + 5;
      long long v255 = xmmword_1006D6280;
      id v194 = v256;
      uint64_t v195 = v163;
      while (1)
      {
        uint64_t v197 = (uint64_t)*(v193 - 1);
        id v196 = *v193;
        swift_bridgeObjectRetain();
        id v198 = NSHomeDirectory();
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v166 = (uint64_t)v273;
        URL.init(string:)();
        swift_bridgeObjectRelease();
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v272)(v166, 1, v195) == 1) {
          goto LABEL_74;
        }
        v271(v194, v166, v195);
        URL.path.getter();
        v275((uint64_t)v194, v195);
        NSString v199 = String._bridgeToObjectiveC()();
        swift_bridgeObjectRelease();
        NSString v200 = String._bridgeToObjectiveC()();
        NSString v201 = [v199 stringByAppendingPathComponent:v200];

        if (!v201)
        {
          static String._unconditionallyBridgeFromObjectiveC(_:)();
          NSString v201 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
        }
        LOBYTE(v276) = 0;
        id v202 = [v270 defaultManager];
        unsigned int v203 = [v202 fileExistsAtPath:v201 isDirectory:&v276];

        if (v203 && v276 == 1)
        {
          sub_100010218(&qword_1007FC170);
          uint64_t v204 = swift_allocObject();
          *(_OWORD *)(v204 + 16) = v255;
          *(void *)(v204 + 32) = v197;
          *(void *)(v204 + 40) = v196;
          id v205 = v258;
          uint64_t v206 = v263;
          ((void (*)(char *, void, uint64_t))v260)(v258, v262, v263);
          swift_bridgeObjectRetain();
          uint64_t v207 = (uint64_t)v257;
          URL.appending<A>(components:directoryHint:)();
          swift_bridgeObjectRelease();
          id v208 = v205;
          id v194 = v256;
          v259(v208, v206);
          uint64_t v209 = sub_100269FC0();
          id v211 = v210;
          v275(v207, v268);
          aBlock._uint64_t countAndFlagsBits = 47;
          aBlock._object = (void *)0xE100000000000000;
          v212._uint64_t countAndFlagsBits = v197;
          v212._object = v196;
          String.append(_:)(v212);
          swift_bridgeObjectRelease();
          v282[0] = 46;
          v282[1] = 0xE100000000000000;
          uint64_t v213 = StringProtocol.padding<A>(toLength:withPad:startingAt:)();
          id v215 = v214;
          swift_bridgeObjectRelease();
          aBlock._uint64_t countAndFlagsBits = v209;
          aBlock._object = v211;
          v216._uint64_t countAndFlagsBits = 10;
          v216._object = (void *)0xE100000000000000;
          String.append(_:)(v216);
          uint64_t v217 = aBlock._countAndFlagsBits;
          id v218 = aBlock._object;
          aBlock._uint64_t countAndFlagsBits = v213;
          aBlock._object = v215;
          swift_bridgeObjectRetain();
          v219._uint64_t countAndFlagsBits = v217;
          v219._object = v218;
          String.append(_:)(v219);
          uint64_t v195 = v268;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          String.append(_:)(aBlock);
        }
        v193 += 2;
        swift_bridgeObjectRelease();
        if (!--v192)
        {
          swift_bridgeObjectRelease();
          id v189 = &off_1007F6000;
          goto LABEL_63;
        }
      }
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    id v220 = (id)aBlock._countAndFlagsBits;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F6CA0 != -1) {
      swift_once();
    }
    uint64_t v221 = type metadata accessor for Logger();
    sub_100026A54(v221, (uint64_t)qword_1008056D0);
    swift_errorRetain();
    swift_errorRetain();
    CGFloat v222 = Logger.logObject.getter();
    os_log_type_t v223 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v222, v223))
    {
      id v224 = (uint8_t *)swift_slowAlloc();
      id v225 = (void *)swift_slowAlloc();
      *(_DWORD *)id v224 = 138412290;
      swift_errorRetain();
      uint64_t v226 = _swift_stdlib_bridgeErrorToNSError();
      aBlock._uint64_t countAndFlagsBits = v226;
      id v189 = &off_1007F6000;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v225 = v226;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v222, v223, "Error listing contents of directory: %@", v224, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
LABEL_63:
  Swift::String v227 = v277;
  unint64_t v228 = v281;
  swift_bridgeObjectRetain();
  char v229 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v281 = v228;
  if ((v229 & 1) == 0)
  {
    unint64_t v228 = sub_1002A6AA4(0, *((void *)v228 + 2) + 1, 1, v228);
    uint64_t v281 = v228;
  }
  unint64_t v231 = *((void *)v228 + 2);
  unint64_t v230 = *((void *)v228 + 3);
  if (v231 >= v230 >> 1)
  {
    unint64_t v228 = sub_1002A6AA4((double *)(v230 > 1), v231 + 1, 1, v228);
    uint64_t v281 = v228;
  }
  *((void *)v228 + 2) = v231 + 1;
  id v232 = (Swift::String *)&v228[4 * v231];
  v232[2]._uint64_t countAndFlagsBits = 0xD000000000000018;
  v232[2]._object = (void *)0x80000001006948F0;
  v232[3] = v227;
  aBlock._uint64_t countAndFlagsBits = 0;
  aBlock._object = (void *)0xE000000000000000;
  _StringGuts.grow(_:)(29);
  swift_bridgeObjectRelease();
  aBlock._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  aBlock._object = (void *)0x8000000100694910;
  String.append(_:)(v227);
  swift_bridgeObjectRelease();
  String.append(_:)(aBlock);
  swift_bridgeObjectRelease();
  if (v189[404] != (_UNKNOWN *)-1) {
    swift_once();
  }
  uint64_t v233 = type metadata accessor for Logger();
  sub_100026A54(v233, (uint64_t)qword_1008056D0);
  id v234 = Logger.logObject.getter();
  os_log_type_t v235 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v234, v235))
  {
    id v236 = (uint8_t *)swift_slowAlloc();
    v282[0] = swift_slowAlloc();
    *(_DWORD *)id v236 = 136315138;
    swift_beginAccess();
    uint64_t v237 = v279;
    unint64_t v238 = v280;
    swift_bridgeObjectRetain();
    uint64_t v276 = sub_10011EA98(v237, v238, v282);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v234, v235, "(syncstats): %s", v236, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  v275((uint64_t)v264, v268);
  id v239 = v281;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return (uint64_t)v239;
}

void sub_100268BF8(uint64_t a1, void *a2, double **a3)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();

  if (!Strong) {
    return;
  }
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void **)(qword_10083D2F8 + 16);
  id v5 = objc_allocWithZone((Class)NSFetchRequest);
  id v6 = v4;
  NSString v7 = String._bridgeToObjectiveC()();
  id v8 = [v5 initWithEntityName:v7];

  __chkstk_darwin(v9);
  NSManagedObjectContext.performAndWait<A>(_:)();

  uint64_t v10 = *(void **)(qword_10083D2F8 + 16);
  id v11 = objc_allocWithZone((Class)NSFetchRequest);
  id v12 = v10;
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v11 initWithEntityName:v13];

  __chkstk_darwin(v15);
  NSManagedObjectContext.performAndWait<A>(_:)();

  uint64_t v16 = *(void **)(qword_10083D2F8 + 16);
  id v17 = objc_allocWithZone((Class)NSFetchRequest);
  id v18 = v16;
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v17 initWithEntityName:v19];

  __chkstk_darwin(v21);
  NSManagedObjectContext.performAndWait<A>(_:)();

  _StringGuts.grow(_:)(37);
  swift_bridgeObjectRelease();
  strcpy((char *)&v132, "Entries:");
  BYTE1(v132._object) = 0;
  WORD1(v132._object) = 0;
  HIDWORD(v132._object) = -402653184;
  v22._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v22);
  swift_bridgeObjectRelease();
  v23._uint64_t countAndFlagsBits = 0x7374657373410920;
  v23._object = (void *)0xE90000000000003ALL;
  String.append(_:)(v23);
  v24._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v24);
  swift_bridgeObjectRelease();
  v25._uint64_t countAndFlagsBits = 0x6863617474410920;
  v25._object = (void *)0xEE003A73746E656DLL;
  String.append(_:)(v25);
  v26._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v26);
  swift_bridgeObjectRelease();
  uint64_t countAndFlagsBits = v132._countAndFlagsBits;
  object = v132._object;
  id v29 = *a3;
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v29;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    id v29 = sub_1002A6AA4(0, *((void *)v29 + 2) + 1, 1, v29);
    *a3 = v29;
  }
  unint64_t v32 = *((void *)v29 + 2);
  unint64_t v31 = *((void *)v29 + 3);
  if (v32 >= v31 >> 1)
  {
    id v29 = sub_1002A6AA4((double *)(v31 > 1), v32 + 1, 1, v29);
    *a3 = v29;
  }
  *((void *)v29 + 2) = v32 + 1;
  Swift::String v33 = &v29[4 * v32];
  strcpy((char *)v33 + 32, "Total count:");
  *((unsigned char *)v33 + 45) = 0;
  *((_WORD *)v33 + 23) = -5120;
  *((void *)v33 + 6) = countAndFlagsBits;
  *((void *)v33 + 7) = object;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)&v132, "\nTotal count: ");
  HIBYTE(v132._object) = -18;
  v34._uint64_t countAndFlagsBits = countAndFlagsBits;
  v34._object = object;
  String.append(_:)(v34);
  swift_bridgeObjectRelease();
  String.append(_:)(v132);
  swift_bridgeObjectRelease();
  id v35 = *(id *)(qword_10083D2F8 + 16);
  unint64_t v36 = sub_1004F2C84(a2);

  id v37 = *(id *)(qword_10083D2F8 + 16);
  unint64_t v38 = sub_10052E220(a2);

  _StringGuts.grow(_:)(25);
  swift_bridgeObjectRelease();
  strcpy((char *)&v132, "Assets:");
  v132._object = (void *)0xE700000000000000;
  if (v36 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v39._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v39);
  swift_bridgeObjectRelease();
  v40._uint64_t countAndFlagsBits = 0x6863617474410920;
  v40._object = (void *)0xEE003A73746E656DLL;
  String.append(_:)(v40);
  if (v38 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v41._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v41);
  swift_bridgeObjectRelease();
  uint64_t v43 = v132._countAndFlagsBits;
  unint64_t v42 = v132._object;
  id v44 = *a3;
  swift_bridgeObjectRetain();
  char v45 = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v44;
  if ((v45 & 1) == 0)
  {
    id v44 = sub_1002A6AA4(0, *((void *)v44 + 2) + 1, 1, v44);
    *a3 = v44;
  }
  unint64_t v47 = *((void *)v44 + 2);
  unint64_t v46 = *((void *)v44 + 3);
  if (v47 >= v46 >> 1)
  {
    id v44 = sub_1002A6AA4((double *)(v46 > 1), v47 + 1, 1, v44);
    *a3 = v44;
  }
  *((void *)v44 + 2) = v47 + 1;
  id v48 = &v44[4 * v47];
  strcpy((char *)v48 + 32, "Emtpy count:");
  *((unsigned char *)v48 + 45) = 0;
  *((_WORD *)v48 + 23) = -5120;
  *((void *)v48 + 6) = v43;
  *((void *)v48 + 7) = v42;
  _StringGuts.grow(_:)(16);
  swift_bridgeObjectRelease();
  strcpy((char *)&v132, "\nEmtpy count: ");
  HIBYTE(v132._object) = -18;
  v49._uint64_t countAndFlagsBits = v43;
  v49._object = v42;
  String.append(_:)(v49);
  swift_bridgeObjectRelease();
  String.append(_:)(v132);
  swift_bridgeObjectRelease();
  id v50 = *(id *)(qword_10083D2F8 + 16);
  unint64_t v51 = sub_10056A7B4(a2, 0, 1);

  id v52 = *(id *)(qword_10083D2F8 + 16);
  unint64_t v53 = sub_10056A564(a2, 0, 1);

  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  strcpy((char *)&v132, "To Save:");
  BYTE1(v132._object) = 0;
  WORD1(v132._object) = 0;
  HIDWORD(v132._object) = -402653184;
  if (v51 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v54._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v54);
  swift_bridgeObjectRelease();
  v55._uint64_t countAndFlagsBits = 0x6C6544206F540920;
  v55._object = (void *)0xEC0000003A657465;
  String.append(_:)(v55);
  if (v53 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v56._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v56);
  swift_bridgeObjectRelease();
  uint64_t v58 = v132._countAndFlagsBits;
  unint64_t v57 = v132._object;
  objc_super v59 = *a3;
  swift_bridgeObjectRetain();
  char v60 = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v59;
  if ((v60 & 1) == 0)
  {
    objc_super v59 = sub_1002A6AA4(0, *((void *)v59 + 2) + 1, 1, v59);
    *a3 = v59;
  }
  unint64_t v62 = *((void *)v59 + 2);
  unint64_t v61 = *((void *)v59 + 3);
  if (v62 >= v61 >> 1)
  {
    objc_super v59 = sub_1002A6AA4((double *)(v61 > 1), v62 + 1, 1, v59);
    *a3 = v59;
  }
  *((void *)v59 + 2) = v62 + 1;
  uint64_t v63 = &v59[4 * v62];
  v63[4] = -2.31584178e77;
  *((void *)v63 + 5) = 0x8000000100694990;
  *((void *)v63 + 6) = v58;
  *((void *)v63 + 7) = v57;
  _StringGuts.grow(_:)(20);
  swift_bridgeObjectRelease();
  v132._uint64_t countAndFlagsBits = 0xD000000000000012;
  v132._object = (void *)0x80000001006949B0;
  v64._uint64_t countAndFlagsBits = v58;
  v64._object = v57;
  String.append(_:)(v64);
  swift_bridgeObjectRelease();
  v65._uint64_t countAndFlagsBits = 0xD000000000000012;
  v65._object = (void *)0x80000001006949B0;
  String.append(_:)(v65);
  swift_bridgeObjectRelease();
  id v66 = *(id *)(qword_10083D2F8 + 16);
  unint64_t v67 = sub_1004F2754(0, 1, a2);

  id v68 = *(id *)(qword_10083D2F8 + 16);
  unint64_t v69 = sub_1004F2518(a2);

  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  strcpy((char *)&v132, "To Save:");
  BYTE1(v132._object) = 0;
  WORD1(v132._object) = 0;
  HIDWORD(v132._object) = -402653184;
  if (v67 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v70._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v70);
  swift_bridgeObjectRelease();
  v71._uint64_t countAndFlagsBits = 0x6C6544206F540920;
  v71._object = (void *)0xEC0000003A657465;
  String.append(_:)(v71);
  if (v69 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v72._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v72);
  swift_bridgeObjectRelease();
  uint64_t v74 = v132._countAndFlagsBits;
  uint64_t v73 = v132._object;
  char v75 = *a3;
  swift_bridgeObjectRetain();
  char v76 = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v75;
  if ((v76 & 1) == 0)
  {
    char v75 = sub_1002A6AA4(0, *((void *)v75 + 2) + 1, 1, v75);
    *a3 = v75;
  }
  unint64_t v78 = *((void *)v75 + 2);
  unint64_t v77 = *((void *)v75 + 3);
  if (v78 >= v77 >> 1)
  {
    char v75 = sub_1002A6AA4((double *)(v77 > 1), v78 + 1, 1, v75);
    *a3 = v75;
  }
  *((void *)v75 + 2) = v78 + 1;
  id v79 = &v75[4 * v78];
  v79[4] = 1.39806869e-152;
  v79[5] = -6.26612061e227;
  *((void *)v79 + 6) = v74;
  *((void *)v79 + 7) = v73;
  _StringGuts.grow(_:)(19);
  swift_bridgeObjectRelease();
  v132._uint64_t countAndFlagsBits = 0xD000000000000011;
  v132._object = (void *)0x80000001006949D0;
  v80._uint64_t countAndFlagsBits = v74;
  v80._object = v73;
  String.append(_:)(v80);
  swift_bridgeObjectRelease();
  v81._uint64_t countAndFlagsBits = 0xD000000000000011;
  v81._object = (void *)0x80000001006949D0;
  String.append(_:)(v81);
  swift_bridgeObjectRelease();
  id v82 = *(id *)(qword_10083D2F8 + 16);
  unint64_t v83 = sub_10052D94C(a2);

  id v84 = *(id *)(qword_10083D2F8 + 16);
  unint64_t v85 = sub_10052D710(a2);

  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  strcpy((char *)&v132, "To Save:");
  BYTE1(v132._object) = 0;
  WORD1(v132._object) = 0;
  HIDWORD(v132._object) = -402653184;
  if (v83 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v86._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v86);
  swift_bridgeObjectRelease();
  v87._uint64_t countAndFlagsBits = 0x6C6544206F540920;
  v87._object = (void *)0xEC0000003A657465;
  String.append(_:)(v87);
  if (v85 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v88._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v88);
  swift_bridgeObjectRelease();
  uint64_t v90 = v132._countAndFlagsBits;
  unint64_t v89 = v132._object;
  id v91 = *a3;
  swift_bridgeObjectRetain();
  char v92 = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v91;
  if ((v92 & 1) == 0)
  {
    id v91 = sub_1002A6AA4(0, *((void *)v91 + 2) + 1, 1, v91);
    *a3 = v91;
  }
  unint64_t v94 = *((void *)v91 + 2);
  unint64_t v93 = *((void *)v91 + 3);
  if (v94 >= v93 >> 1)
  {
    id v91 = sub_1002A6AA4((double *)(v93 > 1), v94 + 1, 1, v91);
    *a3 = v91;
  }
  *((void *)v91 + 2) = v94 + 1;
  id v95 = &v91[4 * v94];
  v95[4] = -2.31584178e77;
  *((void *)v95 + 5) = 0x80000001006949F0;
  *((void *)v95 + 6) = v90;
  *((void *)v95 + 7) = v89;
  _StringGuts.grow(_:)(24);
  swift_bridgeObjectRelease();
  v132._uint64_t countAndFlagsBits = 0xD000000000000016;
  v132._object = (void *)0x8000000100694A10;
  v96._uint64_t countAndFlagsBits = v90;
  v96._object = v89;
  String.append(_:)(v96);
  swift_bridgeObjectRelease();
  v97._uint64_t countAndFlagsBits = 0xD000000000000016;
  v97._object = (void *)0x8000000100694A10;
  String.append(_:)(v97);
  swift_bridgeObjectRelease();
  id v98 = *(id *)(qword_10083D2F8 + 16);
  unint64_t v99 = (unint64_t)sub_1004F2144(a2, 0);

  if (v99 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v100 = _CocoaArrayWrapper.endIndex.getter();
    unint64_t v129 = v99 >> 62;
    if (v100) {
      goto LABEL_42;
    }
  }
  else
  {
    uint64_t v100 = *(void *)((v99 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    unint64_t v129 = 0;
    if (v100)
    {
LABEL_42:
      if (v100 < 1)
      {
        __break(1u);
        return;
      }
      uint64_t v101 = 0;
      id v102 = _swiftEmptyArrayStorage;
      do
      {
        if ((v99 & 0xC000000000000001) != 0) {
          id v103 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v103 = *(id *)(v99 + 8 * v101 + 32);
        }
        unint64_t v104 = v103;
        id v105 = [v103 assetType];
        if (v105)
        {
          id v106 = v105;
          uint64_t v107 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v109 = v108;

          if (v107 == 0x76456B6165727473 && v109 == 0xEB00000000746E65)
          {

            swift_bridgeObjectRelease();
            char v111 = 1;
          }
          else
          {
            char v111 = _stringCompareWithSmolCheck(_:_:expecting:)();

            swift_bridgeObjectRelease();
          }
        }
        else
        {

          char v111 = 0;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          id v102 = (double *)sub_1002A5B20(0, *((void *)v102 + 2) + 1, 1, v102);
        }
        unint64_t v113 = *((void *)v102 + 2);
        unint64_t v112 = *((void *)v102 + 3);
        if (v113 >= v112 >> 1) {
          id v102 = (double *)sub_1002A5B20((void *)(v112 > 1), v113 + 1, 1, v102);
        }
        ++v101;
        *((void *)v102 + 2) = v113 + 1;
        *((unsigned char *)v102 + v113 + 32) = v111 & 1;
      }
      while (v100 != v101);
    }
  }
  swift_bridgeObjectRelease();
  id v114 = *(id *)(qword_10083D2F8 + 16);
  unint64_t v115 = sub_10052D4D8(a2);

  _StringGuts.grow(_:)(47);
  swift_bridgeObjectRelease();
  strcpy((char *)&v132, "TotalAssets:");
  BYTE5(v132._object) = 0;
  HIWORD(v132._object) = -5120;
  if (v129)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v116._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v116);
  swift_bridgeObjectRelease();
  v117._uint64_t countAndFlagsBits = 0x416B616572745309;
  v117._object = (void *)0xEE003A7374657373;
  String.append(_:)(v117);
  swift_bridgeObjectRelease();
  v118._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v118);
  swift_bridgeObjectRelease();
  v119._uint64_t countAndFlagsBits = 0x63617474410A2020;
  v119._object = (void *)0xEF3A73746E656D68;
  String.append(_:)(v119);
  if (v115 >> 62)
  {
    swift_bridgeObjectRetain();
    _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v120._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v120);
  swift_bridgeObjectRelease();
  uint64_t v122 = v132._countAndFlagsBits;
  id v121 = v132._object;
  uint64_t v123 = *a3;
  swift_bridgeObjectRetain();
  char v124 = swift_isUniquelyReferenced_nonNull_native();
  *a3 = v123;
  if ((v124 & 1) == 0)
  {
    uint64_t v123 = sub_1002A6AA4(0, *((void *)v123 + 2) + 1, 1, v123);
    *a3 = v123;
  }
  unint64_t v126 = *((void *)v123 + 2);
  unint64_t v125 = *((void *)v123 + 3);
  if (v126 >= v125 >> 1)
  {
    uint64_t v123 = sub_1002A6AA4((double *)(v125 > 1), v126 + 1, 1, v123);
    *a3 = v123;
  }
  *((void *)v123 + 2) = v126 + 1;
  uint64_t v127 = &v123[4 * v126];
  v127[4] = 3.9240943e-27;
  v127[5] = -9.12488124e192;
  *((void *)v127 + 6) = v122;
  *((void *)v127 + 7) = v121;
  strcpy((char *)&v132, "\nOrphans: ");
  BYTE3(v132._object) = 0;
  HIDWORD(v132._object) = -369098752;
  v128._uint64_t countAndFlagsBits = v122;
  v128._object = v121;
  String.append(_:)(v128);
  swift_bridgeObjectRelease();
  String.append(_:)(v132);
  swift_bridgeObjectRelease();
}

uint64_t sub_100269FC0()
{
  URL.path.getter();
  uint64_t v0 = sub_10026A160();
  char v2 = v1;
  swift_bridgeObjectRelease();
  if (v2) {
    double v3 = 0.0;
  }
  else {
    double v3 = (double)(unint64_t)v0 * 0.000000953674316;
  }
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1006D6280;
  *(void *)(v4 + 56) = &type metadata for Double;
  *(void *)(v4 + 64) = &protocol witness table for Double;
  *(double *)(v4 + 32) = v3;
  uint64_t v5 = String.init(format:_:)();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1006D6280;
  *(void *)(v6 + 56) = &type metadata for Double;
  *(void *)(v6 + 64) = &protocol witness table for Double;
  *(double *)(v6 + 32) = v3 * 0.0009765625;
  uint64_t v7 = String.init(format:_:)();
  uint64_t v9 = v8;
  if (v3 * 0.0009765625 >= 0.1)
  {
    uint64_t v12 = v7;
    uint64_t v16 = v5;
    v13._uint64_t countAndFlagsBits = 673202765;
    v13._object = (void *)0xE400000000000000;
    String.append(_:)(v13);
    v14._uint64_t countAndFlagsBits = v12;
    v14._object = v9;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    uint64_t v10 = 2703943;
    unint64_t v11 = 0xE300000000000000;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v16 = v5;
    uint64_t v10 = 16973;
    unint64_t v11 = 0xE200000000000000;
  }
  String.append(_:)(*(Swift::String *)&v10);
  return v16;
}

uint64_t sub_10026A160()
{
  id v0 = [self defaultManager];
  NSString v1 = String._bridgeToObjectiveC()();
  *(void *)&long long v42 = 0;
  id v39 = v0;
  id v2 = [v0 contentsOfDirectoryAtPath:v1 error:&v42];

  double v3 = (void *)v42;
  if (!v2)
  {
    id v31 = (id)v42;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F6CA0 != -1) {
      goto LABEL_37;
    }
    goto LABEL_30;
  }
  uint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();
  id v5 = v3;

  uint64_t v6 = *(void *)(v4 + 16);
  if (!v6)
  {

    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v7 = 0;
  for (uint64_t i = v4 + 40; ; i += 16)
  {
    swift_bridgeObjectRetain();
    NSString v9 = String._bridgeToObjectiveC()();
    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v11 = [v9 stringByAppendingPathComponent:v10];

    NSString v12 = v11;
    NSString v13 = v11;
    if (!v11)
    {
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v13 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      static String._unconditionallyBridgeFromObjectiveC(_:)();
      NSString v12 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
    }
    uint64_t v14 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v16 = v15;
    v41[0] = 0;
    id v17 = v11;
    unsigned int v18 = [v39 fileExistsAtPath:v13 isDirectory:v41];

    if (!v18)
    {
      swift_bridgeObjectRelease();

      goto LABEL_5;
    }
    if (v41[0] == 1) {
      break;
    }
    swift_bridgeObjectRelease();
    *(void *)&long long v42 = 0;
    id v23 = [v39 attributesOfItemAtPath:v12 error:&v42];

    Swift::String v24 = (void *)v42;
    if (v23)
    {
      type metadata accessor for FileAttributeKey(0);
      sub_10026AA20(&qword_1007F8C50, type metadata accessor for FileAttributeKey);
      uint64_t v25 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
      id v26 = v24;

      if (*(void *)(v25 + 16))
      {
        uint64_t v27 = NSFileSize;
        uint64_t v28 = sub_10001B6A4(v27);
        if (v29)
        {
          sub_10001B648(*(void *)(v25 + 56) + 32 * v28, (uint64_t)&v42);
        }
        else
        {
          long long v42 = 0u;
          long long v43 = 0u;
        }
      }
      else
      {
        long long v42 = 0u;
        long long v43 = 0u;
      }
      swift_bridgeObjectRelease();
      if (*((void *)&v43 + 1))
      {
        if (swift_dynamicCast())
        {
          BOOL v22 = __CFADD__(v7, v40);
          v7 += v40;
          if (v22) {
            goto LABEL_36;
          }
        }
      }
      else
      {
        sub_10001457C((uint64_t)&v42, &qword_1007FAD50);
      }
    }
    else
    {
      id v30 = (id)v42;
      _convertNSErrorToError(_:)();

      swift_willThrow();
      swift_errorRelease();
    }
LABEL_5:
    if (!--v6)
    {

      swift_bridgeObjectRelease();
      return v7;
    }
  }

  uint64_t v19 = sub_10026A160(v14, v16);
  char v21 = v20;
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_5;
  }
  BOOL v22 = __CFADD__(v7, v19);
  v7 += v19;
  if (!v22) {
    goto LABEL_5;
  }
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  swift_once();
LABEL_30:
  uint64_t v32 = type metadata accessor for Logger();
  sub_100026A54(v32, (uint64_t)qword_1008056D0);
  swift_errorRetain();
  swift_errorRetain();
  Swift::String v33 = Logger.logObject.getter();
  os_log_type_t v34 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v33, v34))
  {
    id v35 = (uint8_t *)swift_slowAlloc();
    unint64_t v36 = (void *)swift_slowAlloc();
    *(_DWORD *)id v35 = 138412290;
    swift_errorRetain();
    uint64_t v37 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)&long long v42 = v37;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *unint64_t v36 = v37;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v33, v34, "(directorySize): error%@", v35, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  return 0;
}

id sub_10026A8BC()
{
  return sub_10026A8D4(type metadata accessor for SyncStatsDisplayVC);
}

id sub_10026A8D4(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  [super dealloc];
}

uint64_t type metadata accessor for SyncStatsDisplayVC()
{
  return self;
}

uint64_t type metadata accessor for SyncStatsDisplayVC.SyncStatsCell()
{
  return self;
}

ValueMetadata *type metadata accessor for SyncStatsDisplayVC.SyncDataObject()
{
  return &type metadata for SyncStatsDisplayVC.SyncDataObject;
}

uint64_t sub_10026A974()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10026A9AC()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10026A9EC()
{
  sub_100268BF8(*(void *)(v0 + 16), *(void **)(v0 + 24), *(double ***)(v0 + 32));
}

uint64_t sub_10026A9F8()
{
  return swift_deallocObject();
}

uint64_t sub_10026AA08(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10026AA18()
{
  return swift_release();
}

uint64_t sub_10026AA20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_10026AA68()
{
  id v1 = objc_allocWithZone((Class)type metadata accessor for SyncStatsDisplayVC.SyncStatsCell());
  NSString v2 = String._bridgeToObjectiveC()();
  objc_super v3 = (char *)[v1 initWithStyle:0 reuseIdentifier:v2];

  unint64_t result = IndexPath.row.getter();
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (result < *(void *)(*(void *)(v0 + OBJC_IVAR____TtC7Journal18SyncStatsDisplayVC_dataObjects) + 16))
  {
    id v5 = *(void **)&v3[OBJC_IVAR____TtCC7Journal18SyncStatsDisplayVC13SyncStatsCell_titleLabel];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    NSString v6 = String._bridgeToObjectiveC()();
    [v5 setText:v6];

    uint64_t v7 = *(void **)&v3[OBJC_IVAR____TtCC7Journal18SyncStatsDisplayVC13SyncStatsCell_descriptionLabel];
    NSString v8 = String._bridgeToObjectiveC()();
    [v7 setText:v8];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return (unint64_t)v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_10026ABA8(uint64_t a1)
{
  uint64_t v2 = v1 + *(int *)(a1 + 36);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  sub_100026CCC(*(void *)v2, v4);
  char v5 = sub_100666714(v3, v4);
  sub_100026DF8(v3, v4);
  return v5 & 1;
}

uint64_t sub_10026AC08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v56 = a2;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  __chkstk_darwin(a1);
  uint64_t v7 = *(void *)(v6 + 16);
  uint64_t v45 = *(void *)(v6 + 24);
  uint64_t v8 = type metadata accessor for Button();
  uint64_t v48 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v47 = (char *)&v43 - v9;
  uint64_t v10 = type metadata accessor for ModifiedContent();
  uint64_t v50 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v44 = (char *)&v43 - v11;
  sub_100014440(&qword_1007FCBC8);
  uint64_t v51 = type metadata accessor for ModifiedContent();
  uint64_t v55 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  unint64_t v46 = (char *)&v43 - v12;
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v13 = type metadata accessor for ModifiedContent();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v53 = v13;
  uint64_t v54 = v14;
  __chkstk_darwin(v13);
  Swift::String v49 = (char *)&v43 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __n128 v17 = __chkstk_darwin(v16);
  id v52 = (char *)&v43 - v18;
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v4 + 16))((char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1, v17);
  unint64_t v19 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v20 = swift_allocObject();
  uint64_t v21 = v7;
  *(void *)(v20 + 16) = v7;
  uint64_t v22 = v45;
  *(void *)(v20 + 24) = v45;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v20 + v19, (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  uint64_t v57 = v21;
  uint64_t v58 = v22;
  uint64_t v59 = v2;
  id v23 = v47;
  Button.init(action:label:)();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v25 = v44;
  sub_10047FDA0();
  (*(void (**)(char *, uint64_t))(v48 + 8))(v23, v8);
  sub_10026ABA8(a1);
  unint64_t v26 = sub_10026CB5C();
  uint64_t v64 = WitnessTable;
  unint64_t v65 = v26;
  uint64_t v27 = swift_getWitnessTable();
  uint64_t v28 = v46;
  View.disabled(_:)();
  (*(void (**)(char *, uint64_t))(v50 + 8))(v25, v10);
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t v29 = Text.init(_:tableName:bundle:comment:)();
  uint64_t v31 = v30;
  LOBYTE(v19) = v32 & 1;
  unint64_t v33 = sub_10026CBB0();
  uint64_t v62 = v27;
  unint64_t v63 = v33;
  uint64_t v34 = v51;
  uint64_t v35 = swift_getWitnessTable();
  unint64_t v36 = v49;
  View.accessibilityLabel(_:)();
  sub_10002B8D0(v29, v31, v19);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v55 + 8))(v28, v34);
  unint64_t v37 = sub_1000B3AF4();
  uint64_t v60 = v35;
  unint64_t v61 = v37;
  uint64_t v38 = v53;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = v52;
  sub_1000B29EC(v36, v38, v39);
  Swift::String v41 = *(void (**)(char *, uint64_t))(v54 + 8);
  v41(v36, v38);
  sub_1000B29EC(v40, v38, v39);
  return ((uint64_t (*)(char *, uint64_t))v41)(v40, v38);
}

uint64_t sub_10026B20C()
{
  uint64_t v0 = type metadata accessor for DismissAction();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100667080((uint64_t)v3);
  DismissAction.callAsFunction()();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_10026B2D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for CloseButton();
  sub_1000B29EC(a1 + *(int *)(v9 + 40), a2, a3);
  sub_1000B29EC(v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_10026B3D4@<X0>(uint64_t a1@<X8>)
{
  LocalizedStringKey.init(stringLiteral:)();
  uint64_t result = Text.init(_:tableName:bundle:comment:)();
  *(void *)a1 = result;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = v4 & 1;
  *(void *)(a1 + 24) = v5;
  return result;
}

uint64_t sub_10026B44C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = Image.init(systemName:)();
  *a1 = result;
  return result;
}

uint64_t sub_10026B484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

void sub_10026B48C()
{
  sub_10026C8C4();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_10026B560(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DismissAction();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(void *)(v7 + 64) <= 8uLL) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  unsigned int v12 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v12 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || (((v8 & 0xFFFFFFFFFFFFFFF8) + v11 + 17) & ~v11) + *(void *)(*(void *)(v9 - 8) + 64) > 0x18)
  {
    uint64_t v15 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v15 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    unsigned int v16 = a2[v8];
    unsigned int v17 = v16 - 2;
    if (v16 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v18 = v8;
      }
      else {
        uint64_t v18 = 4;
      }
      switch(v18)
      {
        case 1:
          int v19 = *a2;
          if (v8 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 2:
          int v19 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_25;
          }
          goto LABEL_23;
        case 3:
          int v19 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 4:
          int v19 = *(_DWORD *)a2;
          if (v8 < 4) {
LABEL_23:
          }
            unsigned int v16 = (v19 | (v17 << (8 * v8))) + 2;
          else {
LABEL_25:
          }
            unsigned int v16 = v19 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v20 = v8 + 1;
    if (v16 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      char v21 = 1;
    }
    else
    {
      *a1 = *(void *)a2;
      swift_retain();
      char v21 = 0;
    }
    *((unsigned char *)a1 + v8) = v21;
    unint64_t v22 = ((unint64_t)a1 + v20 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v23 = (unint64_t)&a2[v20 + 7] & 0xFFFFFFFFFFFFFFF8;
    uint64_t v24 = *(void *)v23;
    char v25 = *(unsigned char *)(v23 + 8);
    sub_100026CCC(*(void *)v23, v25);
    *(void *)unint64_t v22 = v24;
    *(unsigned char *)(v22 + 8) = v25;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))((v22 + v11 + 9) & ~v11, (v23 + v11 + 9) & ~v11, v9);
  }
  return a1;
}

uint64_t sub_10026B7F8(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DismissAction();
  if (*(void *)(*(void *)(v4 - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v6 = a1[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else {
    swift_release();
  }
  unint64_t v11 = (unint64_t)&a1[v5 + 8] & 0xFFFFFFFFFFFFFFF8;
  sub_100026DF8(*(void *)v11, *(unsigned char *)(v11 + 8));
  uint64_t v12 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v13 = *(uint64_t (**)(unint64_t))(v12 + 8);
  unint64_t v14 = (v11 + *(unsigned __int8 *)(v12 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);

  return v13(v14);
}

void *sub_10026B994(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DismissAction();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)a2;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    char v13 = 1;
  }
  else
  {
    *a1 = *(void *)a2;
    swift_retain();
    char v13 = 0;
  }
  *((unsigned char *)a1 + v7) = v13;
  unint64_t v14 = ((unint64_t)a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (unint64_t)&a2[v7 + 8] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = *(void *)v15;
  char v17 = *(unsigned char *)(v15 + 8);
  sub_100026CCC(*(void *)v15, v17);
  *(void *)unint64_t v14 = v16;
  *(unsigned char *)(v14 + 8) = v17;
  uint64_t v18 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v18 + 16))((*(unsigned __int8 *)(v18 + 80) + 9 + v14) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80), (*(unsigned __int8 *)(v18 + 80) + 9 + v15) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80));
  return a1;
}

unsigned __int8 *sub_10026BB68(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      a1[v8] = 1;
    }
    else
    {
LABEL_36:
      *(void *)a1 = *(void *)a2;
      a1[v8] = 0;
      swift_retain();
    }
  }
  unint64_t v17 = *(void *)(*(void *)(type metadata accessor for DismissAction() - 8) + 64);
  if (v17 <= 8) {
    unint64_t v17 = 8;
  }
  unint64_t v18 = v17 + 8;
  unint64_t v19 = (unint64_t)&a1[v18] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (unint64_t)&a2[v18] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v21 = *(void *)v20;
  char v22 = *(unsigned char *)(v20 + 8);
  sub_100026CCC(*(void *)v20, v22);
  uint64_t v23 = *(void *)v19;
  char v24 = *(unsigned char *)(v19 + 8);
  *(void *)unint64_t v19 = v21;
  *(unsigned char *)(v19 + 8) = v22;
  sub_100026DF8(v23, v24);
  uint64_t v25 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v25 + 24))((*(unsigned __int8 *)(v25 + 80) + 9 + v19) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), (*(unsigned __int8 *)(v25 + 80) + 9 + v20) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
  return a1;
}

void *sub_10026BE70(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for DismissAction();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        goto LABEL_13;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v11 = *(_DWORD *)a2;
LABEL_13:
        int v12 = (v11 | (v9 << (8 * v7))) + 2;
        unsigned int v8 = v11 + 2;
        if (v7 < 4) {
          unsigned int v8 = v12;
        }
        break;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    char v13 = 1;
  }
  else
  {
    char v13 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v7) = v13;
  unint64_t v14 = ((unint64_t)a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v15 = (unint64_t)&a2[v7 + 8] & 0xFFFFFFFFFFFFFFF8;
  uint64_t v16 = *(void *)v15;
  *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
  *(void *)unint64_t v14 = v16;
  uint64_t v17 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v17 + 32))((*(unsigned __int8 *)(v17 + 80) + 9 + v14) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80), (*(unsigned __int8 *)(v17 + 80) + 9 + v15) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
  return a1;
}

unsigned __int8 *sub_10026C02C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = type metadata accessor for DismissAction();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      char v17 = 1;
    }
    else
    {
LABEL_36:
      char v17 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v8] = v17;
  }
  unint64_t v18 = *(void *)(*(void *)(type metadata accessor for DismissAction() - 8) + 64);
  if (v18 <= 8) {
    unint64_t v18 = 8;
  }
  unint64_t v19 = v18 + 8;
  unint64_t v20 = (unint64_t)&a1[v19] & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (unint64_t)&a2[v19] & 0xFFFFFFFFFFFFFFF8;
  char v22 = *(unsigned char *)(v21 + 8);
  uint64_t v23 = *(void *)v20;
  char v24 = *(unsigned char *)(v20 + 8);
  *(void *)unint64_t v20 = *(void *)v21;
  *(unsigned char *)(v20 + 8) = v22;
  sub_100026DF8(v23, v24);
  uint64_t v25 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v25 + 40))((*(unsigned __int8 *)(v25 + 80) + 9 + v20) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80), (*(unsigned __int8 *)(v25 + 80) + 9 + v21) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
  return a1;
}

uint64_t sub_10026C324(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(*(void *)(type metadata accessor for DismissAction() - 8) + 64);
  uint64_t v7 = 8;
  if (v6 > 8) {
    uint64_t v7 = v6;
  }
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= 0xFE) {
    unsigned int v11 = 254;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v11) {
    goto LABEL_27;
  }
  unint64_t v12 = (((v7 & 0xFFFFFFFFFFFFFFF8) + v10 + 17) & ~v10) + *(void *)(v8 + 64);
  char v13 = 8 * v12;
  if (v12 <= 3)
  {
    unsigned int v16 = ((a2 - v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v16))
    {
      int v14 = *(_DWORD *)((char *)a1 + v12);
      if (!v14) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v16 > 0xFF)
    {
      int v14 = *(unsigned __int16 *)((char *)a1 + v12);
      if (!*(unsigned __int16 *)((char *)a1 + v12)) {
        goto LABEL_27;
      }
      goto LABEL_17;
    }
    if (v16 < 2)
    {
LABEL_27:
      if (v9 > 0xFE)
      {
        unint64_t v21 = *(uint64_t (**)(unint64_t))(v8 + 48);
        return v21(((((unint64_t)a1 + v7 + 8) & 0xFFFFFFFFFFFFFFF8) + v10 + 9) & ~v10);
      }
      else
      {
        unsigned int v20 = *((unsigned __int8 *)a1 + v7);
        if (v20 >= 2) {
          return (v20 ^ 0xFF) + 1;
        }
        else {
          return 0;
        }
      }
    }
  }
  int v14 = *((unsigned __int8 *)a1 + v12);
  if (!*((unsigned char *)a1 + v12)) {
    goto LABEL_27;
  }
LABEL_17:
  int v17 = (v14 - 1) << v13;
  if (v12 > 3) {
    int v17 = 0;
  }
  if (v12)
  {
    if (v12 <= 3) {
      int v18 = v12;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v11 + (v19 | v17) + 1;
}

void sub_10026C54C(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unint64_t v8 = *(void *)(*(void *)(type metadata accessor for DismissAction() - 8) + 64);
  uint64_t v9 = 8;
  if (v8 > 8) {
    uint64_t v9 = v8;
  }
  uint64_t v10 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  if (v11 <= 0xFE) {
    unsigned int v13 = 254;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  size_t v14 = (((v9 & 0xFFFFFFFFFFFFFFF8) + v12 + 17) & ~v12) + *(void *)(v10 + 64);
  if (a3 <= v13)
  {
    int v15 = 0;
  }
  else if (v14 <= 3)
  {
    unsigned int v19 = ((a3 - v13 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
    if (HIWORD(v19))
    {
      int v15 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v15 = 2;
    }
    else
    {
      int v15 = v19 > 1;
    }
  }
  else
  {
    int v15 = 1;
  }
  if (v13 < a2)
  {
    unsigned int v16 = ~v13 + a2;
    if (v14 < 4)
    {
      int v17 = (v16 >> (8 * v14)) + 1;
      if (v14)
      {
        int v20 = v16 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v16;
      int v17 = 1;
    }
    switch(v15)
    {
      case 1:
        a1[v14] = v17;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v17;
        return;
      case 3:
        goto LABEL_54;
      case 4:
        *(_DWORD *)&a1[v14] = v17;
        return;
      default:
        return;
    }
  }
  size_t v18 = v9 + 1;
  switch(v15)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_54:
      __break(1u);
      JUMPOUT(0x10026C874);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v11 > 0xFE)
        {
          unint64_t v21 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
          v21((((unint64_t)&a1[v18 + 7] & 0xFFFFFFFFFFFFFFF8) + v12 + 9) & ~v12, a2);
        }
        else if (a2 > 0xFE)
        {
          if (v18 <= 3) {
            int v22 = ~(-1 << (8 * v18));
          }
          else {
            int v22 = -1;
          }
          if (v9 != -1)
          {
            int v23 = v22 & (a2 - 255);
            if (v18 <= 3) {
              int v24 = v9 + 1;
            }
            else {
              int v24 = 4;
            }
            bzero(a1, v18);
            switch(v24)
            {
              case 2:
                *(_WORD *)a1 = v23;
                break;
              case 3:
                *(_WORD *)a1 = v23;
                a1[2] = BYTE2(v23);
                break;
              case 4:
                *(_DWORD *)a1 = v23;
                break;
              default:
                *a1 = v23;
                break;
            }
          }
        }
        else
        {
          a1[v9] = -(char)a2;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for CloseButton()
{
  return sub_100073C20();
}

void sub_10026C8C4()
{
  if (!qword_1008057D0)
  {
    type metadata accessor for DismissAction();
    unint64_t v0 = type metadata accessor for Environment.Content();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1008057D0);
    }
  }
}

uint64_t sub_10026C91C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10026C960()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = type metadata accessor for CloseButton();
  unint64_t v3 = (*(unsigned __int8 *)(*(void *)(v2 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v2 - 8) + 80);
  uint64_t v4 = v0 + v3;
  sub_100010218((uint64_t *)&unk_1008156D0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v5 = type metadata accessor for DismissAction();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  }
  else
  {
    swift_release();
  }
  sub_100026DF8(*(void *)(v4 + *(int *)(v2 + 36)), *(unsigned char *)(v4 + *(int *)(v2 + 36) + 8));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v4 + *(int *)(v2 + 40), v1);

  return swift_deallocObject();
}

uint64_t sub_10026CACC()
{
  type metadata accessor for CloseButton();

  return sub_10026B20C();
}

uint64_t sub_10026CB50()
{
  return sub_10026B2D8(v0[4], v0[2], v0[3]);
}

unint64_t sub_10026CB5C()
{
  unint64_t result = qword_1008057D8;
  if (!qword_1008057D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008057D8);
  }
  return result;
}

unint64_t sub_10026CBB0()
{
  unint64_t result = qword_1007FCBC0;
  if (!qword_1007FCBC0)
  {
    sub_100014440(&qword_1007FCBC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1007FCBC0);
  }
  return result;
}

uint64_t sub_10026CC0C()
{
  return swift_getWitnessTable();
}

Class sub_10026CD20(uint64_t a1)
{
  uint64_t v1 = *(uint64_t (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  uint64_t v3 = v1(v2);
  swift_release();
  if (v3)
  {
    sub_10001B284(0, (unint64_t *)&unk_100800920);
    v4.super.Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
  }
  else
  {
    v4.super.Class isa = 0;
  }

  return v4.super.isa;
}

uint64_t sub_10026CDBC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1008057E0);
  sub_100026A54(v0, (uint64_t)qword_1008057E0);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10026CEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v7[90] = v6;
  v7[89] = a6;
  v7[88] = a5;
  v7[87] = a4;
  v7[86] = a3;
  v7[85] = a2;
  v7[84] = a1;
  sub_100010218(&qword_100800950);
  v7[91] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for Date();
  v7[92] = v8;
  v7[93] = *(void *)(v8 - 8);
  v7[94] = swift_task_alloc();
  v7[95] = swift_task_alloc();
  v7[96] = swift_task_alloc();
  v7[97] = swift_task_alloc();
  v7[98] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for AssetAnalytics.AssetTransferEvent(0);
  v7[99] = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  v7[100] = v10;
  v7[101] = *(void *)(v10 + 64);
  v7[102] = swift_task_alloc();
  v7[103] = swift_task_alloc();
  v7[104] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for UUID();
  v7[105] = v11;
  v7[106] = *(void *)(v11 - 8);
  v7[107] = swift_task_alloc();
  v7[108] = swift_task_alloc();
  v7[109] = swift_task_alloc();
  v7[110] = swift_task_alloc();
  return _swift_task_switch(sub_10026D0F8, 0, 0);
}

uint64_t sub_10026D0F8()
{
  uint64_t v1 = *(void *)(v0 + 880);
  uint64_t v2 = *(void *)(v0 + 848);
  uint64_t v3 = *(void *)(v0 + 840);
  uint64_t v4 = *(void *)(v0 + 720);
  id v5 = [*(id *)(v0 + 672) suggestionIdentifier];
  static UUID._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v6 = UUID.uuidString.getter();
  uint64_t v8 = v7;
  uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  *(void *)(v0 + 888) = v9;
  *(void *)(v0 + 896) = (v2 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  uint64_t v43 = v9;
  v9(v1, v3);
  v10._uint64_t countAndFlagsBits = v6;
  v10._object = v8;
  String.append(_:)(v10);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 93;
  v11._object = (void *)0xE100000000000000;
  String.append(_:)(v11);
  *(void *)(v0 + 904) = 91;
  *(void *)(v0 + 912) = 0xE100000000000000;
  uint64_t v12 = (void *)swift_allocObject();
  *(void *)(v0 + 920) = v12;
  v12[2] = 91;
  void v12[3] = 0xE100000000000000;
  v12[4] = v4;
  uint64_t v13 = (void *)swift_allocObject();
  *(void *)(v0 + 928) = v13;
  v13[2] = 91;
  v13[3] = 0xE100000000000000;
  v13[4] = v4;
  swift_bridgeObjectRetain_n();
  UUID.init()();
  if (qword_1007F6F60 != -1) {
    swift_once();
  }
  uint64_t v14 = *(void *)(v0 + 880);
  int v15 = *(char **)(v0 + 864);
  uint64_t v16 = *(void *)(v0 + 840);
  int v17 = *(void **)(v0 + 832);
  size_t v18 = *(int **)(v0 + 792);
  uint64_t v41 = *(void *)(v0 + 784);
  uint64_t v42 = v16;
  unsigned int v19 = *(void **)(v0 + 744);
  uint64_t v20 = *(void *)(v0 + 736);
  uint64_t v47 = *(void *)(v0 + 680);
  uint64_t v48 = *(void *)(v0 + 856);
  id v44 = (void (**)(char *))(*(void *)(v0 + 848) + 16);
  uint64_t v45 = *(void *)(v0 + 872);
  unint64_t v46 = *v44;
  (*v44)(v15);
  swift_beginAccess();
  sub_10054B934(v14, v15);
  swift_endAccess();
  v43(v14, v16);
  *int v17 = 0;
  v17[1] = 0;
  uint64_t v21 = (uint64_t)v17 + v18[5];
  int v22 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v19[7];
  *(void *)(v0 + 936) = v22;
  *(void *)(v0 + 944) = (unint64_t)(v19 + 7) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v22(v21, 1, 1, v20);
  uint64_t v23 = type metadata accessor for AssetAnalytics.AssetTransferEvent.TimeRange(0);
  *(void *)(v0 + 952) = v23;
  v22(v21 + *(int *)(v23 + 20), 1, 1, v20);
  int v24 = (char *)v17 + v18[6];
  v22((uint64_t)v24, 1, 1, v20);
  v22((uint64_t)&v24[*(int *)(v23 + 20)], 1, 1, v20);
  uint64_t v25 = (char *)v17 + v18[7];
  v22((uint64_t)v25, 1, 1, v20);
  v22((uint64_t)&v25[*(int *)(v23 + 20)], 1, 1, v20);
  *(void *)(v0 + 656) = 0;
  *(unsigned char *)(v0 + 664) = 1;
  Date.init()();
  sub_10001457C(v21, (uint64_t *)&unk_1007FC470);
  unint64_t v26 = (void (*)(uint64_t, uint64_t, uint64_t))v19[2];
  *(void *)(v0 + 960) = v26;
  *(void *)(v0 + 968) = (unint64_t)(v19 + 2) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v26(v21, v41, v20);
  v22(v21, 0, 1, v20);
  uint64_t v27 = (void (*)(uint64_t, uint64_t))v19[1];
  *(void *)(v0 + 976) = v27;
  *(void *)(v0 + 984) = (unint64_t)(v19 + 1) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v27(v41, v20);
  ((void (*)(uint64_t, uint64_t, uint64_t))v46)(v48, v45, v42);
  uint64_t v28 = *(void **)(v47 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
  if (!v28)
  {
    unint64_t v32 = 0xE000000000000000;
LABEL_10:
    if ((v32 & 0xF00000000000000) == 0) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
  id v29 = [v28 string];
  uint64_t v30 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v32 = v31;

  swift_bridgeObjectRelease();
  if ((v32 & 0x2000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((v30 & 0xFFFFFFFFFFFFLL) == 0)
  {
LABEL_6:
    uint64_t v33 = *(void *)(v0 + 672);
    Swift::String v49 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_10080C668 + dword_10080C668);
    uint64_t v34 = (void *)swift_task_alloc();
    *(void *)(v0 + 992) = v34;
    *uint64_t v34 = v0;
    v34[1] = sub_10026D684;
    uint64_t v35 = *(void *)(v0 + 680);
    return v49(v33, v35);
  }
LABEL_11:
  uint64_t v50 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_10080C738
                                                                                     + dword_10080C738);
  unint64_t v37 = (void *)swift_task_alloc();
  *(void *)(v0 + 1008) = v37;
  *unint64_t v37 = v0;
  v37[1] = sub_10026D9CC;
  uint64_t v38 = *(void *)(v0 + 928);
  uint64_t v39 = *(void *)(v0 + 920);
  uint64_t v40 = *(void *)(v0 + 672);
  return v50(v0 + 16, v40, (uint64_t)sub_10026F148, v39, (uint64_t)sub_10026F178, v38);
}

uint64_t sub_10026D684()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(int **)(*v0 + 688);
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))((char *)v2 + *v2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v1 + 1000) = v4;
  *uint64_t v4 = v3;
  v4[1] = sub_10026D818;
  return v6();
}

uint64_t sub_10026D818()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = (void *)*v0;
  swift_task_dealloc();
  uint64_t v8 = (char *)&dword_10080C738 + dword_10080C738;
  uint64_t v3 = (void *)swift_task_alloc();
  v1[126] = v3;
  *uint64_t v3 = v2;
  v3[1] = sub_10026D9CC;
  uint64_t v4 = v1[116];
  uint64_t v5 = v1[115];
  uint64_t v6 = v1[84];
  return ((uint64_t (*)(void *, uint64_t, void (*)(uint64_t, unint64_t), uint64_t, void (*)(uint64_t, unint64_t), uint64_t))v8)(v1 + 2, v6, sub_10026F148, v5, sub_10026F178, v4);
}

uint64_t sub_10026D9CC()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_10026DAC8, 0, 0);
}

uint64_t sub_10026DAC8()
{
  sub_10002C4EC(v0 + 16, v0 + 160, &qword_100805898);
  if (*(void *)(v0 + 184))
  {
    uint64_t v47 = *(void (**)(uint64_t, uint64_t))(v0 + 976);
    id v44 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 960);
    unint64_t v46 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 936);
    uint64_t v1 = *(void *)(v0 + 832);
    uint64_t v43 = *(void *)(v0 + 792);
    uint64_t v2 = *(void *)(v0 + 784);
    uint64_t v3 = *(void *)(v0 + 736);
    long long v4 = *(_OWORD *)(v0 + 208);
    *(_OWORD *)(v0 + 120) = *(_OWORD *)(v0 + 192);
    *(_OWORD *)(v0 + 136) = v4;
    *(void *)(v0 + 152) = *(void *)(v0 + 224);
    long long v5 = *(_OWORD *)(v0 + 176);
    *(_OWORD *)(v0 + 88) = *(_OWORD *)(v0 + 160);
    *(_OWORD *)(v0 + 104) = v5;
    *(void *)(v0 + 1016) = type metadata accessor for SuggestionUtil();
    uint64_t v6 = *(void *)(v0 + 136);
    swift_beginAccess();
    *(void *)(v0 + 656) = v6;
    *(unsigned char *)(v0 + 664) = 0;
    sub_10002C4EC(v0 + 144, v0 + 640, &qword_100803920);
    swift_beginAccess();
    sub_1002713BC(v0 + 640);
    swift_bridgeObjectRelease();
    sub_10002C4EC(v0 + 640, v1, &qword_100803920);
    Date.init()();
    uint64_t v7 = v1 + *(int *)(v43 + 24);
    sub_10001457C(v7, (uint64_t *)&unk_1007FC470);
    v44(v7, v2, v3);
    v46(v7, 0, 1, v3);
    swift_endAccess();
    v47(v2, v3);
    *(unsigned char *)(v0 + 665) = -1;
    *(_OWORD *)(v0 + 1024) = 0u;
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 1040) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_10026E16C;
    uint64_t v9 = *(void *)(v0 + 928);
    uint64_t v10 = *(void *)(v0 + 920);
    uint64_t v11 = *(void *)(v0 + 680);
    uint64_t v12 = *(void *)(v0 + 672);
    return sub_1003F4600(v0 + 88, v12, v11, 0, (uint64_t)sub_10026F148, v10, (uint64_t)sub_10026F178, v9);
  }
  else
  {
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 960);
    uint64_t v15 = *(void *)(v0 + 952);
    uint64_t v45 = v15;
    uint64_t v16 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 936);
    uint64_t v17 = *(void *)(v0 + 832);
    uint64_t v18 = *(void *)(v0 + 792);
    uint64_t v19 = *(void *)(v0 + 752);
    uint64_t v20 = *(void *)(v0 + 736);
    swift_bridgeObjectRelease();
    Date.init()();
    swift_beginAccess();
    uint64_t v21 = v17 + *(int *)(v18 + 24) + *(int *)(v15 + 20);
    sub_10001457C(v21, (uint64_t *)&unk_1007FC470);
    v14(v21, v19, v20);
    v16(v21, 0, 1, v20);
    uint64_t v22 = v17 + *(int *)(v18 + 20) + *(int *)(v45 + 20);
    sub_10001457C(v22, (uint64_t *)&unk_1007FC470);
    v14(v22, v19, v20);
    v16(v22, 0, 1, v20);
    swift_beginAccess();
    if ((*(unsigned char *)(v0 + 664) & 1) == 0)
    {
      uint64_t v23 = *(void *)(v0 + 824);
      uint64_t v24 = *(void *)(v0 + 816);
      uint64_t v25 = *(void *)(v0 + 800);
      uint64_t v26 = *(void *)(v0 + 656);
      sub_1002712D4(*(void *)(v0 + 832), v23);
      NSString v27 = String._bridgeToObjectiveC()();
      sub_1002712D4(v23, v24);
      unint64_t v28 = (*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
      uint64_t v29 = swift_allocObject();
      *(void *)(v29 + 16) = v26;
      *(void *)(v29 + 24) = v26;
      sub_10027133C(v24, v29 + v28);
      *(void *)(v0 + 264) = sub_1002713A0;
      *(void *)(v0 + 272) = v29;
      *(void *)(v0 + 232) = _NSConcreteStackBlock;
      *(void *)(v0 + 240) = 1107296256;
      *(void *)(v0 + 248) = sub_10026CD20;
      *(void *)(v0 + 256) = &unk_1007A1938;
      uint64_t v30 = _Block_copy((const void *)(v0 + 232));
      swift_release();
      AnalyticsSendEventLazy();
      _Block_release(v30);

      sub_100271278(v23);
    }
    uint64_t v31 = *(void *)(v0 + 856);
    uint64_t v32 = *(void *)(v0 + 728);
    swift_beginAccess();
    sub_10026F338(v31, v32);
    swift_endAccess();
    sub_10001457C(v32, &qword_100800950);
    if (qword_1007F6C18 != -1) {
      swift_once();
    }
    uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v0 + 976);
    unint64_t v34 = *(void *)(v0 + 912);
    uint64_t v35 = *(void *)(v0 + 904);
    uint64_t v36 = *(void *)(v0 + 752);
    uint64_t v37 = *(void *)(v0 + 736);
    sub_100241410();
    sub_1002714B4(0xD000000000000014, 0x8000000100694A90, v35, v34, (uint64_t (*)(void))&static os_log_type_t.default.getter);
    v33(v36, v37);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t v38 = *(void (**)(uint64_t, uint64_t))(v0 + 888);
    uint64_t v39 = *(void *)(v0 + 872);
    uint64_t v40 = *(void *)(v0 + 840);
    uint64_t v41 = *(void *)(v0 + 832);
    v38(*(void *)(v0 + 856), v40);
    v38(v39, v40);
    sub_100271278(v41);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v42 = *(uint64_t (**)(void))(v0 + 8);
    return v42(0);
  }
}

uint64_t sub_10026E16C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = *v3;
  *(void *)(v4 + 1048) = a1;
  *(void *)(v4 + 1056) = a2;
  *(unsigned char *)(v4 + 666) = a3;
  swift_task_dealloc();
  return _swift_task_switch(sub_10026E274, 0, 0);
}

uint64_t sub_10026E274()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 666);
  if (v1 >= 2)
  {
    if (v1 == 255)
    {
      uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 960);
      uint64_t v9 = *(void *)(v0 + 952);
      uint64_t v92 = v9;
      uint64_t v10 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 936);
      uint64_t v11 = *(void *)(v0 + 832);
      uint64_t v12 = *(void *)(v0 + 792);
      uint64_t v13 = *(void *)(v0 + 760);
      uint64_t v14 = *(void *)(v0 + 736);
      swift_bridgeObjectRelease();
      Date.init()();
      uint64_t v15 = v11 + *(int *)(v12 + 24) + *(int *)(v9 + 20);
      sub_10001457C(v15, (uint64_t *)&unk_1007FC470);
      v8(v15, v13, v14);
      v10(v15, 0, 1, v14);
      uint64_t v16 = v11 + *(int *)(v12 + 20) + *(int *)(v92 + 20);
      sub_10001457C(v16, (uint64_t *)&unk_1007FC470);
      v8(v16, v13, v14);
      v10(v16, 0, 1, v14);
      if ((*(unsigned char *)(v0 + 664) & 1) == 0)
      {
        uint64_t v17 = *(void *)(v0 + 824);
        uint64_t v18 = *(void *)(v0 + 816);
        uint64_t v19 = *(void *)(v0 + 800);
        uint64_t v20 = *(void *)(v0 + 656);
        sub_1002712D4(*(void *)(v0 + 832), v17);
        NSString v21 = String._bridgeToObjectiveC()();
        sub_1002712D4(v17, v18);
        unint64_t v22 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
        uint64_t v23 = swift_allocObject();
        *(void *)(v23 + 16) = v20;
        *(void *)(v23 + 24) = v20;
        sub_10027133C(v18, v23 + v22);
        *(void *)(v0 + 360) = sub_1002713A0;
        *(void *)(v0 + 368) = v23;
        *(void *)(v0 + 328) = _NSConcreteStackBlock;
        *(void *)(v0 + 336) = 1107296256;
        *(void *)(v0 + 344) = sub_10026CD20;
        *(void *)(v0 + 352) = &unk_1007A1988;
        uint64_t v24 = _Block_copy((const void *)(v0 + 328));
        swift_release();
        AnalyticsSendEventLazy();
        _Block_release(v24);

        sub_100271278(v17);
      }
      uint64_t v25 = *(void *)(v0 + 856);
      uint64_t v26 = *(void *)(v0 + 728);
      swift_beginAccess();
      sub_10026F338(v25, v26);
      swift_endAccess();
      sub_10001457C(v26, &qword_100800950);
      if (qword_1007F6C18 != -1) {
        swift_once();
      }
      NSString v27 = *(void (**)(uint64_t, uint64_t))(v0 + 976);
      unint64_t v28 = *(void *)(v0 + 912);
      uint64_t v29 = *(void *)(v0 + 904);
      uint64_t v30 = *(void *)(v0 + 760);
      uint64_t v31 = *(void *)(v0 + 736);
      sub_100241410();
      sub_1002714B4(0xD000000000000014, 0x8000000100694A90, v29, v28, (uint64_t (*)(void))&static os_log_type_t.default.getter);
      v27(v30, v31);
      unsigned int v91 = 0;
      goto LABEL_43;
    }
    if (*(_OWORD *)(v0 + 1048) != 0)
    {
      uint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 960);
      uint64_t v33 = *(void *)(v0 + 952);
      unint64_t v34 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 936);
      uint64_t v35 = *(void *)(v0 + 832);
      uint64_t v36 = *(void *)(v0 + 792);
      uint64_t v37 = *(void *)(v0 + 776);
      uint64_t v38 = *(void *)(v0 + 736);
      sub_1002714B4(0xD000000000000045, 0x8000000100694AF0, *(void *)(v0 + 904), *(void *)(v0 + 912), (uint64_t (*)(void))&static os_log_type_t.default.getter);
      swift_bridgeObjectRelease();
      Date.init()();
      uint64_t v39 = v35 + *(int *)(v36 + 24) + *(int *)(v33 + 20);
      sub_10001457C(v39, (uint64_t *)&unk_1007FC470);
      v32(v39, v37, v38);
      v34(v39, 0, 1, v38);
      uint64_t v40 = v35 + *(int *)(v36 + 20) + *(int *)(v33 + 20);
      sub_10001457C(v40, (uint64_t *)&unk_1007FC470);
      v32(v40, v37, v38);
      v34(v40, 0, 1, v38);
      if ((*(unsigned char *)(v0 + 664) & 1) == 0)
      {
        uint64_t v41 = *(void *)(v0 + 824);
        uint64_t v42 = *(void *)(v0 + 816);
        uint64_t v43 = *(void *)(v0 + 800);
        uint64_t v44 = *(void *)(v0 + 656);
        sub_1002712D4(*(void *)(v0 + 832), v41);
        NSString v45 = String._bridgeToObjectiveC()();
        sub_1002712D4(v41, v42);
        unint64_t v46 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
        uint64_t v47 = swift_allocObject();
        *(void *)(v47 + 16) = v44;
        *(void *)(v47 + 24) = v44;
        sub_10027133C(v42, v47 + v46);
        *(void *)(v0 + 312) = sub_1002713A0;
        *(void *)(v0 + 320) = v47;
        *(void *)(v0 + 280) = _NSConcreteStackBlock;
        *(void *)(v0 + 288) = 1107296256;
        *(void *)(v0 + 296) = sub_10026CD20;
        *(void *)(v0 + 304) = &unk_1007A19D8;
        uint64_t v48 = _Block_copy((const void *)(v0 + 280));
        swift_release();
        AnalyticsSendEventLazy();
        _Block_release(v48);

        sub_100271278(v41);
      }
      uint64_t v49 = *(void *)(v0 + 856);
      uint64_t v50 = *(void *)(v0 + 728);
      swift_beginAccess();
      sub_10026F338(v49, v50);
      swift_endAccess();
      sub_10001457C(v50, &qword_100800950);
      if (qword_1007F6C18 != -1) {
        swift_once();
      }
      uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v0 + 976);
      unint64_t v52 = *(void *)(v0 + 912);
      uint64_t v53 = *(void *)(v0 + 904);
      uint64_t v54 = *(void *)(v0 + 776);
      uint64_t v55 = *(void *)(v0 + 736);
      sub_100241410();
      sub_1002714B4(0xD000000000000014, 0x8000000100694A90, v53, v52, (uint64_t (*)(void))&static os_log_type_t.default.getter);
      v51(v54, v55);
      int v56 = 1;
      goto LABEL_42;
    }
  }
  int v2 = *(unsigned __int8 *)(v0 + 665);
  if (v2 == 255) {
    goto LABEL_3;
  }
  if (*(unsigned char *)(v0 + 666))
  {
    if (v1 == 1)
    {
      if (v2 != 1
        || *(void *)(v0 + 1048) != *(void *)(v0 + 1024)
        || *(void *)(v0 + 1056) != *(void *)(v0 + 1032))
      {
        goto LABEL_3;
      }
      goto LABEL_37;
    }
    if (*(_OWORD *)(v0 + 1048) == 0)
    {
      if (v2 != 2 || *(_OWORD *)(v0 + 1024) != 0)
      {
LABEL_3:
        unint64_t v94 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 + 704) + **(int **)(v0 + 704));
        uint64_t v3 = (void *)swift_task_alloc();
        *(void *)(v0 + 1064) = v3;
        *uint64_t v3 = v0;
        v3[1] = sub_10026EF08;
        uint64_t v4 = *(void *)(v0 + 1056);
        uint64_t v5 = *(void *)(v0 + 1048);
        uint64_t v6 = *(unsigned __int8 *)(v0 + 666);
        return v94(v5, v4, v6);
      }
    }
    else if (v2 != 2 || *(void *)(v0 + 1032) || *(void *)(v0 + 1024) != 1)
    {
      goto LABEL_3;
    }
  }
  else
  {
    if (*(unsigned char *)(v0 + 665)) {
      goto LABEL_3;
    }
    char v57 = *(unsigned char *)(v0 + 1024);
    uint64_t v58 = sub_100041A58(*(unsigned char *)(v0 + 1048));
    uint64_t v60 = v59;
    if (v58 == sub_100041A58(v57) && v60 == v61)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v62 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v62 & 1) == 0) {
        goto LABEL_3;
      }
    }
  }
LABEL_37:
  unint64_t v63 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 960);
  uint64_t v64 = *(void *)(v0 + 952);
  unint64_t v93 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 936);
  uint64_t v65 = *(void *)(v0 + 832);
  uint64_t v66 = *(void *)(v0 + 792);
  uint64_t v67 = *(void *)(v0 + 768);
  uint64_t v68 = *(void *)(v0 + 736);
  sub_1002714B4(0xD00000000000003FLL, 0x8000000100694B40, *(void *)(v0 + 904), *(void *)(v0 + 912), (uint64_t (*)(void))&static os_log_type_t.error.getter);
  swift_bridgeObjectRelease();
  Date.init()();
  uint64_t v69 = v65 + *(int *)(v66 + 24) + *(int *)(v64 + 20);
  sub_10001457C(v69, (uint64_t *)&unk_1007FC470);
  v63(v69, v67, v68);
  v93(v69, 0, 1, v68);
  uint64_t v70 = v65 + *(int *)(v66 + 20) + *(int *)(v64 + 20);
  sub_10001457C(v70, (uint64_t *)&unk_1007FC470);
  v63(v70, v67, v68);
  v93(v70, 0, 1, v68);
  if ((*(unsigned char *)(v0 + 664) & 1) == 0)
  {
    uint64_t v71 = *(void *)(v0 + 824);
    uint64_t v72 = *(void *)(v0 + 816);
    uint64_t v73 = *(void *)(v0 + 800);
    uint64_t v74 = *(void *)(v0 + 656);
    sub_1002712D4(*(void *)(v0 + 832), v71);
    NSString v75 = String._bridgeToObjectiveC()();
    sub_1002712D4(v71, v72);
    unint64_t v76 = (*(unsigned __int8 *)(v73 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
    uint64_t v77 = swift_allocObject();
    *(void *)(v77 + 16) = v74;
    *(void *)(v77 + 24) = v74;
    sub_10027133C(v72, v77 + v76);
    *(void *)(v0 + 408) = sub_1002713A0;
    *(void *)(v0 + 416) = v77;
    *(void *)(v0 + 376) = _NSConcreteStackBlock;
    *(void *)(v0 + 384) = 1107296256;
    *(void *)(v0 + 392) = sub_10026CD20;
    *(void *)(v0 + 400) = &unk_1007A1A28;
    unint64_t v78 = _Block_copy((const void *)(v0 + 376));
    swift_release();
    AnalyticsSendEventLazy();
    _Block_release(v78);

    sub_100271278(v71);
  }
  uint64_t v79 = *(void *)(v0 + 856);
  uint64_t v80 = *(void *)(v0 + 728);
  swift_beginAccess();
  sub_10026F338(v79, v80);
  swift_endAccess();
  sub_10001457C(v80, &qword_100800950);
  if (qword_1007F6C18 != -1) {
    swift_once();
  }
  Swift::String v81 = *(void (**)(uint64_t, uint64_t))(v0 + 976);
  unint64_t v82 = *(void *)(v0 + 912);
  uint64_t v83 = *(void *)(v0 + 904);
  uint64_t v84 = *(void *)(v0 + 768);
  uint64_t v85 = *(void *)(v0 + 736);
  sub_100241410();
  sub_1002714B4(0xD000000000000014, 0x8000000100694A90, v83, v82, (uint64_t (*)(void))&static os_log_type_t.default.getter);
  v81(v84, v85);
  int v56 = 2;
LABEL_42:
  unsigned int v91 = v56;
LABEL_43:
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1002713E8(v0 + 16);
  Swift::String v86 = *(void (**)(uint64_t, uint64_t))(v0 + 888);
  uint64_t v87 = *(void *)(v0 + 872);
  uint64_t v88 = *(void *)(v0 + 840);
  uint64_t v89 = *(void *)(v0 + 832);
  v86(*(void *)(v0 + 856), v88);
  v86(v87, v88);
  sub_100271278(v89);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v90 = *(uint64_t (**)(void))(v0 + 8);
  return v90(v91);
}

uint64_t sub_10026EF08(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();
  *(unsigned char *)(v3 + 665) = *(unsigned char *)(v3 + 666);
  *(_OWORD *)(v3 + 1024) = *(_OWORD *)(v3 + 1048);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v3 + 1040) = v5;
  *uint64_t v5 = v4;
  v5[1] = sub_10026E16C;
  uint64_t v6 = *(void *)(v3 + 928);
  uint64_t v7 = *(void *)(v3 + 920);
  uint64_t v8 = *(void *)(v3 + 680);
  uint64_t v9 = *(void *)(v3 + 672);
  return sub_1003F4600(v3 + 88, v9, v8, a1, (uint64_t)sub_10026F148, v7, (uint64_t)sub_10026F178, v6);
}

uint64_t type metadata accessor for AssetProcessingUtil()
{
  return self;
}

uint64_t sub_10026F110()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_10026F148(uint64_t a1, unint64_t a2)
{
  sub_1002714B4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), (uint64_t (*)(void))&static os_log_type_t.error.getter);
}

void sub_10026F178(uint64_t a1, unint64_t a2)
{
  sub_1002714B4(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), (uint64_t (*)(void))&static os_log_type_t.default.getter);
}

uint64_t sub_10026F1A8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  Hasher.init(_seed:)();
  swift_bridgeObjectRetain();
  String.hash(into:)();
  Swift::Int v6 = Hasher._finalize()();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  uint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      uint64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100555468();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_10026FA84(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_10026F338@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for UUID();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1002719CC((unint64_t *)&qword_100811270);
  swift_bridgeObjectRetain();
  uint64_t v29 = a1;
  uint64_t v10 = dispatch thunk of Hashable._rawHashValue(seed:)();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v28 = v9 + 56;
  if ((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12))
  {
    uint64_t v24 = v2;
    uint64_t v25 = v6;
    uint64_t v26 = a2;
    uint64_t v27 = ~v11;
    uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v14 = v6 + 16;
    uint64_t v13 = v15;
    uint64_t v16 = *(void *)(v14 + 56);
    while (1)
    {
      v13(v8, *(void *)(v9 + 48) + v16 * v12, v5);
      sub_1002719CC((unint64_t *)&qword_1007FEB50);
      char v17 = dispatch thunk of static Equatable.== infix(_:_:)();
      (*(void (**)(char *, uint64_t))(v14 - 8))(v8, v5);
      if (v17) {
        break;
      }
      unint64_t v12 = (v12 + 1) & v27;
      if (((*(void *)(v28 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v18 = 1;
        uint64_t v6 = v25;
        a2 = v26;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v18, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v19 = v24;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v19;
    uint64_t v30 = *v19;
    *uint64_t v19 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_10055501C();
      uint64_t v21 = v30;
    }
    uint64_t v6 = v25;
    a2 = v26;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v25 + 32))(v26, *(void *)(v21 + 48) + v16 * v12, v5);
    sub_10026FC4C(v12);
    *uint64_t v19 = v30;
    swift_bridgeObjectRelease();
    uint64_t v18 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v18 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v18, 1, v5);
}

uint64_t sub_10026F5EC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    id v5 = a1;
    char v6 = __CocoaSet.contains(_:)();

    if (v6)
    {
      uint64_t v7 = sub_10026F8E8();
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    return 0;
  }
  Swift::Int v8 = *(void *)(v4 + 40);
  swift_bridgeObjectRetain();
  Swift::Int v9 = NSObject._rawHashValue(seed:)(v8);
  uint64_t v10 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v9 & ~v10;
  if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    goto LABEL_12;
  }
  sub_10001B284(0, (unint64_t *)&qword_100800A40);
  id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
  char v13 = static NSObject.== infix(_:_:)();

  if ((v13 & 1) == 0)
  {
    uint64_t v14 = ~v10;
    do
    {
      unint64_t v11 = (v11 + 1) & v14;
      if (((*(void *)(v4 + 56 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
        goto LABEL_12;
      }
      id v15 = *(id *)(*(void *)(v4 + 48) + 8 * v11);
      char v16 = static NSObject.== infix(_:_:)();
    }
    while ((v16 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v18 = *v2;
  uint64_t v20 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_10055561C();
    uint64_t v18 = v20;
  }
  uint64_t v7 = *(void *)(*(void *)(v18 + 48) + 8 * v11);
  sub_10026FF54(v11);
  *uint64_t v2 = v20;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_10026F7C4(unsigned __int8 a1)
{
  uint64_t v3 = *v1;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(a1);
  Swift::Int v4 = Hasher._finalize()();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 11;
  }
  uint64_t v7 = *(void *)(v3 + 48);
  if (*(unsigned __int8 *)(v7 + v6) != a1)
  {
    uint64_t v8 = ~v5;
    do
    {
      unint64_t v6 = (v6 + 1) & v8;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        return 11;
      }
    }
    while (*(unsigned __int8 *)(v7 + v6) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v1;
  uint64_t v13 = *v1;
  uint64_t *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_100555C2C();
    uint64_t v10 = v13;
  }
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v10 + 48) + v6);
  sub_1002700F8(v6);
  uint64_t *v1 = v13;
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t sub_10026F8E8()
{
  unsigned int v1 = v0;
  swift_bridgeObjectRelease();
  uint64_t v2 = __CocoaSet.count.getter();
  uint64_t v3 = swift_unknownObjectRetain();
  Swift::Int v4 = sub_10054E1CC(v3, v2);
  Swift::Int v16 = v4;
  Swift::Int v5 = *(void *)(v4 + 40);
  swift_retain();
  Swift::Int v6 = NSObject._rawHashValue(seed:)(v5);
  uint64_t v7 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    sub_10001B284(0, (unint64_t *)&qword_100800A40);
    id v9 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
    char v10 = static NSObject.== infix(_:_:)();

    if (v10)
    {
LABEL_6:
      swift_release();
      uint64_t v14 = *(void *)(*(void *)(v4 + 48) + 8 * v8);
      sub_10026FF54(v8);
      if (static NSObject.== infix(_:_:)())
      {
        Swift::Int *v1 = v16;
        return v14;
      }
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v7;
      while (1)
      {
        unint64_t v8 = (v8 + 1) & v11;
        if (((*(void *)(v4 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
          break;
        }
        id v12 = *(id *)(*(void *)(v4 + 48) + 8 * v8);
        char v13 = static NSObject.== infix(_:_:)();

        if (v13) {
          goto LABEL_6;
        }
      }
    }
    swift_release();
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_10026FA84(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Hasher.init(_seed:)();
        swift_bridgeObjectRetain();
        String.hash(into:)();
        Swift::Int v10 = Hasher._finalize()();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          char v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            _OWORD *v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_10026FC4C(int64_t a1)
{
  uint64_t v3 = type metadata accessor for UUID();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v31 = v1;
    uint64_t v11 = ~v9;
    uint64_t v35 = result;
    swift_retain();
    uint64_t v12 = _HashTable.previousHole(before:)();
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v33 = (v12 + 1) & v11;
      uint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v13 = v4 + 16;
      uint64_t v32 = v14;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v34 = v13;
      BOOL v16 = (void (**)(char *, uint64_t))(v13 - 8);
      uint64_t v17 = v35;
      do
      {
        uint64_t v18 = v8;
        uint64_t v19 = v15;
        int64_t v20 = v15 * v10;
        v32(v6, *(void *)(v17 + 48) + v15 * v10, v3);
        sub_1002719CC((unint64_t *)&qword_100811270);
        uint64_t v21 = dispatch thunk of Hashable._rawHashValue(seed:)();
        (*v16)(v6, v3);
        unint64_t v22 = v21 & v11;
        if (a1 >= (uint64_t)v33)
        {
          if (v22 < v33 || a1 < (uint64_t)v22)
          {
LABEL_4:
            uint64_t v8 = v18;
            uint64_t v15 = v19;
            uint64_t v17 = v35;
            goto LABEL_5;
          }
        }
        else if (v22 < v33 && a1 < (uint64_t)v22)
        {
          goto LABEL_4;
        }
        uint64_t v17 = v35;
        int64_t v25 = v19 * a1;
        uint64_t v8 = v18;
        if (v19 * a1 < v20
          || (uint64_t v15 = v19, *(void *)(v35 + 48) + v19 * a1 >= (unint64_t)(*(void *)(v35 + 48) + v20 + v19)))
        {
          swift_arrayInitWithTakeFrontToBack();
          goto LABEL_21;
        }
        a1 = v10;
        if (v25 != v20)
        {
          swift_arrayInitWithTakeBackToFront();
LABEL_21:
          uint64_t v17 = v35;
          uint64_t v15 = v19;
          a1 = v10;
        }
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v8 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    unsigned int v1 = v31;
  }
  else
  {
    *(void *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v26 = *v1;
  uint64_t v27 = *(void *)(*v1 + 16);
  BOOL v28 = __OFSUB__(v27, 1);
  uint64_t v29 = v27 - 1;
  if (v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v26 + 16) = v29;
    ++*(_DWORD *)(v26 + 36);
  }
  return result;
}

unint64_t sub_10026FF54(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::Int v10 = *(void *)(v3 + 40);
        id v11 = *(id *)(*(void *)(v3 + 48) + 8 * v6);
        Swift::Int v12 = NSObject._rawHashValue(seed:)(v10);

        Swift::Int v13 = v12 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v13 >= v9 && v2 >= v13)
          {
LABEL_16:
            uint64_t v16 = *(void *)(v3 + 48);
            uint64_t v17 = (void *)(v16 + 8 * v2);
            uint64_t v18 = (void *)(v16 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v17 >= v18 + 1))
            {
              *uint64_t v17 = *v18;
              int64_t v2 = v6;
            }
          }
        }
        else if (v13 >= v9 || v2 >= v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFSUB__(v19, 1);
  uint64_t v21 = v19 - 1;
  if (v20)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v21;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1002700F8(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = _HashTable.previousHole(before:)();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        Swift::UInt v10 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v6);
        Hasher.init(_seed:)();
        Hasher._combine(_:)(v10);
        unint64_t v11 = Hasher._finalize()() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          Swift::Int v13 = (unsigned char *)(v12 + v2);
          uint64_t v14 = (unsigned char *)(v12 + v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            unsigned char *v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1002702A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  return _swift_task_switch(sub_1002702C8, 0, 0);
}

uint64_t sub_1002702C8()
{
  _s16MultiPinMapAssetCMa();
  uint64_t v1 = swift_dynamicCastClass();
  if (!v1) {
    goto LABEL_14;
  }
  if (!*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling16MultiPinMapAsset_metadata)) {
    goto LABEL_14;
  }
  swift_retain();
  uint64_t v2 = sub_100039114();
  uint64_t v4 = v3;
  uint64_t v6 = v5;
  char v8 = v7;
  swift_release();
  *(void *)(v0 + 64) = v2;
  *(void *)(v0 + 72) = v4;
  *(void *)(v0 + 80) = v6;
  *(unsigned char *)(v0 + 152) = v8;
  if (v2 == 1)
  {
LABEL_14:
    BOOL v16 = *(void **)(v0 + 56);
    if (v16)
    {
      id v17 = v16;
      uint64_t v18 = (void *)swift_task_alloc();
      *(void *)(v0 + 136) = v18;
      *uint64_t v18 = v0;
      v18[1] = sub_100270F14;
      uint64_t v19 = *(void *)(v0 + 40);
      return sub_1000EA4DC((uint64_t)v17, v19);
    }
    else
    {
      uint64_t v21 = (unint64_t *)(*(void *)(v0 + 48) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
      swift_beginAccess();
      unint64_t v22 = *v21;
      if (v22 >> 62)
      {
LABEL_34:
        swift_bridgeObjectRetain();
        uint64_t v23 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v23 = *(void *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v24 = *(void *)(v0 + 56);
      char v25 = sub_10018B188();
      uint64_t v26 = 11;
      if ((v25 & 1) == 0) {
        uint64_t v26 = 12;
      }
      if (v24 || v23 <= v26)
      {
        BOOL v28 = (void *)swift_task_alloc();
        *(void *)(v0 + 144) = v28;
        *BOOL v28 = v0;
        v28[1] = sub_100271180;
        uint64_t v29 = *(void *)(v0 + 40);
        return sub_1000E7908(v29);
      }
      else
      {
        uint64_t v27 = *(uint64_t (**)(uint64_t))(v0 + 8);
        return v27(1);
      }
    }
  }
  unint64_t v9 = *(void *)(*(void *)(v0 + 48) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsWithSlimAsset);
  if (!(v9 >> 62))
  {
    uint64_t v10 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain_n();
    if (v10) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
  swift_bridgeObjectRetain_n();
  uint64_t v10 = _CocoaArrayWrapper.endIndex.getter();
  if (!v10)
  {
LABEL_13:
    swift_bridgeObjectRelease_n();
    sub_10003F810(v2);
    goto LABEL_14;
  }
LABEL_6:
  uint64_t v11 = 0;
  while (1)
  {
    if ((v9 & 0xC000000000000001) != 0) {
      id v12 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v12 = *(id *)(v9 + 8 * v11 + 32);
    }
    Swift::Int v13 = v12;
    *(void *)(v0 + 88) = v12;
    uint64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    uint64_t v15 = swift_dynamicCastClass();
    *(void *)(v0 + 96) = v15;
    if (v15) {
      break;
    }

    ++v11;
    if (v14 == v10) {
      goto LABEL_13;
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v30 = (void *)swift_task_alloc();
  *(void *)(v0 + 104) = v30;
  *uint64_t v30 = v0;
  v30[1] = sub_1002706C8;
  return sub_1000987F4(v2);
}

uint64_t sub_1002706C8()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1002707C4, 0, 0);
}

uint64_t sub_1002707C4()
{
  uint64_t v1 = (void *)v0[12];
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = v1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    id v6 = v1;
    char v7 = (void *)swift_task_alloc();
    v0[14] = v7;
    *char v7 = v0;
    v7[1] = sub_100270938;
    return sub_10058DF1C(ObjectType, v3);
  }
  else
  {
    uint64_t v10 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
    unint64_t v9 = (void *)swift_task_alloc();
    v0[15] = v9;
    void *v9 = v0;
    v9[1] = sub_100270AE0;
    return v10();
  }
}

uint64_t sub_100270938()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100270A34, 0, 0);
}

uint64_t sub_100270A34()
{
  uint64_t v3 = (uint64_t (__cdecl *)())((char *)&dword_10080CA58 + dword_10080CA58);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v1;
  void *v1 = v0;
  v1[1] = sub_100270AE0;
  return v3();
}

uint64_t sub_100270AE0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_100270BDC, 0, 0);
}

uint64_t sub_100270BDC()
{
  if (qword_1007F6BA0 != -1) {
    swift_once();
  }
  sub_100438714(*(void *)(v0 + 96) + OBJC_IVAR____TtCC7Journal10Journaling5Asset_id);
  id v1 = [self defaultCenter];
  if (qword_1007F6E78 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = qword_10083D400;
  Class isa = UUID._bridgeToObjectiveC()().super.isa;
  [v1 postNotificationName:v3 object:isa];

  uint64_t v5 = sub_10003F810(v2);
  if (sub_10003D0C8(v5))
  {
    type metadata accessor for MainActor();
    *(void *)(v0 + 128) = static MainActor.shared.getter();
    uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
    return _swift_task_switch(sub_100270DD0, v7, v6);
  }
  else
  {

    char v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8(0);
  }
}

uint64_t sub_100270DD0()
{
  swift_release();
  if (swift_unknownObjectWeakLoadStrong())
  {
    uint64_t v1 = *(void *)(v0 + 48);
    uint64_t v2 = *(void *)(v1 + 56);
    uint64_t ObjectType = swift_getObjectType();
    Swift::Int v4 = sub_1000F678C((uint64_t)&off_100793D80);
    (*(void (**)(uint64_t, Swift::Int, uint64_t, uint64_t))(v2 + 8))(v1, v4, ObjectType, v2);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
  }
  return _swift_task_switch(sub_100270EB0, 0, 0);
}

uint64_t sub_100270EB0()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1(0);
}

uint64_t sub_100270F14(char a1)
{
  *(unsigned char *)(*(void *)v1 + 153) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100271014, 0, 0);
}

uint64_t sub_100271014()
{
  int v1 = *(unsigned __int8 *)(v0 + 153);

  if (v1) {
    goto LABEL_8;
  }
  uint64_t v2 = (unint64_t *)(*(void *)(v0 + 48) + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  unint64_t v3 = *v2;
  if (v3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v5 = *(void *)(v0 + 56);
  char v6 = sub_10018B188();
  uint64_t v7 = 11;
  if ((v6 & 1) == 0) {
    uint64_t v7 = 12;
  }
  if (v5 || v4 <= v7)
  {
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 144) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_100271180;
    uint64_t v11 = *(void *)(v0 + 40);
    return sub_1000E7908(v11);
  }
  else
  {
LABEL_8:
    char v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8(v1 ^ 1u);
  }
}

uint64_t sub_100271180()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  int v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1(0);
}

uint64_t sub_100271278(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AssetAnalytics.AssetTransferEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002712D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetAnalytics.AssetTransferEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10027133C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AssetAnalytics.AssetTransferEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002713A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1002713B4()
{
  return swift_release();
}

uint64_t sub_1002713BC(uint64_t a1)
{
  return a1;
}

uint64_t sub_1002713E8(uint64_t a1)
{
  return a1;
}

uint64_t sub_100271430(uint64_t result, uint64_t a2, void *a3, uint64_t a4)
{
  if (a4)
  {
    sub_10027149C(result, a2, a3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_10027149C(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3 != (void *)1) {
}
  }

void sub_1002714B4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t (*a5)(void))
{
  if (qword_1007F6CA8 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100026A54(v10, (uint64_t)qword_1008057E0);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = a5();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136315394;
    swift_bridgeObjectRetain();
    sub_10011EA98(a3, a4, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_10011EA98(a1, a2, &v14);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "%s %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1002716D4()
{
  int v1 = (int *)type metadata accessor for AssetAnalytics.AssetTransferEvent(0);
  uint64_t v2 = v0
     + ((*(unsigned __int8 *)(*((void *)v1 - 1) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*((void *)v1 - 1) + 80));
  swift_bridgeObjectRelease();
  uint64_t v3 = v2 + v1[5];
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  char v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (!v6(v3, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  }
  uint64_t v7 = type metadata accessor for AssetAnalytics.AssetTransferEvent.TimeRange(0);
  uint64_t v8 = v3 + *(int *)(v7 + 20);
  if (!v6(v8, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v8, v4);
  }
  uint64_t v9 = v2 + v1[6];
  if (!v6(v9, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v9, v4);
  }
  uint64_t v10 = v9 + *(int *)(v7 + 20);
  if (!v6(v10, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v10, v4);
  }
  uint64_t v11 = v2 + v1[7];
  if (!v6(v11, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v11, v4);
  }
  uint64_t v12 = v11 + *(int *)(v7 + 20);
  if (!v6(v12, 1, v4)) {
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v12, v4);
  }

  return swift_deallocObject();
}

void sub_100271968()
{
  uint64_t v1 = *(void *)(type metadata accessor for AssetAnalytics.AssetTransferEvent(0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_1001FB3F0(v2, v3, v4);
}

uint64_t sub_1002719CC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for UUID();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_100271A2C()
{
  id v1 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleHeadline compatibleWithTraitCollection:0];
  id v9 = v1;
  long long v7 = xmmword_100793DC8;
  char v8 = 0;
  sub_10021B55C(&v9, (uint64_t *)&v7, &v6);

  uint64_t v2 = v6;
  id v3 = [self fontWithDescriptor:v6 size:0.0];

  [v0 setFont:v3];
  id v4 = [self labelColor];
  [v0 setTextColor:v4];

  [v0 setAdjustsFontForContentSizeCategory:1];

  return [v0 setNumberOfLines:0];
}

void sub_100271C88()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC7Journal24TimelineMomentsTitleView_journalEntry];
  if (v1 && (uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title)) != 0)
  {
    id v3 = [v2 string];
    uint64_t v4 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v6 = v5;
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v6 = 0;
  }
  id v7 = [v0 text];
  if (v7)
  {
    char v8 = v7;
    uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v11 = v10;

    if (!v6)
    {
      NSString v14 = 0;
      goto LABEL_16;
    }
    if (v9 == v4 && v6 == v11)
    {
      swift_bridgeObjectRelease();
LABEL_20:
      swift_bridgeObjectRelease();
      return;
    }
    char v13 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v13) {
      goto LABEL_20;
    }
  }
  else if (!v6)
  {
    return;
  }
  NSString v14 = String._bridgeToObjectiveC()();
LABEL_16:
  swift_bridgeObjectRelease();
  [v0 setText:v14];
}

uint64_t type metadata accessor for TimelineMomentsTitleView()
{
  return self;
}

uint64_t sub_100271E54()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_1008058D8);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_1008058D8);
  if (qword_1007F7D18 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB48);
  id v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_100271F24()
{
  qword_10083D228 = 0x403E000000000000;
}

char *sub_100271F34(double a1, double a2, double a3, double a4)
{
  *(void *)&v4[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_centerLocation] = 0;
  uint64_t v9 = &v4[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_searchResult];
  uint64_t v10 = type metadata accessor for Loc(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  v4[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_cellType] = 1;
  v4[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_sortMethod] = 1;
  uint64_t v11 = OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_nameLabel;
  id v12 = objc_allocWithZone((Class)UILabel);
  char v13 = v4;
  *(void *)&v4[v11] = [v12 init];
  uint64_t v14 = OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_addressLabel;
  *(void *)&v13[v14] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v15 = OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_locationIconView;
  *(void *)&v13[v15] = [objc_allocWithZone((Class)UIImageView) init];
  *(void *)&v13[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_locationIconSizeConstraint] = 0;
  *(void *)&v13[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_contentSizeCategoryTraitChangeRegistration] = 0;
  *(void *)&v13[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_AXDependentConstraints] = _swiftEmptyArrayStorage;

  v88.receiver = v13;
  v88.super_class = (Class)type metadata accessor for LocationCollectionViewCell();
  BOOL v16 = (char *)objc_msgSendSuper2(&v88, "initWithFrame:", a1, a2, a3, a4);
  [v16 setIsAccessibilityElement:1];
  uint64_t v17 = OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_addressLabel;
  uint64_t v18 = *(void **)&v16[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_addressLabel];
  uint64_t v19 = self;
  id v20 = v18;
  id v21 = [v19 preferredFontForTextStyle:UIFontTextStyleSubheadline];
  id v22 = sub_10021B898(UIFontWeightRegular);

  [v20 setFont:v22];
  uint64_t v23 = *(void **)&v16[v17];
  uint64_t v24 = self;
  id v25 = v23;
  id v26 = [v24 secondaryLabelColor];
  [v25 setTextColor:v26];

  uint64_t v87 = OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_nameLabel;
  uint64_t v27 = *(void **)&v16[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_nameLabel];
  [v27 setAdjustsFontForContentSizeCategory:1];
  BOOL v28 = *(void **)&v16[v17];
  [v28 setAdjustsFontForContentSizeCategory:1];
  [v16 addSubview:v27];
  [v16 addSubview:v28];
  uint64_t v29 = OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_locationIconView;
  [v16 addSubview:*(void *)&v16[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_locationIconView]];
  uint64_t v30 = qword_1007F7358;
  id v31 = v27;
  if (v30 != -1) {
    swift_once();
  }
  double v32 = *(double *)&qword_10083D968;
  id v33 = [v31 superview];
  uint64_t v34 = &stru_1007D7000;
  if (v33)
  {
    uint64_t v35 = v33;
    [v31 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v36 = [v31 trailingAnchor];
    id v37 = [v35 trailingAnchor];
    id v38 = [v36 constraintEqualToAnchor:v37];

    [v38 setConstant:-v32];
    if (v38)
    {
      id v38 = v38;
      [v38 setActive:1];

      id v31 = v38;
    }

    uint64_t v34 = &stru_1007D7000;
  }
  else
  {
    id v38 = 0;
    uint64_t v35 = v31;
  }

  uint64_t v39 = qword_1007F7328;
  id v40 = *(id *)&v16[v17];
  if (v39 != -1) {
    swift_once();
  }
  id v41 = sub_1001DD438(0, 1, *(double *)&qword_10083D938);

  double v42 = *(double *)&qword_10083D968;
  id v43 = *(id *)&v16[v17];
  id v44 = [v43 superview];
  if (v44)
  {
    NSString v45 = v44;
    [v43 v34[96].name];
    id v46 = [v43 trailingAnchor];
    id v47 = [v45 trailingAnchor];
    id v48 = [v46 constraintEqualToAnchor:v47];

    [v48 setConstant:-v42];
    if (v48)
    {
      id v48 = v48;
      uint64_t v49 = &stru_1007D7000;
      [v48 setActive:1];

      id v43 = v48;
      uint64_t v50 = v87;
    }
    else
    {
      uint64_t v50 = v87;
      uint64_t v49 = &stru_1007D7000;
    }

    uint64_t v34 = &stru_1007D7000;
  }
  else
  {
    id v48 = 0;
    NSString v45 = v43;
    uint64_t v50 = v87;
    uint64_t v49 = &stru_1007D7000;
  }

  uint64_t v51 = *(void **)&v16[v50];
  uint64_t v52 = qword_1007F7310;
  id v53 = *(id *)&v16[v17];
  id v54 = v51;
  if (v52 != -1) {
    swift_once();
  }
  double v55 = *(double *)&qword_10083D920;
  [v53 v34[96].name];
  id v56 = [v53 topAnchor];
  id v57 = [v54 bottomAnchor];
  id v58 = [v56 constraintEqualToAnchor:v57];

  [v58 setConstant:v55];
  [v58 v49[90].name:1];

  id v59 = [*(id *)&v16[v29] heightAnchor];
  id v60 = [objc_allocWithZone((Class)UIFontMetrics) initForTextStyle:UIFontTextStyleHeadline];
  if (qword_1007F6CB8 != -1) {
    swift_once();
  }
  [v60 scaledValueForValue:*(double *)&qword_10083D228];
  double v62 = v61;

  id v63 = [v59 constraintEqualToConstant:v62];
  uint64_t v64 = OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_locationIconSizeConstraint;
  uint64_t v65 = *(void **)&v16[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_locationIconSizeConstraint];
  *(void *)&v16[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_locationIconSizeConstraint] = v63;

  uint64_t result = *(char **)&v16[v64];
  if (result)
  {
    [result v49[90].name:1];
    uint64_t v67 = *(void **)&v16[v29];
    id v68 = [v67 widthAnchor];
    id v69 = [v67 heightAnchor];
    id v70 = [v68 constraintEqualToAnchor:v69];

    [v70 v49[90].name:1];
    uint64_t v71 = *(void **)&v16[v29];
    [v71 setContentMode:2];
    double v72 = *(double *)&qword_10083D938;
    id v73 = v71;
    id v74 = [v73 superview];
    if (v74)
    {
      NSString v75 = v74;
      [v73 setTranslatesAutoresizingMaskIntoConstraints:0];
      id v76 = [v73 topAnchor];
      id v77 = [v75 topAnchor];
      id v78 = [v76 constraintGreaterThanOrEqualToAnchor:v77];

      [v78 setConstant:v72];
      uint64_t v79 = &qword_100805000;
      if (v78)
      {
        id v78 = v78;
        [v78 v49[90].name:1];

        id v73 = v78;
      }
    }
    else
    {
      id v78 = 0;
      NSString v75 = v73;
      uint64_t v79 = &qword_100805000;
    }

    sub_100010218(&qword_1007FBD30);
    uint64_t v80 = swift_allocObject();
    *(_OWORD *)(v80 + 16) = xmmword_1006D6280;
    *(void *)(v80 + 32) = type metadata accessor for UITraitPreferredContentSizeCategory();
    *(void *)(v80 + 40) = &protocol witness table for UITraitPreferredContentSizeCategory;
    Swift::String v81 = v16;
    uint64_t v82 = UIView.registerForTraitChanges(_:action:)();

    swift_bridgeObjectRelease();
    *(void *)&v81[v79[291]] = v82;
    swift_unknownObjectRelease();
    id v83 = [v81 separatorLayoutGuide];
    id v84 = [v83 leadingAnchor];

    id v85 = [*(id *)&v16[v50] leadingAnchor];
    id v86 = [v84 constraintEqualToAnchor:v85];

    [v86 v49[90].name:1];
    return v81;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_100272A04()
{
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_cellType)) {
    sub_100272B64();
  }
  else {
    sub_100272F2C();
  }
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_locationIconSizeConstraint);
  if (v1)
  {
    id v2 = objc_allocWithZone((Class)UIFontMetrics);
    id v6 = v1;
    id v3 = [v2 initForTextStyle:UIFontTextStyleHeadline];
    if (qword_1007F6CB8 != -1) {
      swift_once();
    }
    [v3 scaledValueForValue:*(double *)&qword_10083D228];
    double v5 = v4;

    [v6 setConstant:v5];
  }
  else
  {
    __break(1u);
  }
}

void sub_100272B64()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_10080F290);
  __chkstk_darwin(v1 - 8);
  id v3 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v6 = (char *)&v32 - v5;
  uint64_t v7 = (uint64_t)&v0[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_searchResult];
  swift_beginAccess();
  sub_1002757B8(v7, (uint64_t)v6);
  uint64_t v8 = type metadata accessor for Loc(0);
  uint64_t v9 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
  if (v9(v6, 1, v8))
  {
    sub_10001457C((uint64_t)v6, (uint64_t *)&unk_10080F290);
  }
  else
  {
    uint64_t v10 = (void *)*((void *)v6 + 1);
    id v11 = v10;
    sub_10001457C((uint64_t)v6, (uint64_t *)&unk_10080F290);
    if (v10)
    {
      id v12 = [v11 name];
      if (v12)
      {
        char v13 = v12;
        id v32 = v11;
        uint64_t v14 = *(void **)&v0[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_nameLabel];
        if (qword_1007F7228 != -1) {
          swift_once();
        }
        [v14 setFont:qword_10083D7F0, v32];
        [v14 setText:v13];
        id v15 = [v0 traitCollection];
        id v16 = [v15 preferredContentSizeCategory];

        LOBYTE(v15) = static UIContentSizeCategory.>= infix(_:_:)();
        [v14 setNumberOfLines:(v15 & 1) == 0];
        if (v15) {
          uint64_t v17 = 0;
        }
        else {
          uint64_t v17 = 4;
        }
        [v14 setLineBreakMode:v17];
        [v0 setAccessibilityLabel:v13];

        id v11 = v32;
      }
      id v32 = *(id *)&v0[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_nameLabel];
      id v18 = [v32 text];
      if (v18)
      {
        uint64_t v19 = v18;
        id v20 = v11;
        uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v23 = v22;

        swift_bridgeObjectRelease();
        uint64_t v24 = HIBYTE(v23) & 0xF;
        uint64_t v25 = v21 & 0xFFFFFFFFFFFFLL;
        id v11 = v20;
        if ((v23 & 0x2000000000000000) == 0) {
          uint64_t v24 = v25;
        }
        if (!v24)
        {
          sub_1002757B8(v7, (uint64_t)v3);
          if (v9(v3, 1, v8))
          {
            sub_10001457C((uint64_t)v3, (uint64_t *)&unk_10080F290);
          }
          else
          {
            id v26 = &v3[*(int *)(v8 + 32)];
            uint64_t v28 = *(void *)v26;
            unint64_t v27 = *((void *)v26 + 1);
            swift_bridgeObjectRetain();
            sub_10001457C((uint64_t)v3, (uint64_t *)&unk_10080F290);
            if (v27)
            {
              uint64_t v29 = HIBYTE(v27) & 0xF;
              if ((v27 & 0x2000000000000000) == 0) {
                uint64_t v29 = v28 & 0xFFFFFFFFFFFFLL;
              }
              if (v29)
              {
                NSString v30 = String._bridgeToObjectiveC()();
                [v32 setText:v30];

                NSString v31 = String._bridgeToObjectiveC()();
                swift_bridgeObjectRelease();
                [v0 setAccessibilityLabel:v31];
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
          }
        }
      }
      sub_1002735E4(v11);
    }
  }
}

void sub_100272F2C()
{
  uint64_t v1 = sub_100010218((uint64_t *)&unk_10080F290);
  __chkstk_darwin(v1 - 8);
  id v3 = (id *)((char *)v58 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = (uint64_t)&v0[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_searchResult];
  swift_beginAccess();
  sub_1002757B8(v4, (uint64_t)v3);
  uint64_t v5 = type metadata accessor for Loc(0);
  if ((*(unsigned int (**)(id *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5))
  {
    sub_10001457C((uint64_t)v3, (uint64_t *)&unk_10080F290);
    return;
  }
  id v6 = *v3;
  id v7 = *v3;
  sub_10001457C((uint64_t)v3, (uint64_t *)&unk_10080F290);
  if (v6)
  {
    double v61 = v0;
    sub_100010218((uint64_t *)&unk_1008059E0);
    uint64_t inited = swift_initStackObject();
    long long v63 = xmmword_1006D6280;
    *(_OWORD *)(inited + 16) = xmmword_1006D6280;
    *(void *)(inited + 32) = NSFontAttributeName;
    uint64_t v9 = qword_1007F7208;
    uint64_t v10 = NSFontAttributeName;
    if (v9 != -1) {
      swift_once();
    }
    id v11 = (void *)qword_10083D7D0;
    *(void *)(inited + 40) = qword_10083D7D0;
    id v12 = v11;
    unint64_t v13 = sub_100396B00(inited);
    uint64_t v14 = swift_initStackObject();
    *(_OWORD *)(v14 + 16) = v63;
    *(void *)(v14 + 32) = v10;
    uint64_t v15 = qword_1007F7220;
    id v16 = v10;
    if (v15 != -1) {
      swift_once();
    }
    uint64_t v17 = (void *)qword_10083D7E8;
    *(void *)(v14 + 40) = qword_10083D7E8;
    id v18 = v17;
    unint64_t v19 = sub_100396B00(v14);
    id v20 = [v7 title];
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    sub_10037D1F0(v13);
    swift_bridgeObjectRelease();
    id v21 = objc_allocWithZone((Class)NSMutableAttributedString);
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    type metadata accessor for Key(0);
    uint64_t v24 = v23;
    v58[1] = sub_10002103C();
    Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v26 = [v21 initWithString:v22 attributes:isa];

    id v60 = v7;
    id v27 = [v7 titleHighlightRanges];
    sub_10001B284(0, (unint64_t *)&qword_1008059F0);
    unint64_t v28 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v28 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v29 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v29 = *(void *)((v28 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    unint64_t v59 = v19;
    if (v29)
    {
      *(void *)&long long v63 = v24;
      uint64_t v64 = (unint64_t *)&_swiftEmptyArrayStorage;
      sub_100095B84(0, v29 & ~(v29 >> 63), 0);
      if (v29 < 0)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v30 = 0;
      NSString v31 = v64;
      id v32 = v26;
      do
      {
        if ((v28 & 0xC000000000000001) != 0) {
          id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v33 = *(id *)(v28 + 8 * v30 + 32);
        }
        uint64_t v34 = v33;
        id v35 = [v33 rangeValue];
        unint64_t v37 = v36;

        uint64_t v64 = v31;
        unint64_t v39 = v31[2];
        unint64_t v38 = v31[3];
        if (v39 >= v38 >> 1)
        {
          sub_100095B84(v38 > 1, v39 + 1, 1);
          NSString v31 = v64;
        }
        ++v30;
        v31[2] = v39 + 1;
        id v40 = &v31[2 * v39];
        v40[4] = (unint64_t)v35;
        v40[5] = v37;
      }
      while (v29 != v30);
      id v26 = v32;
      swift_bridgeObjectRelease();
      unint64_t v41 = v31[2];
      if (v41) {
        goto LABEL_20;
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      NSString v31 = (unint64_t *)&_swiftEmptyArrayStorage;
      unint64_t v41 = *((void *)&_swiftEmptyArrayStorage + 2);
      if (v41)
      {
LABEL_20:
        swift_bridgeObjectRetain();
        double v42 = (uint64_t *)(v31 + 5);
        double v62 = (char *)&type metadata for Any + 8;
        *(void *)&long long v63 = v26;
        uint64_t v43 = v59;
        do
        {
          uint64_t v44 = *(v42 - 1);
          uint64_t v45 = *v42;
          sub_10037D1F0(v43);
          Class v46 = Dictionary._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [v63 addAttributes:v46 range:v44];

          v42 += 2;
          --v41;
        }
        while (v41);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v26 = (id)v63;
LABEL_25:
        swift_bridgeObjectRelease();
        id v47 = v61;
        id v48 = *(void **)&v61[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_nameLabel];
        [v48 setAttributedText:v26];
        id v49 = [v47 traitCollection];
        id v50 = [v49 preferredContentSizeCategory];

        LOBYTE(v49) = static UIContentSizeCategory.>= infix(_:_:)();
        [v48 setNumberOfLines:(v49 & 1) == 0];
        if (v49) {
          uint64_t v51 = 0;
        }
        else {
          uint64_t v51 = 4;
        }
        [v48 setLineBreakMode:v51];
        LODWORD(v52) = 1144750080;
        [v48 setContentCompressionResistancePriority:1 forAxis:v52];
        id v53 = v60;
        id v54 = [v60 mapItem];

        if (!v54) {
          goto LABEL_31;
        }
        id v55 = [v53 mapItem];
        if (v55)
        {
          id v56 = v55;
          sub_1002735E4(v55);

LABEL_31:
          NSString v57 = [v53 title];
          if (!v57)
          {
            static String._unconditionallyBridgeFromObjectiveC(_:)();
            NSString v57 = String._bridgeToObjectiveC()();
            swift_bridgeObjectRelease();
          }
          [v47 setAccessibilityLabel:v57];

          return;
        }
LABEL_37:
        __break(1u);
        return;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
}

void sub_1002735E4(void *a1)
{
  uint64_t v2 = v1;
  id v225 = a1;
  uint64_t v205 = type metadata accessor for Date();
  uint64_t v204 = *(void (***)(void, void, void))(v205 - 8);
  __chkstk_darwin(v205);
  CGFloat v192 = (char *)&v185 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for NumberFormatStyleConfiguration.Precision();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v185 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8);
  id v208 = (char *)&v185 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218(&qword_10080E930);
  uint64_t v213 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  id v198 = (char *)&v185 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218(&qword_100805980);
  __chkstk_darwin(v12 - 8);
  NSString v199 = (char *)&v185 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v207 = sub_100010218(&qword_100805988);
  uint64_t v211 = *(void *)(v207 - 8);
  __chkstk_darwin(v207);
  uint64_t v197 = (char *)&v185 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v206 = sub_100010218(&qword_100805990);
  uint64_t v210 = *(void *)(v206 - 8);
  __chkstk_darwin(v206);
  id v194 = (char *)&v185 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = sub_100010218(&qword_100805998);
  uint64_t v195 = *(void *)(v196 - 8);
  __chkstk_darwin(v196);
  id v193 = (char *)&v185 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v212 = sub_100010218((uint64_t *)&unk_1008059A0);
  uint64_t v200 = *(void *)(v212 - 8);
  __chkstk_darwin(v212);
  uint64_t v217 = (char *)&v185 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100010218((uint64_t *)&unk_10080F290);
  __chkstk_darwin(v18 - 8);
  uint64_t v216 = (uint64_t)&v185 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v215 = (uint64_t)&v185 - v21;
  __chkstk_darwin(v22);
  id v220 = (char *)&v185 - v23;
  __chkstk_darwin(v24);
  uint64_t v221 = (uint64_t (*)(uint64_t, uint64_t, int *))((char *)&v185 - v25);
  __chkstk_darwin(v26);
  unsigned int v203 = (char *)&v185 - v27;
  *(void *)&double v29 = __chkstk_darwin(v28).n128_u64[0];
  uint64_t v226 = (uint64_t)&v185 - v30;
  id v31 = [v1 traitCollection:v29];
  id v32 = [v31 preferredContentSizeCategory];

  int v33 = static UIContentSizeCategory.>= infix(_:_:)();
  uint64_t v34 = self;
  uint64_t v35 = OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_AXDependentConstraints;
  unint64_t v36 = (void *)sub_10001B284(0, (unint64_t *)&qword_1008059B0);
  swift_bridgeObjectRetain();
  id v222 = v36;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v223 = v34;
  [v34 deactivateConstraints:isa];

  sub_100010218((uint64_t *)&unk_1007FA1C0);
  int v224 = v33;
  uint64_t v209 = v4;
  uint64_t v214 = v5;
  id v202 = v7;
  uint64_t v201 = v10;
  if (v33)
  {
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1006E0570;
    unint64_t v39 = *(void **)&v2[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_nameLabel];
    id v40 = [v39 leadingAnchor];
    id v41 = [v2 leadingAnchor];
    if (qword_1007F7358 != -1) {
      swift_once();
    }
    id v42 = [v40 constraintEqualToAnchor:v41 constant:*(double *)&qword_10083D968];

    *(void *)(v38 + 32) = v42;
    id v219 = *(id *)&v2[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_addressLabel];
    id v43 = [v219 leadingAnchor];
    id v44 = [v2 leadingAnchor];
    id v45 = [v43 constraintEqualToAnchor:v44 constant:*(double *)&qword_10083D968];

    *(void *)(v38 + 40) = v45;
    id v46 = [v39 topAnchor];
    id v47 = *(char **)&v2[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_locationIconView];
    id v48 = [v47 bottomAnchor];
    if (qword_1007F7328 != -1) {
      swift_once();
    }
    id v49 = [v46 constraintEqualToAnchor:v48 constant:*(double *)&qword_10083D938];

    *(void *)(v38 + 48) = v49;
    id v50 = [v47 leadingAnchor];
    id v51 = [v2 leadingAnchor];
    id v52 = [v50 constraintEqualToAnchor:v51 constant:*(double *)&qword_10083D968];

    *(void *)(v38 + 56) = v52;
    id v218 = v47;
    id v53 = [v47 topAnchor];
    id v54 = [v2 topAnchor];
    id v55 = [v53 constraintEqualToAnchor:v54 constant:*(double *)&qword_10083D938];

    *(void *)(v38 + 64) = v55;
  }
  else
  {
    id v191 = (void (*)(char *, uint64_t))v35;
    uint64_t v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1006DF580;
    id v56 = *(void **)&v2[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_nameLabel];
    id v57 = [v56 leadingAnchor];
    id v58 = *(char **)&v2[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_locationIconView];
    id v59 = [v58 trailingAnchor];
    if (qword_1007F7330 != -1) {
      swift_once();
    }
    id v60 = [v57 constraintEqualToAnchor:v59 constant:*(double *)&qword_10083D940];

    *(void *)(v38 + 32) = v60;
    id v219 = *(id *)&v2[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_addressLabel];
    id v61 = [v219 leadingAnchor];
    id v62 = [v58 trailingAnchor];
    id v63 = [v61 constraintEqualToAnchor:v62 constant:*(double *)&qword_10083D940];

    *(void *)(v38 + 40) = v63;
    id v64 = [v56 topAnchor];
    id v65 = [v2 topAnchor];
    if (qword_1007F7328 != -1) {
      swift_once();
    }
    id v66 = [v64 constraintEqualToAnchor:v65 constant:*(double *)&qword_10083D938];

    *(void *)(v38 + 48) = v66;
    id v67 = [v58 centerYAnchor];
    id v68 = [v2 centerYAnchor];
    id v69 = [v67 constraintEqualToAnchor:v68];

    *(void *)(v38 + 56) = v69;
    id v70 = [v58 leadingAnchor];
    id v71 = [v2 leadingAnchor];
    uint64_t v35 = (uint64_t)v191;
    if (qword_1007F7358 != -1) {
      swift_once();
    }
    id v72 = [v70 constraintEqualToAnchor:v71 constant:*(double *)&qword_10083D968];

    *(void *)(v38 + 64) = v72;
    id v218 = v58;
    id v73 = [v58 bottomAnchor];
    id v74 = [v2 bottomAnchor];
    id v75 = [v73 constraintLessThanOrEqualToAnchor:v74 constant:*(double *)&qword_10083D938];

    *(void *)(v38 + 72) = v75;
  }
  uint64_t v229 = v38;
  specialized Array._endMutation()();
  char v76 = v224;
  *(void *)&v2[v35] = v229;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  Class v77 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v223 activateConstraints:v77];

  uint64_t v78 = (uint64_t)&v2[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_searchResult];
  swift_beginAccess();
  uint64_t v79 = v226;
  sub_1002757B8(v78, v226);
  uint64_t v80 = (int *)type metadata accessor for Loc(0);
  uint64_t v81 = *((void *)v80 - 1);
  uint64_t v82 = *(uint64_t (**)(uint64_t, uint64_t, int *))(v81 + 48);
  uint64_t v83 = v81 + 48;
  int v84 = v82(v79, 1, v80);
  id v85 = v225;
  if (v84)
  {
    sub_10001457C(v79, (uint64_t *)&unk_10080F290);
LABEL_16:
    id v86 = [v85 _styleAttributes];
    uint64_t v87 = (uint64_t)v221;
    goto LABEL_22;
  }
  objc_super v88 = *(void **)(v79 + v80[10]);
  id v89 = v88;
  sub_10001457C(v79, (uint64_t *)&unk_10080F290);
  if (!v88) {
    goto LABEL_16;
  }

  uint64_t v90 = v203;
  sub_1002757B8(v78, (uint64_t)v203);
  if (v82((uint64_t)v90, 1, v80))
  {
    id v86 = 0;
  }
  else
  {
    id v86 = *(id *)&v90[v80[10]];
    id v91 = v86;
  }
  uint64_t v87 = (uint64_t)v221;
  sub_10001457C((uint64_t)v90, (uint64_t *)&unk_10080F290);
LABEL_22:
  sub_1002757B8(v78, v87);
  int v92 = v82(v87, 1, v80);
  uint64_t v221 = v82;
  uint64_t v226 = v83;
  if (v92)
  {
    sub_10001457C(v87, (uint64_t *)&unk_10080F290);
  }
  else
  {
    int v93 = *(unsigned __int8 *)(v87 + v80[11]);
    sub_10001457C(v87, (uint64_t *)&unk_10080F290);
    if (v93 == 1)
    {
      if (qword_1007F7C40 != -1) {
        swift_once();
      }
      unint64_t v94 = (void *)qword_10083E928;
      if (!qword_10083E928) {
        goto LABEL_39;
      }
      sub_100010218((uint64_t *)&unk_1007FA1C0);
      uint64_t v95 = swift_allocObject();
      *(_OWORD *)(v95 + 16) = xmmword_1006D6D10;
      Swift::String v96 = self;
      *(void *)(v95 + 32) = [v96 whiteColor];
      *(void *)(v95 + 40) = [v96 systemGrayColor];
      *(void *)&long long v228 = v95;
      specialized Array._endMutation()();
      sub_10001B284(0, (unint64_t *)&qword_1007FC140);
      v97.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      id v98 = [self configurationWithPaletteColors:v97.super.isa];
      goto LABEL_36;
    }
  }
  unint64_t v99 = self;
  id v100 = [self mainScreen];
  [v100 scale];
  double v102 = v101;

  id v103 = [v99 imageForStyle:v86 size:3 forScale:0 format:v102];
  if (!v103)
  {
    if (qword_1007F7C48 != -1) {
      swift_once();
    }
    unint64_t v94 = (void *)qword_10083E930;
    if (!qword_10083E930) {
      goto LABEL_39;
    }
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v104 = swift_allocObject();
    *(_OWORD *)(v104 + 16) = xmmword_1006D6D10;
    *(void *)(v104 + 32) = [self whiteColor];
    if (qword_1007F71F0 != -1) {
      swift_once();
    }
    id v105 = (void *)qword_10083D7B8;
    *(void *)(v104 + 40) = qword_10083D7B8;
    *(void *)&long long v228 = v104;
    specialized Array._endMutation()();
    sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    id v106 = v105;
    v97.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v98 = [self configurationWithPaletteColors:v97.super.isa];
LABEL_36:
    id v107 = v98;

    id v108 = [v94 imageWithConfiguration:v107];
    id v103 = [v108 imageWithAlignmentRectInsets:2.0, 2.0, 2.0, 2.0];

    uint64_t v82 = v221;
    if (v103) {
      goto LABEL_37;
    }
LABEL_39:
    id v222 = 0;
    uint64_t v114 = (uint64_t)v220;
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v109 = self;
  id v110 = v103;
  id v111 = [v109 configurationWithTextStyle:UIFontTextStyleHeadline];
  id v112 = [v110 imageByApplyingSymbolConfiguration:v111];

  if (v112)
  {
    id v113 = v218;
    id v222 = v112;
    [v218 setImage:v112];
    uint64_t v114 = (uint64_t)v220;
    goto LABEL_42;
  }
  id v222 = 0;
  uint64_t v114 = (uint64_t)v220;
LABEL_41:
  id v113 = v218;
LABEL_42:
  [v113 setAdjustsImageSizeForAccessibilityContentSizeCategory:1];
  *(void *)&long long v228 = 0;
  *((void *)&v228 + 1) = 0xE000000000000000;
  int v115 = v2[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_sortMethod];
  id v223 = v86;
  if (v115 != 1)
  {
    uint64_t v116 = v215;
    sub_1002757B8(v78, v215);
    if (v82(v116, 1, v80)
      || (uint64_t v117 = v116 + v80[7], ((unsigned int (*)(uint64_t, uint64_t, uint64_t))v204[6])(v117, 1, v205)))
    {
      sub_10001457C(v116, (uint64_t *)&unk_10080F290);
      unint64_t v118 = 0xE100000000000000;
      uint64_t v119 = 32;
    }
    else
    {
      id v173 = v204;
      uint64_t v174 = v116;
      uint64_t v175 = v192;
      uint64_t v176 = v205;
      ((void (**)(char *, uint64_t, uint64_t))v204)[2](v192, v117, v205);
      sub_10001457C(v174, (uint64_t *)&unk_10080F290);
      uint64_t v119 = sub_1002AA9E0();
      unint64_t v118 = v177;
      ((void (*)(char *, uint64_t))v173[1])(v175, v176);
      uint64_t v82 = v221;
    }
    *(void *)&long long v228 = v119;
    *((void *)&v228 + 1) = v118;
LABEL_49:
    Swift::String v120 = (char *)&_swiftEmptyArrayStorage;
    goto LABEL_61;
  }
  sub_1002757B8(v78, v114);
  if (v82(v114, 1, v80))
  {
    sub_10001457C(v114, (uint64_t *)&unk_10080F290);
    goto LABEL_54;
  }
  int v121 = *(unsigned __int8 *)(v114 + v80[11]);
  sub_10001457C(v114, (uint64_t *)&unk_10080F290);
  if (v121 == 1)
  {
    swift_bridgeObjectRelease();
    if (qword_1007F77A0 != -1) {
      swift_once();
    }
    unint64_t v118 = *((void *)&xmmword_10083E0E8 + 1);
    uint64_t v119 = xmmword_10083E0E8;
    long long v228 = xmmword_10083E0E8;
    swift_bridgeObjectRetain();
    goto LABEL_49;
  }
LABEL_54:
  id v122 = [v85 placemark];
  id v123 = [v122 location];

  if (!v123)
  {
LABEL_60:
    uint64_t v119 = 0;
    Swift::String v120 = (char *)&_swiftEmptyArrayStorage;
    unint64_t v118 = 0xE000000000000000;
    goto LABEL_61;
  }
  char v124 = *(void **)&v2[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_centerLocation];
  if (!v124)
  {

    goto LABEL_60;
  }
  uint64_t v205 = (uint64_t)v80;
  uint64_t v215 = v78;
  id v218 = v2;
  unint64_t v125 = v124;
  swift_bridgeObjectRelease();
  uint64_t v204 = (void (**)(void, void, void))v123;
  unsigned int v203 = v125;
  [v123 distanceFromLocation:v125];
  id v126 = [self meters];
  uint64_t v127 = sub_10001B284(0, (unint64_t *)&unk_1008059C0);
  Measurement.init(value:unit:)();
  Swift::String v128 = v194;
  id v220 = (char *)v127;
  static Measurement<>.FormatStyle.UnitWidth.abbreviated.getter();
  unint64_t v129 = v197;
  static MeasurementFormatUnitUsage<>.road.getter();
  static Locale.autoupdatingCurrent.getter();
  CGFloat v192 = (char *)sub_1000DA83C();
  uint64_t v130 = v198;
  FloatingPointFormatStyle.init(locale:)();
  id v131 = v202;
  static NumberFormatStyleConfiguration.Precision.fractionLength(_:)();
  uint64_t v132 = (uint64_t)v199;
  uint64_t v133 = v201;
  FloatingPointFormatStyle.precision(_:)();
  uint64_t v134 = *(void (**)(char *, uint64_t))(v214 + 8);
  v214 += 8;
  id v191 = v134;
  v134(v131, v209);
  uint64_t v135 = v213;
  Swift::String v136 = *(void (**)(char *, uint64_t))(v213 + 8);
  uint64_t v189 = v213 + 8;
  id v190 = v136;
  v136(v130, v133);
  uint64_t v137 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v135 + 56);
  uint64_t v213 = v135 + 56;
  id v188 = v137;
  v137(v132, 0, 1, v133);
  CGFloat v138 = v193;
  static FormatStyle.measurement<A>(width:usage:numberFormatStyle:)();
  sub_10001457C(v132, &qword_100805980);
  id v139 = *(void (**)(char *, uint64_t))(v211 + 8);
  v211 += 8;
  id v187 = v139;
  v139(v129, v207);
  Swift::String v140 = *(void (**)(char *, uint64_t))(v210 + 8);
  v210 += 8;
  NSString v186 = v140;
  v140(v128, v206);
  uint64_t v185 = sub_100014488((unint64_t *)&unk_1008059D0, &qword_100805998);
  uint64_t v141 = v196;
  Measurement<>.formatted<A>(_:)();
  uint64_t v195 = *(void *)(v195 + 8);
  ((void (*)(char *, uint64_t))v195)(v138, v141);
  long long v228 = v227;
  static Measurement<>.FormatStyle.UnitWidth.wide.getter();
  static MeasurementFormatUnitUsage<>.road.getter();
  static Locale.autoupdatingCurrent.getter();
  FloatingPointFormatStyle.init(locale:)();
  static NumberFormatStyleConfiguration.Precision.fractionLength(_:)();
  FloatingPointFormatStyle.precision(_:)();
  v191(v131, v209);
  v190(v130, v133);
  v188(v132, 0, 1, v133);
  static FormatStyle.measurement<A>(width:usage:numberFormatStyle:)();
  sub_10001457C(v132, &qword_100805980);
  v187(v129, v207);
  v186(v128, v206);
  Measurement<>.formatted<A>(_:)();
  ((void (*)(char *, uint64_t))v195)(v138, v141);
  long long v142 = v227;
  Swift::String v120 = sub_1002A54A0(0, 1, 1, (char *)&_swiftEmptyArrayStorage);
  unint64_t v144 = *((void *)v120 + 2);
  unint64_t v143 = *((void *)v120 + 3);
  if (v144 >= v143 >> 1) {
    Swift::String v120 = sub_1002A54A0((char *)(v143 > 1), v144 + 1, 1, v120);
  }
  char v76 = v224;
  uint64_t v78 = v215;
  uint64_t v80 = (int *)v205;
  uint64_t v82 = v221;
  *((void *)v120 + 2) = v144 + 1;
  *(_OWORD *)&v120[16 * v144 + 32] = v142;

  (*(void (**)(char *, uint64_t))(v200 + 8))(v217, v212);
  unint64_t v118 = *((void *)&v228 + 1);
  uint64_t v119 = v228;
  id v85 = v225;
  uint64_t v2 = v218;
LABEL_61:
  uint64_t v145 = HIBYTE(v118) & 0xF;
  if ((v118 & 0x2000000000000000) == 0) {
    uint64_t v145 = v119 & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v146 = 548913696;
  if (v76) {
    uint64_t v146 = 10;
  }
  unint64_t v147 = 0xA400000000000000;
  if (v76) {
    unint64_t v147 = 0xE100000000000000;
  }
  if (v145) {
    uint64_t v148 = v146;
  }
  else {
    uint64_t v148 = 0;
  }
  if (v145) {
    unint64_t v149 = v147;
  }
  else {
    unint64_t v149 = 0xE000000000000000;
  }
  id v150 = [v85 _shortAddress];
  if (!v150)
  {
LABEL_83:
    uint64_t v164 = v216;
    sub_1002757B8(v78, v216);
    if (v82(v164, 1, v80))
    {
      swift_bridgeObjectRelease();
      sub_10001457C(v164, (uint64_t *)&unk_10080F290);
    }
    else
    {
      id v165 = (uint64_t *)(v164 + v80[8]);
      uint64_t v167 = *v165;
      unint64_t v166 = v165[1];
      swift_bridgeObjectRetain();
      sub_10001457C(v164, (uint64_t *)&unk_10080F290);
      if (v166)
      {
        uint64_t v168 = HIBYTE(v166) & 0xF;
        if ((v166 & 0x2000000000000000) == 0) {
          uint64_t v168 = v167 & 0xFFFFFFFFFFFFLL;
        }
        if (v168)
        {
          *(void *)&long long v227 = v148;
          *((void *)&v227 + 1) = v149;
          swift_bridgeObjectRetain();
          v169._uint64_t countAndFlagsBits = v167;
          v169._object = (void *)v166;
          String.append(_:)(v169);
          swift_bridgeObjectRelease();
          unint64_t v158 = *((void *)&v227 + 1);
          uint64_t v159 = v227;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            Swift::String v120 = sub_1002A54A0(0, *((void *)v120 + 2) + 1, 1, v120);
          }
          unint64_t v171 = *((void *)v120 + 2);
          unint64_t v170 = *((void *)v120 + 3);
          if (v171 >= v170 >> 1) {
            Swift::String v120 = sub_1002A54A0((char *)(v170 > 1), v171 + 1, 1, v120);
          }
          *((void *)v120 + 2) = v171 + 1;
          Swift::Int v172 = &v120[16 * v171];
          *((void *)v172 + 4) = v167;
          *((void *)v172 + 5) = v166;
          goto LABEL_98;
        }
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
    }
    uint64_t v159 = 0;
    unint64_t v158 = 0xE000000000000000;
LABEL_98:
    id v160 = v219;
    goto LABEL_99;
  }
  uint64_t v151 = v150;
  char v152 = v76;
  uint64_t v153 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v155 = v154;

  uint64_t v156 = HIBYTE(v155) & 0xF;
  if ((v155 & 0x2000000000000000) == 0) {
    uint64_t v156 = v153 & 0xFFFFFFFFFFFFLL;
  }
  if (!v156)
  {
    swift_bridgeObjectRelease();
    char v76 = v152;
    uint64_t v82 = v221;
    goto LABEL_83;
  }
  *(void *)&long long v227 = v148;
  *((void *)&v227 + 1) = v149;
  swift_bridgeObjectRetain();
  v157._uint64_t countAndFlagsBits = v153;
  v157._object = (void *)v155;
  String.append(_:)(v157);
  swift_bridgeObjectRelease();
  unint64_t v158 = *((void *)&v227 + 1);
  uint64_t v159 = v227;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    Swift::String v120 = sub_1002A54A0(0, *((void *)v120 + 2) + 1, 1, v120);
  }
  id v160 = v219;
  unint64_t v162 = *((void *)v120 + 2);
  unint64_t v161 = *((void *)v120 + 3);
  if (v162 >= v161 >> 1) {
    Swift::String v120 = sub_1002A54A0((char *)(v161 > 1), v162 + 1, 1, v120);
  }
  *((void *)v120 + 2) = v162 + 1;
  uint64_t v163 = &v120[16 * v162];
  *((void *)v163 + 4) = v153;
  *((void *)v163 + 5) = v155;
  char v76 = v152;
LABEL_99:
  uint64_t v178 = HIBYTE(v158) & 0xF;
  if ((v158 & 0x2000000000000000) == 0) {
    uint64_t v178 = v159 & 0xFFFFFFFFFFFFLL;
  }
  id v179 = v223;
  if (v178)
  {
    v180._uint64_t countAndFlagsBits = v159;
    v180._object = (void *)v158;
    String.append(_:)(v180);
  }
  swift_bridgeObjectRelease();
  [v160 setNumberOfLines:(v76 & 1) == 0];
  if (v76) {
    uint64_t v181 = 0;
  }
  else {
    uint64_t v181 = 4;
  }
  [v160 setLineBreakMode:v181];
  NSString v182 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v160 setText:v182];

  LODWORD(v183) = 1144750080;
  [v160 setContentCompressionResistancePriority:1 forAxis:v183];
  if (*((void *)v120 + 2))
  {
    *(void *)&long long v227 = v120;
    sub_100010218(&qword_100800A70);
    sub_100014488((unint64_t *)&qword_1007F9100, &qword_100800A70);
    BidirectionalCollection<>.joined(separator:)();
    swift_bridgeObjectRelease();
    NSString v184 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v2 setAccessibilityValue:v184];
  }
  else
  {
    swift_bridgeObjectRelease();
    [v2 setAccessibilityValue:0];
    NSString v184 = v222;
  }
}

id sub_100275388()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for LocationCollectionViewCell();
  [super dealloc];
}

uint64_t sub_100275474()
{
  return type metadata accessor for LocationCollectionViewCell();
}

uint64_t type metadata accessor for LocationCollectionViewCell()
{
  uint64_t result = qword_100805950;
  if (!qword_100805950) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1002754C8()
{
  sub_100275594();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_100275594()
{
  if (!qword_100805960)
  {
    type metadata accessor for Loc(255);
    unint64_t v0 = type metadata accessor for Optional();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100805960);
    }
  }
}

ValueMetadata *type metadata accessor for SortMethod()
{
  return &type metadata for SortMethod;
}

unsigned char *_s7Journal30LocationCollectionViewCellTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002756D0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for LocationCollectionViewCellType()
{
  return &type metadata for LocationCollectionViewCellType;
}

unint64_t sub_10027570C()
{
  unint64_t result = qword_100805968;
  if (!qword_100805968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805968);
  }
  return result;
}

unint64_t sub_100275764()
{
  unint64_t result = qword_100805970;
  if (!qword_100805970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805970);
  }
  return result;
}

uint64_t sub_1002757B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_10080F290);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_100275820()
{
  *(void *)&v0[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_centerLocation] = 0;
  uint64_t v1 = &v0[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_searchResult];
  uint64_t v2 = type metadata accessor for Loc(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  v0[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_cellType] = 1;
  v0[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_sortMethod] = 1;
  uint64_t v3 = OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_nameLabel;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v4 = OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_addressLabel;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v5 = OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_locationIconView;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UIImageView) init];
  *(void *)&v0[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_locationIconSizeConstraint] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_contentSizeCategoryTraitChangeRegistration] = 0;
  *(void *)&v0[OBJC_IVAR____TtC7Journal26LocationCollectionViewCell_AXDependentConstraints] = _swiftEmptyArrayStorage;

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

uint64_t sub_100275994()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100805A00);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100805A00);
  if (qword_1007F7D08 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB18);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_100275A5C()
{
  uint64_t v1 = v0;
  v19.receiver = v0;
  v19.super_class = (Class)type metadata accessor for AdminEntriesVC();
  [super viewDidLoad];
  uint64_t v2 = OBJC_IVAR____TtC7Journal14AdminEntriesVC_model;
  swift_retain();
  sub_100036C8C();
  swift_release();
  uint64_t v3 = *(void **)(*(void *)&v0[v2] + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController);
  if (v3) {
    [v3 setDelegate:v0];
  }
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [self systemImageNamed:v4];

  id v6 = objc_allocWithZone((Class)UIBarButtonItem);
  id v7 = v1;
  id v8 = [v6 initWithImage:v5 style:2 target:v7 action:"showActionSheet"];

  id v9 = [v7 navigationItem];
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1006D6D00;
  *(void *)(v10 + 32) = v8;
  specialized Array._endMutation()();
  sub_10001B284(0, (unint64_t *)&qword_100803F80);
  id v11 = v8;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v9 setRightBarButtonItems:isa];

  uint64_t v13 = *(void **)&v7[OBJC_IVAR____TtC7Journal14AdminEntriesVC_activityIndicator];
  id v14 = [objc_allocWithZone((Class)UIBarButtonItem) initWithCustomView:v13];
  id v15 = [v7 navigationItem];
  [v15 setLeftBarButtonItem:v14 animated:1];

  [v13 setHidesWhenStopped:1];
  uint64_t v16 = self;
  id v17 = [v16 defaultCenter];
  if (qword_1007F6E68 != -1) {
    swift_once();
  }
  [v17 addObserver:v7 selector:"syncEngineSyncStartWithNotification:" name:qword_10083D3F0 object:0];

  id v18 = [v16 defaultCenter];
  if (qword_1007F6E70 != -1) {
    swift_once();
  }
  [v18 addObserver:v7 selector:"syncEngineSyncEndWithNotification:" name:qword_10083D3F8 object:0];

  sub_10027AAB4();
}

id sub_100275E00()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for AdminEntriesVC();
  return [super dealloc];
}

void sub_100275F58()
{
  uint64_t ObjectType = swift_getObjectType();
  type metadata accessor for JurassicAlertController();
  NSString v0 = String._bridgeToObjectiveC()();
  NSString v1 = String._bridgeToObjectiveC()();
  id v99 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v0 message:v1 preferredStyle:0];

  NSString v2 = String._bridgeToObjectiveC()();
  int v115 = sub_1002773CC;
  uint64_t v116 = 0;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v112 = 1107296256;
  id v113 = sub_10007453C;
  uint64_t v114 = &unk_1007A1E68;
  objc_super v3 = _Block_copy(&aBlock);
  swift_release();
  NSString v4 = self;
  id v110 = [v4 actionWithTitle:v2 style:0 handler:v3];
  _Block_release(v3);

  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = self;
  id v7 = [v6 systemImageNamed:v5];

  NSString v8 = String._bridgeToObjectiveC()();
  [v110 setValue:v7 forKey:v8];

  NSString v9 = String._bridgeToObjectiveC()();
  int v115 = sub_100277438;
  uint64_t v116 = 0;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v112 = 1107296256;
  id v113 = sub_10007453C;
  uint64_t v114 = &unk_1007A1E90;
  uint64_t v10 = _Block_copy(&aBlock);
  swift_release();
  id v109 = [v4 actionWithTitle:v9 style:0 handler:v10];
  _Block_release(v10);

  NSString v11 = String._bridgeToObjectiveC()();
  id v12 = [v6 systemImageNamed:v11];

  NSString v13 = String._bridgeToObjectiveC()();
  [v109 setValue:v12 forKey:v13];

  NSString v14 = String._bridgeToObjectiveC()();
  int v115 = sub_10027782C;
  uint64_t v116 = 0;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v112 = 1107296256;
  id v113 = sub_10007453C;
  uint64_t v114 = &unk_1007A1EB8;
  id v15 = _Block_copy(&aBlock);
  swift_release();
  id v108 = [v4 actionWithTitle:v14 style:0 handler:v15];
  _Block_release(v15);

  NSString v16 = String._bridgeToObjectiveC()();
  id v17 = [v6 systemImageNamed:v16];

  NSString v18 = String._bridgeToObjectiveC()();
  [v108 setValue:v17 forKey:v18];

  NSString v19 = String._bridgeToObjectiveC()();
  int v115 = sub_100277EA8;
  uint64_t v116 = 0;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v112 = 1107296256;
  id v113 = sub_10007453C;
  uint64_t v114 = &unk_1007A1EE0;
  uint64_t v20 = _Block_copy(&aBlock);
  swift_release();
  id v107 = [v4 actionWithTitle:v19 style:0 handler:v20];
  _Block_release(v20);

  NSString v21 = String._bridgeToObjectiveC()();
  id v22 = [v6 systemImageNamed:v21];

  NSString v23 = String._bridgeToObjectiveC()();
  [v107 setValue:v22 forKey:v23];

  NSString v24 = String._bridgeToObjectiveC()();
  int v115 = sub_100278908;
  uint64_t v116 = 0;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v112 = 1107296256;
  id v113 = sub_10007453C;
  uint64_t v114 = &unk_1007A1F08;
  uint64_t v25 = _Block_copy(&aBlock);
  swift_release();
  id v106 = [v4 actionWithTitle:v24 style:0 handler:v25];
  _Block_release(v25);

  NSString v26 = String._bridgeToObjectiveC()();
  id v27 = [v6 systemImageNamed:v26];

  NSString v28 = String._bridgeToObjectiveC()();
  [v106 setValue:v27 forKey:v28];

  NSString v29 = String._bridgeToObjectiveC()();
  int v115 = sub_1002789C8;
  uint64_t v116 = 0;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v112 = 1107296256;
  id v113 = sub_10007453C;
  uint64_t v114 = &unk_1007A1F30;
  uint64_t v30 = _Block_copy(&aBlock);
  swift_release();
  id v31 = v4;
  id v105 = [v4 actionWithTitle:v29 style:0 handler:v30];
  _Block_release(v30);

  NSString v32 = String._bridgeToObjectiveC()();
  int v33 = v6;
  id v34 = [v6 systemImageNamed:v32];

  NSString v35 = String._bridgeToObjectiveC()();
  [v105 setValue:v34 forKey:v35];

  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = v103;
  *(void *)(v36 + 24) = v99;
  id v37 = v103;
  id v98 = v99;
  NSString v38 = String._bridgeToObjectiveC()();
  int v115 = sub_100283B30;
  uint64_t v116 = v36;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v112 = 1107296256;
  id v113 = sub_10007453C;
  uint64_t v114 = &unk_1007A1F80;
  unint64_t v39 = _Block_copy(&aBlock);
  swift_release();
  id v104 = [v4 actionWithTitle:v38 style:0 handler:v39];
  _Block_release(v39);

  NSString v40 = String._bridgeToObjectiveC()();
  id v41 = [v33 systemImageNamed:v40];

  NSString v42 = String._bridgeToObjectiveC()();
  [v104 setValue:v41 forKey:v42];

  uint64_t v43 = swift_allocObject();
  *(void *)(v43 + 16) = v37;
  *(void *)(v43 + 24) = ObjectType;
  id v95 = v37;
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  int v115 = sub_100283B70;
  uint64_t v116 = v43;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v112 = 1107296256;
  id v113 = sub_10007453C;
  uint64_t v114 = &unk_1007A1FD0;
  id v45 = _Block_copy(&aBlock);
  swift_release();
  id v102 = [v31 actionWithTitle:v44 style:0 handler:v45];
  _Block_release(v45);

  NSString v46 = String._bridgeToObjectiveC()();
  id v47 = [v33 systemImageNamed:v46];

  NSString v48 = String._bridgeToObjectiveC()();
  [v102 setValue:v47 forKey:v48];

  NSString v49 = String._bridgeToObjectiveC()();
  int v115 = sub_100278E98;
  uint64_t v116 = 0;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v112 = 1107296256;
  id v113 = sub_10007453C;
  uint64_t v114 = &unk_1007A1FF8;
  id v50 = _Block_copy(&aBlock);
  swift_release();
  id v51 = v31;
  id v100 = [v31 actionWithTitle:v49 style:0 handler:v50];
  _Block_release(v50);

  NSString v52 = String._bridgeToObjectiveC()();
  id v53 = [v33 systemImageNamed:v52];

  NSString v54 = String._bridgeToObjectiveC()();
  [v100 setValue:v53 forKey:v54];

  NSString v55 = String._bridgeToObjectiveC()();
  int v115 = sub_100278EC4;
  uint64_t v116 = 0;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v112 = 1107296256;
  id v113 = sub_10007453C;
  uint64_t v114 = &unk_1007A2020;
  id v56 = _Block_copy(&aBlock);
  swift_release();
  id v97 = [v31 actionWithTitle:v55 style:0 handler:v56];
  _Block_release(v56);

  NSString v57 = String._bridgeToObjectiveC()();
  id v58 = [v33 systemImageNamed:v57];

  NSString v59 = String._bridgeToObjectiveC()();
  [v97 setValue:v58 forKey:v59];

  uint64_t v60 = swift_allocObject();
  *(void *)(v60 + 16) = v95;
  id v61 = v95;
  NSString v62 = String._bridgeToObjectiveC()();
  int v115 = sub_100283B78;
  uint64_t v116 = v60;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v112 = 1107296256;
  id v113 = sub_10007453C;
  uint64_t v114 = &unk_1007A2070;
  id v63 = _Block_copy(&aBlock);
  swift_release();
  id v96 = [v51 actionWithTitle:v62 style:0 handler:v63];
  _Block_release(v63);

  NSString v64 = String._bridgeToObjectiveC()();
  id v65 = [v33 systemImageNamed:v64];

  NSString v66 = String._bridgeToObjectiveC()();
  [v96 setValue:v65 forKey:v66];

  uint64_t v67 = swift_allocObject();
  *(void *)(v67 + 16) = v61;
  id v68 = v61;
  NSString v69 = String._bridgeToObjectiveC()();
  int v115 = sub_100283BB0;
  uint64_t v116 = v67;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v112 = 1107296256;
  id v113 = sub_10007453C;
  uint64_t v114 = &unk_1007A20C0;
  id v70 = _Block_copy(&aBlock);
  swift_release();
  id v94 = [v51 actionWithTitle:v69 style:0 handler:v70];
  _Block_release(v70);

  NSString v71 = String._bridgeToObjectiveC()();
  id v72 = [v33 systemImageNamed:v71];

  NSString v73 = String._bridgeToObjectiveC()();
  [v94 setValue:v72 forKey:v73];

  uint64_t v74 = swift_allocObject();
  *(void *)(v74 + 16) = v68;
  id v75 = v68;
  NSString v76 = String._bridgeToObjectiveC()();
  int v115 = sub_100283BD4;
  uint64_t v116 = v74;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v112 = 1107296256;
  id v113 = sub_10007453C;
  uint64_t v114 = &unk_1007A2110;
  Class v77 = _Block_copy(&aBlock);
  swift_release();
  id v91 = v51;
  id v92 = [v51 actionWithTitle:v76 style:0 handler:v77];
  _Block_release(v77);

  NSString v78 = String._bridgeToObjectiveC()();
  id v79 = [v33 systemImageNamed:v78];

  NSString v80 = String._bridgeToObjectiveC()();
  [v92 setValue:v79 forKey:v80];

  uint64_t v81 = swift_allocObject();
  *(void *)(v81 + 16) = v75;
  id v93 = v75;
  NSString v82 = String._bridgeToObjectiveC()();
  int v115 = sub_100283C0C;
  uint64_t v116 = v81;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v112 = 1107296256;
  id v113 = sub_10007453C;
  uint64_t v114 = &unk_1007A2160;
  uint64_t v83 = _Block_copy(&aBlock);
  swift_release();
  id v84 = [v51 actionWithTitle:v82 style:0 handler:v83];
  _Block_release(v83);

  NSString v85 = String._bridgeToObjectiveC()();
  id v86 = [v33 systemImageNamed:v85];

  NSString v87 = String._bridgeToObjectiveC()();
  objc_super v88 = v84;
  [v84 setValue:v86 forKey:v87];

  [v98 addAction:v108];
  [v98 addAction:v107];
  [v98 addAction:v110];
  [v98 addAction:v109];
  [v98 addAction:v106];
  [v98 addAction:v105];
  [v98 addAction:v102];
  [v98 addAction:v104];
  [v98 addAction:v100];
  [v98 addAction:v97];
  [v98 addAction:v96];
  [v98 addAction:v94];
  [v98 addAction:v92];
  [v98 addAction:v84];
  NSString v89 = String._bridgeToObjectiveC()();
  id v90 = [v91 actionWithTitle:v89 style:1 handler:0];

  [v98 addAction:v90];
  [v93 presentViewController:v98 animated:1 completion:0];
}

id sub_1002773CC()
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  NSString v0 = *(void **)(qword_10083D2F8 + 32);

  return [v0 sendChangesWithCompletionHandler:0];
}

uint64_t sub_100277438()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  NSString v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  type metadata accessor for MainActor();
  uint64_t v4 = static MainActor.shared.getter();
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = v4;
  *(void *)(v5 + 24) = &protocol witness table for MainActor;
  sub_100328C78((uint64_t)v2, (uint64_t)&unk_100805B30, v5);
  return swift_release();
}

uint64_t sub_100277538(uint64_t a1)
{
  v1[2] = a1;
  type metadata accessor for MainActor();
  v1[3] = static MainActor.shared.getter();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[4] = v3;
  v1[5] = v2;
  return _swift_task_switch(sub_1002775D0, v3, v2);
}

uint64_t sub_1002775D0()
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v1;
  void *v1 = v0;
  v1[1] = sub_100277694;
  return sub_100208400();
}

uint64_t sub_100277694()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v3 = *(void *)(v2 + 32);
    uint64_t v4 = *(void *)(v2 + 40);
    uint64_t v5 = sub_100284448;
  }
  else
  {
    uint64_t v3 = *(void *)(v2 + 32);
    uint64_t v4 = *(void *)(v2 + 40);
    uint64_t v5 = sub_1002777BC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1002777BC()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = (BOOL *)v0[2];
  swift_release();
  *uint64_t v2 = v1 != 0;
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_10027782C()
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v0 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v0;
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = sub_100283F20;
  *(void *)(v2 + 24) = v1;
  v6[4] = sub_10001B3DC;
  v6[5] = v2;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_1003F44E4;
  v6[3] = &unk_1007A23B8;
  uint64_t v3 = _Block_copy(v6);
  id v4 = v0;
  swift_retain();
  swift_release();
  [v4 performBlockAndWait:v3];

  _Block_release(v3);
  LOBYTE(v3) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v3) {
    __break(1u);
  }
  return result;
}

void sub_1002779D4(void *a1)
{
  id v40 = a1;
  uint64_t v39 = type metadata accessor for UUID();
  uint64_t v1 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v3 = (char *)&v36 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  id v6 = (char *)&v36 - v5;
  type metadata accessor for JournalEntryAssetFileAttachmentMO();
  ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v8 = 0;
  NSString v9 = (void (**)(char *, uint64_t))(v1 + 8);
  unint64_t v37 = 0x8000000100695490;
  Class v38 = ObjCClassFromMetadata;
  do
  {
    uint64_t v10 = v8 + 1;
    id v11 = objc_allocWithZone(v38);
    id v12 = [v11 initWithContext:v40];
    UUID.init()();
    Class isa = UUID._bridgeToObjectiveC()().super.isa;
    [v12 setId:isa];

    id v42 = 0;
    unint64_t v43 = 0xE000000000000000;
    _StringGuts.grow(_:)(24);
    swift_bridgeObjectRelease();
    uint64_t v41 = v8;
    id v42 = (id)0xD000000000000015;
    unint64_t v43 = v37;
    v14._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    v15._uint64_t countAndFlagsBits = 32;
    v15._object = (void *)0xE100000000000000;
    String.append(_:)(v15);
    id v16 = v42;
    unint64_t v17 = v43;
    uint64_t v18 = UUID.uuidString.getter();
    uint64_t v20 = v19;
    id v42 = v16;
    unint64_t v43 = v17;
    swift_bridgeObjectRetain();
    v21._uint64_t countAndFlagsBits = v18;
    v21._object = v20;
    String.append(_:)(v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    NSString v22 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v12 setName:v22];

    UUID.init()();
    Class v23 = UUID._bridgeToObjectiveC()().super.isa;
    NSString v24 = *v9;
    uint64_t v25 = v39;
    (*v9)(v3, v39);
    [v12 setParentID:v23];

    v24(v6, v25);
    uint64_t v8 = v10;
  }
  while (v10 != 100);
  id v42 = 0;
  unsigned __int8 v26 = [v40 save:&v42];
  id v27 = v42;
  if (v26)
  {
    id v28 = v27;
  }
  else
  {
    id v40 = v42;
    id v29 = v42;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F6CC0 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_100026A54(v30, (uint64_t)qword_100805A00);
    swift_errorRetain();
    swift_errorRetain();
    id v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v31, v32))
    {
      int v33 = (uint8_t *)swift_slowAlloc();
      id v34 = (void *)swift_slowAlloc();
      *(_DWORD *)int v33 = 138412290;
      swift_errorRetain();
      NSString v35 = (void *)_swift_stdlib_bridgeErrorToNSError();
      id v42 = v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v34 = v35;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "Generate Attachments Orphans error:%@", v33, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

uint64_t sub_100277EA8()
{
  uint64_t v0 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v3 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
  id v4 = objc_allocWithZone((Class)NSFetchRequest);
  id v5 = v3;
  NSString v6 = String._bridgeToObjectiveC()();
  id v7 = [v4 initWithEntityName:v6];

  id v28 = _swiftEmptyArrayStorage;
  uint64_t v8 = (void *)swift_allocObject();
  v8[2] = v5;
  v8[3] = v7;
  v8[4] = &v28;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_100283F04;
  *(void *)(v9 + 24) = v8;
  aBlock[4] = sub_10001B3DC;
  void aBlock[5] = v9;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1003F44E4;
  aBlock[3] = &unk_1007A2340;
  uint64_t v10 = _Block_copy(aBlock);
  id v11 = v5;
  id v12 = v7;
  swift_retain();
  swift_release();
  [v11 performBlockAndWait:v10];
  _Block_release(v10);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v10)
  {
    __break(1u);
  }
  else
  {
    Swift::String v14 = v28;
    uint64_t v15 = *((void *)v28 + 2);
    if (v15)
    {
      id v24 = v12;
      id v25 = v11;
      unsigned __int8 v26 = v8;
      id v16 = self;
      swift_bridgeObjectRetain();
      v23[1] = v14;
      unint64_t v17 = v14 + 5;
      do
      {
        swift_bridgeObjectRetain();
        id v18 = [v16 defaultCenter];
        if (qword_1007F6E78 != -1) {
          swift_once();
        }
        uint64_t v19 = qword_10083D400;
        UUID.init(uuidString:)();
        swift_bridgeObjectRelease();
        uint64_t v20 = type metadata accessor for UUID();
        uint64_t v21 = *(void *)(v20 - 8);
        Class isa = 0;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v2, 1, v20) != 1)
        {
          Class isa = UUID._bridgeToObjectiveC()().super.isa;
          (*(void (**)(char *, uint64_t))(v21 + 8))(v2, v20);
        }
        v17 += 2;
        [v18 postNotificationName:v19 object:isa];

        swift_unknownObjectRelease();
        --v15;
      }
      while (v15);

      swift_bridgeObjectRelease();
    }
    else
    {
    }
    swift_release();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1002782AC(void *a1, uint64_t a2, char **a3)
{
  uint64_t v5 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v49 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for UUID();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  id v11 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  Swift::String v14 = (char *)&v49 - v13;
  type metadata accessor for JournalEntryAssetFileAttachmentMO();
  unint64_t v15 = NSManagedObjectContext.fetch<A>(_:)();
  unint64_t v16 = v15;
  id v56 = v14;
  NSString v52 = v11;
  unint64_t v58 = v15;
  if (v15 >> 62)
  {
    swift_bridgeObjectRetain();
    unint64_t v16 = v58;
    uint64_t v17 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v17) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v17 = *(void *)((v15 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v17)
    {
LABEL_3:
      id v51 = a3;
      if (v17 < 1) {
        __break(1u);
      }
      uint64_t v18 = 0;
      unint64_t v59 = v16 & 0xC000000000000001;
      NSString v57 = (void (**)(char *, char *, uint64_t))(v9 + 32);
      uint64_t v19 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
      NSString v55 = (unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
      NSString v49 = (void (**)(char *, uint64_t))(v9 + 8);
      id v50 = a1;
      uint64_t v20 = v52;
      do
      {
        uint64_t v22 = v17;
        if (v59) {
          id v23 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v23 = *(id *)(v16 + 8 * v18 + 32);
        }
        id v24 = v23;
        id v25 = [v23 asset];
        if (!v25) {
          goto LABEL_8;
        }
        unsigned __int8 v26 = v25;
        [v25 removeFileAttachmentsObject:v24];
        id v27 = [v26 id];
        if (v27)
        {
          id v28 = v27;
          static UUID._unconditionallyBridgeFromObjectiveC(_:)();

          id v29 = *v57;
          (*v57)(v7, v20, v8);
          (*v19)(v7, 0, 1, v8);
          if ((*v55)(v7, 1, v8) != 1)
          {
            v29(v56, v7, v8);
            uint64_t v30 = UUID.uuidString.getter();
            uint64_t v53 = v31;
            uint64_t v54 = v30;
            os_log_type_t v32 = v51;
            int v33 = *v51;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *os_log_type_t v32 = v33;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              int v33 = sub_1002A54A0(0, *((void *)v33 + 2) + 1, 1, v33);
              *id v51 = v33;
            }
            unint64_t v36 = *((void *)v33 + 2);
            unint64_t v35 = *((void *)v33 + 3);
            if (v36 >= v35 >> 1)
            {
              int v33 = sub_1002A54A0((char *)(v35 > 1), v36 + 1, 1, v33);
              *id v51 = v33;
            }
            *((void *)v33 + 2) = v36 + 1;
            unint64_t v37 = &v33[16 * v36];
            uint64_t v38 = v53;
            *((void *)v37 + 4) = v54;
            *((void *)v37 + 5) = v38;
            (*v49)(v56, v8);
            uint64_t v21 = v50;
            uint64_t v20 = v52;
            goto LABEL_7;
          }
        }
        else
        {
          (*v19)(v7, 1, 1, v8);
        }
        sub_10001457C((uint64_t)v7, &qword_100800950);
        uint64_t v21 = a1;
LABEL_7:
        a1 = v21;
        [v21 deleteObject:v26];

        unint64_t v16 = v58;
LABEL_8:
        ++v18;

        uint64_t v17 = v22;
      }
      while (v22 != v18);
    }
  }
  swift_bridgeObjectRelease();
  v60[0] = 0;
  unsigned __int8 v39 = [a1 save:v60];
  id v40 = v60[0];
  if (v39)
  {
    id v41 = v40;
  }
  else
  {
    unint64_t v59 = (unint64_t)v60[0];
    id v42 = v60[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
    if (qword_1007F6CC0 != -1) {
      swift_once();
    }
    uint64_t v43 = type metadata accessor for Logger();
    sub_100026A54(v43, (uint64_t)qword_100805A00);
    swift_errorRetain();
    swift_errorRetain();
    NSString v44 = Logger.logObject.getter();
    os_log_type_t v45 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v44, v45))
    {
      NSString v46 = (uint8_t *)swift_slowAlloc();
      id v47 = (void *)swift_slowAlloc();
      *(_DWORD *)NSString v46 = 138412290;
      swift_errorRetain();
      NSString v48 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v60[0] = v48;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      void *v47 = v48;
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl((void *)&_mh_execute_header, v44, v45, "Make Orphans From Existing error:%@", v46, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {
      swift_errorRelease();
      swift_errorRelease();
      swift_errorRelease();
    }
  }
}

void sub_100278908()
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v0 = *(char **)(qword_10083D2F8 + 16);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate];
  uint64_t v2 = v0;
  id v3 = v1;
  sub_1004F31A8(v3);

  id v4 = *(id *)(qword_10083D2F8 + 16);
  sub_1004D1B10();
}

void sub_1002789C8()
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v0 = *(char **)(qword_10083D2F8 + 16);
  uint64_t v1 = *(void **)&v0[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate];
  uint64_t v2 = v0;
  id v3 = v1;
  sub_10029BA60(v3);
}

void sub_100278A64(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = *(void **)(*(void *)(a2 + OBJC_IVAR____TtC7Journal14AdminEntriesVC_model)
                + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController);
  if (!v4) {
    goto LABEL_14;
  }
  id v5 = v4;
  id v6 = [v5 fetchedObjects];
  if (!v6)
  {
LABEL_13:

LABEL_14:
    type metadata accessor for JurassicAlertController();
    NSString v12 = String._bridgeToObjectiveC()();
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v12 message:v13 preferredStyle:1];

    NSString v15 = String._bridgeToObjectiveC()();
    id v16 = [self actionWithTitle:v15 style:0 handler:0];

    [v14 addAction:v16];
    uint64_t v17 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v18 = swift_allocObject();
    *(void *)(v18 + 16) = v17;
    *(void *)(v18 + 24) = v14;
    v21[4] = sub_100283EBC;
    v21[5] = v18;
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 1107296256;
    _OWORD v21[2] = sub_10017D530;
    v21[3] = &unk_1007A22C8;
    uint64_t v19 = _Block_copy(v21);
    id v20 = v14;
    swift_release();
    [a3 dismissViewControllerAnimated:1 completion:v19];
    _Block_release(v19);

    return;
  }
  id v7 = v6;
  type metadata accessor for JournalEntryMO();
  unint64_t v8 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v8 >> 62))
  {
    if (*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v11)
  {
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
LABEL_5:
  if ((v8 & 0xC000000000000001) != 0)
  {
    id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
  }
  else
  {
    if (!*(void *)((v8 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      return;
    }
    id v9 = *(id *)(v8 + 32);
  }
  uint64_t v10 = v9;
  swift_bridgeObjectRelease();
  sub_1000AD100(v10);

  swift_bridgeObjectRelease();
}

void sub_100278D80(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = Strong;
    [Strong presentViewController:a2 animated:1 completion:0];
  }
}

void sub_100278DEC(uint64_t a1, void *a2)
{
  int v3 = byte_10083D248;
  swift_retain();
  if (v3) {
    id v4 = _swiftEmptyArrayStorage;
  }
  else {
    id v4 = (double *)&off_100793DE0;
  }
  sub_100294A28(v4);
  swift_release();
  id v5 = [a2 tableView];
  if (v5)
  {
    id v6 = v5;
    [v5 reloadData];

    byte_10083D248 = (byte_10083D248 & 1) == 0;
  }
  else
  {
    __break(1u);
  }
}

void sub_100278E98()
{
}

void sub_100278EC4()
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v0 = *(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  sub_10047B4D0(v0);
  sub_1002A0B3C();
  sub_1002A10D0(0, 0);
  sub_10029BA60(v0);
}

uint64_t sub_100278F70(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for MainActor();
  id v10 = a2;
  uint64_t v11 = static MainActor.shared.getter();
  NSString v12 = (void *)swift_allocObject();
  v12[2] = v11;
  void v12[3] = &protocol witness table for MainActor;
  v12[4] = v10;
  sub_100328A60((uint64_t)v8, a4, (uint64_t)v12);
  return swift_release();
}

void sub_100279088(uint64_t a1, unsigned char *a2)
{
  type metadata accessor for BatchSettingsVC();
  int v3 = (char *)[objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  long long v34 = *(_OWORD *)&a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings];
  uint64_t v4 = *(void *)&a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 16];
  uint64_t v5 = *(void *)&a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 24];
  if (a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 33]) {
    uint64_t v6 = 256;
  }
  else {
    uint64_t v6 = 0;
  }
  uint64_t v7 = v6 | a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 32];
  if (a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 34]) {
    uint64_t v8 = 0x10000;
  }
  else {
    uint64_t v8 = 0;
  }
  if (a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 35]) {
    uint64_t v9 = 0x1000000;
  }
  else {
    uint64_t v9 = 0;
  }
  uint64_t v10 = v7 | v8 | v9;
  if (a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 36]) {
    uint64_t v11 = &_mh_execute_header;
  }
  else {
    uint64_t v11 = 0;
  }
  if (a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 37]) {
    uint64_t v12 = 0x10000000000;
  }
  else {
    uint64_t v12 = 0;
  }
  unint64_t v13 = (unint64_t)v11 | v12;
  if (a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 38]) {
    uint64_t v14 = 0x1000000000000;
  }
  else {
    uint64_t v14 = 0;
  }
  uint64_t v15 = v10 | v13 | v14;
  if (a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 39]) {
    uint64_t v16 = 0x100000000000000;
  }
  else {
    uint64_t v16 = 0;
  }
  uint64_t v17 = v15 | v16;
  if (a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 41]) {
    uint64_t v18 = 256;
  }
  else {
    uint64_t v18 = 0;
  }
  uint64_t v19 = v18 | a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 40];
  if (a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 42]) {
    uint64_t v20 = 0x10000;
  }
  else {
    uint64_t v20 = 0;
  }
  if (a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 43]) {
    uint64_t v21 = 0x1000000;
  }
  else {
    uint64_t v21 = 0;
  }
  uint64_t v22 = v19 | v20 | v21;
  if (a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 44]) {
    id v23 = &_mh_execute_header;
  }
  else {
    id v23 = 0;
  }
  if (a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 45]) {
    uint64_t v24 = 0x10000000000;
  }
  else {
    uint64_t v24 = 0;
  }
  unint64_t v25 = (unint64_t)v23 | v24;
  if (a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 46]) {
    uint64_t v26 = 0x1000000000000;
  }
  else {
    uint64_t v26 = 0;
  }
  uint64_t v27 = v22 | v25 | v26;
  if (a2[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings + 47]) {
    uint64_t v28 = 0x100000000000000;
  }
  else {
    uint64_t v28 = 0;
  }
  uint64_t v29 = v27 | v28;
  uint64_t v30 = &v3[OBJC_IVAR____TtC7Journal15BatchSettingsVC_batchSettings];
  swift_beginAccess();
  *(_OWORD *)uint64_t v30 = v34;
  *((void *)v30 + 2) = v4;
  *((void *)v30 + 3) = v5;
  *((void *)v30 + 4) = v17;
  *((void *)v30 + 5) = v29;
  uint64_t v31 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  os_log_type_t v32 = &v3[OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass];
  uint64_t v33 = *(void *)&v3[OBJC_IVAR____TtC7Journal15BatchSettingsVC_pass];
  *(void *)os_log_type_t v32 = sub_100283C4C;
  *((void *)v32 + 1) = v31;
  sub_10001ABB8(v33);
  [a2 presentViewController:v3 animated:1 completion:0];
}

void sub_1002792F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for Journaling.EntrySource();
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218(&qword_100805B00);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 2, v12);
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v13 = *(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain);
  UUID.init()();
  uint64_t v14 = type metadata accessor for UUID();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v8, 0, 1, v14);
  id v15 = sub_100190624((uint64_t)v11, (uint64_t)v13, (uint64_t)v8);
  type metadata accessor for Journaling.EntryViewModel();
  swift_allocObject();
  uint64_t v16 = sub_10057F170(v15, 1, 1, v13);
  sub_10001457C((uint64_t)v8, &qword_100800950);
  sub_1000388DC((uint64_t)v11);
  v28[0] = 0x6D6574692077654ELL;
  v28[1] = 0xE900000000000020;
  Date.init()();
  sub_100283AE8((unint64_t *)&qword_1007FC490, (void (*)(uint64_t))&type metadata accessor for Date);
  v17._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v17);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v18 = objc_allocWithZone((Class)NSAttributedString);
  NSString v19 = String._bridgeToObjectiveC()();
  id v20 = [v18 initWithString:v19];
  swift_bridgeObjectRelease();

  uint64_t v21 = OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text;
  if (*(void *)(v16 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text)
    && (objc_msgSend(v20, "isEqualToAttributedString:") & 1) == 0)
  {
    *(unsigned char *)(v16 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_textChanged) = 1;
  }
  uint64_t v22 = *(void **)(v16 + v21);
  *(void *)(v16 + v21) = v20;

  id v23 = objc_allocWithZone((Class)type metadata accessor for AdminComposerVC());
  uint64_t v24 = swift_retain();
  unint64_t v25 = sub_10058865C(v24);
  id v26 = [v1 navigationController];
  if (v26)
  {
    uint64_t v27 = v26;
    [v26 pushViewController:v25 animated:1];
  }
  swift_release();
}

uint64_t sub_100279744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  void v4[6] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v7;
  v4[8] = v6;
  return _swift_task_switch(sub_100279838, v7, v6);
}

uint64_t sub_100279838()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = OBJC_IVAR____TtC7Journal14AdminEntriesVC_model;
  v0[9] = OBJC_IVAR____TtC7Journal14AdminEntriesVC_model;
  v0[10] = *(void *)(v1 + v2);
  swift_retain();
  return _swift_task_switch(sub_1002798B8, 0, 0);
}

uint64_t sub_1002798B8()
{
  (*(void (**)(void, void, void))(v0[4] + 104))(v0[5], enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v0[3]);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  void *v1 = v0;
  v1[1] = sub_1002799BC;
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[5];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v1, v3, sub_100283E28, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_1002799BC()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 32);
  uint64_t v3 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_100279B30, 0, 0);
}

uint64_t sub_100279B30()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  return _swift_task_switch(sub_100279B94, v1, v2);
}

uint64_t sub_100279B94()
{
  v0[12] = *(void *)(v0[2] + v0[9]);
  uint64_t v3 = (uint64_t (*)(void))((char *)&dword_10080CB38 + dword_10080CB38);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[13] = v1;
  void *v1 = v0;
  v1[1] = sub_100279C54;
  return v3();
}

uint64_t sub_100279C54()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_10028434C, v3, v2);
}

uint64_t sub_100279DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[2] = a4;
  uint64_t v5 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v4[3] = v5;
  v4[4] = *(void *)(v5 - 8);
  v4[5] = swift_task_alloc();
  type metadata accessor for MainActor();
  void v4[6] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v7;
  v4[8] = v6;
  return _swift_task_switch(sub_100279EAC, v7, v6);
}

uint64_t sub_100279EAC()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = OBJC_IVAR____TtC7Journal14AdminEntriesVC_model;
  v0[9] = OBJC_IVAR____TtC7Journal14AdminEntriesVC_model;
  v0[10] = *(void *)(v1 + v2);
  swift_retain();
  return _swift_task_switch(sub_100279F2C, 0, 0);
}

uint64_t sub_100279F2C()
{
  (*(void (**)(void, void, void))(v0[4] + 104))(v0[5], enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v0[3]);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  void *v1 = v0;
  v1[1] = sub_10027A030;
  uint64_t v2 = v0[10];
  uint64_t v3 = v0[5];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v1, v3, sub_10028418C, v2, (char *)&type metadata for () + 8);
}

uint64_t sub_10027A030()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 40);
  uint64_t v2 = *(void *)(*(void *)v0 + 32);
  uint64_t v3 = *(void *)(*(void *)v0 + 24);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_10027A1A4, 0, 0);
}

uint64_t sub_10027A1A4()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(void *)(v0 + 64);
  return _swift_task_switch(sub_10027A208, v1, v2);
}

uint64_t sub_10027A208()
{
  v0[12] = *(void *)(v0[2] + v0[9]);
  uint64_t v3 = (uint64_t (*)(void))((char *)&dword_10080CB38 + dword_10080CB38);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[13] = v1;
  void *v1 = v0;
  v1[1] = sub_10027A2C8;
  return v3();
}

uint64_t sub_10027A2C8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_10027A40C, v3, v2);
}

uint64_t sub_10027A40C()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10027A494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a4;
  type metadata accessor for MainActor();
  v4[15] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[16] = v6;
  v4[17] = v5;
  return _swift_task_switch(sub_10027A52C, v6, v5);
}

uint64_t sub_10027A52C()
{
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = OBJC_IVAR____TtC7Journal14AdminEntriesVC_model;
  *(void *)(v0 + 144) = OBJC_IVAR____TtC7Journal14AdminEntriesVC_model;
  *(void *)(v0 + 152) = *(void *)(v1 + v2);
  uint64_t v3 = (long long *)(v1 + OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings);
  long long v4 = v3[2];
  long long v5 = *v3;
  *(_OWORD *)(v0 + 32) = v3[1];
  *(_OWORD *)(v0 + 48) = v4;
  *(_OWORD *)(v0 + 16) = v5;
  swift_retain();
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_10027A60C;
  return sub_1003BC538(v0 + 16);
}

uint64_t sub_10027A60C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 136);
  uint64_t v3 = *(void *)(v1 + 128);
  return _swift_task_switch(sub_10027A750, v3, v2);
}

uint64_t sub_10027A750()
{
  uint64_t v1 = v0[18];
  uint64_t v2 = (char *)v0[14];
  swift_release();
  uint64_t v3 = *(void **)(*(void *)&v2[v1] + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_context);
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = v2;
  uint64_t v5 = swift_allocObject();
  *(void *)(v5 + 16) = sub_100283D58;
  *(void *)(v5 + 24) = v4;
  v0[12] = sub_10001AC84;
  v0[13] = v5;
  v0[8] = _NSConcreteStackBlock;
  v0[9] = 1107296256;
  v0[10] = sub_1003F44E4;
  v0[11] = &unk_1007A2228;
  uint64_t v6 = _Block_copy(v0 + 8);
  id v7 = v3;
  uint64_t v8 = v2;
  swift_retain();
  swift_release();
  [v7 performBlockAndWait:v6];

  _Block_release(v6);
  LOBYTE(v6) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
  return result;
}

id sub_10027A900(uint64_t a1)
{
  uint64_t v2 = OBJC_IVAR____TtC7Journal14AdminEntriesVC_model;
  swift_retain();
  sub_100587B6C();
  swift_release();
  uint64_t v3 = *(void **)(*(void *)(a1 + v2) + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_context);

  return [v3 reset];
}

void sub_10027A994(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  type metadata accessor for MainActor();
  id v10 = a1;
  uint64_t v11 = static MainActor.shared.getter();
  uint64_t v12 = (void *)swift_allocObject();
  v12[2] = v11;
  void v12[3] = &protocol witness table for MainActor;
  v12[4] = v10;
  sub_100328A60((uint64_t)v8, a4, (uint64_t)v12);
  swift_release();
}

void sub_10027AAB4()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal14AdminEntriesVC_model;
  uint64_t v2 = *(void **)&(*(char **)((char *)v0 + OBJC_IVAR____TtC7Journal14AdminEntriesVC_model))[OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController];
  if (v2)
  {
    id v48 = v2;
    id v3 = [v48 fetchedObjects];
    if (v3)
    {
      uint64_t v4 = v3;
      type metadata accessor for JournalEntryMO();
      unint64_t v5 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v46 = v5 >> 62;
      if (v5 >> 62) {
        goto LABEL_49;
      }
      uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRetain();
      while (1)
      {
        uint64_t v45 = v1;
        id v47 = v0;
        if (!v6) {
          break;
        }
        uint64_t v7 = 0;
        uint64_t v8 = 0;
        unint64_t v9 = 0;
        unint64_t v53 = v5 & 0xC000000000000001;
        unint64_t v49 = v5 + 32;
        uint64_t v50 = v5 & 0xFFFFFFFFFFFFFF8;
        uint64_t v0 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
        unint64_t v51 = v5;
        uint64_t v52 = v6;
        while (1)
        {
          if (v53)
          {
            id v10 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (v9 >= *(void *)(v50 + 16)) {
              goto LABEL_48;
            }
            id v10 = *(id *)(v49 + 8 * v9);
          }
          uint64_t v11 = v10;
          BOOL v12 = __OFADD__(v9++, 1);
          if (v12) {
            break;
          }
          id v13 = [v10 v0[110]];
          if (v13)
          {
            uint64_t v1 = (uint64_t)v13;
            uint64_t v14 = (char *)[v13 count];

            BOOL v12 = __OFADD__(v8, v14);
            uint64_t v8 = &v14[(void)v8];
            if (v12) {
              goto LABEL_47;
            }
          }
          id v15 = [v11 v0[110] v45];
          if (v15)
          {
            uint64_t v54 = v8;
            id v16 = v15;
            sub_10028177C(v16);
            uint64_t v18 = v17;

            uint64_t v0 = *(char ***)(v18 + 16);
            if (v0)
            {
              unint64_t v5 = v18 + 32;
              while (1)
              {
                sub_10001B648(v5, (uint64_t)&v55);
                type metadata accessor for JournalEntryAssetMO();
                if (swift_dynamicCast())
                {
                  NSString v19 = v57;
                  id v20 = [v57 fileAttachments];
                  if (v20)
                  {
                    uint64_t v21 = v20;
                    uint64_t v1 = (uint64_t)[v20 count];
                  }
                  else
                  {
                    uint64_t v1 = 0;
                  }

                  BOOL v12 = __OFADD__(v7, v1);
                  v7 += v1;
                  if (v12) {
                    break;
                  }
                }
                v5 += 32;
                uint64_t v0 = (char **)((char *)v0 - 1);
                if (!v0)
                {

                  swift_release();
                  unint64_t v5 = v51;
                  goto LABEL_8;
                }
              }
              __break(1u);
              break;
            }

            swift_release();
LABEL_8:
            uint64_t v8 = v54;
            uint64_t v6 = v52;
            uint64_t v0 = &selRef_archivedDataWithRootObject_requiringSecureCoding_error_;
          }

          if (v9 == v6)
          {
            swift_bridgeObjectRelease();
            goto LABEL_34;
          }
        }
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        swift_bridgeObjectRetain();
        uint64_t v6 = _CocoaArrayWrapper.endIndex.getter();
      }
      swift_bridgeObjectRelease();
      uint64_t v7 = 0;
      uint64_t v8 = 0;
LABEL_34:
      if (qword_1007F6D38 != -1) {
        swift_once();
      }
      uint64_t v22 = *(void **)&(*(char **)((char *)v47 + v45))[OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_context];
      id v23 = *(id *)(qword_10083D2F8 + 16);
      id v24 = v22;
      unint64_t v25 = sub_1004F2C84(v24);

      id v26 = *(void **)&(*(char **)((char *)v47 + v45))[OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_context];
      id v27 = *(id *)(qword_10083D2F8 + 16);
      id v28 = v26;
      unint64_t v29 = sub_10052E220(v28);

      id v30 = [v47 navigationItem];
      uint64_t v55 = 0;
      unint64_t v56 = 0xE000000000000000;
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease();
      uint64_t v55 = 14917;
      unint64_t v56 = 0xE200000000000000;
      if (v46)
      {
        swift_bridgeObjectRetain();
        uint64_t v31 = (char *)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v31 = *(char **)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      NSString v57 = v31;
      v32._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v32);
      swift_bridgeObjectRelease();
      v33._uint64_t countAndFlagsBits = 980631840;
      v33._object = (void *)0xE400000000000000;
      String.append(_:)(v33);
      NSString v57 = v8;
      v34._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v34);
      swift_bridgeObjectRelease();
      v35._uint64_t countAndFlagsBits = 40;
      v35._object = (void *)0xE100000000000000;
      String.append(_:)(v35);
      if (v25 >> 62)
      {
        swift_bridgeObjectRetain();
        unint64_t v36 = (char *)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v36 = *(char **)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      NSString v57 = v36;
      v37._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v37);
      swift_bridgeObjectRelease();
      v38._uint64_t countAndFlagsBits = 0x3A74412029;
      v38._object = (void *)0xE500000000000000;
      String.append(_:)(v38);
      NSString v57 = v7;
      v39._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v39);
      swift_bridgeObjectRelease();
      v40._uint64_t countAndFlagsBits = 40;
      v40._object = (void *)0xE100000000000000;
      String.append(_:)(v40);
      if (v29 >> 62)
      {
        swift_bridgeObjectRetain();
        id v41 = (char *)_CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v41 = *(char **)((v29 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      NSString v57 = v41;
      v42._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v42);
      swift_bridgeObjectRelease();
      v43._uint64_t countAndFlagsBits = 41;
      v43._object = (void *)0xE100000000000000;
      String.append(_:)(v43);
      NSString v44 = String._bridgeToObjectiveC()();
      swift_bridgeObjectRelease();
      [v30 setTitle:v44];
    }
    else
    {
    }
  }
}

id sub_10027B10C(uint64_t a1)
{
  id v3 = (int64x2_t *)&v1[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings];
  *id v3 = vdupq_n_s64(1uLL);
  v3[1].i64[0] = 1;
  v3[1].i64[1] = 0;
  v3[2].i64[0] = 0;
  v3[2].i64[1] = 0;
  uint64_t v4 = OBJC_IVAR____TtC7Journal14AdminEntriesVC_model;
  _s18EntryListViewModelCMa();
  swift_allocObject();
  unint64_t v5 = v1;
  *(void *)&v1[v4] = sub_100036004();
  uint64_t v6 = OBJC_IVAR____TtC7Journal14AdminEntriesVC_titleLabel;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v7 = OBJC_IVAR____TtC7Journal14AdminEntriesVC_activityIndicator;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithFrame:0.0, 0.0, 20.0, 20.0];

  v9.receiver = v5;
  v9.super_class = (Class)type metadata accessor for AdminEntriesVC();
  return [super initWithStyle:a1];
}

id sub_10027B238(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = (int64x2_t *)&v3[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings];
  *uint64_t v6 = vdupq_n_s64(1uLL);
  v6[1].i64[0] = 1;
  v6[1].i64[1] = 0;
  v6[2].i64[0] = 0;
  v6[2].i64[1] = 0;
  uint64_t v7 = OBJC_IVAR____TtC7Journal14AdminEntriesVC_model;
  _s18EntryListViewModelCMa();
  swift_allocObject();
  uint64_t v8 = v3;
  *(void *)&v3[v7] = sub_100036004();
  uint64_t v9 = OBJC_IVAR____TtC7Journal14AdminEntriesVC_titleLabel;
  *(void *)&v8[v9] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v10 = OBJC_IVAR____TtC7Journal14AdminEntriesVC_activityIndicator;
  *(void *)&v8[v10] = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithFrame:0.0, 0.0, 20.0, 20.0];

  if (a2)
  {
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v11 = 0;
  }
  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for AdminEntriesVC();
  [super initWithNibName:v11 bundle:a3];

  return v12;
}

id sub_10027B3E4(void *a1)
{
  id v3 = (int64x2_t *)&v1[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings];
  *id v3 = vdupq_n_s64(1uLL);
  v3[1].i64[0] = 1;
  v3[1].i64[1] = 0;
  v3[2].i64[0] = 0;
  v3[2].i64[1] = 0;
  uint64_t v4 = OBJC_IVAR____TtC7Journal14AdminEntriesVC_model;
  _s18EntryListViewModelCMa();
  swift_allocObject();
  unint64_t v5 = v1;
  *(void *)&v1[v4] = sub_100036004();
  uint64_t v6 = OBJC_IVAR____TtC7Journal14AdminEntriesVC_titleLabel;
  *(void *)&v5[v6] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v7 = OBJC_IVAR____TtC7Journal14AdminEntriesVC_activityIndicator;
  *(void *)&v5[v7] = [objc_allocWithZone((Class)UIActivityIndicatorView) initWithFrame:0.0, 0.0, 20.0, 20.0];

  v10.receiver = v5;
  v10.super_class = (Class)type metadata accessor for AdminEntriesVC();
  [super initWithCoder:a1];

  return v8;
}

uint64_t type metadata accessor for AdminEntriesVC()
{
  return self;
}

void sub_10027B83C(uint64_t a1, void *a2, void *a3)
{
  type metadata accessor for JurassicAlertController();
  unint64_t v5 = self;
  id v6 = [v5 mainBundle];
  v41._object = (void *)0xEC000000656C7469;
  v7._uint64_t countAndFlagsBits = 0x74726F707845;
  v7._object = (void *)0xE600000000000000;
  v8._uint64_t countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  v41._uint64_t countAndFlagsBits = 0x742074726F707845;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v7, (Swift::String_optional)0, (NSBundle)v6, v8, v41);

  NSString v9 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v10 = [(id)swift_getObjCClassFromMetadata() alertControllerWithTitle:v9 message:0 preferredStyle:1];

  id v11 = [v5 mainBundle];
  v12._uint64_t countAndFlagsBits = 0xD000000000000011;
  v42._uint64_t countAndFlagsBits = 0xD000000000000016;
  v42._object = (void *)0x80000001006951A0;
  v12._object = (void *)0x8000000100695180;
  v13._uint64_t countAndFlagsBits = 0;
  v13._object = (void *)0xE000000000000000;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v12, (Swift::String_optional)0, (NSBundle)v11, v13, v42);

  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  id v15 = a2;
  id v16 = a3;
  NSString v17 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Swift::String v39 = sub_100283AD8;
  uint64_t v40 = v14;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v36 = 1107296256;
  Swift::String v37 = sub_10007453C;
  Swift::String v38 = &unk_1007A1DC8;
  uint64_t v18 = _Block_copy(&aBlock);
  swift_release();
  NSString v19 = self;
  id v20 = [v19 actionWithTitle:v17 style:0 handler:v18];
  _Block_release(v18);

  [v10 addAction:v20];
  id v21 = [v5 mainBundle];
  v22._object = (void *)0x80000001006951C0;
  v43._object = (void *)0x80000001006951C0;
  v22._uint64_t countAndFlagsBits = 0xD000000000000012;
  v23._uint64_t countAndFlagsBits = 0;
  v23._object = (void *)0xE000000000000000;
  v43._uint64_t countAndFlagsBits = 0xD000000000000012;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v22, (Swift::String_optional)0, (NSBundle)v21, v23, v43);

  uint64_t v24 = swift_allocObject();
  *(void *)(v24 + 16) = v16;
  id v34 = v16;
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Swift::String v39 = sub_100283AE0;
  uint64_t v40 = v24;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v36 = 1107296256;
  Swift::String v37 = sub_10007453C;
  Swift::String v38 = &unk_1007A1E18;
  id v26 = _Block_copy(&aBlock);
  swift_release();
  id v27 = [v19 actionWithTitle:v25 style:0 handler:v26];
  _Block_release(v26);

  [v10 addAction:v27];
  id v28 = [v5 mainBundle];
  v44._object = (void *)0xED000074726F7078;
  v29._uint64_t countAndFlagsBits = 0x6C65636E6143;
  v29._object = (void *)0xE600000000000000;
  v30._uint64_t countAndFlagsBits = 0;
  v30._object = (void *)0xE000000000000000;
  v44._uint64_t countAndFlagsBits = 0x65206C65636E6143;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v29, (Swift::String_optional)0, (NSBundle)v28, v30, v44);

  NSString v31 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  Swift::String v39 = (void (*)(uint64_t))AudioRecordingActivityState.hash(into:);
  uint64_t v40 = 0;
  Swift::String aBlock = _NSConcreteStackBlock;
  uint64_t v36 = 1107296256;
  Swift::String v37 = sub_10007453C;
  Swift::String v38 = &unk_1007A1E40;
  Swift::String v32 = _Block_copy(&aBlock);
  swift_release();
  id v33 = [v19 actionWithTitle:v31 style:1 handler:v32];
  _Block_release(v32);

  [v10 addAction:v33];
  [v34 presentViewController:v10 animated:1 completion:0];
}

void sub_10027BD6C(uint64_t a1, void *a2, void *a3)
{
  if (qword_1007F7120 != -1) {
    swift_once();
  }
  unint64_t v5 = (void *)qword_10083D6B0;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1006D6D00;
  id v7 = v5;
  id v8 = a2;
  id v9 = [v8 managedObjectContext];
  if (!v9) {
    id v9 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:2];
  }
  type metadata accessor for Journaling.EntryViewModel();
  swift_allocObject();
  *(void *)(v6 + 32) = sub_10057F170(v8, 0, 0, v9);
  specialized Array._endMutation()();
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v10 = *(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container);
  sub_1001E6374(v6, v10, a3);

  swift_bridgeObjectRelease();
}

void sub_10027BF20(uint64_t a1, void *a2)
{
  if (qword_1007F7120 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_1007F6D38;
  id v4 = (id)qword_10083D6B0;
  if (v3 != -1) {
    swift_once();
  }
  id v5 = *(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container);
  sub_1001E6374(0, v5, a2);
}

uint64_t sub_10027C00C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v5 - 8);
  id v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  type metadata accessor for MainActor();
  id v9 = a2;
  id v10 = a3;
  uint64_t v11 = static MainActor.shared.getter();
  Swift::String v12 = (void *)swift_allocObject();
  v12[2] = v11;
  void v12[3] = &protocol witness table for MainActor;
  v12[4] = v9;
  v12[5] = v10;
  sub_100328A60((uint64_t)v7, (uint64_t)&unk_100805AE0, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_10027C13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _OWORD v5[2] = a4;
  v5[3] = a5;
  type metadata accessor for MainActor();
  v5[4] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[5] = v7;
  v5[6] = v6;
  return _swift_task_switch(sub_10027C1D4, v7, v6);
}

uint64_t sub_10027C1D4()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = OBJC_IVAR____TtC7Journal14AdminEntriesVC_model;
  v0[7] = OBJC_IVAR____TtC7Journal14AdminEntriesVC_model;
  v0[8] = *(void *)(v1 + v2);
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[9] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_10027C28C;
  uint64_t v4 = v0[3];
  return sub_10033F478(v4);
}

uint64_t sub_10027C28C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_10027C3D0, v3, v2);
}

uint64_t sub_10027C3D0()
{
  v0[10] = *(void *)(v0[2] + v0[7]);
  uint64_t v3 = (uint64_t (*)(void))((char *)&dword_10080CB38 + dword_10080CB38);
  swift_retain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[11] = v1;
  void *v1 = v0;
  v1[1] = sub_10027C490;
  return v3();
}

uint64_t sub_10027C490()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 40);
  return _swift_task_switch(sub_100193204, v3, v2);
}

uint64_t sub_10027C5D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  a5(a4);
  swift_retain();
  sub_100587B6C();

  return swift_release();
}

uint64_t sub_10027C630(int a1, id a2)
{
  [a2 setFlagged:[a2 flagged] ^ 1];
  [a2 setIsUploadedToCloud:0];
  swift_retain();
  sub_100587B6C();

  return swift_release();
}

UIMenu sub_10027C6B8(uint64_t a1, void *a2, void *a3, void *a4, void *a5, void *a6)
{
  sub_10001B284(0, (unint64_t *)&unk_100809EE0);
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_1006E0570;
  *(void *)(v11 + 32) = a2;
  *(void *)(v11 + 40) = a3;
  *(void *)(v11 + 48) = a4;
  *(void *)(v11 + 56) = a5;
  *(void *)(v11 + 64) = a6;
  children._rawValue = (void *)v11;
  specialized Array._endMutation()();
  id v12 = a2;
  id v13 = a3;
  id v14 = a4;
  id v15 = a5;
  id v16 = a6;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v20.value.super.Class isa = 0;
  v20.is_nil = 0;
  return UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v17, (Swift::String_optional)0, v20, 0, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)children._rawValue, children);
}

uint64_t sub_10027C8B4(char *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = a1;
  uint64_t v338 = a1;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v4 - 8);
  uint64_t v317 = (uint64_t)&v284 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v318 = type metadata accessor for URL();
  uint64_t v327 = *(void **)(v318 - 8);
  __chkstk_darwin(v318);
  CGFloat v307 = (char *)&v284 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v294 = type metadata accessor for ColorResource();
  CGFloat v335 = *(__objc2_meth **)(v294 - 8);
  __chkstk_darwin(v294);
  CGFloat v293 = (char *)&v284 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v8 - 8);
  uint64_t v339 = (char **)((char *)&v284 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v10);
  CGFloat v332 = (__objc2_meth *)((char *)&v284 - v11);
  uint64_t v334 = type metadata accessor for UUID();
  uint64_t v337 = *(void **)(v334 - 8);
  __chkstk_darwin(v334);
  uint64_t v312 = (char *)&v284 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v13 - 8);
  uint64_t v322 = (char *)&v284 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v321 = (uint64_t)&v284 - v16;
  __chkstk_darwin(v17);
  uint64_t v299 = (char *)&v284 - v18;
  __chkstk_darwin(v19);
  uint64_t v298 = (uint64_t)&v284 - v20;
  __chkstk_darwin(v21);
  CGFloat v329 = (char *)&v284 - v22;
  __chkstk_darwin(v23);
  CGFloat v331 = (char *)&v284 - v24;
  uint64_t v328 = (char **)type metadata accessor for Date();
  NSString v25 = *(v328 - 1);
  __chkstk_darwin(v328);
  uint64_t v320 = (char *)&v284 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v27);
  uint64_t v319 = (char *)&v284 - v28;
  *(void *)&double v30 = __chkstk_darwin(v29).n128_u64[0];
  Swift::String v32 = (char *)&v284 - v31;
  id v33 = (void *)*((void *)v3 + 4);
  LODWORD(v3) = [v33 isRemovedFromCloud:v30];
  id v34 = self;
  Swift::String v35 = &selRef_systemGroupedBackgroundColor;
  if (v3) {
    Swift::String v35 = &selRef_redColor;
  }
  id v36 = [v34 *v35];
  [v1 setBackgroundColor:v36];

  [v33 isUploadedToCloud];
  unint64_t v323 = (unint64_t)"Can't get managed object";
  unint64_t v324 = (unint64_t)"Attachment Path: ";
  uint64_t v37 = OBJC_IVAR____TtC7Journal9EntryCell_imageViewUploaded;
  id v38 = *(id *)&v1[OBJC_IVAR____TtC7Journal9EntryCell_imageViewUploaded];
  NSString v39 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v333 = self;
  id v40 = [v333 systemImageNamed:v39];

  [v38 setImage:v40];
  id v41 = *(id *)&v2[v37];
  LODWORD(v40) = [v33 isUploadedToCloud];
  Swift::String v42 = self;
  Swift::String v43 = &selRef_greenColor;
  if (!v40) {
    Swift::String v43 = &selRef_redColor;
  }
  id v44 = [v42 *v43];
  [v41 setTintColor:v44];

  [*(id *)&v2[v37] setContentMode:1];
  uint64_t v45 = *(void **)&v2[OBJC_IVAR____TtC7Journal9EntryCell_lblDate];
  unint64_t v46 = &v338[OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_date];
  swift_beginAccess();
  id v47 = v25;
  id v48 = (void (*)(char *, char *, char **))v25[2];
  unint64_t v49 = v328;
  v48(v32, v46, v328);
  id v50 = [objc_allocWithZone((Class)NSDateFormatter) init];
  NSString v51 = String._bridgeToObjectiveC()();
  [v50 setDateFormat:v51];

  Class isa = Date._bridgeToObjectiveC()().super.isa;
  id v53 = [v50 stringFromDate:isa];

  static String._unconditionallyBridgeFromObjectiveC(_:)();
  CGFloat v341 = v47;
  uint64_t v54 = (void (*)(char *, char **))v47[1];
  id v336 = v32;
  CGFloat v326 = (char *)(v47 + 1);
  CGFloat v325 = v54;
  v54(v32, v49);
  NSString v55 = String._bridgeToObjectiveC()();
  unint64_t v56 = v2;
  swift_bridgeObjectRelease();
  [v45 setText:v55];

  [v45 setTextAlignment:2];
  LODWORD(v55) = [v33 isRemovedFromCloud];
  NSString v57 = self;
  unint64_t v58 = &selRef_lightGrayColor;
  if (v55) {
    unint64_t v58 = &selRef_greenColor;
  }
  id v59 = [v57 *v58];
  [v45 setTextColor:v59];

  id v60 = [self systemFontOfSize:12.0];
  [v45 setFont:v60];

  id v61 = *(void **)&v2[OBJC_IVAR____TtC7Journal9EntryCell_lblText];
  id v340 = v33;
  if ([v33 isRemovedFromCloud])
  {
    id v62 = objc_allocWithZone((Class)NSAttributedString);
    NSString v63 = String._bridgeToObjectiveC()();
    id v64 = [v62 initWithString:v63];

    id v65 = v338;
  }
  else
  {
    id v65 = v338;
    id v64 = *(id *)&v338[OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text];
  }
  [v61 setAttributedText:v64];

  id v66 = v340;
  unsigned int v67 = [v340 isRemovedFromCloud];
  id v68 = self;
  NSString v69 = &selRef_blueColor;
  if (!v67) {
    NSString v69 = &selRef_blackColor;
  }
  id v70 = [v68 *v69];
  [v61 setTextColor:v70];

  uint64_t v345 = 0x4449207972746E45;
  unint64_t v346 = 0xEA0000000000203ALL;
  id v71 = [v66 id];
  uint64_t v72 = v334;
  p_name = v339;
  uint64_t v74 = (uint64_t)v329;
  if (v71)
  {
    id v75 = v71;
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v76 = (__objc2_meth *)v337;
    Class v77 = (void (*)(char *, uint64_t, uint64_t, char **))v337[7];
    NSString v78 = (char *)v74;
    uint64_t v79 = 0;
  }
  else
  {
    NSString v76 = (__objc2_meth *)v337;
    Class v77 = (void (*)(char *, uint64_t, uint64_t, char **))v337[7];
    NSString v78 = v329;
    uint64_t v79 = 1;
  }
  CGFloat v330 = v77;
  v77(v78, v79, 1, (char **)v72);
  NSString v80 = v332;
  uint64_t v81 = v331;
  sub_10018750C(v74, (uint64_t)v331);
  name = v76[2].name;
  CGFloat v332 = v76 + 2;
  CGFloat v331 = name;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))name)(v81, 1, v72))
  {
    sub_10001457C((uint64_t)v81, &qword_100800950);
    uint64_t v83 = 0;
    unint64_t v84 = 0;
  }
  else
  {
    NSString v85 = v312;
    ((void (*)(char *, char *, uint64_t))v76->imp)(v312, v81, v72);
    sub_10001457C((uint64_t)v81, &qword_100800950);
    id v86 = v65;
    NSString v87 = v76;
    uint64_t v83 = UUID.uuidString.getter();
    unint64_t v84 = v88;
    NSString v89 = v87;
    id v65 = v86;
    p_name = v339;
    ((void (*)(char *, uint64_t))v89->types)(v85, v72);
  }
  uint64_t v348 = v83;
  unint64_t v349 = v84;
  uint64_t v339 = (char **)sub_100010218(&qword_100803920);
  v90._uint64_t countAndFlagsBits = String.init<A>(describing:)();
  String.append(_:)(v90);
  swift_bridgeObjectRelease();
  uint64_t v348 = v345;
  unint64_t v349 = v346;
  uint64_t v345 = 0;
  unint64_t v346 = 0xE000000000000000;
  _StringGuts.grow(_:)(17);
  swift_bridgeObjectRelease();
  v347._uint64_t countAndFlagsBits = 0x207374657373410ALL;
  v347._object = (void *)0xEF203A746E756F43;
  id v91 = (__objc2_meth *)&v65[OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assetsAll];
  swift_beginAccess();
  if ((unint64_t)v91->name >> 62) {
    goto LABEL_126;
  }
  uint64_t v92 = *(void *)(((uint64_t)v91->name & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_20:
  v344._uint64_t countAndFlagsBits = v92;
  v93._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
  String.append(_:)(v93);
  swift_bridgeObjectRelease();
  String.append(_:)(v347);
  swift_bridgeObjectRelease();
  id v94 = [v340 createdDate];
  if (v94)
  {
    id v95 = v94;
    id v96 = v336;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    id v97 = v341;
    id v98 = (void (*)(__objc2_meth *, id, char **))v341[4];
    v98(v80, v96, v49);
    id v99 = (void (*)(__objc2_meth *, uint64_t, uint64_t, char **))v97[7];
    v99(v80, 0, 1, v49);
    if (((unsigned int (*)(__objc2_meth *, uint64_t, char **))v97[6])(v80, 1, v49) != 1)
    {
      id v100 = v319;
      v98((__objc2_meth *)v319, v80, v49);
      v347._uint64_t countAndFlagsBits = 0;
      v347._object = (void *)0xE000000000000000;
      _StringGuts.grow(_:)(24);
      swift_bridgeObjectRelease();
      v347._uint64_t countAndFlagsBits = 0xD000000000000016;
      v347._object = (void *)0x80000001006950E0;
      sub_100283AE8((unint64_t *)&qword_1007FC490, (void (*)(uint64_t))&type metadata accessor for Date);
      v101._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v101);
      swift_bridgeObjectRelease();
      String.append(_:)(v347);
      swift_bridgeObjectRelease();
      v325(v100, v49);
      goto LABEL_25;
    }
  }
  else
  {
    id v99 = (void (*)(__objc2_meth *, uint64_t, uint64_t, char **))v341[7];
    v99(v80, 1, 1, v49);
  }
  sub_10001457C((uint64_t)v80, (uint64_t *)&unk_1007FC470);
  v102._uint64_t countAndFlagsBits = 0xD000000000000019;
  v102._object = (void *)0x8000000100694F70;
  String.append(_:)(v102);
LABEL_25:
  id v103 = [v340 entryDate:v284];
  if (v103)
  {
    id v104 = v103;
    id v105 = v336;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    id v106 = v49;
    id v107 = v341;
    id v108 = (void (*)(char **, id, char **))v341[4];
    v108(p_name, v105, v106);
    v99((__objc2_meth *)p_name, 0, 1, v106);
    if (((unsigned int (*)(char **, uint64_t, char **))v107[6])(p_name, 1, v106) != 1)
    {
      id v109 = v320;
      v108((char **)v320, p_name, v106);
      v347._uint64_t countAndFlagsBits = 0;
      v347._object = (void *)0xE000000000000000;
      _StringGuts.grow(_:)(22);
      swift_bridgeObjectRelease();
      v347._uint64_t countAndFlagsBits = 0xD000000000000014;
      v347._object = (void *)0x80000001006950C0;
      sub_100283AE8((unint64_t *)&qword_1007FC490, (void (*)(uint64_t))&type metadata accessor for Date);
      v110._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
      String.append(_:)(v110);
      swift_bridgeObjectRelease();
      String.append(_:)(v347);
      swift_bridgeObjectRelease();
      v325(v109, v106);
      goto LABEL_30;
    }
  }
  else
  {
    v99((__objc2_meth *)p_name, 1, 1, v49);
  }
  sub_10001457C((uint64_t)p_name, (uint64_t *)&unk_1007FC470);
  v111._uint64_t countAndFlagsBits = 0xD000000000000017;
  v111._object = (void *)0x8000000100694F90;
  String.append(_:)(v111);
LABEL_30:
  signed int v112 = [v340 minimumSupportedAppVersion];
  p_name = &v335->name;
  if (qword_1007F6AA8 != -1) {
    swift_once();
  }
  uint64_t v319 = v56;
  if (static Journaling.EntryViewModel.currentAppVersion < v112)
  {
    sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    if (qword_1007F7F58 != -1) {
      swift_once();
    }
    uint64_t v113 = v294;
    uint64_t v114 = sub_100026A54(v294, (uint64_t)qword_10083EF28);
    ((void (*)(char *, uint64_t, uint64_t))p_name[2])(v293, v114, v113);
    int v115 = (void *)UIColor.init(resource:)();
    [v56 setBackgroundColor:v115];

    v347._uint64_t countAndFlagsBits = 0;
    v347._object = (void *)0xE000000000000000;
    _StringGuts.grow(_:)(58);
    v116._uint64_t countAndFlagsBits = 0xD000000000000025;
    v116._object = (void *)0x8000000100695040;
    String.append(_:)(v116);
    id v117 = v340;
    LOWORD(v344._countAndFlagsBits) = (unsigned __int16)[v340 minimumSupportedAppVersion];
    v118._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v118);
    swift_bridgeObjectRelease();
    v119._uint64_t countAndFlagsBits = 0xD000000000000013;
    v119._object = (void *)0x8000000100695070;
    String.append(_:)(v119);
    String.append(_:)(v347);
    swift_bridgeObjectRelease();
    v347._uint64_t countAndFlagsBits = 0;
    v347._object = (void *)0xE000000000000000;
    unint64_t v56 = v319;
    _StringGuts.grow(_:)(62);
    v120._uint64_t countAndFlagsBits = 0xD000000000000029;
    v120._object = (void *)0x8000000100695090;
    String.append(_:)(v120);
    unsigned int v121 = [v117 minimumSupportedAppVersionMode];
    char v122 = v121 == 1;
    if (v121 == 2) {
      char v122 = 2;
    }
    LOBYTE(v344._countAndFlagsBits) = v122;
    _print_unlocked<A, B>(_:_:)();
    v123._uint64_t countAndFlagsBits = 0xD000000000000013;
    v123._object = (void *)0x8000000100695070;
    String.append(_:)(v123);
    String.append(_:)(v347);
    swift_bridgeObjectRelease();
  }
  char v124 = *(void **)&v56[OBJC_IVAR____TtC7Journal9EntryCell_lblCount];
  swift_bridgeObjectRetain();
  NSString v125 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v124 setText:v125];

  [v124 setAdjustsFontSizeToFitWidth:1];
  [v124 setMinimumScaleFactor:0.2];
  LODWORD(v125) = [v340 isRemovedFromCloud];
  id v126 = self;
  uint64_t v127 = &selRef_whiteColor;
  if (!v125) {
    uint64_t v127 = &selRef_darkGrayColor;
  }
  id v128 = [v126 *v127];
  [v124 setTextColor:v128];

  int v129 = v65[OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked];
  id v65 = v56;
  id v130 = [v56 contentView];
  NSString v80 = &stru_1007D7000;
  id v131 = [v130 layer];

  unint64_t v49 = &selRef_setDeliversTouchesForGesturesToSuperview_;
  if (v129 == 1)
  {
    static Color.red.getter();
    uint64_t v132 = (void *)Color.cgColor.getter();
    swift_release();
    [v131 setBorderColor:v132];

    id v133 = [v56 contentView];
    id v131 = [v133 layer];

    [v131 setBorderWidth:2.0];
  }
  else
  {
    [v131 setBorderWidth:0.0];
  }

  uint64_t v134 = v91->name;
  unint64_t v135 = (unint64_t)v91->name >> 62;
  id v300 = v91->name;
  if (v135)
  {
    swift_bridgeObjectRetain();
    uint64_t v138 = _CocoaArrayWrapper.endIndex.getter();
    if (v138) {
      goto LABEL_45;
    }
  }
  else
  {
    uint64_t v136 = *(void *)(((unint64_t)v134 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v138 = v136;
    if (v136)
    {
LABEL_45:
      unint64_t v139 = 0;
      uint64_t v303 = 0;
      uint64_t v297 = OBJC_IVAR____TtC7Journal9EntryCell_assetStack;
      unint64_t v302 = (unint64_t)v300 & 0xC000000000000001;
      uint64_t v288 = (unint64_t)v300 & 0xFFFFFFFFFFFFFF8;
      uint64_t v287 = v300 + 32;
      CGFloat v329 = (char *)(v337 + 7);
      uint64_t v311 = (void (**)(char *, uint64_t, char **))(v337 + 2);
      Swift::String v310 = (void (**)(char *, char **))(v337 + 1);
      id v292 = (void (**)(char *, uint64_t, uint64_t))(p_name + 2);
      unint64_t v308 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v327 + 7);
      CGFloat v316 = (unsigned int (**)(uint64_t, uint64_t, char **))(v327 + 6);
      CGFloat v306 = (void (**)(char *, uint64_t, char **))(v327 + 4);
      CGFloat v305 = (void (**)(char *, char **))(v327 + 1);
      p_object = &v344._object;
      unint64_t v296 = v323 | 0x8000000000000000;
      unint64_t v295 = v324 | 0x8000000000000000;
      id v91 = &stru_1007D7000;
      id v291 = (void *)0x8000000100694FB0;
      CGFloat v290 = (void *)0x8000000100694FE0;
      uint64_t v289 = (char *)&type metadata for Any + 8;
      *(void *)&long long v137 = 138412546;
      long long v284 = v137;
      uint64_t v320 = (char *)0x8000000100695000;
      uint64_t v301 = v138;
      do
      {
        if (v302)
        {
          unint64_t v140 = v139;
          uint64_t v141 = (char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
          BOOL v142 = __OFADD__(v140, 1);
          unint64_t v143 = v140 + 1;
          if (v142) {
            goto LABEL_123;
          }
        }
        else
        {
          if (v139 >= *(void *)(v288 + 16)) {
            goto LABEL_124;
          }
          unint64_t v144 = v139;
          uint64_t v141 = (char *)*(id *)&v287[8 * v139];
          BOOL v142 = __OFADD__(v144, 1);
          unint64_t v143 = v144 + 1;
          if (v142)
          {
LABEL_123:
            __break(1u);
LABEL_124:
            __break(1u);
LABEL_125:
            __break(1u);
LABEL_126:
            swift_bridgeObjectRetain();
            uint64_t v92 = _CocoaArrayWrapper.endIndex.getter();
            swift_bridgeObjectRelease();
            goto LABEL_20;
          }
        }
        unint64_t v309 = v143;
        uint64_t v145 = (void *)OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO;
        uint64_t v146 = *(void **)&v141[OBJC_IVAR____TtCC7Journal10Journaling5Asset_assetMO];
        if (v146)
        {
          uint64_t v315 = v141;
          id v147 = objc_allocWithZone((Class)UIImageView);
          uint64_t v148 = v146;
          CGFloat v341 = v145;
          unint64_t v149 = v148;
          id v65 = (char *)[v147 init];
          [v65 setContentMode:1];
          [v65 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v150 = [v65 widthAnchor];
          p_name = &selRef_drawMapRect_zoomScale_inContext_;
          id v151 = [v150 constraintEqualToConstant:160.0];

          [v151 setActive:1];
          [v65 setTranslatesAutoresizingMaskIntoConstraints:0];
          id v152 = [v65 heightAnchor];
          id v153 = [v152 constraintEqualToConstant:160.0];

          [v153 setActive:1];
          NSString v80 = v149;
          unint64_t v154 = v341;
          uint64_t v328 = *(char ***)&v56[v297];
          unint64_t v314 = v65;
          [v328 addArrangedSubview:v65];
          [(__objc2_meth *)v80 isUploadedToCloud];
          id v155 = [objc_allocWithZone((Class)UIImageView) init];
          NSString v156 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v157 = [v333 systemImageNamed:v156];

          [v155 setImage:v157];
          double v158 = AudioRecordingActivityState.hash(into:)(30.0, 0.0);
          double v160 = v159;
          double v162 = v161;
          double v164 = v163;
          id v165 = v91[94].name;
          id v166 = v155;
          [v166 v165 v158 v160 v162 v164];

          uint64_t v167 = *(void **)((char *)v154 + (void)v315);
          if (!v167 || (uint64_t v168 = &selRef_greenColor, ([v167 isUploadedToCloud] & 1) == 0)) {
            uint64_t v168 = &selRef_redColor;
          }
          id v169 = [self *v168];
          [v166 setTintColor:v169];

          [v166 setContentMode:1];
          id v304 = v166;
          [v314 addSubview:v166];
          id v170 = [objc_allocWithZone((Class)UILabel) init];
          [v56 frame];
          CGRectGetWidth(v350);
          [v170 v91[94].name AudioRecordingActivityState.hash(into:)(60.0, 0.0)];

          id v313 = v170;
          [v170 setNumberOfLines:0];
          v344._uint64_t countAndFlagsBits = 0x4449207465737341;
          v344._object = (void *)0xEA0000000000203ALL;
          id v171 = [(__objc2_meth *)v80 id];
          uint64_t v172 = (uint64_t)v299;
          unint64_t v49 = (char **)v334;
          if (v171)
          {
            id v173 = v171;
            static UUID._unconditionallyBridgeFromObjectiveC(_:)();

            uint64_t v174 = (char *)v172;
            uint64_t v175 = 0;
          }
          else
          {
            uint64_t v174 = v299;
            uint64_t v175 = 1;
          }
          v330(v174, v175, 1, v49);
          uint64_t v176 = v298;
          sub_10018750C(v172, v298);
          if (((unsigned int (*)(uint64_t, uint64_t, char **))v331)(v176, 1, v49))
          {
            sub_10001457C(v176, &qword_100800950);
            uint64_t v177 = 0;
            uint64_t v178 = 0;
          }
          else
          {
            id v179 = v312;
            (*v311)(v312, v176, v49);
            sub_10001457C(v176, &qword_100800950);
            uint64_t v177 = UUID.uuidString.getter();
            uint64_t v178 = v180;
            (*v310)(v179, v49);
          }
          uint64_t v342 = v177;
          uint64_t v343 = v178;
          v181._uint64_t countAndFlagsBits = String.init<A>(describing:)();
          String.append(_:)(v181);
          swift_bridgeObjectRelease();
          Swift::String v347 = v344;
          NSString v182 = *(void **)((char *)v154 + (void)v315);
          if (!v182
            || (id v183 = v182,
                signed int v184 = [v183 minimumSupportedAppVersion],
                signed int v185 = static Journaling.EntryViewModel.currentAppVersion,
                v183,
                BOOL v186 = v185 < v184,
                unint64_t v56 = v319,
                v186))
          {
            sub_10001B284(0, (unint64_t *)&qword_1007FC140);
            uint64_t v187 = qword_1007F7F70;
            id v188 = v313;
            if (v187 != -1) {
              swift_once();
            }
            uint64_t v189 = v294;
            uint64_t v190 = sub_100026A54(v294, (uint64_t)qword_10083EF70);
            (*v292)(v293, v190, v189);
            id v191 = (void *)UIColor.init(resource:)();
            [v188 setBackgroundColor:v191];

            v344._uint64_t countAndFlagsBits = 0;
            v344._object = (void *)0xE000000000000000;
            _StringGuts.grow(_:)(58);
            v192._uint64_t countAndFlagsBits = 0xD000000000000025;
            v192._object = v291;
            String.append(_:)(v192);
            LOWORD(v342) = (unsigned __int16)[(__objc2_meth *)v80 minimumSupportedAppVersion];
            v193._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
            String.append(_:)(v193);
            swift_bridgeObjectRelease();
            v194._uint64_t countAndFlagsBits = 0xD000000000000013;
            v194._object = v290;
            String.append(_:)(v194);
            String.append(_:)(v344);
            swift_bridgeObjectRelease();
          }
          NSString v195 = String._bridgeToObjectiveC()();
          swift_bridgeObjectRelease();
          id v196 = v313;
          [v313 setText:v195];

          [v196 setAdjustsFontSizeToFitWidth:1];
          [v196 setMinimumScaleFactor:0.2];
          unsigned int v197 = [v340 isRemovedFromCloud];
          id v198 = self;
          NSString v199 = &selRef_whiteColor;
          if (!v197) {
            NSString v199 = &selRef_darkGrayColor;
          }
          id v200 = [v198 *v199:v284 *((void *)&v284 + 1)];
          [v196 setTextColor:v200];

          [v314 addSubview:v196];
          id v201 = [(__objc2_meth *)v80 fileAttachments];
          if (v201
            && (id v202 = v201,
                id v203 = [v201 allObjects],
                v202,
                uint64_t v204 = static Array._unconditionallyBridgeFromObjectiveC(_:)(),
                v203,
                unint64_t v205 = (unint64_t)sub_1000E52B0(v204),
                swift_bridgeObjectRelease(),
                v205))
          {
            if (v205 >> 62)
            {
              swift_bridgeObjectRetain();
              uint64_t v206 = _CocoaArrayWrapper.endIndex.getter();
              swift_bridgeObjectRelease();
              if (v206)
              {
LABEL_76:
                if (v206 < 1) {
                  goto LABEL_125;
                }
                uint64_t v207 = 0;
                CGFloat v325 = (void (*)(char *, char **))(v205 & 0xC000000000000001);
                CGFloat v335 = v80;
                uint64_t v327 = (void *)v205;
                CGFloat v326 = (char *)v206;
                while (2)
                {
                  uint64_t v338 = v207;
                  if (v325) {
                    id v208 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
                  }
                  else {
                    id v208 = *(id *)(v205 + 8 * (void)v207 + 32);
                  }
                  uint64_t v209 = v208;
                  p_name = (char **)[objc_allocWithZone((Class)UIImageView) init];
                  [p_name setContentMode:1];
                  [v56 frame];
                  double Width = CGRectGetWidth(v351);
                  [p_name setTranslatesAutoresizingMaskIntoConstraints:0];
                  id v211 = [p_name widthAnchor];
                  id v212 = [v211 constraintEqualToConstant:Width];

                  [v212 setActive:1];
                  [p_name setTranslatesAutoresizingMaskIntoConstraints:0];
                  id v213 = [p_name heightAnchor];
                  id v214 = [v213 constraintEqualToConstant:100.0];

                  [v214 setActive:1];
                  [v209 isUploadedToCloud];
                  id v215 = [objc_allocWithZone((Class)UIImageView) init];
                  id v91 = &stru_1007D7000;
                  [v215 setFrame:AudioRecordingActivityState.hash(into:)(60.0, 0.0)];
                  NSString v216 = String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease();
                  id v217 = [v333 systemImageNamed:v216];

                  [v215 setImage:v217];
                  LODWORD(v216) = [v209 isUploadedToCloud];
                  id v218 = self;
                  id v219 = &selRef_redColor;
                  if (v216) {
                    id v219 = &selRef_greenColor;
                  }
                  id v220 = [v218 *v219];
                  [v215 setTintColor:v220];

                  [v215 setContentMode:1];
                  uint64_t v337 = v215;
                  [p_name addSubview:v215];
                  id v221 = [objc_allocWithZone((Class)UILabel) init];
                  [v56 frame];
                  CGRectGetWidth(v352);
                  [v221 setFrame:AudioRecordingActivityState.hash(into:)(80.0, 0.0)];
                  v344._uint64_t countAndFlagsBits = 0;
                  v344._object = (void *)0xE000000000000000;
                  _StringGuts.grow(_:)(17);
                  swift_bridgeObjectRelease();
                  v344._uint64_t countAndFlagsBits = 0x656D686361747441;
                  v344._object = (void *)0xEF203A444920746ELL;
                  id v222 = [v209 id];
                  if (v222)
                  {
                    id v223 = v222;
                    uint64_t v224 = (uint64_t)v322;
                    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

                    id v225 = (char *)v224;
                    uint64_t v226 = 0;
                  }
                  else
                  {
                    uint64_t v224 = (uint64_t)v322;
                    id v225 = v322;
                    uint64_t v226 = 1;
                  }
                  unint64_t v49 = (char **)v334;
                  v330(v225, v226, 1, (char **)v334);
                  uint64_t v227 = v321;
                  sub_10018750C(v224, v321);
                  if (((unsigned int (*)(uint64_t, uint64_t, char **))v331)(v227, 1, v49))
                  {
                    sub_10001457C(v227, &qword_100800950);
                    uint64_t v228 = 0;
                    uint64_t v229 = 0;
                  }
                  else
                  {
                    unint64_t v230 = v312;
                    (*v311)(v312, v227, v49);
                    sub_10001457C(v227, &qword_100800950);
                    uint64_t v228 = UUID.uuidString.getter();
                    uint64_t v229 = v231;
                    (*v310)(v230, v49);
                  }
                  uint64_t v342 = v228;
                  uint64_t v343 = v229;
                  v232._uint64_t countAndFlagsBits = String.init<A>(describing:)();
                  String.append(_:)(v232);
                  swift_bridgeObjectRelease();
                  NSString v233 = String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease();
                  [v221 setText:v233];

                  [v221 setAdjustsFontSizeToFitWidth:1];
                  [v221 setMinimumScaleFactor:0.2];
                  unsigned int v234 = [v340 isRemovedFromCloud];
                  os_log_type_t v235 = self;
                  id v236 = &selRef_lightGrayColor;
                  if (!v234) {
                    id v236 = &selRef_darkGrayColor;
                  }
                  id v237 = [v235 *v236];
                  [v221 setTextColor:v237];

                  [p_name addSubview:v221];
                  id v65 = (char *)[objc_allocWithZone((Class)UILabel) init];
                  [v56 frame];
                  CGRectGetWidth(v353);
                  [v65 setFrame:AudioRecordingActivityState.hash(into:)(80.0, 20.0)];
                  v344._uint64_t countAndFlagsBits = 0;
                  v344._object = (void *)0xE000000000000000;
                  _StringGuts.grow(_:)(19);
                  swift_bridgeObjectRelease();
                  v344._uint64_t countAndFlagsBits = 0xD000000000000011;
                  v344._object = v320;
                  id v238 = [v209 filePath];
                  CGFloat v341 = v209;
                  id v336 = v221;
                  if (v238)
                  {
                    id v239 = v238;
                    uint64_t v240 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    uint64_t v242 = v241;
                  }
                  else
                  {
                    uint64_t v240 = 0;
                    uint64_t v242 = 0;
                  }
                  uint64_t v342 = v240;
                  uint64_t v343 = v242;
                  v243._uint64_t countAndFlagsBits = String.init<A>(describing:)();
                  String.append(_:)(v243);
                  swift_bridgeObjectRelease();
                  NSString v244 = String._bridgeToObjectiveC()();
                  swift_bridgeObjectRelease();
                  [v65 setText:v244];

                  [v65 setLineBreakMode:3];
                  [v65 setTextAlignment:0];
                  [v65 setAdjustsFontSizeToFitWidth:1];
                  [v65 setMinimumScaleFactor:0.4];
                  unsigned int v245 = [v340 isRemovedFromCloud];
                  id v246 = self;
                  uint64_t v247 = &selRef_lightGrayColor;
                  if (!v245) {
                    uint64_t v247 = &selRef_darkGrayColor;
                  }
                  id v248 = [v246 *v247];
                  [v65 setTextColor:v248];

                  [p_name addSubview:v65];
                  id v249 = [objc_allocWithZone((Class)UIImageView) init];
                  [v56 frame];
                  CGRectGetWidth(v354);
                  [v249 setFrame:AudioRecordingActivityState.hash(into:)(0.0, 40.0)];
                  [p_name addSubview:v249];
                  [v249 setContentMode:1];
                  id v250 = [v341 name];
                  if (v250)
                  {
                    NSURLFileProtectionType v251 = v250;
                    uint64_t v252 = static String._unconditionallyBridgeFromObjectiveC(_:)();
                    uint64_t v254 = v253;

                    id v255 = sub_1005E7674(v252, v254);
                    if (v255
                      && (Swift::String v256 = v255,
                          id v257 = [v255 filePath],
                          v256,
                          v257))
                    {
                      static String._unconditionallyBridgeFromObjectiveC(_:)();

                      type metadata accessor for Journaling();
                      uint64_t v258 = v317;
                      sub_1005E6B0C(v317);
                      swift_bridgeObjectRelease();
                      unint64_t v56 = v319;
                      unint64_t v49 = (char **)v318;
                    }
                    else
                    {
                      uint64_t v258 = v317;
                      unint64_t v49 = (char **)v318;
                      (*v308)(v317, 1, 1, v318);
                    }
                    swift_bridgeObjectRelease();
                    if ((*v316)(v258, 1, v49) == 1)
                    {
                      sub_10001457C(v258, (uint64_t *)&unk_100800A60);
                    }
                    else
                    {
                      id v259 = v307;
                      (*v306)(v307, v258, v49);
                      URL.path.getter();
                      id v260 = objc_allocWithZone((Class)UIImage);
                      NSString v261 = String._bridgeToObjectiveC()();
                      swift_bridgeObjectRelease();
                      id v262 = [v260 initWithContentsOfFile:v261];

                      if (v262)
                      {
                        [v249 setImage:v262];

                        (*v305)(v259, v49);
                        goto LABEL_106;
                      }
                      uint64_t v263 = v303;
                      uint64_t v264 = Data.init(contentsOf:options:)();
                      unint64_t v56 = v319;
                      if (v263)
                      {
                        unint64_t v49 = v263;
                        if (qword_1007F6CC0 != -1) {
                          swift_once();
                        }
                        uint64_t v266 = type metadata accessor for Logger();
                        sub_100026A54(v266, (uint64_t)qword_100805A00);
                        uint64_t v267 = v56;
                        swift_errorRetain();
                        uint64_t v268 = v267;
                        swift_errorRetain();
                        CGFloat v269 = Logger.logObject.getter();
                        os_log_type_t v270 = static os_log_type_t.error.getter();
                        int v271 = v270;
                        if (os_log_type_enabled(v269, v270))
                        {
                          uint64_t v272 = swift_slowAlloc();
                          LODWORD(v303) = v271;
                          uint64_t v273 = v272;
                          uint64_t v274 = (void *)swift_slowAlloc();
                          *(_DWORD *)uint64_t v273 = v284;
                          uint64_t v286 = v273 + 12;
                          v344._uint64_t countAndFlagsBits = (uint64_t)v268;
                          uint64_t v275 = v268;
                          UnsafeMutableRawBufferPointer.copyMemory(from:)();
                          *uint64_t v274 = v319;

                          *(_WORD *)(v273 + 12) = 2112;
                          swift_errorRetain();
                          uint64_t v276 = _swift_stdlib_bridgeErrorToNSError();
                          v344._uint64_t countAndFlagsBits = v276;
                          id v259 = v307;
                          UnsafeMutableRawBufferPointer.copyMemory(from:)();
                          v274[1] = v276;
                          unint64_t v56 = v319;
                          swift_errorRelease();
                          swift_errorRelease();
                          _os_log_impl((void *)&_mh_execute_header, v269, (os_log_type_t)v303, "%@ (getImage) attached file does not contain valid image: %@", (uint8_t *)v273, 0x16u);
                          sub_100010218((uint64_t *)&unk_1007FC430);
                          swift_arrayDestroy();
                          swift_slowDealloc();
                          swift_slowDealloc();
                        }
                        else
                        {

                          swift_errorRelease();
                          swift_errorRelease();

                          CGFloat v269 = v268;
                        }
                        uint64_t v282 = v318;

                        swift_errorRelease();
                        (*v305)(v259, (char **)v282);
                        uint64_t v303 = 0;
                      }
                      else
                      {
                        uint64_t v277 = v264;
                        unint64_t v278 = v265;
                        uint64_t v303 = 0;
                        id v279 = objc_allocWithZone((Class)UIImage);
                        sub_100040D64(v277, v278);
                        Class v280 = Data._bridgeToObjectiveC()().super.isa;
                        id v281 = [v279 initWithData:v280];
                        sub_100040DD0(v277, v278);

                        if (v281)
                        {
                          [v249 setImage:v281];

                          sub_100040DD0(v277, v278);
                          (*v305)(v259, (char **)v318);
                        }
                        else
                        {
                          (*v305)(v259, (char **)v318);
                          sub_100040DD0(v277, v278);
                        }
LABEL_106:
                        unint64_t v56 = v319;
                      }
                      id v91 = &stru_1007D7000;
                    }
                  }
                  uint64_t v207 = v338 + 1;
                  [v328 addArrangedSubview:p_name];

                  NSString v80 = v335;
                  unint64_t v205 = (unint64_t)v327;
                  if (v326 == v207) {
                    break;
                  }
                  continue;
                }
              }
            }
            else
            {
              uint64_t v206 = *(void *)((v205 & 0xFFFFFFFFFFFFFF8) + 0x10);
              if (v206) {
                goto LABEL_76;
              }
            }

            swift_bridgeObjectRelease();
          }
          else
          {
          }
        }
        else
        {
        }
        unint64_t v139 = v309;
      }
      while (v309 != v301);
    }
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

char *sub_10027F648(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = OBJC_IVAR____TtC7Journal9EntryCell_imageViewUploaded;
  id v7 = objc_allocWithZone((Class)UIImageView);
  uint64_t v8 = v3;
  *(void *)&v3[v6] = [v7 init];
  uint64_t v9 = OBJC_IVAR____TtC7Journal9EntryCell_lblDate;
  *(void *)&v8[v9] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v10 = OBJC_IVAR____TtC7Journal9EntryCell_lblText;
  *(void *)&v8[v10] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v11 = OBJC_IVAR____TtC7Journal9EntryCell_assetStack;
  *(void *)&v8[v11] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v12 = OBJC_IVAR____TtC7Journal9EntryCell_lblCount;
  *(void *)&v8[v12] = [objc_allocWithZone((Class)UILabel) init];

  if (a3)
  {
    NSString v13 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v13 = 0;
  }
  v146.receiver = v8;
  v146.super_class = (Class)type metadata accessor for EntryCell();
  [super initWithStyle:a1 reuseIdentifier:v13];

  uint64_t v15 = (char *)v14;
  id v16 = [v15 contentView];
  uint64_t v17 = OBJC_IVAR____TtC7Journal9EntryCell_imageViewUploaded;
  [v16 addSubview:*(void *)&v15[OBJC_IVAR____TtC7Journal9EntryCell_imageViewUploaded]];

  id v18 = *(id *)&v15[v17];
  id v19 = [v18 superview];
  uint64_t v20 = &stru_1007D7000;
  if (v19)
  {
    uint64_t v21 = v19;
    [v18 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v22 = [v18 topAnchor];
    id v23 = [v21 topAnchor];
    id v24 = [v22 constraintEqualToAnchor:v23];

    [v24 setConstant:0.0];
    if (v24)
    {
      id v24 = v24;
      [v24 setActive:1];

      id v18 = v24;
    }
    NSString v25 = &qword_100805000;

    uint64_t v20 = &stru_1007D7000;
  }
  else
  {
    id v24 = 0;
    uint64_t v21 = v18;
    NSString v25 = &qword_100805000;
  }

  id v26 = *(id *)&v15[v17];
  id v27 = [v26 superview];
  if (v27)
  {
    uint64_t v28 = v27;
    [v26 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v29 = [v26 leadingAnchor];
    id v30 = [v28 leadingAnchor];
    id v31 = [v29 constraintEqualToAnchor:v30];

    [v31 setConstant:10.0];
    if (v31)
    {
      id v31 = v31;
      [v31 setActive:1];

      id v26 = v31;
    }
    uint64_t v20 = &stru_1007D7000;
  }
  else
  {
    id v31 = 0;
    uint64_t v28 = v26;
  }

  id v32 = *(id *)&v15[v17];
  [v32 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v33 = [v32 widthAnchor];
  id v34 = [v33 constraintEqualToConstant:40.0];

  [v34 setActive:1];
  id v35 = *(id *)&v15[v17];
  [v35 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v36 = [v35 heightAnchor];
  id v37 = [v36 constraintEqualToConstant:40.0];

  [v37 setActive:1];
  id v38 = [v15 contentView];
  uint64_t v39 = v25[333];
  [v38 addSubview:*(void *)&v15[v39]];

  id v40 = *(id *)&v15[v39];
  id v41 = [v40 superview];
  if (v41)
  {
    Swift::String v42 = v41;
    [v40 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v43 = [v40 v20[100].types];
    id v44 = [v42 v20[100].types];
    id v45 = [v43 constraintEqualToAnchor:v44];

    [v45 setConstant:0.0];
    if (v45)
    {
      id v45 = v45;
      [v45 setActive:1];

      id v40 = v45;
    }
  }
  else
  {
    id v45 = 0;
    Swift::String v42 = v40;
  }

  unint64_t v46 = *(void **)&v15[v17];
  id v47 = *(id *)&v15[v39];
  id v48 = v46;
  [v47 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v49 = [v47 leadingAnchor];
  id v50 = [v48 leadingAnchor];
  id v51 = [v49 constraintEqualToAnchor:v50 constant:0.0];

  [v51 setActive:1];
  id v52 = *(id *)&v15[v39];
  id v53 = [v52 superview];
  if (v53)
  {
    uint64_t v54 = v53;
    [v52 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v55 = [v52 trailingAnchor];
    id v56 = [v54 trailingAnchor];
    id v57 = [v55 constraintEqualToAnchor:v56];

    [v57 setConstant:10.0];
    if (v57)
    {
      id v57 = v57;
      [v57 setActive:1];

      id v52 = v57;
    }
    unint64_t v58 = &stru_1007D7000;
    id v59 = &qword_100805000;
  }
  else
  {
    id v57 = 0;
    uint64_t v54 = v52;
    unint64_t v58 = &stru_1007D7000;
    id v59 = &qword_100805000;
  }

  id v60 = *(id *)&v15[v39];
  [v60 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v61 = [v60 heightAnchor];
  id v62 = [v61 constraintEqualToConstant:20.0];

  [v62 setActive:1];
  [*(id *)&v15[v39] setNumberOfLines:0];
  id v63 = [v15 contentView];
  uint64_t v64 = v59[336];
  [v63 addSubview:*(void *)&v15[v64]];

  id v65 = *(void **)&v15[v17];
  id v66 = *(id *)&v15[v64];
  id v67 = v65;
  [v66 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v68 = [v66 v58[100].types];
  id v69 = [v67 bottomAnchor];
  id v70 = [v68 constraintEqualToAnchor:v69];

  [v70 setConstant:0.0];
  [v70 setActive:1];

  id v71 = *(id *)&v15[v64];
  id v72 = [v71 superview];
  if (v72)
  {
    NSString v73 = v72;
    uint64_t v74 = &stru_1007D7000;
    [v71 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v75 = [v71 leadingAnchor];
    id v76 = [v73 leadingAnchor];
    id v77 = [v75 constraintEqualToAnchor:v76];

    [v77 setConstant:10.0];
    if (v77)
    {
      id v77 = v77;
      NSString v78 = &stru_1007D7000;
      [v77 setActive:1];

      id v71 = v77;
    }
    else
    {
      NSString v78 = &stru_1007D7000;
    }
  }
  else
  {
    id v77 = 0;
    NSString v73 = v71;
    NSString v78 = &stru_1007D7000;
    uint64_t v74 = &stru_1007D7000;
  }

  id v79 = *(id *)&v15[v64];
  id v80 = [v79 superview];
  if (v80)
  {
    uint64_t v81 = v80;
    [v79 v74[96].name];
    id v82 = [v79 trailingAnchor];
    id v83 = [v81 trailingAnchor];
    id v84 = [v82 constraintEqualToAnchor:v83];

    [v84 setConstant:-10.0];
    if (v84)
    {
      id v84 = v84;
      [v84 v78[90].name:1];

      id v79 = v84;
    }
    NSString v85 = &stru_1007D7000;
    id v86 = &qword_100805000;
  }
  else
  {
    id v84 = 0;
    uint64_t v81 = v79;
    NSString v85 = &stru_1007D7000;
    id v86 = &qword_100805000;
  }

  id v87 = *(id *)&v15[v64];
  [v87 v74[96].name];
  id v88 = [v87 heightAnchor];
  id v89 = [v88 constraintEqualToConstant:50.0];

  [v89 v78[90].name:1];
  [*(id *)&v15[v64] setNumberOfLines:0];
  id v90 = [v15 contentView];
  uint64_t v91 = v86[334];
  [v90 addSubview:*(void *)&v15[v91]];

  uint64_t v92 = *(void **)&v15[v64];
  id v93 = *(id *)&v15[v91];
  id v94 = v92;
  [v93 v74[96].name];
  id v95 = [v93 v85[100].types];
  id v96 = [v94 bottomAnchor];
  id v97 = [v95 constraintEqualToAnchor:v96];

  [v97 setConstant:0.0];
  [v97 v78[90].name:1];

  uint64_t v145 = v91;
  id v98 = *(id *)&v15[v91];
  id v99 = [v98 superview];
  if (v99)
  {
    id v100 = v99;
    [v98 v74[96].name];
    id v101 = [v98 leadingAnchor];
    id v102 = [v100 leadingAnchor];
    id v103 = [v101 constraintEqualToAnchor:v102];

    [v103 setConstant:10.0];
    id v104 = v74;
    if (v103)
    {
      id v103 = v103;
      id v105 = &stru_1007D7000;
      [v103 setActive:1];

      id v98 = v103;
    }
    else
    {
      id v105 = &stru_1007D7000;
    }
    id v106 = &qword_100805000;
    uint64_t v107 = v145;
  }
  else
  {
    id v103 = 0;
    id v100 = v98;
    id v105 = &stru_1007D7000;
    id v104 = v74;
    id v106 = &qword_100805000;
    uint64_t v107 = v145;
  }

  id v108 = *(id *)&v15[v107];
  id v109 = [v108 superview];
  if (v109)
  {
    Swift::String v110 = v109;
    [v108 v104[96].name];
    id v111 = [v108 trailingAnchor];
    id v112 = [v110 trailingAnchor];
    id v113 = [v111 constraintEqualToAnchor:v112];

    [v113 setConstant:-10.0];
    if (v113)
    {
      id v113 = v113;
      [v113 v105[90].name:1];

      id v108 = v113;
    }
    uint64_t v114 = &stru_1007D7000;
  }
  else
  {
    id v113 = 0;
    Swift::String v110 = v108;
    uint64_t v114 = &stru_1007D7000;
  }

  id v115 = *(id *)&v15[v107];
  [v115 v104[96].name];
  id v116 = [v115 heightAnchor];
  id v117 = [v116 constraintEqualToConstant:100.0];

  [v117 v105[90].name:1];
  [*(id *)&v15[v107] setNumberOfLines:0];
  id v118 = [v15 contentView];
  uint64_t v119 = v106[335];
  [v118 addSubview:*(void *)&v15[v119]];

  Swift::String v120 = *(void **)&v15[v107];
  id v121 = *(id *)&v15[v119];
  id v122 = v120;
  [v121 v104[96].name];
  id v123 = [v121 v114[100].types];
  id v124 = [v122 bottomAnchor];
  id v125 = [v123 constraintEqualToAnchor:v124];

  [v125 setConstant:0.0];
  [v125 v105[90].name:1];

  id v126 = *(id *)&v15[v119];
  id v127 = [v126 superview];
  if (v127)
  {
    id v128 = v127;
    [v126 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v129 = [v126 leadingAnchor];
    id v130 = [v128 leadingAnchor];
    id v131 = [v129 constraintEqualToAnchor:v130];

    [v131 setConstant:10.0];
    uint64_t v132 = &stru_1007D7000;
    if (v131)
    {
      id v131 = v131;
      id v133 = &stru_1007D7000;
      [v131 setActive:1];

      id v126 = v131;
    }
    else
    {
      id v133 = &stru_1007D7000;
    }
  }
  else
  {
    id v131 = 0;
    id v128 = v126;
    id v133 = &stru_1007D7000;
    uint64_t v132 = &stru_1007D7000;
  }

  id v134 = *(id *)&v15[v119];
  id v135 = [v134 superview];
  if (v135)
  {
    uint64_t v136 = v135;
    [v134 v132[96].name];
    id v137 = [v134 trailingAnchor];
    id v138 = [v136 trailingAnchor];
    id v139 = [v137 constraintEqualToAnchor:v138];

    [v139 setConstant:10.0];
    if (v139)
    {
      id v139 = v139;
      [v139 v133[90].name:1];

      id v134 = v139;
    }
  }
  else
  {
    id v139 = 0;
    uint64_t v136 = v134;
  }

  id v140 = *(id *)&v15[v119];
  id v141 = sub_1001DD438(0, 1, 10.0);

  BOOL v142 = *(void **)&v15[v119];
  [v142 setAxis:1];
  [v142 setAlignment:0];
  [v142 setDistribution:1];
  id v143 = v142;
  [v143 setSpacing:5.0];

  return v15;
}

id sub_100280830()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for EntryCell();
  return [super dealloc];
}

uint64_t type metadata accessor for EntryCell()
{
  return self;
}

id sub_100280DC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_100280FF8(a1, a2, a3, a4, (void (*)(uint64_t))type metadata accessor for AdminEntriesVC);
}

uint64_t sub_100280DE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1002841FC();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100280E44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1002841FC();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100280EA8()
{
}

id sub_100280ED0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100280FF8(a1, a2, a3, 0, (void (*)(uint64_t))type metadata accessor for SyncStatsDisplayVC);
}

uint64_t sub_100280EEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100284250();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100280F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_100284250();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100280FB4()
{
}

id sub_100280FDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_100280FF8(a1, a2, a3, 0, (void (*)(uint64_t))type metadata accessor for OrphanAssetsVC);
}

id sub_100280FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  a5(a4);
  id v5 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v6 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v5];

  return v6;
}

uint64_t sub_100281060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1002842A4();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_1002810C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1002842A4();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_100281128()
{
}

id sub_100281150()
{
  uint64_t v0 = type metadata accessor for UUID();
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  id v3 = objc_allocWithZone((Class)type metadata accessor for AudioIntentViewController());
  id v4 = sub_1003CEEC8((uint64_t)v2);
  id v5 = [objc_allocWithZone((Class)UINavigationController) initWithRootViewController:v4];

  return v5;
}

uint64_t sub_100281200(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1002842F8();

  return static UIViewControllerRepresentable._makeView(view:inputs:)(a1, a2, a3, v6);
}

uint64_t sub_100281264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = sub_1002842F8();

  return static UIViewControllerRepresentable._makeViewList(view:inputs:)(a1, a2, a3, v6);
}

void sub_1002812C8()
{
}

uint64_t sub_100281318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v18 = a4;
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  NSString v13 = (void *)static OS_dispatch_queue.main.getter();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = v4;
  aBlock[4] = a3;
  void aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_10017D530;
  aBlock[3] = v18;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = v4;
  swift_release();
  static DispatchQoS.unspecified.getter();
  aBlock[0] = _swiftEmptyArrayStorage;
  sub_100283AE8((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v15);

  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v19);
}

uint64_t sub_1002815F0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10 = type metadata accessor for Notification();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  NSString v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Notification._unconditionallyBridgeFromObjectiveC(_:)();
  id v14 = a1;
  sub_100281318((uint64_t)v14, a4, a5, a6);

  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1002816F4()
{
  return swift_deallocObject();
}

id sub_10028172C()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal14AdminEntriesVC_activityIndicator) stopAnimating];
}

uint64_t sub_100281748(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_100281758()
{
  return swift_release();
}

id sub_100281760()
{
  return [*(id *)(*(void *)(v0 + 16) + OBJC_IVAR____TtC7Journal14AdminEntriesVC_activityIndicator) startAnimating];
}

void sub_10028177C(void *a1)
{
  uint64_t v2 = type metadata accessor for NSFastEnumerationIterator();
  uint64_t v3 = *(void *)(v2 - 8);
  *(void *)&double v4 = __chkstk_darwin(v2).n128_u64[0];
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = [a1 count];
  if (v7 <= 0)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    unint64_t v11 = *(void *)&_swiftEmptyArrayStorage[3];
  }
  else
  {
    sub_100010218((uint64_t *)&unk_1007FC0F0);
    uint64_t v8 = (double *)swift_allocObject();
    int64_t v9 = j__malloc_size(v8);
    uint64_t v10 = v9 - 32;
    if (v9 < 32) {
      uint64_t v10 = v9 - 1;
    }
    unint64_t v11 = 2 * (v10 >> 5);
    *((void *)v8 + 2) = v7;
    *((void *)v8 + 3) = v11;
  }
  id v12 = a1;
  NSSet.makeIterator()();

  if (v7 < 0)
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  unint64_t v13 = v11 >> 1;
  id v14 = v8 + 4;
  if (v7)
  {
    v13 -= v7;
    sub_100283AE8((unint64_t *)&unk_100805AF0, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
    do
    {
      dispatch thunk of IteratorProtocol.next()();
      if (!v34) {
        goto LABEL_38;
      }
      sub_10002102C(&v33, v14);
      v14 += 2;
    }
    while (--v7);
  }
  uint64_t v30 = v3;
  sub_100283AE8((unint64_t *)&unk_100805AF0, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
  dispatch thunk of IteratorProtocol.next()();
  if (v32)
  {
    while (1)
    {
      sub_10002102C(&v31, &v33);
      if (!v13)
      {
        unint64_t v15 = *((void *)v8 + 3);
        if ((uint64_t)((v15 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_35;
        }
        int64_t v16 = v15 & 0xFFFFFFFFFFFFFFFELL;
        if (v16 <= 1) {
          uint64_t v17 = 1;
        }
        else {
          uint64_t v17 = v16;
        }
        sub_100010218((uint64_t *)&unk_1007FC0F0);
        uint64_t v18 = (double *)swift_allocObject();
        int64_t v19 = j__malloc_size(v18);
        uint64_t v20 = v19 - 32;
        if (v19 < 32) {
          uint64_t v20 = v19 - 1;
        }
        uint64_t v21 = v20 >> 5;
        *((void *)v18 + 2) = v17;
        *((void *)v18 + 3) = 2 * (v20 >> 5);
        unint64_t v22 = (unint64_t)(v18 + 4);
        uint64_t v23 = *((void *)v8 + 3) >> 1;
        if (*((void *)v8 + 2))
        {
          if (v18 != v8 || v22 >= (unint64_t)&v8[4 * v23 + 4]) {
            memmove(v18 + 4, v8 + 4, 32 * v23);
          }
          v8[2] = 0.0;
        }
        id v14 = (_OWORD *)(v22 + 32 * v23);
        unint64_t v13 = (v21 & 0x7FFFFFFFFFFFFFFFLL) - v23;
        swift_release();
        uint64_t v8 = v18;
      }
      BOOL v25 = __OFSUB__(v13--, 1);
      if (v25) {
        break;
      }
      sub_10002102C(&v33, v14);
      v14 += 2;
      dispatch thunk of IteratorProtocol.next()();
      if (!v32) {
        goto LABEL_30;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
LABEL_30:
  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v2);
  sub_10001457C((uint64_t)&v31, &qword_1007FAD50);
  unint64_t v26 = *((void *)v8 + 3);
  if (v26 >= 2)
  {
    unint64_t v27 = v26 >> 1;
    BOOL v25 = __OFSUB__(v27, v13);
    unint64_t v28 = v27 - v13;
    if (v25)
    {
LABEL_37:
      __break(1u);
LABEL_38:
      __break(1u);
      return;
    }
    *((void *)v8 + 2) = v28;
  }
}

uint64_t sub_100281AE4()
{
  uint64_t v1 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC7Journal14AdminEntriesVC_model)
                + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController);
  if (v1
    && (id v2 = v1,
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa,
        id v4 = [v2 objectAtIndexPath:isa],
        v2,
        isa,
        v4))
  {
    id v5 = v4;
    id v6 = [v5 managedObjectContext];
    if (!v6) {
      id v6 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:2];
    }
    type metadata accessor for Journaling.EntryViewModel();
    swift_allocObject();
    uint64_t v7 = (char *)sub_10057F170(v5, 0, 0, v6);
    id v8 = [objc_allocWithZone((Class)type metadata accessor for EntryCell()) initWithStyle:0 reuseIdentifier:0];
    sub_10027C8B4(v7);
    swift_release();

    return (uint64_t)v8;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

uint64_t sub_100281C70(unint64_t a1)
{
  uint64_t v3 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC7Journal14AdminEntriesVC_model)
                + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController);
  if (v3)
  {
    id v4 = [v3 sections];
    if (v4)
    {
      id v5 = v4;
      sub_100010218(&qword_1007F9BD0);
      uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if ((v6 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_7;
      }
      if ((a1 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
      {
        uint64_t v7 = *(void **)(v6 + 8 * a1 + 32);
        swift_unknownObjectRetain();
LABEL_7:
        swift_bridgeObjectRelease();
        id v8 = [v7 name];
        uint64_t v9 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        swift_unknownObjectRelease();

        return v9;
      }
      __break(1u);
    }
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100281DD4(unint64_t a1)
{
  uint64_t v3 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC7Journal14AdminEntriesVC_model)
                + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController);
  if (v3)
  {
    id v4 = [v3 sections];
    if (v4)
    {
      id v5 = v4;
      sub_100010218(&qword_1007F9BD0);
      uint64_t v6 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

      if ((v6 & 0xC000000000000001) != 0)
      {
        uint64_t v7 = (void *)specialized _ArrayBuffer._getElementSlowPath(_:)();
        goto LABEL_7;
      }
      if ((a1 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
      {
        uint64_t v7 = *(void **)(v6 + 8 * a1 + 32);
        swift_unknownObjectRetain();
LABEL_7:
        swift_bridgeObjectRelease();
        id v8 = [v7 numberOfObjects];
        swift_unknownObjectRelease();
        return (uint64_t)v8;
      }
      __break(1u);
    }
  }
  uint64_t result = _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_100281F1C()
{
  uint64_t v1 = v0;
  id v2 = *(void **)(*(void *)&v0[OBJC_IVAR____TtC7Journal14AdminEntriesVC_model]
                + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController);
  if (v2
    && (id v3 = v2,
        Class v4 = IndexPath._bridgeToObjectiveC()().super.isa,
        id v5 = [v3 objectAtIndexPath:v4],
        v3,
        v4,
        v5))
  {
    unsigned int v6 = [v5 isRemovedFromCloud];
    uint64_t v68 = [v5 isRemovedFromCloud];
    sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
    NSString v7 = String._bridgeToObjectiveC()();
    id v8 = self;
    id v9 = [v8 systemImageNamed:v7];

    uint64_t v10 = swift_allocObject();
    *(void *)(v10 + 16) = v5;
    *(void *)(v10 + 24) = v1;
    id v11 = v5;
    id v12 = v1;
    uint64_t v67 = v6;
    id v70 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    NSString v13 = String._bridgeToObjectiveC()();
    id v14 = [v8 systemImageNamed:v13];

    uint64_t v15 = swift_allocObject();
    *(void *)(v15 + 16) = v12;
    *(void *)(v15 + 24) = v11;
    id v16 = v11;
    id v17 = v12;
    uint64_t v62 = v15;
    uint64_t v60 = v68;
    id v69 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    UIMenuElementSize preferredElementSize = swift_allocObject();
    *(_OWORD *)(preferredElementSize + 16) = xmmword_1006D6D10;
    NSString v19 = String._bridgeToObjectiveC()();
    id v20 = [v8 systemImageNamed:v19];

    if (v6) {
      children._rawValue = (void *)9;
    }
    else {
      children._rawValue = (void *)8;
    }
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v16;
    *(void *)(v22 + 24) = v17;
    id v23 = v16;
    id v24 = v17;
    *(void *)(preferredElementSize + 32) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    NSString v25 = String._bridgeToObjectiveC()();
    id v26 = [v8 systemImageNamed:v25 children._rawValue sub_100283890 v22];

    sub_10001B284(0, (unint64_t *)&unk_100809EE0);
    uint64_t v27 = swift_allocObject();
    *(void *)(v27 + 16) = v23;
    *(void *)(v27 + 24) = v24;
    id v28 = v23;
    id v29 = v24;
    *(void *)(preferredElementSize + 40) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    specialized Array._endMutation()();
    v30._uint64_t countAndFlagsBits = 0x6E6F697461657243;
    v30._object = (void *)0xED00006574614420;
    v72.value.super.Class isa = 0;
    v72.is_nil = 0;
    Class isa = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v30, (Swift::String_optional)0, v72, 0, 0xFFFFFFFFFFFFFFFFLL, preferredElementSize, children).super.super.isa;
    UIMenuElementSize v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1006D6D10;
    NSString v32 = String._bridgeToObjectiveC()();
    id v33 = [v8 systemImageNamed:v32];

    uint64_t v34 = swift_allocObject();
    *(void *)(v34 + 16) = v28;
    *(void *)(v34 + 24) = v29;
    id v35 = v28;
    id v36 = v29;
    uint64_t v63 = v34;
    *(void *)(v31 + 32) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    NSString v37 = String._bridgeToObjectiveC()();
    id v38 = [v8 systemImageNamed:v37];

    uint64_t v39 = swift_allocObject();
    *(void *)(v39 + 16) = v35;
    *(void *)(v39 + 24) = v36;
    id v40 = v35;
    id v41 = v36;
    *(void *)(v31 + 40) = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    specialized Array._endMutation()();
    v42._uint64_t countAndFlagsBits = 0x6144207972746E45;
    v42._object = (void *)0xEA00000000006574;
    v73.value.super.Class isa = 0;
    v73.is_nil = 0;
    Class v43 = UIMenu.init(title:subtitle:image:identifier:options:preferredElementSize:children:)(v42, (Swift::String_optional)0, v73, 0, 0xFFFFFFFFFFFFFFFFLL, v31, children).super.super.isa;
    NSString v44 = String._bridgeToObjectiveC()();
    id v45 = [v8 systemImageNamed:v44];

    uint64_t v46 = [v40 flagged];
    uint64_t v47 = swift_allocObject();
    *(void *)(v47 + 16) = v40;
    *(void *)(v47 + 24) = v41;
    id v65 = v40;
    id v48 = v41;
    uint64_t v64 = v47;
    uint64_t v61 = v46;
    id v49 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v50 = (void *)swift_allocObject();
    void v50[2] = v70;
    v50[3] = v69;
    v50[4] = isa;
    v50[5] = v43;
    v50[6] = v49;
    id v51 = self;
    aBlock[4] = (UIMenuElementSize)sub_1002839C0;
    void aBlock[5] = (UIMenuElementSize)v50;
    aBlock[0] = (UIMenuElementSize)_NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = (UIMenuElementSize)sub_1005D2ABC;
    aBlock[3] = (UIMenuElementSize)&unk_1007A1D50;
    id v52 = _Block_copy(aBlock);
    id v53 = v70;
    id v54 = v69;
    id v55 = isa;
    id v56 = v43;
    id v57 = v49;
    swift_retain();
    swift_release();
    id v58 = [v51 configurationWithIdentifier:0 previewProvider:0 actionProvider:v52];
    swift_release();
    _Block_release(v52);

    return (uint64_t)v58;
  }
  else
  {
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
  return result;
}

void sub_100282820()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal9EntryCell_imageViewUploaded;
  *(void *)&v0[v1] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v2 = OBJC_IVAR____TtC7Journal9EntryCell_lblDate;
  *(void *)&v0[v2] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v3 = OBJC_IVAR____TtC7Journal9EntryCell_lblText;
  *(void *)&v0[v3] = [objc_allocWithZone((Class)UILabel) init];
  uint64_t v4 = OBJC_IVAR____TtC7Journal9EntryCell_assetStack;
  *(void *)&v0[v4] = [objc_allocWithZone((Class)UIStackView) init];
  uint64_t v5 = OBJC_IVAR____TtC7Journal9EntryCell_lblCount;
  *(void *)&v0[v5] = [objc_allocWithZone((Class)UILabel) init];

  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_100282924()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)(*(void *)&v0[OBJC_IVAR____TtC7Journal14AdminEntriesVC_model]
                + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController);
  if (v2
    && (id v3 = v2,
        Class isa = IndexPath._bridgeToObjectiveC()().super.isa,
        id v5 = [v3 objectAtIndexPath:isa],
        v3,
        isa,
        v5))
  {
    id v12 = v5;
    id v6 = [v12 managedObjectContext];
    if (!v6) {
      id v6 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:2];
    }
    type metadata accessor for Journaling.EntryViewModel();
    swift_allocObject();
    sub_10057F170(v12, 1, 0, v6);
    id v7 = objc_allocWithZone((Class)type metadata accessor for AdminComposerVC());
    uint64_t v8 = swift_retain();
    id v9 = sub_10058865C(v8);
    id v10 = [v1 navigationController];
    if (v10)
    {
      id v11 = v10;
      [v10 pushViewController:v9 animated:1];
    }
    swift_release();
  }
  else
  {
    _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
  }
}

void sub_100282AF0()
{
  sub_100010218((uint64_t *)&unk_1007FC0F0);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_1006D6280;
  *(void *)(v1 + 56) = &type metadata for String;
  *(void *)(v1 + 32) = 0xD00000000000003ELL;
  *(void *)(v1 + 40) = 0x8000000100694ED0;
  print(_:separator:terminator:)();
  swift_bridgeObjectRelease();
  id v2 = [v0 tableView];
  if (v2)
  {
    id v3 = v2;
    [v2 beginUpdates];
  }
  else
  {
    __break(1u);
  }
}

void sub_100282BC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for IndexSet();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100010218((uint64_t *)&unk_1007FC0F0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1006D6280;
  uint64_t v21 = 0;
  unint64_t v22 = 0xE000000000000000;
  _StringGuts.grow(_:)(61);
  v9._object = (void *)0x8000000100694E90;
  v9._uint64_t countAndFlagsBits = 0xD00000000000003BLL;
  String.append(_:)(v9);
  v20[1] = a2;
  type metadata accessor for NSFetchedResultsChangeType(0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v10 = v21;
  unint64_t v11 = v22;
  *(void *)(v8 + 56) = &type metadata for String;
  *(void *)(v8 + 32) = v10;
  *(void *)(v8 + 40) = v11;
  print(_:separator:terminator:)();
  swift_bridgeObjectRelease();
  if (a2 == 2)
  {
    id v17 = [v2 tableView];
    if (v17)
    {
      NSString v13 = v17;
      IndexSet.init(integer:)();
      IndexSet._bridgeToObjectiveC()(v18);
      id v16 = v19;
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      [v13 deleteSections:v16 withRowAnimation:0];
      goto LABEL_7;
    }
LABEL_10:
    __break(1u);
    return;
  }
  if (a2 != 1) {
    return;
  }
  id v12 = [v2 tableView];
  if (!v12)
  {
    __break(1u);
    goto LABEL_10;
  }
  NSString v13 = v12;
  IndexSet.init(integer:)();
  IndexSet._bridgeToObjectiveC()(v14);
  id v16 = v15;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  [v13 insertSections:v16 withRowAnimation:0];
LABEL_7:
}

void sub_100282E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v79 = a4;
  uint64_t v80 = a2;
  uint64_t v84 = type metadata accessor for IndexPath();
  uint64_t v82 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v74 = &v72[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100010218((uint64_t *)&unk_100805AB8);
  __chkstk_darwin(v7);
  Swift::String v9 = &v72[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100010218((uint64_t *)&unk_1007FD5D0);
  __chkstk_darwin(v10 - 8);
  NSString v78 = &v72[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  id v77 = &v72[-v13];
  __chkstk_darwin(v14);
  id v75 = &v72[-v15];
  __chkstk_darwin(v16);
  id v76 = &v72[-v17];
  __chkstk_darwin(v18);
  id v20 = &v72[-v19];
  __chkstk_darwin(v21);
  id v23 = &v72[-v22];
  __chkstk_darwin(v24);
  id v26 = &v72[-v25];
  sub_100010218((uint64_t *)&unk_1007FC0F0);
  uint64_t v27 = swift_allocObject();
  long long v81 = xmmword_1006D6280;
  *(_OWORD *)(v27 + 16) = xmmword_1006D6280;
  uint64_t v86 = 0;
  unint64_t v87 = 0xE000000000000000;
  _StringGuts.grow(_:)(64);
  uint64_t v88 = v86;
  unint64_t v89 = v87;
  v28._object = (void *)0x8000000100694E50;
  v28._uint64_t countAndFlagsBits = 0xD000000000000035;
  String.append(_:)(v28);
  sub_10001B648(a1, (uint64_t)&v86);
  sub_10001B284(0, &qword_1008113A0);
  if (swift_dynamicCast())
  {
    id v29 = v85;
    uint64_t v30 = sub_1001903F4();
    NSString v32 = v31;
  }
  else
  {
    uint64_t v30 = 0;
    NSString v32 = (void *)0xE000000000000000;
  }
  v33._uint64_t countAndFlagsBits = v30;
  v33._object = v32;
  String.append(_:)(v33);
  swift_bridgeObjectRelease();
  v34._uint64_t countAndFlagsBits = 0x203A6570797420;
  v34._object = (void *)0xE700000000000000;
  String.append(_:)(v34);
  uint64_t v86 = a3;
  type metadata accessor for NSFetchedResultsChangeType(0);
  _print_unlocked<A, B>(_:_:)();
  uint64_t v35 = v88;
  unint64_t v36 = v89;
  *(void *)(v27 + 56) = &type metadata for String;
  *(void *)(v27 + 32) = v35;
  *(void *)(v27 + 40) = v36;
  print(_:separator:terminator:)();
  swift_bridgeObjectRelease();
  switch(a3)
  {
    case 1:
      NSString v37 = (objc_class *)[v83 tableView];
      uint64_t v38 = v84;
      if (v37)
      {
        Class isa = v37;
        sub_100010218((uint64_t *)&unk_1007FABC0);
        uint64_t v40 = v82;
        unint64_t v41 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
        uint64_t v42 = swift_allocObject();
        *(_OWORD *)(v42 + 16) = v81;
        sub_1002837D8(v79, (uint64_t)v26);
        if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v40 + 48))(v26, 1, v38) != 1)
        {
          (*(void (**)(unint64_t, unsigned char *, uint64_t))(v40 + 32))(v42 + v41, v26, v38);
          v43.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          [(objc_class *)isa insertRowsAtIndexPaths:v43.super.isa withRowAnimation:0];
          goto LABEL_29;
        }
      }
      else
      {
        __break(1u);
      }
      __break(1u);
LABEL_32:
      __break(1u);
LABEL_33:
      __break(1u);
LABEL_34:
      __break(1u);
LABEL_35:
      __break(1u);
      goto LABEL_36;
    case 2:
      NSString v44 = (objc_class *)[v83 tableView];
      uint64_t v45 = v84;
      if (!v44) {
        goto LABEL_32;
      }
      Class isa = v44;
      sub_100010218((uint64_t *)&unk_1007FABC0);
      uint64_t v46 = v82;
      unint64_t v47 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
      uint64_t v48 = swift_allocObject();
      *(_OWORD *)(v48 + 16) = v81;
      sub_1002837D8(v80, (uint64_t)v23);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v46 + 48))(v23, 1, v45) == 1) {
        goto LABEL_33;
      }
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v46 + 32))(v48 + v47, v23, v45);
      v43.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [(objc_class *)isa deleteRowsAtIndexPaths:v43.super.isa withRowAnimation:0];
      goto LABEL_29;
    case 3:
      uint64_t v49 = (uint64_t)&v9[*(int *)(v7 + 48)];
      uint64_t v50 = v80;
      sub_1002837D8(v80, (uint64_t)v9);
      sub_1002837D8(v79, v49);
      uint64_t v51 = v82;
      id v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v82 + 48);
      uint64_t v53 = v84;
      if (v52((uint64_t)v9, 1, v84) == 1)
      {
        if (v52(v49, 1, v53) == 1)
        {
          sub_10001457C((uint64_t)v9, (uint64_t *)&unk_1007FD5D0);
          goto LABEL_25;
        }
        goto LABEL_19;
      }
      id v59 = v76;
      sub_1002837D8((uint64_t)v9, (uint64_t)v76);
      if (v52(v49, 1, v53) == 1)
      {
        (*(void (**)(unsigned char *, uint64_t))(v51 + 8))(v59, v53);
LABEL_19:
        sub_10001457C((uint64_t)v9, (uint64_t *)&unk_100805AB8);
        goto LABEL_20;
      }
      id v66 = v74;
      (*(void (**)(unsigned char *, uint64_t, uint64_t))(v51 + 32))(v74, v49, v53);
      sub_100283AE8((unint64_t *)&unk_100805AC8, (void (*)(uint64_t))&type metadata accessor for IndexPath);
      int v73 = dispatch thunk of static Equatable.== infix(_:_:)();
      uint64_t v67 = *(void (**)(unsigned char *, uint64_t))(v51 + 8);
      v67(v66, v53);
      v67(v59, v53);
      sub_10001457C((uint64_t)v9, (uint64_t *)&unk_1007FD5D0);
      if ((v73 & 1) == 0)
      {
LABEL_20:
        id v60 = [v83 tableView];
        if (v60)
        {
          uint64_t v61 = v60;
          uint64_t v62 = v77;
          sub_1002837D8(v50, (uint64_t)v77);
          unsigned int v63 = v52((uint64_t)v62, 1, v53);
          uint64_t v64 = (uint64_t)v78;
          if (v63 != 1)
          {
            Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
            id v65 = *(void (**)(unsigned char *, uint64_t))(v51 + 8);
            v65(v62, v53);
            sub_1002837D8(v79, v64);
            if (v52(v64, 1, v53) != 1)
            {
              v43.super.Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
              v65((unsigned char *)v64, v53);
              [v61 moveRowAtIndexPath:isa toIndexPath:v43.super.isa];

              goto LABEL_29;
            }
            goto LABEL_38;
          }
        }
        else
        {
LABEL_36:
          __break(1u);
        }
        __break(1u);
LABEL_38:
        __break(1u);
        goto LABEL_39;
      }
LABEL_25:
      uint64_t v68 = (objc_class *)[v83 tableView];
      if (!v68)
      {
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
      Class isa = v68;
      sub_100010218((uint64_t *)&unk_1007FABC0);
      unint64_t v69 = (*(unsigned __int8 *)(v51 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v51 + 80);
      uint64_t v70 = swift_allocObject();
      *(_OWORD *)(v70 + 16) = v81;
      id v71 = v75;
      sub_1002837D8(v50, (uint64_t)v75);
      if (v52((uint64_t)v71, 1, v53) == 1)
      {
LABEL_40:
        __break(1u);
        JUMPOUT(0x1002837C8);
      }
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v51 + 32))(v70 + v69, v71, v53);
LABEL_28:
      v43.super.Class isa = Array._bridgeToObjectiveC()().super.isa;
      swift_bridgeObjectRelease();
      [(objc_class *)isa reloadRowsAtIndexPaths:v43.super.isa withRowAnimation:0];
LABEL_29:

      return;
    case 4:
      id v54 = (objc_class *)[v83 tableView];
      uint64_t v55 = v84;
      if (!v54) {
        goto LABEL_34;
      }
      Class isa = v54;
      sub_100010218((uint64_t *)&unk_1007FABC0);
      uint64_t v56 = v82;
      unint64_t v57 = (*(unsigned __int8 *)(v82 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v82 + 80);
      uint64_t v58 = swift_allocObject();
      *(_OWORD *)(v58 + 16) = v81;
      sub_1002837D8(v80, (uint64_t)v20);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v56 + 48))(v20, 1, v55) == 1) {
        goto LABEL_35;
      }
      (*(void (**)(unint64_t, unsigned char *, uint64_t))(v56 + 32))(v58 + v57, v20, v55);
      goto LABEL_28;
    default:
      return;
  }
}

uint64_t sub_1002837D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FD5D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100283840()
{
  return swift_deallocObject();
}

void sub_100283880(uint64_t a1)
{
  sub_10027B83C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100283888(uint64_t a1)
{
  return sub_10027C00C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100283890(uint64_t a1)
{
  return sub_10027C5D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), -1, (void (*)(uint64_t))sub_1000EEC14);
}

uint64_t sub_1002838C4(uint64_t a1)
{
  return sub_10027C5D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), 1, (void (*)(uint64_t))sub_1000EEC14);
}

uint64_t sub_1002838F8(uint64_t a1)
{
  return sub_10027C5D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), -1, (void (*)(uint64_t))sub_1000EEC00);
}

uint64_t sub_10028392C(uint64_t a1)
{
  return sub_10027C5D4(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), 1, (void (*)(uint64_t))sub_1000EEC00);
}

uint64_t sub_100283960(int a1)
{
  return sub_10027C630(a1, *(id *)(v1 + 16));
}

uint64_t sub_100283968()
{
  return swift_deallocObject();
}

UIMenu sub_1002839C0(uint64_t a1)
{
  return sub_10027C6B8(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

uint64_t sub_1002839D0()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100283A18(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *uint64_t v8 = v2;
  v8[1] = sub_100052588;
  return sub_10027C13C(a1, v4, v5, v7, v6);
}

void sub_100283AD8(uint64_t a1)
{
  sub_10027BD6C(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

void sub_100283AE0(uint64_t a1)
{
  sub_10027BF20(a1, *(void **)(v1 + 16));
}

uint64_t sub_100283AE8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_100283B30(uint64_t a1)
{
  sub_100278A64(a1, *(void *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_100283B38()
{
  return swift_deallocObject();
}

void sub_100283B70(uint64_t a1)
{
  sub_100278DEC(a1, *(void **)(v1 + 16));
}

uint64_t sub_100283B78(uint64_t a1)
{
  return sub_100278F70(a1, *(void **)(v1 + 16), (uint64_t)&unk_1007A2260, (uint64_t)&unk_100805B20);
}

void sub_100283BB0()
{
}

uint64_t sub_100283BD4(uint64_t a1)
{
  return sub_100278F70(a1, *(void **)(v1 + 16), (uint64_t)&unk_1007A21C0, (uint64_t)&unk_100805B10);
}

void sub_100283C0C(uint64_t a1)
{
  sub_100279088(a1, *(unsigned char **)(v1 + 16));
}

uint64_t sub_100283C14()
{
  swift_unknownObjectUnownedDestroy();

  return swift_deallocObject();
}

void sub_100283C4C(_OWORD *a1)
{
  uint64_t Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  id v3 = &Strong[OBJC_IVAR____TtC7Journal14AdminEntriesVC_settings];
  long long v4 = a1[1];
  *(_OWORD *)id v3 = *a1;
  *((_OWORD *)v3 + 1) = v4;
  *((_OWORD *)v3 + 2) = a1[2];
}

uint64_t sub_100283CA4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_10027A494(a1, v4, v5, v6);
}

id sub_100283D58()
{
  return sub_10027A900(*(void *)(v0 + 16));
}

uint64_t sub_100283D60()
{
  return swift_deallocObject();
}

uint64_t sub_100283D74(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_100279744(a1, v4, v5, v6);
}

unint64_t sub_100283E28()
{
  return sub_1003400B0();
}

uint64_t sub_100283E44()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100283E7C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100283EBC()
{
  sub_100278D80(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_100283EC4()
{
  return swift_deallocObject();
}

void sub_100283F04()
{
  sub_1002782AC(*(void **)(v0 + 16), *(void *)(v0 + 24), *(char ***)(v0 + 32));
}

uint64_t sub_100283F10()
{
  return swift_deallocObject();
}

void sub_100283F20()
{
  sub_1002779D4(*(void **)(v0 + 16));
}

uint64_t sub_100283F28()
{
  return swift_deallocObject();
}

uint64_t sub_100283F38()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100283F70(uint64_t a1)
{
  id v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *id v3 = v1;
  v3[1] = sub_100052588;
  return sub_100277538(a1);
}

uint64_t sub_100284020(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_10027A494(a1, v4, v5, v6);
}

uint64_t sub_1002840D8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_100279DB8(a1, v4, v5, v6);
}

void sub_10028418C()
{
  sub_10033F6C0(v0);
}

ValueMetadata *type metadata accessor for AudioIntentRecordingSwiftUIViewControllerRepresentable()
{
  return &type metadata for AudioIntentRecordingSwiftUIViewControllerRepresentable;
}

ValueMetadata *type metadata accessor for OrphanAssetsSwiftUIVC()
{
  return &type metadata for OrphanAssetsSwiftUIVC;
}

ValueMetadata *type metadata accessor for SyncStatsSwiftUIVC()
{
  return &type metadata for SyncStatsSwiftUIVC;
}

ValueMetadata *type metadata accessor for AllEntriesAdminVC()
{
  return &type metadata for AllEntriesAdminVC;
}

unint64_t sub_1002841FC()
{
  unint64_t result = qword_100805B80;
  if (!qword_100805B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805B80);
  }
  return result;
}

unint64_t sub_100284250()
{
  unint64_t result = qword_100805B88;
  if (!qword_100805B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805B88);
  }
  return result;
}

unint64_t sub_1002842A4()
{
  unint64_t result = qword_100805B90;
  if (!qword_100805B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805B90);
  }
  return result;
}

unint64_t sub_1002842F8()
{
  unint64_t result = qword_100805B98;
  if (!qword_100805B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805B98);
  }
  return result;
}

id sub_1002846D4()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PaddingLabel();
  return [super dealloc];
}

uint64_t type metadata accessor for PaddingLabel()
{
  return self;
}

double sub_10028472C(double a1, double a2, double a3, double a4, double a5, double a6)
{
  return a1 + a6;
}

uint64_t sub_100284748(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  sub_100010218(&qword_1007F9D98);
  v2[4] = swift_task_alloc();
  uint64_t v3 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  v2[5] = v3;
  v2[6] = *(void *)(v3 - 8);
  v2[7] = swift_task_alloc();
  return _swift_task_switch(sub_100284838, 0, 0);
}

uint64_t sub_100284838()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v3 = v0[4];
  sub_1003F406C(v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_10001457C(v0[4], &qword_1007F9D98);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void, unint64_t))v0[1];
    return v4(0, 0xE000000000000000);
  }
  else
  {
    uint64_t v6 = v0[7];
    sub_1000E4A70(v0[4], v6);
    unint64_t v7 = *(void *)(v6 + 32);
    if (!v7) {
      goto LABEL_9;
    }
    uint64_t v8 = *(void *)(v6 + 24);
    uint64_t v9 = HIBYTE(v7) & 0xF;
    if ((v7 & 0x2000000000000000) == 0) {
      uint64_t v9 = v8 & 0xFFFFFFFFFFFFLL;
    }
    if (!v9)
    {
LABEL_9:
      uint64_t v10 = (uint64_t *)v0[7];
      uint64_t v8 = *v10;
      unint64_t v7 = v10[1];
    }
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1000FE14C();
    if (v12) {
      uint64_t v13 = v11;
    }
    else {
      uint64_t v13 = 0;
    }
    if (v12) {
      unint64_t v14 = v12;
    }
    else {
      unint64_t v14 = 0xE000000000000000;
    }
    unint64_t v15 = sub_1001DC4FC(v8, v7, 0xD000000000000020, (void *)0x8000000100695560, 0, 0);
    uint64_t v17 = v16;
    swift_bridgeObjectRelease();
    v0[8] = v17;
    unint64_t v18 = sub_1001DC4FC(v13, v14, 0xD000000000000023, (void *)0x8000000100695590, 0, 0);
    uint64_t v20 = v19;
    swift_bridgeObjectRelease();
    v0[9] = v20;
    uint64_t v21 = (void *)swift_task_alloc();
    v0[10] = v21;
    *uint64_t v21 = v0;
    v21[1] = sub_100284A78;
    uint64_t v22 = v0[2];
    return sub_1005E885C(v22, 0, 0, 0, 0, v15, v17, v18);
  }
}

uint64_t sub_100284A78(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 88) = v2;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v2)
  {
    unint64_t v7 = sub_100284C8C;
  }
  else
  {
    *(void *)(v6 + 96) = a2;
    *(void *)(v6 + 104) = a1;
    unint64_t v7 = sub_100284BEC;
  }
  return _swift_task_switch(v7, 0, 0);
}

uint64_t sub_100284BEC()
{
  sub_1002868C4(v0[7], _s19MotionActivityAssetC18MotionActivityDataVMa);
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_100284C8C()
{
  sub_1002868C4(*(void *)(v0 + 56), _s19MotionActivityAssetC18MotionActivityDataVMa);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100284D1C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_1001DBEDC;
  return sub_100284748(a1);
}

double sub_100284DB0@<D0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_100010218(&qword_1007F9D98);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = _s19MotionActivityAssetC18MotionActivityDataVMa(0);
  uint64_t v7 = *(void *)(v6 - 8);
  __n128 v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling19MotionActivityAsset_metadata))
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v7 + 56))(v5, 1, 1, v6, v8);
    goto LABEL_5;
  }
  swift_retain();
  sub_10003BA1C((uint64_t)v5);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_5:
    sub_10001457C((uint64_t)v5, &qword_1007F9D98);
    *(void *)&long long v17 = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    return *(double *)&v17;
  }
  sub_1000E4A70((uint64_t)v5, (uint64_t)v10);
  long long v11 = *(_OWORD *)v10;
  long long v19 = *(_OWORD *)(v10 + 24);
  long long v20 = v11;
  uint64_t v12 = *((void *)v10 + 5);
  uint64_t v13 = *((void *)v10 + 6);
  uint64_t v14 = (uint64_t)&v10[*(int *)(v6 + 32)];
  uint64_t v15 = _s6ResultVMa_1();
  *(void *)(a1 + 24) = v15;
  *(void *)(a1 + 32) = sub_100286924(&qword_100805BE8, (void (*)(uint64_t))_s6ResultVMa_1);
  *(void *)(a1 + 40) = sub_100286924(&qword_100805BF0, (void (*)(uint64_t))_s6ResultVMa_1);
  uint64_t v16 = sub_100062E54((uint64_t *)a1);
  sub_100062DA4(v14, (uint64_t)v16 + *(int *)(v15 + 28));
  sub_100062DA4((uint64_t)&v10[*(int *)(v6 + 36)], (uint64_t)v16 + *(int *)(v15 + 32));
  long long v17 = v19;
  *(_OWORD *)uint64_t v16 = v20;
  *((_OWORD *)v16 + 1) = v17;
  v16[4] = v12;
  v16[5] = v13;
  return *(double *)&v17;
}

uint64_t sub_100285018(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_100805CA8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10002E0BC(a1, a1[3]);
  sub_10028680C();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  char v13 = 0;
  KeyedEncodingContainer.encode(_:forKey:)();
  if (!v1)
  {
    char v12 = 1;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    char v11 = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    _s6ResultVMa_1();
    char v10 = 3;
    type metadata accessor for Date();
    sub_100286924(&qword_1007F99F0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    char v9 = 4;
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_100285260@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v26 = a2;
  uint64_t v3 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v3 - 8);
  uint64_t v27 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v24 - v6;
  uint64_t v8 = sub_100010218(&qword_100805C98);
  uint64_t v28 = *(void *)(v8 - 8);
  uint64_t v29 = v8;
  __chkstk_darwin(v8);
  char v10 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = _s6ResultVMa_1();
  __chkstk_darwin(v11);
  char v13 = (void *)((char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_10002E0BC(a1, a1[3]);
  sub_10028680C();
  uint64_t v14 = (uint64_t)v30;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v14) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  uint64_t v25 = v7;
  uint64_t v30 = a1;
  uint64_t v15 = v28;
  uint64_t v16 = v29;
  char v35 = 0;
  uint64_t *v13 = KeyedDecodingContainer.decode(_:forKey:)();
  v13[1] = v17;
  char v34 = 1;
  v13[2] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v13[3] = v18;
  char v33 = 2;
  v13[4] = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v13[5] = v19;
  type metadata accessor for Date();
  char v32 = 3;
  uint64_t v20 = sub_100286924(&qword_10080E9D0, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v21 = (uint64_t)v25;
  v24[1] = v20;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  v24[0] = v11;
  sub_100062DA4(v21, (uint64_t)v13 + *(int *)(v11 + 28));
  char v31 = 4;
  uint64_t v22 = (uint64_t)v27;
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v10, v16);
  sub_100062DA4(v22, (uint64_t)v13 + *(int *)(v24[0] + 32));
  sub_100286860((uint64_t)v13, v26);
  _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)v30);
  return sub_1002868C4((uint64_t)v13, (uint64_t (*)(void))_s6ResultVMa_1);
}

uint64_t sub_1002856D0(uint64_t a1)
{
  uint64_t result = sub_100286924(&qword_100805BD0, (void (*)(uint64_t))_s19MotionActivityAssetCMa);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_100285728()
{
  unint64_t result = 0x7974697669746361;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x7370657473;
      break;
    case 3:
      unint64_t result = 0x6D69547472617473;
      break;
    case 4:
      unint64_t result = 0x656D6954646E65;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002857E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_100286B78(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_100285808(uint64_t a1)
{
  unint64_t v2 = sub_10028680C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_100285844(uint64_t a1)
{
  unint64_t v2 = sub_10028680C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_100285880@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_100285260(a1, a2);
}

uint64_t sub_100285898(void *a1)
{
  return sub_100285018(a1);
}

uint64_t _s6ResultVMa_1()
{
  uint64_t result = qword_100805C50;
  if (!qword_100805C50) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t *sub_1002858FC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    uint64_t v9 = a2[5];
    uint64_t v10 = *(int *)(a3 + 28);
    __dst = (char *)a1 + v10;
    uint64_t v11 = (char *)a2 + v10;
    a1[4] = a2[4];
    a1[5] = v9;
    uint64_t v12 = type metadata accessor for Date();
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v14(v11, 1, v12))
    {
      uint64_t v15 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(__dst, v11, *(void *)(*(void *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    uint64_t v17 = *(int *)(a3 + 32);
    uint64_t v18 = (char *)v4 + v17;
    uint64_t v19 = (char *)a2 + v17;
    if (v14(v19, 1, v12))
    {
      uint64_t v20 = sub_100010218((uint64_t *)&unk_1007FC470);
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v18, v19, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v18, 0, 1, v12);
    }
  }
  return v4;
}

uint64_t sub_100285B50(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 28);
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v6 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  if (!v6(v4, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v4, v5);
  }
  uint64_t v7 = a1 + *(int *)(a2 + 32);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v6)(v7, 1, v5);
  if (!result)
  {
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    return v9(v7, v5);
  }
  return result;
}

void *sub_100285C88(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  uint64_t v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  uint64_t v7 = a2[5];
  uint64_t v8 = *(int *)(a3 + 28);
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v11 = type metadata accessor for Date();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v9, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (char *)a2 + v15;
  if (v13(v17, 1, v11))
  {
    uint64_t v18 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
  }
  return a1;
}

char *sub_100285E88(char *a1, void *a2, uint64_t a3)
{
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = *(int *)(a3 + 28);
  uint64_t v7 = &a1[v6];
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = type metadata accessor for Date();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v7, v8, *(void *)(*(void *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  uint64_t v15 = *(int *)(a3 + 32);
  uint64_t v16 = &a1[v15];
  uint64_t v17 = (char *)a2 + v15;
  int v18 = v11(&a1[v15], 1, v9);
  int v19 = v11(v17, 1, v9);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v16, v17, v9);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v16, v9);
    goto LABEL_12;
  }
  if (v19)
  {
LABEL_12:
    uint64_t v20 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v16, v17, *(void *)(*(void *)(v20 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v16, v17, v9);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v16, 0, 1, v9);
  return a1;
}

_OWORD *sub_100286164(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  long long v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  a1[2] = a2[2];
  uint64_t v7 = *(int *)(a3 + 28);
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = type metadata accessor for Date();
  uint64_t v11 = *(void *)(v10 - 8);
  int v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v12(v9, 1, v10))
  {
    uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v14 = *(int *)(a3 + 32);
  uint64_t v15 = (char *)a1 + v14;
  uint64_t v16 = (char *)a2 + v14;
  if (v12(v16, 1, v10))
  {
    uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v15, v16, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v15, 0, 1, v10);
  }
  return a1;
}

char *sub_100286334(char *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = a2[1];
  *(void *)a1 = *a2;
  *((void *)a1 + 1) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a2[3];
  *((void *)a1 + 2) = a2[2];
  *((void *)a1 + 3) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a2[5];
  *((void *)a1 + 4) = a2[4];
  *((void *)a1 + 5) = v8;
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 28);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v10, v11, v12);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    uint64_t v17 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = *(int *)(a3 + 32);
  int v19 = &a1[v18];
  uint64_t v20 = (char *)a2 + v18;
  int v21 = v14(&a1[v18], 1, v12);
  int v22 = v14(v20, 1, v12);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v19, v20, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    uint64_t v23 = sub_100010218((uint64_t *)&unk_1007FC470);
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v19, v20, v12);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
  return a1;
}

uint64_t sub_1002865E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002865F4);
}

uint64_t sub_1002865F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 28);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_1002866A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002866BC);
}

uint64_t sub_1002866BC(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 28);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

void sub_100286768()
{
  sub_100033618();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_10028680C()
{
  unint64_t result = qword_100805CA0;
  if (!qword_100805CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805CA0);
  }
  return result;
}

uint64_t sub_100286860(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = _s6ResultVMa_1();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002868C4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_100286924(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *_s6ResultV10CodingKeysOwst_1(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100286A38);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s6ResultV10CodingKeysOMa_1()
{
  return &_s6ResultV10CodingKeysON_1;
}

unint64_t sub_100286A74()
{
  unint64_t result = qword_100805CB0;
  if (!qword_100805CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805CB0);
  }
  return result;
}

unint64_t sub_100286ACC()
{
  unint64_t result = qword_100805CB8;
  if (!qword_100805CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805CB8);
  }
  return result;
}

unint64_t sub_100286B24()
{
  unint64_t result = qword_100805CC0;
  if (!qword_100805CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805CC0);
  }
  return result;
}

uint64_t sub_100286B78(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7974697669746361 && a2 == 0xEC00000065707954;
  if (v2 || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x800000010068B760 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7370657473 && a2 == 0xE500000000000000 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6D69547472617473 && a2 == 0xE900000000000065 {
         || (_stringCompareWithSmolCheck(_:_:expecting:)() & 1) != 0)
  }
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x656D6954646E65 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_100286DAC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  swift_release();
  return v1;
}

char *sub_100286E20(double a1, double a2, double a3, double a4)
{
  uint64_t v9 = type metadata accessor for UIView.Invalidations.Layout();
  __chkstk_darwin(v9);
  uint64_t v10 = sub_100010218(&qword_100805D30);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = OBJC_IVAR____TtC7Journal13ImageBlurView_artBlurView;
  int v15 = self;
  int v16 = v4;
  id v17 = [v15 effectWithStyle:6];
  id v18 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v17];

  *(void *)&v4[v14] = v18;
  uint64_t v19 = OBJC_IVAR____TtC7Journal13ImageBlurView_backingImageView;
  *(void *)&v16[v19] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v20 = &v16[OBJC_IVAR____TtC7Journal13ImageBlurView__backgroundImage];
  uint64_t v32 = 0;
  UIView.Invalidations.Layout.init()();
  sub_100010218(&qword_10080E750);
  sub_100287758();
  UIView.Invalidating.init(wrappedValue:_:)();
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v20, v13, v10);

  int v21 = (objc_class *)type metadata accessor for ImageBlurView();
  v31.receiver = v16;
  v31.super_class = v21;
  int v22 = (char *)objc_msgSendSuper2(&v31, "initWithFrame:", a1, a2, a3, a4);
  [v22 setOverrideUserInterfaceStyle:2];
  uint64_t v23 = OBJC_IVAR____TtC7Journal13ImageBlurView_backingImageView;
  id v24 = *(id *)&v22[OBJC_IVAR____TtC7Journal13ImageBlurView_backingImageView];
  [v22 bounds];
  [v24 setFrame:];

  uint64_t v25 = *(void **)&v22[v23];
  [v25 setAutoresizingMask:18];
  [v25 setContentMode:2];
  [v22 addSubview:v25];
  uint64_t v26 = OBJC_IVAR____TtC7Journal13ImageBlurView_artBlurView;
  id v27 = *(id *)&v22[OBJC_IVAR____TtC7Journal13ImageBlurView_artBlurView];
  [v22 bounds];
  [v27 setFrame:];

  uint64_t v28 = *(void **)&v22[v26];
  [v28 setAutoresizingMask:18];
  [v22 addSubview:v28];

  return v22;
}

uint64_t sub_100287180(void *a1)
{
  id v16 = a1;
  uint64_t v15 = type metadata accessor for UIView.Invalidations.Layout();
  __chkstk_darwin(v15);
  uint64_t v2 = sub_100010218(&qword_100805D30);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC7Journal13ImageBlurView_artBlurView;
  uint64_t v7 = self;
  uint64_t v8 = v1;
  id v9 = [v7 effectWithStyle:6];
  id v10 = [objc_allocWithZone((Class)UIVisualEffectView) initWithEffect:v9];

  *(void *)&v1[v6] = v10;
  uint64_t v11 = OBJC_IVAR____TtC7Journal13ImageBlurView_backingImageView;
  *(void *)&v8[v11] = [objc_allocWithZone((Class)UIImageView) init];
  uint64_t v12 = &v8[OBJC_IVAR____TtC7Journal13ImageBlurView__backgroundImage];
  uint64_t v17 = 0;
  UIView.Invalidations.Layout.init()();
  sub_100010218(&qword_10080E750);
  sub_100287758();
  UIView.Invalidating.init(wrappedValue:_:)();

  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v12, v5, v2);
  (*(void (**)(char *, uint64_t))(v3 + 8))(v12, v2);

  type metadata accessor for ImageBlurView();
  swift_deallocPartialClassInstance();
  return 0;
}

id sub_100287508()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ImageBlurView();
  return [super dealloc];
}

uint64_t sub_1002875D4()
{
  return type metadata accessor for ImageBlurView();
}

uint64_t type metadata accessor for ImageBlurView()
{
  uint64_t result = qword_100805D08;
  if (!qword_100805D08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100287628()
{
  sub_1002876C8();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_1002876C8()
{
  if (!qword_100805D18)
  {
    sub_100014440(&qword_10080E750);
    type metadata accessor for UIView.Invalidations.Layout();
    sub_100287758();
    unint64_t v0 = type metadata accessor for UIView.Invalidating();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100805D18);
    }
  }
}

unint64_t sub_100287758()
{
  unint64_t result = qword_100805D20;
  if (!qword_100805D20)
  {
    sub_100014440(&qword_10080E750);
    sub_1002877CC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805D20);
  }
  return result;
}

unint64_t sub_1002877CC()
{
  unint64_t result = qword_100805D28;
  if (!qword_100805D28)
  {
    sub_1001EB508();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805D28);
  }
  return result;
}

uint64_t sub_100287824@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  static UIView.Invalidating.subscript.getter();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1002878A8(void **a1, void **a2)
{
  objc_super v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  id v4 = v2;
  id v5 = v3;
  return static UIView.Invalidating.subscript.setter();
}

uint64_t sub_100287920()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100805D38);
  sub_100026A54(v0, (uint64_t)qword_100805D38);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_100287A1C(uint64_t a1)
{
  v1[2] = a1;
  v1[3] = type metadata accessor for MainActor();
  v1[4] = static MainActor.shared.getter();
  id v2 = (void *)swift_task_alloc();
  v1[5] = v2;
  *id v2 = v1;
  v2[1] = sub_10025EEE4;
  return sub_100057384(0, 0);
}

uint64_t sub_100287AD4(void *a1, int a2)
{
  int v64 = a2;
  uint64_t v4 = *v2;
  id v60 = v2;
  uint64_t v61 = v4;
  uint64_t v5 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v5 - 8);
  uint64_t v56 = (char *)&v53 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC470);
  uint64_t v57 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  uint64_t v59 = (uint64_t)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v53 - v10;
  uint64_t v58 = v12;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v53 - v14;
  uint64_t v16 = type metadata accessor for UUID();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v19 = (char *)&v53 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  UUID.init()();
  uint64_t v20 = UUID.uuidString.getter();
  unint64_t v22 = v21;
  uint64_t v23 = *(void (**)(char *, uint64_t))(v17 + 8);
  v23(v19, v16);
  if (a1)
  {
    id v24 = [a1 suggestionIdentifier];
    static UUID._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v63 = UUID.uuidString.getter();
    unint64_t v26 = v25;
    v23(v19, v16);
  }
  else
  {
    unint64_t v26 = 0xE300000000000000;
    uint64_t v63 = 7104878;
  }
  unint64_t v27 = v22;
  if (qword_1007F6E48 != -1) {
    swift_once();
  }
  uint64_t v28 = v20;
  if ([(id)qword_10083D3C0 BOOLForKey:@"ALWAYS_USE_MOMENT_DATE"] && a1)
  {
    id v29 = [a1 startDate];
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v30 = type metadata accessor for Date();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v11, 0, 1, v30);
  }
  else
  {
    uint64_t v31 = type metadata accessor for Date();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v11, 1, 1, v31);
  }
  sub_100062DA4((uint64_t)v11, (uint64_t)v15);
  if (qword_1007F6CC8 != -1) {
    swift_once();
  }
  char v32 = v64;
  uint64_t v33 = type metadata accessor for Logger();
  sub_100026A54(v33, (uint64_t)qword_100805D38);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  char v34 = Logger.logObject.getter();
  os_log_type_t v35 = static os_log_type_t.default.getter();
  BOOL v36 = os_log_type_enabled(v34, v35);
  unint64_t v54 = v27;
  unint64_t v55 = v26;
  uint64_t v62 = v15;
  uint64_t v53 = v28;
  if (v36)
  {
    uint64_t v37 = swift_slowAlloc();
    uint64_t v66 = swift_slowAlloc();
    *(_DWORD *)uint64_t v37 = 136315650;
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_10011EA98(v28, v27, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v65 = sub_10011EA98(v63, v26, &v66);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v37 + 22) = 1024;
    LODWORD(v65) = v32 & 1;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v34, v35, "onSuggestionSelected[%s] START w/ suggestionId=%s, showCanvas=%{BOOL}d", (uint8_t *)v37, 0x1Cu);
    swift_arrayDestroy();
    uint64_t v15 = v62;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v38 = type metadata accessor for TaskPriority();
  uint64_t v39 = (uint64_t)v56;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v56, 1, 1, v38);
  uint64_t v40 = v59;
  sub_100045944((uint64_t)v15, v59);
  type metadata accessor for MainActor();
  id v41 = a1;
  uint64_t v42 = v60;
  swift_retain();
  uint64_t v43 = static MainActor.shared.getter();
  NSString v44 = a1;
  unint64_t v45 = (*(unsigned __int8 *)(v57 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
  unint64_t v46 = (v58 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v47 = (v46 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v48 = swift_allocObject();
  *(void *)(v48 + 16) = v43;
  *(void *)(v48 + 24) = &protocol witness table for MainActor;
  uint64_t v49 = v63;
  *(void *)(v48 + 32) = v42;
  *(void *)(v48 + 40) = v49;
  *(void *)(v48 + 48) = v55;
  *(unsigned char *)(v48 + 56) = v64 & 1;
  sub_100062DA4(v40, v48 + v45);
  uint64_t v50 = (uint64_t *)(v48 + v46);
  unint64_t v51 = v54;
  *uint64_t v50 = v53;
  v50[1] = v51;
  *(void *)(v48 + v47) = v44;
  *(void *)(v48 + ((v47 + 15) & 0xFFFFFFFFFFFFFFF8)) = v61;
  sub_100328A60(v39, (uint64_t)&unk_100805D68, v48);
  swift_release();
  return sub_1000AC7D4((uint64_t)v62);
}

uint64_t sub_100288198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8)
{
  *(void *)(v8 + 80) = v16;
  *(void *)(v8 + 88) = v17;
  *(_OWORD *)(v8 + 64) = v15;
  *(unsigned char *)(v8 + 280) = a7;
  *(void *)(v8 + 48) = a6;
  *(void *)(v8 + 56) = a8;
  *(void *)(v8 + 32) = a4;
  *(void *)(v8 + 40) = a5;
  *(void *)(v8 + 96) = type metadata accessor for UserEngagement.StateSnapshot();
  *(void *)(v8 + 104) = swift_task_alloc();
  sub_100010218((uint64_t *)&unk_1007FC470);
  *(void *)(v8 + 112) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for Date();
  *(void *)(v8 + 120) = v9;
  *(void *)(v8 + 128) = *(void *)(v9 - 8);
  *(void *)(v8 + 136) = swift_task_alloc();
  *(void *)(v8 + 144) = swift_task_alloc();
  uint64_t v10 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  *(void *)(v8 + 152) = v10;
  *(void *)(v8 + 160) = *(void *)(v10 - 8);
  *(void *)(v8 + 168) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v8 + 176) = static MainActor.shared.getter();
  uint64_t v12 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v8 + 184) = v12;
  *(void *)(v8 + 192) = v11;
  return _swift_task_switch(sub_100288374, v12, v11);
}

uint64_t sub_100288374()
{
  if (v0[5] == 7104878 && v0[6] == 0xE300000000000000) {
    char v2 = 0;
  }
  else {
    char v2 = _stringCompareWithSmolCheck(_:_:expecting:)() ^ 1;
  }
  uint64_t v3 = (void *)swift_task_alloc();
  v0[25] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_100288448;
  return sub_100053580(0, v2 & 1);
}

uint64_t sub_100288448(uint64_t a1)
{
  *(void *)(*(void *)v1 + 208) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_100288548, 0, 0);
}

uint64_t sub_100288548()
{
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 160);
  uint64_t v2 = *(void *)(v0 + 168);
  uint64_t v4 = *(void *)(v0 + 152);
  char v5 = *(unsigned char *)(v0 + 280);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 216) = v6;
  *(void *)(v6 + 16) = v1;
  *(unsigned char *)(v6 + 24) = v5;
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v4);
  swift_retain();
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_100288680;
  uint64_t v8 = *(void *)(v0 + 168);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v7, v8, sub_10028A59C, v6, (char *)&type metadata for () + 8);
}

uint64_t sub_100288680()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 168);
  uint64_t v2 = *(void *)(*(void *)v0 + 160);
  uint64_t v3 = *(void *)(*(void *)v0 + 152);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1002887F4, 0, 0);
}

uint64_t sub_1002887F4()
{
  return _swift_task_switch(sub_10028880C, *(void *)(v0 + 184), *(void *)(v0 + 192));
}

uint64_t sub_10028880C()
{
  uint64_t v38 = v0;
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 112);
  sub_100045944(*(void *)(v0 + 56), v3);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v3, 1, v1) == 1)
  {
    sub_1000AC7D4(*(void *)(v0 + 112));
    uint64_t v4 = *(void *)(v0 + 208);
    uint64_t v6 = *(void *)(v0 + 80);
    uint64_t v5 = *(void *)(v0 + 88);
    long long v36 = *(_OWORD *)(v0 + 64);
    char v7 = *(unsigned char *)(v0 + 280);
    uint64_t v8 = swift_allocObject();
    *(void *)(v0 + 240) = v8;
    swift_weakInit();
    uint64_t v9 = swift_allocObject();
    *(void *)(v0 + 248) = v9;
    *(unsigned char *)(v9 + 16) = v7;
    *(void *)(v9 + 24) = v8;
    *(_OWORD *)(v9 + 32) = v36;
    *(void *)(v9 + 48) = v4;
    *(void *)(v9 + 56) = v5;
    if (v6)
    {
      uint64_t v10 = v9;
      uint64_t v12 = *(void **)(v0 + 80);
      uint64_t v11 = *(void *)(v0 + 88);
      uint64_t v14 = *(void *)(v0 + 64);
      uint64_t v13 = *(void *)(v0 + 72);
      type metadata accessor for AssetProcessingUtil();
      long long v15 = (void *)swift_allocObject();
      *(void *)(v0 + 256) = v15;
      _OWORD v15[2] = v14;
      v15[3] = v13;
      v15[4] = &unk_100805D78;
      v15[5] = v10;
      v15[6] = v11;
      swift_bridgeObjectRetain_n();
      swift_retain();
      id v16 = v12;
      swift_retain();
      uint64_t v17 = (void *)swift_task_alloc();
      *(void *)(v0 + 264) = v17;
      *uint64_t v17 = v0;
      v17[1] = sub_10028921C;
      uint64_t v18 = *(void *)(v0 + 208);
      return sub_10026CEB8((uint64_t)v16, v18, (uint64_t)&unk_100805D90, (uint64_t)v15, (uint64_t)&unk_100805D98, 0);
    }
    else
    {
      uint64_t v22 = qword_1007F6CC8;
      swift_retain();
      swift_bridgeObjectRetain();
      if (v22 != -1) {
        swift_once();
      }
      uint64_t v23 = (char *)(v0 + 280);
      uint64_t v24 = type metadata accessor for Logger();
      sub_100026A54(v24, (uint64_t)qword_100805D38);
      swift_bridgeObjectRetain_n();
      unint64_t v25 = Logger.logObject.getter();
      os_log_type_t v26 = static os_log_type_t.default.getter();
      BOOL v27 = os_log_type_enabled(v25, v26);
      unint64_t v28 = *(void *)(v0 + 72);
      if (v27)
      {
        uint64_t v29 = *(void *)(v0 + 64);
        uint64_t v30 = (uint8_t *)swift_slowAlloc();
        uint64_t v37 = swift_slowAlloc();
        *(_DWORD *)uint64_t v30 = 136315138;
        swift_bridgeObjectRetain();
        *(void *)(v0 + 16) = sub_10011EA98(v29, v28, &v37);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_retain();
        swift_bridgeObjectRelease_n();
        _os_log_impl((void *)&_mh_execute_header, v25, v26, "onSuggestionSelected[%s] No suggestion to process.", v30, 0xCu);
        swift_arrayDestroy();
        uint64_t v23 = (char *)(v0 + 280);
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        swift_retain();
        swift_bridgeObjectRelease_n();
      }

      uint64_t v31 = (void *)swift_task_alloc();
      *(void *)(v0 + 272) = v31;
      *uint64_t v31 = v0;
      v31[1] = sub_1002896BC;
      uint64_t v32 = *(void *)(v0 + 208);
      uint64_t v33 = *(void *)(v0 + 64);
      uint64_t v34 = *(void *)(v0 + 72);
      char v35 = *v23;
      return sub_10028A700(v35, v8, v33, v34, v32);
    }
  }
  else
  {
    (*(void (**)(void, void, void))(*(void *)(v0 + 128) + 32))(*(void *)(v0 + 144), *(void *)(v0 + 112), *(void *)(v0 + 120));
    uint64_t v20 = (void *)swift_task_alloc();
    *(void *)(v0 + 232) = v20;
    *uint64_t v20 = v0;
    v20[1] = sub_100288CE8;
    uint64_t v21 = *(void *)(v0 + 144);
    return sub_100583590(v21, 0);
  }
}

uint64_t sub_100288CE8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v3 = *(void *)(v1 + 184);
  return _swift_task_switch(sub_100288E08, v3, v2);
}

uint64_t sub_100288E08()
{
  uint64_t v33 = v0;
  (*(void (**)(void, void))(*(void *)(v0 + 128) + 8))(*(void *)(v0 + 144), *(void *)(v0 + 120));
  uint64_t v1 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 88);
  long long v31 = *(_OWORD *)(v0 + 64);
  char v4 = *(unsigned char *)(v0 + 280);
  uint64_t v5 = swift_allocObject();
  *(void *)(v0 + 240) = v5;
  swift_weakInit();
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 248) = v6;
  *(unsigned char *)(v6 + 16) = v4;
  *(void *)(v6 + 24) = v5;
  *(_OWORD *)(v6 + 32) = v31;
  *(void *)(v6 + 48) = v1;
  *(void *)(v6 + 56) = v2;
  if (v3)
  {
    uint64_t v7 = v6;
    uint64_t v9 = *(void **)(v0 + 80);
    uint64_t v8 = *(void *)(v0 + 88);
    uint64_t v11 = *(void *)(v0 + 64);
    uint64_t v10 = *(void *)(v0 + 72);
    type metadata accessor for AssetProcessingUtil();
    uint64_t v12 = (void *)swift_allocObject();
    *(void *)(v0 + 256) = v12;
    v12[2] = v11;
    void v12[3] = v10;
    v12[4] = &unk_100805D78;
    v12[5] = v7;
    void v12[6] = v8;
    swift_bridgeObjectRetain_n();
    swift_retain();
    id v13 = v9;
    swift_retain();
    uint64_t v14 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v14;
    *uint64_t v14 = v0;
    v14[1] = sub_10028921C;
    uint64_t v15 = *(void *)(v0 + 208);
    return sub_10026CEB8((uint64_t)v13, v15, (uint64_t)&unk_100805D90, (uint64_t)v12, (uint64_t)&unk_100805D98, 0);
  }
  else
  {
    uint64_t v17 = qword_1007F6CC8;
    swift_retain();
    swift_bridgeObjectRetain();
    if (v17 != -1) {
      swift_once();
    }
    uint64_t v18 = (char *)(v0 + 280);
    uint64_t v19 = type metadata accessor for Logger();
    sub_100026A54(v19, (uint64_t)qword_100805D38);
    swift_bridgeObjectRetain_n();
    uint64_t v20 = Logger.logObject.getter();
    os_log_type_t v21 = static os_log_type_t.default.getter();
    BOOL v22 = os_log_type_enabled(v20, v21);
    unint64_t v23 = *(void *)(v0 + 72);
    if (v22)
    {
      uint64_t v24 = *(void *)(v0 + 64);
      unint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      *(_DWORD *)unint64_t v25 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 16) = sub_10011EA98(v24, v23, &v32);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_retain();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v20, v21, "onSuggestionSelected[%s] No suggestion to process.", v25, 0xCu);
      swift_arrayDestroy();
      uint64_t v18 = (char *)(v0 + 280);
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_retain();
      swift_bridgeObjectRelease_n();
    }

    os_log_type_t v26 = (void *)swift_task_alloc();
    *(void *)(v0 + 272) = v26;
    *os_log_type_t v26 = v0;
    v26[1] = sub_1002896BC;
    uint64_t v27 = *(void *)(v0 + 208);
    uint64_t v28 = *(void *)(v0 + 64);
    uint64_t v29 = *(void *)(v0 + 72);
    char v30 = *v18;
    return sub_10028A700(v30, v5, v28, v29, v27);
  }
}

uint64_t sub_10028921C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v3 = *(void *)(v1 + 184);
  return _swift_task_switch(sub_100289360, v3, v2);
}

uint64_t sub_100289360()
{
  uint64_t v27 = v0;
  swift_release();
  if (qword_1007F6CC8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_100805D38);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v6 = *(void *)(v0 + 72);
  uint64_t v5 = *(void **)(v0 + 80);
  if (v4)
  {
    uint64_t v7 = *(void *)(v0 + 64);
    unint64_t v25 = *(void **)(v0 + 80);
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315138;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 24) = sub_10011EA98(v7, v6, &v26);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "onSuggestionSelected[%s] Suggestion processing complete (w/ assets)!", v8, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    if ((*(unsigned char *)(v0 + 280) & 1) == 0)
    {
LABEL_5:
      uint64_t v9 = *(void *)(v0 + 208);
      static Date.now.getter();
      uint64_t v10 = *(void **)(v9 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
      if (v10)
      {
        id v11 = *(id *)(v9 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
      }
      else
      {
        id v12 = objc_allocWithZone((Class)NSAttributedString);
        NSString v13 = String._bridgeToObjectiveC()();
        id v11 = [v12 initWithString:v13];

        uint64_t v10 = 0;
      }
      uint64_t v14 = *(void *)(v0 + 208);
      uint64_t v16 = *(void *)(v0 + 128);
      uint64_t v15 = *(void *)(v0 + 136);
      uint64_t v17 = *(void *)(v0 + 120);
      uint64_t v19 = *(int **)(v0 + 96);
      uint64_t v18 = *(void *)(v0 + 104);
      id v20 = v10;
      os_log_type_t v21 = sub_1000CE544(v14);
      char v22 = *(unsigned char *)(v14 + 40);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 32))(v18, v15, v17);
      *(void *)(v18 + v19[5]) = v11;
      *(void *)(v18 + v19[6]) = v21;
      *(unsigned char *)(v18 + v19[7]) = v22;
      sub_1000CEFAC(v18, v18, (void *)1);
      swift_release();
      swift_release();
      sub_10028ADFC(v18, (uint64_t (*)(void))type metadata accessor for UserEngagement.StateSnapshot);
      goto LABEL_11;
    }
  }
  else
  {
    swift_bridgeObjectRelease_n();

    if ((*(unsigned char *)(v0 + 280) & 1) == 0) {
      goto LABEL_5;
    }
  }
  swift_release();
  swift_release();
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v23 = *(uint64_t (**)(void))(v0 + 8);
  return v23();
}

uint64_t sub_1002896BC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 192);
  uint64_t v3 = *(void *)(v1 + 184);
  return _swift_task_switch(sub_100289800, v3, v2);
}

uint64_t sub_100289800()
{
  swift_release();
  if (*(unsigned char *)(v0 + 280))
  {
    swift_release();
    swift_release();
  }
  else
  {
    uint64_t v1 = *(void *)(v0 + 208);
    static Date.now.getter();
    uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
    if (v2)
    {
      id v3 = *(id *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
    }
    else
    {
      id v4 = objc_allocWithZone((Class)NSAttributedString);
      NSString v5 = String._bridgeToObjectiveC()();
      id v3 = [v4 initWithString:v5];

      uint64_t v2 = 0;
    }
    uint64_t v6 = *(void *)(v0 + 208);
    uint64_t v8 = *(void *)(v0 + 128);
    uint64_t v7 = *(void *)(v0 + 136);
    uint64_t v9 = *(void *)(v0 + 120);
    id v11 = *(int **)(v0 + 96);
    uint64_t v10 = *(void *)(v0 + 104);
    id v12 = v2;
    NSString v13 = sub_1000CE544(v6);
    char v14 = *(unsigned char *)(v6 + 40);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v10, v7, v9);
    *(void *)(v10 + v11[5]) = v3;
    *(void *)(v10 + v11[6]) = v13;
    *(unsigned char *)(v10 + v11[7]) = v14;
    sub_1000CEFAC(v10, v10, (void *)1);
    swift_release();
    swift_release();
    sub_10028ADFC(v10, (uint64_t (*)(void))type metadata accessor for UserEngagement.StateSnapshot);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_1002899D4(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *id v11 = v5;
  v11[1] = sub_100052588;
  return sub_10028A700(a1, a2, a3, a4, a5);
}

uint64_t sub_100289A98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a3;
  void v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  type metadata accessor for MainActor();
  v4[7] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[8] = v6;
  v4[9] = v5;
  return _swift_task_switch(sub_100289B34, v6, v5);
}

uint64_t sub_100289B34()
{
  id v12 = v0;
  if (qword_1007F6CC8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_100805D38);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.default.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[4];
  if (v4)
  {
    uint64_t v6 = v0[3];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[2] = sub_10011EA98(v6, v5, &v11);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "onSuggestionSelected[%s] Entry updated (w/o assets).", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v10 = (uint64_t (*)(void))(v0[5] + *(int *)v0[5]);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[10] = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_100289D98;
  return v10();
}

uint64_t sub_100289D98()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 72);
  uint64_t v3 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_100289EB8, v3, v2);
}

uint64_t sub_100289EB8()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100289F18()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 16) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100289FAC, v2, v1);
}

uint64_t sub_100289FAC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v1(7);
}

void sub_10028A010(void *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 == (void *)1)
  {
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v10 = static MainActor.shared.getter();
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = v10;
    v11[3] = &protocol witness table for MainActor;
    v11[4] = v3;
    sub_100328A8C((uint64_t)v8, (uint64_t)&unk_100805D58, (uint64_t)v11);
    swift_release();
  }
  else
  {
    id v12 = a1;
    sub_100287AD4(a1, a2 & 1);
    sub_1000D39C0(a1);
  }
}

uint64_t sub_10028A184()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10028A1C4(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_100052588;
  return sub_100287A1C(a1);
}

uint64_t sub_10028A278()
{
  uint64_t v1 = *(void *)(sub_100010218((uint64_t *)&unk_1007FC470) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  }
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10028A3E8(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_100010218((uint64_t *)&unk_1007FC470) - 8);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  char v7 = *(unsigned char *)(v1 + 56);
  uint64_t v8 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 57) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10002C194;
  return sub_100288198(a1, v12, v11, v4, v5, v6, v7, v8);
}

uint64_t sub_10028A564()
{
  swift_release();

  return swift_deallocObject();
}

id sub_10028A59C()
{
  return sub_100581CF8(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_10028A5BC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10028A5F4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10028A63C()
{
  char v2 = *(unsigned char *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 32);
  uint64_t v5 = *(void *)(v0 + 40);
  uint64_t v6 = *(void *)(v0 + 48);
  char v7 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v7;
  *char v7 = v1;
  v7[1] = sub_100052588;
  return sub_1002899D4(v2, v3, v4, v5, v6);
}

uint64_t sub_10028A700(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(v5 + 64) = a4;
  *(void *)(v5 + 72) = a5;
  *(void *)(v5 + 48) = a2;
  *(void *)(v5 + 56) = a3;
  *(unsigned char *)(v5 + 136) = a1;
  *(void *)(v5 + 80) = type metadata accessor for CanvasStartingState();
  *(void *)(v5 + 88) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v5 + 96) = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v5 + 104) = v7;
  *(void *)(v5 + 112) = v6;
  return _swift_task_switch(sub_10028A7D0, v7, v6);
}

uint64_t sub_10028A7D0()
{
  uint64_t v21 = v0;
  if (*(unsigned char *)(v0 + 136) == 1
    && (swift_beginAccess(), uint64_t Strong = swift_weakLoadStrong(), (*(void *)(v0 + 120) = Strong) != 0))
  {
    if (qword_1007F6CC8 != -1) {
      swift_once();
    }
    uint64_t v2 = type metadata accessor for Logger();
    sub_100026A54(v2, (uint64_t)qword_100805D38);
    swift_bridgeObjectRetain_n();
    uint64_t v3 = Logger.logObject.getter();
    os_log_type_t v4 = static os_log_type_t.default.getter();
    BOOL v5 = os_log_type_enabled(v3, v4);
    unint64_t v6 = *(void *)(v0 + 64);
    if (v5)
    {
      uint64_t v19 = *(void *)(v0 + 56);
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      swift_bridgeObjectRetain();
      *(void *)(v0 + 40) = sub_10011EA98(v19, v6, &v20);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "onSuggestionSelected[%s] Requesting canvas presentation.", v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }

    uint64_t v11 = *(int **)(v0 + 80);
    uint64_t v10 = *(void *)(v0 + 88);
    uint64_t v12 = *(void *)(v0 + 72);
    uint64_t v13 = type metadata accessor for WidgetFamily();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
    uint64_t v14 = (void *)(v10 + v11[5]);
    *uint64_t v14 = 0;
    v14[1] = 0;
    uint64_t v15 = v10 + v11[6];
    uint64_t v16 = type metadata accessor for Date();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v15, 1, 1, v16);
    *(unsigned char *)(v10 + v11[7]) = 1;
    uint64_t v17 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v17;
    *uint64_t v17 = v0;
    v17[1] = sub_10028AB34;
    uint64_t v18 = *(void *)(v0 + 88);
    return sub_100059E88(v12, v18);
  }
  else
  {
    swift_release();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_10028AB34()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 88);
  swift_task_dealloc();
  sub_10028ADFC(v2, (uint64_t (*)(void))type metadata accessor for CanvasStartingState);
  uint64_t v3 = *(void *)(v1 + 112);
  uint64_t v4 = *(void *)(v1 + 104);
  return _swift_task_switch(sub_10028AC8C, v4, v3);
}

uint64_t sub_10028AC8C()
{
  swift_release();
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10028AD00()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10028AD40()
{
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = v0[5];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v6;
  *uint64_t v6 = v1;
  v6[1] = sub_100052588;
  return sub_100289A98(v2, v3, v4, v5);
}

uint64_t sub_10028ADFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_10028AE5C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100805DA0);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100805DA0);
  if (qword_1007F7D48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EBD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_10028AF24(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return _swift_task_switch(sub_10028AF44, 0, 0);
}

uint64_t sub_10028AF44()
{
  id v1 = objc_allocWithZone((Class)AVURLAsset);
  URL._bridgeToObjectiveC()(v2);
  uint64_t v4 = v3;
  id v5 = [v1 initWithURL:v3 options:0];
  v0[5] = v5;

  id v6 = objc_allocWithZone((Class)AVAssetExportSession);
  id v7 = v5;
  NSString v8 = String._bridgeToObjectiveC()();
  id v9 = [v6 initWithAsset:v7 presetName:v8];
  v0[6] = v9;

  if (v9)
  {
    uint64_t v10 = (void *)swift_task_alloc();
    v0[7] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_10028B0DC;
    uint64_t v11 = v0[4];
    return AVAssetExportSession.export(to:as:isolation:)(v11, AVFileTypeQuickTimeMovie, 0, 0);
  }
  else
  {

    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12(0);
  }
}

uint64_t sub_10028B0DC()
{
  *(void *)(*(void *)v1 + 64) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10028B258;
  }
  else {
    uint64_t v2 = sub_10028B1F0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10028B1F0()
{
  uint64_t v1 = *(void **)(v0 + 48);

  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(1);
}

uint64_t sub_10028B258()
{
  if (qword_1007F6CD0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_100805DA0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  BOOL v4 = os_log_type_enabled(v2, v3);
  id v6 = v0[5];
  id v5 = (void *)v0[6];
  if (v4)
  {
    uint64_t v12 = (void *)v0[6];
    id v7 = (uint8_t *)swift_slowAlloc();
    NSString v8 = (void *)swift_slowAlloc();
    *(_DWORD *)id v7 = 138412290;
    swift_errorRetain();
    uint64_t v9 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *NSString v8 = v9;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "AVAssetExportSession export status is failed, error: %@", v7, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_errorRelease();
    swift_errorRelease();
    id v6 = v2;
  }
  swift_errorRelease();

  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10(0);
}

void sub_10028B478()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v22 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  BOOL v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DispatchQoS();
  uint64_t v21 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  id v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v8 = *(void **)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_fallbackView);
  uint64_t v9 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))((swift_isaMask & *v8) + 0x58);
  uint64_t v11 = *(unsigned __int8 *)(v0 + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType);
  uint64_t v12 = v8;
  v10(11, v11);

  int v13 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC7Journal24StateOfMindAssetGridView_previousSizeType);
  if (v13 == 6 || (sub_10017CB6C(*(unsigned char *)(v1 + v9), v13) & 1) == 0)
  {
    id v14 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView), "superview"));

    if (v14)
    {
      id v15 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                  + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel), "superview"));

      if (v15)
      {
        id v16 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                    + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel), "superview"));

        if (v16)
        {
          id v17 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v1
                                                                      + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel), "superview"));

          if (v17)
          {
            sub_10001FB8C();
            uint64_t v18 = (void *)static OS_dispatch_queue.main.getter();
            uint64_t v19 = swift_allocObject();
            swift_unknownObjectWeakInit();
            aBlock[4] = sub_10028F534;
            void aBlock[5] = v19;
            aBlock[0] = _NSConcreteStackBlock;
            aBlock[1] = 1107296256;
            aBlock[2] = sub_10017D530;
            aBlock[3] = &unk_1007A26E8;
            uint64_t v20 = _Block_copy(aBlock);
            swift_release();
            static DispatchQoS.unspecified.getter();
            aBlock[0] = _swiftEmptyArrayStorage;
            sub_10004F6A0();
            sub_100010218(&qword_100804DB0);
            sub_10001B1BC();
            dispatch thunk of SetAlgebra.init<A>(_:)();
            OS_dispatch_queue.async(group:qos:flags:execute:)();
            _Block_release(v20);

            (*(void (**)(char *, uint64_t))(v22 + 8))(v4, v2);
            (*(void (**)(char *, uint64_t))(v21 + 8))(v7, v5);
          }
        }
      }
    }
  }
}

void sub_10028B840()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    uint64_t v2 = OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType;
    sub_1000157E4(*(unsigned __int8 *)(Strong + OBJC_IVAR____TtC7Journal16JournalAssetView_sizeType));
    sub_100016B38();
    uint64_t v3 = self;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = v1;
    aBlock[4] = sub_10001B3D4;
    void aBlock[5] = v4;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_10017D530;
    aBlock[3] = &unk_1007A2738;
    uint64_t v5 = _Block_copy(aBlock);
    uint64_t v6 = v1;
    swift_release();
    [v3 animateWithDuration:0 delay:v5 options:0 animations:0.11 completion:0.0];
    _Block_release(v5);
    uint64_t v7 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer;
    id v8 = *(id *)&v6[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer];
    [v6 bounds];
    [v8 setFrame:];

    [*(id *)&v6[v7] setMasksToBounds:1];
    id v9 = *(id *)&v6[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel];
    UIView.removeAllConstraints()();

    id v10 = *(id *)&v6[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel];
    UIView.removeAllConstraints()();

    id v11 = *(id *)&v6[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel];
    UIView.removeAllConstraints()();

    id v12 = *(id *)&v6[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel];
    UIView.removeAllConstraints()();

    id v13 = *(id *)&v6[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView];
    UIView.removeAllConstraints()();

    switch(*((unsigned char *)v1 + v2))
    {
      case 2:
        sub_10028D7CC();
        break;
      case 3:
        sub_10028BBE8();
        break;
      case 4:
        sub_10028BB00();
        break;
      case 5:
        sub_10028E244();
        break;
      default:
        sub_10028C8AC();
        break;
    }
    v6[OBJC_IVAR____TtC7Journal24StateOfMindAssetGridView_previousSizeType] = *((unsigned char *)v1 + v2);
  }
}

uint64_t sub_10028BB00()
{
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel) setHidden:1];
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel) setHidden:1];
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel) setHidden:1];
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer) setHidden:0];
  [*(id *)(v0 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel) setHidden:1];
  id v1 = *(id *)(v0 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView);
  sub_1001DCF60(8.0);

  return swift_bridgeObjectRelease();
}

void sub_10028BBE8()
{
  id v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel;
  [*(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel] setHidden:0];
  uint64_t v3 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel;
  [*(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel] setHidden:1];
  uint64_t v4 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel;
  [*(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel] setHidden:0];
  uint64_t v95 = v4;
  [*(id *)&v0[v4] setTextAlignment:4];
  [*(id *)&v0[v3] setTextAlignment:4];
  id v96 = (char *)v2;
  [*(id *)&v0[v2] setTextAlignment:4];
  [*(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer] setHidden:0];
  uint64_t v5 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel;
  [*(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel] setHidden:1];
  uint64_t v6 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView;
  id v7 = *(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView];
  id v8 = [v7 superview];
  if (v8)
  {
    id v9 = v8;
    [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v10 = [v7 leadingAnchor];
    id v11 = [v9 leadingAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    [v12 setConstant:8.0];
    if (v12)
    {
      id v12 = v12;
      [v12 setActive:1];

      id v7 = v12;
    }
  }
  else
  {
    id v12 = 0;
    id v9 = v7;
  }

  id v13 = *(id *)((char *)v1 + v6);
  id v14 = [v13 superview];
  uint64_t v94 = v5;
  if (v14)
  {
    id v15 = v14;
    [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v16 = [v13 topAnchor];
    id v17 = [v15 topAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    [v18 setConstant:8.0];
    if (v18)
    {
      id v18 = v18;
      [v18 setActive:1];

      id v13 = v18;
    }
  }
  else
  {
    id v18 = 0;
    id v15 = v13;
  }

  id v19 = *(id *)((char *)v1 + v6);
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v20 = [v19 heightAnchor];
  id v21 = [v19 widthAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21 multiplier:1.0];

  [v22 setActive:1];
  id v23 = [*(id *)((char *)v1 + v6) widthAnchor];
  id v24 = [v1 heightAnchor];
  id v25 = [v23 constraintEqualToAnchor:v24 constant:-16.0];

  [v25 setActive:1];
  id v26 = *(id *)((char *)v1 + v6);
  id v27 = sub_1001DD438(0, 1, 8.0);

  uint64_t v28 = *(void **)((char *)v1 + v6);
  id v29 = *(id *)&v96[(void)v1];
  id v30 = v28;
  [v29 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v31 = [v29 leadingAnchor];
  id v32 = [v30 trailingAnchor];
  id v33 = [v31 constraintEqualToAnchor:v32];

  [v33 setConstant:8.0];
  [v33 setActive:1];

  uint64_t v34 = *(void **)((char *)v1 + v95);
  id v35 = *(id *)&v96[(void)v1];
  id v36 = v34;
  [v35 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v37 = [v35 bottomAnchor];
  id v38 = [v36 topAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38];

  [v39 setConstant:0.0];
  [v39 setActive:1];

  id v40 = *(id *)&v96[(void)v1];
  id v41 = [v40 superview];
  if (v41)
  {
    uint64_t v42 = v41;
    [v40 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v43 = [v40 trailingAnchor];
    id v44 = [v42 trailingAnchor];
    id v45 = [v43 constraintLessThanOrEqualToAnchor:v44];

    [v45 setConstant:-8.0];
    if (v45)
    {
      id v45 = v45;
      [v45 setActive:1];

      id v40 = v45;
    }
    uint64_t v46 = v6;
  }
  else
  {
    id v45 = 0;
    uint64_t v42 = v40;
    uint64_t v46 = v6;
  }

  id v47 = *(id *)&v96[(void)v1];
  id v48 = [v47 superview];
  if (v48)
  {
    uint64_t v49 = v48;
    [v47 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v50 = [v47 topAnchor];
    id v51 = [v49 topAnchor];
    id v52 = [v50 constraintGreaterThanOrEqualToAnchor:v51];

    [v52 setConstant:8.0];
    if (v52)
    {
      id v52 = v52;
      [v52 setActive:1];

      id v47 = v52;
    }
  }
  else
  {
    id v52 = 0;
    uint64_t v49 = v47;
  }

  id v53 = [*(id *)&v96[(void)v1] bottomAnchor];
  id v54 = [*(id *)((char *)v1 + v46) centerYAnchor];
  id v55 = [v53 constraintEqualToAnchor:v54];

  LODWORD(v56) = 1132068864;
  [v55 setPriority:v56];
  [v55 setActive:1];

  id v57 = [*(id *)((char *)v1 + v95) topAnchor];
  id v58 = [*(id *)((char *)v1 + v46) centerYAnchor];
  id v59 = [v57 constraintEqualToAnchor:v58];

  LODWORD(v60) = 1132068864;
  [v59 setPriority:v60];
  [v59 setActive:1];

  uint64_t v61 = *(void **)((char *)v1 + v46);
  id v62 = *(id *)((char *)v1 + v95);
  id v63 = v61;
  [v62 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v64 = [v62 leadingAnchor];
  id v65 = [v63 trailingAnchor];
  id v66 = [v64 constraintEqualToAnchor:v65];

  [v66 setConstant:8.0];
  [v66 setActive:1];

  uint64_t v67 = *(void **)&v96[(void)v1];
  id v68 = *(id *)((char *)v1 + v95);
  id v69 = v67;
  [v68 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v70 = [v68 topAnchor];
  id v71 = [v69 bottomAnchor];
  id v72 = [v70 constraintEqualToAnchor:v71];

  [v72 setConstant:0.0];
  [v72 setActive:1];

  id v73 = *(id *)((char *)v1 + v95);
  id v74 = [v73 superview];
  if (v74)
  {
    id v75 = v74;
    [v73 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v76 = [v73 trailingAnchor];
    id v77 = [v75 trailingAnchor];
    id v78 = [v76 constraintLessThanOrEqualToAnchor:v77];

    [v78 setConstant:-8.0];
    if (v78)
    {
      id v78 = v78;
      [v78 setActive:1];

      id v73 = v78;
    }
    uint64_t v79 = v94;
  }
  else
  {
    id v78 = 0;
    id v75 = v73;
    uint64_t v79 = v94;
  }

  id v80 = *(id *)((char *)v1 + v95);
  id v81 = sub_1001DD438(2, 1, 8.0);

  uint64_t v82 = *(void **)((char *)v1 + v95);
  id v83 = self;
  id v84 = v82;
  id v85 = [v83 secondaryLabelColor];
  [v84 setTextColor:v85];

  id v86 = *(id *)((char *)v1 + v79);
  id v87 = sub_1001DD438(0, 1, 0.0);

  id v88 = *(id *)((char *)v1 + v79);
  id v89 = [v88 superview];
  if (v89)
  {
    id v90 = v89;
    [v88 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v91 = [v88 centerXAnchor];
    id v92 = [v90 centerXAnchor];
    id v93 = [v91 constraintEqualToAnchor:v92];

    [v93 setConstant:0.0];
    if (v93)
    {
      id v97 = v93;
      [v97 setActive:1];

      id v88 = v97;
    }
    else
    {
      id v97 = 0;
    }
  }
  else
  {
    id v97 = 0;
    id v90 = v88;
  }
}

void sub_10028C8AC()
{
  id v1 = v0;
  uint64_t v113 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel;
  [*(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel] setHidden:0];
  uint64_t v115 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel;
  id v2 = *(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel];
  id v3 = [v2 text];
  id v4 = v3;
  if (v3) {

  }
  [v2 setHidden:v4 == 0];
  id v116 = (char *)OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel;
  [*(id *)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel) setHidden:0];
  [*(id *)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer) setHidden:0];
  uint64_t v5 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel;
  [*(id *)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel) setHidden:1];
  uint64_t v6 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView;
  id v7 = *(id *)((char *)v1 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView);
  id v8 = [v7 superview];
  if (v8)
  {
    id v9 = v8;
    [v7 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v10 = [v7 leadingAnchor];
    id v11 = [v9 leadingAnchor];
    id v12 = [v10 constraintEqualToAnchor:v11];

    [v12 setConstant:8.0];
    if (v12)
    {
      id v12 = v12;
      [v12 setActive:1];

      id v7 = v12;
    }
  }
  else
  {
    id v12 = 0;
    id v9 = v7;
  }

  id v13 = *(id *)((char *)v1 + v6);
  id v14 = [v13 superview];
  if (v14)
  {
    id v15 = v14;
    [v13 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v16 = [v13 topAnchor];
    id v17 = [v15 topAnchor];
    id v18 = [v16 constraintEqualToAnchor:v17];

    [v18 setConstant:8.0];
    if (v18)
    {
      id v18 = v18;
      [v18 setActive:1];

      id v13 = v18;
    }
  }
  else
  {
    id v18 = 0;
    id v15 = v13;
  }

  id v19 = *(id *)((char *)v1 + v6);
  [v19 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v20 = [v19 heightAnchor];
  id v21 = [v19 widthAnchor];
  id v22 = [v20 constraintEqualToAnchor:v21 multiplier:1.0];

  [v22 setActive:1];
  id v23 = *(id *)((char *)v1 + v6);
  [v1 frame];
  double v25 = v24 + -16.0;
  [v23 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v26 = [v23 widthAnchor];
  id v27 = [v26 constraintEqualToConstant:v25];

  [v27 setActive:1];
  id v28 = *(id *)((char *)v1 + v6);
  id v29 = sub_1001DD438(0, 1, 8.0);

  id v30 = *(void **)((char *)v1 + v6);
  id v31 = *(id *)((char *)v1 + v113);
  id v32 = v30;
  [v31 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v33 = [v31 leadingAnchor];
  id v34 = [v32 trailingAnchor];
  id v35 = [v33 constraintEqualToAnchor:v34];

  [v35 setConstant:8.0];
  [v35 setActive:1];

  id v36 = *(void **)((char *)v1 + v115);
  id v37 = *(id *)((char *)v1 + v113);
  id v38 = v36;
  [v37 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v39 = [v37 bottomAnchor];
  id v40 = [v38 topAnchor];
  id v41 = [v39 constraintEqualToAnchor:v40];

  [v41 setConstant:0.0];
  [v41 setActive:1];

  id v42 = *(id *)((char *)v1 + v113);
  id v43 = [v42 superview];
  if (v43)
  {
    id v44 = v43;
    [v42 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v45 = [v42 trailingAnchor];
    id v46 = [v44 trailingAnchor];
    id v47 = [v45 constraintLessThanOrEqualToAnchor:v46];

    [v47 setConstant:-8.0];
    if (v47)
    {
      id v47 = v47;
      [v47 setActive:1];

      id v42 = v47;
    }
  }
  else
  {
    id v47 = 0;
    id v44 = v42;
  }

  [*(id *)((char *)v1 + v113) setTextAlignment:4];
  id v48 = *(id *)((char *)v1 + v113);
  id v49 = [v48 superview];
  if (v49)
  {
    id v50 = v49;
    [v48 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v51 = [v48 topAnchor];
    id v52 = [v50 topAnchor];
    id v53 = [v51 constraintGreaterThanOrEqualToAnchor:v52];

    [v53 setConstant:8.0];
    if (v53)
    {
      id v53 = v53;
      [v53 setActive:1];

      id v48 = v53;
    }
  }
  else
  {
    id v53 = 0;
    id v50 = v48;
  }

  id v54 = *(void **)((char *)v1 + v6);
  id v55 = *(id *)((char *)v1 + v115);
  id v56 = v54;
  [v55 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v57 = [v55 leadingAnchor];
  id v58 = [v56 trailingAnchor];
  id v59 = [v57 constraintEqualToAnchor:v58];

  [v59 setConstant:8.0];
  [v59 setActive:1];

  double v60 = *(void **)((char *)v1 + v113);
  id v61 = *(id *)((char *)v1 + v115);
  id v62 = v60;
  [v61 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v63 = [v61 topAnchor];
  id v64 = [v62 bottomAnchor];
  id v65 = [v63 constraintEqualToAnchor:v64];

  [v65 setConstant:0.0];
  [v65 setActive:1];

  id v66 = [*(id *)((char *)v1 + v115) centerYAnchor];
  id v67 = [*(id *)((char *)v1 + v6) centerYAnchor];
  id v68 = [v66 constraintEqualToAnchor:v67];

  LODWORD(v69) = 1132068864;
  [v68 setPriority:v69];
  [v68 setActive:1];

  id v70 = *(id *)((char *)v1 + v115);
  id v71 = [v70 superview];
  if (v71)
  {
    id v72 = v71;
    [v70 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v73 = [v70 trailingAnchor];
    id v74 = [v72 trailingAnchor];
    id v75 = [v73 constraintLessThanOrEqualToAnchor:v74];

    [v75 setConstant:-8.0];
    if (v75)
    {
      id v75 = v75;
      [v75 setActive:1];

      id v70 = v75;
    }
  }
  else
  {
    id v75 = 0;
    id v72 = v70;
  }

  [*(id *)((char *)v1 + v115) setTextAlignment:4];
  id v76 = *(void **)((char *)v1 + v115);
  id v77 = self;
  id v78 = v76;
  uint64_t v114 = v77;
  id v79 = [v77 secondaryLabelColor];
  [v78 setTextColor:v79];

  id v80 = *(void **)((char *)v1 + v6);
  id v81 = *(id *)&v116[(void)v1];
  id v82 = v80;
  [v81 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v83 = [v81 leadingAnchor];
  id v84 = [v82 trailingAnchor];
  id v85 = [v83 constraintEqualToAnchor:v84];

  [v85 setConstant:8.0];
  [v85 setActive:1];

  id v86 = *(void **)((char *)v1 + v115);
  id v87 = *(id *)&v116[(void)v1];
  id v88 = v86;
  [v87 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v89 = [v87 topAnchor];
  id v90 = [v88 bottomAnchor];
  id v91 = [v89 constraintEqualToAnchor:v90];

  [v91 setConstant:0.0];
  [v91 setActive:1];

  id v92 = *(id *)&v116[(void)v1];
  id v93 = [v92 superview];
  if (v93)
  {
    uint64_t v94 = v93;
    [v92 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v95 = [v92 trailingAnchor];
    id v96 = [v94 trailingAnchor];
    id v97 = [v95 constraintLessThanOrEqualToAnchor:v96];

    [v97 setConstant:-8.0];
    if (v97)
    {
      id v97 = v97;
      [v97 setActive:1];

      id v92 = v97;
    }
    uint64_t v98 = v5;
    id v99 = v114;
    id v100 = &selRef_drawMapRect_zoomScale_inContext_;
  }
  else
  {
    id v97 = 0;
    uint64_t v94 = v92;
    uint64_t v98 = v5;
    id v99 = v114;
    id v100 = &selRef_drawMapRect_zoomScale_inContext_;
  }

  id v101 = *(id *)&v116[(void)v1];
  id v102 = sub_1001DD438(2, 1, 8.0);

  [*(id *)&v116[(void)v1] setTextAlignment:4];
  id v103 = *(id *)&v116[(void)v1];
  id v104 = [v99 tertiaryLabelColor];
  [v103 v100[131] v104];

  id v105 = *(id *)((char *)v1 + v98);
  id v106 = sub_1001DD438(0, 1, 0.0);

  id v107 = *(id *)((char *)v1 + v98);
  id v108 = [v107 superview];
  if (v108)
  {
    id v109 = v108;
    [v107 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v110 = [v107 centerXAnchor];
    id v111 = [v109 centerXAnchor];
    id v112 = [v110 constraintEqualToAnchor:v111];

    [v112 setConstant:0.0];
    if (v112)
    {
      id v117 = v112;
      [v117 setActive:1];

      id v107 = v117;
    }
    else
    {
      id v117 = 0;
    }
  }
  else
  {
    id v117 = 0;
    id v109 = v107;
  }
}

void sub_10028D7CC()
{
  id v1 = v0;
  uint64_t v2 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel;
  [*(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel] setHidden:0];
  uint64_t v3 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel;
  [*(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel] setHidden:0];
  [*(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel] setHidden:1];
  [*(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer] setHidden:0];
  uint64_t v76 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel;
  [*(id *)&v0[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel] setHidden:1];
  [*(id *)&v0[v2] setTextAlignment:1];
  [*(id *)&v0[v3] setTextAlignment:1];
  uint64_t v77 = v3;
  id v4 = *(void **)&v0[v3];
  uint64_t v5 = self;
  id v6 = v4;
  id v7 = [v5 secondaryLabelColor];
  [v6 setTextColor:v7];

  id v8 = *(id *)&v1[v2];
  id v9 = [v8 superview];
  if (v9)
  {
    id v10 = v9;
    [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v11 = [v8 topAnchor];
    id v12 = [v10 topAnchor];
    id v13 = [v11 constraintEqualToAnchor:v12];

    [v13 setConstant:12.0];
    if (v13)
    {
      id v13 = v13;
      [v13 setActive:1];

      id v8 = v13;
    }

    id v14 = &stru_1007D7000;
  }
  else
  {
    id v13 = 0;
    id v10 = v8;
    id v14 = &stru_1007D7000;
  }

  id v15 = *(id *)&v1[v2];
  id v16 = [v15 superview];
  if (v16)
  {
    id v17 = v16;
    [v15 v14[96].name];
    id v18 = [v15 leadingAnchor];
    id v19 = [v17 leadingAnchor];
    id v20 = [v18 constraintEqualToAnchor:v19];

    [v20 setConstant:8.0];
    if (v20)
    {
      id v20 = v20;
      [v20 setActive:1];

      id v15 = v20;
    }
  }
  else
  {
    id v20 = 0;
    id v17 = v15;
  }

  id v21 = *(id *)&v1[v2];
  id v22 = [v21 superview];
  if (v22)
  {
    id v23 = v22;
    [v21 v14[96].name];
    id v24 = [v21 trailingAnchor];
    id v25 = [v23 trailingAnchor];
    id v26 = [v24 constraintEqualToAnchor:v25];

    [v26 setConstant:-8.0];
    if (v26)
    {
      id v26 = v26;
      [v26 setActive:1];

      id v21 = v26;
    }
  }
  else
  {
    id v26 = 0;
    id v23 = v21;
  }

  id v27 = *(id *)&v1[v77];
  id v28 = sub_1001DD438(0, 1, 12.0);

  id v29 = *(id *)&v1[v77];
  id v30 = [v29 superview];
  if (v30)
  {
    id v31 = v30;
    [v29 v14[96].name];
    id v32 = [v29 leadingAnchor];
    id v33 = [v31 leadingAnchor];
    id v34 = [v32 constraintEqualToAnchor:v33];

    [v34 setConstant:12.0];
    if (v34)
    {
      id v34 = v34;
      [v34 setActive:1];

      id v29 = v34;
    }
  }
  else
  {
    id v34 = 0;
    id v31 = v29;
  }

  id v35 = *(id *)&v1[v77];
  id v36 = [v35 superview];
  if (v36)
  {
    id v37 = v36;
    [v35 v14[96].name];
    id v38 = [v35 trailingAnchor];
    id v39 = [v37 trailingAnchor];
    id v40 = [v38 constraintEqualToAnchor:v39];

    [v40 setConstant:-12.0];
    if (v40)
    {
      id v40 = v40;
      [v40 setActive:1];

      id v35 = v40;
    }
  }
  else
  {
    id v40 = 0;
    id v37 = v35;
  }

  uint64_t v41 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView;
  id v42 = *(void **)&v1[v2];
  id v43 = *(id *)&v1[OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView];
  id v44 = v42;
  [v43 v14[96].name];
  id v45 = [v43 topAnchor];
  id v78 = v1;
  id v46 = [v44 bottomAnchor];
  id v47 = [v45 constraintEqualToAnchor:v46];

  [v47 setConstant:5.0];
  [v47 setActive:1];

  id v48 = *(void **)&v1[v77];
  id v49 = *(id *)&v1[v41];
  id v50 = v48;
  [v49 v14[96].name];
  id v51 = [v49 bottomAnchor];
  id v52 = [v50 topAnchor];
  id v53 = [v51 constraintEqualToAnchor:v52];

  [v53 setConstant:-5.0];
  [v53 setActive:1];

  id v54 = *(id *)&v1[v41];
  id v55 = [v54 superview];
  if (v55)
  {
    id v56 = v55;
    [v54 v14[96].name];
    id v57 = [v54 leadingAnchor];
    id v58 = [v56 leadingAnchor];
    id v59 = [v57 constraintEqualToAnchor:v58];

    [v59 setConstant:12.0];
    if (v59)
    {
      id v59 = v59;
      [v59 setActive:1];

      id v54 = v59;
    }
    uint64_t v60 = v76;
  }
  else
  {
    id v59 = 0;
    id v56 = v54;
    uint64_t v60 = v76;
  }

  id v61 = *(id *)&v78[v41];
  id v62 = [v61 superview];
  if (v62)
  {
    id v63 = v62;
    [v61 v14[96].name];
    id v64 = [v61 trailingAnchor];
    id v65 = [v63 trailingAnchor];
    id v66 = [v64 constraintEqualToAnchor:v65];

    [v66 setConstant:-12.0];
    if (v66)
    {
      id v66 = v66;
      id v67 = &stru_1007D7000;
      [v66 setActive:1];

      id v61 = v66;
    }
    else
    {
      id v67 = &stru_1007D7000;
    }
  }
  else
  {
    id v66 = 0;
    id v63 = v61;
    id v67 = &stru_1007D7000;
  }

  id v68 = *(id *)&v78[v60];
  id v69 = sub_1001DD438(0, 1, 0.0);

  id v70 = *(id *)&v78[v60];
  id v71 = [v70 superview];
  if (v71)
  {
    id v72 = v71;
    [v70 v14[96].name];
    id v73 = [v70 centerXAnchor];
    id v74 = [v72 centerXAnchor];
    id v75 = [v73 constraintEqualToAnchor:v74];

    [v75 setConstant:0.0];
    if (v75)
    {
      id v79 = v75;
      [v79 v67[90].name:1];

      id v70 = v79;
    }
    else
    {
      id v79 = 0;
    }
  }
  else
  {
    id v79 = 0;
    id v72 = v70;
  }
}

void sub_10028E244()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel;
  [*(id *)((char *)v0 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_primaryLabel) setHidden:0];
  uint64_t v2 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel;
  [*(id *)((char *)v0 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_secondaryLabel) setHidden:0];
  uint64_t v128 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel;
  [*(id *)((char *)v0 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_typeLabel) setHidden:0];
  uint64_t v3 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel;
  [*(id *)((char *)v0 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_footnoteLabel) setHidden:0];
  [*(id *)((char *)v0 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_gradientLayer) setHidden:0];
  uint64_t v126 = v1;
  [*(id *)((char *)v0 + v1) setTextAlignment:1];
  id v129 = (char *)v2;
  [*(id *)((char *)v0 + v2) setTextAlignment:1];
  uint64_t v127 = v3;
  [*(id *)((char *)v0 + v3) setAlpha:1.0];
  uint64_t v4 = OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView;
  id v5 = *(id *)((char *)v0 + OBJC_IVAR____TtC7Journal20StateOfMindAssetView_valenceImageView);
  id v6 = [v5 superview];
  if (v6)
  {
    id v7 = v6;
    [v5 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v8 = [v5 topAnchor];
    id v9 = [v7 topAnchor];
    id v10 = [v8 constraintGreaterThanOrEqualToAnchor:v9];

    [v10 setConstant:85.0];
    if (v10)
    {
      id v10 = v10;
      [v10 setActive:1];

      id v5 = v10;
    }
  }
  else
  {
    id v10 = 0;
    id v7 = v5;
  }

  id v11 = *(void **)((char *)v0 + v126);
  id v12 = *(id *)((char *)v0 + v4);
  id v13 = v11;
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v14 = [v12 bottomAnchor];
  id v15 = [v13 topAnchor];
  id v16 = [v14 constraintEqualToAnchor:v15];

  [v16 setConstant:-24.0];
  [v16 setActive:1];

  id v17 = *(id *)((char *)v0 + v4);
  id v18 = [v17 superview];
  if (v18)
  {
    id v19 = v18;
    [v17 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v20 = [v17 leadingAnchor];
    id v21 = [v19 leadingAnchor];
    id v22 = [v20 constraintGreaterThanOrEqualToAnchor:v21];

    [v22 setConstant:24.0];
    if (v22)
    {
      id v22 = v22;
      [v22 setActive:1];

      id v17 = v22;
    }
    id v23 = &selRef_drawMapRect_zoomScale_inContext_;
    uint64_t v24 = v126;
  }
  else
  {
    id v22 = 0;
    id v19 = v17;
    id v23 = &selRef_drawMapRect_zoomScale_inContext_;
    uint64_t v24 = v126;
  }

  id v25 = *(id *)((char *)v0 + v4);
  id v26 = [v25 v23[77]];
  if (v26)
  {
    id v27 = v26;
    [v25 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v28 = [v25 trailingAnchor];
    id v29 = [v27 trailingAnchor];
    id v30 = [v28 constraintLessThanOrEqualToAnchor:v29];

    [v30 setConstant:-24.0];
    if (v30)
    {
      id v30 = v30;
      [v30 setActive:1];

      id v25 = v30;
    }
  }
  else
  {
    id v30 = 0;
    id v27 = v25;
  }

  id v31 = *(id *)((char *)v0 + v4);
  [v31 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v32 = [v31 heightAnchor];
  id v33 = [v31 widthAnchor];
  id v34 = [v32 constraintEqualToAnchor:v33 multiplier:1.0];

  [v34 setActive:1];
  id v35 = [*(id *)((char *)v0 + v4) centerYAnchor];
  id v36 = [v0 centerYAnchor];
  id v37 = [v35 constraintLessThanOrEqualToAnchor:v36 constant:-50.0];

  [v37 setActive:1];
  id v38 = *(id *)((char *)v0 + v4);
  id v39 = [v38 v23[77]];
  if (v39)
  {
    id v40 = v39;
    [v38 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v41 = [v38 centerXAnchor];
    id v42 = [v40 centerXAnchor];
    id v43 = [v41 constraintEqualToAnchor:v42];

    [v43 setConstant:0.0];
    if (v43)
    {
      id v43 = v43;
      [v43 setActive:1];

      id v38 = v43;
    }
  }
  else
  {
    id v43 = 0;
    id v40 = v38;
  }

  id v44 = *(void **)((char *)v0 + v128);
  id v45 = *(id *)((char *)v0 + v24);
  id v46 = v44;
  [v45 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v47 = [v45 bottomAnchor];
  id v48 = [v46 topAnchor];
  id v49 = [v47 constraintEqualToAnchor:v48];

  [v49 setConstant:0.0];
  [v49 setActive:1];

  uint64_t v50 = qword_1007F72F8;
  id v51 = *(id *)((char *)v0 + v24);
  if (v50 != -1) {
    swift_once();
  }
  double v52 = *(double *)&qword_10083D908;
  id v53 = [v51 v23[77]];
  if (v53)
  {
    id v54 = v53;
    [v51 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v55 = [v51 leadingAnchor];
    id v56 = [v54 leadingAnchor];
    id v57 = [v55 constraintEqualToAnchor:v56];

    [v57 setConstant:v52];
    if (v57)
    {
      id v57 = v57;
      [v57 setActive:1];

      id v51 = v57;
    }
  }
  else
  {
    id v57 = 0;
    id v54 = v51;
  }

  double v58 = *(double *)&qword_10083D908;
  id v59 = *(id *)((char *)v0 + v24);
  id v60 = [v59 v23[77]];
  if (v60)
  {
    id v61 = v60;
    [v59 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v62 = [v59 trailingAnchor];
    id v63 = [v61 trailingAnchor];
    id v64 = [v62 constraintEqualToAnchor:v63];

    [v64 setConstant:-v58];
    if (v64)
    {
      id v64 = v64;
      [v64 setActive:1];

      id v59 = v64;
    }
  }
  else
  {
    id v64 = 0;
    id v61 = v59;
  }

  double v65 = *(double *)&qword_10083D908;
  id v66 = *(id *)((char *)v0 + v128);
  id v67 = [v66 v23[77]];
  if (v67)
  {
    id v68 = v67;
    [v66 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v69 = [v66 leadingAnchor];
    id v70 = [v68 leadingAnchor];
    id v71 = [v69 constraintEqualToAnchor:v70];

    [v71 setConstant:v65];
    if (v71)
    {
      id v71 = v71;
      [v71 setActive:1];

      id v66 = v71;
    }
  }
  else
  {
    id v71 = 0;
    id v68 = v66;
  }

  double v72 = *(double *)&qword_10083D908;
  id v73 = *(id *)((char *)v0 + v128);
  id v74 = [v73 v23[77]];
  if (v74)
  {
    id v75 = v74;
    [v73 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v76 = [v73 trailingAnchor];
    id v77 = [v75 trailingAnchor];
    id v78 = [v76 constraintEqualToAnchor:v77];

    [v78 setConstant:-v72];
    if (v78)
    {
      id v78 = v78;
      [v78 setActive:1];

      id v73 = v78;
    }
  }
  else
  {
    id v78 = 0;
    id v75 = v73;
  }

  double v79 = *(double *)&qword_10083D908;
  id v80 = *(id *)&v129[(void)v0];
  id v81 = [v80 v23[77]];
  if (v81)
  {
    id v82 = v81;
    [v80 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v83 = [v80 leadingAnchor];
    id v84 = [v82 leadingAnchor];
    id v85 = [v83 constraintEqualToAnchor:v84];

    [v85 setConstant:v79];
    if (v85)
    {
      id v85 = v85;
      [v85 setActive:1];

      id v80 = v85;
    }
  }
  else
  {
    id v85 = 0;
    id v82 = v80;
  }

  double v86 = *(double *)&qword_10083D908;
  id v87 = *(id *)&v129[(void)v0];
  id v88 = [v87 v23[77]];
  if (v88)
  {
    id v89 = v88;
    [v87 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v90 = [v87 trailingAnchor];
    id v91 = [v89 trailingAnchor];
    id v92 = [v90 constraintEqualToAnchor:v91];

    [v92 setConstant:-v86];
    if (v92)
    {
      id v92 = v92;
      [v92 setActive:1];

      id v87 = v92;
    }
  }
  else
  {
    id v92 = 0;
    id v89 = v87;
  }

  id v93 = *(void **)((char *)v0 + v128);
  uint64_t v94 = qword_1007F7310;
  id v95 = *(id *)&v129[(void)v0];
  id v96 = v93;
  if (v94 != -1) {
    swift_once();
  }
  double v97 = *(double *)&qword_10083D920;
  [v95 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v98 = [v95 topAnchor];
  id v99 = [v96 bottomAnchor];
  id v100 = [v98 constraintEqualToAnchor:v99];

  [v100 setConstant:v97];
  [v100 setActive:1];

  double v101 = *(double *)&qword_10083D908;
  id v102 = *(id *)((char *)v0 + v127);
  id v103 = [v102 superview];
  if (v103)
  {
    id v104 = v103;
    [v102 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v105 = [v102 leadingAnchor];
    id v106 = [v104 leadingAnchor];
    id v107 = [v105 constraintEqualToAnchor:v106];

    [v107 setConstant:v101];
    if (v107)
    {
      id v107 = v107;
      [v107 setActive:1];

      id v102 = v107;
    }
    id v108 = &selRef_drawMapRect_zoomScale_inContext_;
    uint64_t v109 = v127;
  }
  else
  {
    id v107 = 0;
    id v104 = v102;
    id v108 = &selRef_drawMapRect_zoomScale_inContext_;
    uint64_t v109 = v127;
  }

  double v110 = *(double *)&qword_10083D908;
  id v111 = *(id *)((char *)v0 + v109);
  id v112 = [v111 v108[77]];
  if (v112)
  {
    uint64_t v113 = v112;
    [v111 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v114 = [v111 trailingAnchor];
    id v115 = [v113 trailingAnchor];
    id v116 = [v114 constraintEqualToAnchor:v115];

    [v116 setConstant:-v110];
    if (v116)
    {
      id v116 = v116;
      [v116 setActive:1];

      id v111 = v116;
    }
  }
  else
  {
    id v116 = 0;
    uint64_t v113 = v111;
  }

  id v117 = *(void **)&v129[(void)v0];
  uint64_t v118 = qword_1007F7318;
  id v119 = *(id *)((char *)v0 + v109);
  id v120 = v117;
  if (v118 != -1) {
    swift_once();
  }
  double v121 = *(double *)&qword_10083D928;
  [v119 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v122 = [v119 topAnchor];
  id v123 = [v120 bottomAnchor];
  id v124 = [v122 constraintEqualToAnchor:v123];

  [v124 setConstant:v121];
  [v124 setActive:1];

  id v125 = *(id *)((char *)v0 + v109);
  id v130 = sub_1001DD438(2, 1, 75.0);
}

id sub_10028F42C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for StateOfMindAssetGridView();
  return [super dealloc];
}

uint64_t sub_10028F464()
{
  return type metadata accessor for StateOfMindAssetGridView();
}

uint64_t type metadata accessor for StateOfMindAssetGridView()
{
  uint64_t result = qword_100805DF0;
  if (!qword_100805DF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_10028F4B8()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_10028F4FC()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_10028F534()
{
}

uint64_t sub_10028F53C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_10028F54C()
{
  return swift_release();
}

uint64_t sub_10028F554()
{
  return swift_deallocObject();
}

uint64_t sub_10028F594(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for _ConditionalContent.Storage();
  __n128 v5 = __chkstk_darwin(v4);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a2 - 8) + 16))((char *)&v8 - v6, a1, a2, v5);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_10028F68C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = type metadata accessor for _ConditionalContent.Storage();
  __n128 v6 = __chkstk_darwin(v5);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(*(void *)(a3 - 8) + 16))((char *)&v9 - v7, a1, a3, v6);
  swift_storeEnumTagMultiPayload();
  return _ConditionalContent<>.init(storage:)();
}

uint64_t sub_10028F784()
{
  swift_getKeyPath();
  View.environment<A>(_:_:)();

  return swift_release();
}

uint64_t sub_10028F7F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v73 = a1;
  uint64_t v82 = a2;
  uint64_t v5 = type metadata accessor for AttributedString();
  uint64_t v80 = *(void *)(v5 - 8);
  uint64_t v81 = v5;
  __chkstk_darwin(v5);
  double v79 = (char *)v59 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for AccessibilityChildBehavior();
  uint64_t v77 = *(void *)(v7 - 8);
  uint64_t v78 = v7;
  __chkstk_darwin(v7);
  id v76 = (char *)v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100014440(&qword_100805F10);
  uint64_t v9 = *(void *)(a1 + 16);
  sub_100014440(&qword_1007F9640);
  uint64_t v75 = v9;
  uint64_t v10 = type metadata accessor for ModifiedContent();
  uint64_t v11 = *(void *)(a1 + 24);
  uint64_t v12 = sub_100014488(&qword_1007F9638, &qword_1007F9640);
  uint64_t v74 = v11;
  uint64_t v93 = v11;
  uint64_t v94 = v12;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v91 = v10;
  uint64_t v92 = WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  uint64_t v91 = v10;
  uint64_t v92 = WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v91 = OpaqueTypeMetadata2;
  uint64_t v92 = OpaqueTypeConformance2;
  swift_getOpaqueTypeMetadata2();
  sub_100014440(&qword_1007FC8A0);
  type metadata accessor for ModifiedContent();
  sub_100014440(&qword_100800680);
  type metadata accessor for ModifiedContent();
  sub_100014440(&qword_100800690);
  type metadata accessor for ModifiedContent();
  sub_100014440(&qword_100800618);
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  type metadata accessor for ModifiedContent();
  sub_100014440(&qword_100805F18);
  type metadata accessor for ModifiedContent();
  swift_getTupleTypeMetadata3();
  type metadata accessor for TupleView();
  uint64_t v16 = type metadata accessor for _ConditionalContent();
  uint64_t v89 = swift_getWitnessTable();
  id v90 = &protocol witness table for Text;
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v71 = v16;
  uint64_t v62 = v17;
  uint64_t v18 = type metadata accessor for VStack();
  uint64_t v68 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  id v63 = (char *)v59 - v19;
  uint64_t v20 = type metadata accessor for ModifiedContent();
  uint64_t v72 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  id v67 = (char *)v59 - v21;
  sub_100014440(&qword_1008002B0);
  uint64_t v22 = type metadata accessor for ModifiedContent();
  uint64_t v69 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  id v66 = (char *)v59 - v23;
  uint64_t v24 = swift_getWitnessTable();
  uint64_t v25 = sub_100014488(&qword_1007FC8A8, &qword_1007FC8A0);
  v59[1] = v24;
  uint64_t v87 = v24;
  uint64_t v88 = v25;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v27 = sub_100014488(&qword_1008002A8, &qword_1008002B0);
  v59[2] = v26;
  uint64_t v85 = v26;
  uint64_t v86 = v27;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v91 = v22;
  uint64_t v92 = v28;
  uint64_t v60 = v28;
  uint64_t v29 = swift_getOpaqueTypeMetadata2();
  uint64_t v61 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  id v31 = (char *)v59 - v30;
  type metadata accessor for AccessibilityAttachmentModifier();
  uint64_t v65 = v29;
  uint64_t v32 = type metadata accessor for ModifiedContent();
  uint64_t v70 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  id v34 = (char *)v59 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  id v64 = (char *)v59 - v36;
  uint64_t v37 = v3 + *(int *)(v73 + 48);
  uint64_t v38 = *(void *)v37;
  char v39 = *(unsigned char *)(v37 + 8);
  sub_100026CCC(*(void *)v37, v39);
  sub_1006670C0(v38, v39);
  sub_100026DF8(v38, v39);
  if (static TextAlignment.== infix(_:_:)()) {
    uint64_t v40 = static HorizontalAlignment.center.getter();
  }
  else {
    uint64_t v40 = static HorizontalAlignment.leading.getter();
  }
  __chkstk_darwin(v40);
  uint64_t v41 = v74;
  v59[-4] = v75;
  v59[-3] = v41;
  v59[-2] = v3;
  id v42 = v63;
  VStack.init(alignment:spacing:content:)();
  LODWORD(v91) = static HierarchicalShapeStyle.secondary.getter();
  id v43 = v67;
  View.foregroundStyle<A>(_:)();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v42, v18);
  if (qword_1007F6BD0 != -1) {
    swift_once();
  }
  id v44 = v66;
  View.transition(_:)();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v43, v20);
  id v45 = v76;
  static AccessibilityChildBehavior.ignore.getter();
  uint64_t v46 = v60;
  View.accessibilityElement(children:)();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v45, v78);
  (*(void (**)(char *, uint64_t))(v69 + 8))(v44, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v79, v3, v81);
  uint64_t v47 = Text.init(_:)();
  uint64_t v49 = v48;
  char v51 = v50 & 1;
  uint64_t v91 = v22;
  uint64_t v92 = v46;
  uint64_t v52 = swift_getOpaqueTypeConformance2();
  uint64_t v53 = v65;
  View.accessibilityLabel(_:)();
  sub_10002B8D0(v47, v49, v51);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v31, v53);
  uint64_t v54 = sub_100293C68((unint64_t *)&qword_1007F96A0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
  uint64_t v83 = v52;
  uint64_t v84 = v54;
  uint64_t v55 = swift_getWitnessTable();
  id v56 = v64;
  sub_1000B29EC(v34, v32, v55);
  id v57 = *(void (**)(char *, uint64_t))(v70 + 8);
  v57(v34, v32);
  sub_1000B29EC(v56, v32, v55);
  return ((uint64_t (*)(char *, uint64_t))v57)(v56, v32);
}

uint64_t sub_100290300@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v315 = a1;
  uint64_t v296 = a4;
  uint64_t v6 = sub_100014440(&qword_100805F10);
  sub_100014440(&qword_1007F9640);
  uint64_t v7 = type metadata accessor for ModifiedContent();
  uint64_t v8 = sub_100014488(&qword_1007F9638, &qword_1007F9640);
  v342[24] = a3;
  v342[25] = v8;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v332 = v7;
  id v333 = (char *)WitnessTable;
  OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
  CGFloat v316 = (char *)OpaqueTypeMetadata2;
  uint64_t v332 = v7;
  uint64_t v264 = WitnessTable;
  id v333 = (char *)WitnessTable;
  uint64_t OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  uint64_t v332 = OpaqueTypeMetadata2;
  uint64_t v268 = OpaqueTypeConformance2;
  id v333 = (char *)OpaqueTypeConformance2;
  uint64_t v12 = swift_getOpaqueTypeMetadata2();
  sub_100014440(&qword_1007FC8A0);
  uint64_t v13 = type metadata accessor for ModifiedContent();
  sub_100014440(&qword_100800680);
  uint64_t v14 = type metadata accessor for ModifiedContent();
  sub_100014440(&qword_100800690);
  uint64_t v15 = type metadata accessor for ModifiedContent();
  sub_100014440(&qword_100800618);
  uint64_t v307 = type metadata accessor for ModifiedContent();
  uint64_t v308 = type metadata accessor for ModifiedContent();
  unint64_t v309 = (void *)type metadata accessor for ModifiedContent();
  uint64_t v310 = type metadata accessor for ModifiedContent();
  sub_100014440(&qword_100805F18);
  uint64_t v16 = type metadata accessor for ModifiedContent();
  uint64_t v240 = v6;
  swift_getTupleTypeMetadata3();
  uint64_t v314 = type metadata accessor for TupleView();
  uint64_t v239 = *(void *)(v314 - 8);
  __chkstk_darwin(v314);
  id v238 = (char *)&v235 - v17;
  uint64_t v237 = sub_100010218(&qword_100805F20);
  __chkstk_darwin(v237);
  id v236 = (char *)&v235 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v267 = a3;
  uint64_t v289 = type metadata accessor for InsightsXSmallLabel();
  uint64_t v275 = *(void *)(v289 - 8);
  __chkstk_darwin(v289);
  uint64_t v273 = (char *)&v235 - v19;
  uint64_t v20 = type metadata accessor for ContentTransition();
  uint64_t v262 = *(void *)(v20 - 8);
  uint64_t v263 = v20;
  __chkstk_darwin(v20);
  NSString v261 = (char *)&v235 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_100010218(&qword_100800590);
  __chkstk_darwin(v22 - 8);
  NSString v244 = (char *)&v235 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v269 = a2;
  uint64_t v249 = *(void *)(a2 - 8);
  __chkstk_darwin(v24);
  unsigned int v245 = (char *)&v235 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = swift_checkMetadataState();
  uint64_t v246 = *(void *)(v26 - 8);
  uint64_t v247 = v26;
  __chkstk_darwin(v26);
  Swift::String v243 = (char *)&v235 - v27;
  uint64_t v252 = swift_checkMetadataState();
  uint64_t v250 = *(void *)(v252 - 8);
  __chkstk_darwin(v252);
  id v248 = (char *)&v235 - v28;
  uint64_t v270 = v12;
  uint64_t v253 = *(void *)(v12 - 8);
  __chkstk_darwin(v29);
  NSURLFileProtectionType v251 = (char *)&v235 - v30;
  uint64_t v274 = v13;
  uint64_t v255 = *(void *)(v13 - 8);
  __chkstk_darwin(v31);
  uint64_t v254 = (char *)&v235 - v32;
  uint64_t v277 = v14;
  uint64_t v257 = *(void *)(v14 - 8);
  __chkstk_darwin(v33);
  Swift::String v256 = (char *)&v235 - v34;
  uint64_t v280 = v15;
  uint64_t v259 = *(void *)(v15 - 8);
  __chkstk_darwin(v35);
  uint64_t v258 = (char *)&v235 - v36;
  uint64_t v260 = *(void *)(v307 - 8);
  __chkstk_darwin(v37);
  long long v284 = (char *)&v235 - v38;
  uint64_t v266 = *(void *)(v308 - 8);
  __chkstk_darwin(v39);
  unint64_t v265 = (char *)&v235 - v40;
  uint64_t v272 = *(v309 - 1);
  __chkstk_darwin(v41);
  int v271 = (char *)&v235 - v42;
  uint64_t v278 = *(void *)(v310 - 8);
  __chkstk_darwin(v43);
  uint64_t v276 = (char *)&v235 - v44;
  uint64_t v286 = v16;
  uint64_t v282 = *(void *)(v16 - 8);
  __chkstk_darwin(v45);
  os_log_type_t v235 = (char *)&v235 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v47);
  id v279 = (char *)&v235 - v48;
  __chkstk_darwin(v49);
  id v285 = (char *)&v235 - v50;
  uint64_t v242 = sub_100010218(&qword_100804960);
  __chkstk_darwin(v242);
  uint64_t v241 = (char *)&v235 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v292 = type metadata accessor for AttributedSubstring();
  uint64_t v288 = *(void *)(v292 - 8);
  __chkstk_darwin(v292);
  id v281 = (char *)&v235 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v53);
  uint64_t v287 = (char *)&v235 - v54;
  __chkstk_darwin(v55);
  uint64_t v283 = (uint64_t)&v235 - v56;
  uint64_t v57 = type metadata accessor for AttributedString();
  CGFloat v290 = *(void (**)(char *, uint64_t, uint64_t))(v57 - 8);
  uint64_t v291 = v57;
  __chkstk_darwin(v57);
  uint64_t v306 = (uint64_t)&v235 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v301 = sub_100010218(&qword_100805F28);
  id v313 = *(void (**)(char *, uint64_t))(v301 - 8);
  __chkstk_darwin(v301);
  uint64_t v60 = (char *)&v235 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v300 = sub_100010218(&qword_100805F30);
  uint64_t v299 = *(void *)(v300 - 8);
  __chkstk_darwin(v300);
  uint64_t v62 = (char *)&v235 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_100010218(&qword_100805F38);
  uint64_t v312 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  CGFloat v316 = (char *)&v235 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v65);
  id v67 = (char *)&v235 - v66;
  uint64_t v305 = type metadata accessor for AttributedString.Runs();
  uint64_t v68 = *(void *)(v305 - 8);
  __chkstk_darwin(v305);
  uint64_t v70 = (char *)&v235 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = sub_100010218(&qword_100805F40);
  __chkstk_darwin(v71 - 8);
  uint64_t v73 = (char *)&v235 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v74);
  uint64_t v298 = (char **)((char *)&v235 - v75);
  uint64_t v76 = sub_100010218(&qword_100805F48);
  __chkstk_darwin(v76 - 8);
  uint64_t v304 = (uint64_t)&v235 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v311 = sub_100010218(&qword_1007F8EA0);
  uint64_t v302 = *(void *)(v311 - 8);
  __chkstk_darwin(v311);
  uint64_t v293 = (uint64_t)&v235 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for _ConditionalContent();
  uint64_t v294 = *(void *)(v79 - 8);
  uint64_t v295 = v79;
  __chkstk_darwin(v79);
  uint64_t v297 = (char *)&v235 - v80;
  AttributedString.runs.getter();
  uint64_t KeyPath = swift_getKeyPath();
  swift_getKeyPath();
  sub_10017AB0C();
  AttributedString.Runs.subscript.getter();
  swift_release();
  (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v305);
  uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v312 + 16);
  uint64_t v303 = v67;
  v81(v316, v67, v63);
  sub_100014488(&qword_100805F50, &qword_100805F38);
  uint64_t v305 = v63;
  dispatch thunk of Sequence.makeIterator()();
  sub_100014488(&qword_100805F58, &qword_100805F30);
  uint64_t v82 = v300;
  dispatch thunk of IteratorProtocol.next()();
  uint64_t v83 = v301;
  CGFloat v316 = (char *)*((void *)v313 + 6);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v316)(v73, 1, v301) == 1)
  {
LABEL_2:
    (*(void (**)(char *, uint64_t))(v299 + 8))(v62, v82);
    uint64_t v84 = 1;
    uint64_t v85 = (void (*)(void, void, void))v298;
  }
  else
  {
    while (1)
    {
      sub_10002C4EC((uint64_t)v73, (uint64_t)v60, &qword_100805F28);
      if ((v60[8] & 1) == 0 && *(void *)v60 == 2) {
        break;
      }
      sub_10001457C((uint64_t)v60, &qword_100805F28);
      dispatch thunk of IteratorProtocol.next()();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v316)(v73, 1, v83) == 1) {
        goto LABEL_2;
      }
    }
    (*(void (**)(char *, uint64_t))(v299 + 8))(v62, v82);
    uint64_t v85 = (void (*)(void, void, void))v298;
    sub_10002C4EC((uint64_t)v60, (uint64_t)v298, &qword_100805F28);
    uint64_t v84 = 0;
  }
  (*((void (**)(void (*)(void, void, void), uint64_t, uint64_t, uint64_t))v313 + 7))(v85, v84, 1, v83);
  (*(void (**)(char *, uint64_t))(v312 + 8))(v303, v305);
  int v86 = ((uint64_t (*)(void, uint64_t, uint64_t))v316)(v85, 1, v83);
  uint64_t v87 = v314;
  uint64_t v88 = v315;
  uint64_t v89 = v304;
  if (v86 == 1)
  {
    sub_10001457C((uint64_t)v85, &qword_100805F40);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v302 + 56))(v89, 1, 1, v311);
LABEL_11:
    sub_10001457C(v89, &qword_100805F48);
    (*((void (**)(uint64_t, uint64_t, uint64_t))v290 + 2))(v306, v88, v291);
    uint64_t v92 = Text.init(_:)();
    uint64_t v94 = v93;
    uint64_t v332 = v92;
    id v333 = (char *)v93;
    char v96 = v95 & 1;
    char v334 = v95 & 1;
    uint64_t v335 = v97;
    swift_getWitnessTable();
    id v98 = v297;
    sub_10028F68C((uint64_t)&v332, v87, (uint64_t)&type metadata for Text);
    sub_10002B8D0(v92, v94, v96);
    swift_bridgeObjectRelease();
LABEL_25:
    v342[22] = swift_getWitnessTable();
    v342[23] = &protocol witness table for Text;
    uint64_t v231 = v295;
    uint64_t v232 = swift_getWitnessTable();
    sub_1000B29EC(v98, v231, v232);
    return (*(uint64_t (**)(char *, uint64_t))(v294 + 8))(v98, v231);
  }
  sub_10002C4EC((uint64_t)v85 + *(int *)(v83 + 48), v304, &qword_1007F8EA0);
  uint64_t v90 = v302;
  uint64_t v91 = v311;
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v302 + 56))(v89, 0, 1, v311);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v90 + 48))(v89, 1, v91) == 1) {
    goto LABEL_11;
  }
  uint64_t v99 = v89;
  uint64_t v100 = v293;
  sub_10002C4EC(v99, v293, &qword_1007F8EA0);
  uint64_t v101 = type metadata accessor for AttributedString.Index();
  uint64_t v102 = sub_100293C68(&qword_100804968, (void (*)(uint64_t))&type metadata accessor for AttributedString.Index);
  uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
  if (result)
  {
    uint64_t v301 = v102;
    uint64_t v104 = *(void *)(v101 - 8);
    id v105 = *(char ***)(v104 + 16);
    uint64_t v106 = (uint64_t)v241;
    uint64_t v302 = v101;
    uint64_t v298 = v105;
    uint64_t v291 = v104 + 16;
    ((void (*)(char *, uint64_t, uint64_t))v105)(v241, v100, v101);
    sub_100014488(&qword_100805F60, &qword_100804960);
    uint64_t v107 = (uint64_t)v287;
    AttributedString.subscript.getter();
    sub_10001457C(v106, &qword_100804960);
    uint64_t v108 = v283;
    sub_1003DCD84(v107, v283);
    uint64_t v109 = v288;
    double v110 = *(void (**)(char *, uint64_t))(v288 + 8);
    uint64_t v111 = v292;
    CGFloat v316 = (char *)(v288 + 8);
    id v313 = v110;
    v110((char *)v107, v292);
    id v112 = *(void (**)(char *, uint64_t, uint64_t))(v109 + 16);
    uint64_t v288 = v109 + 16;
    CGFloat v290 = v112;
    v112((char *)v107, v108, v111);
    AttributedString.init(_:)();
    uint64_t v113 = Text.init(_:)();
    uint64_t v115 = v114;
    char v117 = v116;
    uint64_t v118 = v88 + *(int *)(v289 + 52);
    uint64_t v119 = *(void *)v118;
    char v120 = *(unsigned char *)(v118 + 8);
    sub_100026CCC(*(void *)v118, v120);
    char v121 = sub_100666714(v119, v120);
    sub_100026DF8(v119, v120);
    if (v121) {
      static Font.headline.getter();
    }
    else {
      static Font.subheadline.getter();
    }
    uint64_t v304 = Text.font(_:)();
    uint64_t v303 = (char *)v122;
    LODWORD(v300) = v123;
    uint64_t v305 = v124;
    swift_release();
    sub_10002B8D0(v113, v115, v117 & 1);
    swift_bridgeObjectRelease();
    uint64_t v125 = v289;
    uint64_t v312 = *(int *)(v289 + 36);
    uint64_t v299 = *(void *)(v88 + v312);
    LODWORD(v242) = static MatchedGeometryProperties.position.getter();
    uint64_t v126 = (uint64_t *)(v88 + *(int *)(v125 + 40));
    uint64_t v128 = *v126;
    uint64_t v127 = v126[1];
    id v129 = *(void (**)(char *))(v88 + *(int *)(v125 + 44));
    sub_100014488((unint64_t *)&qword_1007FFA38, &qword_1007F8EA0);
    id v130 = v287;
    AttributedString.subscript.getter();
    id v131 = v245;
    v129(v130);
    v313(v130, v292);
    uint64_t v132 = *(void *)v118;
    char v133 = *(unsigned char *)(v118 + 8);
    sub_100026CCC(*(void *)v118, v133);
    LOBYTE(v129) = sub_100666714(v132, v133);
    sub_100026DF8(v132, v133);
    if ((v129 & 1) == 0)
    {
      sub_100010218(&qword_1007FD6E0);
      ScaledMetric.wrappedValue.getter();
    }
    uint64_t v134 = type metadata accessor for Font.Design();
    uint64_t v135 = (uint64_t)v244;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 56))(v244, 1, 1, v134);
    static Font.system(size:weight:design:)();
    sub_10001457C(v135, &qword_100800590);
    uint64_t v136 = v243;
    uint64_t v137 = v269;
    View.font(_:)();
    swift_release();
    (*(void (**)(char *, uint64_t))(v249 + 8))(v131, v137);
    uint64_t v138 = v247;
    id v139 = v248;
    View.bold(_:)();
    (*(void (**)(char *, uint64_t))(v246 + 8))(v136, v138);
    uint64_t v140 = *(void *)v118;
    LOBYTE(v138) = *(unsigned char *)(v118 + 8);
    sub_100026CCC(*(void *)v118, v138);
    sub_100666714(v140, v138);
    sub_100026DF8(v140, v138);
    BOOL v142 = v251;
    uint64_t v141 = v252;
    uint64_t v143 = v268;
    View.tracking(_:)();
    (*(void (**)(char *, uint64_t))(v250 + 8))(v139, v141);
    LODWORD(v322) = static HierarchicalShapeStyle.primary.getter();
    uint64_t v332 = v141;
    id v333 = (char *)v143;
    uint64_t v144 = swift_getOpaqueTypeConformance2();
    uint64_t v145 = v254;
    uint64_t v146 = v270;
    View.foregroundStyle<A>(_:)();
    (*(void (**)(char *, uint64_t))(v253 + 8))(v142, v146);
    uint64_t v147 = sub_100014488(&qword_1007FC8A8, &qword_1007FC8A0);
    v342[19] = v144;
    v342[20] = v147;
    uint64_t v148 = v274;
    uint64_t v149 = swift_getWitnessTable();
    uint64_t v150 = v118;
    id v151 = v256;
    View.lineLimit(_:)();
    (*(void (**)(char *, uint64_t))(v255 + 8))(v145, v148);
    uint64_t v152 = sub_100014488(&qword_100800678, &qword_100800680);
    v342[17] = v149;
    v342[18] = v152;
    uint64_t v153 = v277;
    uint64_t v154 = swift_getWitnessTable();
    id v155 = v258;
    View.minimumScaleFactor(_:)();
    NSString v156 = v151;
    uint64_t v157 = v150;
    (*(void (**)(char *, uint64_t))(v257 + 8))(v156, v153);
    double v158 = v261;
    static ContentTransition.numericText(countsDown:)();
    uint64_t v159 = sub_100014488(&qword_100800688, &qword_100800690);
    v342[15] = v154;
    v342[16] = v159;
    uint64_t v160 = v280;
    uint64_t v161 = swift_getWitnessTable();
    sub_10028F784();
    (*(void (**)(char *, uint64_t))(v262 + 8))(v158, v263);
    (*(void (**)(char *, uint64_t))(v259 + 8))(v155, v160);
    uint64_t v162 = *(void *)v150;
    LOBYTE(v160) = *(unsigned char *)(v150 + 8);
    sub_100026CCC(*(void *)v150, v160);
    LOBYTE(v148) = sub_100666714(v162, v160);
    sub_100026DF8(v162, v160);
    uint64_t v163 = v275;
    double v164 = v273;
    uint64_t v165 = v289;
    (*(void (**)(char *, uint64_t, uint64_t))(v275 + 16))(v273, v88, v289);
    if ((v148 & 1) == 0)
    {
      id v166 = &v164[*(int *)(v165 + 56)];
      uint64_t v167 = *(void *)v166;
      char v168 = v166[8];
      sub_100026CCC(*(void *)v166, v168);
      sub_100666714(v167, v168);
      sub_100026DF8(v167, v168);
    }
    (*(void (**)(char *, uint64_t))(v163 + 8))(v164, v165);
    static Alignment.center.getter();
    uint64_t v169 = sub_100014488(&qword_100800698, &qword_100800618);
    v342[13] = v161;
    v342[14] = v169;
    uint64_t v170 = v307;
    uint64_t v171 = swift_getWitnessTable();
    uint64_t v172 = v265;
    id v173 = v284;
    View.frame(width:height:alignment:)();
    (*(void (**)(char *, uint64_t))(v260 + 8))(v173, v170);
    uint64_t v174 = *(void *)v157;
    char v175 = *(unsigned char *)(v157 + 8);
    sub_100026CCC(*(void *)v157, v175);
    sub_100666714(v174, v175);
    sub_100026DF8(v174, v175);
    static Alignment.center.getter();
    v342[11] = v171;
    v342[12] = &protocol witness table for _FrameLayout;
    uint64_t v233 = v308;
    uint64_t v234 = swift_getWitnessTable();
    uint64_t v176 = v271;
    View.frame(minWidth:idealWidth:maxWidth:minHeight:idealHeight:maxHeight:alignment:)();
    (*(void (**)(char *, uint64_t))(v266 + 8))(v172, v233);
    static Edge.Set.bottom.getter();
    uint64_t v177 = *(void *)v157;
    char v178 = *(unsigned char *)(v157 + 8);
    sub_100026CCC(*(void *)v157, v178);
    sub_100666714(v177, v178);
    sub_100026DF8(v177, v178);
    v342[9] = v234;
    v342[10] = &protocol witness table for _FlexFrameLayout;
    id v179 = v309;
    uint64_t v180 = swift_getWitnessTable();
    Swift::String v181 = v276;
    View.padding(_:_:)();
    (*(void (**)(char *, void *))(v272 + 8))(v176, v179);
    LOBYTE(v332) = 1;
    static UnitPoint.center.getter();
    sub_100293AB4();
    v342[7] = v180;
    v342[8] = &protocol witness table for _PaddingLayout;
    uint64_t v182 = v310;
    uint64_t v183 = swift_getWitnessTable();
    sub_100293C68(&qword_100805F68, (void (*)(uint64_t))sub_100293AB4);
    signed int v184 = v279;
    View.matchedGeometryEffect<A>(id:in:properties:anchor:isSource:)();
    (*(void (**)(char *, uint64_t))(v278 + 8))(v181, v182);
    uint64_t v185 = sub_100014488(&qword_100805F70, &qword_100805F18);
    v342[5] = v183;
    v342[6] = v185;
    uint64_t v186 = v286;
    uint64_t v187 = swift_getWitnessTable();
    sub_1000B29EC(v184, v186, v187);
    uint64_t v188 = v282 + 8;
    uint64_t v189 = *(void (**)(char *, uint64_t))(v282 + 8);
    v189(v184, v186);
    uint64_t v190 = v293 + *(int *)(v311 + 36);
    uint64_t v191 = v302;
    uint64_t result = dispatch thunk of static Equatable.== infix(_:_:)();
    if (result)
    {
      uint64_t v308 = v187;
      unint64_t v309 = v189;
      uint64_t v310 = v188;
      uint64_t v192 = (uint64_t)v236;
      ((void (*)(char *, uint64_t, uint64_t))v298)(v236, v190, v191);
      sub_100014488(&qword_100805F78, &qword_100805F20);
      Swift::String v193 = v287;
      AttributedString.subscript.getter();
      sub_10001457C(v192, &qword_100805F20);
      uint64_t v194 = (uint64_t)v281;
      sub_1002926C0((uint64_t)j___sSJ12isWhitespaceSbvg, 0, (uint64_t)v281);
      uint64_t v195 = v292;
      v313(v193, v292);
      v290(v193, v194, v195);
      AttributedString.init(_:)();
      uint64_t v196 = Text.init(_:)();
      uint64_t v198 = v197;
      char v200 = v199;
      uint64_t v201 = *(void *)v157;
      char v202 = *(unsigned char *)(v157 + 8);
      sub_100026CCC(*(void *)v157, v202);
      char v203 = sub_100666714(v201, v202);
      sub_100026DF8(v201, v202);
      if (v203) {
        static Font.title2.getter();
      }
      else {
        static Font.subheadline.getter();
      }
      uint64_t v204 = Text.font(_:)();
      uint64_t v206 = v205;
      char v208 = v207;
      swift_release();
      sub_10002B8D0(v196, v198, v200 & 1);
      swift_bridgeObjectRelease();
      uint64_t v209 = Text.bold()();
      uint64_t v211 = v210;
      uint64_t v311 = v212;
      char v214 = v213 & 1;
      sub_10002B8D0(v204, v206, v208 & 1);
      swift_bridgeObjectRelease();
      uint64_t v315 = *(void *)(v315 + v312);
      LODWORD(v312) = static MatchedGeometryProperties.position.getter();
      static UnitPoint.center.getter();
      uint64_t v216 = v215;
      uint64_t v218 = v217;
      uint64_t v219 = v304;
      uint64_t v332 = v304;
      uint64_t v220 = (uint64_t)v303;
      id v333 = v303;
      char v221 = v300 & 1;
      char v334 = v300 & 1;
      uint64_t v335 = v305;
      char v336 = 0;
      uint64_t v337 = v299;
      int v338 = v242;
      uint64_t v339 = v128;
      uint64_t v340 = v127;
      char v341 = 1;
      v342[0] = &v332;
      id v222 = v235;
      (*(void (**)(char *, char *, uint64_t))(v282 + 16))(v235, v285, v286);
      uint64_t v307 = v209;
      uint64_t v322 = v209;
      uint64_t v306 = v211;
      uint64_t v323 = v211;
      char v324 = v214;
      uint64_t v325 = v311;
      char v326 = 2;
      uint64_t v327 = v315;
      int v328 = v312;
      uint64_t v329 = v216;
      uint64_t v330 = v218;
      char v331 = 1;
      v342[1] = v222;
      v342[2] = &v322;
      sub_1000C04A4(v219, v220, v221);
      swift_bridgeObjectRetain();
      sub_1000C04A4(v209, v211, v214);
      swift_bridgeObjectRetain();
      v321[0] = v240;
      uint64_t v223 = v286;
      v321[1] = v286;
      v321[2] = v240;
      unint64_t v318 = sub_100293B94();
      uint64_t v319 = v308;
      unint64_t v320 = v318;
      uint64_t v224 = (uint64_t)v238;
      sub_1000B2A28((uint64_t)v342, 3uLL, (uint64_t)v321);
      sub_10002B8D0(v322, v323, v324);
      swift_bridgeObjectRelease();
      id v225 = (void (*)(char *, uint64_t))v309;
      ((void (*)(char *, uint64_t))v309)(v222, v223);
      sub_10002B8D0(v332, (uint64_t)v333, v334);
      swift_bridgeObjectRelease();
      uint64_t v226 = v314;
      swift_getWitnessTable();
      uint64_t v227 = v297;
      sub_10028F594(v224, v226);
      uint64_t v228 = v224;
      id v98 = v227;
      (*(void (**)(uint64_t, uint64_t))(v239 + 8))(v228, v226);
      sub_10002B8D0(v307, v306, v214);
      swift_bridgeObjectRelease();
      uint64_t v229 = v292;
      unint64_t v230 = (void (*)(uint64_t, uint64_t))v313;
      v313(v281, v292);
      v225(v285, v223);
      sub_10002B8D0(v304, (uint64_t)v303, v221);
      swift_bridgeObjectRelease();
      v230(v283, v229);
      sub_10001457C(v293, &qword_1007F8EA0);
      goto LABEL_25;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002926C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v47 = a3;
  uint64_t v48 = a2;
  uint64_t v6 = sub_100010218(&qword_1007F8E98);
  __chkstk_darwin(v6);
  uint64_t v44 = (char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v42 = (char *)&v37 - v9;
  uint64_t v45 = sub_100010218(&qword_1007F8EA0);
  __chkstk_darwin(v45);
  uint64_t v43 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v46 = (uint64_t)&v37 - v12;
  uint64_t v13 = type metadata accessor for AttributedString.CharacterView();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100010218(&qword_100805F88);
  uint64_t v18 = v17 - 8;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for AttributedSubstring();
  uint64_t v40 = sub_100293C68(&qword_100805F90, (void (*)(uint64_t))&type metadata accessor for AttributedSubstring);
  uint64_t v41 = v21;
  dispatch thunk of AttributedStringProtocol.characters.getter();
  uint64_t v49 = a1;
  uint64_t v50 = v48;
  sub_100293C68(&qword_1007F8EA8, (void (*)(uint64_t))&type metadata accessor for AttributedString.CharacterView);
  Collection.trimmingPrefix(while:)();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v22 = &v20[*(int *)(v18 + 44)];
  uint64_t v23 = type metadata accessor for AttributedString.Index();
  sub_100293C68(&qword_1007F8EB0, (void (*)(uint64_t))&type metadata accessor for AttributedString.Index);
  uint64_t v24 = (uint64_t)v20;
  uint64_t result = dispatch thunk of static Comparable.<= infix(_:_:)();
  if (result)
  {
    uint64_t v26 = v42;
    uint64_t v38 = &v42[*(int *)(v6 + 48)];
    uint64_t v27 = v38;
    uint64_t v28 = *(void **)(v23 - 8);
    uint64_t v29 = (void (*)(char *, uint64_t, uint64_t))v28[2];
    uint64_t v39 = v24;
    v29(v42, v24, v23);
    v29(v27, (uint64_t)v22, v23);
    uint64_t v30 = v44;
    uint64_t v31 = &v44[*(int *)(v6 + 48)];
    v29(v44, (uint64_t)v26, v23);
    v29(v31, (uint64_t)v27, v23);
    uint64_t v32 = (void (*)(char *, char *, uint64_t))v28[4];
    uint64_t v33 = (uint64_t)v43;
    v32(v43, v30, v23);
    uint64_t v48 = v4;
    uint64_t v34 = (void (*)(char *, uint64_t))v28[1];
    v34(v31, v23);
    uint64_t v35 = &v30[*(int *)(v6 + 48)];
    v32(v30, v26, v23);
    v32(v35, v38, v23);
    v32((char *)(v33 + *(int *)(v45 + 36)), v35, v23);
    v34(v30, v23);
    uint64_t v36 = v46;
    sub_10002C4EC(v33, v46, &qword_1007F8EA0);
    sub_100014488((unint64_t *)&qword_1007FFA38, &qword_1007F8EA0);
    dispatch thunk of AttributedStringProtocol.subscript.getter();
    sub_10001457C(v36, &qword_1007F8EA0);
    return sub_10001457C(v39, &qword_100805F88);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_100292BF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for AttributedSubstring();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AttributedString();
  __n128 v9 = __chkstk_darwin(v8 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, __n128))(v5 + 16))(v7, a1, v4, v9);
  AttributedString.init(_:)();
  uint64_t result = Text.init(_:)();
  *(void *)a2 = result;
  *(void *)(a2 + 8) = v11;
  *(unsigned char *)(a2 + 16) = v12 & 1;
  *(void *)(a2 + 24) = v13;
  return result;
}

uint64_t sub_100292D24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 0);
}

unsigned char *sub_100292D2C(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100292DF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t _s2IDOMa()
{
  return sub_100073C20();
}

uint64_t sub_100292E38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 56);
}

void sub_100292E40()
{
  type metadata accessor for AttributedString();
  if (v0 <= 0x3F)
  {
    sub_1000DA7E0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_100292F3C(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v31 = *a2;
    *a1 = *a2;
    a1 = (void *)(v31 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for AttributedString();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[10];
    *(void *)((char *)a1 + a3[9]) = *(void *)((char *)a2 + a3[9]);
    *(_OWORD *)((char *)a1 + v8) = *(_OWORD *)((char *)a2 + v8);
    uint64_t v9 = a3[11];
    uint64_t v10 = a3[12];
    uint64_t v11 = (void *)((char *)a1 + v9);
    char v12 = (void *)((char *)a2 + v9);
    uint64_t v13 = v12[1];
    *uint64_t v11 = *v12;
    v11[1] = v13;
    uint64_t v14 = (char *)a1 + v10;
    uint64_t v15 = *(void *)((char *)a2 + v10);
    char v16 = *((unsigned char *)a2 + v10 + 8);
    swift_retain();
    sub_100026CCC(v15, v16);
    *(void *)uint64_t v14 = v15;
    v14[8] = v16;
    uint64_t v17 = a3[13];
    uint64_t v18 = (char *)a1 + v17;
    uint64_t v19 = (char *)a2 + v17;
    uint64_t v20 = *(void *)v19;
    char v21 = v19[8];
    sub_100026CCC(*(void *)v19, v21);
    *(void *)uint64_t v18 = v20;
    v18[8] = v21;
    uint64_t v22 = a3[14];
    uint64_t v23 = (char *)a1 + v22;
    uint64_t v24 = (char *)a2 + v22;
    uint64_t v25 = *(void *)v24;
    char v26 = v24[8];
    sub_100026CCC(*(void *)v24, v26);
    *(void *)uint64_t v23 = v25;
    v23[8] = v26;
    uint64_t v27 = a3[15];
    uint64_t v28 = (char *)a1 + v27;
    uint64_t v29 = (char *)a2 + v27;
    uint64_t v30 = sub_100010218(&qword_1007FD6E0);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
    *(void *)((char *)a1 + a3[16]) = *(void *)((char *)a2 + a3[16]);
  }
  return a1;
}

uint64_t sub_1002930FC(uint64_t a1, int *a2)
{
  uint64_t v4 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_release();
  sub_100026DF8(*(void *)(a1 + a2[12]), *(unsigned char *)(a1 + a2[12] + 8));
  sub_100026DF8(*(void *)(a1 + a2[13]), *(unsigned char *)(a1 + a2[13] + 8));
  sub_100026DF8(*(void *)(a1 + a2[14]), *(unsigned char *)(a1 + a2[14] + 8));
  uint64_t v5 = a1 + a2[15];
  uint64_t v6 = sub_100010218(&qword_1007FD6E0);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);

  return v7(v5, v6);
}

uint64_t sub_1002931F4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[11];
  uint64_t v9 = a3[12];
  uint64_t v10 = (void *)(a1 + v8);
  uint64_t v11 = (void *)(a2 + v8);
  uint64_t v12 = v11[1];
  *uint64_t v10 = *v11;
  v10[1] = v12;
  uint64_t v13 = a1 + v9;
  uint64_t v14 = *(void *)(a2 + v9);
  char v15 = *(unsigned char *)(a2 + v9 + 8);
  swift_retain();
  sub_100026CCC(v14, v15);
  *(void *)uint64_t v13 = v14;
  *(unsigned char *)(v13 + 8) = v15;
  uint64_t v16 = a3[13];
  uint64_t v17 = a1 + v16;
  uint64_t v18 = a2 + v16;
  uint64_t v19 = *(void *)v18;
  char v20 = *(unsigned char *)(v18 + 8);
  sub_100026CCC(*(void *)v18, v20);
  *(void *)uint64_t v17 = v19;
  *(unsigned char *)(v17 + 8) = v20;
  uint64_t v21 = a3[14];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)v23;
  char v25 = *(unsigned char *)(v23 + 8);
  sub_100026CCC(*(void *)v23, v25);
  *(void *)uint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = v25;
  uint64_t v26 = a3[15];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_100010218(&qword_1007FD6E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_100293364(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  uint64_t v7 = a3[10];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  uint64_t v10 = a3[11];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  uint64_t v13 = v12[1];
  *uint64_t v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  uint64_t v14 = a3[12];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = *(void *)v16;
  char v18 = *(unsigned char *)(v16 + 8);
  sub_100026CCC(*(void *)v16, v18);
  uint64_t v19 = *(void *)v15;
  char v20 = *(unsigned char *)(v15 + 8);
  *(void *)uint64_t v15 = v17;
  *(unsigned char *)(v15 + 8) = v18;
  sub_100026DF8(v19, v20);
  uint64_t v21 = a3[13];
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = *(void *)v23;
  char v25 = *(unsigned char *)(v23 + 8);
  sub_100026CCC(*(void *)v23, v25);
  uint64_t v26 = *(void *)v22;
  char v27 = *(unsigned char *)(v22 + 8);
  *(void *)uint64_t v22 = v24;
  *(unsigned char *)(v22 + 8) = v25;
  sub_100026DF8(v26, v27);
  uint64_t v28 = a3[14];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = *(void *)v30;
  char v32 = *(unsigned char *)(v30 + 8);
  sub_100026CCC(*(void *)v30, v32);
  uint64_t v33 = *(void *)v29;
  char v34 = *(unsigned char *)(v29 + 8);
  *(void *)uint64_t v29 = v31;
  *(unsigned char *)(v29 + 8) = v32;
  sub_100026DF8(v33, v34);
  uint64_t v35 = a3[15];
  uint64_t v36 = a1 + v35;
  uint64_t v37 = a2 + v35;
  uint64_t v38 = sub_100010218(&qword_1007FD6E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 24))(v36, v37, v38);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_10029351C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(void *)uint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = a3[13];
  uint64_t v12 = a3[14];
  uint64_t v13 = a1 + v11;
  uint64_t v14 = a2 + v11;
  *(void *)uint64_t v13 = *(void *)v14;
  *(unsigned char *)(v13 + 8) = *(unsigned char *)(v14 + 8);
  uint64_t v15 = a1 + v12;
  uint64_t v16 = a2 + v12;
  *(void *)uint64_t v15 = *(void *)v16;
  *(unsigned char *)(v15 + 8) = *(unsigned char *)(v16 + 8);
  uint64_t v17 = a3[15];
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_100010218(&qword_1007FD6E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_100293658(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  swift_release();
  uint64_t v8 = a3[12];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = (uint64_t *)(a2 + v8);
  uint64_t v11 = *v10;
  LOBYTE(v10) = *((unsigned char *)v10 + 8);
  uint64_t v12 = *(void *)v9;
  char v13 = *(unsigned char *)(v9 + 8);
  *(void *)uint64_t v9 = v11;
  *(unsigned char *)(v9 + 8) = (_BYTE)v10;
  sub_100026DF8(v12, v13);
  uint64_t v14 = a3[13];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = (uint64_t *)(a2 + v14);
  uint64_t v17 = *v16;
  LOBYTE(v16) = *((unsigned char *)v16 + 8);
  uint64_t v18 = *(void *)v15;
  char v19 = *(unsigned char *)(v15 + 8);
  *(void *)uint64_t v15 = v17;
  *(unsigned char *)(v15 + 8) = (_BYTE)v16;
  sub_100026DF8(v18, v19);
  uint64_t v20 = a3[14];
  uint64_t v21 = a1 + v20;
  uint64_t v22 = (uint64_t *)(a2 + v20);
  uint64_t v23 = *v22;
  LOBYTE(v22) = *((unsigned char *)v22 + 8);
  uint64_t v24 = *(void *)v21;
  char v25 = *(unsigned char *)(v21 + 8);
  *(void *)uint64_t v21 = v23;
  *(unsigned char *)(v21 + 8) = (_BYTE)v22;
  sub_100026DF8(v24, v25);
  uint64_t v26 = a3[15];
  uint64_t v27 = a1 + v26;
  uint64_t v28 = a2 + v26;
  uint64_t v29 = sub_100010218(&qword_1007FD6E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 40))(v27, v28, v29);
  *(void *)(a1 + a3[16]) = *(void *)(a2 + a3[16]);
  return a1;
}

uint64_t sub_1002937CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002937E0);
}

uint64_t sub_1002937E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for AttributedString();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 44));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_100010218(&qword_1007FD6E0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 60);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_100293910(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100293924);
}

uint64_t sub_100293924(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for AttributedString();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 44)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_100010218(&qword_1007FD6E0);
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 60);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for InsightsXSmallLabel()
{
  return sub_100073C20();
}

uint64_t sub_100293A6C()
{
  return sub_100293C68(&qword_100805F00, (void (*)(uint64_t))sub_100293AB4);
}

void sub_100293AB4()
{
  if (!qword_100805F08)
  {
    unint64_t v0 = _s2IDOMa();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100805F08);
    }
  }
}

uint64_t sub_100293B04()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100293B48@<X0>(uint64_t a1@<X8>)
{
  return sub_100290300(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_100293B60()
{
  return 8;
}

uint64_t sub_100293B6C()
{
  return swift_release();
}

uint64_t sub_100293B74(void *a1, void *a2)
{
  *a2 = *a1;
  return swift_retain();
}

void *sub_100293B88(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

unint64_t sub_100293B94()
{
  unint64_t result = qword_100805F80;
  if (!qword_100805F80)
  {
    sub_100014440(&qword_100805F10);
    sub_100014488(&qword_100805F70, &qword_100805F18);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805F80);
  }
  return result;
}

uint64_t sub_100293C34(void *a1)
{
  return (*(uint64_t (**)(void, void))(v1 + 16))(*a1, a1[1]) & 1;
}

uint64_t sub_100293C68(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100293CB8()
{
  return swift_getWitnessTable();
}

unsigned char *storeEnumTagSinglePayload for JournalSortOrder(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002941ACLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for JournalSortOrder()
{
  return &type metadata for JournalSortOrder;
}

uint64_t sub_1002941E4@<X0>(unsigned char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v8 - 8);
  unint64_t v10 = &v29[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v13 = &v29[-v12];
  __chkstk_darwin(v14);
  uint64_t v16 = &v29[-v15];
  if (qword_1007F6CD8 != -1) {
    swift_once();
  }
  swift_retain();
  AppStorage.wrappedValue.getter();
  swift_release();
  if (v29[15])
  {
    id v17 = [v2 momentDateForSorting];
    if (v17)
    {
      uint64_t v18 = v17;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      char v19 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32);
      v19(v13, v7, v4);
      uint64_t v20 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v20(v13, 0, 1, v4);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v13, 1, v4) != 1) {
        return ((uint64_t (*)(unsigned char *, unsigned char *, uint64_t))v19)(a1, v13, v4);
      }
    }
    else
    {
      uint64_t v20 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
      v20(v13, 1, 1, v4);
    }
    id v25 = [v2 entryDate];
    if (v25)
    {
      uint64_t v26 = v25;
      static Date._unconditionallyBridgeFromObjectiveC(_:)();

      uint64_t v27 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32);
      v27(v10, v7, v4);
      v20(v10, 0, 1, v4);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1)
      {
        v27(a1, v10, v4);
LABEL_18:
        uint64_t v28 = (uint64_t)v13;
        return sub_1000AC7D4(v28);
      }
    }
    else
    {
      v20(v10, 1, 1, v4);
    }
    Date.init()();
    sub_1000AC7D4((uint64_t)v10);
    goto LABEL_18;
  }
  id v22 = [v2 entryDate];
  if (v22)
  {
    uint64_t v23 = v22;
    static Date._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v24 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32);
    v24(v16, v7, v4);
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v5 + 56))(v16, 0, 1, v4);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v5 + 48))(v16, 1, v4) != 1) {
      return ((uint64_t (*)(unsigned char *, unsigned char *, uint64_t))v24)(a1, v16, v4);
    }
  }
  else
  {
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v16, 1, 1, v4);
  }
  Date.init()();
  uint64_t v28 = (uint64_t)v16;
  return sub_1000AC7D4(v28);
}

uint64_t sub_10029462C(char *a1, char *a2)
{
  return sub_10017D174(*a1, *a2);
}

Swift::Int sub_100294638()
{
  return Hasher._finalize()();
}

uint64_t sub_1002946C4()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_10029473C()
{
  return Hasher._finalize()();
}

uint64_t sub_1002947C4@<X0>(Swift::String *a1@<X0>, char *a2@<X8>)
{
  Swift::Int v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100794268, *a1);
  uint64_t result = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *a2 = v5;
  return result;
}

void sub_100294824(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x7461447972746E65;
  if (*v1) {
    uint64_t v2 = 0x6144746E656D6F6DLL;
  }
  unint64_t v3 = 0xE900000000000065;
  if (*v1) {
    unint64_t v3 = 0xEA00000000006574;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_10029486C()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1002948CC()
{
  return RawRepresentable<>.encode(to:)();
}

unint64_t sub_100294920()
{
  unint64_t result = qword_100805FA0;
  if (!qword_100805FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805FA0);
  }
  return result;
}

uint64_t sub_100294974()
{
  sub_1002949D0();
  uint64_t result = AppStorage.init<A>(wrappedValue:_:store:)();
  qword_100805F98 = result;
  return result;
}

unint64_t sub_1002949D0()
{
  unint64_t result = qword_100805FA8;
  if (!qword_100805FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100805FA8);
  }
  return result;
}

void sub_100294A28(void *a1)
{
  uint64_t v2 = v1;
  if (qword_1007F6CE0 != -1) {
    goto LABEL_188;
  }
LABEL_2:
  uint64_t v4 = type metadata accessor for Logger();
  sub_100026A54(v4, (uint64_t)qword_100805FB0);
  swift_bridgeObjectRetain_n();
  char v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.debug.getter();
  uint64_t v104 = a1;
  uint64_t v103 = v2;
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v112 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v8 = Array.description.getter();
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    uint64_t v111 = sub_10011EA98(v8, v10, &v112);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "Applying filters: %s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v112 = (uint64_t)_swiftEmptyArrayStorage;
  if (qword_1007F7080 != -1) {
    swift_once();
  }
  id v11 = (id)static NSPredicate.validEntries;
  specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
  if (*(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
  }
  specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
  specialized Array._endMutation()();
  uint64_t v108 = a1[2];
  if (!v108) {
    goto LABEL_166;
  }
  uint64_t v107 = (char *)(a1 + 4);
  swift_bridgeObjectRetain();
  uint64_t v12 = 0;
  do
  {
    uint64_t v109 = v12;
    uint64_t v13 = &v107[24 * v12];
    int v14 = *v13;
    unint64_t v15 = v13[1];
    uint64_t v17 = *((void *)v13 + 1);
    unint64_t v16 = *((void *)v13 + 2);
    if (v14 == 2)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      unint64_t v110 = v16;
      if (!v17) {
        goto LABEL_130;
      }
    }
    else
    {
      char v18 = v14 & 1;
      sub_1000FBDC8();
      sub_100010218((uint64_t *)&unk_100806070);
      uint64_t v19 = swift_allocObject();
      *(_OWORD *)(v19 + 16) = xmmword_1006D6280;
      *(void *)(v19 + 56) = &type metadata for Bool;
      *(void *)(v19 + 64) = &protocol witness table for Bool;
      *(unsigned char *)(v19 + 32) = v18;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      NSPredicate.init(format:_:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
      unint64_t v110 = v16;
      if (!v17) {
        goto LABEL_130;
      }
    }
    int64_t v20 = *(void *)(v17 + 16);
    if (v20)
    {
      a1 = (void *)v15;
      uint64_t v111 = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_100095B64(0, v20, 0);
      uint64_t v21 = _swiftEmptyArrayStorage;
      id v22 = (unsigned __int8 *)(v17 + 32);
      do
      {
        int v23 = *v22++;
        unint64_t v24 = 0xE500000000000000;
        uint64_t v25 = 0x6F746F6870;
        switch(v23)
        {
          case 1:
            uint64_t v25 = 0x746F68506576696CLL;
            unint64_t v24 = 0xE90000000000006FLL;
            break;
          case 2:
            uint64_t v25 = 0x6F65646976;
            break;
          case 3:
            uint64_t v25 = 0x636973756DLL;
            break;
          case 4:
            unint64_t v24 = 0xE700000000000000;
            uint64_t v25 = 0x74736163646F70;
            break;
          case 5:
            unint64_t v24 = 0xE400000000000000;
            uint64_t v25 = 1802465122;
            break;
          case 6:
            uint64_t v25 = 0x6F69647561;
            break;
          case 7:
            uint64_t v25 = 0x7469736976;
            break;
          case 8:
            uint64_t v25 = 0x6E695069746C756DLL;
            uint64_t v26 = 7364941;
            goto LABEL_42;
          case 9:
            unint64_t v24 = 0xEA00000000007061;
            uint64_t v25 = 0x4D636972656E6567;
            break;
          case 10:
            unint64_t v24 = 0xE400000000000000;
            uint64_t v25 = 1802398060;
            break;
          case 11:
            unint64_t v24 = 0xE700000000000000;
            uint64_t v25 = 0x746361746E6F63;
            break;
          case 12:
            uint64_t v25 = 0x4974756F6B726F77;
            uint64_t v26 = 7237475;
            goto LABEL_42;
          case 13:
            uint64_t v25 = 0x5274756F6B726F77;
            unint64_t v24 = 0xEC0000006574756FLL;
            break;
          case 14:
            uint64_t v25 = 0x697463656C666572;
            unint64_t v24 = 0xEA00000000006E6FLL;
            break;
          case 15:
            uint64_t v25 = 0x4D664F6574617473;
            uint64_t v26 = 6581865;
            goto LABEL_42;
          case 16:
            uint64_t v25 = 0x63416E6F69746F6DLL;
            unint64_t v24 = 0xEE00797469766974;
            break;
          case 17:
            uint64_t v25 = 0x7261506472696874;
            unint64_t v24 = 0xEF616964654D7974;
            break;
          case 18:
            uint64_t v25 = 0x6C6F686563616C70;
            uint64_t v26 = 7497060;
            goto LABEL_42;
          case 19:
            uint64_t v25 = 0x76456B6165727473;
            uint64_t v26 = 7630437;
LABEL_42:
            unint64_t v24 = v26 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000;
            break;
          case 20:
            unint64_t v24 = 0xE700000000000000;
            uint64_t v25 = 0x6E776F6E6B6E75;
            break;
          default:
            break;
        }
        uint64_t v111 = (uint64_t)v21;
        unint64_t v28 = *((void *)v21 + 2);
        unint64_t v27 = *((void *)v21 + 3);
        if (v28 >= v27 >> 1)
        {
          sub_100095B64(v27 > 1, v28 + 1, 1);
          uint64_t v21 = (double *)v111;
        }
        *((void *)v21 + 2) = v28 + 1;
        uint64_t v29 = &v21[2 * v28];
        *((void *)v29 + 4) = v25;
        *((void *)v29 + 5) = v24;
        --v20;
      }
      while (v20);
      unint64_t v16 = v110;
      LOBYTE(v15) = (_BYTE)a1;
    }
    else
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = _swiftEmptyArrayStorage;
    }
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1006D6D00;
    sub_1000FBDC8();
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1006D6280;
    *(void *)(v31 + 56) = sub_100010218(&qword_100800A70);
    *(void *)(v31 + 64) = sub_100296D6C(&qword_1007FFB90, &qword_100800A70);
    *(void *)(v31 + 32) = v21;
    *(void *)(v30 + 32) = NSPredicate.init(format:_:)();
    uint64_t v111 = v30;
    specialized Array._endMutation()();
    if (qword_1007F6CE8 == -1)
    {
      uint64_t v32 = *(void *)(v17 + 16);
      if (!v32) {
        goto LABEL_126;
      }
    }
    else
    {
      swift_once();
      uint64_t v32 = *(void *)(v17 + 16);
      if (!v32)
      {
LABEL_126:
        swift_bridgeObjectRelease();
        goto LABEL_127;
      }
    }
    char v106 = v15;
    uint64_t v33 = qword_10083D250;
    uint64_t v34 = *(void *)(qword_10083D250 + 16);
    uint64_t v35 = v17 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v36 = 0;
    uint64_t v105 = v32;
LABEL_52:
    if (!v34) {
      goto LABEL_51;
    }
    uint64_t v37 = *(unsigned __int8 *)(v35 + v36);
    swift_bridgeObjectRetain();
    uint64_t v38 = 0;
    while (2)
    {
      uint64_t v39 = v33 + v38++;
      unint64_t v40 = 0xE500000000000000;
      uint64_t v41 = 0x6F746F6870;
      switch(*(unsigned char *)(v39 + 32))
      {
        case 1:
          uint64_t v41 = 0x746F68506576696CLL;
          unint64_t v40 = 0xE90000000000006FLL;
          break;
        case 2:
          uint64_t v41 = 0x6F65646976;
          break;
        case 3:
          uint64_t v41 = 0x636973756DLL;
          break;
        case 4:
          unint64_t v40 = 0xE700000000000000;
          uint64_t v41 = 0x74736163646F70;
          break;
        case 5:
          unint64_t v40 = 0xE400000000000000;
          uint64_t v41 = 1802465122;
          break;
        case 6:
          uint64_t v41 = 0x6F69647561;
          break;
        case 7:
          uint64_t v41 = 0x7469736976;
          break;
        case 8:
          uint64_t v41 = 0x6E695069746C756DLL;
          unint64_t v40 = 0xEB0000000070614DLL;
          break;
        case 9:
          unint64_t v40 = 0xEA00000000007061;
          uint64_t v41 = 0x4D636972656E6567;
          break;
        case 0xA:
          unint64_t v40 = 0xE400000000000000;
          uint64_t v41 = 1802398060;
          break;
        case 0xB:
          unint64_t v40 = 0xE700000000000000;
          uint64_t v41 = 0x746361746E6F63;
          break;
        case 0xC:
          uint64_t v41 = 0x4974756F6B726F77;
          unint64_t v40 = 0xEB000000006E6F63;
          break;
        case 0xD:
          uint64_t v41 = 0x5274756F6B726F77;
          unint64_t v40 = 0xEC0000006574756FLL;
          break;
        case 0xE:
          uint64_t v41 = 0x697463656C666572;
          unint64_t v40 = 0xEA00000000006E6FLL;
          break;
        case 0xF:
          uint64_t v41 = 0x4D664F6574617473;
          unint64_t v40 = 0xEB00000000646E69;
          break;
        case 0x10:
          uint64_t v41 = 0x63416E6F69746F6DLL;
          unint64_t v40 = 0xEE00797469766974;
          break;
        case 0x11:
          uint64_t v41 = 0x7261506472696874;
          unint64_t v40 = 0xEF616964654D7974;
          break;
        case 0x12:
          uint64_t v41 = 0x6C6F686563616C70;
          unint64_t v40 = 0xEB00000000726564;
          break;
        case 0x13:
          uint64_t v41 = 0x76456B6165727473;
          unint64_t v40 = 0xEB00000000746E65;
          break;
        case 0x14:
          unint64_t v40 = 0xE700000000000000;
          uint64_t v41 = 0x6E776F6E6B6E75;
          break;
        default:
          break;
      }
      a1 = (void *)0xE500000000000000;
      uint64_t v42 = 0x6F746F6870;
      switch(v37)
      {
        case 1:
          a1 = (void *)0xE90000000000006FLL;
          if (v41 == 0x746F68506576696CLL) {
            goto LABEL_112;
          }
          goto LABEL_113;
        case 2:
          uint64_t v43 = 1701079414;
          goto LABEL_87;
        case 3:
          if (v41 != 0x636973756DLL) {
            goto LABEL_113;
          }
          goto LABEL_112;
        case 4:
          a1 = (void *)0xE700000000000000;
          uint64_t v44 = 0x736163646F70;
          goto LABEL_97;
        case 5:
          a1 = (void *)0xE400000000000000;
          if (v41 != 1802465122) {
            goto LABEL_113;
          }
          goto LABEL_112;
        case 6:
          uint64_t v43 = 1768191329;
LABEL_87:
          if (v41 != (v43 & 0xFFFF0000FFFFFFFFLL | 0x6F00000000)) {
            goto LABEL_113;
          }
          goto LABEL_112;
        case 7:
          if (v41 != 0x7469736976) {
            goto LABEL_113;
          }
          goto LABEL_112;
        case 8:
          uint64_t v45 = 0x6E695069746C756DLL;
          uint64_t v46 = 7364941;
          goto LABEL_108;
        case 9:
          a1 = (void *)0xEA00000000007061;
          if (v41 != 0x4D636972656E6567) {
            goto LABEL_113;
          }
          goto LABEL_112;
        case 10:
          a1 = (void *)0xE400000000000000;
          if (v41 != 1802398060) {
            goto LABEL_113;
          }
          goto LABEL_112;
        case 11:
          a1 = (void *)0xE700000000000000;
          uint64_t v44 = 0x6361746E6F63;
LABEL_97:
          if (v41 != (v44 & 0xFFFFFFFFFFFFLL | 0x74000000000000)) {
            goto LABEL_113;
          }
          goto LABEL_112;
        case 12:
          uint64_t v45 = 0x4974756F6B726F77;
          uint64_t v46 = 7237475;
          goto LABEL_108;
        case 13:
          a1 = (void *)0xEC0000006574756FLL;
          if (v41 != 0x5274756F6B726F77) {
            goto LABEL_113;
          }
          goto LABEL_112;
        case 14:
          a1 = (void *)0xEA00000000006E6FLL;
          if (v41 != 0x697463656C666572) {
            goto LABEL_113;
          }
          goto LABEL_112;
        case 15:
          uint64_t v45 = 0x4D664F6574617473;
          uint64_t v46 = 6581865;
          goto LABEL_108;
        case 16:
          a1 = (void *)0xEE00797469766974;
          if (v41 != 0x63416E6F69746F6DLL) {
            goto LABEL_113;
          }
          goto LABEL_112;
        case 17:
          a1 = (void *)0xEF616964654D7974;
          if (v41 != 0x7261506472696874) {
            goto LABEL_113;
          }
          goto LABEL_112;
        case 18:
          uint64_t v45 = 0x6C6F686563616C70;
          uint64_t v46 = 7497060;
LABEL_108:
          a1 = (void *)(v46 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000);
          if (v41 != v45) {
            goto LABEL_113;
          }
          goto LABEL_112;
        case 19:
          uint64_t v42 = 0x76456B6165727473;
          a1 = (void *)0xEB00000000746E65;
          goto LABEL_111;
        case 20:
          a1 = (void *)0xE700000000000000;
          if (v41 != 0x6E776F6E6B6E75) {
            goto LABEL_113;
          }
          goto LABEL_112;
        default:
LABEL_111:
          if (v41 != v42) {
            goto LABEL_113;
          }
LABEL_112:
          if ((void *)v40 == a1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_119:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            _sSo11NSPredicateC7JournalE24entryContainsMediaAssetsABvgZ_0();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            unint64_t v16 = v110;
            LOBYTE(v15) = v106;
            if (*(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            _sSo11NSPredicateC7JournalE23entryContainsMediaLinksABvgZ_0();
            specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
            if (*(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
              specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
            }
            specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
            specialized Array._endMutation()();
            goto LABEL_127;
          }
LABEL_113:
          char v47 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v47) {
            goto LABEL_119;
          }
          if (v34 != v38) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v35 = v17 + 32;
          uint64_t v32 = v105;
LABEL_51:
          if (++v36 != v32) {
            goto LABEL_52;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          unint64_t v16 = v110;
          LOBYTE(v15) = v106;
LABEL_127:
          Class isa = Array._bridgeToObjectiveC()().super.isa;
          swift_bridgeObjectRelease();
          id v49 = [self orPredicateWithSubpredicates:isa];

          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
          break;
      }
      break;
    }
LABEL_130:
    if (v15)
    {
      sub_1000FBDC8();
      NSPredicate.init(format:_:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    if (!v16)
    {
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    swift_bridgeObjectRelease();
    uint64_t v111 = (uint64_t)_swiftEmptyArrayStorage;
    if (!(v16 >> 62))
    {
      uint64_t v2 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v2) {
        goto LABEL_137;
      }
      goto LABEL_161;
    }
    swift_bridgeObjectRetain();
    uint64_t v2 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v2)
    {
LABEL_137:
      type metadata accessor for JournalEntryMO();
      uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      if (v2 >= 1)
      {
        uint64_t v51 = (void *)ObjCClassFromMetadata;
        uint64_t v52 = 0;
        unint64_t v53 = v16 & 0xC000000000000001;
        while (1)
        {
          id v54 = v53 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v16 + 8 * v52 + 32);
          uint64_t v55 = v54;
          id v56 = [v54 entityName];
          uint64_t v57 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v59 = v58;

          id v60 = [v51 entityName];
          uint64_t v61 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          uint64_t v63 = v62;

          if (v61 == v57 && v63 == v59) {
            break;
          }
          char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
          swift_bridgeObjectRelease();
          if (v65) {
            goto LABEL_151;
          }
          type metadata accessor for JournalEntryAssetMO();
          id v66 = [(id)swift_getObjCClassFromMetadata() entityName];
          uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
          a1 = v68;

          if (v67 == v57 && a1 == v59)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            char v69 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v69 & 1) == 0) {
              goto LABEL_154;
            }
          }
          a1 = v55;
          specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
          if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
          }
LABEL_153:
          specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
          specialized Array._endMutation()();
LABEL_154:
          ++v52;

          unint64_t v16 = v110;
          if (v2 == v52)
          {
            swift_bridgeObjectRelease();
            uint64_t v70 = (double *)v111;
            goto LABEL_162;
          }
        }
        swift_bridgeObjectRelease();
LABEL_151:
        swift_bridgeObjectRelease();
        a1 = v55;
        specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
        if (*(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v111 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
        }
        goto LABEL_153;
      }
      __break(1u);
LABEL_188:
      swift_once();
      goto LABEL_2;
    }
LABEL_161:
    swift_bridgeObjectRelease();
    uint64_t v70 = _swiftEmptyArrayStorage;
LABEL_162:
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v71 = swift_allocObject();
    *(_OWORD *)(v71 + 16) = xmmword_1006D6D10;
    sub_1000FBDC8();
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v72 = swift_allocObject();
    *(_OWORD *)(v72 + 16) = xmmword_1006D6280;
    uint64_t v73 = sub_100010218(&qword_1007FAE58);
    *(void *)(v72 + 56) = v73;
    uint64_t v74 = sub_100296D6C(&qword_100805FC8, &qword_1007FAE58);
    *(void *)(v72 + 64) = v74;
    *(void *)(v72 + 32) = v70;
    *(void *)(v71 + 32) = NSPredicate.init(format:_:)();
    uint64_t v75 = swift_allocObject();
    *(_OWORD *)(v75 + 16) = xmmword_1006D6280;
    *(void *)(v75 + 56) = v73;
    *(void *)(v75 + 64) = v74;
    *(void *)(v75 + 32) = _swiftEmptyArrayStorage;
    *(void *)(v71 + 40) = NSPredicate.init(format:_:)();
    specialized Array._endMutation()();
    Class v76 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v77 = [self orPredicateWithSubpredicates:v76];

    specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
    if (*(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v112 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
    }
    specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
    specialized Array._endMutation()();
LABEL_12:
    uint64_t v12 = v109 + 1;
  }
  while (v109 + 1 != v108);
  swift_bridgeObjectRelease();
LABEL_166:
  sub_1000FBDC8();
  Class v78 = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  id v79 = [self andPredicateWithSubpredicates:v78];

  [self deleteCacheWithName:0];
  uint64_t v80 = v79;
  uint64_t v81 = Logger.logObject.getter();
  os_log_type_t v82 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v81, v82))
  {
    uint64_t v83 = (uint8_t *)swift_slowAlloc();
    uint64_t v84 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v83 = 138412290;
    uint64_t v111 = (uint64_t)v80;
    uint64_t v85 = v80;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v84 = v80;

    _os_log_impl((void *)&_mh_execute_header, v81, v82, "Applying filter fetchRequest.predicate: %@", v83, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v81 = v80;
  }

  uint64_t v86 = OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController;
  uint64_t v87 = *(void **)(v103 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_fetchedResultsController);
  if (v87)
  {
    id v88 = [v87 fetchRequest];
    [v88 setPredicate:v80];
  }
  uint64_t v89 = OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_currentFilters;
  *(void *)(v103 + OBJC_IVAR____TtCC7Journal10Journaling18EntryListViewModel_currentFilters) = v104;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v90 = *(void **)(v103 + v86);
  if (!v90) {
    goto LABEL_174;
  }
  uint64_t v111 = 0;
  if ([v90 performFetch:&v111])
  {
    id v91 = (id)v111;
LABEL_174:
    swift_retain_n();
    uint64_t v92 = Logger.logObject.getter();
    os_log_type_t v93 = static os_log_type_t.debug.getter();
    if (!os_log_type_enabled(v92, v93))
    {

      swift_release_n();
      return;
    }
    uint64_t v94 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v94 = 134217984;
    char v95 = *(void **)(v103 + v86);
    if (v95)
    {
      id v96 = [v95 fetchedObjects];
      if (v96)
      {
        type metadata accessor for JournalEntryMO();
        unint64_t v97 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

        if (v97 >> 62)
        {
          swift_bridgeObjectRetain();
          id v96 = (id)_CocoaArrayWrapper.endIndex.getter();
          swift_release();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          id v96 = *(id *)((v97 & 0xFFFFFFFFFFFFFF8) + 0x10);
          swift_release();
          swift_bridgeObjectRelease();
        }
      }
      else
      {
        swift_release();
      }
    }
    else
    {
      swift_release();
      id v96 = 0;
    }
    uint64_t v111 = (uint64_t)v96;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_release();
    _os_log_impl((void *)&_mh_execute_header, v92, v93, "Filter result count: %ld", v94, 0xCu);
    swift_slowDealloc();

    goto LABEL_186;
  }
  id v98 = (id)v111;
  _convertNSErrorToError(_:)();

  swift_willThrow();
  *(void *)(v103 + v89) = 0;
  swift_bridgeObjectRelease();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v92 = Logger.logObject.getter();
  os_log_type_t v99 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v92, v99))
  {
    uint64_t v100 = (uint8_t *)swift_slowAlloc();
    uint64_t v101 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v100 = 138412290;
    swift_errorRetain();
    uint64_t v102 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v111 = v102;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v101 = v102;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v92, v99, "Apply filter fetch error: %@", v100, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    return;
  }

  swift_errorRelease();
  swift_errorRelease();
  swift_errorRelease();
LABEL_186:
}

uint64_t sub_1002963C0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100805FB0);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100805FB0);
  if (qword_1007F7D80 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EC80);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_10029648C()
{
  qword_10083D250 = (uint64_t)&off_100793950;
}

uint64_t _sSo11NSPredicateC7JournalE23entryContainsMediaLinksABvgZ_0()
{
  sub_100095B64(0, 4, 0);
  unint64_t v1 = _swiftEmptyArrayStorage[2];
  unint64_t v0 = _swiftEmptyArrayStorage[3];
  unint64_t v2 = v1 + 1;
  if (v1 >= v0 >> 1) {
    sub_100095B64(v0 > 1, v1 + 1, 1);
  }
  _swiftEmptyArrayStorage[2] = v2;
  unint64_t v3 = &_swiftEmptyArrayStorage[2 * v1];
  v3[4] = 0x636973756DLL;
  v3[5] = 0xE500000000000000;
  unint64_t v4 = _swiftEmptyArrayStorage[3];
  int64_t v5 = v1 + 2;
  if (v2 >= v4 >> 1) {
    sub_100095B64(v4 > 1, v5, 1);
  }
  _swiftEmptyArrayStorage[2] = v5;
  os_log_type_t v6 = &_swiftEmptyArrayStorage[2 * v2];
  v6[4] = 0x74736163646F70;
  v6[5] = 0xE700000000000000;
  unint64_t v8 = _swiftEmptyArrayStorage[2];
  unint64_t v7 = _swiftEmptyArrayStorage[3];
  unint64_t v9 = v8 + 1;
  if (v8 >= v7 >> 1) {
    sub_100095B64(v7 > 1, v8 + 1, 1);
  }
  _swiftEmptyArrayStorage[2] = v9;
  unint64_t v10 = &_swiftEmptyArrayStorage[2 * v8];
  v10[4] = 1802465122;
  v10[5] = 0xE400000000000000;
  unint64_t v11 = _swiftEmptyArrayStorage[3];
  int64_t v12 = v8 + 2;
  if (v9 >= v11 >> 1) {
    sub_100095B64(v11 > 1, v12, 1);
  }
  _swiftEmptyArrayStorage[2] = v12;
  uint64_t v13 = &_swiftEmptyArrayStorage[2 * v9];
  v13[4] = 0xD000000000000010;
  v13[5] = 0x80000001006856C0;
  sub_1000FBDC8();
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1006D6280;
  *(void *)(v14 + 56) = sub_100010218(&qword_100800A70);
  *(void *)(v14 + 64) = sub_100296D6C(&qword_1007FFB90, &qword_100800A70);
  *(void *)(v14 + 32) = _swiftEmptyArrayStorage;
  return NSPredicate.init(format:_:)();
}

uint64_t _sSo11NSPredicateC7JournalE24entryContainsMediaAssetsABvgZ_0()
{
  if (qword_1007F6CE8 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_10083D250;
  int64_t v1 = *(void *)(qword_10083D250 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    sub_100095B64(0, v1, 0);
    uint64_t v2 = 0;
    do
    {
      unint64_t v3 = 0xE500000000000000;
      uint64_t v4 = 0x6F746F6870;
      switch(*(unsigned char *)(v0 + v2 + 32))
      {
        case 1:
          unint64_t v3 = 0xE90000000000006FLL;
          uint64_t v4 = 0x746F68506576696CLL;
          break;
        case 2:
          uint64_t v4 = 0x6F65646976;
          break;
        case 3:
          uint64_t v4 = 0x636973756DLL;
          break;
        case 4:
          unint64_t v3 = 0xE700000000000000;
          uint64_t v4 = 0x74736163646F70;
          break;
        case 5:
          unint64_t v3 = 0xE400000000000000;
          uint64_t v4 = 1802465122;
          break;
        case 6:
          uint64_t v4 = 0x6F69647561;
          break;
        case 7:
          uint64_t v4 = 0x7469736976;
          break;
        case 8:
          unint64_t v3 = 0xEB0000000070614DLL;
          uint64_t v4 = 0x6E695069746C756DLL;
          break;
        case 9:
          unint64_t v3 = 0xEA00000000007061;
          uint64_t v4 = 0x4D636972656E6567;
          break;
        case 0xA:
          unint64_t v3 = 0xE400000000000000;
          uint64_t v4 = 1802398060;
          break;
        case 0xB:
          unint64_t v3 = 0xE700000000000000;
          uint64_t v4 = 0x746361746E6F63;
          break;
        case 0xC:
          unint64_t v3 = 0xEB000000006E6F63;
          uint64_t v4 = 0x4974756F6B726F77;
          break;
        case 0xD:
          unint64_t v3 = 0xEC0000006574756FLL;
          uint64_t v4 = 0x5274756F6B726F77;
          break;
        case 0xE:
          uint64_t v4 = 0x697463656C666572;
          unint64_t v3 = 0xEA00000000006E6FLL;
          break;
        case 0xF:
          unint64_t v3 = 0xEB00000000646E69;
          uint64_t v4 = 0x4D664F6574617473;
          break;
        case 0x10:
          unint64_t v3 = 0xEE00797469766974;
          uint64_t v4 = 0x63416E6F69746F6DLL;
          break;
        case 0x11:
          unint64_t v3 = 0xEF616964654D7974;
          uint64_t v4 = 0x7261506472696874;
          break;
        case 0x12:
          unint64_t v3 = 0xEB00000000726564;
          uint64_t v4 = 0x6C6F686563616C70;
          break;
        case 0x13:
          unint64_t v3 = 0xEB00000000746E65;
          uint64_t v4 = 0x76456B6165727473;
          break;
        case 0x14:
          unint64_t v3 = 0xE700000000000000;
          uint64_t v4 = 0x6E776F6E6B6E75;
          break;
        default:
          break;
      }
      double v6 = _swiftEmptyArrayStorage[2];
      double v5 = _swiftEmptyArrayStorage[3];
      if (*(void *)&v6 >= *(void *)&v5 >> 1) {
        sub_100095B64(*(void *)&v5 > 1uLL, *(void *)&v6 + 1, 1);
      }
      ++v2;
      *(void *)&_swiftEmptyArrayStorage[2] = *(void *)&v6 + 1;
      unint64_t v7 = &_swiftEmptyArrayStorage[2 * *(void *)&v6];
      *((void *)v7 + 4) = v4;
      *((void *)v7 + 5) = v3;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  sub_1000FBDC8();
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1006D6280;
  *(void *)(v8 + 56) = sub_100010218(&qword_100800A70);
  *(void *)(v8 + 64) = sub_100296D6C(&qword_1007FFB90, &qword_100800A70);
  *(void *)(v8 + 32) = _swiftEmptyArrayStorage;
  return NSPredicate.init(format:_:)();
}

uint64_t sub_100296D6C(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100014440(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100296DBC()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100805FD0);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100805FD0);
  if (qword_1007F7D20 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB60);
  unint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_100296E84(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_10017CA88(*a1, *a2);
}

Swift::Int sub_100296E90()
{
  return Hasher._finalize()();
}

uint64_t sub_100296F18()
{
  String.hash(into:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100296F8C()
{
  return Hasher._finalize()();
}

unint64_t sub_100297010@<X0>(Swift::String *a1@<X0>, unsigned char *a2@<X8>)
{
  unint64_t result = sub_1002A3D98(*a1);
  *a2 = result;
  return result;
}

void sub_100297040(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE200000000000000;
  unint64_t v4 = 0xE200000000000000;
  uint64_t v5 = 13174;
  if (v2 != 1)
  {
    uint64_t v5 = 0x726568746FLL;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 12918;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_100297084()
{
  return 0;
}

uint64_t sub_100297090(uint64_t a1)
{
  uint64_t v138 = a1;
  uint64_t v2 = type metadata accessor for UUID();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v139 = v2;
  uint64_t v140 = v3;
  __chkstk_darwin(v2);
  uint64_t v135 = &v128[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v137 = &v128[-v6];
  uint64_t v7 = type metadata accessor for URL();
  uint64_t v133 = *(void *)(v7 - 8);
  uint64_t v134 = (char *)v7;
  __chkstk_darwin(v7);
  id v131 = &v128[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v132 = (void *)type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v9 = *(v132 - 1);
  __chkstk_darwin(v132);
  unint64_t v11 = &v128[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v12);
  uint64_t v13 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = &v1[OBJC_IVAR____TtC7Journal13CoreDataStack_sessionID];
  unint64_t v15 = v1;
  uint64_t v136 = v14;
  UUID.init()();
  uint64_t v16 = OBJC_IVAR____TtC7Journal13CoreDataStack_throttleSubject;
  sub_100010218(&qword_100803900);
  swift_allocObject();
  *(void *)&v15[v16] = PassthroughSubject.init()();
  *(void *)&v15[OBJC_IVAR____TtC7Journal13CoreDataStack_throttleSaveSubscription] = 0;
  id v130 = (char *)OBJC_IVAR____TtC7Journal13CoreDataStack_throttleDispatchQueue;
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  static DispatchQoS.background.getter();
  uint64_t v146 = &_swiftEmptyArrayStorage;
  sub_1002A48E0((unint64_t *)&unk_100804D90, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100010218((uint64_t *)&unk_100803980);
  sub_10011AE0C(&qword_100804DA0, (uint64_t *)&unk_100803980);
  uint64_t v17 = v133;
  uint64_t v18 = (uint64_t)v15;
  uint64_t v19 = v131;
  uint64_t v20 = v138;
  dispatch thunk of SetAlgebra.init<A>(_:)();
  (*(void (**)(unsigned char *, void, void *))(v9 + 104))(v11, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v132);
  uint64_t v21 = v134;
  *(void *)&v130[v18] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  *(void *)(v18 + OBJC_IVAR____TtC7Journal13CoreDataStack_unDeletedObjectsIDs) = &_swiftEmptySetSingleton;
  id v22 = (uint64_t (**)())(v18 + OBJC_IVAR____TtC7Journal13CoreDataStack_syncEngineMetadataToSave);
  *id v22 = sub_100297084;
  v22[1] = 0;
  *(unsigned char *)(v18 + OBJC_IVAR____TtC7Journal13CoreDataStack_persistentStoresLoadSuccess) = 0;
  int v23 = (void *)(v18 + OBJC_IVAR____TtC7Journal13CoreDataStack_persistentStoreLoadedSuccessfully);
  *int v23 = 0;
  v23[1] = 0;
  *(void *)(v18 + OBJC_IVAR____TtC7Journal13CoreDataStack_spotlightDelegate) = 0;
  *(void *)(v18 + OBJC_IVAR____TtC7Journal13CoreDataStack_remoteChangeObservationTask) = 0;
  *(void *)(v18 + OBJC_IVAR____TtC7Journal13CoreDataStack_persistentStoreLoadingError) = 0;
  sub_1000B1B34();
  id v24 = objc_allocWithZone((Class)NSManagedObjectModel);
  URL._bridgeToObjectiveC()(v25);
  unint64_t v27 = v26;
  id v28 = [v24 initWithContentsOfURL:v26];

  uint64_t v29 = *(char **)(v17 + 8);
  ((void (*)(unsigned char *, char *))v29)(v19, v21);
  if (!v28) {
    goto LABEL_33;
  }
  uint64_t v30 = *(void **)(v20 + 56);
  *(void *)(v18 + OBJC_IVAR____TtC7Journal13CoreDataStack_storeFileProtectionType) = v30;
  id v31 = v30;
  id v32 = [v28 versionIdentifiers];
  uint64_t v33 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  sub_1003F1F08(v33, (uint64_t)&v146);
  swift_bridgeObjectRelease();
  if (v148)
  {
    int v34 = swift_dynamicCast();
    uint64_t v35 = v139;
    uint64_t v36 = v135;
    if (v34)
    {
      uint64_t v37 = v141;
      unint64_t v38 = v142;
      goto LABEL_7;
    }
  }
  else
  {
    sub_10001457C((uint64_t)&v146, (uint64_t *)&unk_100806110);
    uint64_t v35 = v139;
    uint64_t v36 = v135;
  }
  uint64_t v37 = 0;
  unint64_t v38 = 0xE000000000000000;
LABEL_7:
  unint64_t v39 = v38;
  unint64_t v40 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100791250, *(Swift::String *)&v37);
  swift_bridgeObjectRelease();
  if (v40 >= 3) {
    char v41 = 2;
  }
  else {
    char v41 = v40;
  }
  *(unsigned char *)(v18 + OBJC_IVAR____TtC7Journal13CoreDataStack_modelVersion) = v41;
  id v42 = objc_allocWithZone((Class)NSPersistentContainer);
  swift_bridgeObjectRetain();
  uint64_t v43 = v28;
  NSString v44 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v45 = [v42 initWithName:v44 managedObjectModel:v43];

  uint64_t v132 = v43;
  uint64_t v133 = OBJC_IVAR____TtC7Journal13CoreDataStack_container;
  *(void *)(v18 + OBJC_IVAR____TtC7Journal13CoreDataStack_container) = v45;
  id v46 = sub_1002983D8(v20);
  *(void *)(v18 + OBJC_IVAR____TtC7Journal13CoreDataStack_storeDescription) = v46;
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  char v47 = (_OWORD *)swift_allocObject();
  v47[1] = xmmword_1006D6D00;
  *((void *)v47 + 4) = v46;
  uint64_t v146 = v47;
  specialized Array._endMutation()();
  uint64_t v48 = sub_10001B284(0, &qword_100806120);
  id v49 = v45;
  id v50 = v46;
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v49 setPersistentStoreDescriptions:isa];

  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v140 + 16);
  unint64_t v53 = v137;
  v52(v137, v136, v35);
  if (qword_1007F6CF0 != -1) {
    swift_once();
  }
  uint64_t v54 = type metadata accessor for Logger();
  uint64_t v55 = sub_100026A54(v54, (uint64_t)qword_100805FD0);
  v52(v36, v53, v35);
  id v56 = (char *)(id)v18;
  uint64_t v135 = (unsigned char *)v55;
  uint64_t v57 = Logger.logObject.getter();
  os_log_type_t v58 = static os_log_type_t.default.getter();
  int v59 = v58;
  BOOL v60 = os_log_type_enabled(v57, v58);
  uint64_t v134 = (char *)v48;
  if (v60)
  {
    uint64_t v61 = swift_slowAlloc();
    id v130 = (char *)swift_slowAlloc();
    uint64_t v146 = v130;
    *(_DWORD *)uint64_t v61 = 136446466;
    sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    int v129 = v59;
    uint64_t v62 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v141 = sub_10011EA98(v62, v63, (uint64_t *)&v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    id v131 = *(unsigned char **)(v140 + 8);
    ((void (*)(char *, uint64_t))v131)(v36, v35);
    *(_WORD *)(v61 + 12) = 2080;
    uint64_t v64 = v133;
    id v65 = [*(id *)(v18 + v133) name];
    id v66 = (unsigned char *)v18;
    uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v69 = v68;

    uint64_t v70 = v67;
    uint64_t v18 = (uint64_t)v66;
    uint64_t v141 = sub_10011EA98(v70, v69, (uint64_t *)&v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v71 = v64;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v57, (os_log_type_t)v129, "%{public}s -> CoreDataStack init for container %s", (uint8_t *)v61, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    id v131 = *(unsigned char **)(v140 + 8);
    ((void (*)(char *, uint64_t))v131)(v36, v35);

    uint64_t v71 = v133;
  }
  id v72 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:1];
  uint64_t v73 = OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate;
  *(void *)&v56[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate] = v72;
  uint64_t v74 = *(void **)(v18 + v71);
  id v75 = v72;
  id v76 = [v74 viewContext];
  id v77 = [v76 persistentStoreCoordinator];

  [v75 setPersistentStoreCoordinator:v77];
  Class v78 = *(void **)&v56[v73];
  [v78 setAutomaticallyMergesChangesFromParent:1];
  id v79 = (objc_class *)type metadata accessor for JurassicMergePolicy();
  id v80 = objc_allocWithZone(v79);
  id v81 = v78;
  os_log_type_t v82 = v80;
  UUID.init()();
  v82[OBJC_IVAR____TtC7Journal19JurassicMergePolicy_mode] = 0;

  v145.receiver = v82;
  v145.super_class = v79;
  id v83 = [super initWithMergeType:2];
  [v81 setMergePolicy:v83];

  uint64_t v133 = v18;
  id v84 = [*(id *)(v18 + v71) viewContext];
  *(void *)&v56[OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain] = v84;
  [v84 setAutomaticallyMergesChangesFromParent:1];
  id v85 = objc_allocWithZone(v79);
  id v86 = v84;
  uint64_t v87 = v85;
  UUID.init()();
  v87[OBJC_IVAR____TtC7Journal19JurassicMergePolicy_mode] = 1;

  v144.receiver = v87;
  v144.super_class = v79;
  id v88 = [super initWithMergeType:1];
  [v86 setMergePolicy:v88];

  uint64_t v89 = v56;
  uint64_t v90 = Logger.logObject.getter();
  os_log_type_t v91 = static os_log_type_t.default.getter();
  uint64_t v92 = &selRef_setDeliversTouchesForGesturesToSuperview_;
  if (os_log_type_enabled(v90, v91))
  {
    uint64_t v93 = swift_slowAlloc();
    id v130 = (char *)swift_slowAlloc();
    uint64_t v146 = v130;
    *(_DWORD *)uint64_t v93 = 136446466;
    sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v94 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v141 = sub_10011EA98(v94, v95, (uint64_t *)&v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v93 + 12) = 2080;
    id v96 = [*(id *)(v133 + v71) persistentStoreDescriptions];
    static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v97 = Array.description.getter();
    unint64_t v99 = v98;
    uint64_t v19 = (unsigned char *)v139;
    swift_bridgeObjectRelease();
    uint64_t v141 = sub_10011EA98(v97, v99, (uint64_t *)&v146);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    uint64_t v92 = &selRef_setDeliversTouchesForGesturesToSuperview_;
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v90, v91, "%{public}s SQLite PATH: %s", (uint8_t *)v93, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v19 = (unsigned char *)v139;
  }
  uint64_t v100 = (objc_class *)type metadata accessor for CoreDataStack();
  v143.receiver = v89;
  v143.super_class = v100;
  uint64_t v21 = (char *)[v143 init];
  sub_100298890();
  uint64_t v29 = (char *)OBJC_IVAR____TtC7Journal13CoreDataStack_container;
  id v101 = [*(id *)&v21[OBJC_IVAR____TtC7Journal13CoreDataStack_container] v92[242]];
  unint64_t v102 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v102 >> 62))
  {
    if (*(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_20;
    }
LABEL_29:
    swift_bridgeObjectRelease();
    uint64_t v146 = 0;
    unint64_t v147 = 0xE000000000000000;
    _StringGuts.grow(_:)(34);
    sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v118 = (void *)dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v120 = v119;

    swift_bridgeObjectRelease();
    uint64_t v146 = v118;
    unint64_t v147 = v120;
    v121._uint64_t countAndFlagsBits = 0xD000000000000020;
    v121._object = (void *)0x8000000100695AF0;
    String.append(_:)(v121);
    uint64_t v122 = (uint64_t)v146;
    unint64_t v123 = v147;
    swift_bridgeObjectRetain_n();
    uint64_t v124 = Logger.logObject.getter();
    os_log_type_t v125 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v124, v125))
    {
      uint64_t v126 = (uint8_t *)swift_slowAlloc();
      uint64_t v146 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v126 = 136315138;
      swift_bridgeObjectRetain();
      uint64_t v141 = sub_10011EA98(v122, v123, (uint64_t *)&v146);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v124, v125, "%s", v126, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    goto LABEL_35;
  }
  swift_bridgeObjectRetain();
  uint64_t v117 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v117) {
    goto LABEL_29;
  }
LABEL_20:
  if ((v102 & 0xC000000000000001) != 0)
  {
    id v103 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_23;
  }
  if (!*(void *)((v102 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
LABEL_33:
    uint64_t v146 = 0;
    unint64_t v147 = 0xE000000000000000;
    _StringGuts.grow(_:)(35);
    swift_bridgeObjectRelease();
    uint64_t v146 = (void *)0xD000000000000021;
    unint64_t v147 = 0x8000000100695AC0;
    sub_1000B1B34();
    sub_1002A48E0((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
    v127._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
    String.append(_:)(v127);
    swift_bridgeObjectRelease();
    ((void (*)(unsigned char *, char *))v29)(v19, v21);
LABEL_35:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  id v103 = *(id *)(v102 + 32);
LABEL_23:
  uint64_t v104 = v103;
  swift_bridgeObjectRelease();
  [v104 setShouldMigrateStoreAutomatically:1];
  [v104 setShouldInferMappingModelAutomatically:1];
  if (qword_1007F6C30 != -1) {
    swift_once();
  }
  uint64_t v105 = *(void **)&v29[(void)v21];
  id v106 = *(id *)&v21[OBJC_IVAR____TtC7Journal13CoreDataStack_storeDescription];
  id v107 = [v105 persistentStoreCoordinator];
  id v108 = [objc_allocWithZone((Class)type metadata accessor for JournalCoreDataSpotlightDelegate()) initForStoreWithDescription:v106 coordinator:v107];

  uint64_t v109 = OBJC_IVAR____TtC7Journal13CoreDataStack_spotlightDelegate;
  unint64_t v110 = *(void **)&v21[OBJC_IVAR____TtC7Journal13CoreDataStack_spotlightDelegate];
  *(void *)&v21[OBJC_IVAR____TtC7Journal13CoreDataStack_spotlightDelegate] = v108;

  uint64_t v111 = *(void **)&v21[v109];
  if (v111) {
    [v111 startSpotlightIndexing];
  }
  uint64_t v112 = self;
  id v113 = [v112 defaultCenter];
  [v113 addObserver:v21 selector:"persistentStoreRemoteChangeWithNotification:" name:NSPersistentStoreRemoteChangeNotification object:0];

  id v114 = [v112 defaultCenter];
  [v114 addObserver:v21 selector:"contextObjectsDidChangeWithNotification:" name:NSManagedObjectContextObjectsDidChangeNotification object:0];

  id v115 = [v112 defaultCenter];
  [v115 addObserver:v21 selector:"contextWillSaveWithNotification:" name:NSManagedObjectContextWillSaveNotification object:0];

  swift_release();
  ((void (*)(char *, unsigned char *))v131)(v137, v19);
  return (uint64_t)v21;
}

id sub_1002983D8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(unsigned char *)(a1 + 48) == 1) {
    URL.init(fileURLWithPath:)();
  }
  else {
    sub_1000B1C94();
  }
  id v6 = objc_allocWithZone((Class)NSPersistentStoreDescription);
  URL._bridgeToObjectiveC()(v7);
  uint64_t v9 = v8;
  id v10 = [v6 initWithURL:v8];

  [v10 setShouldInferMappingModelAutomatically:1];
  [v10 setShouldMigrateStoreAutomatically:1];
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  NSString v11 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v10 setOption:v11 forKey:NSPersistentStoreFileProtectionKey];

  sub_10001B284(0, (unint64_t *)&qword_1007FEB30);
  Class isa = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
  [v10 setOption:isa forKey:NSPersistentHistoryTrackingKey];

  Class v13 = NSNumber.init(BOOLeanLiteral:)(1).super.super.isa;
  [v10 setOption:v13 forKey:NSPersistentStoreRemoteChangeNotificationPostOptionKey];

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v10;
}

id sub_1002985F8()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  if (*(void *)&v0[OBJC_IVAR____TtC7Journal13CoreDataStack_remoteChangeObservationTask])
  {
    swift_retain();
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    Task.cancel()();
    swift_release();
  }
  v3.receiver = v0;
  v3.super_class = (Class)type metadata accessor for CoreDataStack();
  return [super dealloc];
}

uint64_t sub_10029883C()
{
  return type metadata accessor for CoreDataStack();
}

uint64_t type metadata accessor for CoreDataStack()
{
  uint64_t result = qword_100806020;
  if (!qword_100806020) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_100298890()
{
  id v1 = v0;
  uint64_t v2 = type metadata accessor for Date();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&aBlock[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&aBlock[-1] - v7;
  uint64_t v9 = OBJC_IVAR____TtC7Journal13CoreDataStack_persistentStoresLoadSuccess;
  if (v1[OBJC_IVAR____TtC7Journal13CoreDataStack_persistentStoresLoadSuccess])
  {
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v10 = type metadata accessor for Logger();
    sub_100026A54(v10, (uint64_t)qword_100805FD0);
    id v32 = v1;
    NSString v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446466;
      type metadata accessor for UUID();
      sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v34 = sub_10011EA98(v14, v15, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 1024;
      int v16 = v1[v9];

      LODWORD(v34) = v16;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s (loadPersistentStores)  persistentStoresLoadSuccess: %{BOOL}d", (uint8_t *)v13, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
  }
  else
  {
    id v17 = [self sharedApplication];
    unsigned int v18 = [v17 isProtectedDataAvailable];

    if (v18)
    {
      Date.init()();
      uint64_t v19 = *(void **)&v1[OBJC_IVAR____TtC7Journal13CoreDataStack_container];
      (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v5, v8, v2);
      unint64_t v20 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v1;
      (*(void (**)(unint64_t, char *, uint64_t))(v3 + 32))(v21 + v20, v5, v2);
      aBlock[4] = (uint64_t)sub_1002A4CD8;
      void aBlock[5] = v21;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_10029A390;
      aBlock[3] = (uint64_t)&unk_1007A2D78;
      id v22 = _Block_copy(aBlock);
      int v23 = v1;
      swift_release();
      [v19 loadPersistentStoresWithCompletionHandler:v22];
      _Block_release(v22);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      return;
    }
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_100026A54(v24, (uint64_t)qword_100805FD0);
    id v32 = v1;
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v25, v26))
    {
      unint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)unint64_t v27 = 136446210;
      aBlock[0] = v28;
      type metadata accessor for UUID();
      sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v29 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v34 = sub_10011EA98(v29, v30, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "%{public}s (loadPersistentStores) protected data is not available to load persistent stores", v27, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
  }
  id v31 = v32;
}

void sub_100298ECC(uint64_t a1, uint64_t a2, char *a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v107 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&a3[OBJC_IVAR____TtC7Journal13CoreDataStack_persistentStoreLoadingError] = a2;
  swift_errorRetain();
  swift_errorRelease();
  if (a2)
  {
    id v109 = (id)_convertErrorToNSError(_:)();
    id v11 = [v109 domain];
    uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v14 = v13;

    id v15 = [v109 code];
    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v12 && v16 == v14)
    {
      swift_bridgeObjectRelease();
      if (v15 == (id)640)
      {
LABEL_8:
        if (qword_1007F6CF0 != -1) {
          swift_once();
        }
        uint64_t v19 = type metadata accessor for Logger();
        sub_100026A54(v19, (uint64_t)qword_100805FD0);
        id v108 = a3;
        unint64_t v20 = Logger.logObject.getter();
        os_log_type_t v21 = static os_log_type_t.error.getter();
        if (os_log_type_enabled(v20, v21))
        {
          id v22 = (uint8_t *)swift_slowAlloc();
          uint64_t v23 = swift_slowAlloc();
          *(_DWORD *)id v22 = 136446210;
          uint64_t v110 = v23;
          type metadata accessor for UUID();
          sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
          double v112 = COERCE_DOUBLE(sub_10011EA98(v24, v25, &v110));
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          _os_log_impl((void *)&_mh_execute_header, v20, v21, "%{public}s (loadPersistentStores) File write out of space error", v22, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
LABEL_65:
          swift_slowDealloc();

          goto LABEL_66;
        }
        swift_bridgeObjectRelease();

        char v41 = v108;
        goto LABEL_74;
      }
    }
    else
    {
      char v18 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v18 & 1) != 0 && v15 == (id)640) {
        goto LABEL_8;
      }
    }
    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v12 && v35 == v14)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v42 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v42 & 1) == 0) {
        goto LABEL_32;
      }
    }
    if (v15 == (id)134110)
    {
      if (qword_1007F6CF0 != -1) {
        swift_once();
      }
      uint64_t v43 = type metadata accessor for Logger();
      sub_100026A54(v43, (uint64_t)qword_100805FD0);
      NSString v44 = a3;
      id v45 = v109;
      id v46 = v44;
      id v109 = v45;
      unint64_t v20 = Logger.logObject.getter();
      os_log_type_t v47 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v47))
      {
        uint64_t v48 = swift_slowAlloc();
        id v49 = (void *)swift_slowAlloc();
        uint64_t v110 = swift_slowAlloc();
        *(_DWORD *)uint64_t v48 = 136446466;
        type metadata accessor for UUID();
        sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v50 = dispatch thunk of CustomStringConvertible.description.getter();
        double v112 = COERCE_DOUBLE(sub_10011EA98(v50, v51, &v110));
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v48 + 12) = 2112;
        double v112 = *(double *)&v109;
        id v52 = v109;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        *id v49 = v109;

        _os_log_impl((void *)&_mh_execute_header, v20, v47, "%{public}s (loadPersistentStores) Migration error: %@", (uint8_t *)v48, 0x16u);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

LABEL_66:
        swift_bridgeObjectRelease();

        return;
      }
      swift_bridgeObjectRelease();

      goto LABEL_73;
    }
LABEL_32:
    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v12 && v53 == v14)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v74 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v74 & 1) == 0) {
        goto LABEL_53;
      }
    }
    if (v15 == (id)134100)
    {
      if (qword_1007F6CF0 != -1) {
        swift_once();
      }
      uint64_t v75 = type metadata accessor for Logger();
      sub_100026A54(v75, (uint64_t)qword_100805FD0);
      id v76 = a3;
      unint64_t v20 = Logger.logObject.getter();
      os_log_type_t v77 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v77))
      {
        Class v78 = (uint8_t *)swift_slowAlloc();
        uint64_t v79 = swift_slowAlloc();
        *(_DWORD *)Class v78 = 136446210;
        uint64_t v110 = v79;
        type metadata accessor for UUID();
        sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v80 = dispatch thunk of CustomStringConvertible.description.getter();
        double v112 = COERCE_DOUBLE(sub_10011EA98(v80, v81, &v110));
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        os_log_type_t v82 = "%{public}s (loadPersistentStores) Incompatible version hash error";
LABEL_64:
        _os_log_impl((void *)&_mh_execute_header, v20, v77, v82, v78, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        goto LABEL_65;
      }
      goto LABEL_67;
    }
LABEL_53:
    if (static String._unconditionallyBridgeFromObjectiveC(_:)() == v12 && v83 == v14)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v84 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v84 & 1) == 0) {
        goto LABEL_68;
      }
    }
    if (v15 == (id)260)
    {
      if (qword_1007F6CF0 != -1) {
        swift_once();
      }
      uint64_t v85 = type metadata accessor for Logger();
      sub_100026A54(v85, (uint64_t)qword_100805FD0);
      id v76 = a3;
      unint64_t v20 = Logger.logObject.getter();
      os_log_type_t v77 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v20, v77))
      {
        Class v78 = (uint8_t *)swift_slowAlloc();
        uint64_t v86 = swift_slowAlloc();
        *(_DWORD *)Class v78 = 136446210;
        uint64_t v110 = v86;
        type metadata accessor for UUID();
        sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v87 = dispatch thunk of CustomStringConvertible.description.getter();
        double v112 = COERCE_DOUBLE(sub_10011EA98(v87, v88, &v110));
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        os_log_type_t v82 = "%{public}s (loadPersistentStores) Parent directory does not exist or write permission is disallowed";
        goto LABEL_64;
      }
LABEL_67:
      swift_bridgeObjectRelease();

LABEL_73:
      char v41 = (char *)v109;
LABEL_74:

      return;
    }
LABEL_68:
    swift_bridgeObjectRelease();
    uint64_t v110 = 0;
    unint64_t v111 = 0xE000000000000000;
    _StringGuts.grow(_:)(49);
    type metadata accessor for UUID();
    sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v89 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v91 = v90;
    swift_bridgeObjectRelease();
    uint64_t v110 = v89;
    unint64_t v111 = v91;
    v92._object = (void *)0x8000000100695A30;
    v92._uint64_t countAndFlagsBits = 0xD000000000000029;
    String.append(_:)(v92);
    id v93 = [v109 description];
    uint64_t v94 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    id v96 = v95;

    v97._uint64_t countAndFlagsBits = v94;
    v97._object = v96;
    String.append(_:)(v97);
    swift_bridgeObjectRelease();
    v98._uint64_t countAndFlagsBits = 8236;
    v98._object = (void *)0xE200000000000000;
    String.append(_:)(v98);
    id v99 = [v109 userInfo];
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    v100._uint64_t countAndFlagsBits = Dictionary.description.getter();
    String.append(_:)(v100);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v102 = v110;
    unint64_t v101 = v111;
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v103 = type metadata accessor for Logger();
    sub_100026A54(v103, (uint64_t)qword_100805FD0);
    swift_bridgeObjectRetain();
    uint64_t v104 = Logger.logObject.getter();
    os_log_type_t v105 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v104, v105))
    {
      id v106 = (uint8_t *)swift_slowAlloc();
      uint64_t v110 = swift_slowAlloc();
      *(_DWORD *)id v106 = 136315138;
      swift_bridgeObjectRetain();
      double v112 = COERCE_DOUBLE(sub_10011EA98(v102, v101, &v110));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v104, v105, "%s", v106, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }

    swift_bridgeObjectRelease_n();
    goto LABEL_73;
  }
  if (qword_1007F6CF0 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  sub_100026A54(v26, (uint64_t)qword_100805FD0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a4, v7);
  unint64_t v27 = a3;
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  int v30 = v29;
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v31 = swift_slowAlloc();
    id v109 = (id)swift_slowAlloc();
    uint64_t v110 = (uint64_t)v109;
    *(_DWORD *)uint64_t v31 = 136446466;
    uint64_t v107 = v31 + 4;
    type metadata accessor for UUID();
    LODWORD(v108) = v30;
    sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v32 = dispatch thunk of CustomStringConvertible.description.getter();
    double v112 = COERCE_DOUBLE(sub_10011EA98(v32, v33, &v110));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v31 + 12) = 2048;
    Date.timeIntervalSinceNow.getter();
    double v112 = -v34;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    _os_log_impl((void *)&_mh_execute_header, v28, (os_log_type_t)v108, "%{public}s(loadPersistentStores) container.loadPersistentStores completed in %f seconds.", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }

  v27[OBJC_IVAR____TtC7Journal13CoreDataStack_persistentStoresLoadSuccess] = 1;
  id v36 = [*(id *)&v27[OBJC_IVAR____TtC7Journal13CoreDataStack_container] viewContext];
  id v37 = [v36 persistentStoreCoordinator];

  if (v37)
  {
    id v38 = [v37 persistentStores];

    sub_10001B284(0, &qword_1008038C0);
    unint64_t v39 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v39 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v40 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v40 = *(void *)((v39 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v40 = 0;
  }
  uint64_t v54 = v27;
  uint64_t v55 = Logger.logObject.getter();
  os_log_type_t v56 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v55, v56))
  {
    uint64_t v57 = swift_slowAlloc();
    uint64_t v110 = swift_slowAlloc();
    *(_DWORD *)uint64_t v57 = 136446466;
    type metadata accessor for UUID();
    sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v58 = dispatch thunk of CustomStringConvertible.description.getter();
    double v112 = COERCE_DOUBLE(sub_10011EA98(v58, v59, &v110));
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v57 + 12) = 2048;
    double v112 = *(double *)&v40;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v55, v56, "%{public}s(loadPersistentStores) persistentStoresCount:%ld", (uint8_t *)v57, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  BOOL v60 = *(void (**)(void))&v54[OBJC_IVAR____TtC7Journal13CoreDataStack_persistentStoreLoadedSuccessfully];
  if (v60)
  {
    uint64_t v61 = v54;
    sub_1001A2550((uint64_t)v60);
    uint64_t v62 = Logger.logObject.getter();
    os_log_type_t v63 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = (uint8_t *)swift_slowAlloc();
      id v109 = (id)swift_slowAlloc();
      uint64_t v110 = (uint64_t)v109;
      *(_DWORD *)uint64_t v64 = 136446210;
      id v108 = (char *)(v64 + 4);
      type metadata accessor for UUID();
      sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v65 = dispatch thunk of CustomStringConvertible.description.getter();
      double v112 = COERCE_DOUBLE(sub_10011EA98(v65, v66, &v110));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v62, v63, "%{public}s(loadPersistentStores) calling persistentStoreLoadedSuccessfully", v64, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    v60();
    sub_10001ABB8((uint64_t)v60);
  }
  else
  {
    uint64_t v67 = v54;
    unint64_t v68 = Logger.logObject.getter();
    os_log_type_t v69 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = (uint8_t *)swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      *(_DWORD *)uint64_t v70 = 136446210;
      uint64_t v110 = v71;
      type metadata accessor for UUID();
      sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v72 = dispatch thunk of CustomStringConvertible.description.getter();
      double v112 = COERCE_DOUBLE(sub_10011EA98(v72, v73, &v110));
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v68, v69, "%{public}s(loadPersistentStores) persistentStoreLoadedSuccessfully is nil", v70, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
  sub_1002A1DF4();
}

void sub_10029A390(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, a3);
  swift_release();
}

void sub_10029A41C(void *a1)
{
  uint64_t v2 = v1;
  id v4 = [a1 userInfo];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    if ([a1 object])
    {
      _bridgeAnyObjectToAny(_:)();
      swift_unknownObjectRelease();
    }
    else
    {
      long long v73 = 0u;
      long long v74 = 0u;
    }
    sub_10002C4EC((uint64_t)&v73, (uint64_t)&v70, &qword_1007FAD50);
    if (v71)
    {
      sub_10001B284(0, (unint64_t *)&unk_100806100);
      if (swift_dynamicCast())
      {
        uint64_t countAndFlagsBits = (void *)v72._countAndFlagsBits;
        v72._uint64_t countAndFlagsBits = 0;
        v72._object = (void *)0xE000000000000000;
        if (countAndFlagsBits == *(void **)&v2[OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain])
        {
          v70._uint64_t countAndFlagsBits = 0;
          v70._object = (void *)0xE000000000000000;
          _StringGuts.grow(_:)(54);
          v36._object = (void *)0x80000001006959B0;
          v36._uint64_t countAndFlagsBits = 0xD000000000000034;
          String.append(_:)(v36);
          id v23 = countAndFlagsBits;
          id v24 = [v23 description];
        }
        else
        {
          if (countAndFlagsBits != *(void **)&v2[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate])
          {
LABEL_27:
            uint64_t v67 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            AnyHashable.init<A>(_:)();
            if (*(void *)(v6 + 16) && (unint64_t v42 = sub_10001B738((uint64_t)&v70), (v43 & 1) != 0))
            {
              sub_10001B648(*(void *)(v6 + 56) + 32 * v42, (uint64_t)&v73);
            }
            else
            {
              long long v73 = 0u;
              long long v74 = 0u;
            }
            sub_10001DF0C((uint64_t)&v70);
            if (*((void *)&v74 + 1))
            {
              sub_100010218(&qword_1007FB910);
              if (swift_dynamicCast())
              {
                if ((v67 & 0xC000000000000001) != 0)
                {
                  if (__CocoaSet.count.getter() > 0)
                  {
                    v70._uint64_t countAndFlagsBits = 10272;
                    v70._object = (void *)0xE200000000000000;
                    uint64_t v44 = __CocoaSet.count.getter();
LABEL_39:
                    swift_bridgeObjectRelease();
                    *(void *)&long long v73 = v44;
                    v45._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
                    String.append(_:)(v45);
                    swift_bridgeObjectRelease();
                    v46._uint64_t countAndFlagsBits = 0x73747265736E6920;
                    v46._object = (void *)0xE900000000000029;
                    String.append(_:)(v46);
                    String.append(_:)(v70);
                  }
                }
                else
                {
                  uint64_t v44 = *(void *)(v67 + 16);
                  if (v44)
                  {
                    v70._uint64_t countAndFlagsBits = 10272;
                    v70._object = (void *)0xE200000000000000;
                    goto LABEL_39;
                  }
                }
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              sub_10001457C((uint64_t)&v73, &qword_1007FAD50);
            }
            uint64_t v68 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            AnyHashable.init<A>(_:)();
            if (*(void *)(v6 + 16) && (unint64_t v47 = sub_10001B738((uint64_t)&v70), (v48 & 1) != 0))
            {
              sub_10001B648(*(void *)(v6 + 56) + 32 * v47, (uint64_t)&v73);
            }
            else
            {
              long long v73 = 0u;
              long long v74 = 0u;
            }
            sub_10001DF0C((uint64_t)&v70);
            if (*((void *)&v74 + 1))
            {
              sub_100010218(&qword_1007FB910);
              if (swift_dynamicCast())
              {
                if ((v68 & 0xC000000000000001) != 0)
                {
                  if (__CocoaSet.count.getter() > 0)
                  {
                    v70._uint64_t countAndFlagsBits = 10272;
                    v70._object = (void *)0xE200000000000000;
                    uint64_t v49 = __CocoaSet.count.getter();
LABEL_53:
                    swift_bridgeObjectRelease();
                    *(void *)&long long v73 = v49;
                    v50._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
                    String.append(_:)(v50);
                    swift_bridgeObjectRelease();
                    v51._uint64_t countAndFlagsBits = 0x7365746164707520;
                    v51._object = (void *)0xE900000000000029;
                    String.append(_:)(v51);
                    String.append(_:)(v70);
                  }
                }
                else
                {
                  uint64_t v49 = *(void *)(v68 + 16);
                  if (v49)
                  {
                    v70._uint64_t countAndFlagsBits = 10272;
                    v70._object = (void *)0xE200000000000000;
                    goto LABEL_53;
                  }
                }
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              sub_10001457C((uint64_t)&v73, &qword_1007FAD50);
            }
            uint64_t v69 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            AnyHashable.init<A>(_:)();
            if (*(void *)(v6 + 16) && (unint64_t v52 = sub_10001B738((uint64_t)&v70), (v53 & 1) != 0))
            {
              sub_10001B648(*(void *)(v6 + 56) + 32 * v52, (uint64_t)&v73);
            }
            else
            {
              long long v73 = 0u;
              long long v74 = 0u;
            }
            swift_bridgeObjectRelease();
            sub_10001DF0C((uint64_t)&v70);
            if (*((void *)&v74 + 1))
            {
              sub_100010218(&qword_1007FB910);
              if (swift_dynamicCast())
              {
                if ((v69 & 0xC000000000000001) != 0)
                {
                  if (__CocoaSet.count.getter() > 0)
                  {
                    v70._uint64_t countAndFlagsBits = 10272;
                    v70._object = (void *)0xE200000000000000;
                    uint64_t v54 = __CocoaSet.count.getter();
LABEL_67:
                    swift_bridgeObjectRelease();
                    *(void *)&long long v73 = v54;
                    v55._uint64_t countAndFlagsBits = dispatch thunk of CustomStringConvertible.description.getter();
                    String.append(_:)(v55);
                    swift_bridgeObjectRelease();
                    v56._uint64_t countAndFlagsBits = 0x736574656C656420;
                    v56._object = (void *)0xE900000000000029;
                    String.append(_:)(v56);
                    String.append(_:)(v70);
                  }
                }
                else
                {
                  uint64_t v54 = *(void *)(v69 + 16);
                  if (v54)
                  {
                    v70._uint64_t countAndFlagsBits = 10272;
                    v70._object = (void *)0xE200000000000000;
                    goto LABEL_67;
                  }
                }
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              sub_10001457C((uint64_t)&v73, &qword_1007FAD50);
            }
            if (qword_1007F6CF0 != -1) {
              swift_once();
            }
            uint64_t v57 = type metadata accessor for Logger();
            sub_100026A54(v57, (uint64_t)qword_100805FD0);
            uint64_t v59 = v72._countAndFlagsBits;
            object = v72._object;
            BOOL v60 = v2;
            swift_bridgeObjectRetain();
            uint64_t v61 = Logger.logObject.getter();
            os_log_type_t v62 = static os_log_type_t.debug.getter();
            if (os_log_type_enabled(v61, v62))
            {
              uint64_t v63 = swift_slowAlloc();
              v70._uint64_t countAndFlagsBits = swift_slowAlloc();
              *(_DWORD *)uint64_t v63 = 136446466;
              type metadata accessor for UUID();
              sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
              uint64_t v64 = dispatch thunk of CustomStringConvertible.description.getter();
              *(void *)&long long v73 = sub_10011EA98(v64, v65, &v70._countAndFlagsBits);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();

              swift_bridgeObjectRelease();
              *(_WORD *)(v63 + 12) = 2080;
              swift_bridgeObjectRetain();
              *(void *)&long long v73 = sub_10011EA98(v59, (unint64_t)object, &v70._countAndFlagsBits);
              UnsafeMutableRawBufferPointer.copyMemory(from:)();
              swift_bridgeObjectRelease_n();
              _os_log_impl((void *)&_mh_execute_header, v61, v62, "%{public}s %s", (uint8_t *)v63, 0x16u);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_bridgeObjectRelease_n();
            }
            return;
          }
          v70._uint64_t countAndFlagsBits = 0;
          v70._object = (void *)0xE000000000000000;
          _StringGuts.grow(_:)(57);
          v22._uint64_t countAndFlagsBits = 0xD000000000000037;
          v22._object = (void *)0x8000000100695970;
          String.append(_:)(v22);
          id v23 = countAndFlagsBits;
          id v24 = [v23 description];
        }
        id v37 = v24;
        uint64_t v38 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v40 = v39;

        v41._uint64_t countAndFlagsBits = v38;
        v41._object = v40;
        String.append(_:)(v41);

        swift_bridgeObjectRelease();
        Swift::String v72 = v70;
        goto LABEL_27;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_10001457C((uint64_t)&v70, &qword_1007FAD50);
    }
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v25 = type metadata accessor for Logger();
    sub_100026A54(v25, (uint64_t)qword_100805FD0);
    uint64_t v26 = v2;
    id v27 = a1;
    uint64_t v28 = v26;
    id v29 = v27;
    id v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v11, v12))
    {

      return;
    }
    uint64_t v13 = swift_slowAlloc();
    v70._uint64_t countAndFlagsBits = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    type metadata accessor for UUID();
    sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v30 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&long long v73 = sub_10011EA98(v30, v31, &v70._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    id v32 = [v29 debugDescription];
    uint64_t v33 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v35 = v34;

    *(void *)&long long v73 = sub_10011EA98(v33, v35, &v70._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    unint64_t v20 = "%{public}s Unable to get sender in contextObjectsDidChange, notification:%s";
LABEL_20:
    _os_log_impl((void *)&_mh_execute_header, v11, v12, v20, (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    return;
  }
  if (qword_1007F6CF0 != -1) {
    swift_once();
  }
  uint64_t v7 = type metadata accessor for Logger();
  sub_100026A54(v7, (uint64_t)qword_100805FD0);
  uint64_t v8 = v2;
  id v9 = a1;
  unint64_t v66 = v8;
  id v10 = v9;
  id v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    v70._uint64_t countAndFlagsBits = swift_slowAlloc();
    *(_DWORD *)uint64_t v13 = 136446466;
    type metadata accessor for UUID();
    sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&long long v73 = sub_10011EA98(v14, v15, &v70._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    id v16 = [v10 debugDescription];
    uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v19 = v18;

    *(void *)&long long v73 = sub_10011EA98(v17, v19, &v70._countAndFlagsBits);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    unint64_t v20 = "%{public}s Unable to get userInfo in contextObjectsDidChange, notification:%s";
    goto LABEL_20;
  }
}

void sub_10029B1F0(void *a1)
{
}

void sub_10029B274(void *a1)
{
}

void sub_10029B290(void *a1, const char *a2, const char *a3, const char *a4)
{
  if ([a1 object])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v42, 0, sizeof(v42));
  }
  sub_10002C4EC((uint64_t)v42, (uint64_t)v43, &qword_1007FAD50);
  if (!v43[3])
  {
    sub_10001457C((uint64_t)v43, &qword_1007FAD50);
    goto LABEL_13;
  }
  sub_10001B284(0, (unint64_t *)&unk_100806100);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_13:
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v20 = type metadata accessor for Logger();
    sub_100026A54(v20, (uint64_t)qword_100805FD0);
    os_log_type_t v21 = v4;
    id v22 = a1;
    id v23 = v21;
    id v24 = v22;
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      v43[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v27 = 136446466;
      type metadata accessor for UUID();
      sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&v42[0] = sub_10011EA98(v28, v29, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      id v30 = [v24 debugDescription];
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v33 = v32;

      *(void *)&v42[0] = sub_10011EA98(v31, v33, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v25, v26, a4, (uint8_t *)v27, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return;
  }
  if (v41 == *(void **)&v4[OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain])
  {
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v34 = type metadata accessor for Logger();
    sub_100026A54(v34, (uint64_t)qword_100805FD0);
    unint64_t v35 = v4;
    id v11 = Logger.logObject.getter();
    os_log_type_t v36 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v36))
    {
      uint64_t v13 = swift_slowAlloc();
      id v37 = (void *)swift_slowAlloc();
      v43[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446466;
      type metadata accessor for UUID();
      sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v38 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&v42[0] = sub_10011EA98(v38, v39, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2112;
      *(void *)&v42[0] = v41;
      id v40 = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *id v37 = v41;

      uint64_t v17 = v11;
      os_log_type_t v18 = v36;
      unint64_t v19 = a2;
      goto LABEL_22;
    }
  }
  else if (v41 == *(void **)&v4[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate])
  {
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100026A54(v9, (uint64_t)qword_100805FD0);
    id v10 = v4;
    id v11 = Logger.logObject.getter();
    os_log_type_t v12 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = (void *)swift_slowAlloc();
      v43[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v13 = 136446466;
      type metadata accessor for UUID();
      sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&v42[0] = sub_10011EA98(v15, v16, v43);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2112;
      *(void *)&v42[0] = v41;
      id v40 = v41;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v14 = v41;

      uint64_t v17 = v11;
      os_log_type_t v18 = v12;
      unint64_t v19 = a3;
LABEL_22:
      _os_log_impl((void *)&_mh_execute_header, v17, v18, v19, (uint8_t *)v13, 0x16u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
  }
}

id sub_10029BA60(void *a1)
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v3 = &static Journaling.EntryViewModel.currentAppVersion;
  uint64_t v4 = qword_10083D2F8;
  [*(id *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_lockIsProtectedDataAvailable) lock];
  if (*(unsigned char *)(v4 + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) == 1)
  {
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v5 = type metadata accessor for Logger();
    sub_100026A54(v5, (uint64_t)qword_100805FD0);
    id v6 = v1;
    id v7 = a1;
    uint64_t v8 = (char *)v6;
    id v9 = v7;
    id v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.debug.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 138412802;
      aBlock[0] = v9;
      id v14 = v9;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(void *)uint64_t v13 = v9;

      *(_WORD *)(v12 + 12) = 2112;
      aBlock[0] = *(id *)&v8[OBJC_IVAR____TtC7Journal13CoreDataStack_contextMain];
      id v15 = aBlock[0];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(id *)(v13 + 8) = aBlock[0];

      *(_WORD *)(v12 + 22) = 2112;
      aBlock[0] = *(id *)&v8[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate];
      id v16 = aBlock[0];
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *(id *)(v13 + 16) = aBlock[0];
      uint64_t v3 = &static Journaling.EntryViewModel.currentAppVersion;

      _os_log_impl((void *)&_mh_execute_header, v10, v11, "(saveData) CoreDataStack.contextDidSave context saved:%@ contextMain: %@ contextPrivate: %@", (uint8_t *)v12, 0x20u);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    uint64_t v25 = swift_allocObject();
    *(void *)(v25 + 16) = v9;
    *(void *)(v25 + 24) = v8;
    os_log_type_t v26 = (void *)swift_allocObject();
    v26[2] = sub_1002A4BD4;
    v26[3] = v25;
    aBlock[4] = sub_10001B3DC;
    void aBlock[5] = v26;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_1003F44E4;
    aBlock[3] = &unk_1007A2D28;
    uint64_t v27 = _Block_copy(aBlock);
    uint64_t v28 = v8;
    id v29 = v9;
    swift_retain();
    swift_release();
    [v29 performBlockAndWait:v27];
    _Block_release(v27);
    LOBYTE(v29) = swift_isEscapingClosureAtFileLocation();
    id result = (id)swift_release();
    if (v29)
    {
      __break(1u);
    }
    else
    {
      [*(id *)(*((void *)v3 + 95) + OBJC_IVAR____TtC7Journal9DataStack_lockIsProtectedDataAvailable) unlock];
      return (id)swift_release();
    }
  }
  else
  {
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v17 = type metadata accessor for Logger();
    sub_100026A54(v17, (uint64_t)qword_100805FD0);
    id v18 = v1;
    unint64_t v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v19, v20))
    {
      os_log_type_t v21 = (uint8_t *)swift_slowAlloc();
      id v22 = (void *)swift_slowAlloc();
      *(_DWORD *)os_log_type_t v21 = 136446210;
      aBlock[0] = v22;
      type metadata accessor for UUID();
      sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v23 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t aBlock[6] = (id)sub_10011EA98(v23, v24, (uint64_t *)aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "%{public}s (saveData) Protected data is not available, not ready to sync", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    return [*(id *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_lockIsProtectedDataAvailable) unlock];
  }
  return result;
}

void sub_10029C034(void *a1, void *a2)
{
  sub_1002A4450(0x6174614465766173, 0xE800000000000000);
  id v27 = 0;
  unsigned int v4 = [a1 save:&v27];
  id v5 = v27;
  if (v4)
  {
    id v6 = v5;
  }
  else
  {
    id v7 = v27;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    uint64_t v8 = (void *)_convertErrorToNSError(_:)();
    id v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    _StringGuts.grow(_:)(23);
    swift_bridgeObjectRelease();
    id v27 = (id)0xD000000000000011;
    unint64_t v28 = 0x8000000100695950;
    id v9 = [v8 description];
    uint64_t v10 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v12 = v11;

    v13._uint64_t countAndFlagsBits = v10;
    v13._object = v12;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    v14._uint64_t countAndFlagsBits = 8236;
    v14._object = (void *)0xE200000000000000;
    String.append(_:)(v14);
    id v15 = [v8 userInfo];
    static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

    v16._uint64_t countAndFlagsBits = Dictionary.description.getter();
    String.append(_:)(v16);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v17 = v28;
    id v26 = v27;
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v18 = type metadata accessor for Logger();
    sub_100026A54(v18, (uint64_t)qword_100805FD0);
    id v19 = a2;
    swift_bridgeObjectRetain();
    id v20 = v19;
    os_log_type_t v21 = Logger.logObject.getter();
    os_log_type_t v22 = static os_log_type_t.fault.getter();
    if (os_log_type_enabled(v21, v22))
    {
      uint64_t v23 = swift_slowAlloc();
      id v27 = (id)swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136446466;
      type metadata accessor for UUID();
      sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v24, v25, (uint64_t *)&v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_10011EA98((uint64_t)v26, v17, (uint64_t *)&v27);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%{public}s %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
    }
    else
    {

      swift_errorRelease();
      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_10029C49C(uint64_t a1, uint64_t a2, void *a3)
{
  if (qword_1007F6CF0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100026A54(v5, (uint64_t)qword_100805FD0);
  id v6 = v3;
  id v7 = a3;
  id v8 = v6;
  id v9 = v7;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    Swift::String v13 = (void *)swift_slowAlloc();
    uint64_t v19 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446466;
    type metadata accessor for UUID();
    sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v14 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v14, v15, &v19);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2112;
    id v16 = v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v13 = v9;

    _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s (getRecordFromId) context: %@", (uint8_t *)v12, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  __chkstk_darwin(v17);
  sub_100010218((uint64_t *)&unk_100806080);
  NSManagedObjectContext.performAndWait<A>(_:)();
  return v19;
}

void sub_10029C7B0(void *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, void *a4@<X3>, uint8_t **a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t v12 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = &v150[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = type metadata accessor for Date();
  uint64_t v161 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v160 = &v150[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  uint64_t v157 = &v150[-v18];
  __chkstk_darwin(v19);
  NSString v156 = &v150[-v20];
  os_log_type_t v21 = sub_10056A2E0(a2, a3, a4);
  uint64_t v164 = a2;
  if (v21)
  {
    double v158 = v21;
    os_log_type_t v22 = (uint8_t *)sub_10056B184(v21);
    if (v22)
    {
      uint64_t v23 = v22;
      if (qword_1007F6CF0 != -1) {
        swift_once();
      }
      uint64_t v24 = type metadata accessor for Logger();
      uint64_t v25 = sub_100026A54(v24, (uint64_t)qword_100805FD0);
      id v26 = a1;
      swift_bridgeObjectRetain_n();
      uint64_t v159 = v23;
      id v27 = v23;
      id v28 = v26;
      id v29 = v27;
      uint64_t v153 = v25;
      id v30 = Logger.logObject.getter();
      os_log_type_t v31 = static os_log_type_t.default.getter();
      int v32 = v31;
      BOOL v33 = os_log_type_enabled(v30, v31);
      uint64_t v154 = v15;
      id v155 = v29;
      uint64_t v163 = a5;
      if (v33)
      {
        uint64_t v34 = swift_slowAlloc();
        uint64_t v152 = swift_slowAlloc();
        uint64_t v166 = v152;
        *(_DWORD *)uint64_t v34 = 136446722;
        uint64_t v162 = v5;
        int v151 = v32;
        type metadata accessor for UUID();
        sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v35 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v165 = sub_10011EA98(v35, v36, &v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v165 = sub_10011EA98(v164, a3, &v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v34 + 22) = 2080;
        uint64_t v164 = v34 + 24;
        id v37 = [(uint8_t *)v155 debugDescription];
        static String._unconditionallyBridgeFromObjectiveC(_:)();

        sub_10055A870(1000);
        swift_bridgeObjectRelease();
        uint64_t v6 = v162;
        uint64_t v38 = static String._fromSubstring(_:)();
        unint64_t v40 = v39;
        id v29 = v155;
        swift_bridgeObjectRelease();
        uint64_t v165 = sub_10011EA98(v38, v40, &v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v30, (os_log_type_t)v151, "%{public}s (getRecordFromId) type: JournalEntry recordID:%s record:%s", (uint8_t *)v34, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      id v50 = [(uint8_t *)v29 encryptedValues];
      NSString v51 = String._bridgeToObjectiveC()();
      id v52 = [v50 objectForKeyedSubscript:v51];
      swift_unknownObjectRelease();

      char v53 = v159;
      uint64_t v54 = v160;
      if (v52)
      {
        uint64_t v166 = (uint64_t)v52;
        sub_100010218((uint64_t *)&unk_1008060F0);
        if (swift_dynamicCast())
        {
          __int16 v55 = v165;
          Swift::String v56 = Logger.logObject.getter();
          os_log_type_t v57 = static os_log_type_t.default.getter();
          if (os_log_type_enabled(v56, v57))
          {
            uint64_t v58 = (uint8_t *)swift_slowAlloc();
            *(_DWORD *)uint64_t v58 = 33554688;
            uint64_t v54 = v160;
            LOWORD(v166) = v55;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            _os_log_impl((void *)&_mh_execute_header, v56, v57, "(getRecordFromId) (record.textLength) == %hd", v58, 6u);
            swift_slowDealloc();
          }

          char v53 = v159;
        }
      }
      id v59 = [(uint8_t *)v155 encryptedValues];
      NSString v60 = String._bridgeToObjectiveC()();
      id v61 = [v59 objectForKeyedSubscript:v60];
      swift_unknownObjectRelease();

      if (v61)
      {
        uint64_t v166 = (uint64_t)v61;
        sub_100010218((uint64_t *)&unk_1008060F0);
        uint64_t v62 = v154;
        int v63 = swift_dynamicCast();
        uint64_t v64 = v161;
        (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v161 + 56))(v14, v63 ^ 1u, 1, v62);
        int v65 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v64 + 48))(v14, 1, v62);
        a5 = v163;
        if (v65 != 1)
        {
          unint64_t v66 = v156;
          (*(void (**)(void))(v64 + 32))();
          uint64_t v67 = *(void (**)(uint8_t *, uint8_t *, uint64_t))(v64 + 16);
          v67(v157, v66, v62);
          v67(v54, v66, v62);
          uint64_t v68 = Logger.logObject.getter();
          os_log_type_t v69 = static os_log_type_t.default.getter();
          int v70 = v69;
          if (os_log_type_enabled(v68, v69))
          {
            uint64_t v71 = swift_slowAlloc();
            uint64_t v164 = swift_slowAlloc();
            uint64_t v166 = v164;
            *(_DWORD *)uint64_t v71 = 136315394;
            id v155 = (uint8_t *)(v71 + 4);
            id v72 = [objc_allocWithZone((Class)NSDateFormatter) init];
            NSString v73 = String._bridgeToObjectiveC()();
            LODWORD(v160) = v70;
            long long v74 = v73;
            [v72 setDateFormat:v73];

            uint64_t v75 = v157;
            Class isa = Date._bridgeToObjectiveC()().super.isa;
            id v77 = [v72 stringFromDate:isa];
            uint64_t v162 = v6;
            id v78 = v77;

            uint64_t v79 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v80 = v54;
            unint64_t v82 = v81;

            uint64_t v165 = sub_10011EA98(v79, v82, &v166);
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            uint64_t v83 = *(void (**)(uint8_t *, uint64_t))(v161 + 8);
            v83(v75, v62);
            *(_WORD *)(v71 + 12) = 2080;
            sub_1002A48E0((unint64_t *)&qword_1007FC490, (void (*)(uint64_t))&type metadata accessor for Date);
            uint64_t v84 = dispatch thunk of CustomStringConvertible.description.getter();
            uint64_t v165 = sub_10011EA98(v84, v85, &v166);
            char v53 = v159;
            UnsafeMutableRawBufferPointer.copyMemory(from:)();
            swift_bridgeObjectRelease();
            v83(v80, v62);
            _os_log_impl((void *)&_mh_execute_header, v68, (os_log_type_t)v160, "(getRecordFromId) (record.updatedDate) == %s  %s", (uint8_t *)v71, 0x16u);
            swift_arrayDestroy();
            a5 = v163;
            swift_slowDealloc();
            swift_slowDealloc();

            v83(v156, v62);
          }
          else
          {

            uint64_t v141 = *(void (**)(uint8_t *, uint64_t))(v64 + 8);
            v141(v54, v62);
            v141(v157, v62);
            v141(v66, v62);
          }
          goto LABEL_57;
        }
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v161 + 56))(v14, 1, 1, v154);
        a5 = v163;
      }

      sub_10001457C((uint64_t)v14, (uint64_t *)&unk_1007FC470);
      goto LABEL_57;
    }
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v41 = type metadata accessor for Logger();
    sub_100026A54(v41, (uint64_t)qword_100805FD0);
    id v42 = a1;
    char v43 = Logger.logObject.getter();
    os_log_type_t v44 = static os_log_type_t.error.getter();
    int v45 = v44;
    if (os_log_type_enabled(v43, v44))
    {
      LODWORD(v162) = v45;
      Swift::String v46 = (uint8_t *)swift_slowAlloc();
      uint64_t v47 = swift_slowAlloc();
      uint64_t v161 = v47;
      uint64_t v163 = a5;
      *(_DWORD *)Swift::String v46 = 136446210;
      uint64_t v166 = v47;
      uint64_t v159 = v46 + 4;
      uint64_t v160 = v46;
      type metadata accessor for UUID();
      sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v6 = v5;
      a2 = v164;
      uint64_t v48 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v165 = sub_10011EA98(v48, v49, &v166);
      a5 = v163;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v43, (os_log_type_t)v162, "%{public}s (getRecordFromId) failed to getRecordFromJournalEntry", v160, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
  uint64_t v86 = (void *)sub_1004ECAB0(a2, a3, a4);
  if (v86)
  {
    uint64_t v87 = v86;
    unint64_t v88 = (uint8_t *)sub_1004F33CC(v86);
    if (v88)
    {
      char v53 = v88;
      if (qword_1007F6CF0 != -1) {
        swift_once();
      }
      uint64_t v89 = type metadata accessor for Logger();
      sub_100026A54(v89, (uint64_t)qword_100805FD0);
      id v90 = a1;
      swift_bridgeObjectRetain_n();
      unint64_t v91 = v53;
      id v92 = v90;
      id v93 = v91;
      uint64_t v94 = Logger.logObject.getter();
      os_log_type_t v95 = static os_log_type_t.default.getter();
      int v96 = v95;
      if (os_log_type_enabled(v94, v95))
      {
        uint64_t v97 = swift_slowAlloc();
        uint64_t v157 = v93;
        uint64_t v98 = v97;
        uint64_t v161 = swift_slowAlloc();
        uint64_t v166 = v161;
        *(_DWORD *)uint64_t v98 = 136446722;
        uint64_t v163 = a5;
        LODWORD(v160) = v96;
        type metadata accessor for UUID();
        uint64_t v162 = v6;
        sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v99 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v165 = sub_10011EA98(v99, v100, &v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        double v158 = v94;
        *(_WORD *)(v98 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v165 = sub_10011EA98(v164, a3, &v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v98 + 22) = 2080;
        uint64_t v164 = v98 + 24;
        unint64_t v101 = v157;
        id v102 = [(uint8_t *)v157 debugDescription];
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v159 = v53;

        sub_10055A870(1000);
        swift_bridgeObjectRelease();
        uint64_t v103 = static String._fromSubstring(_:)();
        unint64_t v105 = v104;
        swift_bridgeObjectRelease();
        uint64_t v106 = v103;
        a5 = v163;
        uint64_t v165 = sub_10011EA98(v106, v105, &v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        char v53 = v159;
        swift_bridgeObjectRelease();
        uint64_t v107 = "%{public}s (getRecordFromId) type: JournalEntryAsset recordID:%s record:%s";
LABEL_42:
        uint64_t v132 = v158;
        _os_log_impl((void *)&_mh_execute_header, v158, (os_log_type_t)v160, v107, (uint8_t *)v98, 0x20u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        goto LABEL_57;
      }
      goto LABEL_43;
    }
    uint64_t v161 = a3;
    uint64_t v162 = v6;
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v108 = type metadata accessor for Logger();
    sub_100026A54(v108, (uint64_t)qword_100805FD0);
    id v109 = a1;
    uint64_t v110 = Logger.logObject.getter();
    os_log_type_t v111 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v110, v111))
    {
      double v112 = (uint8_t *)swift_slowAlloc();
      id v113 = (uint8_t *)swift_slowAlloc();
      uint64_t v160 = v113;
      uint64_t v163 = a5;
      *(_DWORD *)double v112 = 136446210;
      uint64_t v166 = (uint64_t)v113;
      double v158 = (v112 + 4);
      uint64_t v159 = v112;
      type metadata accessor for UUID();
      sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v114 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v165 = sub_10011EA98(v114, v115, &v166);
      a5 = v163;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v110, v111, "%{public}s (getRecordFromId) failed to getRecordFromJournalEntryAsset", v159, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    a3 = v161;
    uint64_t v6 = v162;
    a2 = v164;
  }
  char v116 = (void *)sub_10052C08C(a2, a3, a4);
  if (v116)
  {
    uint64_t v87 = v116;
    uint64_t v117 = (uint8_t *)sub_10052E750(v116);
    if (v117)
    {
      char v53 = v117;
      if (qword_1007F6CF0 != -1) {
        swift_once();
      }
      uint64_t v118 = type metadata accessor for Logger();
      sub_100026A54(v118, (uint64_t)qword_100805FD0);
      id v119 = a1;
      swift_bridgeObjectRetain_n();
      unint64_t v120 = v53;
      id v92 = v119;
      id v93 = v120;
      uint64_t v94 = Logger.logObject.getter();
      os_log_type_t v121 = static os_log_type_t.default.getter();
      int v122 = v121;
      if (os_log_type_enabled(v94, v121))
      {
        uint64_t v123 = swift_slowAlloc();
        uint64_t v157 = v93;
        uint64_t v98 = v123;
        uint64_t v161 = swift_slowAlloc();
        uint64_t v166 = v161;
        *(_DWORD *)uint64_t v98 = 136446722;
        uint64_t v163 = a5;
        LODWORD(v160) = v122;
        type metadata accessor for UUID();
        uint64_t v162 = v6;
        sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v124 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v165 = sub_10011EA98(v124, v125, &v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        double v158 = v94;
        *(_WORD *)(v98 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v165 = sub_10011EA98(v164, a3, &v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v98 + 22) = 2080;
        uint64_t v164 = v98 + 24;
        uint64_t v126 = v157;
        id v127 = [(uint8_t *)v157 debugDescription];
        static String._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v159 = v53;

        sub_10055A870(1000);
        swift_bridgeObjectRelease();
        uint64_t v128 = static String._fromSubstring(_:)();
        unint64_t v130 = v129;
        swift_bridgeObjectRelease();
        uint64_t v131 = v128;
        a5 = v163;
        uint64_t v165 = sub_10011EA98(v131, v130, &v166);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        char v53 = v159;
        swift_bridgeObjectRelease();
        uint64_t v107 = "%{public}s (getRecordFromId) type: JournalEntryAssetFileAttachment recordID:%s record:%s";
        goto LABEL_42;
      }
LABEL_43:

      swift_bridgeObjectRelease_n();
      goto LABEL_57;
    }
    uint64_t v161 = a3;
    uint64_t v162 = v6;
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v133 = type metadata accessor for Logger();
    sub_100026A54(v133, (uint64_t)qword_100805FD0);
    id v134 = a1;
    uint64_t v135 = Logger.logObject.getter();
    os_log_type_t v136 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v135, v136))
    {
      uint64_t v137 = (uint8_t *)swift_slowAlloc();
      uint64_t v138 = (uint8_t *)swift_slowAlloc();
      uint64_t v160 = v138;
      uint64_t v163 = a5;
      *(_DWORD *)uint64_t v137 = 136446210;
      uint64_t v166 = (uint64_t)v138;
      uint64_t v159 = v137 + 4;
      type metadata accessor for UUID();
      sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v139 = dispatch thunk of CustomStringConvertible.description.getter();
      uint64_t v165 = sub_10011EA98(v139, v140, &v166);
      a5 = v163;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v135, v136, "%{public}s (getRecordFromId) failed to getRecordFromJournalEntryAssetFileAttachment", v137, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
    a3 = v161;
    uint64_t v6 = v162;
  }
  if (qword_1007F6CF0 != -1) {
    swift_once();
  }
  uint64_t v142 = type metadata accessor for Logger();
  sub_100026A54(v142, (uint64_t)qword_100805FD0);
  id v143 = a1;
  swift_bridgeObjectRetain_n();
  id v144 = v143;
  objc_super v145 = Logger.logObject.getter();
  os_log_type_t v146 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v145, v146))
  {
    uint64_t v147 = swift_slowAlloc();
    uint64_t v161 = swift_slowAlloc();
    uint64_t v166 = v161;
    *(_DWORD *)uint64_t v147 = 136446466;
    type metadata accessor for UUID();
    uint64_t v162 = v6;
    sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v148 = dispatch thunk of CustomStringConvertible.description.getter();
    uint64_t v165 = sub_10011EA98(v148, v149, &v166);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v147 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v165 = sub_10011EA98(v164, a3, &v166);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v145, v146, "%{public}s (getRecordFromId) context unable to get an object from database with id:%s", (uint8_t *)v147, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  char v53 = 0;
LABEL_57:
  *a5 = v53;
}

uint64_t sub_10029DFD0(uint64_t a1, unint64_t a2)
{
  if (qword_1007F6CF0 != -1) {
    swift_once();
  }
  uint64_t v5 = type metadata accessor for Logger();
  sub_100026A54(v5, (uint64_t)qword_100805FD0);
  id v6 = v2;
  swift_bridgeObjectRetain_n();
  id v7 = v6;
  id v8 = Logger.logObject.getter();
  os_log_type_t v9 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v10 = swift_slowAlloc();
    v15[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446466;
    type metadata accessor for UUID();
    sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v11 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v11, v12, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_10011EA98(a1, a2, v15);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v8, v9, "%{public}s (deleteObjectBy) id:%s)", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_allocObject();
  uint64_t v13 = swift_unknownObjectWeakInit();
  __chkstk_darwin(v13);
  NSManagedObjectContext.performAndWait<A>(_:)();
  swift_release();
  return LOBYTE(v15[0]);
}

void sub_10029E2D0(uint64_t a1@<X1>, unint64_t a2@<X2>, void *a3@<X3>, char *a4@<X8>)
{
  uint64_t v9 = type metadata accessor for DispatchWorkItemFlags();
  unint64_t v130 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = type metadata accessor for DispatchQoS();
  uint64_t v129 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v132 = (char *)&v111 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v13 - 8);
  uint64_t v135 = (char *)&v111 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v138 = (void *)type metadata accessor for UUID();
  uint64_t v134 = *(v138 - 1);
  __chkstk_darwin(v138);
  os_log_type_t v136 = (char *)&v111 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = v15;
  __chkstk_darwin(v16);
  uint64_t v137 = (char *)&v111 - v17;
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    char v30 = 0;
LABEL_21:
    *a4 = v30;
    return;
  }
  id v127 = v11;
  uint64_t v128 = v9;
  uint64_t v139 = a4;
  id v140 = Strong;
  uint64_t v19 = (void *)sub_10052C08C(a1, a2, a3);
  uint64_t v20 = a3;
  id v21 = [a3 updatedObjects];
  sub_10001B284(0, &qword_1008113A0);
  sub_100082CD4();
  uint64_t v22 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  uint64_t v141 = a1;
  sub_1002A3E10(v22, a1, a2, (void (*)(void))type metadata accessor for JournalEntryAssetFileAttachmentMO);
  uint64_t v24 = v23;
  uint64_t v142 = v4;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v25 = a2;
  if (v24)
  {
    type metadata accessor for JournalEntryAssetFileAttachmentMO();
    uint64_t v26 = swift_dynamicCastClass();
    if (v26)
    {
      id v27 = (void *)v26;
      id v28 = a3;
      if (!v19) {
        goto LABEL_5;
      }
LABEL_13:
      id v29 = v19;
      goto LABEL_14;
    }
  }
  id v28 = a3;
  id v31 = [a3 insertedObjects];
  uint64_t v32 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  uint64_t v33 = v142;
  sub_1002A3E10(v32, v141, a2, (void (*)(void))type metadata accessor for JournalEntryAssetFileAttachmentMO);
  uint64_t v35 = v34;
  uint64_t v142 = v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v35)
  {
    type metadata accessor for JournalEntryAssetFileAttachmentMO();
    id v27 = (void *)swift_dynamicCastClass();
    if (!v27) {

    }
    if (v19) {
      goto LABEL_13;
    }
  }
  else
  {
    id v27 = 0;
    if (v19) {
      goto LABEL_13;
    }
  }
LABEL_5:
  if (v27)
  {
    id v29 = v27;
    uint64_t v19 = 0;
LABEL_14:
    unint64_t v36 = v19;
    [v29 setIsUploadedToCloud:1];
    sub_1002A4450(0xD00000000000002DLL, 0x8000000100695920);
    [v28 deleteObject:v29];
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v37 = type metadata accessor for Logger();
    sub_100026A54(v37, (uint64_t)qword_100805FD0);
    swift_bridgeObjectRetain_n();
    uint64_t v38 = Logger.logObject.getter();
    os_log_type_t v39 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v138 = v36;
      uint64_t v41 = (uint8_t *)v40;
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315138;
      swift_bridgeObjectRetain();
      objc_super v145 = (void *)sub_10011EA98(v141, a2, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v38, v39, "(deleteObjectBy) JournalEntryAssetFileAttachment removed id:%s)", v41, 0xCu);
      char v30 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

LABEL_20:
      a4 = v139;
      goto LABEL_21;
    }

    swift_bridgeObjectRelease_n();
LABEL_19:
    char v30 = 1;
    goto LABEL_20;
  }
  id v42 = v28;
  uint64_t v43 = v141;
  os_log_type_t v44 = (void *)sub_1004ECAB0(v141, a2, v42);
  id v45 = [v42 updatedObjects];
  uint64_t v46 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  uint64_t v47 = v142;
  sub_1002A3E10(v46, v43, a2, (void (*)(void))type metadata accessor for JournalEntryAssetMO);
  unint64_t v49 = v48;
  uint64_t v142 = v47;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v50 = (uint64_t)v135;
  if (v49)
  {
    type metadata accessor for JournalEntryAssetMO();
    NSString v51 = (void *)swift_dynamicCastClass();
    if (v51) {
      goto LABEL_31;
    }
  }
  id v52 = [a3 insertedObjects];
  uint64_t v53 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  uint64_t v54 = v142;
  sub_1002A3E10(v53, v141, a2, (void (*)(void))type metadata accessor for JournalEntryAssetMO);
  Swift::String v56 = v55;
  uint64_t v142 = v54;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v56)
  {
    type metadata accessor for JournalEntryAssetMO();
    NSString v51 = (void *)swift_dynamicCastClass();
    if (v51) {
      goto LABEL_31;
    }
  }
  NSString v51 = 0;
LABEL_31:
  Swift::Int v57 = v141;
  if (v44)
  {
    uint64_t v138 = v51;
    uint64_t v58 = v44;
LABEL_35:
    id v59 = v44;
    sub_1005C397C();
    sub_1005E6760();
    [v58 setIsUploadedToCloud:1];
    sub_1002A4450(0xD00000000000001FLL, 0x8000000100695900);
    [a3 deleteObject:v58];
    if (qword_1007F6D38 != -1) {
      swift_once();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_10054BEBC((Swift::Int *)&v145, v57, a2);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_10054BEBC((Swift::Int *)&v145, v57, a2);
    swift_endAccess();
    swift_bridgeObjectRelease();
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v60 = type metadata accessor for Logger();
    sub_100026A54(v60, (uint64_t)qword_100805FD0);
    swift_bridgeObjectRetain_n();
    id v61 = Logger.logObject.getter();
    os_log_type_t v62 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v61, v62))
    {
      int v63 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)int v63 = 136315138;
      swift_bridgeObjectRetain();
      objc_super v145 = (void *)sub_10011EA98(v141, a2, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v61, v62, "(deleteObjectBy) JournalEntryAsset removed id:%s)", v63, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      char v30 = 1;
      goto LABEL_20;
    }

    swift_bridgeObjectRelease_n();
    id v64 = v138;
    goto LABEL_42;
  }
  if (v51)
  {
    uint64_t v138 = v51;
    uint64_t v58 = v51;
    os_log_type_t v44 = 0;
    goto LABEL_35;
  }
  int v65 = (void *)sub_10056A2E0(v141, a2, a3);
  id v66 = [a3 updatedObjects];
  uint64_t v67 = static Set._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v115 = v25;
  uint64_t v68 = v67;

  swift_bridgeObjectRetain();
  uint64_t v69 = v142;
  sub_1002A3E10(v68, v57, v115, (void (*)(void))type metadata accessor for JournalEntryMO);
  uint64_t v71 = v70;
  uint64_t v72 = v115;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v71)
  {
    type metadata accessor for JournalEntryMO();
    NSString v73 = (void *)swift_dynamicCastClass();
    if (v73)
    {
      a4 = v139;
      uint64_t v74 = v69;
      goto LABEL_53;
    }
  }
  id v75 = [a3 insertedObjects];
  uint64_t v76 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

  swift_bridgeObjectRetain();
  sub_1002A3E10(v76, v141, v72, (void (*)(void))type metadata accessor for JournalEntryMO);
  id v78 = v77;
  uint64_t v74 = v69;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  NSString v73 = 0;
  if (!v78)
  {
    a4 = v139;
LABEL_53:
    Swift::Int v80 = v141;
    uint64_t v79 = v138;
    if (v65) {
      goto LABEL_54;
    }
    goto LABEL_50;
  }
  type metadata accessor for JournalEntryMO();
  NSString v73 = (void *)swift_dynamicCastClass();
  uint64_t v79 = v138;
  a4 = v139;
  if (v73)
  {
    Swift::Int v80 = v141;
    if (v65)
    {
LABEL_54:
      id v113 = v73;
      id v81 = v65;
      goto LABEL_55;
    }
  }
  else
  {

    NSString v73 = 0;
    Swift::Int v80 = v141;
    if (v65) {
      goto LABEL_54;
    }
  }
LABEL_50:
  if (!v73)
  {

    char v30 = 0;
    goto LABEL_21;
  }
  id v113 = v73;
  id v81 = v73;
  int v65 = 0;
LABEL_55:
  id v112 = v65;
  unint64_t v82 = sub_1000E5020();
  unint64_t v83 = v82;
  if (v82 >> 62) {
    uint64_t v84 = _CocoaArrayWrapper.endIndex.getter();
  }
  else {
    uint64_t v84 = *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  id v114 = v81;
  uint64_t v142 = v74;
  if (!v84)
  {
LABEL_77:
    swift_bridgeObjectRelease();
    id v105 = v114;
    sub_1005E6C68();
    [v105 setIsUploadedToCloud:1];
    sub_1002A4450(0xD00000000000001ALL, 0x80000001006958E0);
    [v20 deleteObject:v105];
    if (qword_1007F6D38 != -1) {
      swift_once();
    }
    swift_beginAccess();
    uint64_t v106 = v115;
    swift_bridgeObjectRetain();
    sub_10054BEBC((Swift::Int *)&v145, v80, v106);
    swift_endAccess();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_10054BEBC((Swift::Int *)&v145, v80, v106);
    swift_endAccess();
    swift_bridgeObjectRelease();
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v107 = type metadata accessor for Logger();
    sub_100026A54(v107, (uint64_t)qword_100805FD0);
    swift_bridgeObjectRetain_n();
    uint64_t v108 = Logger.logObject.getter();
    os_log_type_t v109 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v108, v109))
    {
      uint64_t v110 = (uint8_t *)swift_slowAlloc();
      aBlock[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v110 = 136315138;
      swift_bridgeObjectRetain();
      objc_super v145 = (void *)sub_10011EA98(v80, v106, aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      _os_log_impl((void *)&_mh_execute_header, v108, v109, "(deleteObjectBy) JournalEntry removed id:%s)", v110, 0xCu);
      char v30 = 1;
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      goto LABEL_20;
    }

    swift_bridgeObjectRelease_n();
    id v64 = v113;
LABEL_42:

    goto LABEL_19;
  }
  if (v84 >= 1)
  {
    uint64_t v85 = 0;
    unint64_t v125 = v83 & 0xC000000000000001;
    uint64_t v126 = (void (**)(uint64_t, char *, void *))(v134 + 32);
    uint64_t v124 = (void (**)(uint64_t, uint64_t, uint64_t, void *))(v134 + 56);
    int v122 = (unsigned int (**)(uint64_t, uint64_t, void *))(v134 + 48);
    uint64_t v120 = v134 + 16;
    id v119 = v144;
    uint64_t v118 = (void (**)(char *, uint64_t))(v130 + 8);
    uint64_t v117 = (void (**)(char *, uint64_t))(v129 + 8);
    uint64_t v116 = v134 + 8;
    unint64_t v130 = v83;
    os_log_type_t v121 = v20;
    uint64_t v123 = v84;
    while (1)
    {
      uint64_t v87 = v125
          ? specialized _ArrayBuffer._getElementSlowPath(_:)()
          : *(id *)(v83 + 8 * v85 + 32);
      uint64_t v86 = v87;
      id v88 = [v87 id];
      if (!v88) {
        break;
      }
      uint64_t v89 = v88;
      id v90 = v136;
      static UUID._unconditionallyBridgeFromObjectiveC(_:)();

      unint64_t v91 = (void (*)(char *, uint64_t, void *))*v126;
      id v92 = v90;
      uint64_t v84 = v123;
      (*v126)(v50, v92, v79);
      (*v124)(v50, 0, 1, v79);
      if ((*v122)(v50, 1, v79) == 1) {
        goto LABEL_73;
      }
      v91(v137, v50, v79);
      if (qword_1007F6BA0 != -1) {
        swift_once();
      }
      if (qword_1007F6BA8 != -1) {
        swift_once();
      }
      uint64_t v129 = qword_10083D198;
      uint64_t v93 = v134;
      uint64_t v94 = v136;
      (*(void (**)(char *, char *, void *))(v134 + 16))(v136, v137, v79);
      unint64_t v95 = (*(unsigned __int8 *)(v93 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v93 + 80);
      uint64_t v96 = swift_allocObject();
      v91((char *)(v96 + v95), (uint64_t)v94, v138);
      v144[2] = sub_1000F7E5C;
      v144[3] = v96;
      aBlock[0] = (uint64_t)_NSConcreteStackBlock;
      aBlock[1] = 1107296256;
      v144[0] = sub_10017D530;
      v144[1] = &unk_1007A2CB0;
      uint64_t v97 = _Block_copy(aBlock);
      uint64_t v98 = v132;
      static DispatchQoS.unspecified.getter();
      objc_super v145 = _swiftEmptyArrayStorage;
      sub_1002A48E0((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
      sub_100010218(&qword_100804DB0);
      sub_10011AE0C((unint64_t *)&qword_1007FBD20, &qword_100804DB0);
      uint64_t v99 = v127;
      uint64_t v100 = v128;
      uint64_t v79 = v138;
      dispatch thunk of SetAlgebra.init<A>(_:)();
      OS_dispatch_queue.async(group:qos:flags:execute:)();
      _Block_release(v97);
      (*v118)(v99, v100);
      (*v117)(v98, v133);
      swift_release();
      (*(void (**)(char *, void *))(v93 + 8))(v137, v79);
      Swift::Int v80 = v141;
      uint64_t v50 = (uint64_t)v135;
      uint64_t v20 = v121;
      uint64_t v84 = v123;
LABEL_61:
      ++v85;

      unint64_t v83 = v130;
      if (v84 == v85) {
        goto LABEL_77;
      }
    }
    (*v124)(v50, 1, 1, v79);
LABEL_73:
    sub_10001457C(v50, &qword_100800950);
    if (qword_1007F7E78 != -1) {
      swift_once();
    }
    uint64_t v101 = type metadata accessor for Logger();
    sub_100026A54(v101, (uint64_t)qword_100812860);
    id v102 = Logger.logObject.getter();
    os_log_type_t v103 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v102, v103))
    {
      unint64_t v104 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v104 = 0;
      _os_log_impl((void *)&_mh_execute_header, v102, v103, "(purgeCache) unable to get assetId from an asset", v104, 2u);
      uint64_t v79 = v138;
      swift_slowDealloc();
    }

    uint64_t v86 = v102;
    goto LABEL_61;
  }
  __break(1u);
}

uint64_t sub_10029F7D0(void *a1)
{
  id v3 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 initWithEntityName:v4];

  uint64_t v16 = 0;
  id v6 = (void *)swift_allocObject();
  v6[2] = a1;
  v6[3] = v5;
  v6[4] = &v16;
  v6[5] = v1;
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = sub_1002A4AA8;
  *(void *)(v7 + 24) = v6;
  aBlock[4] = sub_10001B3DC;
  void aBlock[5] = v7;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = sub_1003F44E4;
  aBlock[3] = &unk_1007A2C60;
  id v8 = _Block_copy(aBlock);
  id v9 = a1;
  id v10 = v5;
  id v11 = v1;
  swift_retain();
  swift_release();
  [v9 performBlockAndWait:v8];

  _Block_release(v8);
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
  }
  else
  {
    uint64_t v14 = v16;
    swift_release();
    return v14;
  }
  return result;
}

void sub_10029F9A0(void *a1, uint64_t a2, NSObject **a3, char *a4)
{
  sub_1002A4450(0x6E79536863746566, 0xED00006174614463);
  type metadata accessor for SyncDataMO();
  unint64_t v7 = NSManagedObjectContext.fetch<A>(_:)();
  unint64_t v17 = v7;
  if (!(v7 >> 62))
  {
    id v18 = *(id *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v18) {
      goto LABEL_8;
    }
LABEL_18:
    swift_bridgeObjectRelease();
    id v22 = [*(id *)&a4[OBJC_IVAR____TtC7Journal13CoreDataStack_container] viewContext];
    id v18 = [v22 persistentStoreCoordinator];

    if (!v18) {
      goto LABEL_28;
    }
    id v23 = [v18 persistentStores];
    sub_10001B284(0, &qword_1008038C0);
    unint64_t v24 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (!(v24 >> 62))
    {
      uint64_t v25 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
      swift_bridgeObjectRelease();

      if (!v25) {
        goto LABEL_28;
      }
      goto LABEL_21;
    }
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v31 = _CocoaArrayWrapper.endIndex.getter();

    swift_bridgeObjectRelease_n();
    if (!v31) {
      goto LABEL_28;
    }
LABEL_21:
    if (a4[OBJC_IVAR____TtC7Journal13CoreDataStack_persistentStoresLoadSuccess])
    {
      uint64_t v26 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithContext:a1];
      id v40 = 0;
      unsigned int v27 = [a1 save:&v40];
      id v28 = v40;
      if (v27)
      {
        id v11 = *a3;
        *a3 = v26;
        id v29 = v28;
      }
      else
      {
        id v30 = v40;
        _convertNSErrorToError(_:)();

        swift_willThrow();
        if (qword_1007F6CF0 != -1) {
          swift_once();
        }
        uint64_t v8 = type metadata accessor for Logger();
        sub_100026A54(v8, (uint64_t)qword_100805FD0);
        id v9 = a4;
        swift_errorRetain();
        id v10 = v9;
        swift_errorRetain();
        id v11 = Logger.logObject.getter();
        os_log_type_t v12 = static os_log_type_t.fault.getter();
        if (os_log_type_enabled(v11, v12))
        {
          uint64_t v13 = swift_slowAlloc();
          uint64_t v14 = (void *)swift_slowAlloc();
          id v40 = (id)swift_slowAlloc();
          *(_DWORD *)uint64_t v13 = 136446466;
          type metadata accessor for UUID();
          sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
          sub_10011EA98(v15, v16, (uint64_t *)&v40);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v13 + 12) = 2112;
          swift_errorRetain();
          uint64_t v39 = _swift_stdlib_bridgeErrorToNSError();
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          *uint64_t v14 = v39;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl((void *)&_mh_execute_header, v11, v12, "%{public}s Unable to fetch sync data: %@", (uint8_t *)v13, 0x16u);
          sub_100010218((uint64_t *)&unk_1007FC430);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
          return;
        }
        swift_errorRelease();

        swift_errorRelease();
        swift_errorRelease();
      }
      goto LABEL_16;
    }
LABEL_28:
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v32 = type metadata accessor for Logger();
    sub_100026A54(v32, (uint64_t)qword_100805FD0);
    uint64_t v38 = a4;
    id v11 = Logger.logObject.getter();
    os_log_type_t v33 = static os_log_type_t.fault.getter();
    if (!os_log_type_enabled(v11, v33))
    {

      id v21 = v38;
      goto LABEL_12;
    }
    uint64_t v34 = (uint8_t *)swift_slowAlloc();
    uint64_t v35 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v34 = 136446210;
    id v40 = v35;
    type metadata accessor for UUID();
    sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v36 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v36, v37, (uint64_t *)&v40);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v11, v33, "%{public}s Unable to crete SyncDataMO since database was not open", v34, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
LABEL_16:

    return;
  }
  swift_bridgeObjectRetain();
  id v18 = (id)_CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v18) {
    goto LABEL_18;
  }
LABEL_8:
  if ((v17 & 0xC000000000000001) != 0)
  {
    uint64_t v19 = specialized _ArrayBuffer._getElementSlowPath(_:)();
    goto LABEL_11;
  }
  if (!*(void *)((v17 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v19 = *(id *)(v17 + 32);
LABEL_11:
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  id v21 = *a3;
  *a3 = v20;
LABEL_12:
}

void sub_1002A00E8(uint64_t a1, unint64_t a2)
{
  uint64_t v5 = sub_10029F7D0(*(void **)&v2[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate]);
  if (v5)
  {
    id v20 = (id)v5;
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    [v20 setMetadata:isa];

    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100026A54(v7, (uint64_t)qword_100805FD0);
    uint64_t v8 = v2;
    sub_100040D64(a1, a2);
    id v9 = v8;
    sub_100040D64(a1, a2);
    id v10 = Logger.logObject.getter();
    os_log_type_t v11 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v21 = swift_slowAlloc();
      *(_DWORD *)uint64_t v12 = 136446466;
      type metadata accessor for UUID();
      sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v13, v14, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2080;
      sub_100040D64(a1, a2);
      Class v15 = Data._bridgeToObjectiveC()().super.isa;
      id v16 = [(objc_class *)v15 description];
      uint64_t v17 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      unint64_t v19 = v18;

      sub_100040DD0(a1, a2);
      sub_10011EA98(v17, v19, &v21);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      sub_100040DD0(a1, a2);
      sub_100040DD0(a1, a2);
      _os_log_impl((void *)&_mh_execute_header, v10, v11, "%{public}s MetadataPrint [SAVED]: %s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      sub_100040DD0(a1, a2);
      sub_100040DD0(a1, a2);
    }
  }
}

uint64_t sub_1002A0440()
{
  long long v31 = xmmword_1006D8770;
  id v1 = *(void **)&v0[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate];
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = &v31;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1002A4A48;
  *(void *)(v4 + 24) = v3;
  aBlock[4] = (uint64_t)sub_10001B3DC;
  void aBlock[5] = v4;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  uint64_t aBlock[2] = (uint64_t)sub_1003F44E4;
  aBlock[3] = (uint64_t)&unk_1007A2BE8;
  uint64_t v5 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  [v1 performBlockAndWait:v5];
  _Block_release(v5);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v1)
  {
    __break(1u);
    goto LABEL_16;
  }
  unint64_t v6 = *((void *)&v31 + 1);
  if (*((void *)&v31 + 1) >> 60 == 15)
  {
    if (qword_1007F6CF0 == -1)
    {
LABEL_4:
      uint64_t v7 = type metadata accessor for Logger();
      sub_100026A54(v7, (uint64_t)qword_100805FD0);
      uint64_t v8 = v0;
      id v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.default.getter();
      if (os_log_type_enabled(v9, v10))
      {
        os_log_type_t v11 = (uint8_t *)swift_slowAlloc();
        uint64_t v12 = swift_slowAlloc();
        *(_DWORD *)os_log_type_t v11 = 136446210;
        aBlock[0] = v12;
        type metadata accessor for UUID();
        sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
        sub_10011EA98(v13, v14, aBlock);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s MetadataPrint [FETCH]: nil", v11, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
      uint64_t v15 = 0;
      goto LABEL_14;
    }
LABEL_16:
    swift_once();
    goto LABEL_4;
  }
  uint64_t v15 = v31;
  sub_100040D64(v31, *((unint64_t *)&v31 + 1));
  if (qword_1007F6CF0 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  sub_100026A54(v16, (uint64_t)qword_100805FD0);
  sub_100040F10(v15, v6);
  uint64_t v17 = v0;
  sub_100040F10(v15, v6);
  unint64_t v18 = v17;
  unint64_t v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v21 = 136446466;
    type metadata accessor for UUID();
    sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v22 = dispatch thunk of CustomStringConvertible.description.getter();
    sub_10011EA98(v22, v23, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();

    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2080;
    sub_100040D64(v15, v6);
    Class isa = Data._bridgeToObjectiveC()().super.isa;
    id v25 = [(objc_class *)isa description];
    uint64_t v26 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    unint64_t v28 = v27;

    sub_100040DBC(v15, v6);
    sub_10011EA98(v26, v28, aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    sub_100040DBC(v15, v6);
    sub_100040DBC(v15, v6);
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "%{public}s MetadataPrint [FETCH]: %s", (uint8_t *)v21, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    sub_100040DBC(v15, v6);
    sub_100040DBC(v15, v6);
  }

LABEL_14:
  sub_100040DBC(v31, *((unint64_t *)&v31 + 1));
  swift_release();
  return v15;
}

void sub_1002A0A60(uint64_t a1, uint64_t *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = *(id *)(Strong + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
    unint64_t v6 = (void *)sub_10029F7D0(v5);

    if (v6)
    {
      id v7 = [v6 metadata];
      if (v7)
      {
        uint64_t v8 = v7;
        uint64_t v9 = static Data._unconditionallyBridgeFromObjectiveC(_:)();
        uint64_t v11 = v10;

        uint64_t v12 = *a2;
        unint64_t v13 = a2[1];
        *a2 = v9;
        a2[1] = v11;
        sub_100040DBC(v12, v13);
      }
      else
      {
      }
    }
    else
    {
    }
  }
}

uint64_t sub_1002A0B3C()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1002A4A30;
  *(void *)(v4 + 24) = v3;
  v8[4] = sub_10001B3DC;
  v8[5] = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1003F44E4;
  v8[3] = &unk_1007A2B70;
  id v5 = _Block_copy(v8);
  id v6 = v1;
  swift_retain();
  swift_release();
  [v6 performBlockAndWait:v5];
  _Block_release(v5);
  LOBYTE(v5) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v5) {
    __break(1u);
  }
  return result;
}

void sub_1002A0CC0(uint64_t a1, void *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = (void *)sub_10029F7D0(a2);
    if (v5)
    {
      id v6 = v5;
      [v5 setMetadata:0];
      if (qword_1007F6CF0 != -1) {
        swift_once();
      }
      uint64_t v7 = type metadata accessor for Logger();
      sub_100026A54(v7, (uint64_t)qword_100805FD0);
      id v8 = v4;
      uint64_t v9 = Logger.logObject.getter();
      os_log_type_t v10 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v9, v10))
      {

        return;
      }
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      uint64_t v12 = swift_slowAlloc();
      *(_DWORD *)uint64_t v11 = 136446210;
      uint64_t v22 = v12;
      type metadata accessor for UUID();
      sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v13 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v13, v14, &v22);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "%{public}s MetadataPrint Metadata [REMOVED]", v11, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      if (qword_1007F6CF0 != -1) {
        swift_once();
      }
      uint64_t v15 = type metadata accessor for Logger();
      sub_100026A54(v15, (uint64_t)qword_100805FD0);
      id v6 = v4;
      uint64_t v16 = Logger.logObject.getter();
      os_log_type_t v17 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v16, v17))
      {
        unint64_t v18 = (uint8_t *)swift_slowAlloc();
        uint64_t v19 = swift_slowAlloc();
        *(_DWORD *)unint64_t v18 = 136446210;
        uint64_t v22 = v19;
        type metadata accessor for UUID();
        sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v20 = dispatch thunk of CustomStringConvertible.description.getter();
        sub_10011EA98(v20, v21, &v22);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v16, v17, "%{public}s MetadataPrint Unable to get self.store", v18, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return;
      }
    }
  }
}

uint64_t sub_1002A10D0(uint64_t a1, uint64_t a2)
{
  id v5 = *(void **)(v2 + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = (void *)swift_allocObject();
  _OWORD v7[2] = v6;
  v7[3] = v5;
  v7[4] = a1;
  uint64_t v7[5] = a2;
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = sub_1002A4A10;
  *(void *)(v8 + 24) = v7;
  v12[4] = sub_10001B3DC;
  v12[5] = v8;
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 1107296256;
  v12[2] = sub_1003F44E4;
  void v12[3] = &unk_1007A2AF8;
  uint64_t v9 = _Block_copy(v12);
  swift_bridgeObjectRetain();
  swift_retain();
  id v10 = v5;
  swift_release();
  [v10 performBlockAndWait:v9];
  _Block_release(v9);
  LOBYTE(v10) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  uint64_t result = swift_release();
  if (v10) {
    __break(1u);
  }
  return result;
}

void sub_1002A1268(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v7 = (void *)Strong;
    uint64_t v8 = sub_10029F7D0(a2);
    if (v8)
    {
      id v9 = (id)v8;
      if (a4) {
        NSString v10 = String._bridgeToObjectiveC()();
      }
      else {
        NSString v10 = 0;
      }
      [v9 setUserId:v10];

      if (qword_1007F6CF0 != -1) {
        swift_once();
      }
      uint64_t v19 = type metadata accessor for Logger();
      sub_100026A54(v19, (uint64_t)qword_100805FD0);
      swift_bridgeObjectRetain_n();
      id v20 = v7;
      unint64_t v21 = Logger.logObject.getter();
      os_log_type_t v22 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v21, v22))
      {

        swift_bridgeObjectRelease_n();
        return;
      }
      uint64_t v23 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      *(_DWORD *)uint64_t v23 = 136446466;
      type metadata accessor for UUID();
      sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v24 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v24, v25, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      swift_bridgeObjectRetain();
      sub_100010218(&qword_100803920);
      uint64_t v26 = String.init<A>(describing:)();
      sub_10011EA98(v26, v27, &v28);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v21, v22, "%{public}s MetadataPrint [SAVED USER_ID]: %s", (uint8_t *)v23, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      if (qword_1007F6CF0 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      sub_100026A54(v11, (uint64_t)qword_100805FD0);
      swift_bridgeObjectRetain_n();
      id v9 = v7;
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        *(_DWORD *)uint64_t v14 = 136446466;
        type metadata accessor for UUID();
        sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v15 = dispatch thunk of CustomStringConvertible.description.getter();
        sub_10011EA98(v15, v16, &v28);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v14 + 12) = 2080;
        swift_bridgeObjectRetain();
        sub_100010218(&qword_100803920);
        uint64_t v17 = String.init<A>(describing:)();
        sub_10011EA98(v17, v18, &v28);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "%{public}s Unable to set UserID Metadata: %s", (uint8_t *)v14, 0x16u);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        return;
      }

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1002A17A4()
{
  id v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  v9[0] = 0;
  v9[1] = 0;
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v9;
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = sub_1002A4998;
  *(void *)(v4 + 24) = v3;
  v8[4] = sub_10001AC84;
  v8[5] = v4;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 1107296256;
  v8[2] = sub_1003F44E4;
  v8[3] = &unk_1007A2A80;
  id v5 = _Block_copy(v8);
  swift_retain();
  swift_release();
  [v1 performBlockAndWait:v5];
  _Block_release(v5);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  uint64_t result = swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v7 = v9[0];
    swift_release();
    return v7;
  }
  return result;
}

void sub_1002A1938(uint64_t a1, uint64_t *a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    id v5 = *(id *)(Strong + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
    uint64_t v6 = (void *)sub_10029F7D0(v5);

    uint64_t v7 = &off_1007F6000;
    if (v6)
    {
      id v8 = [v6 userId];
      if (v8)
      {
        id v9 = v8;
        uint64_t v29 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        unint64_t v11 = v10;

        if (qword_1007F6CF0 != -1) {
          swift_once();
        }
        uint64_t v12 = type metadata accessor for Logger();
        sub_100026A54(v12, (uint64_t)qword_100805FD0);
        id v13 = v4;
        swift_bridgeObjectRetain_n();
        id v14 = v13;
        uint64_t v15 = Logger.logObject.getter();
        os_log_type_t v16 = static os_log_type_t.default.getter();
        if (os_log_type_enabled(v15, v16))
        {
          uint64_t v17 = swift_slowAlloc();
          uint64_t v30 = swift_slowAlloc();
          *(_DWORD *)uint64_t v17 = 136446466;
          type metadata accessor for UUID();
          sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
          uint64_t v18 = dispatch thunk of CustomStringConvertible.description.getter();
          sub_10011EA98(v18, v19, &v30);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();

          swift_bridgeObjectRelease();
          *(_WORD *)(v17 + 12) = 2080;
          swift_bridgeObjectRetain();
          uint64_t v20 = v29;
          sub_10011EA98(v29, v11, &v30);
          UnsafeMutableRawBufferPointer.copyMemory(from:)();
          swift_bridgeObjectRelease_n();
          _os_log_impl((void *)&_mh_execute_header, v15, v16, "%{public}s Metadata User_ID Print [FETCH USER_ID]: %s", (uint8_t *)v17, 0x16u);
          swift_arrayDestroy();
          swift_slowDealloc();
          uint64_t v7 = &off_1007F6000;
          swift_slowDealloc();
        }
        else
        {

          swift_bridgeObjectRelease_n();
          uint64_t v20 = v29;
        }
        *a2 = v20;
        a2[1] = v11;
        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
    if (v7[414] != (_UNKNOWN *)-1) {
      swift_once();
    }
    uint64_t v21 = type metadata accessor for Logger();
    sub_100026A54(v21, (uint64_t)qword_100805FD0);
    id v22 = v4;
    uint64_t v23 = Logger.logObject.getter();
    os_log_type_t v24 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v23, v24))
    {
      unint64_t v25 = (uint8_t *)swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)unint64_t v25 = 136446210;
      uint64_t v30 = v26;
      type metadata accessor for UUID();
      sub_1002A48E0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t v27 = dispatch thunk of CustomStringConvertible.description.getter();
      sub_10011EA98(v27, v28, &v30);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();

      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v23, v24, "%{public}s Metadata User_ID Print [FETCH USER_ID]: nil", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
    }
  }
}

void sub_1002A1DF4()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self mainBundle];
  id v5 = [v4 bundleIdentifier];

  if (v5)
  {
    uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v8 = v7;

    if (v6 == 0xD000000000000011 && v8 == 0x80000001006876D0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v9 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0) {
        return;
      }
    }
    static TaskPriority.utility.getter();
    uint64_t v10 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v3, 0, 1, v10);
    unint64_t v11 = *(void **)(v0 + OBJC_IVAR____TtC7Journal13CoreDataStack_container);
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = 0;
    void v12[3] = 0;
    v12[4] = v11;
    id v13 = v11;
    uint64_t v14 = sub_100146A8C((uint64_t)v3, (uint64_t)&unk_100806048, (uint64_t)v12);
    sub_10001457C((uint64_t)v3, &qword_1007FA1D0);
    *(void *)(v0 + OBJC_IVAR____TtC7Journal13CoreDataStack_remoteChangeObservationTask) = v14;
    swift_release();
  }
}

uint64_t sub_1002A1FE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[12] = a4;
  uint64_t v5 = type metadata accessor for ContinuousClock.Instant();
  v4[13] = v5;
  v4[14] = *(void *)(v5 - 8);
  v4[15] = swift_task_alloc();
  v4[16] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for ContinuousClock();
  v4[17] = v6;
  v4[18] = *(void *)(v6 - 8);
  v4[19] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for Notification();
  v4[20] = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  v4[21] = v8;
  v4[22] = *(void *)(v8 + 64);
  v4[23] = swift_task_alloc();
  v4[24] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v4[25] = v9;
  v4[26] = *(void *)(v9 - 8);
  v4[27] = swift_task_alloc();
  sub_100010218(&qword_100806050);
  v4[28] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for NSNotificationCenter.Notifications.Iterator();
  v4[29] = v10;
  v4[30] = *(void *)(v10 - 8);
  v4[31] = swift_task_alloc();
  return _swift_task_switch(sub_1002A226C, 0, 0);
}

uint64_t sub_1002A226C()
{
  uint64_t v1 = *(void **)(v0 + 96);
  uint64_t v2 = swift_allocObject();
  *(void *)(v0 + 256) = v2;
  id v3 = [v1 persistentStoreCoordinator];
  id v4 = [v3 currentPersistentHistoryTokenFromStores:0];

  *(void *)(v2 + 16) = v4;
  id v5 = [self defaultCenter];
  id v6 = [v1 persistentStoreCoordinator];
  NSNotificationCenter.notifications(named:object:)();

  NSNotificationCenter.Notifications.makeAsyncIterator()();
  swift_beginAccess();
  *(_DWORD *)(v0 + 60) = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
  uint64_t v7 = sub_1002A48E0(&qword_1007FBB50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v8;
  *uint64_t v8 = v0;
  v8[1] = sub_1002A2454;
  uint64_t v9 = *(void *)(v0 + 224);
  uint64_t v10 = *(void *)(v0 + 232);
  return dispatch thunk of AsyncIteratorProtocol.next()(v9, v10, v7);
}

uint64_t sub_1002A2454()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1002A27B8;
  }
  else {
    uint64_t v2 = sub_1002A2568;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1002A2568()
{
  if ((*(unsigned int (**)(void, uint64_t, void))(*(void *)(v0 + 168) + 48))(*(void *)(v0 + 224), 1, *(void *)(v0 + 160)) == 1)
  {
    (*(void (**)(void, void))(*(void *)(v0 + 240) + 8))(*(void *)(v0 + 248), *(void *)(v0 + 232));
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
    return v1();
  }
  else
  {
    uint64_t v3 = *(unsigned int *)(v0 + 60);
    uint64_t v4 = *(void *)(v0 + 256);
    uint64_t v6 = *(void *)(v0 + 208);
    uint64_t v5 = *(void *)(v0 + 216);
    uint64_t v7 = *(void *)(v0 + 200);
    id v8 = [*(id *)(v0 + 96) newBackgroundContext];
    *(void *)(v0 + 280) = v8;
    uint64_t v9 = swift_allocObject();
    *(void *)(v0 + 288) = v9;
    *(void *)(v9 + 16) = v4;
    *(void *)(v9 + 24) = v8;
    uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 104);
    *(void *)(v0 + 296) = v10;
    *(void *)(v0 + 304) = (v6 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
    v10(v5, v3, v7);
    swift_retain();
    v8;
    unint64_t v11 = (void *)swift_task_alloc();
    *(void *)(v0 + 312) = v11;
    uint64_t v12 = sub_100010218(&qword_100806058);
    *unint64_t v11 = v0;
    v11[1] = sub_1002A283C;
    uint64_t v13 = *(void *)(v0 + 216);
    return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 88, v13, sub_1002A483C, v9, v12);
  }
}

uint64_t sub_1002A27B8()
{
  *(void *)(v0 + 80) = *(void *)(v0 + 272);
  sub_100010218((uint64_t *)&unk_1007FC0D0);
  swift_dynamicCast();
  return swift_willThrowTypedImpl();
}

uint64_t sub_1002A283C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 216);
  uint64_t v3 = *(void *)(*v0 + 208);
  uint64_t v4 = *(void *)(*v0 + 200);
  swift_task_dealloc();
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 320) = v5;
  *(void *)(v1 + 328) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v4);
  return _swift_task_switch(sub_1002A29C4, 0, 0);
}

uint64_t sub_1002A29C4()
{
  unint64_t v1 = *(void *)(v0 + 88);
  *(void *)(v0 + 336) = v1;
  if (v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = (void *)_CocoaArrayWrapper.endIndex.getter();
    uint64_t v2 = (uint64_t)v3;
    *(void *)(v0 + 344) = v3;
    if (v3) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t v3 = (void *)swift_bridgeObjectRetain();
    *(void *)(v0 + 344) = v2;
    if (v2)
    {
LABEL_3:
      if (v2 < 1)
      {
        __break(1u);
      }
      else
      {
        *(void *)(v0 + 352) = 0;
        uint64_t v8 = *(void *)(v0 + 336);
        if ((v8 & 0xC000000000000001) != 0) {
          id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else {
          id v9 = *(id *)(v8 + 32);
        }
        *(void *)(v0 + 360) = v9;
        long long v31 = *(void (**)(uint64_t, void, uint64_t))(v0 + 296);
        unsigned int v30 = *(_DWORD *)(v0 + 60);
        uint64_t v10 = *(void *)(v0 + 216);
        uint64_t v11 = *(void *)(v0 + 192);
        uint64_t v29 = *(void *)(v0 + 200);
        uint64_t v12 = *(void *)(v0 + 184);
        uint64_t v13 = *(void *)(v0 + 160);
        uint64_t v14 = *(void *)(v0 + 168);
        uint64_t v15 = *(void **)(v0 + 96);
        id v16 = [v9 objectIDNotification];
        static Notification._unconditionallyBridgeFromObjectiveC(_:)();

        *(void *)(v0 + 368) = [v15 viewContext];
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v12, v11, v13);
        unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
        uint64_t v18 = swift_allocObject();
        *(void *)(v0 + 376) = v18;
        *(void *)(v18 + 16) = v15;
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v14 + 32))(v18 + v17, v12, v13);
        v31(v10, v30, v29);
        id v19 = v15;
        uint64_t v3 = (void *)swift_task_alloc();
        *(void *)(v0 + 384) = v3;
        *uint64_t v3 = v0;
        v3[1] = sub_1002A2DA4;
        uint64_t v4 = *(void *)(v0 + 216);
        uint64_t v7 = (char *)&type metadata for () + 8;
        uint64_t v5 = sub_1002A4870;
        uint64_t v6 = v18;
      }
      return NSManagedObjectContext.perform<A>(schedule:_:)(v3, v4, v5, v6, v7);
    }
  }
  swift_bridgeObjectRelease_n();
  uint64_t v21 = *(void *)(v0 + 112);
  uint64_t v20 = *(void *)(v0 + 120);
  uint64_t v22 = *(void *)(v0 + 104);
  ContinuousClock.init()();
  *(_OWORD *)(v0 + 64) = xmmword_1006E1020;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 56) = 1;
  uint64_t v23 = sub_1002A48E0((unint64_t *)&unk_100806060, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  dispatch thunk of Clock.now.getter();
  sub_1002A48E0(&qword_1007FE748, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)();
  os_log_type_t v24 = *(void (**)(uint64_t, uint64_t))(v21 + 8);
  *(void *)(v0 + 392) = v24;
  *(void *)(v0 + 400) = (v21 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v24(v20, v22);
  unint64_t v25 = (void *)swift_task_alloc();
  *(void *)(v0 + 408) = v25;
  *unint64_t v25 = v0;
  v25[1] = sub_1002A3388;
  uint64_t v27 = *(void *)(v0 + 128);
  uint64_t v26 = *(void *)(v0 + 136);
  return dispatch thunk of Clock.sleep(until:tolerance:)(v27, v0 + 40, v26, v23);
}

uint64_t sub_1002A2DA4()
{
  unint64_t v1 = *(void **)(*(void *)v0 + 368);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*(void *)v0 + 320);
  uint64_t v3 = *(void *)(*(void *)v0 + 216);
  uint64_t v4 = *(void *)(*(void *)v0 + 200);
  swift_task_dealloc();
  swift_release();

  v2(v3, v4);
  return _swift_task_switch(sub_1002A2F40, 0, 0);
}

uint64_t sub_1002A2F40()
{
  uint64_t v1 = *(void *)(v0 + 352);
  uint64_t v2 = *(void *)(v0 + 344);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 160);
  uint64_t v5 = *(void *)(v0 + 168);

  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v4);
  if (v1 + 1 != v2)
  {
    uint64_t v15 = *(void *)(v0 + 352) + 1;
    *(void *)(v0 + 352) = v15;
    uint64_t v16 = *(void *)(v0 + 336);
    if ((v16 & 0xC000000000000001) != 0) {
      id v17 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v17 = *(id *)(v16 + 8 * v15 + 32);
    }
    *(void *)(v0 + 360) = v17;
    id v42 = *(void (**)(uint64_t, void, uint64_t))(v0 + 296);
    unsigned int v41 = *(_DWORD *)(v0 + 60);
    uint64_t v29 = *(void *)(v0 + 216);
    uint64_t v30 = *(void *)(v0 + 192);
    uint64_t v40 = *(void *)(v0 + 200);
    uint64_t v31 = *(void *)(v0 + 184);
    uint64_t v32 = *(void *)(v0 + 160);
    uint64_t v33 = *(void *)(v0 + 168);
    uint64_t v34 = *(void **)(v0 + 96);
    id v35 = [v17 objectIDNotification];
    static Notification._unconditionallyBridgeFromObjectiveC(_:)();

    *(void *)(v0 + 368) = [v34 viewContext];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 16))(v31, v30, v32);
    unint64_t v36 = (*(unsigned __int8 *)(v33 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    uint64_t v37 = swift_allocObject();
    *(void *)(v0 + 376) = v37;
    *(void *)(v37 + 16) = v34;
    (*(void (**)(unint64_t, uint64_t, uint64_t))(v33 + 32))(v37 + v36, v31, v32);
    v42(v29, v41, v40);
    id v38 = v34;
    uint64_t v12 = swift_task_alloc();
    *(void *)(v0 + 384) = v12;
    *(void *)uint64_t v12 = v0;
    *(void *)(v12 + 8) = sub_1002A2DA4;
    uint64_t v8 = *(void *)(v0 + 216);
    uint64_t v11 = (char *)&type metadata for () + 8;
    id v9 = sub_1002A4870;
    uint64_t v10 = v37;
    return NSManagedObjectContext.perform<A>(schedule:_:)(v12, v8, v9, v10, v11);
  }
  uint64_t v6 = *(void *)(v0 + 336);
  uint64_t v7 = *(void *)(v0 + 344);
  swift_bridgeObjectRelease();
  uint64_t v12 = v7 - 1;
  uint64_t v13 = *(void *)(v0 + 336);
  if ((v6 & 0xC000000000000001) == 0)
  {
    if (v12 < *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v14 = *(id *)(v13 + 8 * v12 + 32);
      goto LABEL_8;
    }
    __break(1u);
    return NSManagedObjectContext.perform<A>(schedule:_:)(v12, v8, v9, v10, v11);
  }
  id v14 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
  swift_bridgeObjectRelease();
  id v18 = [v14 token];

  if (v18)
  {
    uint64_t v19 = *(void *)(v0 + 256);
    uint64_t v20 = *(void **)(v19 + 16);
    *(void *)(v19 + 16) = v18;
  }
  uint64_t v22 = *(void *)(v0 + 112);
  uint64_t v21 = *(void *)(v0 + 120);
  uint64_t v23 = *(void *)(v0 + 104);
  ContinuousClock.init()();
  *(_OWORD *)(v0 + 64) = xmmword_1006E1020;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 40) = 0;
  *(unsigned char *)(v0 + 56) = 1;
  uint64_t v24 = sub_1002A48E0((unint64_t *)&unk_100806060, (void (*)(uint64_t))&type metadata accessor for ContinuousClock);
  dispatch thunk of Clock.now.getter();
  sub_1002A48E0(&qword_1007FE748, (void (*)(uint64_t))&type metadata accessor for ContinuousClock.Instant);
  dispatch thunk of InstantProtocol.advanced(by:)();
  unint64_t v25 = *(void (**)(uint64_t, uint64_t))(v22 + 8);
  *(void *)(v0 + 392) = v25;
  *(void *)(v0 + 400) = (v22 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v25(v21, v23);
  uint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 408) = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_1002A3388;
  uint64_t v28 = *(void *)(v0 + 128);
  uint64_t v27 = *(void *)(v0 + 136);
  return dispatch thunk of Clock.sleep(until:tolerance:)(v28, v0 + 40, v27, v24);
}

uint64_t sub_1002A3388()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 416) = v0;
  swift_task_dealloc();
  if (v0)
  {
    (*(void (**)(void, void))(v2 + 392))(*(void *)(v2 + 128), *(void *)(v2 + 104));
    uint64_t v3 = sub_1002A35D4;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 144);
    uint64_t v4 = *(void *)(v2 + 152);
    uint64_t v6 = *(void *)(v2 + 136);
    (*(void (**)(void, void))(v2 + 392))(*(void *)(v2 + 128), *(void *)(v2 + 104));
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v3 = sub_1002A34E0;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002A34E0()
{
  uint64_t v1 = *(void *)(v0 + 224);

  sub_10001457C(v1, &qword_100806050);
  uint64_t v2 = sub_1002A48E0(&qword_1007FBB50, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Notifications.Iterator);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 264) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1002A2454;
  uint64_t v4 = *(void *)(v0 + 224);
  uint64_t v5 = *(void *)(v0 + 232);
  return dispatch thunk of AsyncIteratorProtocol.next()(v4, v5, v2);
}

uint64_t sub_1002A35D4()
{
  uint64_t v1 = (void *)v0[35];
  uint64_t v2 = v0[31];
  uint64_t v3 = v0[29];
  uint64_t v4 = v0[30];
  uint64_t v5 = v0[28];
  (*(void (**)(void, void))(v0[18] + 8))(v0[19], v0[17]);

  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  sub_10001457C(v5, &qword_100806050);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

void sub_1002A3700(uint64_t a1@<X0>, void *a2@<X1>, double **a3@<X8>)
{
  uint64_t v5 = (void *)(a1 + 16);
  id v6 = [self fetchRequest];
  if (v6)
  {
    sub_10001B284(0, (unint64_t *)&qword_100800A30);
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_1006D6270;
    *(void *)(v7 + 56) = &type metadata for String;
    unint64_t v8 = sub_10001B2C0();
    *(void *)(v7 + 32) = 0x4449656C646E7562;
    *(void *)(v7 + 40) = 0xE800000000000000;
    *(void *)(v7 + 96) = &type metadata for String;
    *(void *)(v7 + 104) = v8;
    *(void *)(v7 + 64) = v8;
    *(void *)(v7 + 72) = 0xD000000000000011;
    *(void *)(v7 + 80) = 0x80000001006876D0;
    id v9 = v6;
    uint64_t v10 = NSPredicate.init(format:_:)();
    [v9 setPredicate:v10];
  }
  uint64_t v11 = self;
  swift_beginAccess();
  id v12 = [v11 fetchHistoryAfterToken:*v5];
  [v12 setFetchRequest:v6];
  *(void *)&long long v23 = 0;
  id v13 = [a2 executeRequest:v12 error:&v23];
  id v14 = (void *)v23;
  if (!v13)
  {
    id v19 = (id)v23;
    _convertNSErrorToError(_:)();

    swift_willThrow();
    swift_errorRelease();
LABEL_9:
    id v17 = 0;
    long long v23 = 0u;
    long long v24 = 0u;
LABEL_10:
    sub_10001457C((uint64_t)&v23, &qword_1007FAD50);
    goto LABEL_11;
  }
  uint64_t v15 = v13;
  self;
  uint64_t v16 = swift_dynamicCastObjCClass();
  if (!v16)
  {
    id v20 = v14;

    goto LABEL_9;
  }
  id v17 = (void *)v16;
  id v18 = v14;
  if ([v17 result])
  {
    _bridgeAnyObjectToAny(_:)();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v22, 0, sizeof(v22));
  }
  sub_10002C4EC((uint64_t)v22, (uint64_t)&v23, &qword_1007FAD50);
  if (!*((void *)&v24 + 1)) {
    goto LABEL_10;
  }
  sub_100010218(&qword_100806058);
  if (swift_dynamicCast())
  {
    uint64_t v21 = *(double **)&v22[0];

    goto LABEL_12;
  }
LABEL_11:

  uint64_t v21 = _swiftEmptyArrayStorage;
LABEL_12:
  *a3 = v21;
}

void sub_1002A3A28(void *a1)
{
  id v2 = [a1 viewContext];
  Class isa = Notification._bridgeToObjectiveC()().super.isa;
  [v2 mergeChangesFromContextDidSaveNotification:isa];

  id v4 = [self defaultCenter];
  id v5 = [a1 viewContext];
  [v4 postNotificationName:NSManagedObjectContextDidSaveNotification object:v5];
}

uint64_t sub_1002A3B38()
{
  uint64_t result = type metadata accessor for UUID();
  if (v1 <= 0x3F) {
    return swift_updateClassMetadata2();
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CoreDataStack.ModelVersion(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002A3D08);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CoreDataStack.ModelVersion()
{
  return &type metadata for CoreDataStack.ModelVersion;
}

unint64_t sub_1002A3D44()
{
  unint64_t result = qword_100806030;
  if (!qword_100806030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100806030);
  }
  return result;
}

unint64_t sub_1002A3D98(Swift::String string)
{
  object = string._object;
  v2._uint64_t countAndFlagsBits = string._countAndFlagsBits;
  v2._object = object;
  unint64_t v3 = _findStringSwitchCase(cases:string:)((Swift::OpaquePointer)&off_100791250, v2);
  swift_bridgeObjectRelease();
  if (v3 >= 3) {
    return 3;
  }
  else {
    return v3;
  }
}

void sub_1002A3DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1002A3E10(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  Swift::String v56 = a4;
  uint64_t v45 = a3;
  uint64_t v50 = a2;
  uint64_t v55 = type metadata accessor for UUID();
  uint64_t v5 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  os_log_type_t v44 = (char *)v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218(&qword_100800950);
  __chkstk_darwin(v7 - 8);
  id v9 = (char *)v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v54 = (char *)v41 - v11;
  uint64_t v46 = v9;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10001B284(0, &qword_1008113A0);
    sub_100082CD4();
    id v9 = v46;
    Set.Iterator.init(_cocoa:)();
    a1 = v61;
    uint64_t v51 = v62;
    uint64_t v12 = v63;
    int64_t v13 = v64;
    unint64_t v14 = v65;
  }
  else
  {
    uint64_t v15 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v16 = *(void *)(a1 + 56);
    uint64_t v51 = a1 + 56;
    uint64_t v17 = ~v15;
    uint64_t v18 = -v15;
    if (v18 < 64) {
      uint64_t v19 = ~(-1 << v18);
    }
    else {
      uint64_t v19 = -1;
    }
    unint64_t v14 = v19 & v16;
    swift_bridgeObjectRetain();
    uint64_t v12 = v17;
    int64_t v13 = 0;
  }
  uint64_t v48 = a1 & 0x7FFFFFFFFFFFFFFFLL;
  v41[1] = v12;
  int64_t v49 = (unint64_t)(v12 + 64) >> 6;
  id v52 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  uint64_t v53 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56);
  uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  id v42 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v47 = (char *)&type metadata for Swift.AnyObject + 8;
  while (1)
  {
    unint64_t v57 = v14;
    int64_t v58 = v13;
    if ((a1 & 0x8000000000000000) == 0) {
      break;
    }
    uint64_t v22 = __CocoaSet.Iterator.next()();
    if (!v22) {
      goto LABEL_41;
    }
    uint64_t v60 = v22;
    sub_10001B284(0, &qword_1008113A0);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v23 = v66;
    swift_unknownObjectRelease();
    if (!v23) {
      goto LABEL_41;
    }
LABEL_33:
    v56(0);
    uint64_t v27 = swift_dynamicCastClass();
    if (v27)
    {
      uint64_t v28 = (void *)v27;
      id v29 = v23;
      id v30 = [v28 id];
      id v59 = v29;
      if (v30)
      {
        uint64_t v31 = v30;
        static UUID._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v32 = 0;
      }
      else
      {
        uint64_t v32 = 1;
      }
      uint64_t v33 = (uint64_t)v54;
      uint64_t v34 = v55;
      (*v53)(v9, v32, 1, v55);
      sub_10002C4EC((uint64_t)v9, v33, &qword_100800950);
      if ((*v52)(v33, 1, v34))
      {
        sub_10001457C(v33, &qword_100800950);
      }
      else
      {
        id v35 = v44;
        (*v43)(v44, v33, v34);
        sub_10001457C(v33, &qword_100800950);
        uint64_t v36 = v34;
        uint64_t v37 = UUID.uuidString.getter();
        uint64_t v39 = v38;
        (*v42)(v35, v36);
        if (v37 == v50 && v39 == v45)
        {
          swift_bridgeObjectRelease();

LABEL_41:
          sub_100082D3C();
          return;
        }
        char v40 = _stringCompareWithSmolCheck(_:_:expecting:)();
        swift_bridgeObjectRelease();

        id v9 = v46;
        if (v40) {
          goto LABEL_41;
        }
      }
    }
  }
  if (v14)
  {
    unint64_t v20 = __clz(__rbit64(v14));
    v14 &= v14 - 1;
    unint64_t v21 = v20 | (v13 << 6);
LABEL_32:
    id v23 = *(id *)(*(void *)(a1 + 48) + 8 * v21);
    if (!v23) {
      goto LABEL_41;
    }
    goto LABEL_33;
  }
  int64_t v24 = v13 + 1;
  if (!__OFADD__(v13, 1))
  {
    if (v24 >= v49) {
      goto LABEL_41;
    }
    unint64_t v25 = *(void *)(v51 + 8 * v24);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v24 + 1;
      if (v24 + 1 >= v49) {
        goto LABEL_41;
      }
      unint64_t v25 = *(void *)(v51 + 8 * v13);
      if (!v25)
      {
        int64_t v13 = v24 + 2;
        if (v24 + 2 >= v49) {
          goto LABEL_41;
        }
        unint64_t v25 = *(void *)(v51 + 8 * v13);
        if (!v25)
        {
          int64_t v13 = v24 + 3;
          if (v24 + 3 >= v49) {
            goto LABEL_41;
          }
          unint64_t v25 = *(void *)(v51 + 8 * v13);
          if (!v25)
          {
            int64_t v13 = v24 + 4;
            if (v24 + 4 >= v49) {
              goto LABEL_41;
            }
            unint64_t v25 = *(void *)(v51 + 8 * v13);
            if (!v25)
            {
              uint64_t v26 = v58 + 6;
              while (v49 != v26)
              {
                unint64_t v25 = *(void *)(v51 + 8 * v26++);
                if (v25)
                {
                  int64_t v13 = v26 - 1;
                  goto LABEL_31;
                }
              }
              goto LABEL_41;
            }
          }
        }
      }
    }
LABEL_31:
    unint64_t v14 = (v25 - 1) & v25;
    unint64_t v21 = __clz(__rbit64(v25)) + (v13 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

void sub_1002A43F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1002A4424(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_1002A4450(uint64_t a1, unint64_t a2)
{
  if ([self isMainThread])
  {
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100026A54(v4, (uint64_t)qword_100805FD0);
    swift_bridgeObjectRetain_n();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      swift_bridgeObjectRetain();
      sub_10011EA98(a1, a2, &v10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v8 = "On MAIN thread *%s* ";
LABEL_10:
      _os_log_impl((void *)&_mh_execute_header, v5, v6, v8, v7, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      return;
    }
  }
  else
  {
    if (qword_1007F6CF0 != -1) {
      swift_once();
    }
    uint64_t v9 = type metadata accessor for Logger();
    sub_100026A54(v9, (uint64_t)qword_100805FD0);
    swift_bridgeObjectRetain_n();
    uint64_t v5 = Logger.logObject.getter();
    os_log_type_t v6 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v7 = 136315138;
      swift_bridgeObjectRetain();
      sub_10011EA98(a1, a2, &v10);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease_n();
      uint64_t v8 = "On BG thread *%s* ";
      goto LABEL_10;
    }
  }

  swift_bridgeObjectRelease_n();
}

uint64_t sub_1002A470C()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002A474C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_1002A1FE4(a1, v4, v5, v6);
}

uint64_t sub_1002A4800()
{
  return swift_deallocObject();
}

void sub_1002A483C(double **a1@<X8>)
{
  sub_1002A3700(*(void *)(v1 + 16), *(void **)(v1 + 24), a1);
}

uint64_t sub_1002A4858()
{
  return sub_1002A4C04((uint64_t (*)(void))&type metadata accessor for Notification);
}

void sub_1002A4870()
{
  type metadata accessor for Notification();
  sub_1002A3A28(*(void **)(v0 + 16));
}

uint64_t sub_1002A48E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002A4928()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002A4960()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1002A4998()
{
  sub_1002A1938(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1002A49A0()
{
  return swift_deallocObject();
}

uint64_t sub_1002A49B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1002A49C0()
{
  return swift_release();
}

uint64_t sub_1002A49C8()
{
  swift_release();

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1002A4A10()
{
  sub_1002A1268(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40));
}

uint64_t sub_1002A4A1C()
{
  return swift_deallocObject();
}

void sub_1002A4A30()
{
  sub_1002A0CC0(*(void *)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1002A4A38()
{
  return swift_deallocObject();
}

void sub_1002A4A48()
{
  sub_1002A0A60(*(void *)(v0 + 16), *(uint64_t **)(v0 + 24));
}

uint64_t sub_1002A4A50()
{
  return swift_deallocObject();
}

uint64_t sub_1002A4A60()
{
  return swift_deallocObject();
}

void sub_1002A4AA8()
{
  sub_10029F9A0(*(void **)(v0 + 16), *(void *)(v0 + 24), *(NSObject ***)(v0 + 32), *(char **)(v0 + 40));
}

uint64_t sub_1002A4AB4()
{
  return swift_deallocObject();
}

void sub_1002A4AC4(char *a1@<X8>)
{
  sub_10029E2D0(*(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), a1);
}

uint64_t sub_1002A4AE4()
{
  uint64_t v1 = type metadata accessor for UUID();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

void sub_1002A4B74(uint8_t **a1@<X8>)
{
  sub_10029C7B0(*(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void **)(v1 + 40), a1);
}

uint64_t sub_1002A4B94()
{
  return swift_deallocObject();
}

void sub_1002A4BD4()
{
  sub_10029C034(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_1002A4BDC()
{
  return swift_deallocObject();
}

uint64_t sub_1002A4BEC()
{
  return sub_1002A4C04((uint64_t (*)(void))&type metadata accessor for Date);
}

uint64_t sub_1002A4C04(uint64_t (*a1)(void))
{
  uint64_t v2 = a1(0);
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);

  return swift_deallocObject();
}

void sub_1002A4CD8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v6 = *(char **)(v2 + 16);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_100298ECC(a1, a2, v6, v7);
}

uint64_t Journaling.EntryViewModel.accessibilityDescription.getter()
{
  uint64_t v2 = v0;
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_bookmarked) == 1)
  {
    if (qword_1007F79B0 != -1) {
      swift_once();
    }
    uint64_t v4 = *((void *)&xmmword_10083E508 + 1);
    uint64_t v3 = xmmword_10083E508;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v3 = 0;
    uint64_t v4 = 0;
  }
  uint64_t v5 = (void *)sub_100339674();
  if (v5)
  {
    uint64_t v6 = sub_10033AA5C(v5);
    char v8 = v7;

    uint64_t v10 = 0;
    if (v8)
    {
      unint64_t v11 = 0;
      if (v6)
      {
        uint64_t v64 = v6;
        char v65 = 1;
        uint64_t v10 = String.init<A>(describing:)();
        unint64_t v11 = v12;
      }
    }
    else
    {
      unint64_t v11 = 0;
    }
    unint64_t v14 = (void *)sub_100339674();
    if (v14 && (sub_10033AA5C(v14), v15))
    {
      uint64_t v16 = v15;
      id v17 = [v15 string];

      uint64_t inited = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v58 = v18;
    }
    else
    {
      uint64_t inited = 0;
      uint64_t v58 = 0;
    }
  }
  else
  {
    uint64_t inited = 0;
    uint64_t v58 = 0;
    uint64_t v10 = 0;
    unint64_t v11 = 0;
  }
  uint64_t v19 = (int64_t *)(v2 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_assets);
  swift_beginAccess();
  int64_t v20 = *v19;
  if ((unint64_t)*v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v21 = *(void *)((v20 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v59 = v10;
  uint64_t v60 = inited;
  unint64_t v61 = v11;
  if (v21 < 2)
  {
    if (v21 != 1)
    {
      uint64_t v10 = v4;
      uint64_t v23 = 0;
      uint64_t v25 = 0;
      goto LABEL_35;
    }
    int64_t v26 = *v19;
    if ((v26 & 0xC000000000000001) != 0)
    {
      swift_bridgeObjectRetain();
      uint64_t v28 = (unsigned char *)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
    }
    else
    {
      unint64_t v27 = *(void *)((v26 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (!v27)
      {
        __break(1u);
        goto LABEL_51;
      }
      uint64_t v28 = *(id *)(v26 + 32);
    }
    uint64_t v10 = v4;
    sub_100010218((uint64_t *)&unk_10080C370);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1006D6270;
    id v29 = *(void **)&v28[OBJC_IVAR____TtCC7Journal10Journaling5Asset_title];
    if (v29)
    {
      id v30 = [v29 string];
      uint64_t v31 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v33 = v32;
    }
    else
    {
      uint64_t v31 = 0;
      uint64_t v33 = 0;
    }
    *(void *)(inited + 32) = v31;
    *(void *)(inited + 40) = v33;
    *(void *)(inited + 48) = sub_100042B1C(v28[OBJC_IVAR____TtCC7Journal10Journaling5Asset_type]);
    *(void *)(inited + 56) = v34;
    _s5AssetCMa();
    uint64_t v1 = v28;
    sub_100010218(&qword_100806128);
    if ((swift_dynamicCast() & 1) == 0)
    {
      uint64_t v63 = 0;
      memset(v62, 0, sizeof(v62));
      sub_1002A5440((uint64_t)v62);
      goto LABEL_34;
    }
    sub_10001B3BC(v62, (uint64_t)&v64);
    uint64_t v35 = v66;
    uint64_t v36 = v67;
    sub_10002E0BC(&v64, v66);
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v36 + 8))(v35, v36);
    int64_t v26 = v37;
    unint64_t v11 = *(void *)(inited + 16);
    unint64_t v27 = *(void *)(inited + 24);
    int64_t v20 = v11 + 1;
    if (v11 < v27 >> 1)
    {
LABEL_32:
      *(void *)(inited + 16) = v20;
      uint64_t v38 = inited + 16 * v11;
      *(void *)(v38 + 32) = v21;
      *(void *)(v38 + 40) = v26;
      _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)&v64);
LABEL_34:
      uint64_t v23 = sub_10023DA38(8236, 0xE200000000000000, inited);
      uint64_t v25 = v39;
      swift_bridgeObjectRelease();

      goto LABEL_35;
    }
LABEL_51:
    uint64_t inited = (uint64_t)sub_1002A5F94((void *)(v27 > 1), v20, 1, (void *)inited);
    goto LABEL_32;
  }
  uint64_t v10 = v4;
  if (qword_1007F7998 != -1) {
    swift_once();
  }
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1006D6280;
  *(void *)(v22 + 56) = &type metadata for Int;
  *(void *)(v22 + 64) = &protocol witness table for Int;
  *(void *)(v22 + 32) = v21;
  uint64_t v23 = static String.localizedStringWithFormat(_:_:)();
  uint64_t v25 = v24;
  swift_bridgeObjectRelease();
LABEL_35:
  char v40 = *(void **)(v2 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_text);
  if (!v40)
  {
LABEL_43:
    uint64_t v47 = 0;
    uint64_t v49 = 0;
    goto LABEL_44;
  }
  id v41 = [v40 string];
  uint64_t v42 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  unint64_t v44 = v43;

  uint64_t v45 = HIBYTE(v44) & 0xF;
  if ((v44 & 0x2000000000000000) == 0) {
    uint64_t v45 = v42 & 0xFFFFFFFFFFFFLL;
  }
  if (!v45)
  {
    swift_bridgeObjectRelease();
    goto LABEL_43;
  }
  if (qword_1007F7A58 != -1) {
    swift_once();
  }
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1006D6280;
  *(void *)(v46 + 56) = &type metadata for String;
  *(void *)(v46 + 64) = sub_10001B2C0();
  *(void *)(v46 + 32) = v42;
  *(void *)(v46 + 40) = v44;
  uint64_t v47 = String.init(format:_:)();
  uint64_t v49 = v48;
LABEL_44:
  sub_100010218((uint64_t *)&unk_10080C370);
  uint64_t v50 = swift_initStackObject();
  *(_OWORD *)(v50 + 16) = xmmword_1006DC550;
  *(void *)(v50 + 32) = v3;
  *(void *)(v50 + 40) = v10;
  uint64_t v51 = *(void **)(v2 + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_title);
  if (v51)
  {
    id v52 = [v51 string];
    uint64_t v53 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    uint64_t v55 = v54;
  }
  else
  {
    uint64_t v53 = 0;
    uint64_t v55 = 0;
  }
  *(void *)(v50 + 48) = v53;
  *(void *)(v50 + 56) = v55;
  *(void *)(v50 + 64) = v59;
  *(void *)(v50 + 72) = v61;
  *(void *)(v50 + 80) = v60;
  *(void *)(v50 + 88) = v58;
  *(void *)(v50 + 96) = v23;
  *(void *)(v50 + 104) = v25;
  *(void *)(v50 + 112) = v47;
  *(void *)(v50 + 120) = v49;
  uint64_t v56 = sub_10023DA38(2570, 0xE200000000000000, v50);
  swift_setDeallocating();
  sub_100010218(&qword_100803920);
  swift_arrayDestroy();
  return v56;
}

uint64_t sub_1002A541C()
{
  return Journaling.EntryViewModel.accessibilityDescription.getter();
}

uint64_t sub_1002A5440(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_100806130);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

char *sub_1002A54A0(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218(&qword_1007FC170);
      uint64_t v10 = (char *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 4);
      int64_t v13 = v10 + 32;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (char *)&_swiftEmptyArrayStorage;
      int64_t v13 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[16 * v8 + 32]) {
          memmove(v13, a4 + 32, 16 * v8);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1002A778C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002A55B0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, &qword_1007FC1A0, type metadata accessor for Loc, type metadata accessor for Loc);
}

uint64_t sub_1002A55E4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, (uint64_t *)&unk_10080A130, (uint64_t (*)(void))&type metadata accessor for UUID, (uint64_t (*)(void))&type metadata accessor for UUID);
}

uint64_t sub_1002A5618(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    uint64_t v18 = &_swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100010218(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  uint64_t v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  void v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1002A89A0(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

double *sub_1002A5898(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218(&qword_1007FC188);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_1002A7B60(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002A59A8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, &qword_100806188, type metadata accessor for TranscriptViewModelSegment, type metadata accessor for TranscriptViewModelSegment);
}

uint64_t sub_1002A59DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, &qword_100802740, (uint64_t (*)(void))&type metadata accessor for URL, (uint64_t (*)(void))&type metadata accessor for URL);
}

void *sub_1002A5A10(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218(&qword_1007FC1A8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1002A7A74(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1002A5B20(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = a4[2];
    if (v7 <= v8) {
      int64_t v9 = a4[2];
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218(&qword_100806140);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * v11 - 64;
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= (void *)((char *)a4 + v8 + 32)) {
          memmove(v12, a4 + 4, v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1002A7880(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002A5C1C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, &qword_1008061A8, (uint64_t (*)(void))&type metadata accessor for CSSearchQuery.Results.Item, (uint64_t (*)(void))&type metadata accessor for CSSearchQuery.Results.Item);
}

uint64_t sub_1002A5C50(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, (uint64_t *)&unk_1007FC190, (uint64_t (*)(void))&type metadata accessor for Date, (uint64_t (*)(void))&type metadata accessor for Date);
}

void *sub_1002A5C84(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218(&qword_1007FC1D8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1002A7C4C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1002A5DA8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218((uint64_t *)&unk_1007FC0F0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1002A7D44(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002A5EB8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, (uint64_t *)&unk_1007FABC0, (uint64_t (*)(void))&type metadata accessor for IndexPath, (uint64_t (*)(void))&type metadata accessor for IndexPath);
}

void *sub_1002A5EEC(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1002A69AC(a1, a2, a3, a4, &qword_1007FC1C0);
}

uint64_t sub_1002A5EF8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, &qword_1007FC250, type metadata accessor for SuggestedDateItem.PhotoDateItem, type metadata accessor for SuggestedDateItem.PhotoDateItem);
}

uint64_t sub_1002A5F2C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, &qword_1007FC180, _s14DataAggregatorC5PlaceVMa, _s14DataAggregatorC5PlaceVMa);
}

uint64_t sub_1002A5F60(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, &qword_10080F280, _s10VisitAssetC9VisitDataVMa, _s10VisitAssetC9VisitDataVMa);
}

void *sub_1002A5F94(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218((uint64_t *)&unk_10080C370);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1002A7968(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002A60A4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A6BFC(a1, a2, a3, a4, &qword_1008061A0, &qword_1007FDE78);
}

void *sub_1002A60B8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218(&qword_1007FC1B0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 104);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[13 * v8 + 4]) {
          memmove(v12, a4 + 4, 104 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1002A7F94(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1002A61E4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218(&qword_1007FC240);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1002A7B60(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002A62F4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, &qword_1007FC1B8, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa, (uint64_t (*)(void))_s30MOSuggestionAssetMapsClustererC7ClusterVMa);
}

uint64_t sub_1002A6328(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, &qword_100806168, (uint64_t (*)(void))&type metadata accessor for DateComponents, (uint64_t (*)(void))&type metadata accessor for DateComponents);
}

uint64_t sub_1002A635C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, &qword_1008061F8, (uint64_t (*)(void))&type metadata accessor for IntentFile, (uint64_t (*)(void))&type metadata accessor for IntentFile);
}

uint64_t sub_1002A6390(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, &qword_1007FF5A8, (uint64_t (*)(void))type metadata accessor for JournalEntity, (uint64_t (*)(void))type metadata accessor for JournalEntity);
}

void *sub_1002A63C4(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1002A6FEC(a1, a2, a3, a4, &qword_1007FC1C8, &qword_1007FC1D0);
}

void *sub_1002A63D8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218(&qword_100800CB0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      void v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1002A8088(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1002A6500(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218(&qword_1007FC110);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      void v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1002A7B60(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1002A6610(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1002A6748(a1, a2, a3, a4, &qword_100806138, (uint64_t *)&unk_1007FC130);
}

double *sub_1002A6624(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218(&qword_1007FC160);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= (double *)((char *)a4 + 4 * v8 + 32)) {
          memmove(v13, a4 + 4, 4 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_1002A76A0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1002A6734(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1002A6748(a1, a2, a3, a4, &qword_100806158, &qword_100806160);
}

char *sub_1002A6748(char *result, int64_t a2, char a3, char *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = *((void *)a4 + 3);
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = *((void *)a4 + 2);
    if (v10 <= v11) {
      uint64_t v12 = *((void *)a4 + 2);
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_100010218(a5);
      uint64_t v13 = (char *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 17;
      }
      *((void *)v13 + 2) = v11;
      *((void *)v13 + 3) = 2 * (v15 >> 4);
      uint64_t v16 = v13 + 32;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = (char *)&_swiftEmptyArrayStorage;
      uint64_t v16 = (char *)&_swiftEmptyArrayStorage + 32;
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[16 * v11 + 32]) {
          memmove(v16, a4 + 32, 16 * v11);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_24;
      }
    }
    sub_1002A86A8(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

double *sub_1002A6864(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218(&qword_100806190);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1002A82A0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1002A698C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1002A6748(a1, a2, a3, a4, &qword_1008061F0, (uint64_t *)&unk_1007FC130);
}

void *sub_1002A69A0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1002A69AC(a1, a2, a3, a4, &qword_100805088);
}

void *sub_1002A69AC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = a4[2];
    if (v8 <= v9) {
      int64_t v10 = a4[2];
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      sub_100010218(a5);
      size_t v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size(v11);
      void v11[2] = v9;
      v11[3] = 2 * v12 - 64;
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= (void *)((char *)a4 + v9 + 32)) {
          memmove(v13, a4 + 4, v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      size_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1002A7880(0, v9, (char *)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

double *sub_1002A6AA4(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218(&qword_1008061E0);
      int64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      int64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_1002A8398(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002A6BB4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, &qword_100806150, type metadata accessor for VisitDuration, type metadata accessor for VisitDuration);
}

uint64_t sub_1002A6BE8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A6BFC(a1, a2, a3, a4, &qword_1007FC150, &qword_1007FC158);
}

uint64_t sub_1002A6BFC(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = *(void *)(a4 + 24);
    uint64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v10 = a2;
      }
    }
  }
  else
  {
    uint64_t v10 = a2;
  }
  uint64_t v11 = *(void *)(a4 + 16);
  if (v10 <= v11) {
    uint64_t v12 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_100010218(a5);
  uint64_t v13 = *(void *)(sub_100010218(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (double *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14 || (v17 - v15 == 0x8000000000000000 ? (BOOL v18 = v14 == -1) : (BOOL v18 = 0), v18))
  {
LABEL_29:
    uint64_t result = _assertionFailure(_:_:file:line:flags:)();
    __break(1u);
    return result;
  }
  *((void *)v16 + 2) = v11;
  *((void *)v16 + 3) = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_100010218(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  unint64_t v21 = (unint64_t)v16 + v20;
  if (a1)
  {
    if ((unint64_t)v16 < a4 || v21 >= a4 + v20 + *(void *)(v19 + 72) * v11)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != (double *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1002A7E3C(0, v11, v21, a4, a6);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v16;
}

uint64_t sub_1002A6E68(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, &qword_100806148, type metadata accessor for PendingPhotoAsset, type metadata accessor for PendingPhotoAsset);
}

char *sub_1002A6E9C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1002A6748(a1, a2, a3, a4, &qword_1007FC128, (uint64_t *)&unk_1007FC130);
}

double *sub_1002A6EB0(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218(&qword_1007FD150);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1002A848C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1002A6FD8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1002A6FEC(a1, a2, a3, a4, &qword_1008061C8, &qword_1008061D0);
}

void *sub_1002A6FEC(void *result, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  char v8 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v10 = a2;
    goto LABEL_8;
  }
  unint64_t v9 = a4[3];
  uint64_t v10 = v9 >> 1;
  if ((uint64_t)(v9 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v10 + 0x4000000000000000 >= 0)
  {
    uint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v10 = a2;
    }
LABEL_8:
    uint64_t v11 = a4[2];
    if (v10 <= v11) {
      uint64_t v12 = a4[2];
    }
    else {
      uint64_t v12 = v10;
    }
    if (v12)
    {
      sub_100010218(a5);
      uint64_t v13 = (void *)swift_allocObject();
      int64_t v14 = j__malloc_size(v13);
      uint64_t v15 = v14 - 32;
      if (v14 < 32) {
        uint64_t v15 = v14 - 1;
      }
      v13[2] = v11;
      v13[3] = 2 * (v15 >> 5);
      uint64_t v16 = v13 + 4;
      if (v8) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v13 = _swiftEmptyArrayStorage;
      uint64_t v16 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v13 != a4 || v16 >= &a4[4 * v11 + 4]) {
          memmove(v16, a4 + 4, 32 * v11);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1002A8198(0, v11, (unint64_t)v16, (uint64_t)a4, a6);
LABEL_24:
    swift_bridgeObjectRelease();
    return v13;
  }
  __break(1u);
  return result;
}

void *sub_1002A7108(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_1002A69AC(a1, a2, a3, a4, &qword_1007FD1B0);
}

uint64_t sub_1002A7114(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, &qword_1008061C0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
}

char *sub_1002A7148(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1002A6748(a1, a2, a3, a4, &qword_1008061B8, (uint64_t *)&unk_1007FC130);
}

char *sub_1002A715C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1002A6748(a1, a2, a3, a4, &qword_1008061B0, (uint64_t *)&unk_1007FC130);
}

double *sub_1002A7170(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218(&qword_1007FC268);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 29;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 2);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= (double *)((char *)a4 + 4 * v8 + 32)) {
          memmove(v13, a4 + 4, 4 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_1002A76A0(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

double *sub_1002A7280(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218(&qword_100806170);
      uint64_t v10 = (double *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0.0;
        goto LABEL_24;
      }
    }
    sub_1002A859C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1002A7390(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1002A6748(a1, a2, a3, a4, &qword_100806180, (uint64_t *)&unk_1007FC130);
}

double *sub_1002A73A4(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218(&qword_1008061D8);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1002A87B0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1002A74C8(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1002A6748(a1, a2, a3, a4, &qword_100806198, (uint64_t *)&unk_1007FC130);
}

uint64_t sub_1002A74DC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, (uint64_t *)&unk_1007FC270, (uint64_t (*)(void))type metadata accessor for InsightsMosaicLayout.Row, (uint64_t (*)(void))type metadata accessor for InsightsMosaicLayout.Row);
}

uint64_t sub_1002A7510(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, &qword_100806200, (uint64_t (*)(void))&type metadata accessor for LayoutSubview, (uint64_t (*)(void))&type metadata accessor for LayoutSubview);
}

double *sub_1002A7544(double *result, int64_t a2, char a3, double *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = *((void *)a4 + 3);
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = *((void *)a4 + 2);
    if (v7 <= v8) {
      uint64_t v9 = *((void *)a4 + 2);
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_100010218(&qword_100806210);
      uint64_t v10 = (double *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      *((void *)v10 + 2) = v8;
      *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0.0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1002A88A8(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002A766C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1002A5618(a1, a2, a3, a4, &qword_100806208, (uint64_t (*)(void))type metadata accessor for CenteredHFlowLayout.Item, (uint64_t (*)(void))type metadata accessor for CenteredHFlowLayout.Item);
}

char *sub_1002A76A0(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    char v5 = (char *)(a4 + 4 * a1 + 32);
    size_t v6 = 4 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002A778C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1002A7880(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002A7968(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_100010218(&qword_100803920);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1002A7A74(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

char *sub_1002A7B60(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)_fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002A7C4C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002A7D44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002A7E3C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(sub_100010218(a5) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002A7F94(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 104 * a1 + 32;
    unint64_t v6 = a3 + 104 * v4;
    if (v5 >= v6 || v5 + 104 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002A8088(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_100010218(&qword_1008061E8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002A8198(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 32 * a1 + 32;
    unint64_t v7 = a3 + 32 * v5;
    if (v6 >= v7 || v6 + 32 * v5 <= a3)
    {
      sub_100010218(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002A82A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002A8398(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002A848C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_100010218(&qword_1007FD148);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002A859C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      sub_100010218(&qword_100806178);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002A86A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = a4 + 16 * a1 + 32;
    unint64_t v7 = a3 + 16 * v5;
    if (v6 >= v7 || v6 + 16 * v5 <= a3)
    {
      sub_100010218(a5);
      swift_arrayInitWithCopy();
      return v7;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002A87B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002A88A8(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002A89A0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

id sub_1002A8BB0()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for FullScreenAudioTranscriptionView();
  return [super dealloc];
}

uint64_t type metadata accessor for FullScreenAudioTranscriptionView()
{
  return self;
}

void sub_1002A8C64()
{
  if (*(void *)(v0 + OBJC_IVAR____TtC7Journal32FullScreenAudioTranscriptionView_recordingViewModel))
  {
    uint64_t KeyPath = swift_getKeyPath();
    __chkstk_darwin(KeyPath);
    sub_1002A8F2C();
    swift_retain();
    ObservationRegistrar.withMutation<A, B, C>(of:keyPath:_:)();
    swift_release();
    swift_release();
  }
}

void sub_1002A8D9C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Journal32FullScreenAudioTranscriptionView_recordingViewModel);
  if (v1)
  {
    swift_getKeyPath();
    sub_1002A8F2C();
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v2 = *(void *)(v1 + 64);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v2 + 136))(ObjectType, v2);
    swift_unknownObjectRelease();
  }
}

void sub_1002A8E5C()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Journal32FullScreenAudioTranscriptionView_recordingViewModel);
  if (v1)
  {
    swift_getKeyPath();
    sub_1002A8F2C();
    swift_retain();
    ObservationRegistrar.access<A, B>(_:keyPath:)();
    swift_release();
    uint64_t v2 = *(void *)(v1 + 64);
    swift_unknownObjectRetain();
    swift_release();
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v2 + 128))(ObjectType, v2);
    swift_unknownObjectRelease();
  }
}

unint64_t sub_1002A8F2C()
{
  unint64_t result = qword_10080A400;
  if (!qword_10080A400)
  {
    type metadata accessor for RecordingViewModel();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_10080A400);
  }
  return result;
}

uint64_t sub_1002A8F8C(uint64_t a1)
{
  uint64_t v176 = a1;
  uint64_t v138 = type metadata accessor for Date.FormatStyle.Symbol.Year();
  uint64_t v137 = *(void *)(v138 - 8);
  __chkstk_darwin(v138);
  os_log_type_t v136 = (char *)&v130 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v142 = type metadata accessor for Date.FormatStyle.Symbol.Month();
  uint64_t v141 = *(void *)(v142 - 8);
  __chkstk_darwin(v142);
  id v140 = (char *)&v130 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Calendar.Component();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = v4;
  __chkstk_darwin(v3);
  uint64_t v147 = (char *)&v130 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = type metadata accessor for TimeZone();
  uint64_t v177 = *(void *)(v174 - 8);
  __chkstk_darwin(v174);
  uint64_t v161 = (char *)&v130 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for Locale();
  __chkstk_darwin(v8 - 8);
  uint64_t v160 = (char *)&v130 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for FormatStyleCapitalizationContext();
  __chkstk_darwin(v10 - 8);
  uint64_t v159 = (char *)&v130 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_100010218(&qword_1007F9538);
  __chkstk_darwin(v12 - 8);
  double v158 = (char *)&v130 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100010218(&qword_1007F9540);
  __chkstk_darwin(v14 - 8);
  uint64_t v157 = (char *)&v130 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v152 = type metadata accessor for Date.FormatStyle();
  uint64_t v151 = *(void *)(v152 - 8);
  __chkstk_darwin(v152);
  uint64_t v135 = (char *)&v130 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v139 = (char *)&v130 - v18;
  __chkstk_darwin(v19);
  uint64_t v162 = (char *)&v130 - v20;
  uint64_t v21 = sub_100010218(&qword_1007FFBB0);
  __chkstk_darwin(v21 - 8);
  id v173 = (char *)&v130 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100010218(&qword_1007FFBB8);
  __chkstk_darwin(v23 - 8);
  uint64_t v171 = (char *)&v130 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v181 = type metadata accessor for DateComponents();
  uint64_t v25 = *(void *)(v181 - 8);
  __chkstk_darwin(v181);
  unint64_t v27 = (char *)&v130 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v28 - 8);
  uint64_t v163 = (char *)&v130 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v30);
  uint64_t v166 = (char *)&v130 - v31;
  __chkstk_darwin(v32);
  char v175 = (char *)&v130 - v33;
  uint64_t v182 = type metadata accessor for Date();
  uint64_t v178 = *(void *)(v182 - 8);
  __chkstk_darwin(v182);
  objc_super v145 = (char *)&v130 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  os_log_type_t v146 = (char *)&v130 - v36;
  __chkstk_darwin(v37);
  uint64_t v150 = (char *)&v130 - v38;
  __chkstk_darwin(v39);
  NSString v156 = (char *)&v130 - v40;
  __chkstk_darwin(v41);
  uint64_t v154 = (char *)&v130 - v42;
  __chkstk_darwin(v43);
  id v155 = (char *)&v130 - v44;
  __chkstk_darwin(v45);
  uint64_t v164 = (char *)&v130 - v46;
  __chkstk_darwin(v47);
  uint64_t v167 = (char *)&v130 - v48;
  __chkstk_darwin(v49);
  char v168 = (char *)&v130 - v50;
  uint64_t v51 = type metadata accessor for Calendar();
  uint64_t v179 = *(void *)(v51 - 8);
  uint64_t v180 = v51;
  __chkstk_darwin(v51);
  uint64_t v153 = (char *)&v130 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v53);
  uint64_t v55 = (char *)&v130 - v54;
  static Calendar.current.getter();
  sub_100010218(&qword_1007FB058);
  uint64_t v56 = *(void *)(v4 + 72);
  unint64_t v57 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v58 = 2 * v56;
  uint64_t v59 = swift_allocObject();
  *(_OWORD *)(v59 + 16) = xmmword_1006D7C30;
  unint64_t v60 = v59 + v57;
  uint64_t v148 = v5;
  uint64_t v61 = v5 + 104;
  uint64_t v62 = *(void (**)(unint64_t))(v5 + 104);
  unsigned int v144 = enum case for Calendar.Component.year(_:);
  v62(v60);
  uint64_t v63 = v60 + v56;
  uint64_t v64 = v175;
  ((void (*)(uint64_t, void, uint64_t))v62)(v63, enum case for Calendar.Component.month(_:), v3);
  id v143 = v62;
  ((void (*)(unint64_t, void, uint64_t))v62)(v60 + v58, enum case for Calendar.Component.day(_:), v3);
  sub_1000F5AEC(v59);
  swift_setDeallocating();
  uint64_t v149 = v3;
  uint64_t v65 = v178;
  swift_arrayDestroy();
  swift_deallocClassInstance();
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  Calendar.date(from:)();
  uint64_t v169 = *(void (**)(char *, uint64_t))(v25 + 8);
  uint64_t v170 = v27;
  uint64_t v172 = v25 + 8;
  v169(v27, v181);
  uint64_t v66 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48);
  if (v66(v64, 1, v182) == 1) {
    goto LABEL_4;
  }
  uint64_t v130 = v61;
  uint64_t v67 = *(void (**)(char *, char *, uint64_t))(v65 + 32);
  uint64_t v68 = v168;
  char v175 = (char *)v66;
  uint64_t v69 = v182;
  uint64_t v134 = v65 + 32;
  uint64_t v133 = v67;
  v67(v168, v64, v182);
  uint64_t v132 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v179 + 56);
  v132(v171, 1, 1, v180);
  int v70 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v177 + 56);
  v177 += 56;
  uint64_t v131 = v70;
  v70(v173, 1, 1, v174);
  uint64_t v71 = v170;
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  uint64_t v64 = v166;
  Calendar.date(byAdding:to:wrappingComponents:)();
  v169(v71, v181);
  uint64_t v72 = v69;
  NSString v73 = (uint64_t (*)(char *, uint64_t, uint64_t))v175;
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v175)(v64, 1, v72) != 1)
  {
    uint64_t v77 = v182;
    v133(v167, v64, v182);
    v132(v171, 1, 1, v180);
    v131(v173, 1, 1, v174);
    id v78 = v170;
    DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
    uint64_t v79 = v163;
    Calendar.date(byAdding:to:wrappingComponents:)();
    v169(v78, v181);
    Swift::Int v80 = v73;
    uint64_t v81 = (uint64_t)v79;
    int v82 = v80(v79, 1, v77);
    uint64_t v83 = v77;
    if (v82 == 1)
    {
      uint64_t v84 = *(void (**)(char *, uint64_t))(v178 + 8);
      v84(v167, v77);
      v84(v68, v77);
      (*(void (**)(char *, uint64_t))(v179 + 8))(v55, v180);
      uint64_t v74 = v81;
      goto LABEL_5;
    }
    uint64_t v181 = (uint64_t)v55;
    v133(v164, (char *)v81, v77);
    uint64_t v85 = type metadata accessor for Date.FormatStyle.DateStyle();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v157, 1, 1, v85);
    uint64_t v86 = type metadata accessor for Date.FormatStyle.TimeStyle();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v158, 1, 1, v86);
    static FormatStyleCapitalizationContext.standalone.getter();
    static Locale.autoupdatingCurrent.getter();
    static Calendar.autoupdatingCurrent.getter();
    static TimeZone.autoupdatingCurrent.getter();
    Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
    uint64_t v87 = v165;
    char v88 = static Date.< infix(_:_:)();
    uint64_t v89 = v178;
    id v90 = *(void (**)(char *, uint64_t, uint64_t))(v178 + 16);
    unint64_t v91 = v155;
    v90(v155, v87, v77);
    id v92 = v154;
    v90(v154, (uint64_t)v68, v77);
    if (v88)
    {
      sub_1002AEB9C((unint64_t *)&qword_1007FD120, (void (*)(uint64_t))&type metadata accessor for Date);
      uint64_t v93 = v92;
      char v94 = dispatch thunk of static Comparable.< infix(_:_:)();
      unint64_t v95 = *(void (**)(char *, uint64_t))(v89 + 8);
      v95(v93, v83);
      uint64_t v96 = v91;
      uint64_t v97 = v95;
      v95(v96, v83);
      uint64_t v98 = v156;
      if ((v94 & 1) == 0)
      {
        uint64_t v99 = v167;
        if (qword_1007F78A8 != -1) {
          swift_once();
        }
        uint64_t v75 = xmmword_10083E2F8;
        uint64_t v100 = *(void (**)(char *, uint64_t))(v151 + 8);
        swift_bridgeObjectRetain();
        v100(v162, v152);
        v95(v164, v83);
        v95(v99, v83);
        v95(v168, v83);
LABEL_20:
        (*(void (**)(uint64_t, uint64_t))(v179 + 8))(v181, v180);
        return v75;
      }
    }
    else
    {
      uint64_t v101 = *(void (**)(char *, uint64_t))(v89 + 8);
      v101(v92, v77);
      id v102 = v91;
      uint64_t v97 = v101;
      v101(v102, v77);
      uint64_t v98 = v156;
    }
    uint64_t v103 = v165;
    char v104 = static Date.< infix(_:_:)();
    v90(v98, v103, v83);
    id v105 = v150;
    v90(v150, (uint64_t)v164, v83);
    if (v104)
    {
      sub_1002AEB9C((unint64_t *)&qword_1007FD120, (void (*)(uint64_t))&type metadata accessor for Date);
      char v106 = dispatch thunk of static Comparable.< infix(_:_:)();
      v97(v105, v83);
      v97(v98, v83);
      if ((v106 & 1) == 0)
      {
        if (qword_1007F78B0 != -1) {
          swift_once();
        }
        uint64_t v75 = xmmword_10083E308;
        uint64_t v107 = *(void (**)(char *, uint64_t))(v151 + 8);
        swift_bridgeObjectRetain();
        v107(v162, v152);
        v97(v164, v83);
        v97(v167, v83);
        v97(v168, v83);
        goto LABEL_20;
      }
    }
    else
    {
      v97(v105, v83);
      v97(v98, v83);
    }
    uint64_t v108 = v147;
    uint64_t v109 = v149;
    ((void (*)(char *, void, uint64_t))v143)(v147, v144, v149);
    uint64_t v110 = v165;
    uint64_t v111 = Calendar.compare(_:to:toGranularity:)();
    (*(void (**)(char *, uint64_t))(v148 + 8))(v108, v109);
    id v112 = v146;
    v90(v146, v110, v83);
    id v113 = v145;
    id v114 = v167;
    v90(v145, (uint64_t)v167, v83);
    if (v111)
    {
      v97(v113, v83);
      v97(v112, v83);
      uint64_t v115 = v179;
    }
    else
    {
      uint64_t v116 = static Date.< infix(_:_:)();
      v97(v113, v83);
      v97(v112, v83);
      uint64_t v115 = v179;
      if (v116)
      {
        uint64_t v117 = v140;
        static Date.FormatStyle.Symbol.Month.wide.getter();
        uint64_t v118 = v139;
        id v119 = v162;
        Date.FormatStyle.month(_:)();
        (*(void (**)(char *, uint64_t))(v141 + 8))(v117, v142);
        sub_1002AEB9C((unint64_t *)&qword_1007F9588, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
        uint64_t v120 = v152;
        Date.formatted<A>(_:)();
        os_log_type_t v121 = *(void (**)(char *, uint64_t))(v151 + 8);
        v121(v118, v120);
        v121(v119, v120);
        v97(v164, v83);
        v97(v114, v83);
        v97(v168, v83);
LABEL_27:
        (*(void (**)(uint64_t, uint64_t))(v115 + 8))(v181, v180);
        return v183;
      }
    }
    int v122 = v140;
    static Date.FormatStyle.Symbol.Month.wide.getter();
    uint64_t v123 = v135;
    uint64_t v124 = v162;
    Date.FormatStyle.month(_:)();
    (*(void (**)(char *, uint64_t))(v141 + 8))(v122, v142);
    unint64_t v125 = v136;
    static Date.FormatStyle.Symbol.Year.defaultDigits.getter();
    uint64_t v126 = v139;
    Date.FormatStyle.year(_:)();
    (*(void (**)(char *, uint64_t))(v137 + 8))(v125, v138);
    id v127 = *(void (**)(char *, uint64_t))(v151 + 8);
    uint64_t v128 = v123;
    uint64_t v129 = v152;
    v127(v128, v152);
    sub_1002AEB9C((unint64_t *)&qword_1007F9588, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
    Date.formatted<A>(_:)();
    v127(v126, v129);
    v127(v124, v129);
    v97(v164, v83);
    v97(v167, v83);
    v97(v168, v83);
    goto LABEL_27;
  }
  (*(void (**)(char *, uint64_t))(v65 + 8))(v68, v182);
LABEL_4:
  (*(void (**)(char *, uint64_t))(v179 + 8))(v55, v180);
  uint64_t v74 = (uint64_t)v64;
LABEL_5:
  sub_1000AC7D4(v74);
  return 0;
}

uint64_t sub_1002AA5EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v1 - 8);
  uint64_t v31 = (uint64_t)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v29 = (char *)&v25 - v4;
  uint64_t v30 = type metadata accessor for Calendar();
  uint64_t v5 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for DateComponents();
  uint64_t v26 = *(void *)(v8 - 8);
  uint64_t v27 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  static Calendar.current.getter();
  sub_100010218(&qword_1007FB058);
  uint64_t v11 = type metadata accessor for Calendar.Component();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1006D7C30;
  unint64_t v16 = v15 + v14;
  uint64_t v17 = *(void (**)(unint64_t, void, uint64_t))(v12 + 104);
  v17(v16, enum case for Calendar.Component.year(_:), v11);
  v17(v16 + v13, enum case for Calendar.Component.month(_:), v11);
  uint64_t v18 = (uint64_t)v29;
  v17(v16 + 2 * v13, enum case for Calendar.Component.day(_:), v11);
  sub_1000F5AEC(v15);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  Calendar.dateComponents(_:from:)();
  swift_bridgeObjectRelease();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v20 = v30;
  v19(v7, v30);
  static Calendar.current.getter();
  Calendar.date(from:)();
  v19(v7, v20);
  uint64_t v21 = v31;
  sub_100045944(v18, v31);
  uint64_t v22 = type metadata accessor for Date();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1000AC7D4(v18);
    (*(void (**)(char *, uint64_t))(v26 + 8))(v10, v27);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 32))(v28, v21, v22);
  }
  return result;
}

uint64_t sub_1002AA9E0()
{
  uint64_t v0 = sub_1002AAEE8();
  if (v1) {
    return 0;
  }
  if (v0 == 1)
  {
    if (qword_1007F78B0 != -1) {
      swift_once();
    }
    uint64_t v2 = &xmmword_10083E308;
    goto LABEL_11;
  }
  if (!v0)
  {
    if (qword_1007F78A8 != -1) {
      swift_once();
    }
    uint64_t v2 = &xmmword_10083E2F8;
LABEL_11:
    uint64_t v3 = *(void *)v2;
    swift_bridgeObjectRetain();
    return v3;
  }
  if ((unint64_t)(v0 - 2) > 0x1B) {
    return sub_1002AC7C4();
  }
  else {
    return sub_1002AB2D8();
  }
}

BOOL sub_1002AAAC8()
{
  uint64_t v0 = type metadata accessor for Calendar.Component();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Calendar();
  uint64_t v28 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v7 - 8);
  uint64_t v27 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v27 - v10;
  uint64_t v12 = type metadata accessor for Date();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v27 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v27 - v20;
  Date.init()();
  static Calendar.current.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Calendar.Component.day(_:), v0);
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  uint64_t v22 = v6;
  uint64_t v23 = (uint64_t)v27;
  (*(void (**)(char *, uint64_t))(v28 + 8))(v22, v29);
  sub_100045944((uint64_t)v11, v23);
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v15, v21, v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v23, 1, v12) == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v18, v15, v12);
    sub_1000AC7D4(v23);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v18, v23, v12);
  }
  sub_1002AEB9C((unint64_t *)&qword_1007FD120, (void (*)(uint64_t))&type metadata accessor for Date);
  char v24 = dispatch thunk of static Comparable.< infix(_:_:)();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v13 + 8);
  v25(v18, v12);
  sub_1000AC7D4((uint64_t)v11);
  v25(v21, v12);
  return (v24 & 1) == 0;
}

uint64_t sub_1002AAEE8()
{
  uint64_t v0 = type metadata accessor for DateComponents();
  uint64_t v30 = *(void *)(v0 - 8);
  uint64_t v31 = v0;
  __chkstk_darwin(v0);
  uint64_t v29 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = type metadata accessor for Calendar();
  uint64_t v26 = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v28 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v26 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v26 - v14;
  static Calendar.current.getter();
  Calendar.startOfDay(for:)();
  uint64_t v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16(v5, v2);
  static Calendar.current.getter();
  Date.init()();
  Calendar.startOfDay(for:)();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v7 + 8);
  v27(v9, v6);
  v16(v5, v2);
  static Calendar.current.getter();
  sub_100010218(&qword_1007FB058);
  uint64_t v17 = type metadata accessor for Calendar.Component();
  uint64_t v18 = *(void *)(v17 - 8);
  unint64_t v19 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1006D6280;
  (*(void (**)(unint64_t, void, uint64_t))(v18 + 104))(v20 + v19, enum case for Calendar.Component.day(_:), v17);
  sub_1000F5AEC(v20);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v21 = v29;
  Calendar.dateComponents(_:from:to:)();
  swift_bridgeObjectRelease();
  v16(v5, v26);
  uint64_t v22 = DateComponents.day.getter();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v21, v31);
  char v24 = v27;
  uint64_t v23 = v28;
  v27(v12, v28);
  v24(v15, v23);
  return v22;
}

uint64_t sub_1002AB2D8()
{
  uint64_t v0 = type metadata accessor for Calendar();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v23 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v23 - v8;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v23 - v11;
  id v13 = [objc_allocWithZone((Class)NSRelativeDateTimeFormatter) init];
  [v13 setUnitsStyle:0];
  [v13 setDateTimeStyle:0];
  static Calendar.current.getter();
  Calendar.startOfDay(for:)();
  uint64_t v14 = *(void (**)(char *, uint64_t))(v1 + 8);
  v14(v3, v0);
  static Calendar.current.getter();
  Date.init()();
  Calendar.startOfDay(for:)();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v16 = v6;
  uint64_t v17 = v24;
  v15(v16, v24);
  v14(v3, v0);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  Class v19 = Date._bridgeToObjectiveC()().super.isa;
  id v20 = [v13 localizedStringForDate:isa relativeToDate:v19];

  uint64_t v21 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  v15(v9, v17);
  v15(v12, v17);
  return v21;
}

uint64_t sub_1002AB594(int a1, int a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v102 = a3;
  int v79 = a2;
  int v103 = a1;
  uint64_t v83 = type metadata accessor for Date.FormatStyle.Symbol.Weekday();
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v81 = &v78[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v6 = type metadata accessor for Date.FormatStyle.Symbol.Year();
  uint64_t v85 = *(void *)(v6 - 8);
  uint64_t v86 = v6;
  __chkstk_darwin(v6);
  uint64_t v84 = &v78[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = type metadata accessor for Date.FormatStyle.Symbol.Day();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v93 = v8;
  uint64_t v94 = v9;
  __chkstk_darwin(v8);
  id v92 = &v78[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = type metadata accessor for Date.FormatStyle.Symbol.Month();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v89 = v11;
  uint64_t v90 = v12;
  __chkstk_darwin(v11);
  char v88 = &v78[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v14 = type metadata accessor for TimeZone();
  __chkstk_darwin(v14 - 8);
  uint64_t v101 = &v78[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = type metadata accessor for Locale();
  __chkstk_darwin(v16 - 8);
  uint64_t v100 = &v78[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v18 = type metadata accessor for FormatStyleCapitalizationContext();
  __chkstk_darwin(v18 - 8);
  uint64_t v99 = &v78[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v20 = sub_100010218(&qword_1007F9538);
  __chkstk_darwin(v20 - 8);
  uint64_t v22 = &v78[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v23 = sub_100010218(&qword_1007F9540);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = &v78[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = type metadata accessor for Date.FormatStyle();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v96 = v26;
  uint64_t v97 = v27;
  __chkstk_darwin(v26);
  Swift::Int v80 = &v78[-((v28 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v29);
  uint64_t v87 = &v78[-v30];
  __chkstk_darwin(v31);
  unint64_t v91 = &v78[-v32];
  __chkstk_darwin(v33);
  unint64_t v95 = &v78[-v34];
  __chkstk_darwin(v35);
  uint64_t v37 = &v78[-v36];
  uint64_t v38 = type metadata accessor for Calendar.Component();
  uint64_t v39 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v41 = &v78[-((v40 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v42 = type metadata accessor for Calendar();
  uint64_t v43 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v45 = &v78[-((v44 + 15) & 0xFFFFFFFFFFFFFFF0)];
  static Calendar.current.getter();
  (*(void (**)(unsigned char *, void, uint64_t))(v39 + 104))(v41, enum case for Calendar.Component.year(_:), v38);
  uint64_t v98 = v4;
  uint64_t v46 = Calendar.compare(_:to:toGranularity:)();
  uint64_t v47 = v41;
  uint64_t v48 = v37;
  (*(void (**)(unsigned char *, uint64_t))(v39 + 8))(v47, v38);
  (*(void (**)(unsigned char *, uint64_t))(v43 + 8))(v45, v42);
  uint64_t v49 = type metadata accessor for Date.FormatStyle.DateStyle();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v25, 1, 1, v49);
  uint64_t v50 = type metadata accessor for Date.FormatStyle.TimeStyle();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v22, 1, 1, v50);
  static FormatStyleCapitalizationContext.standalone.getter();
  static Locale.autoupdatingCurrent.getter();
  static Calendar.autoupdatingCurrent.getter();
  static TimeZone.autoupdatingCurrent.getter();
  Date.FormatStyle.init(date:time:locale:calendar:timeZone:capitalizationContext:)();
  if (!(_BYTE)v103)
  {
    uint64_t v58 = v80;
    if (!v46) {
      goto LABEL_13;
    }
    uint64_t v59 = v81;
    static Date.FormatStyle.Symbol.Weekday.wide.getter();
    Date.FormatStyle.weekday(_:)();
    (*(void (**)(unsigned char *, uint64_t))(v82 + 8))(v59, v83);
    unint64_t v60 = v88;
    static Date.FormatStyle.Symbol.Month.abbreviated.getter();
    uint64_t v61 = v87;
    Date.FormatStyle.month(_:)();
    (*(void (**)(unsigned char *, uint64_t))(v90 + 8))(v60, v89);
    uint64_t v55 = *(void (**)(unsigned char *, uint64_t))(v97 + 8);
    uint64_t v62 = v58;
    uint64_t v57 = v96;
    v55(v62, v96);
    uint64_t v63 = v92;
    static Date.FormatStyle.Symbol.Day.defaultDigits.getter();
    uint64_t v64 = v91;
    Date.FormatStyle.day(_:)();
    (*(void (**)(unsigned char *, uint64_t))(v94 + 8))(v63, v93);
    uint64_t v65 = v61;
LABEL_10:
    v55(v65, v57);
    uint64_t v69 = v84;
    static Date.FormatStyle.Symbol.Year.defaultDigits.getter();
    uint64_t v54 = v95;
    Date.FormatStyle.year(_:)();
    (*(void (**)(unsigned char *, uint64_t))(v85 + 8))(v69, v86);
    int v70 = v64;
LABEL_15:
    v55(v70, v57);
    goto LABEL_16;
  }
  if (v103 != 1)
  {
    if (!v46)
    {
      if (v79)
      {
        uint64_t v71 = v81;
        static Date.FormatStyle.Symbol.Weekday.abbreviated.getter();
LABEL_14:
        uint64_t v72 = v87;
        Date.FormatStyle.weekday(_:)();
        (*(void (**)(unsigned char *, uint64_t))(v82 + 8))(v71, v83);
        NSString v73 = v88;
        static Date.FormatStyle.Symbol.Month.abbreviated.getter();
        uint64_t v74 = v91;
        Date.FormatStyle.month(_:)();
        (*(void (**)(unsigned char *, uint64_t))(v90 + 8))(v73, v89);
        uint64_t v55 = *(void (**)(unsigned char *, uint64_t))(v97 + 8);
        uint64_t v75 = v72;
        uint64_t v57 = v96;
        v55(v75, v96);
        uint64_t v76 = v92;
        static Date.FormatStyle.Symbol.Day.defaultDigits.getter();
        uint64_t v54 = v95;
        Date.FormatStyle.day(_:)();
        (*(void (**)(unsigned char *, uint64_t))(v94 + 8))(v76, v93);
        int v70 = v74;
        goto LABEL_15;
      }
LABEL_13:
      uint64_t v71 = v81;
      static Date.FormatStyle.Symbol.Weekday.wide.getter();
      goto LABEL_14;
    }
    goto LABEL_9;
  }
  if (v46)
  {
LABEL_9:
    uint64_t v66 = v88;
    static Date.FormatStyle.Symbol.Month.abbreviated.getter();
    uint64_t v67 = v87;
    Date.FormatStyle.month(_:)();
    (*(void (**)(unsigned char *, uint64_t))(v90 + 8))(v66, v89);
    uint64_t v68 = v92;
    static Date.FormatStyle.Symbol.Day.defaultDigits.getter();
    uint64_t v64 = v91;
    Date.FormatStyle.day(_:)();
    (*(void (**)(unsigned char *, uint64_t))(v94 + 8))(v68, v93);
    uint64_t v55 = *(void (**)(unsigned char *, uint64_t))(v97 + 8);
    uint64_t v65 = v67;
    uint64_t v57 = v96;
    goto LABEL_10;
  }
  if ((v79 & 1) == 0) {
    goto LABEL_13;
  }
  uint64_t v51 = v88;
  static Date.FormatStyle.Symbol.Month.abbreviated.getter();
  uint64_t v52 = v91;
  Date.FormatStyle.month(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v90 + 8))(v51, v89);
  uint64_t v53 = v92;
  static Date.FormatStyle.Symbol.Day.defaultDigits.getter();
  uint64_t v54 = v95;
  Date.FormatStyle.day(_:)();
  (*(void (**)(unsigned char *, uint64_t))(v94 + 8))(v53, v93);
  uint64_t v55 = *(void (**)(unsigned char *, uint64_t))(v97 + 8);
  uint64_t v56 = v52;
  uint64_t v57 = v96;
  v55(v56, v96);
LABEL_16:
  sub_1002AEB9C((unint64_t *)&qword_1007F9588, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
  Date.formatted<A>(_:)();
  v55(v54, v57);
  v55(v48, v57);
  return v104;
}

void *sub_1002AC074(void *a1, uint64_t a2)
{
  uint64_t v59 = _s23YearAdaptiveFormatStyleVMa();
  __chkstk_darwin(v59);
  unint64_t v60 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for Calendar();
  uint64_t v58 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v48 - v12;
  uint64_t v14 = type metadata accessor for Date();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  __chkstk_darwin(v16);
  uint64_t v19 = 0;
  if (a1[2] >= 2uLL)
  {
    if (*(void *)(a2 + 16) < 2uLL) {
      return 0;
    }
    uint64_t v56 = v18;
    uint64_t v57 = (char *)&v48 - v17;
    uint64_t v61 = a1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1000C8D80(a2);
    swift_bridgeObjectRetain();
    sub_1002AD714(&v61);
    swift_bridgeObjectRelease();
    uint64_t v20 = v61;
    unint64_t v21 = v61[2];
    if (v21)
    {
      uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
      uint64_t v51 = (char *)v61 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
      uint64_t v53 = v22;
      ((void (*)(char *))v22)(v13);
      uint64_t v54 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
      v54(v13, 0, 1, v14);
      uint64_t v23 = v14;
      uint64_t v24 = v15;
      uint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      uint64_t v55 = v23;
      uint64_t v52 = v25;
      if (((unsigned int (*)(char *, uint64_t))v25)(v13, 1) != 1)
      {
        uint64_t v26 = v13;
        uint64_t v27 = v55;
        uint64_t v49 = *(void (**)(char *, char *, uint64_t))(v15 + 32);
        uint64_t v50 = v15 + 32;
        v49(v57, v26, v55);
        if (v21 > v20[2])
        {
          __break(1u);
        }
        else
        {
          v53(v10, &v51[*(void *)(v15 + 72) * (v21 - 1)], v27);
          v54(v10, 0, 1, v27);
          swift_release();
          if (v52(v10, 1, v27) == 1)
          {
            (*(void (**)(char *, uint64_t))(v15 + 8))(v57, v27);
            uint64_t v28 = (uint64_t)v10;
LABEL_10:
            sub_1000AC7D4(v28);
            return 0;
          }
          uint64_t v30 = v27;
          uint64_t v31 = v56;
          v49(v56, v10, v30);
          static Calendar.current.getter();
          uint64_t v32 = v57;
          char v33 = Calendar.isDate(_:inSameDayAs:)();
          (*(void (**)(char *, uint64_t))(v58 + 8))(v7, v5);
          if (v33)
          {
            uint64_t v34 = (uint64_t)v60;
            static Date.FormatStyle.TimeStyle.omitted.getter();
            static FormatStyleCapitalizationContext.standalone.getter();
            static Locale.autoupdatingCurrent.getter();
            static Calendar.autoupdatingCurrent.getter();
            static TimeZone.autoupdatingCurrent.getter();
            static Date.now.getter();
            sub_1002AEB9C((unint64_t *)&qword_1007F8F38, (void (*)(uint64_t))_s23YearAdaptiveFormatStyleVMa);
            Date.formatted<A>(_:)();
            sub_1002AEB40(v34);
            uint64_t v19 = v61;
            uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
            uint64_t v36 = v55;
            v35((uint64_t)v31, v55);
            uint64_t v37 = v32;
LABEL_17:
            v35((uint64_t)v37, v36);
            return v19;
          }
          if (qword_1007F75E0 == -1)
          {
LABEL_16:
            uint64_t v54 = (void (*)(char *, void, uint64_t, uint64_t))*((void *)&xmmword_10083DD68 + 1);
            uint64_t v58 = xmmword_10083DD68;
            sub_100010218((uint64_t *)&unk_100806070);
            uint64_t v38 = swift_allocObject();
            *(_OWORD *)(v38 + 16) = xmmword_1006D6270;
            uint64_t v39 = (uint64_t)v60;
            static Date.FormatStyle.TimeStyle.omitted.getter();
            static FormatStyleCapitalizationContext.standalone.getter();
            static Locale.autoupdatingCurrent.getter();
            static Calendar.autoupdatingCurrent.getter();
            static TimeZone.autoupdatingCurrent.getter();
            static Date.now.getter();
            sub_1002AEB9C((unint64_t *)&qword_1007F8F38, (void (*)(uint64_t))_s23YearAdaptiveFormatStyleVMa);
            uint64_t v40 = v57;
            Date.formatted<A>(_:)();
            sub_1002AEB40(v39);
            uint64_t v41 = v61;
            uint64_t v42 = v62;
            *(void *)(v38 + 56) = &type metadata for String;
            unint64_t v43 = sub_10001B2C0();
            *(void *)(v38 + 64) = v43;
            *(void *)(v38 + 32) = v41;
            *(void *)(v38 + 40) = v42;
            static Date.FormatStyle.TimeStyle.omitted.getter();
            static FormatStyleCapitalizationContext.standalone.getter();
            static Locale.autoupdatingCurrent.getter();
            static Calendar.autoupdatingCurrent.getter();
            static TimeZone.autoupdatingCurrent.getter();
            static Date.now.getter();
            uint64_t v44 = v56;
            Date.formatted<A>(_:)();
            sub_1002AEB40(v39);
            uint64_t v45 = v61;
            uint64_t v46 = v62;
            *(void *)(v38 + 96) = &type metadata for String;
            *(void *)(v38 + 104) = v43;
            *(void *)(v38 + 72) = v45;
            *(void *)(v38 + 80) = v46;
            uint64_t v19 = (void *)static String.localizedStringWithFormat(_:_:)();
            swift_bridgeObjectRelease();
            uint64_t v35 = *(void (**)(uint64_t, uint64_t))(v24 + 8);
            uint64_t v47 = v44;
            uint64_t v36 = v55;
            v35((uint64_t)v47, v55);
            uint64_t v37 = v40;
            goto LABEL_17;
          }
        }
        swift_once();
        goto LABEL_16;
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56))(v13, 1, 1, v14);
    }
    swift_release();
    uint64_t v28 = (uint64_t)v13;
    goto LABEL_10;
  }
  return v19;
}

uint64_t sub_1002AC7C4()
{
  uint64_t v72 = type metadata accessor for Date.FormatStyle.Symbol.Day();
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  int v70 = (char *)&v64 - ((v0 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = type metadata accessor for Date.FormatStyle.Symbol.Month();
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  uint64_t v67 = (char *)&v64 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v74 = type metadata accessor for Date.FormatStyle.Symbol.Weekday();
  uint64_t v79 = *(void *)(v74 - 8);
  __chkstk_darwin(v74);
  NSString v73 = (char *)&v64 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Date.FormatStyle();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v77 = v3;
  uint64_t v78 = v4;
  __chkstk_darwin(v3);
  uint64_t v65 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v66 = (char *)&v64 - v7;
  __chkstk_darwin(v8);
  uint64_t v75 = (char *)&v64 - v9;
  __chkstk_darwin(v10);
  uint64_t v76 = (char *)&v64 - v11;
  char v88 = (void *)type metadata accessor for Calendar.SearchDirection();
  uint64_t v84 = *(v88 - 1);
  __chkstk_darwin(v88);
  uint64_t v86 = (char *)&v64 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Calendar.RepeatedTimePolicy();
  uint64_t v81 = *(void *)(v13 - 8);
  uint64_t v14 = v81;
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = type metadata accessor for Calendar.MatchingPolicy();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v82 = v17;
  uint64_t v83 = v18;
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v64 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = type metadata accessor for Calendar();
  uint64_t v85 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v22 = (char *)&v64 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = type metadata accessor for Date();
  uint64_t v26 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v28 = (char *)&v64 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  Swift::Int v80 = (char *)&v64 - v30;
  static Calendar.current.getter();
  static Date.now.getter();
  (*(void (**)(char *, void, uint64_t))(v18 + 104))(v20, enum case for Calendar.MatchingPolicy.nextTime(_:), v17);
  uint64_t v31 = v13;
  (*(void (**)(char *, void, uint64_t))(v14 + 104))(v16, enum case for Calendar.RepeatedTimePolicy.first(_:), v13);
  uint64_t v32 = v84;
  char v33 = v86;
  uint64_t v34 = v88;
  (*(void (**)(char *, void, void *))(v84 + 104))(v86, enum case for Calendar.SearchDirection.forward(_:), v88);
  Calendar.date(bySettingHour:minute:second:of:matchingPolicy:repeatedTimePolicy:direction:)();
  (*(void (**)(char *, void *))(v32 + 8))(v33, v34);
  uint64_t v35 = v16;
  uint64_t v36 = v89;
  (*(void (**)(char *, uint64_t))(v81 + 8))(v35, v31);
  (*(void (**)(char *, uint64_t))(v83 + 8))(v20, v82);
  char v88 = *(void **)(v26 + 8);
  ((void (*)(char *, uint64_t))v88)(v28, v36);
  uint64_t v37 = v22;
  uint64_t v38 = v25;
  (*(void (**)(char *, uint64_t))(v85 + 8))(v37, v87);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48))(v25, 1, v36);
  if (result == 1) {
    goto LABEL_12;
  }
  uint64_t v40 = v80;
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v80, v38, v36);
  Date.timeIntervalSince1970.getter();
  double v42 = v41;
  uint64_t result = Date.timeIntervalSince1970.getter();
  double v44 = v42 - v43;
  if ((~*(void *)&v44 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (v44 <= -9.22337204e18)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v44 >= 9.22337204e18)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v45 = (void (**)(char *, uint64_t))(v79 + 8);
  uint64_t v46 = (void (**)(char *, uint64_t))(v78 + 8);
  if ((uint64_t)v44 > 604799)
  {
    uint64_t v54 = v65;
    static FormatStyle<>.dateTime.getter();
    uint64_t v55 = v73;
    static Date.FormatStyle.Symbol.Weekday.abbreviated.getter();
    uint64_t v56 = v66;
    Date.FormatStyle.weekday(_:)();
    (*v45)(v55, v74);
    uint64_t v57 = *v46;
    uint64_t v58 = v77;
    (*v46)(v54, v77);
    uint64_t v59 = v67;
    static Date.FormatStyle.Symbol.Month.abbreviated.getter();
    unint64_t v60 = v40;
    uint64_t v61 = v75;
    Date.FormatStyle.month(_:)();
    (*(void (**)(char *, uint64_t))(v68 + 8))(v59, v69);
    v57(v56, v58);
    uint64_t v62 = v70;
    static Date.FormatStyle.Symbol.Day.defaultDigits.getter();
    uint64_t v63 = v76;
    Date.FormatStyle.day(_:)();
    (*(void (**)(char *, uint64_t))(v71 + 8))(v62, v72);
    v57(v61, v58);
    sub_1002AEB9C((unint64_t *)&qword_1007F9588, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
    Date.formatted<A>(_:)();
    v57(v63, v58);
    uint64_t v52 = v60;
    uint64_t v53 = v89;
  }
  else
  {
    uint64_t v47 = v75;
    static FormatStyle<>.dateTime.getter();
    uint64_t v48 = v73;
    static Date.FormatStyle.Symbol.Weekday.wide.getter();
    uint64_t v49 = v76;
    Date.FormatStyle.weekday(_:)();
    (*v45)(v48, v74);
    uint64_t v50 = *v46;
    uint64_t v51 = v77;
    (*v46)(v47, v77);
    sub_1002AEB9C((unint64_t *)&qword_1007F9588, (void (*)(uint64_t))&type metadata accessor for Date.FormatStyle);
    Date.formatted<A>(_:)();
    v50(v49, v51);
    uint64_t v52 = v40;
    uint64_t v53 = v36;
  }
  ((void (*)(char *, uint64_t))v88)(v52, v53);
  return v90;
}

uint64_t sub_1002AD1E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v38 = type metadata accessor for Date();
  uint64_t v36 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  uint64_t v37 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v33 - v3;
  uint64_t v5 = type metadata accessor for Calendar();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v33 - v10;
  uint64_t v12 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100010218(&qword_1007FFBB0);
  __chkstk_darwin(v15 - 8);
  uint64_t v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_100010218(&qword_1007FFBB8);
  __chkstk_darwin(v18 - 8);
  uint64_t v20 = (char *)&v33 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for DateComponents();
  uint64_t v34 = *(void *)(v21 - 8);
  uint64_t v35 = v21;
  __n128 v22 = __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v33 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, __n128))(v6 + 56))(v20, 1, 1, v5, v22);
  uint64_t v25 = type metadata accessor for TimeZone();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v17, 1, 1, v25);
  DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
  DateComponents.day.setter();
  DateComponents.second.setter();
  static Calendar.current.getter();
  static Calendar.current.getter();
  Calendar.startOfDay(for:)();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v6 + 8);
  v26(v8, v5);
  Calendar.date(byAdding:to:wrappingComponents:)();
  uint64_t v27 = v36;
  uint64_t v28 = *(void (**)(char *, uint64_t))(v36 + 8);
  uint64_t v29 = v38;
  v28(v4, v38);
  v26(v11, v5);
  uint64_t v30 = v24;
  uint64_t v31 = v37;
  (*(void (**)(char *, uint64_t))(v34 + 8))(v30, v35);
  (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v31, v40, v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v14, 1, v29) == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v27 + 32))(v39, v31, v29);
    return sub_1000AC7D4((uint64_t)v14);
  }
  else
  {
    v28(v31, v29);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v39, v14, v29);
  }
}

void sub_1002AD714(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for Date() - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_1000F3F44(v3);
  }
  uint64_t v4 = v3[2];
  v5[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v5[1] = v4;
  sub_1002AD7BC(v5);
  *a1 = v3;
}

void sub_1002AD7BC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Date();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v134 = (char *)&v129 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v149 = (char *)&v129 - v8;
  __chkstk_darwin(v9);
  unsigned int v144 = (char *)&v129 - v10;
  __chkstk_darwin(v11);
  objc_super v145 = (char *)&v129 - v12;
  Swift::Int v13 = a1[1];
  Swift::Int v14 = _minimumMergeRunLength(_:)(v13);
  if (v14 >= v13)
  {
    if (v13 < 0) {
      goto LABEL_138;
    }
    if (v13) {
      sub_1002AE2A0(0, v13, 1, a1);
    }
    return;
  }
  if (v13 >= 0) {
    uint64_t v15 = v13;
  }
  else {
    uint64_t v15 = v13 + 1;
  }
  if (v13 < -1) {
    goto LABEL_146;
  }
  uint64_t v147 = v4;
  Swift::Int v130 = v14;
  uint64_t v137 = (void *)v5;
  if (v13 < 2)
  {
    uint64_t v19 = (char *)_swiftEmptyArrayStorage;
    unint64_t v136 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v129 = _swiftEmptyArrayStorage;
    if (v13 != 1)
    {
      unint64_t v21 = *(void *)&_swiftEmptyArrayStorage[2];
LABEL_104:
      if (v21 >= 2)
      {
        uint64_t v123 = *a1;
        do
        {
          unint64_t v124 = v21 - 2;
          if (v21 < 2) {
            goto LABEL_133;
          }
          if (!v123) {
            goto LABEL_145;
          }
          uint64_t v125 = *(void *)&v19[16 * v124 + 32];
          uint64_t v126 = *(void *)&v19[16 * v21 + 24];
          sub_1002AE58C(v123 + v137[9] * v125, v123 + v137[9] * *(void *)&v19[16 * v21 + 16], v123 + v137[9] * v126, v136);
          if (v2) {
            break;
          }
          if (v126 < v125) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v19 = sub_1000F1E40((uint64_t)v19);
          }
          if (v124 >= *((void *)v19 + 2)) {
            goto LABEL_135;
          }
          id v127 = &v19[16 * v124 + 32];
          *(void *)id v127 = v125;
          *((void *)v127 + 1) = v126;
          unint64_t v128 = *((void *)v19 + 2);
          if (v21 > v128) {
            goto LABEL_136;
          }
          memmove(&v19[16 * v21 + 16], &v19[16 * v21 + 32], 16 * (v128 - v21));
          *((void *)v19 + 2) = v128 - 1;
          unint64_t v21 = v128 - 1;
        }
        while (v128 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v129[2] = 0.0;
      swift_bridgeObjectRelease();
      return;
    }
  }
  else
  {
    uint64_t v16 = v15 >> 1;
    uint64_t v17 = static Array._allocateBufferUninitialized(minimumCapacity:)();
    *(void *)(v17 + 16) = v16;
    unint64_t v18 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    uint64_t v129 = (double *)v17;
    unint64_t v136 = v17 + v18;
  }
  uint64_t v20 = 0;
  uint64_t v142 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v143 = v5 + 16;
  uint64_t v152 = (void (**)(char *, uint64_t, uint64_t))(v5 + 32);
  uint64_t v19 = (char *)_swiftEmptyArrayStorage;
  uint64_t v148 = a1;
  while (1)
  {
    __n128 v22 = v20 + 1;
    uint64_t v135 = v20;
    if ((uint64_t)(v20 + 1) >= v13)
    {
      uint64_t v33 = (void (*)(void, void, void))v20;
      Swift::Int v35 = (Swift::Int)(v20 + 1);
      a1 = v148;
    }
    else
    {
      uint64_t v23 = v147;
      Swift::Int v24 = *v148;
      uint64_t v25 = v137[9];
      uint64_t v26 = *v148 + v25 * (void)v22;
      uint64_t v151 = v25;
      Swift::Int v140 = v24;
      uint64_t v27 = (void (*)(char *, uint64_t, uint64_t))v137[2];
      v27(v145, v26, v147);
      Swift::Int v150 = v13;
      uint64_t v28 = v144;
      v27(v144, v24 + v25 * (void)v135, v23);
      uint64_t v29 = v145;
      LODWORD(v146) = static Date.< infix(_:_:)();
      uint64_t v30 = (void (*)(char *, uint64_t))v137[1];
      uint64_t v31 = v28;
      Swift::Int v13 = v150;
      v30(v31, v23);
      uint64_t v32 = v23;
      uint64_t v33 = (void (*)(void, void, void))v135;
      v30(v29, v32);
      uint64_t v34 = v151;
      Swift::Int v35 = (Swift::Int)v33 + 2;
      if ((uint64_t)v33 + 2 < v13)
      {
        uint64_t v131 = v19;
        uint64_t v132 = v2;
        uint64_t v141 = v151 * (void)v22;
        Swift::Int v36 = v140;
        Swift::Int v37 = v151 * v35;
        while (1)
        {
          Swift::Int v38 = v35;
          uint64_t v39 = v145;
          uint64_t v40 = v147;
          v27(v145, v36 + v37, v147);
          double v41 = v144;
          v27(v144, v36 + v141, v40);
          int v42 = static Date.< infix(_:_:)();
          v30(v41, v40);
          v30(v39, v40);
          if ((v146 ^ v42)) {
            break;
          }
          Swift::Int v35 = v38 + 1;
          uint64_t v34 = v151;
          v36 += v151;
          if (v150 == v38 + 1)
          {
            Swift::Int v13 = v150;
            Swift::Int v35 = v150;
            uint64_t v19 = v131;
            uint64_t v2 = v132;
            uint64_t v33 = (void (*)(void, void, void))v135;
            goto LABEL_23;
          }
        }
        uint64_t v19 = v131;
        uint64_t v2 = v132;
        Swift::Int v35 = v38;
        uint64_t v33 = (void (*)(void, void, void))v135;
        Swift::Int v13 = v150;
        uint64_t v34 = v151;
      }
LABEL_23:
      a1 = v148;
      if (v146)
      {
        if (v35 < (uint64_t)v33) {
          goto LABEL_139;
        }
        if ((uint64_t)v33 < v35)
        {
          uint64_t v131 = v19;
          uint64_t v132 = v2;
          uint64_t v43 = 0;
          uint64_t v44 = v34 * (v35 - 1);
          Swift::Int v45 = (Swift::Int)v33;
          Swift::Int v46 = v35 * v34;
          Swift::Int v47 = v45;
          uint64_t v48 = v45 * v34;
          Swift::Int v49 = v140;
          do
          {
            if (v47 != v35 + v43 - 1)
            {
              if (!v49) {
                goto LABEL_144;
              }
              Swift::Int v51 = v49 + v44;
              os_log_type_t v146 = (char *)*v152;
              ((void (*)(char *, Swift::Int, uint64_t))v146)(v134, v49 + v48, v147);
              if (v48 < v44 || v49 + v48 >= (unint64_t)(v49 + v46))
              {
                uint64_t v50 = v147;
                swift_arrayInitWithTakeFrontToBack();
              }
              else
              {
                uint64_t v50 = v147;
                if (v48 != v44) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              ((void (*)(Swift::Int, char *, uint64_t))v146)(v51, v134, v50);
              a1 = v148;
              Swift::Int v49 = v140;
              uint64_t v34 = v151;
            }
            ++v47;
            --v43;
            v44 -= v34;
            v46 -= v34;
            v48 += v34;
          }
          while (v47 < v35 + v43);
          uint64_t v19 = v131;
          uint64_t v2 = v132;
          uint64_t v33 = (void (*)(void, void, void))v135;
          Swift::Int v13 = v150;
        }
      }
    }
    if (v35 < v13)
    {
      if (__OFSUB__(v35, v33)) {
        goto LABEL_137;
      }
      if (v35 - (uint64_t)v33 < v130) {
        break;
      }
    }
LABEL_55:
    if (v35 < (uint64_t)v33) {
      goto LABEL_132;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    os_log_type_t v146 = (char *)v35;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v19 = sub_1000F1750(0, *((void *)v19 + 2) + 1, 1, v19);
    }
    unint64_t v72 = *((void *)v19 + 2);
    unint64_t v71 = *((void *)v19 + 3);
    unint64_t v21 = v72 + 1;
    if (v72 >= v71 >> 1) {
      uint64_t v19 = sub_1000F1750((char *)(v71 > 1), v72 + 1, 1, v19);
    }
    *((void *)v19 + 2) = v21;
    NSString v73 = v19 + 32;
    uint64_t v74 = &v19[16 * v72 + 32];
    uint64_t v75 = v146;
    *(void *)uint64_t v74 = v33;
    *((void *)v74 + 1) = v75;
    if (v72)
    {
      while (1)
      {
        unint64_t v76 = v21 - 1;
        if (v21 >= 4)
        {
          uint64_t v81 = &v73[16 * v21];
          uint64_t v82 = *((void *)v81 - 8);
          uint64_t v83 = *((void *)v81 - 7);
          BOOL v87 = __OFSUB__(v83, v82);
          uint64_t v84 = v83 - v82;
          if (v87) {
            goto LABEL_121;
          }
          uint64_t v86 = *((void *)v81 - 6);
          uint64_t v85 = *((void *)v81 - 5);
          BOOL v87 = __OFSUB__(v85, v86);
          uint64_t v79 = v85 - v86;
          char v80 = v87;
          if (v87) {
            goto LABEL_122;
          }
          unint64_t v88 = v21 - 2;
          uint64_t v89 = &v73[16 * v21 - 32];
          uint64_t v91 = *(void *)v89;
          uint64_t v90 = *((void *)v89 + 1);
          BOOL v87 = __OFSUB__(v90, v91);
          uint64_t v92 = v90 - v91;
          if (v87) {
            goto LABEL_124;
          }
          BOOL v87 = __OFADD__(v79, v92);
          uint64_t v93 = v79 + v92;
          if (v87) {
            goto LABEL_127;
          }
          if (v93 >= v84)
          {
            uint64_t v111 = &v73[16 * v76];
            uint64_t v113 = *(void *)v111;
            uint64_t v112 = *((void *)v111 + 1);
            BOOL v87 = __OFSUB__(v112, v113);
            uint64_t v114 = v112 - v113;
            if (v87) {
              goto LABEL_131;
            }
            BOOL v104 = v79 < v114;
            goto LABEL_92;
          }
        }
        else
        {
          if (v21 != 3)
          {
            uint64_t v105 = *((void *)v19 + 4);
            uint64_t v106 = *((void *)v19 + 5);
            BOOL v87 = __OFSUB__(v106, v105);
            uint64_t v98 = v106 - v105;
            char v99 = v87;
            goto LABEL_86;
          }
          uint64_t v78 = *((void *)v19 + 4);
          uint64_t v77 = *((void *)v19 + 5);
          BOOL v87 = __OFSUB__(v77, v78);
          uint64_t v79 = v77 - v78;
          char v80 = v87;
        }
        if (v80) {
          goto LABEL_123;
        }
        unint64_t v88 = v21 - 2;
        uint64_t v94 = &v73[16 * v21 - 32];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v97 = __OFSUB__(v95, v96);
        uint64_t v98 = v95 - v96;
        char v99 = v97;
        if (v97) {
          goto LABEL_126;
        }
        uint64_t v100 = &v73[16 * v76];
        uint64_t v102 = *(void *)v100;
        uint64_t v101 = *((void *)v100 + 1);
        BOOL v87 = __OFSUB__(v101, v102);
        uint64_t v103 = v101 - v102;
        if (v87) {
          goto LABEL_129;
        }
        if (__OFADD__(v98, v103)) {
          goto LABEL_130;
        }
        if (v98 + v103 >= v79)
        {
          BOOL v104 = v79 < v103;
LABEL_92:
          if (v104) {
            unint64_t v76 = v88;
          }
          goto LABEL_94;
        }
LABEL_86:
        if (v99) {
          goto LABEL_125;
        }
        uint64_t v107 = &v73[16 * v76];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v87 = __OFSUB__(v108, v109);
        uint64_t v110 = v108 - v109;
        if (v87) {
          goto LABEL_128;
        }
        if (v110 < v98) {
          goto LABEL_14;
        }
LABEL_94:
        unint64_t v115 = v76 - 1;
        if (v76 - 1 >= v21)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v116 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        uint64_t v117 = v19;
        uint64_t v118 = &v73[16 * v115];
        uint64_t v119 = *(void *)v118;
        uint64_t v120 = &v73[16 * v76];
        uint64_t v121 = *((void *)v120 + 1);
        sub_1002AE58C(v116 + v137[9] * *(void *)v118, v116 + v137[9] * *(void *)v120, v116 + v137[9] * v121, v136);
        if (v2) {
          goto LABEL_115;
        }
        if (v121 < v119) {
          goto LABEL_118;
        }
        if (v76 > *((void *)v117 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v118 = v119;
        *(void *)&v73[16 * v115 + 8] = v121;
        unint64_t v122 = *((void *)v117 + 2);
        if (v76 >= v122) {
          goto LABEL_120;
        }
        uint64_t v19 = v117;
        unint64_t v21 = v122 - 1;
        memmove(&v73[16 * v76], v120 + 16, 16 * (v122 - 1 - v76));
        *((void *)v117 + 2) = v122 - 1;
        a1 = v148;
        if (v122 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v21 = 1;
LABEL_14:
    Swift::Int v13 = a1[1];
    uint64_t v20 = v146;
    if ((uint64_t)v146 >= v13) {
      goto LABEL_104;
    }
  }
  if (__OFADD__(v33, v130)) {
    goto LABEL_140;
  }
  if ((uint64_t)v33 + v130 >= v13) {
    Swift::Int v52 = v13;
  }
  else {
    Swift::Int v52 = (Swift::Int)v33 + v130;
  }
  if (v52 >= (uint64_t)v33)
  {
    if (v35 != v52)
    {
      uint64_t v131 = v19;
      uint64_t v132 = v2;
      uint64_t v53 = v137[9];
      uint64_t v138 = (void (*)(char *, uint64_t, uint64_t))v137[2];
      uint64_t v139 = v53;
      uint64_t v54 = v53 * (v35 - 1);
      Swift::Int v55 = v35 * v53;
      uint64_t v56 = v147;
      Swift::Int v133 = v52;
      do
      {
        uint64_t v58 = 0;
        os_log_type_t v146 = (char *)v35;
        Swift::Int v140 = v55;
        uint64_t v141 = v54;
        while (1)
        {
          uint64_t v59 = *a1;
          Swift::Int v150 = v55 + v58;
          uint64_t v151 = (uint64_t)v33;
          Swift::Int v60 = v55 + v58 + v59;
          uint64_t v61 = v145;
          uint64_t v62 = v138;
          v138(v145, v60, v56);
          uint64_t v63 = v54 + v58 + v59;
          uint64_t v64 = a1;
          uint64_t v65 = v144;
          v62(v144, v63, v56);
          LOBYTE(v62) = static Date.< infix(_:_:)();
          uint64_t v66 = *v142;
          (*v142)(v65, v56);
          v66(v61, v56);
          if ((v62 & 1) == 0) {
            break;
          }
          uint64_t v67 = *v64;
          if (!*v64) {
            goto LABEL_142;
          }
          Swift::Int v55 = v140;
          uint64_t v54 = v141;
          uint64_t v68 = (char *)(v67 + v141 + v58);
          uint64_t v69 = *v152;
          uint64_t v56 = v147;
          (*v152)(v149, v67 + v140 + v58, v147);
          swift_arrayInitWithTakeFrontToBack();
          v69(v68, (uint64_t)v149, v56);
          v58 -= v139;
          uint64_t v33 = (void (*)(void, void, void))(v151 + 1);
          uint64_t v57 = v146;
          a1 = v148;
          if (v146 == (char *)(v151 + 1)) {
            goto LABEL_48;
          }
        }
        uint64_t v57 = v146;
        uint64_t v56 = v147;
        a1 = v64;
        Swift::Int v55 = v140;
        uint64_t v54 = v141;
LABEL_48:
        Swift::Int v35 = (Swift::Int)(v57 + 1);
        v54 += v139;
        v55 += v139;
        uint64_t v33 = (void (*)(void, void, void))v135;
      }
      while (v35 != v133);
      Swift::Int v35 = v133;
      uint64_t v19 = v131;
      uint64_t v2 = v132;
    }
    goto LABEL_55;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  _assertionFailure(_:_:file:line:flags:)();
  __break(1u);
}

void sub_1002AE2A0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v33 = a1;
  uint64_t v7 = type metadata accessor for Date();
  __chkstk_darwin(v7);
  uint64_t v43 = (char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v39 = (char *)&v31 - v10;
  __n128 v13 = __chkstk_darwin(v11);
  Swift::Int v38 = (char *)&v31 - v14;
  uint64_t v41 = a3;
  uint64_t v32 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void (**)(void, void, void, __n128))(v12 + 16);
    uint64_t v15 = v12 + 16;
    uint64_t v17 = *(void *)(v15 + 56);
    uint64_t v34 = (void (**)(char *, uint64_t))(v15 - 8);
    Swift::Int v35 = (void (*)(char *, uint64_t, uint64_t))v16;
    Swift::Int v36 = a4;
    uint64_t v37 = v15;
    int v42 = (void (**)(char *, uint64_t, uint64_t))(v15 + 16);
    uint64_t v46 = v17 * (v41 - 1);
    uint64_t v40 = v17;
    uint64_t v45 = v17 * v41;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v44 = v33;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = v45 + v18 + *a4;
      unint64_t v21 = v38;
      __n128 v22 = v35;
      ((void (*)(char *, uint64_t, uint64_t, __n128))v35)(v38, v20, v7, v13);
      uint64_t v23 = v7;
      Swift::Int v24 = v39;
      v22(v39, v46 + v18 + v19, v23);
      LOBYTE(v19) = static Date.< infix(_:_:)();
      uint64_t v25 = *v34;
      uint64_t v26 = v24;
      uint64_t v7 = v23;
      (*v34)(v26, v23);
      uint64_t v27 = v21;
      a4 = v36;
      v25(v27, v23);
      if ((v19 & 1) == 0)
      {
LABEL_4:
        v46 += v40;
        v45 += v40;
        if (++v41 == v32) {
          return;
        }
        goto LABEL_5;
      }
      uint64_t v28 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v29 = (char *)(v28 + v46 + v18);
      uint64_t v30 = *v42;
      (*v42)(v43, v28 + v45 + v18, v23);
      swift_arrayInitWithTakeFrontToBack();
      v30(v29, (uint64_t)v43, v23);
      v18 -= v40;
      if (v41 == ++v44) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
}

uint64_t sub_1002AE58C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v61 = type metadata accessor for Date();
  uint64_t v8 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  Swift::Int v60 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v59 = (char *)&v51 - v11;
  uint64_t v13 = *(void *)(v12 + 72);
  if (!v13)
  {
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  if (a2 - a1 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_71;
  }
  int64_t v14 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v13 == -1) {
    goto LABEL_72;
  }
  uint64_t v15 = (uint64_t)(a2 - a1) / v13;
  unint64_t v64 = a1;
  unint64_t v63 = a4;
  uint64_t v16 = v14 / v13;
  if (v15 >= v14 / v13)
  {
    if ((v16 & 0x8000000000000000) == 0)
    {
      uint64_t v18 = v16 * v13;
      if (a4 < a2 || a2 + v18 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v34 = a4 + v18;
      unint64_t v62 = a4 + v18;
      unint64_t v64 = a2;
      if (v18 >= 1 && a1 < a2)
      {
        Swift::Int v36 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
        uint64_t v58 = v8 + 16;
        uint64_t v54 = (void (**)(char *, uint64_t))(v8 + 8);
        Swift::Int v55 = v36;
        uint64_t v37 = -v13;
        unint64_t v52 = a4;
        uint64_t v53 = -v13;
        uint64_t v56 = (void (*)(void, void, void))a1;
        uint64_t v38 = v61;
        do
        {
          unint64_t v57 = a3 + v37;
          unint64_t v39 = a3;
          uint64_t v40 = v59;
          uint64_t v41 = v55;
          v55(v59, v34 + v37, v38);
          unint64_t v42 = a2 + v37;
          uint64_t v43 = v60;
          v41(v60, v42, v38);
          LOBYTE(v41) = static Date.< infix(_:_:)();
          uint64_t v44 = *v54;
          (*v54)(v43, v38);
          v44(v40, v38);
          if (v41)
          {
            uint64_t v37 = v53;
            a3 = v57;
            if (v39 < a2 || v57 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v46 = v52;
              Swift::Int v47 = v56;
            }
            else
            {
              BOOL v45 = v39 == a2;
              unint64_t v46 = v52;
              Swift::Int v47 = v56;
              if (!v45) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            v64 += v37;
          }
          else
          {
            unint64_t v48 = v62;
            v62 += v53;
            a3 = v57;
            BOOL v49 = v39 < v48 || v57 >= v48;
            uint64_t v37 = v53;
            if (v49)
            {
              swift_arrayInitWithTakeFrontToBack();
              unint64_t v42 = a2;
              unint64_t v46 = v52;
              Swift::Int v47 = v56;
            }
            else
            {
              Swift::Int v47 = v56;
              if (v39 != v48) {
                swift_arrayInitWithTakeBackToFront();
              }
              unint64_t v42 = a2;
              unint64_t v46 = v52;
            }
          }
          unint64_t v34 = v62;
          if (v62 <= v46) {
            break;
          }
          a2 = v42;
        }
        while (v42 > (unint64_t)v47);
      }
      goto LABEL_69;
    }
  }
  else if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v17 = v15 * v13;
    if (a4 < a1 || a1 + v17 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v57 = a4 + v17;
    unint64_t v62 = a4 + v17;
    if (v17 >= 1 && a2 < a3)
    {
      uint64_t v20 = *(void (**)(void, void, void))(v8 + 16);
      uint64_t v58 = v8 + 16;
      Swift::Int v55 = (void (*)(char *, unint64_t, uint64_t))(v8 + 8);
      uint64_t v56 = v20;
      do
      {
        uint64_t v21 = v13;
        unint64_t v22 = a3;
        uint64_t v23 = v59;
        unint64_t v24 = a4;
        uint64_t v25 = v61;
        uint64_t v26 = (void (*)(char *, unint64_t, uint64_t))v56;
        v56(v59, a2, v61);
        uint64_t v27 = v60;
        v26(v60, v24, v25);
        LOBYTE(v24) = static Date.< infix(_:_:)();
        uint64_t v28 = *(void (**)(char *, uint64_t))v55;
        (*(void (**)(char *, uint64_t))v55)(v27, v25);
        v28(v23, v25);
        unint64_t v29 = v64;
        if (v24)
        {
          uint64_t v13 = v21;
          unint64_t v30 = a2 + v21;
          if (v64 < a2 || v64 >= v30)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v64 == a2) {
              unint64_t v29 = a2;
            }
            else {
              swift_arrayInitWithTakeBackToFront();
            }
          }
        }
        else
        {
          uint64_t v13 = v21;
          unint64_t v32 = v63 + v21;
          if (v64 < v63 || v64 >= v32)
          {
            swift_arrayInitWithTakeFrontToBack();
            a3 = v22;
          }
          else
          {
            a3 = v22;
            if (v64 != v63) {
              swift_arrayInitWithTakeBackToFront();
            }
          }
          unint64_t v63 = v32;
          unint64_t v30 = a2;
        }
        unint64_t v64 = v29 + v13;
        a4 = v63;
        if (v63 >= v57) {
          break;
        }
        a2 = v30;
      }
      while (v30 < a3);
    }
LABEL_69:
    sub_1000F1ADC(&v64, &v63, (uint64_t *)&v62);
    return 1;
  }
LABEL_73:
  uint64_t result = _fatalErrorMessage(_:_:file:line:flags:)();
  __break(1u);
  return result;
}

uint64_t sub_1002AEB40(uint64_t a1)
{
  uint64_t v2 = _s23YearAdaptiveFormatStyleVMa();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002AEB9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1002AEBE4(uint64_t a1)
{
  uint64_t v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    __CocoaSet.makeIterator()();
    sub_10001B284(0, &qword_1008113A0);
    sub_100082CD4();
    Set.Iterator.init(_cocoa:)();
    uint64_t v1 = v26;
    uint64_t v25 = v27;
    uint64_t v2 = v28;
    uint64_t v3 = v29;
    unint64_t v4 = v30;
  }
  else
  {
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v25 = a1 + 56;
    uint64_t v2 = ~v5;
    uint64_t v6 = -v5;
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v4 = v7 & *(void *)(a1 + 56);
    swift_bridgeObjectRetain();
    uint64_t v3 = 0;
  }
  int64_t v24 = (unint64_t)(v2 + 64) >> 6;
  while (1)
  {
    uint64_t v8 = v3;
    if (v1 < 0)
    {
      if (!__CocoaSet.Iterator.next()()) {
        goto LABEL_42;
      }
      sub_10001B284(0, &qword_1008113A0);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v11 = v31;
      swift_unknownObjectRelease();
      if (!v31) {
        goto LABEL_42;
      }
      goto LABEL_33;
    }
    if (!v4) {
      break;
    }
    unint64_t v9 = __clz(__rbit64(v4));
    v4 &= v4 - 1;
    unint64_t v10 = v9 | (v3 << 6);
LABEL_32:
    id v11 = *(id *)(*(void *)(v1 + 48) + 8 * v10);
    if (!v11) {
      goto LABEL_42;
    }
LABEL_33:
    type metadata accessor for JournalEntryAssetMO();
    uint64_t v15 = swift_dynamicCastClass();
    if (v15)
    {
      uint64_t v16 = (void *)v15;
      id v17 = v11;
      id v18 = [v16 assetType];
      if (!v18)
      {

        goto LABEL_9;
      }
      uint64_t v19 = v18;
      uint64_t v20 = static String._unconditionallyBridgeFromObjectiveC(_:)();
      uint64_t v22 = v21;

      if (v20 == 1802398060 && v22 == 0xE400000000000000)
      {
        swift_bridgeObjectRelease();

LABEL_42:
        sub_100082D3C();
        return;
      }
      char v23 = _stringCompareWithSmolCheck(_:_:expecting:)();
      swift_bridgeObjectRelease();

      if (v23) {
        goto LABEL_42;
      }
    }
    else
    {
LABEL_9:
    }
  }
  int64_t v12 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v12 >= v24) {
      goto LABEL_42;
    }
    unint64_t v13 = *(void *)(v25 + 8 * v12);
    ++v3;
    if (!v13)
    {
      uint64_t v3 = v8 + 2;
      if (v8 + 2 >= v24) {
        goto LABEL_42;
      }
      unint64_t v13 = *(void *)(v25 + 8 * v3);
      if (!v13)
      {
        uint64_t v3 = v8 + 3;
        if (v8 + 3 >= v24) {
          goto LABEL_42;
        }
        unint64_t v13 = *(void *)(v25 + 8 * v3);
        if (!v13)
        {
          uint64_t v3 = v8 + 4;
          if (v8 + 4 >= v24) {
            goto LABEL_42;
          }
          unint64_t v13 = *(void *)(v25 + 8 * v3);
          if (!v13)
          {
            uint64_t v3 = v8 + 5;
            if (v8 + 5 >= v24) {
              goto LABEL_42;
            }
            unint64_t v13 = *(void *)(v25 + 8 * v3);
            if (!v13)
            {
              uint64_t v14 = v8 + 6;
              while (v24 != v14)
              {
                unint64_t v13 = *(void *)(v25 + 8 * v14++);
                if (v13)
                {
                  uint64_t v3 = v14 - 1;
                  goto LABEL_31;
                }
              }
              goto LABEL_42;
            }
          }
        }
      }
    }
LABEL_31:
    unint64_t v4 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v3 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

void sub_1002AEF80()
{
  uint64_t v0 = Notification.userInfo.getter();
  if (v0)
  {
    uint64_t v1 = v0;
    uint64_t v11 = static String._unconditionallyBridgeFromObjectiveC(_:)();
    AnyHashable.init<A>(_:)();
    if (*(void *)(v1 + 16) && (unint64_t v2 = sub_10001B738((uint64_t)v13), (v3 & 1) != 0))
    {
      sub_10001B648(*(void *)(v1 + 56) + 32 * v2, (uint64_t)&v14);
    }
    else
    {
      long long v14 = 0u;
      long long v15 = 0u;
    }
    sub_10001DF0C((uint64_t)v13);
    if (*((void *)&v15 + 1))
    {
      sub_100010218(&qword_1007FB910);
      if (swift_dynamicCast())
      {
        unint64_t v4 = (void *)v11;
LABEL_11:
        uint64_t v12 = static String._unconditionallyBridgeFromObjectiveC(_:)();
        AnyHashable.init<A>(_:)();
        if (*(void *)(v1 + 16) && (unint64_t v5 = sub_10001B738((uint64_t)v13), (v6 & 1) != 0))
        {
          sub_10001B648(*(void *)(v1 + 56) + 32 * v5, (uint64_t)&v14);
        }
        else
        {
          long long v14 = 0u;
          long long v15 = 0u;
        }
        swift_bridgeObjectRelease();
        sub_10001DF0C((uint64_t)v13);
        if (*((void *)&v15 + 1))
        {
          sub_100010218(&qword_1007FB910);
          if (swift_dynamicCast())
          {
            uint64_t v7 = (void *)v12;
            goto LABEL_20;
          }
        }
        else
        {
          sub_10001457C((uint64_t)&v14, &qword_1007FAD50);
        }
        uint64_t v7 = &_swiftEmptySetSingleton;
LABEL_20:
        sub_10023CF34((unint64_t)v7, v4);
        sub_1002AEBE4(v8);
        char v10 = v9;
        swift_bridgeObjectRelease();
        if (v10) {
          sub_1002B1750();
        }
        return;
      }
    }
    else
    {
      sub_10001457C((uint64_t)&v14, &qword_1007FAD50);
    }
    unint64_t v4 = &_swiftEmptySetSingleton;
    goto LABEL_11;
  }
}

uint64_t sub_1002AF16C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100806258);
  sub_100026A54(v0, (uint64_t)qword_100806258);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002AF268()
{
  uint64_t v0 = type metadata accessor for Logger();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  char v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for OSSignposter();
  sub_100035380(v4, qword_100806270);
  sub_100026A54(v4, (uint64_t)qword_100806270);
  if (qword_1007F6CF8 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100026A54(v0, (uint64_t)qword_100806258);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  return OSSignposter.init(logger:)();
}

uint64_t AssetContentTypeOperation.main@Sendable ()()
{
  v1[4] = v0;
  uint64_t v2 = type metadata accessor for OSSignpostError();
  v1[5] = v2;
  v1[6] = *(void *)(v2 - 8);
  v1[7] = swift_task_alloc();
  v1[8] = swift_task_alloc();
  v1[9] = swift_task_alloc();
  uint64_t v3 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v1[10] = v3;
  v1[11] = *(void *)(v3 - 8);
  v1[12] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for Date();
  v1[13] = v4;
  v1[14] = *(void *)(v4 - 8);
  v1[15] = swift_task_alloc();
  uint64_t v5 = type metadata accessor for OSSignpostID();
  v1[16] = v5;
  v1[17] = *(void *)(v5 - 8);
  v1[18] = swift_task_alloc();
  v1[19] = swift_task_alloc();
  v1[20] = swift_task_alloc();
  v1[21] = swift_task_alloc();
  v1[22] = swift_task_alloc();
  return _swift_task_switch(sub_1002AF5C8, 0, 0);
}

uint64_t sub_1002AF5C8()
{
  uint64_t v68 = v0;
  if (qword_1007F6D00 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for OSSignposter();
  v0[23] = sub_100026A54(v1, (uint64_t)qword_100806270);
  OSSignposter.logHandle.getter();
  OSSignpostID.init(log:)();
  uint64_t v2 = OSSignposter.logHandle.getter();
  os_signpost_type_t v3 = static os_signpost_type_t.begin.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v61 = v0[21];
    uint64_t v64 = v0[17];
    uint64_t v63 = v0[16];
    uint64_t v5 = v0[14];
    uint64_t v4 = v0[15];
    uint64_t v6 = v0[13];
    uint64_t v65 = *(void (**)(void))(v64 + 16);
    v65();
    os_signpost_type_t v62 = v3;
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136315138;
    static Date.now.getter();
    sub_100237774();
    uint64_t v8 = dispatch thunk of CustomStringConvertible.description.getter();
    unint64_t v10 = v9;
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v11 = v65;
    v0[3] = sub_10011EA98(v8, v10, &v67);
    unint64_t v12 = (v64 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    os_signpost_id_t v13 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v2, v62, v13, "AssetContentTypeOperation", "%s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v64 + 8))(v61, v63);
  }
  else
  {
    uint64_t v14 = v0[17];

    uint64_t v11 = *(void (**)(void))(v14 + 16);
    unint64_t v12 = (v14 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  uint64_t v16 = v0[21];
  uint64_t v15 = v0[22];
  id v17 = v0 + 21;
  uint64_t v18 = v0[16];
  v0[24] = v11;
  v0[25] = v12;
  ((void (*)(uint64_t, uint64_t, uint64_t))v11)(v16, v15, v18);
  type metadata accessor for OSSignpostIntervalState();
  swift_allocObject();
  v0[26] = OSSignpostIntervalState.init(id:isOpen:)();
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  if (*(unsigned char *)(qword_10083D2F8 + OBJC_IVAR____TtC7Journal9DataStack_isProtectedDataAvailable) == 1)
  {
    id v19 = objc_allocWithZone((Class)NSFetchRequest);
    NSString v20 = String._bridgeToObjectiveC()();
    id v21 = [v19 initWithEntityName:v20];
    v0[27] = v21;

    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_1006D6D10;
    if (qword_1007F7020 != -1) {
      swift_once();
    }
    uint64_t v23 = v0[4];
    int64_t v24 = (void *)static NSPredicate.notRemovedFromCloud;
    *(void *)(v22 + 32) = static NSPredicate.notRemovedFromCloud;
    sub_10001B284(0, (unint64_t *)&qword_100800A30);
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v25 = swift_allocObject();
    *(_OWORD *)(v25 + 16) = xmmword_1006D6270;
    *(void *)(v25 + 56) = &type metadata for String;
    unint64_t v26 = sub_10001B2C0();
    *(void *)(v25 + 32) = 0x7079547465737361;
    *(void *)(v25 + 40) = 0xE900000000000065;
    *(void *)(v25 + 96) = &type metadata for String;
    *(void *)(v25 + 104) = v26;
    *(void *)(v25 + 64) = v26;
    *(void *)(v25 + 72) = 1802398060;
    *(void *)(v25 + 80) = 0xE400000000000000;
    id v27 = v24;
    *(void *)(v22 + 40) = NSPredicate.init(format:_:)();
    uint64_t v67 = v22;
    specialized Array._endMutation()();
    v0[2] = v67;
    if ((*(unsigned char *)(v23 + qword_100806298) & 1) == 0)
    {
      uint64_t v28 = swift_allocObject();
      *(_OWORD *)(v28 + 16) = xmmword_1006D6280;
      *(void *)(v28 + 56) = &type metadata for String;
      *(void *)(v28 + 64) = v26;
      *(void *)(v28 + 32) = 0x54746E65746E6F63;
      *(void *)(v28 + 40) = 0xEB00000000657079;
      NSPredicate.init(format:_:)();
      specialized Array._makeUniqueAndReserveCapacityIfNotUnique()();
      if (*(void *)((v0[2] & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v0[2] & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        specialized Array._createNewBuffer(bufferIsUnique:minimumCapacity:growForAppend:)();
      }
      specialized Array._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      specialized Array._endMutation()();
    }
    uint64_t v30 = v0[11];
    uint64_t v29 = v0[12];
    uint64_t v31 = v0[10];
    uint64_t v32 = v0[4];
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v34 = [self andPredicateWithSubpredicates:isa];

    [v21 setPredicate:v34];
    id v35 = [*(id *)(v32 + qword_1008062A0) newBackgroundContext];
    v0[28] = v35;
    uint64_t v36 = swift_allocObject();
    v0[29] = v36;
    *(void *)(v36 + 16) = v35;
    *(void *)(v36 + 24) = v21;
    (*(void (**)(uint64_t, void, uint64_t))(v30 + 104))(v29, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v31);
    v35;
    id v37 = v21;
    uint64_t v38 = (void *)swift_task_alloc();
    v0[30] = v38;
    void *v38 = v0;
    v38[1] = sub_1002AFF8C;
    uint64_t v39 = v0[12];
    return NSManagedObjectContext.perform<A>(schedule:_:)(v38, v39, sub_1002B1F24, v36, (char *)&type metadata for () + 8);
  }
  else
  {
    if (qword_1007F6CF8 != -1) {
      swift_once();
    }
    uint64_t v40 = type metadata accessor for Logger();
    sub_100026A54(v40, (uint64_t)qword_100806258);
    uint64_t v41 = Logger.logObject.getter();
    os_log_type_t v42 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v43 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v43 = 0;
      _os_log_impl((void *)&_mh_execute_header, v41, v42, "Skip running AssetContentTypeOperation because isProtectedDataAvailable == false. Most likely because the device is locked.", v43, 2u);
      swift_slowDealloc();
    }

    uint64_t v44 = OSSignposter.logHandle.getter();
    OSSignpostIntervalState.signpostID.getter();
    os_signpost_type_t v45 = static os_signpost_type_t.end.getter();
    if (OS_os_log.signpostsEnabled.getter())
    {
      uint64_t v66 = v11;
      uint64_t v46 = v0[8];
      uint64_t v48 = v0[5];
      uint64_t v47 = v0[6];
      swift_retain();
      checkForErrorAndConsumeState(state:)();
      swift_release();
      if ((*(unsigned int (**)(uint64_t, uint64_t))(v47 + 88))(v46, v48) == enum case for OSSignpostError.doubleEnd(_:))
      {
        BOOL v49 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(void, void))(v0[6] + 8))(v0[8], v0[5]);
        BOOL v49 = "";
      }
      uint64_t v52 = v0[19];
      uint64_t v53 = v0[16];
      uint64_t v54 = v0[17];
      ((void (*)(void, uint64_t, uint64_t))v66)(v0[21], v52, v53);
      Swift::Int v55 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::Int v55 = 0;
      os_signpost_id_t v56 = OSSignpostID.rawValue.getter();
      _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v44, v45, v56, "AssetContentTypeOperation", v49, v55, 2u);
      swift_slowDealloc();

      uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v54 + 8);
      v51(v52, v53);
    }
    else
    {
      uint64_t v50 = v0[17];

      uint64_t v51 = *(void (**)(uint64_t, uint64_t))(v50 + 8);
      id v17 = v0 + 19;
    }
    uint64_t v57 = v0[22];
    uint64_t v58 = v0[16];
    v51(*v17, v58);
    swift_release();
    v51(v57, v58);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v59 = (uint64_t (*)(void))v0[1];
    return v59();
  }
}

uint64_t sub_1002AFF8C()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 96);
  uint64_t v3 = *(void *)(*(void *)v1 + 88);
  uint64_t v4 = *(void *)(*(void *)v1 + 80);
  *(void *)(*(void *)v1 + 248) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_1002B03AC;
  }
  else {
    uint64_t v5 = sub_1002B0120;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002B0120()
{
  uint64_t v1 = (uint64_t *)(v0 + 160);
  uint64_t v2 = *(void **)(v0 + 216);

  uint64_t v3 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v4 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v5 = *(void *)(v0 + 72);
    uint64_t v7 = *(void *)(v0 + 40);
    uint64_t v6 = *(void *)(v0 + 48);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v6 + 88))(v5, v7) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 48) + 8))(*(void *)(v0 + 72), *(void *)(v0 + 40));
      uint64_t v8 = "";
    }
    uint64_t v1 = (uint64_t *)(v0 + 168);
    uint64_t v11 = *(void *)(v0 + 160);
    uint64_t v13 = *(void *)(v0 + 128);
    uint64_t v12 = *(void *)(v0 + 136);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 192))(*(void *)(v0 + 168), v11, v13);
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    os_signpost_id_t v15 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, v4, v15, "AssetContentTypeOperation", v8, v14, 2u);
    swift_slowDealloc();

    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v12 + 8);
    v10(v11, v13);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 136);

    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  }
  uint64_t v16 = *(void *)(v0 + 176);
  uint64_t v17 = *(void *)(v0 + 128);
  v10(*v1, v17);
  swift_release();
  v10(v16, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

uint64_t sub_1002B03AC()
{
  uint64_t v1 = (uint64_t *)(v0 + 144);
  uint64_t v2 = *(void **)(v0 + 216);

  uint64_t v3 = OSSignposter.logHandle.getter();
  OSSignpostIntervalState.signpostID.getter();
  os_signpost_type_t v4 = static os_signpost_type_t.end.getter();
  if (OS_os_log.signpostsEnabled.getter())
  {
    uint64_t v5 = *(void *)(v0 + 48);
    uint64_t v6 = *(void *)(v0 + 56);
    uint64_t v7 = *(void *)(v0 + 40);
    swift_retain();
    checkForErrorAndConsumeState(state:)();
    swift_release();
    if ((*(unsigned int (**)(uint64_t, uint64_t))(v5 + 88))(v6, v7) == enum case for OSSignpostError.doubleEnd(_:))
    {
      uint64_t v8 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(void, void))(*(void *)(v0 + 48) + 8))(*(void *)(v0 + 56), *(void *)(v0 + 40));
      uint64_t v8 = "";
    }
    uint64_t v1 = (uint64_t *)(v0 + 168);
    uint64_t v11 = *(void *)(v0 + 136);
    uint64_t v12 = *(void *)(v0 + 144);
    uint64_t v13 = *(void *)(v0 + 128);
    (*(void (**)(void, uint64_t, uint64_t))(v0 + 192))(*(void *)(v0 + 168), v12, v13);
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    os_signpost_id_t v15 = OSSignpostID.rawValue.getter();
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, v4, v15, "AssetContentTypeOperation", v8, v14, 2u);
    swift_slowDealloc();

    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v10(v12, v13);
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 136);

    unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  }
  uint64_t v16 = *(void *)(v0 + 176);
  uint64_t v17 = *(void *)(v0 + 128);
  v10(*v1, v17);
  swift_release();
  v10(v16, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(void))(v0 + 8);
  return v18();
}

void sub_1002B0638(void *a1)
{
  uint64_t v3 = sub_100010218(&qword_1007F9F60);
  __chkstk_darwin(v3 - 8);
  uint64_t v104 = (uint64_t)&v91 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_1007F9F68);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v91 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v91 - v10;
  type metadata accessor for JournalEntryAssetMO();
  unint64_t v12 = NSManagedObjectContext.fetch<A>(_:)();
  if (v1) {
    return;
  }
  unint64_t v13 = v12;
  uint64_t v103 = v11;
  uint64_t v110 = v5;
  id v97 = a1;
  uint64_t v98 = 0;
  unint64_t v14 = v12 >> 62;
  if (!(v12 >> 62))
  {
    uint64_t v15 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v15) {
      goto LABEL_4;
    }
LABEL_58:
    swift_bridgeObjectRelease();
    if (qword_1007F6CF8 == -1)
    {
LABEL_59:
      uint64_t v90 = type metadata accessor for Logger();
      sub_100026A54(v90, (uint64_t)qword_100806258);
      uint64_t v85 = Logger.logObject.getter();
      os_log_type_t v86 = static os_log_type_t.default.getter();
      if (!os_log_type_enabled(v85, v86)) {
        goto LABEL_62;
      }
      BOOL v87 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v87 = 0;
      unint64_t v88 = "AssetContentTypeOperation - nothing to process.";
      goto LABEL_61;
    }
LABEL_65:
    swift_once();
    goto LABEL_59;
  }
  swift_bridgeObjectRetain();
  uint64_t v15 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v15) {
    goto LABEL_58;
  }
LABEL_4:
  if (qword_1007F6CF8 != -1) {
    swift_once();
  }
  uint64_t v16 = type metadata accessor for Logger();
  uint64_t v17 = sub_100026A54(v16, (uint64_t)qword_100806258);
  swift_bridgeObjectRetain_n();
  uint64_t v109 = v17;
  uint64_t v18 = Logger.logObject.getter();
  os_log_type_t v19 = static os_log_type_t.default.getter();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v108 = v15;
  if (v20)
  {
    id v21 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)id v21 = 134217984;
    if (v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = (void *)_CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = *(void **)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    v112[0] = v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v18, v19, "AssetContentTypeOperation found %ld assets to update.", v21, 0xCu);
    swift_slowDealloc();

    uint64_t v15 = v108;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v24 = v110;
  if (v15 < 1)
  {
    __break(1u);
    goto LABEL_65;
  }
  uint64_t v25 = 0;
  unint64_t v106 = v13 & 0xC000000000000001;
  uint64_t v102 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56);
  uint64_t v96 = v112;
  *(void *)&long long v23 = 138412546;
  long long v105 = v23;
  uint64_t v95 = (char *)&type metadata for Any + 8;
  uint64_t v91 = "n";
  uint64_t v100 = v8;
  unint64_t v107 = v13;
  do
  {
    if (v106) {
      id v26 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
    }
    else {
      id v26 = *(id *)(v13 + 8 * v25 + 32);
    }
    id v27 = v26;
    id v28 = sub_10017E76C();
    _s9LinkAssetCMa(0);
    uint64_t v29 = swift_dynamicCastClass();
    if (v29)
    {
      uint64_t v30 = v29;
      uint64_t v31 = *(void *)(v29 + OBJC_IVAR____TtCC7Journal10Journaling9LinkAsset_metadata);
      if (v31)
      {
        id v32 = v28;
        swift_retain();
        uint64_t v33 = (uint64_t)v103;
        sub_10003BD50((uint64_t)v103);
        uint64_t v34 = _s9LinkAssetC8LinkDataVMa(0);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 48))(v33, 1, v34))
        {
          uint64_t v35 = v33;
          uint64_t v36 = (uint64_t)v100;
          sub_1002B20D0(v33, (uint64_t)v100);
          uint64_t v37 = v104;
          sub_1002B2138(v36, v104);
          (*v102)(v37, 0, 1, v24);
          uint64_t v38 = v31 + *(void *)(*(void *)v31 + 104);
          swift_beginAccess();
          sub_1000D5E0C(v37, v38);
          swift_endAccess();
          swift_release();
          sub_10001457C(v35, &qword_1007F9F68);
        }
        else
        {
          id v99 = v32;
          id v54 = sub_1000CFD70();
          uint64_t v55 = v33;
          uint64_t v56 = v104;
          sub_1002B2138(v55, v104);
          (*v102)(v56, 0, 1, v24);
          uint64_t v57 = v31 + *(void *)(*(void *)v31 + 104);
          swift_beginAccess();
          sub_1000D5E0C(v56, v57);
          swift_endAccess();
          swift_release();
          id v101 = v54;
          if (v54)
          {
            unint64_t v58 = 0xE500000000000000;
            uint64_t v59 = 0x636973756DLL;
            switch(sub_1000D1B70())
            {
              case 1u:
                unint64_t v58 = 0xE700000000000000;
                uint64_t v59 = 0x74736163646F70;
                break;
              case 2u:
                unint64_t v58 = 0xE700000000000000;
                uint64_t v59 = 0x656C6369747261;
                break;
              case 3u:
                unint64_t v58 = 0xE400000000000000;
                uint64_t v59 = 1802465122;
                break;
              case 4u:
                unint64_t v58 = 0xE200000000000000;
                uint64_t v59 = 30324;
                break;
              case 5u:
                unint64_t v58 = (unint64_t)v91 | 0x8000000000000000;
                uint64_t v59 = 0xD000000000000010;
                break;
              case 6u:
                unint64_t v58 = 0xE700000000000000;
                uint64_t v59 = 0x6E776F6E6B6E75;
                break;
              default:
                break;
            }
            id v60 = [v27 contentType:v91];
            if (!v60) {
              goto LABEL_44;
            }
            uint64_t v61 = v60;
            uint64_t v62 = static String._unconditionallyBridgeFromObjectiveC(_:)();
            uint64_t v64 = v63;

            if (v62 == v59 && v64 == v58)
            {
              swift_bridgeObjectRelease();
              goto LABEL_42;
            }
            char v65 = _stringCompareWithSmolCheck(_:_:expecting:)();
            swift_bridgeObjectRelease();
            if (v65)
            {
LABEL_42:
              id v66 = v27;
              swift_bridgeObjectRetain();
              uint64_t v67 = Logger.logObject.getter();
              os_log_type_t v68 = static os_log_type_t.default.getter();
              int v69 = v68;
              if (os_log_type_enabled(v67, v68))
              {
                uint64_t v70 = swift_slowAlloc();
                unint64_t v71 = (void *)swift_slowAlloc();
                uint64_t v94 = (void *)swift_slowAlloc();
                v112[0] = v94;
                *(_DWORD *)uint64_t v70 = v105;
                int v93 = v69;
                id v72 = [v66 objectID];
                uint64_t v111 = (uint64_t)v72;
                os_log_t v92 = v67;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *unint64_t v71 = v72;

                *(_WORD *)(v70 + 12) = 2080;
                swift_bridgeObjectRetain();
                uint64_t v111 = sub_10011EA98(v59, v58, (uint64_t *)v112);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                os_log_t v73 = v92;
                _os_log_impl((void *)&_mh_execute_header, v92, (os_log_type_t)v93, "AssetContentTypeOperation[%@]: contentType is already set to correct value (%s)", (uint8_t *)v70, 0x16u);
                sub_100010218((uint64_t *)&unk_1007FC430);
                swift_arrayDestroy();
                swift_slowDealloc();
LABEL_46:
                swift_arrayDestroy();
                swift_slowDealloc();
                swift_slowDealloc();

                id v81 = v99;
                goto LABEL_15;
              }

              swift_bridgeObjectRelease_n();
            }
            else
            {
LABEL_44:
              NSString v74 = String._bridgeToObjectiveC()();
              [v27 setContentType:v74];

              id v66 = v27;
              swift_bridgeObjectRetain();
              uint64_t v75 = Logger.logObject.getter();
              os_log_type_t v76 = static os_log_type_t.default.getter();
              int v77 = v76;
              if (os_log_type_enabled(v75, v76))
              {
                uint64_t v78 = swift_slowAlloc();
                uint64_t v79 = (void *)swift_slowAlloc();
                uint64_t v94 = (void *)swift_slowAlloc();
                v112[0] = v94;
                *(_DWORD *)uint64_t v78 = v105;
                int v93 = v77;
                id v80 = [v66 objectID];
                uint64_t v111 = (uint64_t)v80;
                os_log_t v92 = v75;
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                *uint64_t v79 = v80;

                *(_WORD *)(v78 + 12) = 2080;
                swift_bridgeObjectRetain();
                uint64_t v111 = sub_10011EA98(v59, v58, (uint64_t *)v112);
                UnsafeMutableRawBufferPointer.copyMemory(from:)();
                swift_bridgeObjectRelease_n();
                os_log_t v73 = v92;
                _os_log_impl((void *)&_mh_execute_header, v92, (os_log_type_t)v93, "AssetContentTypeOperation[%@]: setting content type to %s", (uint8_t *)v78, 0x16u);
                sub_100010218((uint64_t *)&unk_1007FC430);
                swift_arrayDestroy();
                swift_slowDealloc();
                goto LABEL_46;
              }

              swift_bridgeObjectRelease_n();
            }

            id v82 = v99;
            goto LABEL_15;
          }
        }
      }
      else
      {
        id v46 = v28;
      }
      id v47 = v28;
      id v48 = v27;
      BOOL v49 = Logger.logObject.getter();
      os_log_type_t v50 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v49, v50))
      {
        uint64_t v51 = swift_slowAlloc();
        uint64_t v52 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v51 = v105;
        id v53 = [v48 objectID];
        *(void *)(v51 + 4) = v53;
        *uint64_t v52 = v53;

        *(_WORD *)(v51 + 12) = 2112;
        *(void *)(v51 + 14) = v30;
        v52[1] = v30;
        _os_log_impl((void *)&_mh_execute_header, v49, v50, "AssetContentTypeOperation[%@]: can't get linkMetadata from %@.", (uint8_t *)v51, 0x16u);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
    else
    {
      id v39 = v28;
      id v40 = v27;
      uint64_t v41 = Logger.logObject.getter();
      os_log_type_t v42 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v41, v42))
      {
        uint64_t v43 = swift_slowAlloc();
        uint64_t v44 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v43 = v105;
        id v45 = [v40 objectID];
        *(void *)(v43 + 4) = v45;
        *uint64_t v44 = v45;

        *(_WORD *)(v43 + 12) = 2112;
        *(void *)(v43 + 14) = v39;
        v44[1] = v39;
        _os_log_impl((void *)&_mh_execute_header, v41, v42, "AssetContentTypeOperation[%@]: asset (%@) is not LinkAsset.", (uint8_t *)v43, 0x16u);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
      }
    }
LABEL_15:
    unint64_t v13 = v107;
    ++v25;
    uint64_t v24 = v110;
  }
  while (v108 != v25);
  swift_bridgeObjectRelease();
  id v83 = v97;
  if (([v97 hasChanges] & 1) == 0)
  {
    uint64_t v85 = Logger.logObject.getter();
    os_log_type_t v86 = static os_log_type_t.default.getter();
    if (!os_log_type_enabled(v85, v86)) {
      goto LABEL_62;
    }
    BOOL v87 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)BOOL v87 = 0;
    unint64_t v88 = "AssetContentTypeOperation no changes to save.";
LABEL_61:
    _os_log_impl((void *)&_mh_execute_header, v85, v86, v88, v87, 2u);
    swift_slowDealloc();
    goto LABEL_62;
  }
  v112[0] = 0;
  if ([v83 save:v112])
  {
    id v84 = v112[0];
    uint64_t v85 = Logger.logObject.getter();
    os_log_type_t v86 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v85, v86))
    {
      BOOL v87 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)BOOL v87 = 0;
      unint64_t v88 = "AssetContentTypeOperation saved successfully.";
      goto LABEL_61;
    }
LABEL_62:
  }
  else
  {
    id v89 = v112[0];
    _convertNSErrorToError(_:)();

    swift_willThrow();
  }
}

void AssetContentTypeOperation.init()()
{
}

void sub_1002B152C()
{
}

void sub_1002B155C()
{
}

id AssetContentTypeOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AssetContentTypeOperation();
  return [super dealloc];
}

void sub_1002B15A4(uint64_t a1)
{
}

uint64_t sub_1002B15B4(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  objc_super v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *objc_super v2 = v1;
  v2[1] = sub_1002B1644;
  return AssetContentTypeOperation.main@Sendable ()();
}

uint64_t sub_1002B1644()
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1;
  swift_task_dealloc();
  if (!v0) {
    **(unsigned char **)(v2 + 16) = 0;
  }
  uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
  return v4();
}

void sub_1002B1750()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_100806288)
  {
    if (qword_1007F6CF8 != -1) {
      swift_once();
    }
    uint64_t v4 = type metadata accessor for Logger();
    sub_100026A54(v4, (uint64_t)qword_100806258);
    os_log_t v11 = (os_log_t)Logger.logObject.getter();
    os_log_type_t v5 = static os_log_type_t.default.getter();
    if (os_log_type_enabled(v11, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v5, "AssetContentTypeOperation.scheduleOperation - operation already scheduled", v6, 2u);
      swift_slowDealloc();
    }
    os_log_t v7 = v11;
  }
  else
  {
    uint64_t v8 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v3, 1, 1, v8);
    uint64_t v9 = (void *)swift_allocObject();
    void v9[2] = 0;
    v9[3] = 0;
    void v9[4] = v0;
    qword_100806288 = sub_100328A60((uint64_t)v3, (uint64_t)&unk_1008063D0, (uint64_t)v9);
    swift_release();
  }
}

uint64_t sub_1002B1934()
{
  uint64_t v1 = type metadata accessor for ContinuousClock();
  v0[4] = v1;
  v0[5] = *(void *)(v1 - 8);
  v0[6] = swift_task_alloc();
  return _swift_task_switch(sub_1002B19F0, 0, 0);
}

uint64_t sub_1002B19F0()
{
  if (qword_1007F6CF8 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  *(void *)(v0 + 56) = sub_100026A54(v1, (uint64_t)qword_100806258);
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.debug.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "AssetContentTypeOperation.scheduleOperation - starting operation task timer", v4, 2u);
    swift_slowDealloc();
  }

  ContinuousClock.init()();
  os_log_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, char))((char *)&dword_100812A68 + dword_100812A68);
  os_log_type_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  *os_log_type_t v5 = v0;
  v5[1] = sub_1002B1B7C;
  return v7(5000000000000000000, 0, 0, 0, 1);
}

uint64_t sub_1002B1B7C()
{
  uint64_t v2 = (void *)*v1;
  swift_task_dealloc();
  uint64_t v3 = v2[6];
  uint64_t v4 = v2[5];
  uint64_t v5 = v2[4];
  if (v0)
  {
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_1002B21A0;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    uint64_t v6 = sub_1002B1D14;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_1002B1D14()
{
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "AssetContentTypeOperation.scheduleOperation - running operation", v3, 2u);
    swift_slowDealloc();
  }

  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v4 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container);
  uint64_t v5 = (objc_class *)type metadata accessor for AssetContentTypeOperation();
  uint64_t v6 = objc_allocWithZone(v5);
  *(void *)&v6[qword_1008062A0] = v4;
  v6[qword_100806298] = 0;
  v0[1].receiver = v6;
  v0[1].super_class = v5;
  id v7 = v4;
  id v8 = [super init];
  if (qword_1007F6EE0 != -1) {
    swift_once();
  }
  [(id)qword_10083D450 addOperation:v8];

  qword_100806288 = 0;
  swift_release();
  swift_task_dealloc();
  super_class = (uint64_t (*)(void))v0->super_class;
  return super_class();
}

uint64_t sub_1002B1EE4()
{
  return swift_deallocObject();
}

void sub_1002B1F24()
{
  sub_1002B0638(*(void **)(v0 + 16));
}

uint64_t type metadata accessor for AssetContentTypeOperation()
{
  uint64_t result = qword_1008062D0;
  if (!qword_1008062D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002B1F8C()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1002B1FDC()
{
  return type metadata accessor for AssetContentTypeOperation();
}

uint64_t sub_1002B1FE4()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002B201C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10002C194;
  return sub_1002B1934();
}

uint64_t sub_1002B20D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F9F68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002B2138(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F9F68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002B21A4()
{
  type metadata accessor for MainActor();
  *(void *)(v0 + 16) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_10007D354, v2, v1);
}

void sub_1002B2238()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingManager + 8);
  uint64_t ObjectType = swift_getObjectType();
  if ((*(unsigned __int8 (**)(uint64_t, uint64_t))(v1 + 40))(ObjectType, v1))
  {
    sub_1002B25B8();
  }
}

id sub_1002B22B8()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController____lazy_storage___timeLabel;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController____lazy_storage___timeLabel);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController____lazy_storage___timeLabel);
  }
  else
  {
    id v4 = sub_1002B2C84();
    uint64_t v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    uint64_t v2 = 0;
  }
  id v6 = v2;
  return v3;
}

id sub_1002B2318()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Locale();
  __chkstk_darwin(v2 - 8);
  uint64_t v3 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v3 - 8);
  uint64_t v4 = OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController____lazy_storage___stopButton;
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController____lazy_storage___stopButton);
  if (v5)
  {
    id v6 = *(id *)(v0 + OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController____lazy_storage___stopButton);
  }
  else
  {
    sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
    *(void *)(swift_allocObject() + 24) = *(void *)(v0
                                                      + OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingManager
                                                      + 8);
    swift_unknownObjectWeakInit();
    id v7 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    type metadata accessor for AudioRecordingLiveActivityStopButton();
    id v8 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) initWithFrame:v7 primaryAction:0.0];
    [v8 setTranslatesAutoresizingMaskIntoConstraints:0];
    swift_getKeyPath();
    swift_getKeyPath();
    id v9 = v8;
    static UIView.Invalidating.subscript.setter();
    id v10 = v9;
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    String.init(localized:table:bundle:locale:comment:)();
    NSString v11 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    [v10 setAccessibilityLabel:v11];

    unint64_t v12 = *(void **)(v1 + v4);
    *(void *)(v1 + v4) = v10;
    id v6 = v10;

    uint64_t v5 = 0;
  }
  id v13 = v5;
  return v6;
}

void sub_1002B25B8()
{
  id v1 = sub_1002B22B8();
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingManager + 8);
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(double (**)(uint64_t, uint64_t))(v4 + 24);
  double v6 = v5(ObjectType, v4);
  if (qword_1007F7168 != -1) {
    swift_once();
  }
  NSString v7 = [(id)qword_100810AD0 stringFromTimeInterval:v6 + 0.5];
  if (v7)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v7 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v1 setText:v7];

  id v8 = sub_1002B22B8();
  double v9 = v5(ObjectType, v4);
  if (qword_1007F7170 != -1) {
    swift_once();
  }
  NSString v10 = [(id)qword_100810AD8 stringFromTimeInterval:v9 + 0.5];
  if (v10)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();

    NSString v10 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  [v8 setAccessibilityValue:v10];
}

id sub_1002B2880()
{
  return sub_1002B2FCC(type metadata accessor for StackAccessoryView);
}

uint64_t type metadata accessor for StackAccessoryView()
{
  return self;
}

uint64_t sub_1002B2AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002B2B58, v6, v5);
}

id sub_1002B2B58()
{
  id v1 = *(void **)(v0 + 16);
  swift_release();
  id result = [v1 view];
  if (result)
  {
    uint64_t v3 = result;
    [result setNeedsLayout];

    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return (id)v4();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002B2C84()
{
  uint64_t v0 = type metadata accessor for ColorResource();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [objc_allocWithZone((Class)UILabel) init];
  sub_10001B284(0, (unint64_t *)&qword_1007FC140);
  if (qword_1007F7F88 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_100026A54(v0, (uint64_t)qword_10083EFB8);
  (*(void (**)(char *, uint64_t, uint64_t))(v1 + 16))(v3, v5, v0);
  uint64_t v6 = (void *)UIColor.init(resource:)();
  [v4 setTextColor:v6];

  id v7 = [self preferredFontDescriptorWithTextStyle:UIFontTextStyleTitle3 compatibleWithTraitCollection:0];
  id v16 = v7;
  long long v14 = *(unint64_t *)&UIFontWeightMedium;
  char v15 = 3;
  sub_10021B55C(&v16, (uint64_t *)&v14, &v13);
  uint64_t v8 = v13;
  id v16 = v13;
  long long v14 = xmmword_1006E1270;
  char v15 = 2;
  sub_10021B55C(&v16, (uint64_t *)&v14, &v13);

  double v9 = v13;
  id v10 = [self fontWithDescriptor:v13 size:0.0];

  [v4 setFont:v10];
  [v4 setAdjustsFontForContentSizeCategory:1];
  [v4 setTranslatesAutoresizingMaskIntoConstraints:0];
  return v4;
}

uint64_t sub_1002B2F00(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v4 = *(void *)(a2 + 24);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(*(void *)(v4 + 8) + 16))(ObjectType);
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_1002B2FB4()
{
  return sub_1002B2FCC(type metadata accessor for AudioRecordingLiveActivityViewController);
}

id sub_1002B2FCC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  [super dealloc];
}

uint64_t type metadata accessor for AudioRecordingLiveActivityViewController()
{
  return self;
}

uint64_t sub_1002B3094()
{
  return (*(uint64_t (**)(void))((swift_isaMask & **(void **)(v0 + 16)) + 0xF0))();
}

void (*sub_1002B30E8())()
{
  return sub_1002B317C;
}

uint64_t sub_1002B3144()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1002B317C()
{
  sub_1002B38D8(v0, (uint64_t)&unk_1007A2E78, (uint64_t)&unk_100806468);
}

uint64_t sub_1002B31B8(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  id v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *id v7 = v2;
  v7[1] = sub_100052588;
  return sub_1002B2AC0(a1, v4, v5, v6);
}

uint64_t sub_1002B326C(char *a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)&a1[OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingManager + 8];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 40))(ObjectType, v5);
  if (!(_BYTE)result)
  {
    uint64_t v8 = OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingFinishedTask;
    uint64_t v9 = *(void *)&a1[OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingFinishedTask];
    if (!v9)
    {
      uint64_t v10 = type metadata accessor for TaskPriority();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v4, 1, 1, v10);
      type metadata accessor for MainActor();
      NSString v11 = a1;
      uint64_t v12 = static MainActor.shared.getter();
      id v13 = (void *)swift_allocObject();
      v13[2] = v12;
      v13[3] = &protocol witness table for MainActor;
      v13[4] = v11;
      uint64_t v9 = sub_100328A60((uint64_t)v4, (uint64_t)&unk_100806488, (uint64_t)v13);
    }
    *(void *)&a1[v8] = v9;
    swift_retain();
    return swift_release();
  }
  return result;
}

uint64_t sub_1002B33EC()
{
  return sub_1002B326C(*(char **)(v0 + 16));
}

uint64_t sub_1002B33F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  v4[2] = a4;
  v4[3] = type metadata accessor for MainActor();
  v4[4] = static MainActor.shared.getter();
  v4[5] = static MainActor.shared.getter();
  uint64_t v8 = (uint64_t (*)(void))(*(void *)((swift_isaMask & *a4) + 0xA8) + **(int **)((swift_isaMask & *a4) + 0xA8));
  uint64_t v6 = (void *)swift_task_alloc();
  void v4[6] = v6;
  *uint64_t v6 = v4;
  v6[1] = sub_1002B352C;
  return v8();
}

uint64_t sub_1002B352C()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  *(void *)(v1 + 56) = v3;
  *(void *)(v1 + 64) = v2;
  return _swift_task_switch(sub_1002B3670, v3, v2);
}

uint64_t sub_1002B3670()
{
  uint64_t v1 = (uint64_t *)(*(void *)(v0 + 16)
                 + OBJC_IVAR____TtC7Journal40AudioRecordingLiveActivityViewController_recordingManager);
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)&dword_100809A18 + dword_100809A18);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1002B3730;
  return v6(v3, v2);
}

uint64_t sub_1002B3730()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 64);
  uint64_t v3 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_1002B3850, v3, v2);
}

uint64_t sub_1002B3850()
{
  swift_release();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_100193204, v1, v0);
}

void sub_1002B38D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v8 = (void *)Strong;
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    type metadata accessor for MainActor();
    id v10 = v8;
    uint64_t v11 = static MainActor.shared.getter();
    uint64_t v12 = (void *)swift_allocObject();
    v12[2] = v11;
    void v12[3] = &protocol witness table for MainActor;
    v12[4] = v10;
    sub_100328A60((uint64_t)v6, a3, (uint64_t)v12);
    swift_release();
  }
}

void sub_1002B3A20()
{
  sub_1002B38D8(v0, (uint64_t)&unk_1007A2EA0, (uint64_t)&unk_100806478);
}

uint64_t sub_1002B3A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a4;
  type metadata accessor for MainActor();
  *(void *)(v4 + 24) = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002B3AF0, v6, v5);
}

uint64_t sub_1002B3AF0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_release();
  *(void *)(swift_task_alloc() + 16) = v1;
  *(void *)(swift_task_alloc() + 16) = v1;
  withObservationTracking<A>(_:onChange:)();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1002B3BCC(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_1002B3A58(a1, v4, v5, v6);
}

void (*sub_1002B3C80())()
{
  return sub_1002B3A20;
}

uint64_t sub_1002B3CE0(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = (void *)v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_1002B33F4(a1, v4, v5, v6);
}

uint64_t sub_1002B3D94()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002B3DCC(uint64_t a1)
{
  return sub_1002B2F00(a1, v1);
}

uint64_t sub_1002B3DE0()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100806490);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100806490);
  if (qword_1007F7D48 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EBD8);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

unint64_t sub_1002B3EA8(char a1)
{
  unint64_t result = 0x6564497465737361;
  switch(a1)
  {
    case 1:
      unint64_t result = 1702125924;
      break;
    case 2:
      unint64_t result = 0x6D614E6563616C70;
      break;
    case 3:
      unint64_t result = 0x656475746974616CLL;
      break;
    case 4:
      unint64_t result = 0x64757469676E6F6CLL;
      break;
    case 5:
      unint64_t result = 1702521203;
      break;
    case 6:
      unint64_t result = 0x7243657261757173;
      break;
    case 7:
      unint64_t result = 0xD000000000000011;
      break;
    case 8:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1002B3FDC(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_100010218(&qword_1008065E0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10002E0BC(a1, a1[3]);
  sub_1002B6000();
  dispatch thunk of Encoder.container<A>(keyedBy:)();
  LOBYTE(v14) = 0;
  KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  if (!v2)
  {
    uint64_t v9 = _s10PhotoAssetC9PhotoDataVMa(0);
    LOBYTE(v14) = 1;
    type metadata accessor for Date();
    sub_1002B4FC0(&qword_1007F99F0, (void (*)(uint64_t))&type metadata accessor for Date);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v14) = 2;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v14) = 3;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v14) = 4;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    id v10 = (long long *)(v3 + *(int *)(v9 + 36));
    char v11 = *((unsigned char *)v10 + 16);
    long long v14 = *v10;
    char v15 = v11;
    v13[15] = 5;
    type metadata accessor for CGSize(0);
    sub_1002B4FC0(&qword_1007F99F8, type metadata accessor for CGSize);
    KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
    LOBYTE(v14) = 6;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v14) = 7;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
    LOBYTE(v14) = 8;
    KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1002B4348@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v42 = a2;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_100010218(&qword_1008065D0);
  uint64_t v7 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = _s10PhotoAssetC9PhotoDataVMa(0);
  __chkstk_darwin(v45);
  char v11 = (uint64_t *)((char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (uint64_t)a1;
  sub_10002E0BC(a1, a1[3]);
  sub_1002B6000();
  uint64_t v44 = v9;
  dispatch thunk of Decoder.container<A>(keyedBy:)();
  if (v2) {
    return _s7Journal19DynamicWaveformViewVwxx_0((uint64_t)a1);
  }
  uint64_t v13 = (uint64_t)v6;
  uint64_t v14 = v7;
  LOBYTE(v46) = 0;
  uint64_t v15 = v42;
  uint64_t v16 = v43;
  *char v11 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  v11[1] = v17;
  type metadata accessor for Date();
  LOBYTE(v46) = 1;
  sub_1002B4FC0(&qword_10080E9D0, (void (*)(uint64_t))&type metadata accessor for Date);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  uint64_t v18 = (int *)v45;
  sub_10002C4EC(v13, (uint64_t)v11 + *(int *)(v45 + 20), (uint64_t *)&unk_1007FC470);
  LOBYTE(v46) = 2;
  uint64_t v19 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  BOOL v20 = (uint64_t *)((char *)v11 + v18[6]);
  *BOOL v20 = v19;
  v20[1] = v21;
  LOBYTE(v46) = 3;
  uint64_t v22 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  long long v23 = (char *)v11 + v18[7];
  *(void *)long long v23 = v22;
  v23[8] = v24 & 1;
  LOBYTE(v46) = 4;
  uint64_t v25 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  id v26 = (char *)v11 + v18[8];
  *(void *)id v26 = v25;
  v26[8] = v27 & 1;
  type metadata accessor for CGSize(0);
  char v48 = 5;
  sub_1002B4FC0(&qword_1007F99E0, type metadata accessor for CGSize);
  KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
  char v28 = v47;
  uint64_t v29 = (char *)v11 + v18[9];
  *(_OWORD *)uint64_t v29 = v46;
  unsigned char v29[16] = v28;
  LOBYTE(v46) = 6;
  uint64_t v30 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v31 = (uint64_t *)((char *)v11 + v18[10]);
  *uint64_t v31 = v30;
  v31[1] = v32;
  LOBYTE(v46) = 7;
  uint64_t v33 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v34 = (uint64_t *)((char *)v11 + v18[11]);
  *uint64_t v34 = v33;
  v34[1] = v35;
  LOBYTE(v46) = 8;
  uint64_t v36 = v44;
  uint64_t v37 = KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
  uint64_t v39 = v38;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v36, v16);
  id v40 = (uint64_t *)((char *)v11 + *(int *)(v45 + 48));
  *id v40 = v37;
  v40[1] = v39;
  sub_1001618E0((uint64_t)v11, v15);
  _s7Journal19DynamicWaveformViewVwxx_0(v12);
  return sub_100161944((uint64_t)v11);
}

unint64_t sub_1002B496C()
{
  return sub_1002B3EA8(*v0);
}

uint64_t sub_1002B4974(uint64_t a1)
{
  unint64_t v2 = sub_1002B6000();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1002B49B0(uint64_t a1)
{
  unint64_t v2 = sub_1002B6000();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1002B49EC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1002B4348(a1, a2);
}

uint64_t sub_1002B4A04(void *a1)
{
  return sub_1002B3FDC(a1);
}

uint64_t sub_1002B4A1C()
{
  uint64_t v1 = _s10PhotoAssetC9PhotoDataVMa(0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218((uint64_t *)&unk_100804080);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(v0 + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata)) {
    return 0;
  }
  swift_retain();
  sub_1000395AC((uint64_t)v7);
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1))
  {
    sub_10001457C((uint64_t)v7, (uint64_t *)&unk_100804080);
    return 0;
  }
  else
  {
    sub_1001618E0((uint64_t)v7, (uint64_t)v4);
    sub_10001457C((uint64_t)v7, (uint64_t *)&unk_100804080);
    uint64_t v8 = *(void *)&v4[*(int *)(v1 + 24)];
    swift_bridgeObjectRetain();
    sub_100161944((uint64_t)v4);
  }
  return v8;
}

uint64_t sub_1002B4BB8()
{
  return swift_release();
}

id sub_1002B4BC8()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s10PhotoAssetCMa(0);
  return [super dealloc];
}

uint64_t sub_1002B4C10()
{
  return _s10PhotoAssetCMa(0);
}

uint64_t _s10PhotoAssetCMa(uint64_t a1)
{
  return sub_10003352C(a1, (uint64_t *)&unk_1008064D0);
}

uint64_t sub_1002B4C38()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1002B4C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1002B4C90);
}

uint64_t sub_1002B4C90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 2147483646)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    int v5 = v4 - 1;
    if (v5 < 0) {
      int v5 = -1;
    }
    return (v5 + 1);
  }
  else
  {
    uint64_t v9 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 48);
    uint64_t v11 = v9;
    uint64_t v12 = a1 + *(int *)(a3 + 20);
    return v10(v12, a2, v11);
  }
}

uint64_t sub_1002B4D50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1002B4D64);
}

uint64_t sub_1002B4D64(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 2147483646)
  {
    *(void *)(result + 8) = a2;
  }
  else
  {
    uint64_t v7 = sub_100010218((uint64_t *)&unk_1007FC470);
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 20);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t _s10PhotoAssetC9PhotoDataVMa(uint64_t a1)
{
  return sub_10003352C(a1, qword_100806538);
}

void sub_1002B4E30()
{
  sub_100033618();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t sub_1002B4EE4()
{
  return swift_retain();
}

uint64_t sub_1002B4EF4(uint64_t a1)
{
  *(void *)(v1 + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata) = a1;
  return swift_release();
}

uint64_t sub_1002B4F0C()
{
  return sub_1002B4A1C();
}

uint64_t sub_1002B4F30()
{
  return sub_1002B4FC0(&qword_1007F9DF8, (void (*)(uint64_t))_s10PhotoAssetC9PhotoDataVMa);
}

uint64_t sub_1002B4F78()
{
  return sub_1002B4FC0(&qword_100806590, (void (*)(uint64_t))_s10PhotoAssetC9PhotoDataVMa);
}

uint64_t sub_1002B4FC0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

char *sub_1002B5008(char a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 a10, uint64_t a11, unsigned __int8 a12, uint64_t a13, char *a14, unsigned __int8 a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v167 = a5;
  uint64_t v168 = a8;
  uint64_t v163 = a7;
  uint64_t v175 = a6;
  uint64_t v161 = a4;
  uint64_t v185 = a3;
  uint64_t v154 = a18;
  sub_10002C4EC(a18, (uint64_t)v181, (uint64_t *)&unk_10080E010);
  double v157 = *(double *)&v181[1];
  double v158 = *(double *)v181;
  double v155 = *(double *)&v181[3];
  double v156 = *(double *)&v181[2];
  uint64_t v153 = a17;
  sub_10002C4EC(a17, (uint64_t)v180, (uint64_t *)&unk_10080E010);
  CGFloat v20 = *(double *)v180;
  CGFloat v21 = *(double *)&v180[1];
  CGFloat v22 = *(double *)&v180[2];
  CGFloat v23 = *(double *)&v180[3];
  uint64_t v152 = a16;
  sub_10002C4EC(a16, (uint64_t)v179, (uint64_t *)&unk_10080E010);
  CGFloat x = *(double *)v179;
  CGFloat y = *(double *)&v179[1];
  CGFloat width = *(double *)&v179[2];
  CGFloat height = *(double *)&v179[3];
  uint64_t v162 = sub_100010218((uint64_t *)&unk_10080F2C0);
  __chkstk_darwin(v162);
  uint64_t v164 = (uint64_t)&v144 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v29 - 8);
  uint64_t v171 = (uint64_t)&v144 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = _s10PhotoAssetC9PhotoDataVMa(0);
  __chkstk_darwin(v160);
  uint64_t v159 = (uint64_t *)((char *)&v144 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v32 - 8);
  uint64_t v166 = (uint64_t)&v144 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = type metadata accessor for URL();
  uint64_t v172 = *(void *)(v174 - 8);
  __chkstk_darwin(v174);
  uint64_t v151 = (char *)&v144 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v170 = (char *)&v144 - v36;
  uint64_t v37 = type metadata accessor for AssetAttachment.AssetType(0);
  __chkstk_darwin(v37);
  id v173 = (uint64_t *)((char *)&v144 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v39 = type metadata accessor for UUID();
  uint64_t v40 = *(void *)(v39 - 8);
  __chkstk_darwin(v39);
  uint64_t v42 = (char *)&v144 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  uint64_t v45 = (char *)&v144 - v44;
  UUID.init()();
  *(void *)((char *)objc_allocWithZone((Class)_s10PhotoAssetCMa(0))
            + OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata) = 0;
  (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v42, v45, v39);
  long long v46 = (char *)sub_1001817C4((uint64_t)v42, 0, a1);
  char v47 = *(NSObject **)(v40 + 8);
  ((void (*)(char *, uint64_t))v47)(v45, v39);
  uint64_t v176 = v46;
  id v169 = a2;
  uint64_t v149 = (void *)v37;
  uint64_t v150 = v39;
  uint64_t v147 = v45;
  uint64_t v148 = v40 + 8;
  uint64_t v165 = v47;
  if (a2)
  {
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v48 = swift_allocObject();
    *(_OWORD *)(v48 + 16) = xmmword_1006D6D00;
    *id v173 = a2;
    swift_storeEnumTagMultiPayload();
    BOOL v49 = v46;
    id v50 = a2;
    objc_super v145 = v49;
    id v146 = v50;
    UUID.init()();
    uint64_t v51 = UUID.uuidString.getter();
    uint64_t v53 = v52;
    ((void (*)(char *, uint64_t))v165)(v45, v39);
    type metadata accessor for AssetAttachment(0);
    uint64_t v54 = swift_allocObject();
    *(void *)(v54 + 16) = 0;
    uint64_t v55 = v173;
    sub_1002B5F98((uint64_t)v173, v54 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
    uint64_t v56 = (uint64_t *)(v54 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID);
    *uint64_t v56 = v51;
    v56[1] = v53;
    *(void *)(v48 + 32) = v54;
    v178[0] = v48;
    specialized Array._endMutation()();
    uint64_t v57 = v178[0];
    unint64_t v58 = v145;
    uint64_t v59 = (uint64_t *)&v145[OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments];
    swift_beginAccess();
    *uint64_t v59 = v57;
    uint64_t v60 = v185;

    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v61 = v46;
    uint64_t v55 = v173;
    uint64_t v60 = v185;
  }
  uint64_t v62 = v166;
  sub_10001B220(v60, v166, (uint64_t *)&unk_100800A60);
  uint64_t v63 = v172;
  uint64_t v64 = v174;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v172 + 48))(v62, 1, v174) == 1)
  {
    sub_10001457C(v62, (uint64_t *)&unk_100800A60);
    char v65 = v176;
  }
  else
  {
    id v66 = v170;
    (*(void (**)(char *, uint64_t, uint64_t))(v63 + 32))(v170, v62, v64);
    id v67 = [self defaultManager];
    os_log_type_t v68 = v66;
    URL.path.getter();
    NSString v69 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    unsigned int v70 = [v67 fileExistsAtPath:v69];

    uint64_t v71 = v63;
    char v65 = v176;
    if (v70)
    {
      sub_100010218((uint64_t *)&unk_1007FA1C0);
      uint64_t v72 = swift_allocObject();
      uint64_t v73 = v64;
      uint64_t v74 = (uint64_t)v55;
      uint64_t v75 = v72;
      *(_OWORD *)(v72 + 16) = xmmword_1006D6D00;
      (*(void (**)(uint64_t, char *, uint64_t))(v71 + 16))(v74, v68, v73);
      type metadata accessor for AssetAttachment.AssetType.FilePathType(0);
      swift_storeEnumTagMultiPayload();
      swift_storeEnumTagMultiPayload();
      os_log_type_t v76 = v65;
      int v77 = v147;
      UUID.init()();
      uint64_t v78 = UUID.uuidString.getter();
      uint64_t v80 = v79;
      ((void (*)(char *, uint64_t))v165)(v77, v150);
      type metadata accessor for AssetAttachment(0);
      uint64_t v81 = swift_allocObject();
      *(void *)(v81 + 16) = 0;
      sub_1002B5F98(v74, v81 + OBJC_IVAR____TtC7Journal15AssetAttachment_assetType, type metadata accessor for AssetAttachment.AssetType);
      id v82 = (uint64_t *)(v81 + OBJC_IVAR____TtC7Journal15AssetAttachment_fileNameID);
      *id v82 = v78;
      v82[1] = v80;
      *(void *)(v75 + 32) = v81;
      v178[0] = v75;
      specialized Array._endMutation()();
      uint64_t v83 = v178[0];
      id v84 = (uint64_t *)&v76[OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments];
      swift_beginAccess();
      *id v84 = v83;

      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v170, v174);
      uint64_t v60 = v185;
    }
    else
    {
      if (qword_1007F6D08 != -1) {
        swift_once();
      }
      uint64_t v85 = type metadata accessor for Logger();
      sub_100026A54(v85, (uint64_t)qword_100806490);
      uint64_t v86 = v172;
      BOOL v87 = v151;
      unint64_t v88 = v170;
      uint64_t v89 = v174;
      (*(void (**)(char *, char *, uint64_t))(v172 + 16))(v151, v170, v174);
      uint64_t v90 = v65;
      uint64_t v91 = Logger.logObject.getter();
      os_log_type_t v92 = static os_log_type_t.error.getter();
      LODWORD(v173) = v92;
      BOOL v93 = os_log_type_enabled(v91, v92);
      uint64_t v60 = v185;
      if (v93)
      {
        uint64_t v94 = swift_slowAlloc();
        uint64_t v95 = (void *)swift_slowAlloc();
        uint64_t v149 = v95;
        uint64_t v166 = swift_slowAlloc();
        v178[0] = v166;
        *(_DWORD *)uint64_t v94 = 138412802;
        uint64_t v165 = v91;
        uint64_t v177 = (uint64_t)v90;
        uint64_t v96 = v90;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        void *v95 = v90;

        *(_WORD *)(v94 + 12) = 2080;
        sub_1002B4FC0((unint64_t *)&qword_100801100, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v97 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v177 = sub_10011EA98(v97, v98, v178);
        char v65 = v176;
        UnsafeMutableRawBufferPointer.copyMemory(from:)();

        swift_bridgeObjectRelease();
        *(_WORD *)(v94 + 22) = 2080;
        sub_1002B4FC0((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
        id v99 = v151;
        uint64_t v100 = v174;
        uint64_t v101 = dispatch thunk of CustomStringConvertible.description.getter();
        uint64_t v177 = sub_10011EA98(v101, v102, v178);
        UnsafeMutableRawBufferPointer.copyMemory(from:)();
        swift_bridgeObjectRelease();
        uint64_t v103 = *(void (**)(char *, uint64_t))(v172 + 8);
        v103(v99, v100);
        os_log_t v104 = v165;
        _os_log_impl((void *)&_mh_execute_header, v165, (os_log_type_t)v173, "%@[%s] failed init imageFile does not exist: %s", (uint8_t *)v94, 0x20u);
        sub_100010218((uint64_t *)&unk_1007FC430);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        v103(v170, v100);
      }
      else
      {

        long long v105 = *(void (**)(char *, uint64_t))(v86 + 8);
        v105(v87, v89);

        v105(v88, v89);
      }
    }
  }
  unint64_t v106 = &v65[OBJC_IVAR____TtCC7Journal10Journaling5Asset_sourceAttachments];
  swift_beginAccess();
  unint64_t v107 = *(void *)v106;
  if (v107 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v141 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
    if (v141) {
      goto LABEL_15;
    }
LABEL_23:

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1000352C4();
    swift_allocError();
    *uint64_t v142 = 0;
    swift_willThrow();

    sub_10001457C(v175, (uint64_t *)&unk_1007FC470);
    sub_10001457C(v60, (uint64_t *)&unk_100800A60);
    return v65;
  }
  if (!*(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_23;
  }
LABEL_15:
  sub_10001B220(v175, v171, (uint64_t *)&unk_1007FC470);
  sub_10002C4EC(v152, (uint64_t)v184, (uint64_t *)&unk_10080E010);
  if (v184[32] == 1)
  {
    CGFloat x = CGRectZero.origin.x;
    CGFloat y = CGRectZero.origin.y;
    CGFloat width = CGRectZero.size.width;
    CGFloat height = CGRectZero.size.height;
  }
  v186.origin.CGFloat x = x;
  v186.origin.CGFloat y = y;
  v186.size.CGFloat width = width;
  v186.size.CGFloat height = height;
  uint64_t v108 = NSStringFromCGRect(v186);
  uint64_t v109 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  id v173 = v110;
  uint64_t v174 = v109;

  sub_10002C4EC(v153, (uint64_t)v183, (uint64_t *)&unk_10080E010);
  if (v183[32] == 1)
  {
    CGFloat v20 = CGRectZero.origin.x;
    CGFloat v21 = CGRectZero.origin.y;
    CGFloat v22 = CGRectZero.size.width;
    CGFloat v23 = CGRectZero.size.height;
  }
  LODWORD(v172) = a15;
  uint64_t v170 = a14;
  uint64_t v166 = a13;
  LODWORD(v165) = a12;
  uint64_t v153 = a11;
  LODWORD(v152) = a10;
  v187.origin.CGFloat x = v20;
  v187.origin.CGFloat y = v21;
  v187.size.CGFloat width = v22;
  v187.size.CGFloat height = v23;
  uint64_t v111 = NSStringFromCGRect(v187);
  uint64_t v112 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v114 = v113;

  sub_10002C4EC(v154, (uint64_t)v182, (uint64_t *)&unk_10080E010);
  CGFloat v116 = v157;
  CGFloat v115 = v158;
  CGFloat v118 = v155;
  CGFloat v117 = v156;
  if (v182[32] == 1)
  {
    CGFloat v115 = CGRectZero.origin.x;
    CGFloat v116 = CGRectZero.origin.y;
    CGFloat v117 = CGRectZero.size.width;
    CGFloat v118 = CGRectZero.size.height;
  }
  uint64_t v119 = NSStringFromCGRect(*(CGRect *)&v115);
  uint64_t v120 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v122 = v121;

  sub_10001457C(v175, (uint64_t *)&unk_1007FC470);
  sub_10001457C(v185, (uint64_t *)&unk_100800A60);
  uint64_t v123 = (int *)v160;
  unint64_t v124 = v159;
  uint64_t v125 = v167;
  *uint64_t v159 = v161;
  v124[1] = v125;
  sub_10002C4EC(v171, (uint64_t)v124 + v123[5], (uint64_t *)&unk_1007FC470);
  uint64_t v126 = (void *)((char *)v124 + v123[6]);
  uint64_t v127 = v168;
  *uint64_t v126 = v163;
  v126[1] = v127;
  unint64_t v128 = (char *)v124 + v123[7];
  *(void *)unint64_t v128 = a9;
  v128[8] = v152 & 1;
  uint64_t v129 = (char *)v124 + v123[8];
  *(void *)uint64_t v129 = v153;
  v129[8] = v165 & 1;
  Swift::Int v130 = (char *)v124 + v123[9];
  uint64_t v131 = v170;
  *(void *)Swift::Int v130 = v166;
  *((void *)v130 + 1) = v131;
  v130[16] = v172 & 1;
  uint64_t v132 = (void *)((char *)v124 + v123[10]);
  Swift::Int v133 = v173;
  *uint64_t v132 = v174;
  v132[1] = (uint64_t)v133;
  uint64_t v134 = (void *)((char *)v124 + v123[11]);
  *uint64_t v134 = v112;
  v134[1] = v114;
  uint64_t v135 = (void *)((char *)v124 + v123[12]);
  *uint64_t v135 = v120;
  v135[1] = v122;
  uint64_t v136 = (uint64_t)v124;
  uint64_t v137 = v164;
  sub_1002B5F98(v136, v164, _s10PhotoAssetC9PhotoDataVMa);
  swift_storeEnumTagMultiPayload();
  sub_100010218((uint64_t *)&unk_10080F2E0);
  uint64_t v138 = swift_allocObject();
  uint64_t v139 = v138 + *(void *)(*(void *)v138 + 104);
  uint64_t v140 = sub_100010218((uint64_t *)&unk_100804080);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v140 - 8) + 56))(v139, 1, 1, v140);
  *(_OWORD *)(v138 + *(void *)(*(void *)v138 + 112)) = xmmword_1006D6A80;
  sub_10002C4EC(v137, v138 + *(void *)(*(void *)v138 + 120), (uint64_t *)&unk_10080F2C0);
  char v65 = v176;
  *(void *)&v176[OBJC_IVAR____TtCC7Journal10Journaling10PhotoAsset_metadata] = v138;

  swift_release();
  return v65;
}

uint64_t sub_1002B5F98(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1002B6000()
{
  unint64_t result = qword_1008065D8;
  if (!qword_1008065D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008065D8);
  }
  return result;
}

unsigned char *_s10PhotoAssetC9PhotoDataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *unint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002B6120);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *_s10PhotoAssetC9PhotoDataV10CodingKeysOMa()
{
  return &_s10PhotoAssetC9PhotoDataV10CodingKeysON;
}

unint64_t sub_1002B615C()
{
  unint64_t result = qword_1008065E8;
  if (!qword_1008065E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008065E8);
  }
  return result;
}

unint64_t sub_1002B61B4()
{
  unint64_t result = qword_1008065F0;
  if (!qword_1008065F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008065F0);
  }
  return result;
}

unint64_t sub_1002B620C()
{
  unint64_t result = qword_1008065F8;
  if (!qword_1008065F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1008065F8);
  }
  return result;
}

uint64_t sub_1002B6260()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100806600);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100806600);
  if (qword_1007F7DF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EDD0);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1002B6328()
{
  *(void *)(v1 + 104) = v0;
  sub_100010218((uint64_t *)&unk_100800A60);
  *(void *)(v1 + 112) = swift_task_alloc();
  return _swift_task_switch(sub_1002B63BC, 0, 0);
}

uint64_t sub_1002B63BC()
{
  uint64_t v19 = v0;
  if (qword_1007F6D10 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 104);
  uint64_t v2 = type metadata accessor for Logger();
  sub_100026A54(v2, (uint64_t)qword_100806600);
  id v3 = v1;
  unsigned int v4 = Logger.logObject.getter();
  os_log_type_t v5 = static os_log_type_t.default.getter();
  BOOL v6 = os_log_type_enabled(v4, v5);
  uint64_t v7 = *(char **)(v0 + 104);
  if (v6)
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412546;
    os_log_type_t type = v5;
    uint64_t v10 = *(void **)&v7[qword_10083D2E0];
    *(void *)(v0 + 88) = v10;
    id v11 = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v9 = v10;

    *(_WORD *)(v8 + 12) = 2080;
    type metadata accessor for URL();
    sub_1002B705C((unint64_t *)&qword_100800940, (void (*)(uint64_t))&type metadata accessor for URL);
    uint64_t v12 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)(v0 + 96) = sub_10011EA98(v12, v13, &v18);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();

    _os_log_impl((void *)&_mh_execute_header, v4, type, "Transcribing objectID %@ with audio asset at %s", (uint8_t *)v8, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  *(void *)(v0 + 120) = type metadata accessor for MainActor();
  *(_OWORD *)(v0 + 16) = 0u;
  *(_OWORD *)(v0 + 32) = 0u;
  *(void *)(v0 + 48) = 0;
  *(void *)(v0 + 128) = static MainActor.shared.getter();
  uint64_t v15 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002B66CC, v15, v14);
}

uint64_t sub_1002B66CC()
{
  swift_release();
  type metadata accessor for TranscriptionCoordinator(0);
  swift_allocObject();
  *(void *)(v0 + 136) = sub_10013C4E4(v0 + 16);
  return _swift_task_switch(sub_1002B6760, 0, 0);
}

uint64_t sub_1002B6760()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[13] + qword_10083D2D8;
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v1, v2, v3);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v4 + 56))(v1, 0, 1, v3);
  os_log_type_t v5 = (void *)swift_task_alloc();
  v0[18] = v5;
  *os_log_type_t v5 = v0;
  v5[1] = sub_1002B6888;
  uint64_t v6 = v0[14];
  return sub_10013D808(v6);
}

uint64_t sub_1002B6888()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 112);
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  sub_100052EAC(v2);
  if (v0) {
    uint64_t v3 = sub_1002B6BE4;
  }
  else {
    uint64_t v3 = sub_1002B69B8;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1002B69B8()
{
  *(void *)(v0 + 160) = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002B6A44, v2, v1);
}

uint64_t sub_1002B6A44()
{
  uint64_t v1 = v0[17];
  swift_release();
  swift_getKeyPath();
  v0[10] = v1;
  sub_1002B705C(&qword_1007FF9D0, (void (*)(uint64_t))type metadata accessor for TranscriptionCoordinator);
  ObservationRegistrar.access<A, B>(_:keyPath:)();
  swift_release();
  swift_beginAccess();
  v0[21] = *(void *)(v1 + 72);
  swift_bridgeObjectRetain();
  return _swift_task_switch(sub_1002B6B58, 0, 0);
}

uint64_t sub_1002B6B58()
{
  uint64_t v1 = v0[13];
  swift_release();
  id v2 = *(id *)(v1 + qword_10083D2E0);
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(id, uint64_t))v0[1];
  uint64_t v4 = v0[21];
  return v3(v2, v4);
}

uint64_t sub_1002B6BE4()
{
  swift_release();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1002B6C54()
{
}

void sub_1002B6C84()
{
  uint64_t v1 = v0 + qword_10083D2D8;
  uint64_t v2 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = *(void **)(v0 + qword_10083D2E0);
}

id sub_1002B6D00()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudioAssetTranscriptionOperation();
  return [super dealloc];
}

void sub_1002B6D38(uint64_t a1)
{
  uint64_t v2 = a1 + qword_10083D2D8;
  uint64_t v3 = type metadata accessor for URL();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  uint64_t v4 = *(void **)(a1 + qword_10083D2E0);
}

uint64_t type metadata accessor for AudioAssetTranscriptionOperation()
{
  uint64_t result = qword_100806640;
  if (!qword_100806640) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002B6E04()
{
  uint64_t result = type metadata accessor for URL();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1002B6EA0(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v1 + 24) = v2;
  *uint64_t v2 = v1;
  v2[1] = sub_1002B6F30;
  return sub_1002B6328();
}

uint64_t sub_1002B6F30(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  uint64_t v7 = *v3;
  swift_task_dealloc();
  if (!v2)
  {
    uint64_t v8 = *(void **)(v6 + 16);
    *uint64_t v8 = a1;
    v8[1] = a2;
  }
  uint64_t v9 = *(uint64_t (**)(void))(v7 + 8);
  return v9();
}

uint64_t sub_1002B704C()
{
  return type metadata accessor for AudioAssetTranscriptionOperation();
}

uint64_t sub_1002B705C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002B70A4()
{
  type metadata accessor for AppIconProvider();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  *(void *)(v0 + 112) = &_swiftEmptyDictionarySingleton;
  qword_10083D2E8 = v0;
  return result;
}

uint64_t sub_1002B70EC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v6 = a2;
  uint64_t v3 = *(void *)(*(void *)(v2 + 64) + 40);
  id v4 = a2;
  sub_1002B75D0((uint64_t)&v6, v3);
  return swift_continuation_resume();
}

uint64_t type metadata accessor for AppIconProvider()
{
  return self;
}

uint64_t sub_1002B716C()
{
  *(void *)(v1 + 152) = v0;
  return _swift_task_switch(sub_1002B718C, v0, 0);
}

uint64_t sub_1002B718C()
{
  uint64_t v1 = v0[19];
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 112);
  if (*(void *)(v2 + 16))
  {
    swift_bridgeObjectRetain();
    unint64_t v3 = sub_10001B5D0(0xD000000000000019, 0x8000000100696000);
    if (v4)
    {
      uint64_t v5 = *(void **)(*(void *)(v2 + 56) + 8 * v3);
      id v6 = v5;
      swift_bridgeObjectRelease();
      uint64_t v7 = (uint64_t (*)(void *))v0[1];
      return v7(v5);
    }
    swift_bridgeObjectRelease();
  }
  id v9 = objc_allocWithZone((Class)ISIcon);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 initWithBundleIdentifier:v10];
  v0[20] = v11;

  id v12 = [objc_allocWithZone((Class)ISImageDescriptor) init];
  v0[21] = v12;
  v0[2] = v0;
  v0[7] = v0 + 18;
  v0[3] = sub_1002B739C;
  uint64_t v13 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_1002B70EC;
  v0[13] = &unk_1007A2FC8;
  v0[14] = v13;
  [v11 getCGImageForImageDescriptor:v12 completion:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1002B739C()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 152);
  return _swift_task_switch(sub_1002B7490, v1, 0);
}

uint64_t sub_1002B7490()
{
  uint64_t v1 = (void *)v0[18];
  uint64_t v2 = (void *)v0[20];
  uint64_t v3 = (void *)v0[21];
  if (v1)
  {
    id v4 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v1];

    if (v4)
    {
      uint64_t v5 = v0[19];
      swift_beginAccess();
      id v6 = v4;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v10 = *(void *)(v5 + 112);
      *(void *)(v5 + 112) = 0x8000000000000000;
      sub_100599300((uint64_t)v6, 0xD000000000000019, 0x8000000100696000, isUniquelyReferenced_nonNull_native);
      *(void *)(v5 + 112) = v10;
      swift_bridgeObjectRelease();
      swift_endAccess();
    }
  }
  else
  {

    id v4 = 0;
  }
  uint64_t v8 = (uint64_t (*)(id))v0[1];
  return v8(v4);
}

uint64_t sub_1002B75D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_100806818);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002B7638()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100806820);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100806820);
  if (qword_1007F7D20 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB60);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

uint64_t sub_1002B7704@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1002B8584(a1);
  *a2 = result;
  return result;
}

uint64_t static Journaling.getValidEntriesCount(dateInterval:context:)(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  uint64_t v4 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v3[6] = v4;
  v3[7] = *(void *)(v4 - 8);
  v3[8] = swift_task_alloc();
  uint64_t v5 = *(void *)(sub_100010218(&qword_1007F9BE8) - 8);
  v3[9] = v5;
  v3[10] = *(void *)(v5 + 64);
  v3[11] = swift_task_alloc();
  return _swift_task_switch(sub_1002B7864, 0, 0);
}

uint64_t sub_1002B7864()
{
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = (void *)v0[4];
  uint64_t v7 = v0[5];
  sub_100038980(v0[3], v1);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = swift_allocObject();
  v0[12] = v10;
  *(void *)(v10 + 16) = v7;
  sub_1002B8164(v1, v10 + v9);
  *(void *)(v10 + ((v2 + v9 + 7) & 0xFFFFFFFFFFFFFFF8)) = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v3, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v5);
  id v11 = v8;
  id v12 = (void *)swift_task_alloc();
  v0[13] = (uint64_t)v12;
  *id v12 = v0;
  v12[1] = sub_1002B79DC;
  uint64_t v13 = v0[8];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 2, v13, sub_1002B81CC, v10, &type metadata for Int);
}

uint64_t sub_1002B79DC()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 64);
  uint64_t v3 = *(void *)(*(void *)v1 + 56);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0) {
    uint64_t v5 = sub_1002B7BE8;
  }
  else {
    uint64_t v5 = sub_1002B7B70;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1002B7B70()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1002B7BE8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_1002B7C58(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  id v4 = sub_1002B826C(a1);
  type metadata accessor for JournalEntryMO();
  uint64_t v5 = NSManagedObjectContext.count<A>(for:)();

  if (!v2) {
    *a2 = v5;
  }
}

uint64_t static Journaling.getValidEntriesCount(dateInterval:context:)(uint64_t a1)
{
  id v1 = sub_1002B826C(a1);
  type metadata accessor for JournalEntryMO();
  uint64_t v2 = NSManagedObjectContext.count<A>(for:)();

  return v2;
}

uint64_t _sSo11NSPredicateC7JournalE17entryDateInterval8intervalAB10Foundation0dE0V_tFZ_0()
{
  uint64_t v25 = type metadata accessor for Calendar();
  uint64_t v0 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v2 = (char *)&v24 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for Date();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v26 = (uint64_t)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v24 - v7;
  __chkstk_darwin(v9);
  id v11 = (char *)&v24 - v10;
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v24 - v13;
  uint64_t v27 = sub_10001B284(0, (unint64_t *)&qword_100800A30);
  sub_100010218((uint64_t *)&unk_100806070);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_1006D6270;
  DateInterval.start.getter();
  static Calendar.current.getter();
  Calendar.startOfDay(for:)();
  (*(void (**)(char *, uint64_t))(v0 + 8))(v2, v25);
  uint64_t v16 = *(void (**)(char *, uint64_t))(v4 + 8);
  v16(v14, v3);
  Class isa = Date._bridgeToObjectiveC()().super.isa;
  v16(v11, v3);
  uint64_t v18 = sub_10001B284(0, &qword_1007F9BF0);
  *(void *)(v15 + 56) = v18;
  unint64_t v19 = sub_1000389E8();
  *(void *)(v15 + 64) = v19;
  *(void *)(v15 + 32) = isa;
  DateInterval.end.getter();
  uint64_t v20 = v26;
  sub_1002AD1E4(v26);
  v16(v8, v3);
  uint64_t v21 = v20;
  Class v22 = Date._bridgeToObjectiveC()().super.isa;
  v16((char *)v21, v3);
  *(void *)(v15 + 96) = v18;
  *(void *)(v15 + 104) = v19;
  *(void *)(v15 + 72) = v22;
  return NSPredicate.init(format:_:)();
}

uint64_t sub_1002B8028()
{
  uint64_t v1 = *(void *)(sub_100010218(&qword_1007F9BE8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = type metadata accessor for DateInterval();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  }

  return swift_deallocObject();
}

uint64_t sub_1002B8164(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007F9BE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1002B81CC(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_100010218(&qword_1007F9BE8) - 8);
  sub_1002B7C58(v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

id sub_1002B826C(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007F9BE8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = type metadata accessor for DateInterval();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v10 = String._bridgeToObjectiveC()();
  id v11 = [v9 initWithEntityName:v10];

  sub_100038980(a1, (uint64_t)v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1002B8874((uint64_t)v4);
    if (qword_1007F7080 != -1) {
      swift_once();
    }
    [v11 setPredicate:static NSPredicate.validEntries];
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1006D6D10;
    if (qword_1007F7080 != -1) {
      swift_once();
    }
    uint64_t v13 = (void *)static NSPredicate.validEntries;
    *(void *)(v12 + 32) = static NSPredicate.validEntries;
    id v14 = v13;
    *(void *)(v12 + 40) = _sSo11NSPredicateC7JournalE17entryDateInterval8intervalAB10Foundation0dE0V_tFZ_0();
    v18[1] = v12;
    specialized Array._endMutation()();
    sub_10001B284(0, (unint64_t *)&qword_100800A30);
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v16 = [self andPredicateWithSubpredicates:isa];

    [v11 setPredicate:v16];
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return v11;
}

uint64_t sub_1002B8584(uint64_t a1)
{
  id v1 = sub_1002B826C(a1);
  [v1 setReturnsObjectsAsFaults:1];
  sub_100010218((uint64_t *)&unk_1007FA1C0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_1006D6D00;
  id v3 = objc_allocWithZone((Class)NSSortDescriptor);
  NSString v4 = String._bridgeToObjectiveC()();
  id v5 = [v3 initWithKey:v4 ascending:0];

  *(void *)(v2 + 32) = v5;
  specialized Array._endMutation()();
  sub_10001B284(0, (unint64_t *)&qword_10080F990);
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v1 setSortDescriptors:isa];

  type metadata accessor for JournalEntryMO();
  uint64_t v7 = NSManagedObjectContext.fetch<A>(_:)();

  return v7;
}

uint64_t sub_1002B8874(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007F9BE8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1002B88D4()
{
  uint64_t v0 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = type metadata accessor for URL();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = [self defaultManager];
  sub_10017F3D0((uint64_t)v6);
  URL._bridgeToObjectiveC()(v8);
  NSString v10 = v9;
  uint64_t v53 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v54 = v4 + 8;
  v53(v6, v3);
  id v57 = 0;
  id v11 = [v7 contentsOfDirectoryAtURL:v10 includingPropertiesForKeys:0 options:0 error:&v57];

  id v12 = v57;
  if (v11)
  {
    uint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    uint64_t v15 = *(void *)(v13 + 16);
    if (v15)
    {
      uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v4 + 16);
      uint64_t v16 = v4 + 16;
      unint64_t v18 = v13 + ((*(unsigned __int8 *)(v16 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 64));
      uint64_t v49 = *(void *)(v16 + 56);
      id v50 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 32);
      uint64_t v48 = (void (**)(char *, char *, uint64_t))(v16 + 16);
      uint64_t v51 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 40);
      uint64_t v52 = v17;
      v43[0] = (v16 + 40) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
      v43[1] = v13;
      *(void *)&long long v14 = 138412290;
      long long v44 = v14;
      uint64_t v45 = v16;
      id v46 = v7;
      char v47 = v6;
      v17(v2, v18, v3);
      while (1)
      {
        unint64_t v19 = *v51;
        (*v51)(v2, 0, 1, v3);
        if ((*v50)(v2, 1, v3) == 1) {
          break;
        }
        (*v48)(v6, v2, v3);
        URL._bridgeToObjectiveC()(v20);
        Class v22 = v21;
        v53(v6, v3);
        id v57 = 0;
        unsigned __int8 v23 = [v7 removeItemAtURL:v22 error:&v57 v43[0]];

        id v24 = v57;
        if ((v23 & 1) == 0)
        {
          uint64_t v25 = v24;
          _convertNSErrorToError(_:)();

          swift_willThrow();
          if (qword_1007F6990 != -1) {
            swift_once();
          }
          uint64_t v26 = type metadata accessor for Logger();
          sub_100026A54(v26, (uint64_t)qword_1007FC520);
          swift_errorRetain();
          swift_errorRetain();
          uint64_t v27 = Logger.logObject.getter();
          os_log_type_t v28 = static os_log_type_t.error.getter();
          if (os_log_type_enabled(v27, v28))
          {
            uint64_t v29 = swift_slowAlloc();
            uint64_t v30 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v29 = v44;
            swift_errorRetain();
            uint64_t v31 = _swift_stdlib_bridgeErrorToNSError();
            *(void *)(v29 + 4) = v31;
            *uint64_t v30 = v31;
            swift_errorRelease();
            swift_errorRelease();
            _os_log_impl((void *)&_mh_execute_header, v27, v28, "PersistentCache.clear error removing file: %@", (uint8_t *)v29, 0xCu);
            sub_100010218((uint64_t *)&unk_1007FC430);
            swift_arrayDestroy();
            id v7 = v46;
            swift_slowDealloc();
            swift_slowDealloc();

            swift_errorRelease();
          }
          else
          {
            swift_errorRelease();
            swift_errorRelease();
            swift_errorRelease();
          }
          uint64_t v6 = v47;
        }
        v18 += v49;
        if (!--v15)
        {
          v19(v2, 1, 1, v3);
          break;
        }
        v52(v2, v18, v3);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v2, 1, 1, v3);
    }

    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v32 = v12;
    uint64_t v33 = (void *)_convertNSErrorToError(_:)();

    swift_willThrow();
    id v57 = v33;
    sub_100010218((uint64_t *)&unk_1007FC0D0);
    sub_10001B284(0, &qword_100806998);
    swift_dynamicCast();
    uint64_t v34 = v56;
    if (qword_1007F6990 != -1) {
      swift_once();
    }
    uint64_t v35 = type metadata accessor for Logger();
    sub_100026A54(v35, (uint64_t)qword_1007FC520);
    uint64_t v36 = v34;
    uint64_t v37 = Logger.logObject.getter();
    os_log_type_t v38 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v39 = 138412290;
      uint64_t v55 = v36;
      uint64_t v41 = v36;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      *uint64_t v40 = v36;

      _os_log_impl((void *)&_mh_execute_header, v37, v38, "PersistentCache.clear error getting directory content: %@", v39, 0xCu);
      sub_100010218((uint64_t *)&unk_1007FC430);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      uint64_t v37 = v36;
    }

    return swift_errorRelease();
  }
}

uint64_t sub_1002B8F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002BC878(a1, (uint64_t)v8);
  uint64_t v9 = type metadata accessor for TaskPriority();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_10001457C((uint64_t)v8, &qword_1007FA1D0);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v11 = dispatch thunk of Actor.unownedExecutor.getter();
      uint64_t v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    TaskPriority.rawValue.getter();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v11 = 0;
  uint64_t v13 = 0;
LABEL_6:
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = a2;
  *(void *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    void v16[3] = v13;
  }
  return swift_task_create();
}

void sub_1002B9164()
{
  [*(id *)(*(void *)(v0 + 16) + qword_10080D450) removeAllObjects];
  sub_1002B88D4();
  if (qword_1007F6BB0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_1008039A0);
  oslog = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Image cache cleared.", v3, 2u);
    swift_slowDealloc();
  }
}

void sub_1002B9270()
{
  [*(id *)(*(void *)(v0 + 16) + qword_10080D450) removeAllObjects];
  if (qword_1007F6BB0 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_1008039A0);
  oslog = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(oslog, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v2, "Image memory cache cleared.", v3, 2u);
    swift_slowDealloc();
  }
}

void sub_1002B9374(uint64_t a1)
{
  os_log_type_t v2 = self;
  uint64_t v3 = &selRef_drawMapRect_zoomScale_inContext_;
  id v4 = [v2 standardUserDefaults];
  NSString v5 = String._bridgeToObjectiveC()();
  id v6 = [v4 integerForKey:v5];

  if ((uint64_t)v6 < a1)
  {
    sub_1002B9164();
    if (qword_1007F6BB0 != -1) {
      swift_once();
    }
    uint64_t v7 = type metadata accessor for Logger();
    sub_100026A54(v7, (uint64_t)qword_1008039A0);
    swift_retain_n();
    uint64_t v8 = Logger.logObject.getter();
    os_log_type_t v9 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = swift_slowAlloc();
      *(_DWORD *)uint64_t v10 = 134218240;
      id v11 = [v2 standardUserDefaults];
      NSString v12 = String._bridgeToObjectiveC()();
      [v11 integerForKey:v12];
      swift_release();

      uint64_t v3 = &selRef_drawMapRect_zoomScale_inContext_;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_release();
      *(_WORD *)(v10 + 12) = 2048;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Image cache cleared, old version was: %ld, new version set: %ld", (uint8_t *)v10, 0x16u);
      swift_slowDealloc();
    }
    else
    {

      swift_release_n();
    }
    id v13 = [v2 v3[257]];
    Class isa = Int._bridgeToObjectiveC()().super.super.isa;
    NSString v15 = String._bridgeToObjectiveC()();
    [v13 setValue:isa forKey:v15];
  }
}

uint64_t sub_1002B960C()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100806840);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100806840);
  if (qword_1007F7CF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EAD0);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

void sub_1002B96D4()
{
  id v0 = [self sharedConnection];
  if (v0)
  {
    uint64_t v1 = v0;
    unsigned __int8 v2 = [v0 isDiagnosticSubmissionAllowed];

    diagnosticSubmissionAllowed = v2;
  }
  else
  {
    __break(1u);
  }
}

Swift::Bool *diagnosticSubmissionAllowed.unsafeMutableAddressor()
{
  if (qword_1007F6D30 != -1) {
    swift_once();
  }
  return &diagnosticSubmissionAllowed;
}

uint64_t sub_1002B9784()
{
  if (qword_1007F6F00 != -1) {
    swift_once();
  }
  type metadata accessor for DataStack();
  swift_allocObject();
  uint64_t v0 = swift_retain();
  uint64_t result = sub_1001FE860(v0);
  qword_10083D2F8 = result;
  return result;
}

void sub_1002B9804(double a1)
{
  if (qword_1007F6D28 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100026A54(v2, (uint64_t)qword_100806840);
  swift_bridgeObjectRetain_n();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v3, v4))
  {
    uint64_t v5 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315394;
    swift_bridgeObjectRetain();
    sub_100010218((uint64_t *)&unk_100806948);
    uint64_t v6 = String.init<A>(describing:)();
    sub_10011EA98(v6, v7, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2080;
    sub_100010218((uint64_t *)&unk_100806070);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1006D6280;
    CFAbsoluteTime Current = CFAbsoluteTimeGetCurrent();
    *(void *)(v8 + 56) = &type metadata for Double;
    *(void *)(v8 + 64) = &protocol witness table for Double;
    *(CFAbsoluteTime *)(v8 + 32) = Current - a1;
    uint64_t v10 = String.init(format:_:)();
    sub_10011EA98(v10, v11, &v12);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Finished with didFinishLaunchingWithOptions: %s in %s seconds", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1002B9A60()
{
  if (qword_1007F6BA0 != -1) {
    swift_once();
  }
  sub_1002B9374(2);
}

uint64_t sub_1002B9ABC()
{
  sub_100010218(&qword_1007FA1D0);
  v0[7] = swift_task_alloc();
  type metadata accessor for MainActor();
  v0[8] = static MainActor.shared.getter();
  uint64_t v2 = dispatch thunk of Actor.unownedExecutor.getter();
  v0[9] = v2;
  v0[10] = v1;
  return _swift_task_switch(sub_1002B9B80, v2, v1);
}

uint64_t sub_1002B9B80()
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v1 = *(char **)(qword_10083D2F8 + 16);
  uint64_t v2 = *(void **)&v1[OBJC_IVAR____TtC7Journal13CoreDataStack_container];
  uint64_t v3 = v1;
  id v4 = [v2 viewContext];
  id v5 = [v4 persistentStoreCoordinator];

  if (!v5) {
    goto LABEL_20;
  }
  id v6 = [v5 persistentStores];
  sub_10001B284(0, &qword_1008038C0);
  unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v7 >> 62))
  {
    uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);

    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_6;
    }
LABEL_20:

LABEL_21:
    swift_release();
    if (qword_1007F6D28 != -1) {
      swift_once();
    }
    uint64_t v27 = type metadata accessor for Logger();
    sub_100026A54(v27, (uint64_t)qword_100806840);
    os_log_type_t v28 = Logger.logObject.getter();
    os_log_type_t v29 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v30 = 0;
      _os_log_impl((void *)&_mh_execute_header, v28, v29, "didFinishLaunchingWithOptions: Core Data hasn't opened, will wait for open callback", v30, 2u);
      swift_slowDealloc();
    }

    uint64_t v31 = (uint64_t *)(*(void *)(qword_10083D2F8 + 16)
                    + OBJC_IVAR____TtC7Journal13CoreDataStack_persistentStoreLoadedSuccessfully);
    uint64_t v32 = *v31;
    *uint64_t v31 = (uint64_t)sub_1002BA6D4;
    v31[1] = 0;
    sub_10001ABB8(v32);
    goto LABEL_26;
  }
  swift_bridgeObjectRetain();
  uint64_t v26 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease_n();

  if (!v26) {
    goto LABEL_20;
  }
LABEL_6:
  char v9 = v3[OBJC_IVAR____TtC7Journal13CoreDataStack_persistentStoresLoadSuccess];

  if ((v9 & 1) == 0) {
    goto LABEL_21;
  }
  if (qword_1007F6D28 != -1) {
    swift_once();
  }
  uint64_t v10 = type metadata accessor for Logger();
  sub_100026A54(v10, (uint64_t)qword_100806840);
  unint64_t v11 = Logger.logObject.getter();
  os_log_type_t v12 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v11, v12))
  {
    id v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v11, v12, "didFinishLaunchingWithOptions: Core Data was determined to be open!", v13, 2u);
    swift_slowDealloc();
  }
  uint64_t v14 = *(void *)(v0 + 56);

  uint64_t v15 = qword_10083D2F8;
  sub_10047BBE4();
  id v16 = *(id *)(*(void *)(v15 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  sub_10056AD60(v16);

  sub_100212910();
  sub_100213048();
  sub_100203AEC();
  TaskPriority.init(rawValue:)();
  uint64_t v17 = type metadata accessor for TaskPriority();
  unint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56);
  v18(v14, 0, 1, v17);
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = 0;
  *(void *)(v19 + 24) = 0;
  sub_1002B8F78(v14, (uint64_t)&unk_100806978, v19);
  swift_release();
  sub_10001457C(v14, &qword_1007FA1D0);
  type metadata accessor for AssetPostprocessingOperation();
  sub_10039D88C();
  v18(v14, 1, 1, v17);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = 0;
  *(void *)(v20 + 24) = 0;
  sub_1005D74B4(v14, (uint64_t)&unk_100806980, v20);
  swift_release();
  if (qword_1007F6FC0 != -1) {
    swift_once();
  }
  sub_100142E44();
  *(void *)(v0 + 40) = &type metadata for JournalFeatureFlags;
  *(void *)(v0 + 48) = sub_10005F364();
  *(unsigned char *)(v0 + 16) = 6;
  char v21 = isFeatureEnabled(_:)();
  _s7Journal19DynamicWaveformViewVwxx_0(v0 + 16);
  if (v21)
  {
    Class v22 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container);
    *(void *)(v0 + 88) = v22;
    uint64_t v39 = (uint64_t (*)(char, uint64_t))((char *)&dword_100807D30 + dword_100807D30);
    id v23 = v22;
    id v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 96) = v24;
    *id v24 = v0;
    v24[1] = sub_1002BA25C;
    return v39(1, (uint64_t)v23);
  }
  swift_release();
LABEL_26:
  sub_100327AC8();
  uint64_t v33 = type metadata accessor for JournalWidgetBridge();
  if (qword_1007F6FC0 != -1) {
    swift_once();
  }
  uint64_t v34 = *(void *)(v0 + 56);
  uint64_t v35 = qword_10083D540;
  static TaskPriority.low.getter();
  uint64_t v36 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v36 - 8) + 56))(v34, 0, 1, v36);
  uint64_t v37 = (void *)swift_allocObject();
  v37[2] = 0;
  v37[3] = 0;
  v37[4] = v35;
  v37[5] = v33;
  swift_retain();
  sub_1002B8F78(v34, (uint64_t)&unk_100806968, (uint64_t)v37);
  swift_release();
  sub_10001457C(v34, &qword_1007FA1D0);
  swift_task_dealloc();
  os_log_type_t v38 = *(uint64_t (**)(void))(v0 + 8);
  return v38();
}

uint64_t sub_1002BA25C()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 88);
  swift_task_dealloc();

  uint64_t v3 = *(void *)(v1 + 80);
  uint64_t v4 = *(void *)(v1 + 72);
  return _swift_task_switch(sub_1002BA39C, v4, v3);
}

uint64_t sub_1002BA39C()
{
  swift_release();
  sub_100327AC8();
  uint64_t v1 = type metadata accessor for JournalWidgetBridge();
  if (qword_1007F6FC0 != -1) {
    swift_once();
  }
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = qword_10083D540;
  static TaskPriority.low.getter();
  uint64_t v4 = type metadata accessor for TaskPriority();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v2, 0, 1, v4);
  id v5 = (void *)swift_allocObject();
  void v5[2] = 0;
  v5[3] = 0;
  v5[4] = v3;
  v5[5] = v1;
  swift_retain();
  sub_1002B8F78(v2, (uint64_t)&unk_100806968, (uint64_t)v5);
  swift_release();
  sub_10001457C(v2, &qword_1007FA1D0);
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1002BA4FC()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v8 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v3 = qword_10083D2F8;
  sub_10047BBE4();
  id v4 = *(id *)(*(void *)(v3 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  sub_10056AD60(v4);

  sub_100212910();
  sub_100213048();
  sub_100203AEC();
  TaskPriority.init(rawValue:)();
  uint64_t v5 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 0, 1, v5);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = 0;
  *(void *)(v6 + 24) = 0;
  sub_1002B8F78((uint64_t)v2, (uint64_t)&unk_100806990, v6);
  swift_release();
  sub_10001457C((uint64_t)v2, &qword_1007FA1D0);
  type metadata accessor for AssetPostprocessingOperation();
  sub_10039D88C();
  sub_10049D428();
  if (qword_1007F6FC0 != -1) {
    swift_once();
  }
  return sub_100142E44();
}

void sub_1002BA6D4()
{
  if (qword_1007F6D28 != -1) {
    swift_once();
  }
  uint64_t v0 = type metadata accessor for Logger();
  sub_100026A54(v0, (uint64_t)qword_100806840);
  uint64_t v1 = Logger.logObject.getter();
  os_log_type_t v2 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v3 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, v2, "didFinishLaunchingWithOptions: dataStack.coreDataStack.persistentStoreLoadedSuccessfully received", v3, 2u);
    swift_slowDealloc();
  }

  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v4 = *(char **)(qword_10083D2F8 + 16);
  uint64_t v5 = *(void **)&v4[OBJC_IVAR____TtC7Journal13CoreDataStack_container];
  uint64_t v6 = v4;
  id v7 = [v5 viewContext];
  id v8 = [v7 persistentStoreCoordinator];

  if (!v8) {
    goto LABEL_15;
  }
  id v9 = [v8 persistentStores];
  sub_10001B284(0, &qword_1008038C0);
  unint64_t v10 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v10 >> 62))
  {
    uint64_t v11 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRelease();

    if (v11) {
      goto LABEL_10;
    }
LABEL_15:

    goto LABEL_16;
  }
  swift_bridgeObjectRetain();
  uint64_t v13 = _CocoaArrayWrapper.endIndex.getter();

  swift_bridgeObjectRelease_n();
  if (!v13) {
    goto LABEL_15;
  }
LABEL_10:
  char v12 = v6[OBJC_IVAR____TtC7Journal13CoreDataStack_persistentStoresLoadSuccess];

  if (v12)
  {
    sub_1002BA4FC();
    return;
  }
LABEL_16:
  oslog = Logger.logObject.getter();
  os_log_type_t v14 = static os_log_type_t.fault.getter();
  if (os_log_type_enabled(oslog, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, oslog, v14, "didFinishLaunchingWithOptions: dataStack.coreDataStack.persistentStoreLoadedSuccessfully databaseIsOpen == false", v15, 2u);
    swift_slowDealloc();
  }
}

uint64_t sub_1002BA9A4(uint64_t a1, char a2)
{
  char v3 = a2 & 1;
  uint64_t v6 = (uint64_t (*)(char))((char *)&dword_100806960 + dword_100806960);
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[1] = sub_100052588;
  return v6(v3);
}

void sub_1002BAD74(void *a1)
{
  if (a1)
  {
    swift_getObjectType();
    if (swift_conformsToProtocol2()) {
      uint64_t v2 = a1;
    }
    else {
      uint64_t v2 = 0;
    }
    if (v2)
    {
      [v2 accessibilityPerformMagicTap];
      return;
    }
    id v3 = a1;
    id v4 = [v3 presentedViewController];
    char v5 = ((uint64_t (*)(void))sub_1002BAD74)();

    if (v5)
    {

      return;
    }
    id v6 = [v3 childViewControllers];
    sub_10001B284(0, (unint64_t *)&qword_1008068F0);
    unint64_t v7 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

    if (v7 >> 62)
    {
LABEL_26:
      swift_bridgeObjectRetain();
      uint64_t v8 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v8) {
        goto LABEL_11;
      }
    }
    else
    {
      uint64_t v8 = *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v8)
      {
LABEL_11:
        if ((v7 & 0xC000000000000001) != 0)
        {
          id v9 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
        }
        else
        {
          if (!*(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            return;
          }
          id v9 = *(id *)(v7 + 32);
        }
        unint64_t v10 = v9;
        char v11 = ((uint64_t (*)(void))sub_1002BAD74)();

        if (v11)
        {
LABEL_23:

          swift_bridgeObjectRelease();
          return;
        }
        uint64_t v12 = 0;
        uint64_t v13 = v8 - 1;
        while (v13 != v12)
        {
          unint64_t v14 = v12 + 1;
          if ((v7 & 0xC000000000000001) != 0)
          {
            id v15 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
          }
          else
          {
            if (v14 >= *(void *)((v7 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
              goto LABEL_25;
            }
            id v15 = *(id *)(v7 + 8 * v12 + 40);
          }
          id v16 = v15;
          if (__OFADD__(v14, 1))
          {
            __break(1u);
LABEL_25:
            __break(1u);
            goto LABEL_26;
          }
          char v17 = sub_1002BAD74(v15);

          ++v12;
          if (v17) {
            goto LABEL_23;
          }
        }
      }
    }

    swift_bridgeObjectRelease();
  }
}

int main(int argc, const char **argv, const char **envp)
{
  type metadata accessor for AppDelegate();
  static CommandLine.unsafeArgv.getter();
  static CommandLine.argc.getter();
  static CommandLine.argc.getter();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v4 = NSStringFromClass(ObjCClassFromMetadata);
  static String._unconditionallyBridgeFromObjectiveC(_:)();

  LODWORD(v4) = UIApplicationMain(_:_:_:_:)();
  swift_bridgeObjectRelease();
  exit((int)v4);
}

uint64_t type metadata accessor for AppDelegate()
{
  return self;
}

uint64_t sub_1002BB1B0()
{
  uint64_t v0 = self;
  id v1 = [v0 mainBundle];
  id v2 = [v1 infoDictionary];

  if (!v2)
  {
    Swift::String v16 = (Swift::String)0;
    long long v17 = 0u;
    goto LABEL_12;
  }
  uint64_t v3 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (!*(void *)(v3 + 16) || (unint64_t v4 = sub_10001B5D0(0xD00000000000001ALL, 0x80000001006870A0), (v5 & 1) == 0))
  {
    Swift::String v16 = (Swift::String)0;
    long long v17 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  sub_10001B648(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v16);
  swift_bridgeObjectRelease();
  if (!*((void *)&v17 + 1))
  {
LABEL_12:
    uint64_t v11 = 0x206E776F6E6B6E55;
    sub_10001457C((uint64_t)&v16, &qword_1007FAD50);
    return v11;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    return 0x206E776F6E6B6E55;
  }
  id v6 = [v0 mainBundle];
  id v7 = [v6 infoDictionary];

  if (!v7)
  {
    Swift::String v16 = (Swift::String)0;
    long long v17 = 0u;
LABEL_20:
    uint64_t v11 = 0x206E776F6E6B6E55;
    swift_bridgeObjectRelease();
    sub_10001457C((uint64_t)&v16, &qword_1007FAD50);
    return v11;
  }
  uint64_t v8 = static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();

  if (*(void *)(v8 + 16) && (unint64_t v9 = sub_10001B5D0(0x656C646E75424643, 0xEF6E6F6973726556), (v10 & 1) != 0))
  {
    sub_10001B648(*(void *)(v8 + 56) + 32 * v9, (uint64_t)&v16);
  }
  else
  {
    Swift::String v16 = (Swift::String)0;
    long long v17 = 0u;
  }
  swift_bridgeObjectRelease();
  if (!*((void *)&v17 + 1)) {
    goto LABEL_20;
  }
  if (swift_dynamicCast())
  {
    Swift::String v16 = v15;
    swift_bridgeObjectRetain();
    v13._uint64_t countAndFlagsBits = 10272;
    v13._object = (void *)0xE200000000000000;
    String.append(_:)(v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    String.append(_:)(v15);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    v14._uint64_t countAndFlagsBits = 41;
    v14._object = (void *)0xE100000000000000;
    String.append(_:)(v14);
    swift_bridgeObjectRelease();
    return v16._countAndFlagsBits;
  }
  else
  {
    uint64_t v11 = 0x206E776F6E6B6E55;
    swift_bridgeObjectRelease();
  }
  return v11;
}

void sub_1002BB4F0(uint64_t a1)
{
  id v2 = v1;
  uint64_t v48 = a1;
  uint64_t v3 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v3 - 8);
  char v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for DispatchWorkItemFlags();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  unint64_t v9 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = type metadata accessor for DispatchQoS();
  uint64_t v10 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1002BC4FC();
  static AppShortcutsProvider.updateAppShortcutParameters()();
  type metadata accessor for AppDependencyManager();
  uint64_t v13 = static AppDependencyManager.shared.getter();
  Swift::String v14 = (objc_class *)type metadata accessor for JournalAppIntentsManager();
  Swift::String v15 = (char *)objc_allocWithZone(v14);
  *(void *)&v15[OBJC_IVAR____TtC7Journal24JournalAppIntentsManager_dependencyManager] = v13;
  v56.receiver = v15;
  v56.super_class = v14;
  id v16 = [super init];
  type metadata accessor for SendableContext();
  long long aBlock = 0u;
  long long v53 = 0u;
  uint64_t v54 = 0;
  AppDependencyManager.add<A>(key:dependency:)();
  sub_10001457C((uint64_t)&aBlock, (uint64_t *)&unk_100806110);

  double Current = CFAbsoluteTimeGetCurrent();
  if (qword_1007F6EF8 != -1) {
    swift_once();
  }
  id v50 = v2;
  sub_1004FD838(qword_10083D460, (void *)qword_10083D468, qword_10083D470);
  if (qword_1007F6A58 != -1) {
    swift_once();
  }
  uint64_t v54 = sub_1002B9A60;
  uint64_t v55 = 0;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v53 = sub_10017D530;
  *((void *)&v53 + 1) = &unk_1007A3058;
  unint64_t v18 = _Block_copy(&aBlock);
  static DispatchQoS.unspecified.getter();
  uint64_t v51 = _swiftEmptyArrayStorage;
  sub_1002BC568((unint64_t *)&qword_1007FBD10, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
  sub_100010218(&qword_100804DB0);
  sub_10001B1BC();
  dispatch thunk of SetAlgebra.init<A>(_:)();
  OS_dispatch_queue.async(group:qos:flags:execute:)();
  _Block_release(v18);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v49);
  uint64_t v19 = type metadata accessor for TaskPriority();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v5, 1, 1, v19);
  type metadata accessor for MainActor();
  uint64_t v21 = static MainActor.shared.getter();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = &protocol witness table for MainActor;
  sub_100328A60((uint64_t)v5, (uint64_t)&unk_100806928, v22);
  swift_release();
  id v23 = v50;
  uint64_t v24 = *(void *)&v50[OBJC_IVAR____TtC7Journal11AppDelegate_keyboardManager];
  uint64_t v25 = self;
  id v26 = [v25 defaultCenter];
  [v26 addObserver:v24 selector:"keyboardWillShow:" name:UIKeyboardWillShowNotification object:0];

  id v27 = [v25 defaultCenter];
  [v27 addObserver:v24 selector:"keyboardDidHide:" name:UIKeyboardDidHideNotification object:0];

  if (qword_1007F6BF8 != -1) {
    swift_once();
  }
  uint64_t v28 = qword_10083D1E8;
  uint64_t v29 = swift_allocObject();
  *(void *)(v29 + 16) = v23;
  uint64_t v30 = (void *)(v28 + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_actionHandler);
  uint64_t v31 = *(void *)(v28 + OBJC_IVAR____TtC7Journal27JournalNotificationsManager_actionHandler);
  *uint64_t v30 = &unk_100806938;
  v30[1] = v29;
  uint64_t v32 = v23;
  sub_10001ABB8(v31);
  uint64_t v33 = (void *)qword_10083D1E8;
  static TaskPriority.low.getter();
  v20(v5, 0, 1, v19);
  uint64_t v34 = (void *)swift_allocObject();
  v34[2] = 0;
  v34[3] = 0;
  v34[4] = v33;
  id v35 = v33;
  uint64_t v36 = sub_1002B8F78((uint64_t)v5, (uint64_t)&unk_100806940, (uint64_t)v34);
  sub_10001457C((uint64_t)v5, &qword_1007FA1D0);
  *(void *)&v32[OBJC_IVAR____TtC7Journal11AppDelegate_streakReminderTask] = v36;
  swift_release();
  uint64_t v37 = self;
  id v38 = [v37 standardUserDefaults];
  id v39 = [v37 standardUserDefaults];
  NSString v40 = String._bridgeToObjectiveC()();
  uint64_t v41 = (char *)[v39 integerForKey:v40];

  if (__OFADD__(v41, 1))
  {
    __break(1u);
  }
  else
  {
    NSString v42 = String._bridgeToObjectiveC()();
    [v38 setInteger:v41 + 1 forKey:v42];

    id v43 = [v37 standardUserDefaults];
    id v44 = [v37 standardUserDefaults];
    NSString v45 = String._bridgeToObjectiveC()();
    id v46 = (char *)[v44 integerForKey:v45];

    if (!__OFADD__(v46, 1))
    {
      NSString v47 = String._bridgeToObjectiveC()();
      [v43 setInteger:v46 + 1 forKey:v47];

      sub_1002B9804(Current);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_1002BBCD4(char a1)
{
  *(unsigned char *)(v1 + 64) = a1;
  uint64_t v2 = type metadata accessor for Date();
  *(void *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = *(void *)(v2 - 8);
  *(void *)(v1 + 32) = swift_task_alloc();
  *(void *)(v1 + 40) = type metadata accessor for AppLaunchAction();
  *(void *)(v1 + 48) = swift_task_alloc();
  type metadata accessor for MainActor();
  *(void *)(v1 + 56) = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002BBDF8, v4, v3);
}

uint64_t sub_1002BBDF8()
{
  char v1 = *(unsigned char *)(v0 + 64);
  swift_release();
  if (v1)
  {
    if (qword_1007F6FC0 != -1) {
      swift_once();
    }
    uint64_t v14 = *(void *)(v0 + 24);
    uint64_t v13 = *(void *)(v0 + 32);
    uint64_t v15 = *(void *)(v0 + 16);
    static Date.now.getter();
    sub_1004BA5E8(v13);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  else
  {
    id v2 = [self sharedApplication];
    id v3 = [v2 connectedScenes];
    sub_10001B284(0, (unint64_t *)&qword_10080CF00);
    sub_1000872E4();
    uint64_t v4 = static Set._unconditionallyBridgeFromObjectiveC(_:)();

    char v5 = (void *)sub_1003F1F90(v4);
    swift_bridgeObjectRelease();
    if (v5)
    {
      self;
      uint64_t v6 = (void *)swift_dynamicCastObjCClass();

      if (v6 && [v6 delegate])
      {
        type metadata accessor for SceneDelegate();
        if (swift_dynamicCastClass())
        {
          uint64_t v7 = *(void *)(v0 + 48);
          uint64_t v8 = *(void *)(v0 + 16);
          uint64_t v9 = *(void *)(v0 + 24);
          uint64_t v10 = type metadata accessor for WidgetFamily();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v7, 1, 1, v10);
          uint64_t v11 = (int *)type metadata accessor for CanvasStartingState();
          uint64_t v12 = (void *)(v7 + v11[5]);
          *uint64_t v12 = 0;
          v12[1] = 0;
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v7 + v11[6], 1, 1, v8);
          *(unsigned char *)(v7 + v11[7]) = 1;
          swift_storeEnumTagMultiPayload();
          sub_100356004(v7);
          swift_unknownObjectRelease();

          sub_10008A8A4(v7);
        }
        else
        {

          swift_unknownObjectRelease();
        }
      }
      else
      {
      }
    }
    else
    {
    }
  }
  swift_task_dealloc();
  swift_task_dealloc();
  id v16 = *(uint64_t (**)(void))(v0 + 8);
  return v16();
}

uint64_t sub_1002BC418()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002BC450()
{
  char v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100052588;
  return sub_10039DEA0();
}

unint64_t sub_1002BC4FC()
{
  unint64_t result = qword_100806918;
  if (!qword_100806918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100806918);
  }
  return result;
}

uint64_t sub_1002BC550(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1002BC560()
{
  return swift_release();
}

uint64_t sub_1002BC568(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1002BC5B0()
{
  char v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100052588;
  return sub_1002B9ABC();
}

uint64_t sub_1002BC65C()
{
  return swift_deallocObject();
}

uint64_t sub_1002BC694(uint64_t a1, char a2)
{
  uint64_t v3 = a2 & 1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_100052588;
  uint64_t v7 = (uint64_t (*)(uint64_t))((char *)&dword_100806960 + dword_100806960);
  char v5 = (void *)swift_task_alloc();
  v4[2] = v5;
  *char v5 = v4;
  v5[1] = sub_100052588;
  return v7(v3);
}

uint64_t sub_1002BC784()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002BC7C4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_1002354E8(a1, v4, v5, v6);
}

uint64_t sub_1002BC878(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1002BC8E0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002BC918(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_100052588;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_10080A8F0 + dword_10080A8F0);
  return v6(a1, v4);
}

uint64_t sub_1002BC9D0()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002BCA10(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_1002FBEB4(a1, v4, v5, v6);
}

uint64_t sub_1002BCAD0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_100052588;
  return sub_1000F9E7C();
}

uint64_t sub_1002BCB7C()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_10002C194;
  return sub_1004996E8();
}

uint64_t sub_1002BCC3C()
{
  id v0 = [self labelColor];
  uint64_t result = Color.init(_:)();
  qword_10083D300 = result;
  return result;
}

id sub_1002BCD3C()
{
  id result = [self systemBackgroundColor];
  qword_10083D308 = (uint64_t)result;
  return result;
}

id sub_1002BCD78()
{
  return sub_1002BD7FC(type metadata accessor for UnsupportedEntryView);
}

uint64_t type metadata accessor for UnsupportedEntryView()
{
  return self;
}

char *sub_1002BCDB8(void *a1, void *a2, void *a3, double a4)
{
  uint64_t v8 = OBJC_IVAR____TtC7Journal20UnsupportedAssetView_contentView;
  id v9 = objc_allocWithZone((Class)UIView);
  uint64_t v10 = v4;
  *(void *)&v4[v8] = [v9 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v11 = OBJC_IVAR____TtC7Journal20UnsupportedAssetView_imageView;
  *(void *)&v10[v11] = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];
  *(void *)&v10[OBJC_IVAR____TtC7Journal20UnsupportedAssetView_asset] = a1;
  id v71 = a1;

  v73.receiver = v10;
  v73.super_class = (Class)type metadata accessor for UnsupportedAssetView();
  uint64_t v12 = (char *)[v73 initWithFrame:0.0, 0.0, 0.0, 0.0];
  unsigned int v70 = a3;
  [v12 setBackgroundColor:a3];
  uint64_t v13 = OBJC_IVAR____TtC7Journal20UnsupportedAssetView_contentView;
  uint64_t v14 = *(void **)&v12[OBJC_IVAR____TtC7Journal20UnsupportedAssetView_contentView];
  [v12 addSubview:v14];
  id v15 = v14;
  id v16 = &selRef_drawMapRect_zoomScale_inContext_;
  id v17 = [v15 superview];
  if (v17)
  {
    uint64_t v18 = v17;
    [v15 setTranslatesAutoresizingMaskIntoConstraints:0];
    id v19 = [v15 topAnchor];
    id v20 = [v18 topAnchor];
    id v21 = [v19 constraintEqualToAnchor:v20];

    [v21 setConstant:0.0];
    if (v21)
    {
      id v21 = v21;
      [v21 setActive:1];

      id v15 = v21;
    }

    uint64_t v22 = &stru_1007D7000;
    id v16 = &selRef_drawMapRect_zoomScale_inContext_;
  }
  else
  {
    id v21 = 0;
    uint64_t v18 = v15;
    uint64_t v22 = &stru_1007D7000;
  }

  id v23 = *(id *)&v12[v13];
  id v24 = sub_1001DD438(0, 1, 0.0);

  id v25 = *(id *)&v12[v13];
  id v26 = [v25 v16[77]];
  if (v26)
  {
    id v27 = v26;
    [v25 v22[96].name];
    id v28 = [v25 leadingAnchor];
    id v29 = [v27 leadingAnchor];
    id v30 = [v28 constraintEqualToAnchor:v29];

    [v30 setConstant:0.0];
    if (v30)
    {
      id v30 = v30;
      [v30 setActive:1];

      id v25 = v30;
    }
  }
  else
  {
    id v30 = 0;
    id v27 = v25;
  }

  id v31 = *(id *)&v12[v13];
  id v32 = [v31 v16[77]];
  if (v32)
  {
    uint64_t v33 = v32;
    [v31 v22[96].name];
    id v34 = [v31 trailingAnchor];
    id v35 = [v33 trailingAnchor];
    id v36 = [v34 constraintEqualToAnchor:v35];

    [v36 setConstant:0.0];
    if (v36)
    {
      id v36 = v36;
      [v36 setActive:1];

      id v31 = v36;
    }
  }
  else
  {
    id v36 = 0;
    uint64_t v33 = v31;
  }

  uint64_t v37 = OBJC_IVAR____TtC7Journal20UnsupportedAssetView_imageView;
  uint64_t v38 = qword_1007F7C90;
  id v39 = *(id *)&v12[OBJC_IVAR____TtC7Journal20UnsupportedAssetView_imageView];
  if (v38 != -1) {
    swift_once();
  }
  NSString v40 = (void *)qword_10083E978;
  if (qword_10083E978)
  {
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_1006D6D00;
    *(void *)(v41 + 32) = a2;
    specialized Array._endMutation()();
    sub_10001B284(0, (unint64_t *)&qword_1007FC140);
    id v42 = a2;
    Class isa = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v44 = [self configurationWithPaletteColors:isa];

    id v45 = [v40 imageWithConfiguration:v44];
  }
  else
  {
    id v45 = 0;
  }
  [v39 setImage:v45];

  id v46 = *(void **)&v12[v37];
  [v46 setContentMode:1];
  NSString v47 = *(void **)&v12[v13];
  [v47 addSubview:v46];
  id v48 = v46;
  id v49 = v47;
  [v48 v22[96].name];
  id v50 = [v48 centerXAnchor];
  id v51 = [v49 centerXAnchor];
  id v52 = [v50 constraintEqualToAnchor:v51];

  [v52 setActive:1];
  long long v53 = *(void **)&v12[v13];
  id v54 = *(id *)&v12[v37];
  id v55 = v53;
  [v54 v22[96].name];
  id v56 = [v54 centerYAnchor];
  id v57 = [v55 centerYAnchor];
  id v58 = [v56 constraintEqualToAnchor:v57];

  [v58 setActive:1];
  id v59 = *(id *)&v12[v37];
  [v59 v22[96].name];
  id v60 = [v59 heightAnchor];
  id v61 = [v60 constraintEqualToConstant:a4];

  [v61 setActive:1];
  id v62 = *(id *)&v12[v37];
  [v62 v22[96].name];
  id v63 = [v62 widthAnchor];
  id v64 = [v63 constraintEqualToConstant:a4];

  [v64 setActive:1];
  int v65 = v12[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading];
  v12[OBJC_IVAR____TtC7Journal16JournalAssetView_isAssetFinishedLoading] = 1;
  if (v65 == 1)
  {
    id v66 = v12;
LABEL_25:

    goto LABEL_26;
  }
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  os_log_type_t v68 = v12;
  if (!Strong) {
    goto LABEL_25;
  }
  sub_100491AF4();

  swift_unknownObjectRelease();
LABEL_26:

  return v12;
}

uint64_t sub_1002BD60C(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Journal20UnsupportedAssetView_contentView;
  id v4 = objc_allocWithZone((Class)UIView);
  uint64_t v5 = v1;
  *(void *)&v1[v3] = [v4 initWithFrame:0.0, 0.0, 0.0, 0.0];
  uint64_t v6 = OBJC_IVAR____TtC7Journal20UnsupportedAssetView_imageView;
  id v7 = [objc_allocWithZone((Class)UIImageView) initWithFrame:0.0, 0.0, 0.0, 0.0];

  *(void *)&v5[v6] = v7;
  uint64_t v8 = *(void **)&v5[v6];

  type metadata accessor for UnsupportedAssetView();
  swift_deallocPartialClassInstance();
  return 0;
}

void *sub_1002BD71C()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal20UnsupportedAssetView_asset);
  id v2 = v1;
  return v1;
}

id sub_1002BD74C(uint64_t a1)
{
  return [*(id *)(a1 + OBJC_IVAR____TtC7Journal20UnsupportedAssetView_imageView) setAlpha:];
}

void sub_1002BD794()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC7Journal20UnsupportedAssetView_imageView);
}

id sub_1002BD7E4()
{
  return sub_1002BD7FC(type metadata accessor for UnsupportedAssetView);
}

id sub_1002BD7FC(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return [super dealloc];
}

uint64_t type metadata accessor for UnsupportedAssetView()
{
  return self;
}

uint64_t sub_1002BD8B4()
{
  uint64_t v1 = v0;
  uint64_t v51 = type metadata accessor for UIContentUnavailableConfiguration();
  uint64_t v2 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  id v4 = (char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  id v7 = (char *)&v50 - v6;
  if (qword_1007F6D48 != -1) {
    swift_once();
  }
  [v0 setBackgroundColor:qword_10083D308];
  id v8 = [v0 layer];
  [v8 cornerRadii];
  __asm { FMOV            V0.2D, #8.0 }
  long long v50 = _Q0;
  v52[3] = _Q0;
  [v8 setCornerRadii:v52];

  id v14 = [v1 layer];
  [v14 cornerRadii];
  void v52[2] = v50;
  [v14 setCornerRadii:v52];

  static UIContentUnavailableConfiguration.empty()();
  sub_100010218(&qword_100802498);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1006D6270;
  *(void *)(inited + 32) = NSForegroundColorAttributeName;
  id v16 = self;
  id v17 = NSForegroundColorAttributeName;
  id v18 = [v16 secondaryLabelColor];
  uint64_t v19 = sub_10001B284(0, (unint64_t *)&qword_1007FC140);
  *(void *)(inited + 40) = v18;
  *(void *)(inited + 64) = v19;
  *(void *)(inited + 72) = NSFontAttributeName;
  uint64_t v20 = qword_1007F7280;
  id v21 = NSFontAttributeName;
  if (v20 != -1) {
    swift_once();
  }
  uint64_t v22 = (void *)qword_10083D848;
  *(void *)(inited + 104) = sub_10001B284(0, (unint64_t *)&unk_10080A670);
  *(void *)(inited + 80) = v22;
  id v23 = v22;
  sub_100396DBC(inited);
  if (qword_1007F75D8 != -1) {
    swift_once();
  }
  id v24 = objc_allocWithZone((Class)NSAttributedString);
  swift_bridgeObjectRetain();
  NSString v25 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  type metadata accessor for Key(0);
  sub_10002103C();
  Class isa = Dictionary._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v24 initWithString:v25 attributes:isa];

  UIContentUnavailableConfiguration.secondaryAttributedText.setter();
  id v27 = [v16 clearColor];
  id v28 = (void (*)(_OWORD *, void))UIContentUnavailableConfiguration.background.modify();
  UIBackgroundConfiguration.backgroundColor.setter();
  v28(v52, 0);
  if (qword_1007F7C90 != -1) {
    swift_once();
  }
  id v29 = (void *)qword_10083E978;
  if (qword_10083E978)
  {
    sub_100010218((uint64_t *)&unk_1007FA1C0);
    uint64_t v30 = swift_allocObject();
    *(_OWORD *)(v30 + 16) = xmmword_1006D6D00;
    if (qword_1007F71E8 != -1) {
      swift_once();
    }
    id v31 = (void *)qword_10083D7B0;
    *(void *)(v30 + 32) = qword_10083D7B0;
    *(void *)&v52[0] = v30;
    specialized Array._endMutation()();
    id v32 = v31;
    Class v33 = Array._bridgeToObjectiveC()().super.isa;
    swift_bridgeObjectRelease();
    id v34 = [self configurationWithPaletteColors:v33];

    id v35 = [v29 imageWithConfiguration:v34];
  }
  UIContentUnavailableConfiguration.image.setter();
  sub_10001B284(0, &qword_100806A08);
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v51);
  id v36 = (void *)UIContentUnavailableView.init(configuration:)();
  [v1 addSubview:v36];
  [v36 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v37 = [v36 topAnchor];
  id v38 = [v1 topAnchor];
  id v39 = [v37 constraintEqualToAnchor:v38 constant:0.0];

  [v39 setActive:1];
  [v36 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v40 = [v36 bottomAnchor];
  id v41 = [v1 bottomAnchor];
  id v42 = [v40 constraintEqualToAnchor:v41 constant:0.0];

  [v42 setActive:1];
  [v36 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v43 = [v36 leadingAnchor];
  id v44 = [v1 leadingAnchor];
  id v45 = [v43 constraintEqualToAnchor:v44 constant:0.0];

  [v45 setActive:1];
  [v36 setTranslatesAutoresizingMaskIntoConstraints:0];
  id v46 = [v36 trailingAnchor];
  id v47 = [v1 trailingAnchor];
  id v48 = [v46 constraintEqualToAnchor:v47 constant:0.0];

  [v48 setActive:1];
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v7, v51);
}

uint64_t sub_1002BE074()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100806A10);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100806A10);
  if (qword_1007F7DD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083ED70);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

id sub_1002BE13C()
{
  uint64_t v0 = (objc_class *)type metadata accessor for MusicPlayerManager();
  uint64_t v1 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v1[14] = 0;
  v3.receiver = v1;
  v3.super_class = v0;
  id result = [super init];
  qword_10083D310 = (uint64_t)result;
  return result;
}

id sub_1002BE19C()
{
  uint64_t v1 = (void *)swift_allocObject();
  swift_defaultActor_initialize();
  v1[14] = 0;
  v3.receiver = v1;
  v3.super_class = v0;
  return [super init];
}

uint64_t sub_1002BE1F0(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  return _swift_task_switch(sub_1002BE214, v2, 0);
}

uint64_t sub_1002BE214()
{
  id v1 = sub_1002BE974();
  id v2 = [v1 nowPlayingItem];

  if (!v2) {
    goto LABEL_11;
  }
  uint64_t v4 = v0[4];
  uint64_t v3 = v0[5];
  id v5 = [v2 playbackStoreID];

  uint64_t v6 = static String._unconditionallyBridgeFromObjectiveC(_:)();
  uint64_t v8 = v7;

  v0[2] = v6;
  v0[3] = v8;
  if (String.init<A>(_:)() == v4 && v9 == v3)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v11 = _stringCompareWithSmolCheck(_:_:expecting:)();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0) {
      goto LABEL_11;
    }
  }
  id v12 = sub_1002BE974();
  [v12 currentPlaybackRate];
  float v14 = v13;

  if (v14 > 0.0)
  {
    uint64_t v15 = 1;
    goto LABEL_12;
  }
LABEL_11:
  uint64_t v15 = 0;
LABEL_12:
  id v16 = (uint64_t (*)(uint64_t))v0[1];
  return v16(v15);
}

uint64_t sub_1002BE374(uint64_t a1, uint64_t a2)
{
  v3[16] = a2;
  v3[17] = v2;
  v3[15] = a1;
  return _swift_task_switch(sub_1002BE398, v2, 0);
}

uint64_t sub_1002BE398()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[15];
  id v3 = sub_1002BE974();
  sub_100010218(&qword_1007FC170);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1006D6280;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v1;
  swift_bridgeObjectRetain();
  Class isa = Array._bridgeToObjectiveC()().super.isa;
  swift_bridgeObjectRelease();
  [v3 setQueueWithStoreIDs:isa];

  id v6 = sub_1002BE974();
  v0[18] = v6;
  v0[2] = v0;
  v0[3] = sub_1002BE524;
  uint64_t v7 = swift_continuation_init();
  v0[10] = _NSConcreteStackBlock;
  v0[11] = 0x40000000;
  v0[12] = sub_10004F958;
  v0[13] = &unk_1007A31C0;
  v0[14] = v7;
  [v6 prepareToPlayWithCompletionHandler:v0 + 10];
  return _swift_continuation_await(v0 + 2);
}

uint64_t sub_1002BE524()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  *(void *)(*v0 + 152) = v2;
  uint64_t v3 = *(void *)(v1 + 136);
  if (v2) {
    uint64_t v4 = sub_1002BE6BC;
  }
  else {
    uint64_t v4 = sub_1002BE644;
  }
  return _swift_task_switch(v4, v3, 0);
}

uint64_t sub_1002BE644()
{
  id v1 = sub_1002BE974();
  [v1 play];

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1002BE6BC()
{
  float v14 = v0;
  id v1 = (void *)v0[18];
  swift_willThrow();

  if (qword_1007F6D50 != -1) {
    swift_once();
  }
  uint64_t v2 = type metadata accessor for Logger();
  sub_100026A54(v2, (uint64_t)qword_100806A10);
  swift_bridgeObjectRetain();
  swift_errorRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  uint64_t v3 = Logger.logObject.getter();
  os_log_type_t v4 = static os_log_type_t.error.getter();
  BOOL v5 = os_log_type_enabled(v3, v4);
  unint64_t v6 = v0[16];
  if (v5)
  {
    uint64_t v7 = v0[15];
    uint64_t v8 = swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 136315394;
    swift_bridgeObjectRetain();
    v0[10] = sub_10011EA98(v7, v6, &v13);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v8 + 12) = 2112;
    swift_errorRetain();
    uint64_t v10 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v10;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    void *v9 = v10;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v3, v4, "Failed to begin playback {itemID: %s, error: %@}", (uint8_t *)v8, 0x16u);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_bridgeObjectRelease_n();
    swift_errorRelease();
    swift_errorRelease();
  }
  char v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

id sub_1002BE974()
{
  id v1 = *(void **)(v0 + 112);
  if (v1)
  {
    id v2 = *(id *)(v0 + 112);
  }
  else
  {
    id v3 = [self systemMusicPlayer];
    os_log_type_t v4 = *(void **)(v0 + 112);
    *(void *)(v0 + 112) = v3;
    id v2 = v3;

    id v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t type metadata accessor for MusicPlayerManager()
{
  return self;
}

id sub_1002BEA64(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = type metadata accessor for AppLaunchAction();
  __chkstk_darwin(v4);
  unint64_t v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100010218((uint64_t *)&unk_100800A60);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *unint64_t v6 = a3;
  swift_storeEnumTagMultiPayload();
  sub_1004B1058((uint64_t)v9);
  sub_10008A8A4((uint64_t)v6);
  uint64_t v10 = type metadata accessor for URL();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) != 1)
  {
    URL._bridgeToObjectiveC()(v12);
    uint64_t v13 = v14;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
  }

  return v13;
}

id sub_1002BEC28()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SettingsAppLaunchItem();
  return [super dealloc];
}

uint64_t type metadata accessor for SettingsAppLaunchItem()
{
  return self;
}

uint64_t sub_1002BEC80()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100806A88);
  sub_100026A54(v0, (uint64_t)qword_100806A88);
  id v1 = [self mainBundle];
  id v2 = [v1 bundleIdentifier];

  if (v2)
  {
    static String._unconditionallyBridgeFromObjectiveC(_:)();
  }
  swift_bridgeObjectRetain();
  Logger.init(subsystem:category:)();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1002BED74()
{
  unint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 >> 6);
  Hasher._combine(_:)(v1 & 1);
  return Hasher._finalize()();
}

void sub_1002BEDCC()
{
  unint64_t v1 = *v0;
  Swift::UInt v2 = v1 & 1;
  Hasher._combine(_:)(v1 >> 6);
  Hasher._combine(_:)(v2);
}

Swift::Int sub_1002BEE10()
{
  unint64_t v1 = *v0;
  Hasher.init(_seed:)();
  Hasher._combine(_:)(v1 >> 6);
  Hasher._combine(_:)(v1 & 1);
  return Hasher._finalize()();
}

BOOL sub_1002BEE64(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1002C74FC(*a1, *a2);
}

objc_class *sub_1002BEE70()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal26PrintEntriesViewController____lazy_storage___printBarButtonItem;
  Swift::UInt v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController____lazy_storage___printBarButtonItem);
  if (v2)
  {
    id v3 = *(objc_class **)(v0 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController____lazy_storage___printBarButtonItem);
  }
  else
  {
    uint64_t v4 = v0;
    sub_10001B284(0, (unint64_t *)&qword_100803F80);
    if (qword_1007F7550 != -1) {
      swift_once();
    }
    Swift::String_optional v5 = (Swift::String_optional)xmmword_10083DC48;
    sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    swift_bridgeObjectRetain();
    v11.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    v11.value.super.Class isa = 0;
    v12.value.super.super.Class isa = 0;
    Class isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v5, v11, v12, v13).super.super.isa;
    -[objc_class setStyle:](isa, "setStyle:", 2, 0, 0, 0, sub_1002C7F08, v6);
    uint64_t v8 = *(void **)(v4 + v1);
    *(void *)(v4 + v1) = isa;
    id v3 = isa;

    Swift::UInt v2 = 0;
  }
  id v9 = v2;
  return v3;
}

id sub_1002BEFF8()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal26PrintEntriesViewController____lazy_storage___dataSource;
  Swift::UInt v2 = *(void **)(v0 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController____lazy_storage___dataSource);
  if (v2)
  {
    id v3 = *(id *)(v0 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController____lazy_storage___dataSource);
  }
  else
  {
    id v4 = sub_1002BF46C();
    Swift::String_optional v5 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v4;
    id v3 = v4;

    Swift::UInt v2 = 0;
  }
  id v6 = v2;
  return v3;
}

void sub_1002BF058()
{
  uint64_t v0 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v0 - 8);
  Swift::UInt v2 = (char *)&v9 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    id v4 = (void *)Strong;
    uint64_t v5 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 1, 1, v5);
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    type metadata accessor for MainActor();
    swift_retain();
    uint64_t v7 = static MainActor.shared.getter();
    uint64_t v8 = (void *)swift_allocObject();
    v8[2] = v7;
    v8[3] = &protocol witness table for MainActor;
    v8[4] = v6;
    swift_release();
    sub_100328A60((uint64_t)v2, (uint64_t)&unk_100806BC0, (uint64_t)v8);
    swift_release();
  }
}

uint64_t sub_1002BF1D8(uint64_t a1, uint64_t a2)
{
  v19[1] = a1;
  void v19[2] = a2;
  uint64_t v2 = type metadata accessor for UICollectionLayoutListConfiguration.FooterMode();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for UICollectionLayoutListConfiguration.Appearance();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UICollectionLayoutListConfiguration();
  uint64_t v11 = *(void *)(v10 - 8);
  __n128 v12 = __chkstk_darwin(v10);
  float v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t, __n128))(v7 + 104))(v9, enum case for UICollectionLayoutListConfiguration.Appearance.insetGrouped(_:), v6, v12);
  UICollectionLayoutListConfiguration.init(appearance:)();
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  id v16 = sub_1002BEFF8();

  dispatch thunk of UICollectionViewDiffableDataSource.sectionIdentifier(for:)();
  if (v20)
  {
    (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for UICollectionLayoutListConfiguration.FooterMode.supplementary(_:), v2);
    UICollectionLayoutListConfiguration.footerMode.setter();
  }
  sub_10001B284(0, &qword_100806BD8);
  uint64_t v17 = static NSCollectionLayoutSection.list(using:layoutEnvironment:)();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  return v17;
}

id sub_1002BF46C()
{
  uint64_t v1 = sub_100010218(&qword_100806B88);
  uint64_t v48 = *(void *)(v1 - 8);
  uint64_t v49 = v1;
  __chkstk_darwin(v1);
  id v44 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = v2;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v39 - v4;
  uint64_t v56 = sub_100010218(&qword_100806B90);
  uint64_t v46 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  long long v50 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v6;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v39 - v8;
  uint64_t v57 = sub_100010218(&qword_100806B98);
  uint64_t v43 = *(void *)(v57 - 8);
  __chkstk_darwin(v57);
  id v40 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = v10;
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v39 - v12;
  uint64_t v14 = sub_100010218(&qword_100806BA0);
  uint64_t v52 = *(void *)(v14 - 8);
  uint64_t v53 = v14;
  uint64_t v15 = *(void *)(v52 + 64);
  __chkstk_darwin(v14);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v39 - v17;
  swift_allocObject();
  swift_unknownObjectUnownedInit();
  sub_10001B284(0, (unint64_t *)&unk_10080C060);
  uint64_t v51 = v18;
  UICollectionView.CellRegistration.init(handler:)();
  swift_allocObject();
  swift_unknownObjectUnownedInit();
  type metadata accessor for DateRangeTitleCell();
  id v54 = v13;
  UICollectionView.CellRegistration.init(handler:)();
  swift_allocObject();
  swift_unknownObjectUnownedInit();
  type metadata accessor for DateRangeCalendarCell();
  id v55 = v9;
  UICollectionView.CellRegistration.init(handler:)();
  static String._unconditionallyBridgeFromObjectiveC(_:)();
  swift_allocObject();
  swift_unknownObjectUnownedInit();
  id v47 = v5;
  UICollectionView.SupplementaryRegistration.init(elementKind:handler:)();
  id result = [v0 collectionView];
  id v39 = result;
  if (result)
  {
    uint64_t v20 = v52;
    id v21 = (char *)&v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v22 = v53;
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v21, v51, v53);
    uint64_t v23 = v43;
    id v24 = v40;
    (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v40, v54, v57);
    uint64_t v25 = v46;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v50, v55, v56);
    unint64_t v26 = (*(unsigned __int8 *)(v20 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
    unint64_t v27 = (v15 + *(unsigned __int8 *)(v23 + 80) + v26) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    unint64_t v28 = (v41 + *(unsigned __int8 *)(v25 + 80) + v27) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
    uint64_t v29 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v29 + v26, v21, v22);
    (*(void (**)(unint64_t, char *, uint64_t))(v23 + 32))(v29 + v27, v24, v57);
    uint64_t v30 = v56;
    (*(void (**)(unint64_t, char *, uint64_t))(v25 + 32))(v29 + v28, v50, v56);
    id v31 = objc_allocWithZone((Class)sub_100010218(&qword_100806BA8));
    uint64_t v32 = UICollectionViewDiffableDataSource.init(collectionView:cellProvider:)();
    id v34 = v47;
    uint64_t v33 = v48;
    id v35 = v44;
    uint64_t v36 = v49;
    (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v44, v47, v49);
    unint64_t v37 = (*(unsigned __int8 *)(v33 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v33 + 80);
    uint64_t v38 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v33 + 32))(v38 + v37, v35, v36);
    dispatch thunk of UICollectionViewDiffableDataSource.supplementaryViewProvider.setter();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v36);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v55, v30);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v54, v57);
    (*(void (**)(char *, uint64_t))(v52 + 8))(v51, v53);
    return (id)v32;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1002BFB30(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v24[1] = a4;
  uint64_t v5 = type metadata accessor for UICellAccessory.DisplayedState();
  uint64_t v28 = *(void *)(v5 - 8);
  uint64_t v29 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100010218((uint64_t *)&unk_10080C050);
  __chkstk_darwin(v8 - 8);
  uint64_t v25 = (char *)v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for UICellAccessory.CheckmarkOptions();
  uint64_t v26 = *(void *)(v10 - 8);
  uint64_t v27 = v10;
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for Locale();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = type metadata accessor for UIListContentConfiguration();
  uint64_t v16 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v18 = (char *)v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  UICollectionViewListCell.defaultContentConfiguration()();
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  String.init(localized:table:bundle:locale:comment:)();
  UIListContentConfiguration.text.setter();
  v30[3] = v15;
  v30[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  uint64_t v19 = sub_100062E54(v30);
  (*(void (**)(uint64_t *, char *, uint64_t))(v16 + 16))(v19, v18, v15);
  UICollectionViewCell.contentConfiguration.setter();
  sub_100010218(&qword_100806BB0);
  type metadata accessor for UICellAccessory();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1006D6280;

  uint64_t v20 = type metadata accessor for UICellAccessory.LayoutDimension();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v25, 1, 1, v20);
  UICellAccessory.CheckmarkOptions.init(isHidden:reservedLayoutWidth:tintColor:)();
  uint64_t v22 = v28;
  uint64_t v21 = v29;
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v7, enum case for UICellAccessory.DisplayedState.always(_:), v29);
  static UICellAccessory.checkmark(displayed:options:)();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v7, v21);
  (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v27);
  UICollectionViewListCell.accessories.setter();
  [a1 setAccessibilityTraits:UIAccessibilityTraitButton];
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v18, v15);
}

uint64_t sub_1002C005C(void *a1, uint64_t a2, unsigned char *a3)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v9);
  uint64_t v11 = &v28[-v10];
  uint64_t v12 = type metadata accessor for Locale();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v13 - 8);
  if (*a3)
  {
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    uint64_t v14 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v16 = v15;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v29 = v14;
    uint64_t v30 = v16;
    id v17 = a1;
    static UIView.Invalidating.subscript.setter();
    uint64_t Strong = swift_unknownObjectUnownedLoadStrong();
    uint64_t v19 = (void *)Strong;
    uint64_t v20 = OBJC_IVAR____TtC7Journal26PrintEntriesViewController_endDate;
  }
  else
  {
    String.LocalizationValue.init(stringLiteral:)();
    static Locale.current.getter();
    uint64_t v21 = String.init(localized:table:bundle:locale:comment:)();
    uint64_t v23 = v22;
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v29 = v21;
    uint64_t v30 = v23;
    id v17 = a1;
    static UIView.Invalidating.subscript.setter();
    uint64_t Strong = swift_unknownObjectUnownedLoadStrong();
    uint64_t v19 = (void *)Strong;
    uint64_t v20 = OBJC_IVAR____TtC7Journal26PrintEntriesViewController_startDate;
  }
  uint64_t v24 = Strong + v20;
  swift_beginAccess();
  uint64_t v25 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v6 + 16);
  v25(v11, v24, v5);

  swift_getKeyPath();
  swift_getKeyPath();
  v25(v8, (uint64_t)v11, v5);
  id v26 = v17;
  static UIView.Invalidating.subscript.setter();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v11, v5);
}

uint64_t sub_1002C03BC(char *a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v5 = type metadata accessor for Date();
  uint64_t v6 = *(void **)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v52 = (char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v51 = (char *)&v50 - v9;
  __chkstk_darwin(v10);
  uint64_t v57 = (char *)&v50 - v11;
  __chkstk_darwin(v12);
  id v58 = (char *)&v50 - v13;
  uint64_t v14 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v14 - 8);
  uint64_t v53 = (char *)&v50 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v50 - v17;
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v50 - v20;
  LODWORD(v54) = *a3;
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  *(void *)&a1[OBJC_IVAR____TtC7Journal21DateRangeCalendarCell_delegate + 8] = &off_1007A3388;
  swift_unknownObjectWeakAssign();

  uint64_t v23 = (char *)swift_unknownObjectUnownedLoadStrong();
  uint64_t v24 = &v23[OBJC_IVAR____TtC7Journal26PrintEntriesViewController_maximumDate];
  swift_beginAccess();
  id v55 = (void (*)(char *, char *, uint64_t))v6[2];
  v55(v21, v24, v5);

  id v59 = (void (*)(char *, void, uint64_t, uint64_t))v6[7];
  v59(v21, 0, 1, v5);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_10001B220((uint64_t)v21, (uint64_t)v18, (uint64_t *)&unk_1007FC470);
  uint64_t v25 = a1;
  long long v50 = v18;
  static UIView.Invalidating.subscript.setter();
  sub_10001457C((uint64_t)v21, (uint64_t *)&unk_1007FC470);
  uint64_t v26 = swift_unknownObjectUnownedLoadStrong();
  uint64_t v27 = (void *)v26;
  id v60 = v6 + 7;
  uint64_t v56 = (void (**)(char *, uint64_t))(v6 + 1);
  if (v54)
  {
    uint64_t v28 = v26 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController_endDate;
    swift_beginAccess();
    uint64_t v29 = v58;
    uint64_t v30 = v55;
    v55(v58, (char *)v28, v5);

    swift_getKeyPath();
    swift_getKeyPath();
    v30(v57, v29, v5);
    id v54 = v25;
    static UIView.Invalidating.subscript.setter();
    id v31 = *v56;
    (*v56)(v29, v5);
    uint64_t v32 = v31;
    uint64_t v33 = (char *)swift_unknownObjectUnownedLoadStrong();
    id v34 = &v33[OBJC_IVAR____TtC7Journal26PrintEntriesViewController_minimumDate];
    swift_beginAccess();
    id v35 = v51;
    v30(v51, v34, v5);

    uint64_t v36 = (char *)swift_unknownObjectUnownedLoadStrong();
    unint64_t v37 = &v36[OBJC_IVAR____TtC7Journal26PrintEntriesViewController_startDate];
    swift_beginAccess();
    uint64_t v38 = v52;
    v30(v52, v37, v5);

    sub_100120524();
    if (dispatch thunk of static Comparable.>= infix(_:_:)()) {
      id v39 = v38;
    }
    else {
      id v39 = v35;
    }
    uint64_t v40 = (uint64_t)v53;
    v30(v53, v39, v5);
    v32(v38, v5);
    v32(v35, v5);
    v59((char *)v40, 0, 1, v5);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10001B220(v40, (uint64_t)v21, (uint64_t *)&unk_1007FC470);
    uint64_t v41 = v54;
    static UIView.Invalidating.subscript.setter();
    uint64_t v21 = (char *)v40;
  }
  else
  {
    uint64_t v42 = v26 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController_startDate;
    swift_beginAccess();
    uint64_t v43 = v58;
    id v44 = v55;
    v55(v58, (char *)v42, v5);

    swift_getKeyPath();
    swift_getKeyPath();
    v44(v57, v43, v5);
    uint64_t v45 = v25;
    static UIView.Invalidating.subscript.setter();
    (*v56)(v43, v5);
    uint64_t v46 = (char *)swift_unknownObjectUnownedLoadStrong();
    id v47 = &v46[OBJC_IVAR____TtC7Journal26PrintEntriesViewController_minimumDate];
    swift_beginAccess();
    v44(v21, v47, v5);

    v59(v21, 0, 1, v5);
    swift_getKeyPath();
    swift_getKeyPath();
    sub_10001B220((uint64_t)v21, (uint64_t)v50, (uint64_t *)&unk_1007FC470);
    uint64_t v48 = v45;
    static UIView.Invalidating.subscript.setter();
  }
  return sub_10001457C((uint64_t)v21, (uint64_t *)&unk_1007FC470);
}

uint64_t sub_1002C0A74()
{
  uint64_t v0 = type metadata accessor for UIListContentConfiguration();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  UICollectionViewListCell.defaultContentConfiguration()();
  uint64_t Strong = (void *)swift_unknownObjectUnownedLoadStrong();
  swift_bridgeObjectRetain();

  UIListContentConfiguration.text.setter();
  v8[3] = v0;
  v8[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  uint64_t v5 = sub_100062E54(v8);
  (*(void (**)(uint64_t *, char *, uint64_t))(v1 + 16))(v5, v3, v0);
  UICollectionViewCell.contentConfiguration.setter();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1002C0BCC(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  unsigned int v3 = *a3;
  if (v3 >> 6)
  {
    if (v3 >> 6 == 1) {
      type metadata accessor for DateRangeTitleCell();
    }
    else {
      type metadata accessor for DateRangeCalendarCell();
    }
  }
  else
  {
    sub_10001B284(0, (unint64_t *)&unk_10080C060);
  }
  return UICollectionView.dequeueConfiguredReusableCell<A, B>(using:for:item:)();
}

void sub_1002C0CB4()
{
  uint64_t v1 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  id v2 = objc_allocWithZone((Class)UICollectionViewCompositionalLayout);
  v6[4] = sub_1002C85E4;
  v6[5] = v1;
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 1107296256;
  v6[2] = sub_1003657F0;
  v6[3] = &unk_1007A35F0;
  unsigned int v3 = _Block_copy(v6);
  swift_retain();
  id v4 = [v2 initWithSectionProvider:v3];
  _Block_release(v3);
  swift_release();
  swift_release();
  id v5 = [objc_allocWithZone((Class)UICollectionView) initWithFrame:v4 collectionViewLayout:0.0];

  [v0 setCollectionView:v5];
}

void sub_1002C0E44()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_100010218(&qword_100806B48);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (objc_class *)type metadata accessor for PrintEntriesViewController();
  v29.receiver = v0;
  v29.super_class = v9;
  [super viewDidLoad];
  id v10 = [v0 navigationController];
  if (v10)
  {
    uint64_t v11 = v10;
    id v12 = [v10 view];

    if (!v12)
    {
      __break(1u);
      return;
    }
    id v13 = [self systemBackgroundColor];
    [v12 setBackgroundColor:v13];
  }
  id v14 = [v1 navigationItem];
  id v15 = [self mainBundle];
  v33._object = (void *)0x80000001006963A0;
  v16._uint64_t countAndFlagsBits = 0x746E697250;
  v16._object = (void *)0xE500000000000000;
  v17._uint64_t countAndFlagsBits = 0;
  v17._object = (void *)0xE000000000000000;
  v33._uint64_t countAndFlagsBits = 0xD000000000000010;
  NSLocalizedString(_:tableName:bundle:value:comment:)(v16, (Swift::String_optional)0, (NSBundle)v15, v17, v33);

  NSString v18 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  [v14 setTitle:v18];

  id v19 = sub_1002BEFF8();
  sub_1002C5318();
  dispatch thunk of UICollectionViewDiffableDataSource.applySnapshotUsingReloadData(_:completion:)();

  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_1002C1940();
  sub_10001B284(0, (unint64_t *)&qword_100803F80);
  if (qword_1007F7470 != -1) {
    swift_once();
  }
  Swift::String_optional v20 = (Swift::String_optional)xmmword_10083DA88;
  sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
  swift_allocObject();
  swift_unknownObjectWeakInit();
  swift_bridgeObjectRetain();
  v30.is_nil = UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
  v30.value.super.Class isa = 0;
  v31.value.super.super.Class isa = 0;
  Class isa = UIBarButtonItem.init(title:image:primaryAction:menu:)(v20, v30, v31, v32).super.super.isa;
  id v22 = [v1 navigationItem];
  [v22 setLeftBarButtonItem:isa];

  id v23 = [v1 navigationItem];
  uint64_t v24 = sub_1002BEE70();
  [v23 setRightBarButtonItem:v24];

  uint64_t v25 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v4, 1, 1, v25);
  type metadata accessor for MainActor();
  id v26 = v1;
  uint64_t v27 = static MainActor.shared.getter();
  uint64_t v28 = (void *)swift_allocObject();
  void v28[2] = v27;
  v28[3] = &protocol witness table for MainActor;
  v28[4] = v26;
  sub_100328A60((uint64_t)v4, (uint64_t)&unk_100806BD0, (uint64_t)v28);

  swift_release();
}

uint64_t sub_1002C1324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[14] = a4;
  uint64_t v5 = sub_100010218(&qword_100806B48);
  v4[15] = v5;
  v4[16] = *(void *)(v5 - 8);
  v4[17] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for Date();
  v4[18] = v6;
  v4[19] = *(void *)(v6 - 8);
  v4[20] = swift_task_alloc();
  uint64_t v7 = type metadata accessor for DateInterval();
  v4[21] = v7;
  v4[22] = *(void *)(v7 - 8);
  uint64_t v8 = swift_task_alloc();
  v4[23] = v8;
  v4[24] = type metadata accessor for MainActor();
  v4[25] = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_task_alloc();
  v4[26] = v9;
  void *v9 = v4;
  v9[1] = sub_1002C14F0;
  return sub_1002C20A8(v8);
}

uint64_t sub_1002C14F0()
{
  swift_task_dealloc();
  uint64_t v1 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002C162C, v1, v0);
}

uint64_t sub_1002C162C()
{
  uint64_t v1 = v0[23];
  uint64_t v2 = v0[20];
  uint64_t v19 = v0[22];
  uint64_t v20 = v0[21];
  uint64_t v4 = v0[18];
  uint64_t v3 = v0[19];
  uint64_t v16 = v0[17];
  uint64_t v5 = v0[14];
  uint64_t v17 = v0[15];
  uint64_t v18 = v0[16];
  uint64_t v21 = v5;
  swift_release();
  DateInterval.start.getter();
  uint64_t v6 = v5 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController_minimumDate;
  swift_beginAccess();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 40);
  v7(v6, v2, v4);
  swift_endAccess();
  DateInterval.end.getter();
  uint64_t v8 = v21 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController_maximumDate;
  swift_beginAccess();
  v7(v8, v2, v4);
  swift_endAccess();
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v9(v2, v6, v4);
  uint64_t v10 = v21 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController_startDate;
  swift_beginAccess();
  v7(v10, v2, v4);
  swift_endAccess();
  v9(v2, v8, v4);
  uint64_t v11 = v21 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController_endDate;
  swift_beginAccess();
  v7(v11, v2, v4);
  swift_endAccess();
  id v12 = sub_1002BEFF8();
  dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

  NSDiffableDataSourceSnapshot.reloadSections(_:)((Swift::OpaquePointer)&off_100794448);
  id v13 = sub_1002BEFF8();
  dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v1, v20);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v14 = (uint64_t (*)(void))v0[1];
  return v14();
}

uint64_t sub_1002C1940()
{
  uint64_t v1 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for Locale();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = type metadata accessor for String.LocalizationValue();
  __chkstk_darwin(v5 - 8);
  String.LocalizationValue.init(stringLiteral:)();
  static Locale.current.getter();
  uint64_t v6 = String.init(localized:table:bundle:locale:comment:)();
  uint64_t v8 = v7;
  uint64_t v9 = type metadata accessor for TaskPriority();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
  type metadata accessor for MainActor();
  id v10 = v0;
  uint64_t v11 = static MainActor.shared.getter();
  id v12 = (void *)swift_allocObject();
  v12[2] = v11;
  void v12[3] = &protocol witness table for MainActor;
  v12[4] = v10;
  v12[5] = v6;
  void v12[6] = v8;
  sub_100328A60((uint64_t)v3, (uint64_t)&unk_100806B60, (uint64_t)v12);
  return swift_release();
}

uint64_t sub_1002C1B48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[5] = a4;
  type metadata accessor for MainActor();
  void v4[6] = static MainActor.shared.getter();
  uint64_t v6 = dispatch thunk of Actor.unownedExecutor.getter();
  v4[7] = v6;
  v4[8] = v5;
  return _swift_task_switch(sub_1002C1BE0, v6, v5);
}

uint64_t sub_1002C1BE0()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  v0[9] = Strong;
  if (Strong)
  {
    uint64_t v2 = (void *)swift_task_alloc();
    v0[10] = v2;
    *uint64_t v2 = v0;
    v2[1] = sub_1002C1CD4;
    return sub_1002C2F48();
  }
  else
  {
    swift_release();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
}

uint64_t sub_1002C1CD4(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 88) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v4 = *(void *)(v2 + 56);
  return _swift_task_switch(sub_1002C1DFC, v4, v3);
}

uint64_t sub_1002C1DFC()
{
  if (qword_1007F7120 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)qword_10083D6B0;
  v0[12] = qword_10083D6B0;
  v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1002C1EE4;
  uint64_t v3 = v0[11];
  uint64_t v4 = v0[9];
  return sub_100092208(v3, 1, v4);
}

uint64_t sub_1002C1EE4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void **)(*v0 + 96);
  swift_task_dealloc();
  swift_bridgeObjectRelease();

  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = *(void *)(v1 + 56);
  return _swift_task_switch(sub_1002C2040, v4, v3);
}

uint64_t sub_1002C2040()
{
  uint64_t v1 = *(void **)(v0 + 72);
  swift_release();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_1002C20A8(uint64_t a1)
{
  v1[3] = a1;
  uint64_t v2 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  uint64_t v3 = *(void *)(sub_100010218(&qword_1007F9BE8) - 8);
  v1[7] = v3;
  v1[8] = *(void *)(v3 + 64);
  v1[9] = swift_task_alloc();
  v1[10] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[11] = static MainActor.shared.getter();
  uint64_t v5 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[12] = v5;
  v1[13] = v4;
  return _swift_task_switch(sub_1002C2210, v5, v4);
}

uint64_t sub_1002C2210()
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[10];
  v0[14] = [*(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container) newBackgroundContext];
  v0[15] = type metadata accessor for Journaling();
  uint64_t v2 = type metadata accessor for DateInterval();
  v0[16] = v2;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(v1, 1, 1, v2);
  return _swift_task_switch(sub_1002C2320, 0, 0);
}

uint64_t sub_1002C2320()
{
  uint64_t v1 = *(void **)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v3 = *(void *)(v0 + 72);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 40);
  uint64_t v16 = *(void *)(v0 + 48);
  sub_10001B220(*(void *)(v0 + 80), v3, &qword_1007F9BE8);
  unint64_t v7 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v8 = (v4 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = swift_allocObject();
  *(void *)(v0 + 136) = v9;
  *(void *)(v9 + 16) = v2;
  sub_10002C4EC(v3, v9 + v7, &qword_1007F9BE8);
  *(void *)(v9 + v8) = v1;
  *(_DWORD *)(v0 + 208) = enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:);
  id v10 = *(void (**)(uint64_t))(v6 + 104);
  *(void *)(v0 + 144) = v10;
  *(void *)(v0 + 152) = (v6 + 104) & 0xFFFFFFFFFFFFLL | 0xB2E4000000000000;
  v10(v16);
  id v11 = v1;
  id v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v12;
  uint64_t v13 = sub_100010218(&qword_100806B80);
  *id v12 = v0;
  v12[1] = sub_1002C24C0;
  uint64_t v14 = *(void *)(v0 + 48);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 16, v14, sub_1002C77CC, v9, v13);
}

uint64_t sub_1002C24C0()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  uint64_t v3 = *(void *)(*v0 + 40);
  uint64_t v4 = *(void *)(*v0 + 32);
  swift_task_dealloc();
  swift_release();
  uint64_t v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  *(void *)(v1 + 168) = v5;
  *(void *)(v1 + 176) = (v3 + 8) & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
  v5(v2, v4);
  return _swift_task_switch(sub_1002C2648, 0, 0);
}

uint64_t sub_1002C2648()
{
  uint64_t v1 = v0[10];
  v0[23] = v0[2];
  sub_10001457C(v1, &qword_1007F9BE8);
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[13];
  return _swift_task_switch(sub_1002C26BC, v2, v3);
}

uint64_t sub_1002C26BC()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 144);
  uint64_t v3 = *(unsigned int *)(v0 + 208);
  uint64_t v4 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 32);
  uint64_t v6 = swift_allocObject();
  *(void *)(v0 + 192) = v6;
  *(void *)(v6 + 16) = v1;
  v2(v4, v3, v5);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 200) = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1002C27D4;
  uint64_t v8 = *(void *)(v0 + 128);
  uint64_t v9 = *(void *)(v0 + 48);
  uint64_t v10 = *(void *)(v0 + 24);
  return NSManagedObjectContext.perform<A>(schedule:_:)(v10, v9, sub_1002C79C8, v6, v8);
}

uint64_t sub_1002C27D4()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void (**)(uint64_t, uint64_t))(*v0 + 168);
  uint64_t v3 = *(void *)(*v0 + 48);
  uint64_t v4 = *(void *)(*v0 + 32);
  swift_task_dealloc();
  swift_release();
  v2(v3, v4);
  uint64_t v5 = *(void *)(v1 + 104);
  uint64_t v6 = *(void *)(v1 + 96);
  return _swift_task_switch(sub_1002C2984, v6, v5);
}

uint64_t sub_1002C2984()
{
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002C2A18@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v6 = type metadata accessor for Date();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  id v44 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v45 = (char *)&v40 - v10;
  uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v11 - 8);
  uint64_t v43 = (uint64_t)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v15 = (char *)&v40 - v14;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v40 - v17;
  __chkstk_darwin(v19);
  uint64_t v46 = (char *)&v40 - v20;
  __chkstk_darwin(v21);
  id v23 = (char *)&v40 - v22;
  __chkstk_darwin(v24);
  id v26 = (char *)&v40 - v25;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v27 = _CocoaArrayWrapper.endIndex.getter();
    if (v27)
    {
LABEL_3:
      unint64_t v28 = v27 - 1;
      if (__OFSUB__(v27, 1))
      {
        __break(1u);
      }
      else
      {
        uint64_t v40 = v3;
        unint64_t v41 = a1 & 0xC000000000000001;
        uint64_t v42 = a2;
        if ((a1 & 0xC000000000000001) == 0)
        {
          if ((v28 & 0x8000000000000000) != 0)
          {
            __break(1u);
          }
          else if (v28 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v29 = *(id *)(a1 + 8 * v28 + 32);
            goto LABEL_8;
          }
          __break(1u);
          goto LABEL_31;
        }
      }
      id v29 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
LABEL_8:
      UIImage_optional v30 = v29;
      swift_bridgeObjectRelease();
      id v31 = [v30 entryDate];

      if (v31)
      {
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v3 = *(void (**)(void, void, void, void))(v7 + 56);
        v3(v23, 0, 1, v6);
      }
      else
      {
        uint64_t v3 = *(void (**)(void, void, void, void))(v7 + 56);
        v3(v23, 1, 1, v6);
      }
      uint64_t result = sub_10002C4EC((uint64_t)v23, (uint64_t)v26, (uint64_t *)&unk_1007FC470);
      if (!v41)
      {
        if (!*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          __break(1u);
          return result;
        }
        id v33 = *(id *)(a1 + 32);
        goto LABEL_14;
      }
LABEL_31:
      swift_bridgeObjectRetain();
      id v33 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      swift_bridgeObjectRelease();
LABEL_14:
      id v34 = [v33 entryDate:v40];

      if (v34)
      {
        static Date._unconditionallyBridgeFromObjectiveC(_:)();

        uint64_t v35 = 0;
      }
      else
      {
        uint64_t v35 = 1;
      }
      uint64_t v36 = v45;
      v3(v18, v35, 1, v6);
      sub_10002C4EC((uint64_t)v18, (uint64_t)v46, (uint64_t *)&unk_1007FC470);
      goto LABEL_20;
    }
  }
  else
  {
    uint64_t v27 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v27) {
      goto LABEL_3;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56);
  v37(v26, 1, 1, v6);
  v37(v46, 1, 1, v6);
  uint64_t v36 = v45;
LABEL_20:
  sub_10001B220((uint64_t)v26, (uint64_t)v15, (uint64_t *)&unk_1007FC470);
  uint64_t v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  if (v38(v15, 1, v6) == 1)
  {
    Date.init()();
    sub_10001457C((uint64_t)v15, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v36, v15, v6);
  }
  uint64_t v39 = v43;
  sub_10001B220((uint64_t)v46, v43, (uint64_t *)&unk_1007FC470);
  if (v38((char *)v39, 1, v6) == 1)
  {
    Date.init()();
    sub_10001457C(v39, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 32))(v44, v39, v6);
  }
  DateInterval.init(start:end:)();
  sub_10001457C((uint64_t)v46, (uint64_t *)&unk_1007FC470);
  return sub_10001457C((uint64_t)v26, (uint64_t *)&unk_1007FC470);
}

uint64_t sub_1002C2F48()
{
  v1[3] = v0;
  uint64_t v2 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[7] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[8] = v4;
  v1[9] = v3;
  return _swift_task_switch(sub_1002C303C, v4, v3);
}

uint64_t sub_1002C303C()
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v1 = [*(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container) newBackgroundContext];
  v0[10] = v1;
  uint64_t v2 = (void *)swift_task_alloc();
  v0[11] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1002C3134;
  uint64_t v3 = v0[3];
  return sub_1002C35A4(v3, (uint64_t)v1);
}

uint64_t sub_1002C3134(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 96) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 72);
  uint64_t v4 = *(void *)(v2 + 64);
  return _swift_task_switch(sub_1002C325C, v4, v3);
}

uint64_t sub_1002C325C()
{
  uint64_t v1 = v0[12];
  uint64_t v3 = v0[5];
  uint64_t v2 = v0[6];
  uint64_t v4 = v0[4];
  uint64_t v5 = swift_allocObject();
  v0[13] = v5;
  *(void *)(v5 + 16) = v1;
  (*(void (**)(uint64_t, void, uint64_t))(v3 + 104))(v2, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v4);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[14] = v6;
  uint64_t v7 = sub_100010218(&qword_100802680);
  *uint64_t v6 = v0;
  v6[1] = sub_1002C3388;
  uint64_t v8 = v0[6];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 2, v8, sub_1002C77AC, v5, v7);
}

uint64_t sub_1002C3388()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 48);
  uint64_t v3 = *(void *)(*v0 + 40);
  uint64_t v4 = *(void *)(*v0 + 32);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v6 = *(void *)(v1 + 64);
  return _swift_task_switch(sub_1002C3528, v6, v5);
}

uint64_t sub_1002C3528()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 16);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1002C35A4(uint64_t a1, uint64_t a2)
{
  v2[10] = a1;
  v2[11] = a2;
  uint64_t v3 = type metadata accessor for Date();
  v2[12] = v3;
  v2[13] = *(void *)(v3 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for NSManagedObjectContext.ScheduledTaskType();
  v2[16] = v4;
  v2[17] = *(void *)(v4 - 8);
  v2[18] = swift_task_alloc();
  uint64_t v5 = *(void *)(sub_100010218(&qword_1007F9BE8) - 8);
  v2[19] = v5;
  v2[20] = *(void *)(v5 + 64);
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  type metadata accessor for MainActor();
  v2[23] = static MainActor.shared.getter();
  uint64_t v7 = dispatch thunk of Actor.unownedExecutor.getter();
  v2[24] = v7;
  v2[25] = v6;
  return _swift_task_switch(sub_1002C3778, v7, v6);
}

uint64_t sub_1002C3778()
{
  uint64_t v1 = v0[10];
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController_printSelection))
  {
    uint64_t v3 = v0[14];
    uint64_t v2 = v0[15];
    uint64_t v4 = v0[12];
    uint64_t v5 = v0[13];
    uint64_t v6 = v1 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController_endDate;
    swift_beginAccess();
    uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    v7(v2, v6, v4);
    uint64_t v8 = v1 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController_startDate;
    swift_beginAccess();
    v7(v3, v8, v4);
    sub_100120524();
    char v9 = dispatch thunk of static Comparable.< infix(_:_:)();
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v10(v3, v4);
    v10(v2, v4);
    if (v9)
    {
      swift_release();
      if (qword_1007F6D60 != -1) {
        swift_once();
      }
      uint64_t v11 = type metadata accessor for Logger();
      sub_100026A54(v11, (uint64_t)qword_100806A88);
      uint64_t v12 = Logger.logObject.getter();
      os_log_type_t v13 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v14 = 0;
        _os_log_impl((void *)&_mh_execute_header, v12, v13, "PrintEntriesViewController.fetchEntryIds attempted endDate < startDate", v14, 2u);
        swift_slowDealloc();
      }

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      id v15 = (uint64_t (*)(double *))v0[1];
      return v15(_swiftEmptyArrayStorage);
    }
    uint64_t v20 = v0[22];
    uint64_t v22 = v0[14];
    uint64_t v21 = v0[15];
    uint64_t v23 = v0[12];
    v0[30] = type metadata accessor for Journaling();
    v7(v21, v8, v23);
    v7(v22, v6, v23);
    DateInterval.init(start:end:)();
    uint64_t v24 = type metadata accessor for DateInterval();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v20, 0, 1, v24);
    uint64_t v19 = sub_1002C3F34;
  }
  else
  {
    uint64_t v17 = v0[22];
    v0[26] = type metadata accessor for Journaling();
    uint64_t v18 = type metadata accessor for DateInterval();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
    uint64_t v19 = sub_1002C3B10;
  }
  return _swift_task_switch(v19, 0, 0);
}

uint64_t sub_1002C3B10()
{
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[21];
  uint64_t v4 = v0[19];
  uint64_t v3 = v0[20];
  uint64_t v6 = v0[17];
  uint64_t v5 = v0[18];
  uint64_t v7 = v0[16];
  uint64_t v8 = (void *)v0[11];
  sub_10001B220(v0[22], v2, &qword_1007F9BE8);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v10 = (v3 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = swift_allocObject();
  v0[27] = v11;
  *(void *)(v11 + 16) = v1;
  sub_10002C4EC(v2, v11 + v9, &qword_1007F9BE8);
  *(void *)(v11 + v10) = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v7);
  id v12 = v8;
  os_log_type_t v13 = (void *)swift_task_alloc();
  v0[28] = v13;
  uint64_t v14 = sub_100010218(&qword_100806B80);
  void *v13 = v0;
  v13[1] = sub_1002C3CA4;
  uint64_t v15 = v0[18];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 9, v15, sub_1002C77CC, v11, v14);
}

uint64_t sub_1002C3CA4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  uint64_t v2 = *(void *)(*(void *)v0 + 136);
  uint64_t v3 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1002C3E18, 0, 0);
}

uint64_t sub_1002C3E18()
{
  uint64_t v1 = v0[22];
  v0[29] = v0[9];
  sub_10001457C(v1, &qword_1007F9BE8);
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[25];
  return _swift_task_switch(sub_1002C3E8C, v2, v3);
}

uint64_t sub_1002C3E8C()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 232);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1002C3F34()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[21];
  uint64_t v4 = v0[19];
  uint64_t v3 = v0[20];
  uint64_t v6 = v0[17];
  uint64_t v5 = v0[18];
  uint64_t v7 = v0[16];
  uint64_t v8 = (void *)v0[11];
  sub_10001B220(v0[22], v2, &qword_1007F9BE8);
  unint64_t v9 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v10 = (v3 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = swift_allocObject();
  v0[31] = v11;
  *(void *)(v11 + 16) = v1;
  sub_10002C4EC(v2, v11 + v9, &qword_1007F9BE8);
  *(void *)(v11 + v10) = v8;
  (*(void (**)(uint64_t, void, uint64_t))(v6 + 104))(v5, enum case for NSManagedObjectContext.ScheduledTaskType.immediate(_:), v7);
  id v12 = v8;
  os_log_type_t v13 = (void *)swift_task_alloc();
  v0[32] = v13;
  uint64_t v14 = sub_100010218(&qword_100806B80);
  void *v13 = v0;
  v13[1] = sub_1002C40C8;
  uint64_t v15 = v0[18];
  return NSManagedObjectContext.perform<A>(schedule:_:)(v0 + 8, v15, sub_1002C77CC, v11, v14);
}

uint64_t sub_1002C40C8()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 144);
  uint64_t v2 = *(void *)(*(void *)v0 + 136);
  uint64_t v3 = *(void *)(*(void *)v0 + 128);
  swift_task_dealloc();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  return _swift_task_switch(sub_1002C423C, 0, 0);
}

uint64_t sub_1002C423C()
{
  uint64_t v1 = v0[22];
  v0[33] = v0[8];
  sub_10001457C(v1, &qword_1007F9BE8);
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[25];
  return _swift_task_switch(sub_1002C42B0, v2, v3);
}

uint64_t sub_1002C42B0()
{
  swift_release();
  uint64_t v1 = *(void *)(v0 + 264);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

unint64_t sub_1002C4358@<X0>(unint64_t result@<X0>, void *a2@<X8>)
{
  unint64_t v3 = result;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (!v5)
  {
LABEL_13:
    *a2 = _swiftEmptyArrayStorage;
    return result;
  }
  uint64_t result = specialized ContiguousArray.reserveCapacity(_:)();
  if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v10 = a2;
    uint64_t v11 = v2;
    uint64_t v6 = 0;
    do
    {
      if ((v3 & 0xC000000000000001) != 0) {
        id v7 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v7 = *(id *)(v3 + 8 * v6 + 32);
      }
      uint64_t v8 = v7;
      id v9 = [v7 managedObjectContext:v10, v11];
      if (!v9) {
        id v9 = [objc_allocWithZone((Class)NSManagedObjectContext) initWithConcurrencyType:2];
      }
      ++v6;
      type metadata accessor for Journaling.EntryViewModel();
      swift_allocObject();
      sub_10057F170(v8, 0, 0, v9);
      specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
      specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
      specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
      uint64_t result = specialized ContiguousArray._endMutation()();
    }
    while (v5 != v6);
    a2 = v10;
    goto LABEL_13;
  }
  __break(1u);
  return result;
}

uint64_t sub_1002C4500()
{
  v1[9] = v0;
  uint64_t v2 = type metadata accessor for Date();
  v1[10] = v2;
  v1[11] = *(void *)(v2 - 8);
  v1[12] = swift_task_alloc();
  v1[13] = swift_task_alloc();
  sub_100010218(&qword_1007F9BE8);
  v1[14] = swift_task_alloc();
  v1[15] = swift_task_alloc();
  type metadata accessor for MainActor();
  v1[16] = static MainActor.shared.getter();
  uint64_t v4 = dispatch thunk of Actor.unownedExecutor.getter();
  v1[17] = v4;
  v1[18] = v3;
  return _swift_task_switch(sub_1002C4644, v4, v3);
}

uint64_t sub_1002C4644()
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[9];
  id v2 = [*(id *)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_container) newBackgroundContext];
  uint64_t v3 = (uint64_t)v2;
  v0[19] = v2;
  if (*(unsigned char *)(v1 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController_printSelection))
  {
    id v31 = v2;
    uint64_t v5 = v0[12];
    uint64_t v4 = v0[13];
    uint64_t v6 = v0[10];
    uint64_t v7 = v0[11];
    uint64_t v8 = v0[9];
    uint64_t v9 = v8 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController_endDate;
    swift_beginAccess();
    unint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v10(v4, v9, v6);
    uint64_t v11 = v8 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController_startDate;
    swift_beginAccess();
    v10(v5, v11, v6);
    sub_100120524();
    char v12 = dispatch thunk of static Comparable.< infix(_:_:)();
    os_log_type_t v13 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
    v13(v5, v6);
    v13(v4, v6);
    if (v12)
    {
      swift_release();
      if (qword_1007F6D60 != -1) {
        swift_once();
      }
      uint64_t v14 = type metadata accessor for Logger();
      sub_100026A54(v14, (uint64_t)qword_100806A88);
      uint64_t v15 = Logger.logObject.getter();
      os_log_type_t v16 = static os_log_type_t.error.getter();
      if (os_log_type_enabled(v15, v16))
      {
        uint64_t v17 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v17 = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, v16, "PrintEntriesViewController.fetchEntryCount attempted endDate < startDate", v17, 2u);
        swift_slowDealloc();
      }

      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v18 = (uint64_t (*)(void))v0[1];
      return v18(0);
    }
    uint64_t v26 = v0[13];
    uint64_t v25 = v0[14];
    uint64_t v27 = v0[12];
    uint64_t v28 = v0[10];
    type metadata accessor for Journaling();
    v10(v26, v11, v28);
    v10(v27, v9, v28);
    DateInterval.init(start:end:)();
    uint64_t v29 = type metadata accessor for DateInterval();
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v25, 0, 1, v29);
    UIImage_optional v30 = (void *)swift_task_alloc();
    v0[23] = v30;
    *UIImage_optional v30 = v0;
    v30[1] = sub_1002C4CB4;
    uint64_t v23 = v0[14];
    uint64_t v24 = (uint64_t)v31;
  }
  else
  {
    uint64_t v20 = v0[15];
    type metadata accessor for Journaling();
    uint64_t v21 = type metadata accessor for DateInterval();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
    uint64_t v22 = (void *)swift_task_alloc();
    v0[20] = v22;
    *uint64_t v22 = v0;
    v22[1] = sub_1002C4AC0;
    uint64_t v23 = v0[15];
    uint64_t v24 = v3;
  }
  return static Journaling.getValidEntriesCount(dateInterval:context:)(v23, v24);
}

uint64_t sub_1002C4AC0(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[21] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[15];
  if (v1)
  {
    sub_10001457C(v5, &qword_1007F9BE8);
    uint64_t v6 = v4[17];
    uint64_t v7 = v4[18];
    uint64_t v8 = sub_1002C4EA8;
  }
  else
  {
    v4[22] = a1;
    sub_10001457C(v5, &qword_1007F9BE8);
    uint64_t v6 = v4[17];
    uint64_t v7 = v4[18];
    uint64_t v8 = sub_1002C4C18;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_1002C4C18()
{
  uint64_t v1 = (void *)v0[19];
  swift_release();

  uint64_t v2 = v0[22];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(v2);
}

uint64_t sub_1002C4CB4(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[24] = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[14];
  if (v1)
  {
    sub_10001457C(v5, &qword_1007F9BE8);
    uint64_t v6 = v4[17];
    uint64_t v7 = v4[18];
    uint64_t v8 = sub_1002C50E0;
  }
  else
  {
    v4[25] = a1;
    sub_10001457C(v5, &qword_1007F9BE8);
    uint64_t v6 = v4[17];
    uint64_t v7 = v4[18];
    uint64_t v8 = sub_1002C4E0C;
  }
  return _swift_task_switch(v8, v6, v7);
}

uint64_t sub_1002C4E0C()
{
  uint64_t v1 = (void *)v0[19];
  swift_release();

  uint64_t v2 = v0[25];
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(uint64_t))v0[1];
  return v3(v2);
}

uint64_t sub_1002C4EA8()
{
  swift_release();
  if (qword_1007F6D60 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_100806A88);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "PrintEntriesViewController.fetchEntryCount error %@", v4, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7(0);
}

uint64_t sub_1002C50E0()
{
  swift_release();
  if (qword_1007F6D60 != -1) {
    swift_once();
  }
  uint64_t v1 = type metadata accessor for Logger();
  sub_100026A54(v1, (uint64_t)qword_100806A88);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = Logger.logObject.getter();
  os_log_type_t v3 = static os_log_type_t.error.getter();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 138412290;
    swift_errorRetain();
    uint64_t v6 = _swift_stdlib_bridgeErrorToNSError();
    *(void *)(v0 + 64) = v6;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *uint64_t v5 = v6;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "PrintEntriesViewController.fetchEntryCount error %@", v4, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
  return v7(0);
}

uint64_t sub_1002C5318()
{
  sub_1002C76CC();
  sub_1002C7720();
  NSDiffableDataSourceSnapshot.init()();
  sub_100010218(&qword_100806B48);
  NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1007943A8);
  uint64_t result = NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  if (*(unsigned char *)(v0 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController_printSelection) == 1)
  {
    NSDiffableDataSourceSnapshot.appendSections(_:)((Swift::OpaquePointer)&off_1007943F8);
    return NSDiffableDataSourceSnapshot.appendItems(_:toSection:)();
  }
  return result;
}

id sub_1002C5428(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v35 = a1;
  uint64_t v4 = type metadata accessor for Calendar.Component();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = type metadata accessor for Calendar();
  uint64_t v8 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  uint64_t v10 = (char *)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = type metadata accessor for Date();
  uint64_t v50 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  char v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v13 - 8);
  id v47 = (char *)&v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v35 - v16;
  uint64_t v36 = &v3[OBJC_IVAR____TtC7Journal26PrintEntriesViewController_minimumDate];
  uint64_t v18 = v3;
  Date.init()();
  static Calendar.current.getter();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  LODWORD(v37) = enum case for Calendar.Component.month(_:);
  uint64_t v45 = v19;
  ((void (*)(char *))v19)(v7);
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v21 = v4;
  uint64_t v22 = v40;
  uint64_t v46 = v21;
  uint64_t v49 = v5 + 8;
  id v44 = v20;
  ((void (*)(char *))v20)(v7);
  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  uint64_t v48 = v8 + 8;
  uint64_t v43 = v23;
  v23(v10, v51);
  uint64_t v24 = v50;
  uint64_t v42 = *(void (**)(char *, uint64_t))(v50 + 8);
  v42(v12, v22);
  unint64_t v41 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
  if (v41(v17, 1, v22) == 1)
  {
    Date.init()();
    sub_10001457C((uint64_t)v17, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v36, v17, v22);
  }
  uint64_t v25 = v37;
  Date.init()();
  unint64_t v37 = &v18[OBJC_IVAR____TtC7Journal26PrintEntriesViewController_startDate];
  Date.init()();
  static Calendar.current.getter();
  uint64_t v26 = v46;
  v45(v7, v25, v46);
  uint64_t v27 = (uint64_t)v47;
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  v44(v7, v26);
  v43(v10, v51);
  v42(v12, v22);
  if (v41((char *)v27, 1, v22) == 1)
  {
    Date.init()();
    sub_10001457C(v27, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v50 + 32))(v37, v27, v22);
  }
  uint64_t v28 = v38;
  uint64_t v29 = v39;
  Date.init()();
  UIImage_optional v30 = &v18[OBJC_IVAR____TtC7Journal26PrintEntriesViewController_footerText];
  *(void *)UIImage_optional v30 = 0;
  *((void *)v30 + 1) = 0;
  v18[OBJC_IVAR____TtC7Journal26PrintEntriesViewController_printSelection] = 1;
  *(void *)&v18[OBJC_IVAR____TtC7Journal26PrintEntriesViewController____lazy_storage___printBarButtonItem] = 0;
  *(void *)&v18[OBJC_IVAR____TtC7Journal26PrintEntriesViewController____lazy_storage___dataSource] = 0;

  if (v28)
  {
    NSString v31 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
  }
  else
  {
    NSString v31 = 0;
  }
  uint64_t v32 = (objc_class *)type metadata accessor for PrintEntriesViewController();
  v52.receiver = v18;
  v52.super_class = v32;
  id v33 = [super initWithNibName:v31 bundle:v29];

  return v33;
}

id sub_1002C59B4(void *a1)
{
  uint64_t v43 = a1;
  uint64_t v2 = type metadata accessor for Calendar.Component();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = type metadata accessor for Calendar();
  uint64_t v6 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = type metadata accessor for Date();
  uint64_t v44 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v11 - 8);
  uint64_t v40 = (char *)&v30 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v30 - v14;
  NSString v31 = &v1[OBJC_IVAR____TtC7Journal26PrintEntriesViewController_minimumDate];
  uint64_t v16 = v1;
  Date.init()();
  static Calendar.current.getter();
  uint64_t v17 = *(void (**)(void))(v3 + 104);
  unsigned int v38 = enum case for Calendar.Component.month(_:);
  unint64_t v37 = (void (*)(char *, void, uint64_t))v17;
  v17(v5);
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v19 = v2;
  uint64_t v20 = v32;
  uint64_t v39 = v19;
  uint64_t v42 = v3 + 8;
  uint64_t v36 = v18;
  ((void (*)(char *))v18)(v5);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v41 = v6 + 8;
  uint64_t v35 = v21;
  v21(v8, v45);
  uint64_t v22 = v44;
  id v34 = *(void (**)(char *, uint64_t))(v44 + 8);
  v34(v10, v20);
  id v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v33(v15, 1, v20) == 1)
  {
    Date.init()();
    sub_10001457C((uint64_t)v15, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v31, v15, v20);
  }
  Date.init()();
  NSString v31 = &v16[OBJC_IVAR____TtC7Journal26PrintEntriesViewController_startDate];
  Date.init()();
  static Calendar.current.getter();
  uint64_t v23 = v39;
  v37(v5, v38, v39);
  uint64_t v24 = (uint64_t)v40;
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  v36(v5, v23);
  v35(v8, v45);
  v34(v10, v20);
  if (v33((char *)v24, 1, v20) == 1)
  {
    Date.init()();
    sub_10001457C(v24, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v31, v24, v20);
  }
  Date.init()();
  uint64_t v25 = &v16[OBJC_IVAR____TtC7Journal26PrintEntriesViewController_footerText];
  *(void *)uint64_t v25 = 0;
  *((void *)v25 + 1) = 0;
  v16[OBJC_IVAR____TtC7Journal26PrintEntriesViewController_printSelection] = 1;
  *(void *)&v16[OBJC_IVAR____TtC7Journal26PrintEntriesViewController____lazy_storage___printBarButtonItem] = 0;
  *(void *)&v16[OBJC_IVAR____TtC7Journal26PrintEntriesViewController____lazy_storage___dataSource] = 0;

  uint64_t v26 = (objc_class *)type metadata accessor for PrintEntriesViewController();
  v46.receiver = v16;
  v46.super_class = v26;
  uint64_t v27 = v43;
  id v28 = [super initWithCoder:v43];

  return v28;
}

id sub_1002C5ED8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PrintEntriesViewController();
  return [super dealloc];
}

uint64_t sub_1002C601C()
{
  return type metadata accessor for PrintEntriesViewController();
}

uint64_t type metadata accessor for PrintEntriesViewController()
{
  uint64_t result = qword_100806B08;
  if (!qword_100806B08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1002C6070()
{
  uint64_t result = type metadata accessor for Date();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1002C6240(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100010218((uint64_t *)&unk_1007FD5D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v24[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v7 = sub_100010218(&qword_100806B48);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = &v24[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v11);
  uint64_t v13 = &v24[-v12];
  id v14 = sub_1002BEFF8();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  unsigned __int8 v15 = v25;
  if (v25 <= 0xFDu)
  {
    if (v25 >> 6)
    {
      if (v25 >> 6 != 1) {
        return;
      }
      Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
      [a1 deselectItemAtIndexPath:isa animated:1];

      id v17 = sub_1002BEFF8();
      v24[14] = v15 & 1 | 0x80;
      dispatch thunk of UICollectionViewDiffableDataSource.indexPath(for:)();

      uint64_t v18 = type metadata accessor for IndexPath();
      int v19 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48))(v6, 1, v18);
      sub_10001457C((uint64_t)v6, (uint64_t *)&unk_1007FD5D0);
      id v20 = sub_1002BEFF8();
      dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

      NSDiffableDataSourceSnapshot.deleteItems(_:)((Swift::OpaquePointer)&off_100794498);
      if (v19 == 1)
      {
        sub_100010218(&qword_100806B50);
        uint64_t v21 = swift_allocObject();
        *(_OWORD *)(v21 + 16) = xmmword_1006D6280;
        *(unsigned char *)(v21 + 32) = v15 & 1 | 0x80;
        v24[13] = v15 & 1 | 0x40;
        NSDiffableDataSourceSnapshot.insertItems(_:afterItem:)();
        swift_bridgeObjectRelease();
      }
      id v22 = sub_1002BEFF8();
      dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
    }
    else
    {
      Class v23 = IndexPath._bridgeToObjectiveC()().super.isa;
      [a1 deselectItemAtIndexPath:v23 animated:1];

      *(unsigned char *)(v2 + OBJC_IVAR____TtC7Journal26PrintEntriesViewController_printSelection) = v15 & 1;
      sub_1002C5318();
      NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)&off_100794470);
      id v22 = sub_1002BEFF8();
      dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();
      uint64_t v10 = v13;
    }

    (*(void (**)(unsigned char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

uint64_t getEnumTagSinglePayload for PrintEntriesViewController.Item(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x7E) {
    goto LABEL_17;
  }
  if (a2 + 130 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 130) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 130;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 130;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 130;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 6) & 0xFFFFFF83 | (4 * ((*a1 >> 1) & 0x1F))) ^ 0x7F;
  if (v6 >= 0x7D) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for PrintEntriesViewController.Item(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 130 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 130) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x7E) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x7D)
  {
    unsigned int v6 = ((a2 - 126) >> 8) + 1;
    *uint64_t result = a2 - 126;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002C67FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1002C6824(unsigned __int8 *a1)
{
  return *a1 >> 6;
}

unsigned char *sub_1002C6830(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_1002C6840(unsigned char *result, char a2)
{
  *uint64_t result = *result & 1 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for PrintEntriesViewController.Item()
{
  return &type metadata for PrintEntriesViewController.Item;
}

ValueMetadata *type metadata accessor for PrintEntriesViewController.Section()
{
  return &type metadata for PrintEntriesViewController.Section;
}

ValueMetadata *type metadata accessor for PrintEntriesViewController.PrintSelection()
{
  return &type metadata for PrintEntriesViewController.PrintSelection;
}

unint64_t sub_1002C688C()
{
  unint64_t result = qword_100806B30;
  if (!qword_100806B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100806B30);
  }
  return result;
}

unint64_t sub_1002C68E4()
{
  unint64_t result = qword_100806B38;
  if (!qword_100806B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100806B38);
  }
  return result;
}

unint64_t sub_1002C693C()
{
  unint64_t result = qword_100806B40;
  if (!qword_100806B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100806B40);
  }
  return result;
}

id sub_1002C6990(uint64_t a1, uint64_t a2)
{
  int v3 = v2;
  uint64_t v42 = a1;
  uint64_t v5 = sub_100010218(&qword_100806B48);
  uint64_t v39 = *(void *)(v5 - 8);
  uint64_t v40 = v5;
  __chkstk_darwin(v5);
  unsigned int v38 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for Date();
  uint64_t v41 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_100010218((uint64_t *)&unk_1007FD5D0);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for IndexPath();
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&double v18 = __chkstk_darwin(v17).n128_u64[0];
  id v20 = (char *)&v38 - v19;
  id result = [v3 collectionView];
  if (!result)
  {
    __break(1u);
    return result;
  }
  id v22 = result;
  id v23 = [result indexPathForCell:a2];

  if (!v23)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56))(v12, 1, 1, v13);
    return (id)sub_10001457C((uint64_t)v12, (uint64_t *)&unk_1007FD5D0);
  }
  static IndexPath._unconditionallyBridgeFromObjectiveC(_:)();

  uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v24(v12, v16, v13);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v12, 0, 1, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1) {
    return (id)sub_10001457C((uint64_t)v12, (uint64_t *)&unk_1007FD5D0);
  }
  v24(v20, v12, v13);
  id v25 = sub_1002BEFF8();
  dispatch thunk of UICollectionViewDiffableDataSource.itemIdentifier(for:)();

  unsigned __int8 v26 = v43;
  if (v43 < 0xFEu && (v43 & 0xC0) == 0x80)
  {
    char v27 = v43 & 1;
    uint64_t v28 = v41 + 16;
    (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v9, v42, v7);
    uint64_t v29 = (void (**)(char *, char *, uint64_t))(v28 + 24);
    if (v26) {
      uint64_t v30 = OBJC_IVAR____TtC7Journal26PrintEntriesViewController_endDate;
    }
    else {
      uint64_t v30 = OBJC_IVAR____TtC7Journal26PrintEntriesViewController_startDate;
    }
    NSString v31 = &v3[v30];
    swift_beginAccess();
    (*v29)(v31, v9, v7);
    swift_endAccess();
    uint64_t v33 = v39;
    uint64_t v32 = v40;
    id v34 = v38;
    id v35 = sub_1002BEFF8();
    dispatch thunk of UICollectionViewDiffableDataSource.snapshot()();

    sub_100010218(&qword_100806B50);
    uint64_t v36 = swift_allocObject();
    *(_OWORD *)(v36 + 16) = xmmword_1006D6280;
    *(unsigned char *)(v36 + 32) = v27 | 0x40;
    NSDiffableDataSourceSnapshot.reconfigureItems(_:)((Swift::OpaquePointer)v36);
    swift_bridgeObjectRelease();
    id v37 = sub_1002BEFF8();
    dispatch thunk of UICollectionViewDiffableDataSource.apply(_:animatingDifferences:completion:)();

    sub_1002C1940();
    (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v32);
  }
  return (id)(*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v20, v13);
}

uint64_t sub_1002C6E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[9] = a5;
  v6[10] = a6;
  v6[8] = a4;
  uint64_t v7 = type metadata accessor for UIListContentConfiguration();
  v6[11] = v7;
  v6[12] = *(void *)(v7 - 8);
  v6[13] = swift_task_alloc();
  uint64_t v8 = type metadata accessor for IndexPath();
  v6[14] = v8;
  v6[15] = *(void *)(v8 - 8);
  v6[16] = swift_task_alloc();
  v6[17] = type metadata accessor for MainActor();
  v6[18] = static MainActor.shared.getter();
  uint64_t v9 = (void *)swift_task_alloc();
  v6[19] = v9;
  void *v9 = v6;
  v9[1] = sub_1002C6F9C;
  return sub_1002C4500();
}

uint64_t sub_1002C6F9C(uint64_t a1)
{
  *(void *)(*(void *)v1 + 160) = a1;
  swift_task_dealloc();
  uint64_t v3 = dispatch thunk of Actor.unownedExecutor.getter();
  return _swift_task_switch(sub_1002C70E0, v3, v2);
}

id sub_1002C70E0()
{
  uint64_t v1 = v0[20];
  swift_release();
  if (v1 <= 0)
  {
    uint64_t v2 = v0[9];
    uint64_t v3 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v2 = 0;
    uint64_t v3 = 0;
  }
  unsigned int v4 = (void *)(v0[8] + OBJC_IVAR____TtC7Journal26PrintEntriesViewController_footerText);
  *unsigned int v4 = v2;
  v4[1] = v3;
  swift_bridgeObjectRelease();
  uint64_t v5 = sub_1002BEE70();
  [(objc_class *)v5 setEnabled:v1 > 0];

  id v6 = sub_1002BEFF8();
  *((unsigned char *)v0 + 168) = 1;
  uint64_t v7 = dispatch thunk of UICollectionViewDiffableDataSource.index(for:)();
  char v9 = v8;

  if ((v9 & 1) == 0)
  {
    id result = [(id)v0[8] collectionView];
    if (!result) {
      goto LABEL_15;
    }
    uint64_t v11 = result;
    uint64_t v13 = v0[15];
    uint64_t v12 = v0[16];
    uint64_t v14 = v0[14];
    sub_100010218(&qword_1007FC110);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1006D6270;
    *(void *)(v15 + 32) = v7;
    *(void *)(v15 + 40) = 0;
    uint64_t v16 = UICollectionElementKindSectionFooter;
    IndexPath.init(arrayLiteral:)();
    Class isa = IndexPath._bridgeToObjectiveC()().super.isa;
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v12, v14);
    id v18 = [v11 supplementaryViewForElementKind:v16 atIndexPath:isa];

    if (v18)
    {
      self;
      uint64_t v19 = swift_dynamicCastObjCClass();
      if (!v19)
      {

        goto LABEL_11;
      }
      uint64_t v20 = v19;
      uint64_t v21 = v0[13];
      UICollectionViewListCell.defaultContentConfiguration()();
      swift_bridgeObjectRetain();
      UIListContentConfiguration.text.setter();
      id v22 = self;
      uint64_t v23 = swift_allocObject();
      *(void *)(v23 + 16) = v20;
      *(void *)(v23 + 24) = v21;
      uint64_t v24 = swift_allocObject();
      *(void *)(v24 + 16) = sub_1002C769C;
      *(void *)(v24 + 24) = v23;
      v0[6] = sub_10001AC84;
      v0[7] = v24;
      v0[2] = _NSConcreteStackBlock;
      v0[3] = 1107296256;
      v0[4] = sub_1003F44E4;
      v0[5] = &unk_1007A3410;
      id v25 = _Block_copy(v0 + 2);
      id v26 = v18;
      swift_retain();
      swift_release();
      [v22 performWithoutAnimation:v25];

      _Block_release(v25);
      LOBYTE(v26) = swift_isEscapingClosureAtFileLocation();
      id result = (id)swift_release();
      if ((v26 & 1) == 0)
      {
        (*(void (**)(void, void))(v0[12] + 8))(v0[13], v0[11]);
        swift_release();
        goto LABEL_11;
      }
      __break(1u);
LABEL_15:
      __break(1u);
      return result;
    }
  }
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  char v27 = (uint64_t (*)(void))v0[1];
  return (id)v27();
}

uint64_t sub_1002C7470(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = type metadata accessor for UIListContentConfiguration();
  v6[3] = v3;
  v6[4] = (uint64_t)&protocol witness table for UIListContentConfiguration;
  unsigned int v4 = sub_100062E54(v6);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16))(v4, a2, v3);
  return UICollectionViewCell.contentConfiguration.setter();
}

BOOL sub_1002C74FC(unsigned __int8 a1, unsigned __int8 a2)
{
  char v2 = a2 ^ a1;
  BOOL v3 = ((a2 ^ a1) & 1) == 0;
  if (a2 >= 0x40u) {
    BOOL v3 = 0;
  }
  int v4 = a2 & 0xC0;
  BOOL v5 = (v2 & 1) == 0;
  if (v4 != 64) {
    BOOL v5 = 0;
  }
  BOOL v6 = (v2 & 1) == 0;
  if (v4 != 128) {
    BOOL v6 = 0;
  }
  if (a1 >> 6 == 1) {
    BOOL v6 = v5;
  }
  if (a1 >> 6) {
    return v6;
  }
  else {
    return v3;
  }
}

uint64_t sub_1002C7554()
{
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002C759C(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  uint64_t v8 = v1[6];
  char v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_100052588;
  return sub_1002C6E30(a1, v4, v5, v6, v7, v8);
}

uint64_t sub_1002C7664()
{
  return swift_deallocObject();
}

uint64_t sub_1002C769C()
{
  return sub_1002C7470(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_1002C76A4()
{
  return swift_deallocObject();
}

uint64_t sub_1002C76B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1002C76C4()
{
  return swift_release();
}

unint64_t sub_1002C76CC()
{
  unint64_t result = qword_100806B68;
  if (!qword_100806B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100806B68);
  }
  return result;
}

unint64_t sub_1002C7720()
{
  unint64_t result = qword_100806B70;
  if (!qword_100806B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100806B70);
  }
  return result;
}

uint64_t sub_1002C7774()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

unint64_t sub_1002C77AC@<X0>(void *a1@<X8>)
{
  return sub_1002C4358(*(void *)(v1 + 16), a1);
}

uint64_t sub_1002C77CC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1002C7928(a1);
}

uint64_t sub_1002C77EC()
{
  uint64_t v1 = *(void *)(sub_100010218(&qword_1007F9BE8) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v4 = type metadata accessor for DateInterval();
  uint64_t v5 = *(void *)(v4 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v5 + 48))(v0 + v2, 1, v4)) {
    (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v2, v4);
  }

  return swift_deallocObject();
}

uint64_t sub_1002C7928@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_100010218(&qword_1007F9BE8) - 8);
  return sub_1002B7704(v1 + ((*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80)), a1);
}

uint64_t sub_1002C79C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1002C2A18(*(void *)(v1 + 16), a1);
}

uint64_t sub_1002C79E4()
{
  swift_unknownObjectUnownedDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002C7A1C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1002BFB30(a1, a2, a3, v3);
}

uint64_t sub_1002C7A24(void *a1, uint64_t a2, unsigned char *a3)
{
  return sub_1002C005C(a1, a2, a3);
}

uint64_t sub_1002C7A2C(char *a1, uint64_t a2, unsigned __int8 *a3)
{
  return sub_1002C03BC(a1, a2, a3);
}

uint64_t sub_1002C7A34()
{
  return sub_1002C0A74();
}

uint64_t sub_1002C7A3C()
{
  uint64_t v12 = sub_100010218(&qword_100806BA0);
  uint64_t v1 = *(void *)(v12 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 64);
  uint64_t v11 = sub_100010218(&qword_100806B98);
  uint64_t v4 = *(void *)(v11 - 8);
  unint64_t v5 = (v2 + v3 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = sub_100010218(&qword_100806B90);
  uint64_t v8 = *(void *)(v7 - 8);
  unint64_t v9 = (v5 + v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  (*(void (**)(unint64_t, uint64_t))(v1 + 8))(v0 + v2, v12);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v11);
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v7);

  return swift_deallocObject();
}

uint64_t sub_1002C7C20(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  sub_100010218(&qword_100806BA0);
  sub_100010218(&qword_100806B98);
  sub_100010218(&qword_100806B90);

  return sub_1002C0BCC(a1, a2, a3);
}

uint64_t sub_1002C7D7C()
{
  uint64_t v1 = sub_100010218(&qword_100806B88);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1002C7E10()
{
  return UICollectionView.dequeueConfiguredReusableSupplementary<A>(using:for:)();
}

uint64_t sub_1002C7ED0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1002C7F08()
{
}

uint64_t sub_1002C7F10()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002C7F50(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_10002C194;
  return sub_1002C1B48(a1, v4, v5, v6);
}

id sub_1002C8004(uint64_t a1)
{
  uint64_t v41 = a1;
  uint64_t v2 = type metadata accessor for Calendar.Component();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v28 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = type metadata accessor for Calendar();
  uint64_t v6 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = type metadata accessor for Date();
  uint64_t v42 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100010218((uint64_t *)&unk_1007FC470);
  __chkstk_darwin(v11 - 8);
  unsigned int v38 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&v28 - v14;
  uint64_t v29 = &v1[OBJC_IVAR____TtC7Journal26PrintEntriesViewController_minimumDate];
  uint64_t v16 = v1;
  Date.init()();
  static Calendar.current.getter();
  uint64_t v17 = *(void (**)(void))(v3 + 104);
  unsigned int v36 = enum case for Calendar.Component.month(_:);
  id v35 = (void (*)(char *, void, uint64_t))v17;
  v17(v5);
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  id v18 = *(void (**)(char *, uint64_t))(v3 + 8);
  uint64_t v19 = v2;
  uint64_t v20 = v30;
  uint64_t v37 = v19;
  uint64_t v40 = v3 + 8;
  id v34 = v18;
  ((void (*)(char *))v18)(v5);
  uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v39 = v6 + 8;
  uint64_t v33 = v21;
  v21(v8, v43);
  uint64_t v22 = v42;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v42 + 8);
  v32(v10, v20);
  NSString v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v31(v15, 1, v20) == 1)
  {
    Date.init()();
    sub_10001457C((uint64_t)v15, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v29, v15, v20);
  }
  Date.init()();
  uint64_t v29 = &v16[OBJC_IVAR____TtC7Journal26PrintEntriesViewController_startDate];
  Date.init()();
  static Calendar.current.getter();
  uint64_t v23 = v37;
  v35(v5, v36, v37);
  uint64_t v24 = (uint64_t)v38;
  Calendar.date(byAdding:value:to:wrappingComponents:)();
  v34(v5, v23);
  v33(v8, v43);
  v32(v10, v20);
  if (v31((char *)v24, 1, v20) == 1)
  {
    Date.init()();
    sub_10001457C(v24, (uint64_t *)&unk_1007FC470);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v29, v24, v20);
  }
  Date.init()();
  id v25 = &v16[OBJC_IVAR____TtC7Journal26PrintEntriesViewController_footerText];
  *(void *)id v25 = 0;
  *((void *)v25 + 1) = 0;
  v16[OBJC_IVAR____TtC7Journal26PrintEntriesViewController_printSelection] = 1;
  *(void *)&v16[OBJC_IVAR____TtC7Journal26PrintEntriesViewController____lazy_storage___printBarButtonItem] = 0;
  *(void *)&v16[OBJC_IVAR____TtC7Journal26PrintEntriesViewController____lazy_storage___dataSource] = 0;

  id v26 = (objc_class *)type metadata accessor for PrintEntriesViewController();
  v44.receiver = v16;
  v44.super_class = v26;
  return [super initWithCollectionViewLayout:v41];
}

uint64_t sub_1002C84F0()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002C8530(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_100052588;
  return sub_1002C1324(a1, v4, v5, v6);
}

uint64_t sub_1002C85E4(uint64_t a1, uint64_t a2)
{
  return sub_1002BF1D8(a1, a2);
}

unsigned char *_s7Journal26PrintEntriesViewControllerC14PrintSelectionOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1002C86B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PrintEntriesViewController.DateRangeRowType()
{
  return &type metadata for PrintEntriesViewController.DateRangeRowType;
}

unint64_t sub_1002C86F4()
{
  unint64_t result = qword_100806BE0;
  if (!qword_100806BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100806BE0);
  }
  return result;
}

id sub_1002C8754()
{
  uint64_t v1 = OBJC_IVAR____TtC7Journal27JournalSearchViewController_resultsViewController;
  type metadata accessor for JournalSearchResultsViewController();
  id v2 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  int v3 = v0;
  *(void *)&v0[v1] = [v2 init];
  *(void *)&v3[OBJC_IVAR____TtC7Journal27JournalSearchViewController_searchResultsViewModel] = 0;
  swift_weakInit();

  uint64_t v4 = *(void *)&v0[v1];
  v7.receiver = v3;
  v7.super_class = (Class)type metadata accessor for JournalSearchViewController();
  id v5 = [super initWithSearchResultsController:v4];
  [v5 setHidesNavigationBarDuringPresentation:0];
  [v5 setShowsSearchResultsController:1];

  return v5;
}

uint64_t sub_1002C8854(void *a1)
{
  uint64_t v3 = OBJC_IVAR____TtC7Journal27JournalSearchViewController_resultsViewController;
  type metadata accessor for JournalSearchResultsViewController();
  id v4 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v5 = v1;
  id v6 = [v4 init];

  *(void *)&v1[v3] = v6;
  *(void *)&v5[OBJC_IVAR____TtC7Journal27JournalSearchViewController_searchResultsViewModel] = 0;
  swift_weakInit();

  swift_release();
  swift_weakDestroy();

  type metadata accessor for JournalSearchViewController();
  swift_deallocPartialClassInstance();
  return 0;
}

uint64_t sub_1002C8948()
{
  uint64_t v1 = *(void *)&v0[OBJC_IVAR____TtC7Journal27JournalSearchViewController_resultsViewController];
  *(void *)(v1 + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_delegate + 8) = &off_1007A36C8;
  swift_unknownObjectWeakAssign();
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for JournalSearchViewController();
  [super viewDidLoad];
  *(void *)&v0[OBJC_IVAR____TtC7Journal23JournalSearchController_searchDelegate + 8] = &off_1007A7148;
  swift_unknownObjectWeakAssign();
  id v2 = [v0 searchBar];
  [v2 setTranslucent:0];

  id v3 = [v0 searchBar];
  if (qword_1007F72D8 != -1) {
    swift_once();
  }
  [v3 directionalLayoutMargins];
  [v3 setDirectionalLayoutMargins:];

  id v4 = [v0 searchBar];
  [v4 directionalLayoutMargins];
  [v4 setDirectionalLayoutMargins:];

  *(void *)(v1 + OBJC_IVAR____TtC7Journal34JournalSearchResultsViewController_searchResultsDelegate + 8) = &off_1007A3718;
  return swift_unknownObjectWeakAssign();
}

id sub_1002C8B44()
{
  v20.receiver = v0;
  v20.super_class = (Class)type metadata accessor for JournalSearchViewController();
  [super viewDidLayoutSubviews];
  id result = [v0 view];
  if (result)
  {
    id v2 = result;
    id v3 = [v0 searchBar];
    [v3 bounds];
    CGFloat v5 = v4;
    CGFloat v7 = v6;
    CGFloat v9 = v8;
    CGFloat v11 = v10;

    v21.origin.CGFloat x = v5;
    v21.origin.CGFloat y = v7;
    v21.size.CGFloat width = v9;
    v21.size.CGFloat height = v11;
    double MaxY = CGRectGetMaxY(v21);
    id v13 = [v0 searchBar];
    [v2 convertPoint:v13 fromCoordinateSpace:0.0, MaxY];
    double v15 = v14;

    uint64_t v16 = *(void **)&v0[OBJC_IVAR____TtC7Journal27JournalSearchViewController_resultsViewController];
    id result = [v0 view];
    if (result)
    {
      uint64_t v17 = result;
      [result safeAreaInsets];
      double v19 = v18;

      [v16 additionalSafeAreaInsets];
      return [v16 setAdditionalSafeAreaInsets:v15 - v19];
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1002C8DE4()
{
  swift_release();

  return swift_weakDestroy();
}

id sub_1002C8E34()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for JournalSearchViewController();
  [super dealloc];
}

uint64_t type metadata accessor for JournalSearchViewController()
{
  return self;
}

uint64_t sub_1002C8EE8(uint64_t a1)
{
  uint64_t v2 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v2 - 8);
  double v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v6 = result;
    uint64_t v7 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v4, 1, 1, v7);
    type metadata accessor for MainActor();
    swift_retain();
    swift_retain();
    uint64_t v8 = static MainActor.shared.getter();
    CGFloat v9 = (void *)swift_allocObject();
    void v9[2] = v8;
    v9[3] = &protocol witness table for MainActor;
    void v9[4] = v6;
    v9[5] = a1;
    sub_100328A8C((uint64_t)v4, (uint64_t)&unk_100806C30, (uint64_t)v9);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1002C9028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[5] = a1;
  uint64_t v6 = type metadata accessor for UUID();
  v5[8] = v6;
  v5[9] = *(void *)(v6 - 8);
  v5[10] = swift_task_alloc();
  sub_100010218(&qword_100800950);
  v5[11] = swift_task_alloc();
  type metadata accessor for MainActor();
  v5[12] = static MainActor.shared.getter();
  uint64_t v8 = dispatch thunk of Actor.unownedExecutor.getter();
  v5[13] = v8;
  v5[14] = v7;
  return _swift_task_switch(sub_1002C9150, v8, v7);
}

uint64_t sub_1002C9150()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[7] + OBJC_IVAR____TtCC7Journal10Journaling14EntryViewModel_uuid;
  swift_beginAccess();
  sub_10023D7D4(v4, v1);
  int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2);
  uint64_t v6 = v0[11];
  if (v5)
  {
    sub_1000ADA74(v0[11]);
    uint64_t v7 = 0;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v10 = v0[9];
    uint64_t v9 = v0[10];
    uint64_t v11 = v0[8];
    (*(void (**)(uint64_t, void, uint64_t))(v10 + 16))(v9, v0[11], v11);
    sub_1000ADA74(v6);
    uint64_t v7 = UUID.uuidString.getter();
    uint64_t v8 = v12;
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
  }
  v0[15] = v8;
  id v13 = (void *)swift_task_alloc();
  v0[16] = v13;
  void *v13 = v0;
  v13[1] = sub_100060F64;
  return sub_100057384(v7, v8);
}

void sub_1002C92C8()
{
  id v1 = [v0 searchBar];
  NSString v2 = String._bridgeToObjectiveC()();
  [v1 setText:v2];
}

void sub_1002C9358()
{
  id v1 = [v0 searchBar];
  [v1 resignFirstResponder];
}

uint64_t sub_1002C93B0(uint64_t a1, char a2)
{
  uint64_t v4 = sub_100010218(&qword_1007FA1D0);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v8 = result;
    uint64_t v9 = type metadata accessor for TaskPriority();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v6, 1, 1, v9);
    type metadata accessor for MainActor();
    swift_retain();
    swift_retain();
    uint64_t v10 = static MainActor.shared.getter();
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v10;
    *(void *)(v11 + 24) = &protocol witness table for MainActor;
    *(void *)(v11 + 32) = v8;
    *(void *)(v11 + 40) = a1;
    *(unsigned char *)(v11 + 48) = a2 & 1;
    sub_100328A8C((uint64_t)v6, (uint64_t)&unk_100806C40, v11);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1002C9508()
{
  return sub_1003644F0();
}

void sub_1002C9534()
{
  UIViewController.contentUnavailableConfiguration.setter();
  id v0 = sub_10035FFD8();
  [v0 removeFromSuperview];
}

void sub_1002C95A0()
{
  id v1 = *(void **)(*(void *)(v0 + OBJC_IVAR____TtC7Journal27JournalSearchViewController_resultsViewController)
                + OBJC_IVAR____TtC7Journal36JournalEntryCollectionViewController_entryCollectionView);
  if (!v1) {
    return;
  }
  id v2 = v1;
  id v3 = [v2 visibleCells];
  sub_10001B284(0, (unint64_t *)&qword_10080A0D0);
  unint64_t v4 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_4;
    }
LABEL_18:

    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_18;
  }
LABEL_4:
  if (v5 < 1)
  {
    __break(1u);
  }
  else
  {
    double v14 = v2;
    for (uint64_t i = 0; i != v5; ++i)
    {
      if ((v4 & 0xC000000000000001) != 0) {
        id v8 = (id)specialized _ArrayBuffer._getElementSlowPath(_:)();
      }
      else {
        id v8 = *(id *)(v4 + 8 * i + 32);
      }
      uint64_t v9 = v8;
      type metadata accessor for JournalEntryCollectionViewCell();
      uint64_t v10 = swift_dynamicCastClass();
      if (v10)
      {
        uint64_t v11 = *(void **)(*(void *)(v10 + OBJC_IVAR____TtC7Journal30JournalEntryCollectionViewCell_assetGridView)
                       + OBJC_IVAR____TtC7Journal14CanvasGridView_gridCollectionView);
        if (v11)
        {
          id v12 = [v11 visibleCells:v14];
          unint64_t v13 = static Array._unconditionallyBridgeFromObjectiveC(_:)();

          if (v13 >> 62)
          {
            sub_10001B284(0, (unint64_t *)&qword_100802730);
            swift_bridgeObjectRetain();
            unint64_t v7 = _bridgeCocoaArray<A>(_:)();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            dispatch thunk of __ContiguousArrayStorageBase.staticElementType.getter();
            sub_10001B284(0, (unint64_t *)&qword_100802730);
            unint64_t v7 = v13;
          }
          swift_bridgeObjectRelease();
          sub_1000C89E4(v7);
        }
      }
    }
    swift_bridgeObjectRelease();
  }
}

void *sub_1002C980C(char *a1)
{
  return sub_1001CA324(a1);
}

id sub_1002C9838()
{
  return sub_1001CABB4();
}

uint64_t sub_1002C9868()
{
  return sub_1002C9938();
}

uint64_t sub_1002C9870(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  id v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  *id v8 = v2;
  v8[1] = sub_100052588;
  return sub_1002C9028(a1, v4, v5, v7, v6);
}

uint64_t sub_1002C9930()
{
  return sub_1002C9938();
}

uint64_t sub_1002C9938()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1002C998C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 40);
  char v8 = *(unsigned char *)(v1 + 48);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v9;
  void *v9 = v2;
  v9[1] = sub_10002C194;
  return sub_10025DEF0(a1, v4, v5, v6, v7, v8);
}

id sub_1002C9A54()
{
  v9.receiver = v0;
  v9.super_class = (Class)type metadata accessor for ExportedEntryAdminVC();
  [super viewDidLoad];
  id result = [v0 view];
  if (result)
  {
    uint64_t v2 = result;
    [result addSubview:*(void *)&v0[OBJC_IVAR____TtC7Journal20ExportedEntryAdminVC_webView]];

    sub_10001B284(0, (unint64_t *)&qword_1007FA1B0);
    uint64_t v3 = swift_allocObject();
    *(void *)(v3 + 16) = v0;
    uint64_t v4 = v0;
    uint64_t v5 = (void *)UIAction.init(title:subtitle:image:selectedImage:identifier:discoverabilityTitle:attributes:state:handler:)();
    id v6 = [v4 navigationItem];
    sub_10001B284(0, (unint64_t *)&qword_100803F80);
    id v7 = v5;
    v10.value.super.Class isa = 0;
    v10.is_nil = (char)v5;
    v11.value.super.super.Class isa = 0;
    Class isa = UIBarButtonItem.init(title:image:primaryAction:menu:)((Swift::String_optional)0, v10, v11, v12).super.super.isa;
    [v6 setRightBarButtonItem:isa];

    sub_1001DCF60(0.0);
    return (id)swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1002C9D28()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ExportedEntryAdminVC();
  return [super dealloc];
}

uint64_t type metadata accessor for ExportedEntryAdminVC()
{
  return self;
}

uint64_t sub_1002C9D90()
{
  return swift_deallocObject();
}

void sub_1002C9DC8()
{
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(*(void *)(qword_10083D2F8 + 16) + OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate);
  uint64_t v2 = swift_allocObject();
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0;
  v5[4] = sub_1002D2544;
  v5[5] = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  void v5[2] = sub_10017D530;
  v5[3] = &unk_1007A3AD8;
  uint64_t v3 = _Block_copy(v5);
  id v4 = v1;
  swift_release();
  [v4 performBlock:v3];
  _Block_release(v3);
}

uint64_t sub_1002C9EF4()
{
  uint64_t v0 = type metadata accessor for Logger();
  sub_100035380(v0, qword_100806C78);
  uint64_t v1 = sub_100026A54(v0, (uint64_t)qword_100806C78);
  if (qword_1007F7D28 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_100026A54(v0, (uint64_t)qword_10083EB78);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);

  return v3(v1, v2, v0);
}

char *sub_1002C9FBC(uint64_t a1)
{
  uint64_t v65 = a1;
  uint64_t v2 = type metadata accessor for URL();
  uint64_t v63 = *(void *)(v2 - 8);
  uint64_t v64 = v2;
  __chkstk_darwin(v2);
  id v62 = (uint64_t (*)(__n128))((char *)&v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v4 = type metadata accessor for OS_dispatch_queue.AutoreleaseFrequency();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for OS_dispatch_queue.Attributes();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = type metadata accessor for DispatchQoS();
  __chkstk_darwin(v9 - 8);
  *(_OWORD *)&v1[OBJC_IVAR____TtC7Journal13CloudKitStack_inMemoryMetadata] = xmmword_1006D8770;
  uint64_t v10 = OBJC_IVAR____TtC7Journal13CloudKitStack_zone;
  id v11 = objc_allocWithZone((Class)CKRecordZone);
  UIMenu_optional v12 = v1;
  NSString v13 = String._bridgeToObjectiveC()();
  id v14 = [v11 initWithZoneName:v13];

  *(void *)&v1[v10] = v14;
  uint64_t v15 = &v12[OBJC_IVAR____TtC7Journal13CloudKitStack_subscriptionID];
  *(void *)uint64_t v15 = 0xD000000000000025;
  *((void *)v15 + 1) = 0x80000001006966B0;
  uint64_t v16 = &v12[OBJC_IVAR____TtC7Journal13CloudKitStack_zoneKey];
  strcpy(&v12[OBJC_IVAR____TtC7Journal13CloudKitStack_zoneKey], "isZoneCreated");
  *((_WORD *)v16 + 7) = -4864;
  uint64_t v17 = OBJC_IVAR____TtC7Journal13CloudKitStack_fetchRecordQueue;
  sub_10001B284(0, (unint64_t *)&qword_100805AB0);
  static DispatchQoS.background.getter();
  static OS_dispatch_queue.Attributes.concurrent.getter();
  uint64_t v18 = enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:);
  double v19 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v19(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v4);
  *(void *)&v12[v17] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v20 = OBJC_IVAR____TtC7Journal13CloudKitStack_pathMonitorQueue;
  static DispatchQoS.userInteractive.getter();
  static OS_dispatch_queue.Attributes.concurrent.getter();
  v19(v7, v18, v4);
  uint64_t v21 = v65;
  *(void *)&v12[v20] = OS_dispatch_queue.init(label:qos:attributes:autoreleaseFrequency:target:)();
  uint64_t v22 = OBJC_IVAR____TtC7Journal13CloudKitStack_pathMonitor;
  type metadata accessor for NWPathMonitor();
  swift_allocObject();
  *(void *)&v12[v22] = NWPathMonitor.init()();
  swift_bridgeObjectRetain();
  NSString v23 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v24 = [self containerWithIdentifier:v23];

  uint64_t v25 = OBJC_IVAR____TtC7Journal13CloudKitStack_ckContainer;
  *(void *)&v12[OBJC_IVAR____TtC7Journal13CloudKitStack_ckContainer] = v24;
  if (qword_1007F6D68 != -1) {
    swift_once();
  }
  uint64_t v26 = type metadata accessor for Logger();
  sub_100026A54(v26, (uint64_t)qword_100806C78);
  char v27 = v12;
  uint64_t v28 = Logger.logObject.getter();
  os_log_type_t v29 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v28, v29))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    NSString v31 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v30 = 138412290;
    id v32 = [*(id *)&v12[v25] containerID];
    id v66 = v32;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    *NSString v31 = v32;

    _os_log_impl((void *)&_mh_execute_header, v28, v29, "-> CloudKitStack init for container %@", v30, 0xCu);
    sub_100010218((uint64_t *)&unk_1007FC430);
    swift_arrayDestroy();
    uint64_t v21 = v65;
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    uint64_t v28 = v27;
  }

  uint64_t v33 = (objc_class *)[*(id *)&v12[v25] privateCloudDatabase];
  *(Class *)((char *)&v27->isa + OBJC_IVAR____TtC7Journal13CloudKitStack_ckDatabase) = v33;
  type metadata accessor for AssetsFileManager();
  id v34 = v62;
  sub_1000C534C(v62);
  id v35 = objc_allocWithZone((Class)CKAssetDownloadStagingManager);
  URL._bridgeToObjectiveC()(v36);
  unsigned int v38 = v37;
  uint64_t v39 = (objc_class *)[v35 initWithDirectory:v37];

  (*(void (**)(uint64_t (*)(__n128), uint64_t))(v63 + 8))(v34, v64);
  *(Class *)((char *)&v27->isa + OBJC_IVAR____TtC7Journal13CloudKitStack_assetDownloadStagingManager) = v39;
  [(objc_class *)v39 setFileProtectionType:*(void *)(v21 + 32)];
  [(objc_class *)v39 setKeepInflightFilesOpen:1];
  uint64_t v40 = (objc_class *)[objc_allocWithZone((Class)CKOperationConfiguration) init];
  *(Class *)((char *)&v27->isa + OBJC_IVAR____TtC7Journal13CloudKitStack_assetDownloadConfig) = v40;
  uint64_t v41 = v40;
  uint64_t v42 = v39;
  [(objc_class *)v41 setAssetDownloadStagingManager:v42];

  uint64_t v43 = (objc_class *)type metadata accessor for CloudKitStack();
  v67.receiver = v27;
  v67.super_class = v43;
  id v44 = [super init];
  uint64_t v45 = self;
  id v46 = v44;
  id v47 = [v45 defaultCenter];
  uint64_t v48 = (char *)v46;
  NSString v49 = String._bridgeToObjectiveC()();
  [v47 addObserver:v48 selector:"prioritizeDownloadNotification:" name:v49 object:0];

  swift_retain();
  sub_1001A2550((uint64_t)sub_1002CA874);
  NWPathMonitor.pathUpdateHandler.setter();
  swift_release();
  uint64_t v50 = *(void **)&v48[OBJC_IVAR____TtC7Journal13CloudKitStack_pathMonitorQueue];
  swift_retain();
  id v51 = v50;
  NWPathMonitor.start(queue:)();
  swift_release();

  uint64_t v52 = qword_1007F7E60;
  uint64_t v53 = v48;
  if (v52 != -1) {
    swift_once();
  }
  id v54 = *(id *)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_assetMetadataQueue);
  NSString v55 = String._bridgeToObjectiveC()();
  [v54 addObserver:v53 forKeyPath:v55 options:0 context:0];

  uint64_t v56 = *(void **)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_fileAttachmentsQueue);
  uint64_t v57 = v53;
  id v58 = v56;
  NSString v59 = String._bridgeToObjectiveC()();
  [v58 addObserver:v57 forKeyPath:v59 options:0 context:0];

  swift_release();
  return v57;
}

void sub_1002CA874()
{
  uint64_t v0 = type metadata accessor for NWPath.Status();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v10 - v5;
  NWPath.status.getter();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for NWPath.Status.unsatisfied(_:), v0);
  sub_1002D2898(&qword_100806D48, (void (*)(uint64_t))&type metadata accessor for NWPath.Status);
  char v7 = dispatch thunk of static Equatable.== infix(_:_:)();
  uint64_t v8 = *(void (**)(char *, uint64_t))(v1 + 8);
  v8(v3, v0);
  v8(v6, v0);
  if (v7)
  {
    id v9 = [self defaultCenter];
    if (qword_1007F6E70 != -1) {
      swift_once();
    }
    [v9 postNotificationName:qword_10083D3F8 object:0];
  }
}

id sub_1002CAA64()
{
  id v1 = [self defaultCenter];
  [v1 removeObserver:v0];

  if (qword_1007F7E60 != -1) {
    swift_once();
  }
  id v2 = *(id *)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_assetMetadataQueue);
  NSString v3 = String._bridgeToObjectiveC()();
  [v2 removeObserver:v0 forKeyPath:v3];

  id v4 = *(id *)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_fileAttachmentsQueue);
  NSString v5 = String._bridgeToObjectiveC()();
  [v4 removeObserver:v0 forKeyPath:v5];

  v7.receiver = v0;
  v7.super_class = (Class)type metadata accessor for CloudKitStack();
  return [super dealloc];
}

void sub_1002CADF8(uint64_t a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = type metadata accessor for Notification();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&aBlock - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  id v9 = (char *)&aBlock - v8;
  __chkstk_darwin(v10);
  UIMenu_optional v12 = (char *)&aBlock - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)&aBlock - v14;
  uint64_t v16 = Notification.userInfo.getter();
  if (!v16)
  {
    if (qword_1007F6D68 != -1) {
      swift_once();
    }
    uint64_t v24 = type metadata accessor for Logger();
    sub_100026A54(v24, (uint64_t)qword_100806C78);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v26 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v26))
    {
      char v27 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)char v27 = 136315138;
      sub_1002D2898((unint64_t *)&unk_100803940, (void (*)(uint64_t))&type metadata accessor for Notification);
      uint64_t v28 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&long long v92 = sub_10011EA98(v28, v29, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      _os_log_impl((void *)&_mh_execute_header, v25, v26, "(prioritizeDownloadNotification) unable to get userInfo from notification:%s", v27, 0xCu);
      swift_arrayDestroy();
LABEL_52:
      swift_slowDealloc();
      swift_slowDealloc();
      goto LABEL_54;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    goto LABEL_54;
  }
  uint64_t v17 = v16;
  strcpy((char *)v91, "downloadIDKey");
  HIWORD(v91[1]) = -4864;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v17 + 16) && (unint64_t v18 = sub_10001B738((uint64_t)&aBlock), (v19 & 1) != 0))
  {
    sub_10001B648(*(void *)(v17 + 56) + 32 * v18, (uint64_t)&v92);
  }
  else
  {
    long long v92 = 0u;
    long long v93 = 0u;
  }
  sub_10001DF0C((uint64_t)&aBlock);
  if (!*((void *)&v93 + 1))
  {
    swift_bridgeObjectRelease();
    sub_10001457C((uint64_t)&v92, &qword_1007FAD50);
LABEL_17:
    if (qword_1007F6D68 != -1) {
      swift_once();
    }
    uint64_t v30 = type metadata accessor for Logger();
    sub_100026A54(v30, (uint64_t)qword_100806C78);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v9, a1, v3);
    NSString v31 = Logger.logObject.getter();
    os_log_type_t v32 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 136315138;
      sub_1002D2898((unint64_t *)&unk_100803940, (void (*)(uint64_t))&type metadata accessor for Notification);
      uint64_t v34 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&long long v92 = sub_10011EA98(v34, v35, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      _os_log_impl((void *)&_mh_execute_header, v31, v32, "(prioritizeDownloadNotification) unable to get id from notification:%s", v33, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    }

    return;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  id v21 = (id)v91[0];
  uint64_t isEscapingClosureAtFileLocation = v91[1];
  v91[0] = 0xD000000000000013;
  v91[1] = 0x8000000100696650;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v17 + 16) && (unint64_t v22 = sub_10001B738((uint64_t)&aBlock), (v23 & 1) != 0))
  {
    sub_10001B648(*(void *)(v17 + 56) + 32 * v22, (uint64_t)&v92);
  }
  else
  {
    long long v92 = 0u;
    long long v93 = 0u;
  }
  sub_10001DF0C((uint64_t)&aBlock);
  if (!*((void *)&v93 + 1))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_10001457C((uint64_t)&v92, &qword_1007FAD50);
LABEL_32:
    if (qword_1007F6D68 != -1) {
      swift_once();
    }
    uint64_t v39 = type metadata accessor for Logger();
    sub_100026A54(v39, (uint64_t)qword_100806C78);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v12, a1, v3);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (os_log_type_enabled(v25, v40))
    {
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t aBlock = swift_slowAlloc();
      *(_DWORD *)uint64_t v41 = 136315138;
      sub_1002D2898((unint64_t *)&unk_100803940, (void (*)(uint64_t))&type metadata accessor for Notification);
      uint64_t v42 = dispatch thunk of CustomStringConvertible.description.getter();
      *(void *)&long long v92 = sub_10011EA98(v42, v43, &aBlock);
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v3);
      id v44 = "(prioritizeDownloadNotification) unable to get priority from notification:%s";
LABEL_51:
      _os_log_impl((void *)&_mh_execute_header, v25, v40, v44, v41, 0xCu);
      swift_arrayDestroy();
      goto LABEL_52;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v12, v3);
LABEL_54:

    return;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_32;
  }
  char v36 = v91[0];
  v91[0] = 0x64616F6C6E776F64;
  v91[1] = 0xEF79654B65707954;
  AnyHashable.init<A>(_:)();
  if (*(void *)(v17 + 16) && (unint64_t v37 = sub_10001B738((uint64_t)&aBlock), (v38 & 1) != 0))
  {
    sub_10001B648(*(void *)(v17 + 56) + 32 * v37, (uint64_t)&v92);
  }
  else
  {
    long long v92 = 0u;
    long long v93 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_10001DF0C((uint64_t)&aBlock);
  if (!*((void *)&v93 + 1))
  {
    swift_bridgeObjectRelease();
    sub_10001457C((uint64_t)&v92, &qword_1007FAD50);
LABEL_47:
    if (qword_1007F6D68 != -1) {
      swift_once();
    }
    uint64_t v46 = type metadata accessor for Logger();
    sub_100026A54(v46, (uint64_t)qword_100806C78);
    (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v15, a1, v3);
    uint64_t v25 = Logger.logObject.getter();
    os_log_type_t v40 = static os_log_type_t.error.getter();
    if (!os_log_type_enabled(v25, v40))
    {
      (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);
      goto LABEL_54;
    }
    uint64_t v41 = (uint8_t *)swift_slowAlloc();
    uint64_t aBlock = swift_slowAlloc();
    *(_DWORD *)uint64_t v41 = 136315138;
    sub_1002D2898((unint64_t *)&unk_100803940, (void (*)(uint64_t))&type metadata accessor for Notification);
    uint64_t v47 = dispatch thunk of CustomStringConvertible.description.getter();
    *(void *)&long long v92 = sub_10011EA98(v47, v48, &aBlock);
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v15, v3);
    id v44 = "(prioritizeDownloadNotification) unable to get type from notification:%s";
    goto LABEL_51;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
    swift_bridgeObjectRelease();
    goto LABEL_47;
  }
  BOOL v45 = qword_1007F7E60 == -1;
  if (v91[0])
  {
    if (v36)
    {
      if (qword_1007F7E60 != -1) {
        swift_once();
      }
      goto LABEL_59;
    }
    if (qword_1007F7E60 != -1) {
      swift_once();
    }
    uint64_t v56 = *(void **)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_mapTableAssetMetadataQueue);
    id v57 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain();
    id v58 = v56;
    NSString v59 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v60 = [v57 initWithString:v59];

    id v54 = [v58 objectForKey:v60];
    if (v54)
    {
      if (![v54 isCancelled]) {
        goto LABEL_84;
      }
    }
    if (qword_1007F6D38 != -1) {
      swift_once();
    }
    uint64_t v61 = *(char **)(qword_10083D2F8 + 16);
    id v62 = *(id *)&v61[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate];
    uint64_t v63 = v61;
    uint64_t v64 = (void *)sub_1004ECAB0((uint64_t)v21, isEscapingClosureAtFileLocation, v62);

    swift_bridgeObjectRelease();
    if (!v64) {
      goto LABEL_85;
    }
    uint64_t v65 = swift_allocObject();
    *(void *)(v65 + 16) = v64;
    *(void *)(v65 + 24) = ObjectType;
    *(void *)(v65 + 32) = v62;
    *(void *)(v65 + 40) = 8;
    *(unsigned char *)(v65 + 48) = 0;
    uint64_t v66 = swift_allocObject();
    *(void *)(v66 + 16) = sub_1002D1C38;
    *(void *)(v66 + 24) = v65;
    uint64_t v89 = sub_10001AC84;
    uint64_t v90 = v66;
    uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
    uint64_t v86 = 1107296256;
    BOOL v87 = sub_1003F44E4;
    unint64_t v88 = &unk_1007A3948;
    objc_super v67 = _Block_copy(&aBlock);
    uint64_t ObjectType = v90;
    id v68 = v62;
    id v21 = v64;
    swift_retain();
    swift_release();
    [v68 performBlockAndWait:v67];
    _Block_release(v67);
    uint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();

    swift_release();
    swift_release();
    if ((isEscapingClosureAtFileLocation & 1) == 0) {
      return;
    }
    __break(1u);
  }
  else if (v36)
  {
    if (qword_1007F7E60 != -1) {
      swift_once();
    }
LABEL_59:
    NSString v49 = *(void **)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_mapTableAssetMetadataQueue);
    id v50 = objc_allocWithZone((Class)NSString);
    swift_bridgeObjectRetain();
    id v51 = v49;
    NSString v52 = String._bridgeToObjectiveC()();
    swift_bridgeObjectRelease();
    id v53 = [v50 initWithString:v52];

    id v54 = [v51 objectForKey:v53];
    if (v54)
    {
      unsigned __int8 v55 = [v54 isCancelled];
      swift_bridgeObjectRelease();
      if ((v55 & 1) == 0) {
        [v54 setQueuePriority:-4];
      }
      goto LABEL_62;
    }
    goto LABEL_83;
  }
  if (!v45) {
    swift_once();
  }
  NSString v69 = *(void **)(qword_100812658 + OBJC_IVAR____TtC7Journal17OperationsManager_mapTableAssetMetadataQueue);
  id v70 = objc_allocWithZone((Class)NSString);
  id v71 = v69;
  swift_bridgeObjectRetain();
  NSString v72 = String._bridgeToObjectiveC()();
  swift_bridgeObjectRelease();
  id v73 = [v70 initWithString:v72];

  id v54 = [v71 objectForKey:v73];
  if (v54)
  {
    if ([v54 isCancelled])
    {

      goto LABEL_78;
    }
LABEL_84:
    swift_bridgeObjectRelease();
    [v54 setQueuePriority:8];
LABEL_62:

    return;
  }
LABEL_78:
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  uint64_t v74 = *(char **)(qword_10083D2F8 + 16);
  id v62 = *(id *)&v74[OBJC_IVAR____TtC7Journal13CoreDataStack_contextPrivate];
  uint64_t v75 = v74;
  os_log_type_t v76 = (void *)sub_10052C08C((uint64_t)v21, isEscapingClosureAtFileLocation, v62);

  swift_bridgeObjectRelease();
  if (!v76)
  {
LABEL_85:

    return;
  }
  int v77 = *(void **)(*(void *)(qword_10083D2F8 + 24) + OBJC_IVAR____TtC7Journal13CloudKitStack_assetDownloadConfig);
  uint64_t v78 = swift_allocObject();
  *(void *)(v78 + 16) = v76;
  *(void *)(v78 + 24) = ObjectType;
  *(void *)(v78 + 32) = v77;
  *(void *)(v78 + 40) = v62;
  *(void *)(v78 + 48) = 8;
  *(unsigned char *)(v78 + 56) = 0;
  uint64_t v79 = swift_allocObject();
  *(void *)(v79 + 16) = sub_1002D1C50;
  *(void *)(v79 + 24) = v78;
  uint64_t v89 = sub_10001B3DC;
  uint64_t v90 = v79;
  uint64_t aBlock = (uint64_t)_NSConcreteStackBlock;
  uint64_t v86 = 1107296256;
  BOOL v87 = sub_1003F44E4;
  unint64_t v88 = &unk_1007A39C0;
  uint64_t v80 = _Block_copy(&aBlock);
  id v81 = v77;
  id v82 = v62;
  id v83 = v81;
  id v84 = v76;
  swift_retain();
  swift_release();
  [v82 performBlockAndWait:v80];
  _Block_release(v80);
  LOBYTE(v80) = swift_isEscapingClosureAtFileLocation();

  swift_release();
  swift_release();
  if (v80)
  {
    __break(1u);
LABEL_83:
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_1002CC06C(void *a1, uint64_t (*a2)(uint64_t a1))
{
  if (qword_1007F6D68 == -1) {
    goto LABEL_2;
  }
LABEL_48:
  swift_once();
LABEL_2:
  uint64_t v3 = type metadata accessor for Logger();
  uint64_t v4 = sub_100026A54(v3, (uint64_t)qword_100806C78);
  uint64_t v5 = Logger.logObject.getter();
  os_log_type_t v6 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v7 = 0;
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "(downloadCloudKitAssetsIfNeeded) ------------------------", v7, 2u);
    swift_slowDealloc();
  }

  sub_1005B6914();
  unint64_t v9 = (unint64_t)v8;
  uint64_t v10 = Logger.logObject.getter();
  os_log_type_t v11 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v10, v11))
  {
    UIMenu_optional v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)UIMenu_optional v12 = 134217984;
    uint64_t aBlock = (void **)v9;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "(downloadCloudKitAssetsIfNeeded) attachments OPS: %ld", v12, 0xCu);
    swift_slowDealloc();
  }

  sub_1005B6920();
  uint64_t v14 = v13;
  uint64_t v15 = Logger.logObject.getter();
  os_log_type_t v16 = static os_log_type_t.default.getter();
  if (os_log_type_enabled(v15, v16))
  {
    id v2 = v14;
    uint64_t v17 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v17 = 134217984;
    uint64_t aBlock = (void **)v14;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    _os_log_impl((void *)&_mh_execute_header, v15, v16, "(downloadCloudKitAssetsIfNeeded) assets OPS: %ld", v17, 0xCu);
    swift_slowDealloc();
  }

  if (v9)
  {
    if (v14) {
      return sub_1002D1C64();
    }
    goto LABEL_28;
  }
  uint64_t v46 = v14;
  if (qword_1007F6D38 != -1) {
    swift_once();
  }
  id v18 = *(id *)(qword_10083D2F8 + 16);
  unint64_t v9 = sub_10052E220(a1);

  swift_bridgeObjectRetain_n();
  char v19 = Logger.logObject.getter();
  os_log_type_t v20 = static os_log_type_t.default.getter();
  uint64_t v21 = v9 >> 62;
  if (os_log_type_enabled(v19, v20))
  {
    id v2 = (uint64_t (**)(uint64_t))swift_slowAlloc();
    *(_DWORD *)id v2 = 134217984;
    if (!v21)
    {
      uint64_t v22 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      goto LABEL_16;
    }
    goto LABEL_55;
  }

  swift_bridgeObjectRelease_n();
  while (1)
  {
    uint64_t v47 = v4;
    if (v21)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
      swift_bridgeObjectRelease();
      if (v21)
      {
LABEL_20:
        if (v21 >= 1)
        {
          uint64_t v23 = 0;
          unint64_t v49 = v9 & 0xC000000000000001;
          unint64_t v48 = (uint8_t *)v9;
          while (1)
          {
            uint64_t v24 = v49
                ? (uint64_t (*)(uint64_t))specialized _ArrayBuffer._getElementSlowPath(_:)()
                : (uint64_t (*)(uint64_t))*(id *)(v9 + 8 * v23 + 32);
            uint64_t v25 = v24;
            os_log_type_t v26 = *(uint64_t (**)(uint64_t))(*(void *)(qword_10083D2F8 + 24)
                                                    + OBJC_IVAR____TtC7Journal13CloudKitStack_assetDownloadConfig);
            id v2 = (uint64_t (**)(uint64_t))swift_allocObject();
            v2[2] = v25;
            v2[3] = a2;
            v2[4] = v26;
            v2[5] = (uint64_t (*)(uint64_t))a1;
            v2[6] = 0;
            *((unsigned char *)v2 + 56) = 1;
            uint64_t v27 = swift_allocObject();
            *(void *)(v27 + 16) = sub_1002D1C50;
            *(void *)(v27 + 24) = v2;
            id v57 = sub_10001B3DC;
            uint64_t v58 = v27;
            uint64_t aBlock = _NSConcreteStackBlock;
            uint64_t v54 = 1107296256;
            unsigned __int8 v55 = sub_1003F44E4;
            uint64_t v56 = &unk_1007A3BC8;
            uint64_t v28 = _Block_copy(&aBlock);
            unint64_t v29 = v26;
            uint64_t v30 = v25;
            id v31 = a1;
            swift_retain();
            swift_release();
            [v31 performBlockAndWait:v28];
            _Block_release(v28);
            LOBYTE(v31) = swift_isEscapingClosureAtFileLocation();

            swift_release();
            swift_release();
            if (v31) {
              break;
            }
            ++v23;
            unint64_t v9 = (unint64_t)v48;
            if (v21 == v23) {
              goto LABEL_27;
            }
          }
          __break(1u);
          goto LABEL_47;
        }
        __break(1u);
        goto LABEL_54;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v21) {
        goto LABEL_20;
      }
    }
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v4 = v47;
    if (v46) {
      return sub_1002D1C64();
    }
LABEL_28:
    if (qword_1007F6D38 != -1) {
      swift_once();
    }
    id v32 = *(id *)(qword_10083D2F8 + 16);
    unint64_t v33 = sub_1004F2C84(a1);

    swift_bridgeObjectRetain_n();
    char v19 = Logger.logObject.getter();
    os_log_type_t v20 = static os_log_type_t.default.getter();
    unint64_t v34 = v33 >> 62;
    if (os_log_type_enabled(v19, v20))
    {
      unint64_t v9 = swift_slowAlloc();
      *(_DWORD *)unint64_t v9 = 134217984;
      if (v34)
      {
        swift_bridgeObjectRetain();
        uint64_t v35 = _CocoaArrayWrapper.endIndex.getter();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v35 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      uint64_t aBlock = (void **)v35;
      UnsafeMutableRawBufferPointer.copyMemory(from:)();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v19, v20, "(downloadCloudKitAssetsIfNeeded) assets MOS: %ld", (uint8_t *)v9, 0xCu);
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    if (v34) {
      break;
    }
    uint64_t v21 = *(void *)((v33 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v21) {
      goto LABEL_44;
    }
LABEL_37:
    if (v21 >= 1)
    {
      uint64_t v36 = 0;
      unint64_t v50 = v33 & 0xC000000000000001;
      id v2 = &v55;
      unint64_t v37 = v33;
      while (1)
      {
        id v38 = v50 ? (id)specialized _ArrayBuffer._getElementSlowPath(_:)() : *(id *)(v33 + 8 * v36 + 32);
        uint64_t v39 = v38;
        uint64_t v40 = swift_allocObject();
        *(void *)(v40 + 16) = v39;
        *(void *)(v40 + 24) = a2;
        *(void *)(v40 + 32) = a1;
        *(void *)(v40 + 40) = 0;
        *(unsigned char *)(v40 + 48) = 1;
        uint64_t v41 = swift_allocObject();
        *(void *)(v41 + 16) = sub_1002D1C38;
        *(void *)(v41 + 24) = v40;
        id v57 = sub_10001B3DC;
        uint64_t v58 = v41;
        uint64_t aBlock = _NSConcreteStackBlock;
        uint64_t v54 = 1107296256;
        unsigned __int8 v55 = sub_1003F44E4;
        uint64_t v56 = &unk_1007A3B50;
        uint64_t v42 = _Block_copy(&aBlock);
        id v43 = a1;
        id v44 = v39;
        swift_retain();
        swift_release();
        [v43 performBlockAndWait:v42];
        _Block_release(v42);
        LOBYTE(v42) = swift_isEscapingClosureAtFileLocation();

        swift_release();
        swift_release();
        if (v42) {
          break;
        }
        ++v36;
        unint64_t v33 = v37;
        if (v21 == v36) {
          goto LABEL_44;
        }
      }
LABEL_47:
      __break(1u);
      goto LABEL_48;
    }
LABEL_54:
    __break(1u);
LABEL_55:
    swift_bridgeObjectRetain();
    uint64_t v22 = _CocoaArrayWrapper.endIndex.getter();
    swift_bridgeObjectRelease();
LABEL_16:
    swift_bridgeObjectRelease();
    uint64_t aBlock = (void **)v22;
    UnsafeMutableRawBufferPointer.copyMemory(from:)();
    swift_bridgeObjectRelease();
    _os_log_impl((void *)&_mh_execute_header, v19, v20, "(downloadCloudKitAssetsIfNeeded) attachments MOS: %ld", (uint8_t *)v2, 0xCu);
    swift_slowDealloc();
  }
  swift_bridgeObjectRetain();
  uint64_t v21 = _CocoaArrayWrapper.endIndex.getter();
  swift_bridgeObjectRelease();
  if (v21) {
    goto LABEL_37;
  }
LABEL_44:
  swift_bridgeObjectRelease();
  return sub_1002D1C64();
}